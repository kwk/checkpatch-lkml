WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
> > This patch adds a new function to firmware_calss.c request_firmware_nowait_nohotplug .

WARNING:TYPO_SPELLING: 'aplications' may be misspelled - perhaps 'applications'?
#52: FILE: Documentation/dell_rbu.txt:7:
+It does not cover the support needed from aplications to enable the BIOS to
                                           ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#75: FILE: Documentation/dell_rbu.txt:30:
+/sys/class/firmware/dell_rbu/loading $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#82: FILE: Documentation/dell_rbu.txt:37:
+Most of the Dell systems support a monolithic update where the BIOS image is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#83: FILE: Documentation/dell_rbu.txt:38:
+copied to a single contiguous block of physical memory. $

WARNING:TYPO_SPELLING: 'chuks' may be misspelled - perhaps 'chunks'?
#84: FILE: Documentation/dell_rbu.txt:39:
+In case of packet mechanism the single memory can be broken in smaller chuks
                                                                        ^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#90: FILE: Documentation/dell_rbu.txt:45:
+echo "packet" > /sys/devices/platform/dell_rbu/image_type $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#98: FILE: Documentation/dell_rbu.txt:53:
+done. $

WARNING:TYPO_SPELLING: 'drivr' may be misspelled - perhaps 'driver'?
#101: FILE: Documentation/dell_rbu.txt:56:
+Until this step is completed the drivr cannot be unloaded.
                                  ^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#104: FILE: Documentation/dell_rbu.txt:59:
+read back the image downloaded. This is useful in case of packet update $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#105: FILE: Documentation/dell_rbu.txt:60:
+mechanism where the above steps 1,2,3 will repeated for every packet. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#106: FILE: Documentation/dell_rbu.txt:61:
+By reading the /sys/devices/platform/dell_rbu/data file all packet data $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#107: FILE: Documentation/dell_rbu.txt:62:
+downloaded can be verified in a single file. $

WARNING:TYPO_SPELLING: 'an user' may be misspelled - perhaps 'a user'?
#113: FILE: Documentation/dell_rbu.txt:68:
+Also after updating the BIOS image an user mdoe application neeeds to execute
                                    ^^^^^^^

WARNING:TYPO_SPELLING: 'neeeds' may be misspelled - perhaps 'needs'?
#113: FILE: Documentation/dell_rbu.txt:68:
+Also after updating the BIOS image an user mdoe application neeeds to execute
                                                             ^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#122: FILE: drivers/firmware/dell_rbu.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#130: FILE: drivers/firmware/dell_rbu.c:9:
+ * Remote BIOS Update (rbu) driver is used for updating DELL BIOS by $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#131: FILE: drivers/firmware/dell_rbu.c:10:
+ * creating entries in the /sys file systems on Linux 2.6 and higher $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#132: FILE: drivers/firmware/dell_rbu.c:11:
+ * kernels. The driver supports two mechanism to update the BIOS namely $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#134: FILE: drivers/firmware/dell_rbu.c:13:
+ * application to set the CMOS bit indicating the BIOS to update itself $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#138: FILE: drivers/firmware/dell_rbu.c:17:
+ * This driver writes the incoming data in a monolithic image by allocating $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#139: FILE: drivers/firmware/dell_rbu.c:18:
+ * contiguous physical pages large enough to accommodate the incoming BIOS $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#140: FILE: drivers/firmware/dell_rbu.c:19:
+ * image size.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#143: FILE: drivers/firmware/dell_rbu.c:22:
+ * The driver writes the incoming packet image by allocating a new packet $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#144: FILE: drivers/firmware/dell_rbu.c:23:
+ * on every time the packet data is written. This driver requires an $

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#182: FILE: drivers/firmware/dell_rbu.c:61:
+	spinlock_t lock;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#190: FILE: drivers/firmware/dell_rbu.c:69:
+module_param_string(image_type, image_type, sizeof (image_type), 0);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'fill_last_packet', this function's name, in a string
#223: FILE: drivers/firmware/dell_rbu.c:102:
+	pr_debug("fill_last_packet: entry \n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#223: FILE: drivers/firmware/dell_rbu.c:102:
+	pr_debug("fill_last_packet: entry \n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'fill_last_packet', this function's name, in a string
#226: FILE: drivers/firmware/dell_rbu.c:105:
+		pr_debug("fill_last_packet: num_packets=0\n");

WARNING:SPLIT_STRING: quoted string split across lines
#238: FILE: drivers/firmware/dell_rbu.c:117:
+		pr_debug("dell_rbu:%s: packet size data "
+			"overrun\n", __FUNCTION__);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#238: FILE: drivers/firmware/dell_rbu.c:117:
+			"overrun\n", __FUNCTION__);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'fill_last_packet', this function's name, in a string
#242: FILE: drivers/firmware/dell_rbu.c:121:
+	pr_debug("fill_last_packet : buffer = %p\n", packet->data);

CHECK:BRACES: braces {} should be used on all arms of this statement
#246: FILE: drivers/firmware/dell_rbu.c:125:
+	if ((rbu_data.packet_write_count + length) == rbu_data.packetsize) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#252: FILE: drivers/firmware/dell_rbu.c:131:
+	} else

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'fill_last_packet', this function's name, in a string
#255: FILE: drivers/firmware/dell_rbu.c:134:
+	pr_debug("fill_last_packet: exit \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#255: FILE: drivers/firmware/dell_rbu.c:134:
+	pr_debug("fill_last_packet: exit \n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'create_packet', this function's name, in a string
#265: FILE: drivers/firmware/dell_rbu.c:144:
+	pr_debug("create_packet: entry \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#265: FILE: drivers/firmware/dell_rbu.c:144:
+	pr_debug("create_packet: entry \n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'create_packet', this function's name, in a string
#268: FILE: drivers/firmware/dell_rbu.c:147:
+		pr_debug("create_packet: packetsize not specified\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#272: FILE: drivers/firmware/dell_rbu.c:151:
+	newpacket = kmalloc(sizeof (struct packet_data), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*newpacket)...) over kmalloc(sizeof (struct packet_data)...)
#272: FILE: drivers/firmware/dell_rbu.c:151:
+	newpacket = kmalloc(sizeof (struct packet_data), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#274: FILE: drivers/firmware/dell_rbu.c:153:
+		printk(KERN_WARNING

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#274: FILE: drivers/firmware/dell_rbu.c:153:
+	if (!newpacket) {
+		printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#276: FILE: drivers/firmware/dell_rbu.c:155:
+			"dell_rbu:%s: failed to allocate new "
+			"packet\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#276: FILE: drivers/firmware/dell_rbu.c:155:
+			"packet\n", __FUNCTION__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#282: FILE: drivers/firmware/dell_rbu.c:161:
+^I * there is no upper limit on memory $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#283: FILE: drivers/firmware/dell_rbu.c:162:
+^I * address for packetized mechanism $

CHECK:SPACING: No space is necessary after a cast
#285: FILE: drivers/firmware/dell_rbu.c:164:
+	newpacket->data = (unsigned char *) __get_free_pages(GFP_KERNEL,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'create_packet', this function's name, in a string
#288: FILE: drivers/firmware/dell_rbu.c:167:
+	pr_debug("create_packet: newpacket %p\n", newpacket->data);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#291: FILE: drivers/firmware/dell_rbu.c:170:
+		printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#293: FILE: drivers/firmware/dell_rbu.c:172:
+			"dell_rbu:%s: failed to allocate new "
+			"packet\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#293: FILE: drivers/firmware/dell_rbu.c:172:
+			"packet\n", __FUNCTION__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#301: FILE: drivers/firmware/dell_rbu.c:180:
+^I * initialize the newly created packet headers $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#306: FILE: drivers/firmware/dell_rbu.c:185:
+^I * packets have fixed size $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'create_packet', this function's name, in a string
#310: FILE: drivers/firmware/dell_rbu.c:189:
+	pr_debug("create_packet: exit \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#310: FILE: drivers/firmware/dell_rbu.c:189:
+	pr_debug("create_packet: exit \n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#321: FILE: drivers/firmware/dell_rbu.c:200:
+		if ((rc = create_packet(length)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#324: FILE: drivers/firmware/dell_rbu.c:203:
+	if ((rc = fill_last_packet(data, length)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#332: FILE: drivers/firmware/dell_rbu.c:211:
+do_packet_read(char *data, struct list_head *ptemp_list,
+	int length, int bytes_read, int *list_read_count)

CHECK:SPACING: No space is necessary after a cast
#346: FILE: drivers/firmware/dell_rbu.c:225:
+		ptemp_buf = (u8 *) newpacket->data + j;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#347: FILE: drivers/firmware/dell_rbu.c:226:
+^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#348: FILE: drivers/firmware/dell_rbu.c:227:
+^I^I * check if there is enough room in $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#349: FILE: drivers/firmware/dell_rbu.c:228:
+^I^I * * the incoming buffer $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#352: FILE: drivers/firmware/dell_rbu.c:231:
+^I^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#353: FILE: drivers/firmware/dell_rbu.c:232:
+^I^I^I * copy what ever is there in this $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#354: FILE: drivers/firmware/dell_rbu.c:233:
+^I^I^I * * packet and move on $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#366: FILE: drivers/firmware/dell_rbu.c:245:
+packet_read_list(char *data, size_t * pread_length)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#376: FILE: drivers/firmware/dell_rbu.c:255:
+	if (0 == rbu_data.num_packets)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#385: FILE: drivers/firmware/dell_rbu.c:264:
+		bytes_copied = do_packet_read(pdest, ptemp_list,
+			remaining_bytes, bytes_read, &temp_count);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#419: FILE: drivers/firmware/dell_rbu.c:298:
+^I^I * zero out the RBU packet memory before freeing $

CHECK:SPACING: No space is necessary after a cast
#423: FILE: drivers/firmware/dell_rbu.c:302:
+		free_pages((unsigned long) newpacket->data,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#424: FILE: drivers/firmware/dell_rbu.c:303:
+		free_pages((unsigned long) newpacket->data,
+			newpacket->ordernum);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#435: FILE: drivers/firmware/dell_rbu.c:314:
+ * Always called with lock held and returned with lock held $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#447: FILE: drivers/firmware/dell_rbu.c:326:
+	memset(rbu_data.image_update_buffer, 0,
+		rbu_data.image_update_buffer_size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#449: FILE: drivers/firmware/dell_rbu.c:328:
+	dma_free_coherent(NULL, rbu_data.bios_image_size,
+		rbu_data.image_update_buffer, dell_rbu_dmaaddr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#452: FILE: drivers/firmware/dell_rbu.c:331:
+^I * Re-initialize the rbu_data variables after a free $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#463: FILE: drivers/firmware/dell_rbu.c:342:
+ * size is checked to see if more data is required than the existing size. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#467: FILE: drivers/firmware/dell_rbu.c:346:
+ * called with lock held and returns with lock held. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#476: FILE: drivers/firmware/dell_rbu.c:355:
+^I * check if the buffer of sufficient size has been $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#477: FILE: drivers/firmware/dell_rbu.c:356:
+^I * already allocated $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#481: FILE: drivers/firmware/dell_rbu.c:360:
+^I^I * check for corruption $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'size != 0'
#483: FILE: drivers/firmware/dell_rbu.c:362:
+		if ((size != 0) && (rbu_data.image_update_buffer == NULL)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rbu_data.image_update_buffer == NULL'
#483: FILE: drivers/firmware/dell_rbu.c:362:
+		if ((size != 0) && (rbu_data.image_update_buffer == NULL)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rbu_data.image_update_buffer"
#483: FILE: drivers/firmware/dell_rbu.c:362:
+		if ((size != 0) && (rbu_data.image_update_buffer == NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#484: FILE: drivers/firmware/dell_rbu.c:363:
+			printk(KERN_ERR "dell_rbu:%s: corruption "

WARNING:SPLIT_STRING: quoted string split across lines
#485: FILE: drivers/firmware/dell_rbu.c:364:
+			printk(KERN_ERR "dell_rbu:%s: corruption "
+				"check failed\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#485: FILE: drivers/firmware/dell_rbu.c:364:
+				"check failed\n", __FUNCTION__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#489: FILE: drivers/firmware/dell_rbu.c:368:
+^I^I * we have a valid pre-allocated buffer with $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#490: FILE: drivers/firmware/dell_rbu.c:369:
+^I^I * sufficient size $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#496: FILE: drivers/firmware/dell_rbu.c:375:
+^I * free any previously allocated buffer $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#503: FILE: drivers/firmware/dell_rbu.c:382:
+	image_update_buffer = dma_alloc_coherent(NULL, size,
+		&dell_rbu_dmaaddr, GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "image_update_buffer"
#507: FILE: drivers/firmware/dell_rbu.c:386:
+	if (image_update_buffer != NULL) {

WARNING:SPLIT_STRING: quoted string split across lines
#515: FILE: drivers/firmware/dell_rbu.c:394:
+		pr_debug("Not enough memory for image update:"
+			"size = %ld\n", size);

CHECK:CAMELCASE: Avoid CamelCase: <ptempBuf>
#528: FILE: drivers/firmware/dell_rbu.c:407:
+	char *ptempBuf = buffer;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_packet_data', this function's name, in a string
#533: FILE: drivers/firmware/dell_rbu.c:412:
+		pr_debug("read_packet_data: no packets written\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#542: FILE: drivers/firmware/dell_rbu.c:421:
+		printk(KERN_WARNING "dell_rbu:read_packet_data: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_packet_data', this function's name, in a string
#542: FILE: drivers/firmware/dell_rbu.c:421:
+		printk(KERN_WARNING "dell_rbu:read_packet_data: "

WARNING:SPLIT_STRING: quoted string split across lines
#543: FILE: drivers/firmware/dell_rbu.c:422:
+		printk(KERN_WARNING "dell_rbu:read_packet_data: "
+			"data underrun\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#550: FILE: drivers/firmware/dell_rbu.c:429:
+	if ((retval = packet_read_list(ptempBuf, &data_length)) < 0)

CHECK:BRACES: braces {} should be used on all arms of this statement
#553: FILE: drivers/firmware/dell_rbu.c:432:
+	if ((pos + count) > imagesize) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#557: FILE: drivers/firmware/dell_rbu.c:436:
+	} else

WARNING:INDENTED_LABEL: labels should not be indented
#560: FILE: drivers/firmware/dell_rbu.c:439:
+      read_rbu_data_exit:

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rbu_data.image_update_buffer == NULL'
#573: FILE: drivers/firmware/dell_rbu.c:452:
+	if ((rbu_data.image_update_buffer == NULL) ||
+		(rbu_data.bios_image_size == 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rbu_data.bios_image_size == 0'
#573: FILE: drivers/firmware/dell_rbu.c:452:
+	if ((rbu_data.image_update_buffer == NULL) ||
+		(rbu_data.bios_image_size == 0)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rbu_data.image_update_buffer"
#573: FILE: drivers/firmware/dell_rbu.c:452:
+	if ((rbu_data.image_update_buffer == NULL) ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#574: FILE: drivers/firmware/dell_rbu.c:453:
+	if ((rbu_data.image_update_buffer == NULL) ||
+		(rbu_data.bios_image_size == 0)) {

WARNING:SPLIT_STRING: quoted string split across lines
#576: FILE: drivers/firmware/dell_rbu.c:455:
+		pr_debug("read_rbu_data_mono: image_update_buffer %p ,"
+			"bios_image_size %lu\n",

WARNING:INDENTED_LABEL: labels should not be indented
#599: FILE: drivers/firmware/dell_rbu.c:478:
+      read_rbu_data_exit:

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'read_rbu_data', this function's name, in a string
#615: FILE: drivers/firmware/dell_rbu.c:494:
+		pr_debug("read_rbu_data: invalid image type specified\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#625: FILE: drivers/firmware/dell_rbu.c:504:
+	unsigned int size = 0;
+	size = sprintf(buf, "%s\n", image_type);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#631: FILE: drivers/firmware/dell_rbu.c:510:
+rbu_store_image_type(struct platform_device *rbu_dev,
+	const char *buf, size_t count)

WARNING:LINE_SPACING: Missing a blank line after declarations
#634: FILE: drivers/firmware/dell_rbu.c:513:
+	int rc = count;
+	spin_lock(&rbu_data.lock);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#639: FILE: drivers/firmware/dell_rbu.c:518:
+		printk(KERN_WARNING "dell_rbu: image_type is invalid"

WARNING:SPLIT_STRING: quoted string split across lines
#640: FILE: drivers/firmware/dell_rbu.c:519:
+		printk(KERN_WARNING "dell_rbu: image_type is invalid"
+			"max chars = %d\n", MAX_IMAGE_LENGTH);

WARNING:MISSING_SPACE: break quoted strings at a space character
#640: FILE: drivers/firmware/dell_rbu.c:519:
+		printk(KERN_WARNING "dell_rbu: image_type is invalid"
+			"max chars = %d\n", MAX_IMAGE_LENGTH);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#652: FILE: drivers/firmware/dell_rbu.c:531:
+	 ssize_t(*show) (struct platform_device * rbu_dev, char *buf);

WARNING:SPACING: missing space after return type
#652: FILE: drivers/firmware/dell_rbu.c:531:
+	 ssize_t(*show) (struct platform_device * rbu_dev, char *buf);

WARNING:SPACING: Unnecessary space before function pointer arguments
#652: FILE: drivers/firmware/dell_rbu.c:531:
+	 ssize_t(*show) (struct platform_device * rbu_dev, char *buf);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#653: FILE: drivers/firmware/dell_rbu.c:532:
+	 ssize_t(*store) (struct platform_device * rbu_dev,

WARNING:SPACING: missing space after return type
#653: FILE: drivers/firmware/dell_rbu.c:532:
+	 ssize_t(*store) (struct platform_device * rbu_dev,

WARNING:SPACING: Unnecessary space before function pointer arguments
#653: FILE: drivers/firmware/dell_rbu.c:532:
+	 ssize_t(*store) (struct platform_device * rbu_dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#654: FILE: drivers/firmware/dell_rbu.c:533:
+	 ssize_t(*store) (struct platform_device * rbu_dev,
+		const char *buf, size_t count);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#657: FILE: drivers/firmware/dell_rbu.c:536:
+#define RBU_DEVICE_ATTR(_name,_mode,_show,_store ) \
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#657: FILE: drivers/firmware/dell_rbu.c:536:
+#define RBU_DEVICE_ATTR(_name,_mode,_show,_store ) \
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#657: FILE: drivers/firmware/dell_rbu.c:536:
+#define RBU_DEVICE_ATTR(_name,_mode,_show,_store ) \
                                          ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#657: FILE: drivers/firmware/dell_rbu.c:536:
+#define RBU_DEVICE_ATTR(_name,_mode,_show,_store ) \

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#657: FILE: drivers/firmware/dell_rbu.c:536:
+#define RBU_DEVICE_ATTR(_name,_mode,_show,_store ) \
+struct rbu_attribute rbu_attr_##_name = {       \
+	.attr ={.name= __stringify(_name), .mode= _mode, .owner= THIS_MODULE},\
+	.show = _show,                                \
+	.store = _store,                                \
+};

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#659: FILE: drivers/firmware/dell_rbu.c:538:
+	.attr ={.name= __stringify(_name), .mode= _mode, .owner= THIS_MODULE},\
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#659: FILE: drivers/firmware/dell_rbu.c:538:
+	.attr ={.name= __stringify(_name), .mode= _mode, .owner= THIS_MODULE},\
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#659: FILE: drivers/firmware/dell_rbu.c:538:
+	.attr ={.name= __stringify(_name), .mode= _mode, .owner= THIS_MODULE},\
 	                                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#659: FILE: drivers/firmware/dell_rbu.c:538:
+	.attr ={.name= __stringify(_name), .mode= _mode, .owner= THIS_MODULE},\
 	                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#668: FILE: drivers/firmware/dell_rbu.c:547:
+	.attr = {.name = "data",.owner = THIS_MODULE,.mode = 0444},
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#668: FILE: drivers/firmware/dell_rbu.c:547:
+	.attr = {.name = "data",.owner = THIS_MODULE,.mode = 0444},
 	                                            ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#681: FILE: drivers/firmware/dell_rbu.c:560:
+	if (!strcmp(image_type, "mono")) {
[...]
+	} else if (!strcmp(image_type, "packet")) {
[...]
+	} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#684: FILE: drivers/firmware/dell_rbu.c:563:
+			memcpy(rbu_data.image_update_buffer,
+				fw->data, fw->size);

CHECK:BRACES: braces {} should be used on all arms of this statement
#686: FILE: drivers/firmware/dell_rbu.c:565:
+		if (!rbu_data.packetsize)
[...]
+		else if (rbu_data.packetsize != fw->size) {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#693: FILE: drivers/firmware/dell_rbu.c:572:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#698: FILE: drivers/firmware/dell_rbu.c:577:
+	rc = request_firmware_nowait_nohotplug(THIS_MODULE,
+		"dell_rbu", &rbu_device->dev, &context, callbackfn_rbu);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#700: FILE: drivers/firmware/dell_rbu.c:579:
+		printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#702: FILE: drivers/firmware/dell_rbu.c:581:
+			"dell_rbu:%s request_firmware_nowait failed"
+			" %d\n", __FUNCTION__, rc);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#702: FILE: drivers/firmware/dell_rbu.c:581:
+			" %d\n", __FUNCTION__, rc);

WARNING:LINE_SPACING: Missing a blank line after declarations
#709: FILE: drivers/firmware/dell_rbu.c:588:
+	int rc = 0;
+	spin_lock_init(&rbu_data.lock);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#716: FILE: drivers/firmware/dell_rbu.c:595:
+		printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#718: FILE: drivers/firmware/dell_rbu.c:597:
+			"dell_rbu:%s:platform_device_register_simple "
+			"failed\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#718: FILE: drivers/firmware/dell_rbu.c:597:
+			"failed\n", __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#723: FILE: drivers/firmware/dell_rbu.c:602:
+	sysfs_create_file(&rbu_device->dev.kobj,
+		&rbu_attr_image_type.attr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#728: FILE: drivers/firmware/dell_rbu.c:607:
+	rc = request_firmware_nowait_nohotplug(THIS_MODULE,
+		"dell_rbu", &rbu_device->dev, &context, callbackfn_rbu);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#730: FILE: drivers/firmware/dell_rbu.c:609:
+		printk(KERN_ERR "dell_rbu:%s:request_firmware_nowait"

WARNING:SPLIT_STRING: quoted string split across lines
#731: FILE: drivers/firmware/dell_rbu.c:610:
+		printk(KERN_ERR "dell_rbu:%s:request_firmware_nowait"
+			" failed %d\n", __FUNCTION__, rc);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#731: FILE: drivers/firmware/dell_rbu.c:610:
+			" failed %d\n", __FUNCTION__, rc);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#735: FILE: drivers/firmware/dell_rbu.c:614:
+
+}

WARNING:TYPO_SPELLING: 'comunicate' may be misspelled - perhaps 'communicate'?
#762: FILE: drivers/firmware/Kconfig:67:
+	 DELL system. Note you need a supporting application to comunicate
 	                                                        ^^^^^^^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000171519.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 55 errors, 64 warnings, 34 checks, 718 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000171519.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
