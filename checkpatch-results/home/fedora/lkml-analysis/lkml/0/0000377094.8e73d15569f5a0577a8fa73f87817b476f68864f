WARNING:TYPO_SPELLING: 'addes' may be misspelled - perhaps 'adds'?
#30: 
as what's included in 2.5.67-bk7.  That is, it addes single_open() and
                                               ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#62: FILE: include/linux/seq_file.h:61:
+int single_open(struct file *, int (*)(struct seq_file *, void *), void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#62: FILE: include/linux/seq_file.h:61:
+int single_open(struct file *, int (*)(struct seq_file *, void *), void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#63: FILE: include/linux/seq_file.h:62:
+int single_release(struct inode *, struct file *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#63: FILE: include/linux/seq_file.h:62:
+int single_release(struct inode *, struct file *);

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#134: FILE: fs/seq_file.c:317:
+	struct seq_operations *op = kmalloc(sizeof(*op), GFP_KERNEL);

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#153: FILE: fs/seq_file.c:336:
+	struct seq_operations *op = ((struct seq_file *)file->private_data)->op;

WARNING:LINE_SPACING: Missing a blank line after declarations
#155: FILE: fs/seq_file.c:338:
+	int res = seq_release(inode, file);
+	kfree(op);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#165: FILE: kernel/ksyms.c:510:
+EXPORT_SYMBOL(single_release);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000377094.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 9 warnings, 0 checks, 112 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000377094.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
