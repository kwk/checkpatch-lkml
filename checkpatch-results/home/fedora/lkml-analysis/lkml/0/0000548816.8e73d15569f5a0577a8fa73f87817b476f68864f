WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
> a tarball of the Linux Logical Volume Manager 0.9.1 Beta 5 is available now at

WARNING:TYPO_SPELLING: 'protocoll' may be misspelled - perhaps 'protocol'?
#40: 
> A change in the i/o protocoll version *forces* you to update
                      ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#61: FILE: fs/buffer.c:1243:
+int alloc_kiobuf_bhs(struct kiobuf * kiobuf)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#66: FILE: fs/buffer.c:1248:
+		if (!(kiobuf->bh[i] = get_unused_buffer_head(0))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#75: FILE: fs/buffer.c:1257:
+void free_kiobuf_bhs(struct kiobuf * kiobuf)

CHECK:BRACES: Unbalanced braces around else statement
#135: FILE: fs/buffer.c:1481:
+				} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#145: FILE: fs/buffer.c:1500:
+					kiobuf_bh_nr = bhind = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#205: FILE: include/linux/iobuf.h:71:
+extern int alloc_kiobuf_bhs(struct kiobuf *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiobuf *' should also have an identifier name
#205: FILE: include/linux/iobuf.h:71:
+extern int alloc_kiobuf_bhs(struct kiobuf *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#206: FILE: include/linux/iobuf.h:72:
+extern void free_kiobuf_bhs(struct kiobuf *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiobuf *' should also have an identifier name
#206: FILE: include/linux/iobuf.h:72:
+extern void free_kiobuf_bhs(struct kiobuf *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000548816.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 4 warnings, 4 checks, 135 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000548816.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
