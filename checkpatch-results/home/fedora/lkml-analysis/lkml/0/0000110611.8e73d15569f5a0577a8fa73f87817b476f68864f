WARNING:TYPO_SPELLING: 'wont' may be misspelled - perhaps 'won't'?
#30: 
creates a mempool-backed object cache. It wont work as-is (we're not
                                          ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#65: FILE: include/linux/slab.h:65:
+extern struct kmem_cache *kmem_cache_create(const char *, size_t, size_t,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#65: FILE: include/linux/slab.h:65:
+extern struct kmem_cache *kmem_cache_create(const char *, size_t, size_t,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#65: FILE: include/linux/slab.h:65:
+extern struct kmem_cache *kmem_cache_create(const char *, size_t, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#65: FILE: include/linux/slab.h:65:
+extern struct kmem_cache *kmem_cache_create(const char *, size_t, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#65: FILE: include/linux/slab.h:65:
+extern struct kmem_cache *kmem_cache_create(const char *, size_t, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'kmem_ctor_fn' should also have an identifier name
#65: FILE: include/linux/slab.h:65:
+extern struct kmem_cache *kmem_cache_create(const char *, size_t, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'kmem_dtor_fn' should also have an identifier name
#65: FILE: include/linux/slab.h:65:
+extern struct kmem_cache *kmem_cache_create(const char *, size_t, size_t,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#69: FILE: include/linux/slab.h:69:
+extern struct kmem_cache *kmem_cache_create_mempool(const char *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#69: FILE: include/linux/slab.h:69:
+extern struct kmem_cache *kmem_cache_create_mempool(const char *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#69: FILE: include/linux/slab.h:69:
+extern struct kmem_cache *kmem_cache_create_mempool(const char *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#69: FILE: include/linux/slab.h:69:
+extern struct kmem_cache *kmem_cache_create_mempool(const char *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#69: FILE: include/linux/slab.h:69:
+extern struct kmem_cache *kmem_cache_create_mempool(const char *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'kmem_ctor_fn' should also have an identifier name
#69: FILE: include/linux/slab.h:69:
+extern struct kmem_cache *kmem_cache_create_mempool(const char *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'kmem_dtor_fn' should also have an identifier name
#69: FILE: include/linux/slab.h:69:
+extern struct kmem_cache *kmem_cache_create_mempool(const char *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'mempool_t *' should also have an identifier name
#69: FILE: include/linux/slab.h:69:
+extern struct kmem_cache *kmem_cache_create_mempool(const char *, size_t,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000110611.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 14 warnings, 2 checks, 103 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000110611.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
