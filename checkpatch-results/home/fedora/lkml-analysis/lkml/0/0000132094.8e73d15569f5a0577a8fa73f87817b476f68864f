WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#80: 
diff -urN -x 'build-*' -x '*~' -x Make -x scripts linux-2.6.14/arch/i386/kernel/Makefile work-2.6.14/arch/i386/kernel/Makefile

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#96: FILE: arch/i386/kernel/alternative.c:1:
+#include <linux/module.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#103: FILE: arch/i386/kernel/alternative.c:8:
+# define DPRINTK(fmt, args...) printk(fmt, args)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#108: FILE: arch/i386/kernel/alternative.c:13:
+/* Use inline assembly to define this because the nops are defined $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#109: FILE: arch/i386/kernel/alternative.c:14:
+   as inline assembly strings in the include files and we cannot $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#109: FILE: arch/i386/kernel/alternative.c:14:
+/* Use inline assembly to define this because the nops are defined 
+   as inline assembly strings in the include files and we cannot 

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#110: FILE: arch/i386/kernel/alternative.c:15:
+   get them easily into strings. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#111: FILE: arch/i386/kernel/alternative.c:16:
+asm("\t.data\nintelnops: " $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: arch/i386/kernel/alternative.c:17:
+    GENERIC_NOP1 GENERIC_NOP2 GENERIC_NOP3 GENERIC_NOP4 GENERIC_NOP5 GENERIC_NOP6$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#113: FILE: arch/i386/kernel/alternative.c:18:
+    GENERIC_NOP7 GENERIC_NOP8); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: arch/i386/kernel/alternative.c:18:
+    GENERIC_NOP7 GENERIC_NOP8); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#114: FILE: arch/i386/kernel/alternative.c:19:
+asm("\t.data\nk8nops: " $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: arch/i386/kernel/alternative.c:20:
+    K8_NOP1 K8_NOP2 K8_NOP3 K8_NOP4 K8_NOP5 K8_NOP6$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#116: FILE: arch/i386/kernel/alternative.c:21:
+    K8_NOP7 K8_NOP8); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: arch/i386/kernel/alternative.c:21:
+    K8_NOP7 K8_NOP8); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#117: FILE: arch/i386/kernel/alternative.c:22:
+asm("\t.data\nk7nops: " $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: arch/i386/kernel/alternative.c:23:
+    K7_NOP1 K7_NOP2 K7_NOP3 K7_NOP4 K7_NOP5 K7_NOP6$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#119: FILE: arch/i386/kernel/alternative.c:24:
+    K7_NOP7 K7_NOP8); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: arch/i386/kernel/alternative.c:24:
+    K7_NOP7 K7_NOP8); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#120: FILE: arch/i386/kernel/alternative.c:25:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: arch/i386/kernel/alternative.c:25:
+    $

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#121: FILE: arch/i386/kernel/alternative.c:26:
+extern unsigned char intelnops[], k8nops[], k7nops[];

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#122: FILE: arch/i386/kernel/alternative.c:27:
+static unsigned char *intel_nops[ASM_NOP_MAX+1] = { $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#122: FILE: arch/i386/kernel/alternative.c:27:
+static unsigned char *intel_nops[ASM_NOP_MAX+1] = { 
                                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: arch/i386/kernel/alternative.c:28:
+     NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: arch/i386/kernel/alternative.c:29:
+     intelnops,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: arch/i386/kernel/alternative.c:30:
+     intelnops + 1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: arch/i386/kernel/alternative.c:31:
+     intelnops + 1 + 2,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: arch/i386/kernel/alternative.c:32:
+     intelnops + 1 + 2 + 3,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: arch/i386/kernel/alternative.c:33:
+     intelnops + 1 + 2 + 3 + 4,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: arch/i386/kernel/alternative.c:34:
+     intelnops + 1 + 2 + 3 + 4 + 5,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: arch/i386/kernel/alternative.c:35:
+     intelnops + 1 + 2 + 3 + 4 + 5 + 6,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: arch/i386/kernel/alternative.c:36:
+     intelnops + 1 + 2 + 3 + 4 + 5 + 6 + 7,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#132: FILE: arch/i386/kernel/alternative.c:37:
+}; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#133: FILE: arch/i386/kernel/alternative.c:38:
+static unsigned char *k8_nops[ASM_NOP_MAX+1] = { $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#133: FILE: arch/i386/kernel/alternative.c:38:
+}; 
+static unsigned char *k8_nops[ASM_NOP_MAX+1] = { 

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#133: FILE: arch/i386/kernel/alternative.c:38:
+static unsigned char *k8_nops[ASM_NOP_MAX+1] = { 
                                          ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: arch/i386/kernel/alternative.c:39:
+     NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: arch/i386/kernel/alternative.c:40:
+     k8nops,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: arch/i386/kernel/alternative.c:41:
+     k8nops + 1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: arch/i386/kernel/alternative.c:42:
+     k8nops + 1 + 2,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: arch/i386/kernel/alternative.c:43:
+     k8nops + 1 + 2 + 3,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: arch/i386/kernel/alternative.c:44:
+     k8nops + 1 + 2 + 3 + 4,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: arch/i386/kernel/alternative.c:45:
+     k8nops + 1 + 2 + 3 + 4 + 5,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: arch/i386/kernel/alternative.c:46:
+     k8nops + 1 + 2 + 3 + 4 + 5 + 6,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: arch/i386/kernel/alternative.c:47:
+     k8nops + 1 + 2 + 3 + 4 + 5 + 6 + 7,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#143: FILE: arch/i386/kernel/alternative.c:48:
+}; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#144: FILE: arch/i386/kernel/alternative.c:49:
+static unsigned char *k7_nops[ASM_NOP_MAX+1] = { $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#144: FILE: arch/i386/kernel/alternative.c:49:
+}; 
+static unsigned char *k7_nops[ASM_NOP_MAX+1] = { 

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#144: FILE: arch/i386/kernel/alternative.c:49:
+static unsigned char *k7_nops[ASM_NOP_MAX+1] = { 
                                          ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: arch/i386/kernel/alternative.c:50:
+     NULL,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: arch/i386/kernel/alternative.c:51:
+     k7nops,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: arch/i386/kernel/alternative.c:52:
+     k7nops + 1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: arch/i386/kernel/alternative.c:53:
+     k7nops + 1 + 2,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: arch/i386/kernel/alternative.c:54:
+     k7nops + 1 + 2 + 3,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: arch/i386/kernel/alternative.c:55:
+     k7nops + 1 + 2 + 3 + 4,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: arch/i386/kernel/alternative.c:56:
+     k7nops + 1 + 2 + 3 + 4 + 5,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: arch/i386/kernel/alternative.c:57:
+     k7nops + 1 + 2 + 3 + 4 + 5 + 6,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: arch/i386/kernel/alternative.c:58:
+     k7nops + 1 + 2 + 3 + 4 + 5 + 6 + 7,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#154: FILE: arch/i386/kernel/alternative.c:59:
+}; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#155: FILE: arch/i386/kernel/alternative.c:60:
+static struct nop { $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#155: FILE: arch/i386/kernel/alternative.c:60:
+}; 
+static struct nop { 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#156: FILE: arch/i386/kernel/alternative.c:61:
+     int cpuid; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: arch/i386/kernel/alternative.c:61:
+     int cpuid; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#157: FILE: arch/i386/kernel/alternative.c:62:
+     unsigned char **noptable; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: arch/i386/kernel/alternative.c:62:
+     unsigned char **noptable; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#158: FILE: arch/i386/kernel/alternative.c:63:
+} noptypes[] = { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#159: FILE: arch/i386/kernel/alternative.c:64:
+     { X86_FEATURE_K8, k8_nops }, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: arch/i386/kernel/alternative.c:64:
+     { X86_FEATURE_K8, k8_nops }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#160: FILE: arch/i386/kernel/alternative.c:65:
+     { X86_FEATURE_K7, k7_nops }, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: arch/i386/kernel/alternative.c:65:
+     { X86_FEATURE_K7, k7_nops }, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: arch/i386/kernel/alternative.c:66:
+     { -1, NULL }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#162: FILE: arch/i386/kernel/alternative.c:67:
+}; $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#165: FILE: arch/i386/kernel/alternative.c:70:
+/* Replace instructions with better alternatives for this CPU type.
+

WARNING:TYPO_SPELLING: 'assymetric' may be misspelled - perhaps 'asymmetric'?
#167: FILE: arch/i386/kernel/alternative.c:72:
+   self modifying code. This implies that assymetric systems where
                                           ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#168: FILE: arch/i386/kernel/alternative.c:73:
+   APs have less capabilities than the boot processor are not handled. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#169: FILE: arch/i386/kernel/alternative.c:74:
+   Tough. Make sure you disable such features by hand. */ $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#169: FILE: arch/i386/kernel/alternative.c:74:
+   Tough. Make sure you disable such features by hand. */ 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#172: FILE: arch/i386/kernel/alternative.c:77:
+{ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: arch/i386/kernel/alternative.c:78:
+        unsigned char **noptable = intel_nops;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: arch/i386/kernel/alternative.c:78:
+        unsigned char **noptable = intel_nops;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#174: FILE: arch/i386/kernel/alternative.c:79:
+^Istruct alt_instr *a; $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#177: FILE: arch/i386/kernel/alternative.c:82:
+	DPRINTK("%s: alts %p-%p, text %p-%p\n", __FUNCTION__,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#179: FILE: arch/i386/kernel/alternative.c:84:
+^Ifor (i = 0; noptypes[i].cpuid >= 0; i++) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#180: FILE: arch/i386/kernel/alternative.c:85:
+^I^Iif (boot_cpu_has(noptypes[i].cpuid)) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#184: FILE: arch/i386/kernel/alternative.c:89:
+^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#185: FILE: arch/i386/kernel/alternative.c:90:
+^Ifor (a = start; a < end; a++) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#186: FILE: arch/i386/kernel/alternative.c:91:
+^I^IBUG_ON(a->replacementlen > a->instrlen); $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#186: FILE: arch/i386/kernel/alternative.c:91:
+		BUG_ON(a->replacementlen > a->instrlen); 

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#193: FILE: arch/i386/kernel/alternative.c:98:
+^I^Imemcpy(a->instr, a->replacement, a->replacementlen); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#194: FILE: arch/i386/kernel/alternative.c:99:
+^I^Idiff = a->instrlen - a->replacementlen; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#200: FILE: arch/i386/kernel/alternative.c:105:
+^I^I^Imemcpy(a->instr + i, noptable[k], k); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#201: FILE: arch/i386/kernel/alternative.c:106:
+^I^I} $

WARNING:MEMORY_BARRIER: memory barrier without comment
#206: FILE: arch/i386/kernel/alternative.c:111:
+	mb();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#207: FILE: arch/i386/kernel/alternative.c:112:
+} $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#224: FILE: arch/i386/kernel/alternative.c:129:
+};
+static LIST_HEAD(smp_alt_modules);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#234: FILE: arch/i386/kernel/alternative.c:139:
+	DPRINTK("%s: alts %p-%p, text %p-%p, name %s\n", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#251: FILE: arch/i386/kernel/alternative.c:156:
+	DPRINTK("%s: alts %p-%p, text %p-%p, name %s\n", __FUNCTION__,

WARNING:MEMORY_BARRIER: memory barrier without comment
#265: FILE: arch/i386/kernel/alternative.c:170:
+	mb();

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#269: FILE: arch/i386/kernel/alternative.c:174:
+extern struct alt_instr __smp_alt_instructions[], __smp_alt_instructions_end[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#270: FILE: arch/i386/kernel/alternative.c:175:
+extern __u8 _text[], _etext[];

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#280: FILE: arch/i386/kernel/alternative.c:185:
+	if (NULL == smp)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#283: FILE: arch/i386/kernel/alternative.c:188:
+	memset(smp,0,sizeof(*smp));
 	          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#283: FILE: arch/i386/kernel/alternative.c:188:
+	memset(smp,0,sizeof(*smp));
 	            ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#290: FILE: arch/i386/kernel/alternative.c:195:
+	DPRINTK("%s: alts %p-%p, text %p-%p, name %s\n", __FUNCTION__,

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#296: FILE: arch/i386/kernel/alternative.c:201:
+	if (ALT_UP == smp_alt_state)

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#301: FILE: arch/i386/kernel/alternative.c:206:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#314: FILE: arch/i386/kernel/alternative.c:219:
+		DPRINTK("%s: %s\n", __FUNCTION__, item->name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#321: FILE: arch/i386/kernel/alternative.c:226:
+void switch_alternatives_up(void) $

CHECK:SPACING: No space is necessary after a cast
#321: FILE: arch/i386/kernel/alternative.c:226:
+void switch_alternatives_up(void) 

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#328: FILE: arch/i386/kernel/alternative.c:233:
+		printk("%s: Uh, oh, %d cpus active, NOT patching ...\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#329: FILE: arch/i386/kernel/alternative.c:234:
+		       __FUNCTION__, num_online_cpus());

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#336: FILE: arch/i386/kernel/alternative.c:241:
+	if (ALT_UP == smp_alt_state)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#339: FILE: arch/i386/kernel/alternative.c:244:
+	printk(KERN_INFO "alternatives: switching to UP code\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#348: FILE: arch/i386/kernel/alternative.c:253:
+} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#350: FILE: arch/i386/kernel/alternative.c:255:
+void switch_alternatives_smp(void) $

CHECK:SPACING: No space is necessary after a cast
#350: FILE: arch/i386/kernel/alternative.c:255:
+void switch_alternatives_smp(void) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#351: FILE: arch/i386/kernel/alternative.c:256:
+{ $

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#357: FILE: arch/i386/kernel/alternative.c:262:
+	if (ALT_SMP == smp_alt_state)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#360: FILE: arch/i386/kernel/alternative.c:265:
+	printk(KERN_INFO "alternatives: switching to SMP code\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#368: FILE: arch/i386/kernel/alternative.c:273:
+} $

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Shdr>
#395: FILE: arch/i386/kernel/module.c:111:
+	const Elf_Shdr *s, *text = NULL, *alt = NULL, *smpalt = NULL;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#406: FILE: arch/i386/kernel/module.c:115:
+		if (0 == strcmp(".text", secstrings + s->sh_name))

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#408: FILE: arch/i386/kernel/module.c:117:
+		if (0 == strcmp(".altinstructions", secstrings + s->sh_name))

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#410: FILE: arch/i386/kernel/module.c:119:
+		if (0 == strcmp(".smp_altinstructions", secstrings + s->sh_name))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#415: FILE: arch/i386/kernel/module.c:124:
+^I^I/* patch .altinstructions */ $

WARNING:LINE_SPACING: Missing a blank line after declarations
#417: FILE: arch/i386/kernel/module.c:126:
+		void *aseg = (void *)alt->sh_addr;
+		apply_alternatives(aseg, aseg + alt->sh_size, NULL, NULL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#422: FILE: arch/i386/kernel/module.c:131:
+		void *tseg = (void *)text->sh_addr;
+		alternatives_smp_module_add(me, me->name,

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#586: FILE: arch/i386/kernel/smpboot.c:1320:
+	if (1 == num_online_cpus())

ERROR:TRAILING_WHITESPACE: trailing whitespace
#603: FILE: arch/i386/kernel/vmlinux.lds.S:76:
+  __smp_alt_instructions_end = .; $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#620: FILE: drivers/char/sysrq.c:276:
+ *                                       -- kraxel */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#626: FILE: drivers/char/sysrq.c:282:
+}
+static struct sysrq_key_op sysrq_up_op = {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#634: FILE: drivers/char/sysrq.c:290:
+static void sysrq_handle_smp(int key, struct pt_regs *pt_regs,
+			    struct tty_struct *tty)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#638: FILE: drivers/char/sysrq.c:294:
+}
+static struct sysrq_key_op sysrq_smp_op = {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#667: FILE: include/asm-i386/alternative.h:1:
+#ifndef _I386_ALTERNATIVE_H

ERROR:TRAILING_WHITESPACE: trailing whitespace
#672: FILE: include/asm-i386/alternative.h:6:
+struct alt_instr { $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#673: FILE: include/asm-i386/alternative.h:7:
+^I__u8 *instr; ^I^I/* original instruction */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#677: FILE: include/asm-i386/alternative.h:11:
+^I__u8  replacementlen; ^I/* length of new instruction, <= instrlen */ $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#677: FILE: include/asm-i386/alternative.h:11:
+^I__u8  replacementlen; ^I/* length of new instruction, <= instrlen */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#679: FILE: include/asm-i386/alternative.h:13:
+}; $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#681: FILE: include/asm-i386/alternative.h:15:
+extern void apply_alternatives(struct alt_instr *start, struct alt_instr *end,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#685: FILE: include/asm-i386/alternative.h:19:
+extern void alternatives_smp_module_add(struct module *mod, char *name,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#688: FILE: include/asm-i386/alternative.h:22:
+extern void alternatives_smp_module_del(struct module *mod);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#690: FILE: include/asm-i386/alternative.h:24:
+extern void switch_alternatives_up(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#691: FILE: include/asm-i386/alternative.h:25:
+extern void switch_alternatives_smp(void);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#695: FILE: include/asm-i386/alternative.h:29:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#697: FILE: include/asm-i386/alternative.h:31:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#700: FILE: include/asm-i386/alternative.h:34:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#703: FILE: include/asm-i386/alternative.h:37:
+ * $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#707: FILE: include/asm-i386/alternative.h:41:
+#define alternative(oldinstr, newinstr, feature) ^I\$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#707: FILE: include/asm-i386/alternative.h:41:
+#define alternative(oldinstr, newinstr, feature) 	\
+	asm volatile ("661:\n\t" oldinstr "\n662:\n" 		     \
+		      ".section .altinstructions,\"a\"\n"     	     \
+		      "  .align 4\n"				       \
+		      "  .long 661b\n"            /* label */          \
+		      "  .long 663f\n"		  /* new instruction */ 	\
+		      "  .byte %c0\n"             /* feature bit */    \
+		      "  .byte 662b-661b\n"       /* sourcelen */      \
+		      "  .byte 664f-663f\n"       /* replacementlen */ \
+		      ".previous\n"						\
+		      ".section .altinstr_replacement,\"ax\"\n"			\
+		      "663:\n\t" newinstr "\n664:\n"   /* replacement */    \
+		      ".previous" :: "i" (feature) : "memory")  

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#708: FILE: include/asm-i386/alternative.h:42:
+^Iasm volatile ("661:\n\t" oldinstr "\n662:\n" ^I^I     \$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#709: FILE: include/asm-i386/alternative.h:43:
+^I^I      ".section .altinstructions,\"a\"\n"     ^I     \$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#712: FILE: include/asm-i386/alternative.h:46:
+^I^I      "  .long 663f\n"^I^I  /* new instruction */ ^I\$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#719: FILE: include/asm-i386/alternative.h:53:
+^I^I      ".previous" :: "i" (feature) : "memory")  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#723: FILE: include/asm-i386/alternative.h:57:
+ * $

WARNING:TYPO_SPELLING: 'Pecularities' may be misspelled - perhaps 'Peculiarities'?
#724: FILE: include/asm-i386/alternative.h:58:
+ * Pecularities:
    ^^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#725: FILE: include/asm-i386/alternative.h:59:
+ * No memory clobber here. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#728: FILE: include/asm-i386/alternative.h:62:
+ * If you use variable sized constraints like "m" or "g" in the $

WARNING:TYPO_SPELLING: 'maake' may be misspelled - perhaps 'make'?
#729: FILE: include/asm-i386/alternative.h:63:
+ * replacement maake sure to pad to the worst case length.
                ^^^^^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#731: FILE: include/asm-i386/alternative.h:65:
+#define alternative_input(oldinstr, newinstr, feature, input...)		\
+	asm volatile ("661:\n\t" oldinstr "\n662:\n"				\
+		      ".section .altinstructions,\"a\"\n"			\
+		      "  .align 4\n"						\
+		      "  .long 661b\n"            /* label */			\
+		      "  .long 663f\n"		  /* new instruction */ 	\
+		      "  .byte %c0\n"             /* feature bit */		\
+		      "  .byte 662b-661b\n"       /* sourcelen */		\
+		      "  .byte 664f-663f\n"       /* replacementlen */ 		\
+		      ".previous\n"						\
+		      ".section .altinstr_replacement,\"ax\"\n"			\
+		      "663:\n\t" newinstr "\n664:\n"   /* replacement */ 	\
+		      ".previous" :: "i" (feature), ##input)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#736: FILE: include/asm-i386/alternative.h:70:
+^I^I      "  .long 663f\n"^I^I  /* new instruction */ ^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#739: FILE: include/asm-i386/alternative.h:73:
+^I^I      "  .byte 664f-663f\n"       /* replacementlen */ ^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#742: FILE: include/asm-i386/alternative.h:76:
+^I^I      "663:\n\t" newinstr "\n664:\n"   /* replacement */ ^I\$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#764: FILE: include/asm-i386/alternative.h:98:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#769: FILE: include/asm-i386/alternative.h:103:
+ */ $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#772: FILE: include/asm-i386/alternative.h:106:
+#define alternative_smp(smpinstr, upinstr, args...) ^I\$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#772: FILE: include/asm-i386/alternative.h:106:
+#define alternative_smp(smpinstr, upinstr, args...) 	\
+	asm volatile ("661:\n\t" smpinstr "\n662:\n" 		     \
+		      ".section .smp_altinstructions,\"a\"\n"          \
+		      "  .align 4\n"				       \
+		      "  .long 661b\n"            /* label */          \
+		      "  .long 663f\n"		  /* new instruction */ 	\
+		      "  .byte 0x68\n"            /* X86_FEATURE_UP */    \
+		      "  .byte 662b-661b\n"       /* sourcelen */      \
+		      "  .byte 664f-663f\n"       /* replacementlen */ \
+		      ".previous\n"						\
+		      ".section .smp_altinstr_replacement,\"awx\"\n"   		\
+		      "663:\n\t" upinstr "\n"     /* replacement */    \
+		      "664:\n\t.fill 662b-661b,1,0x42\n" /* space for original */ \
+		      ".previous" : args)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#773: FILE: include/asm-i386/alternative.h:107:
+^Iasm volatile ("661:\n\t" smpinstr "\n662:\n" ^I^I     \$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#777: FILE: include/asm-i386/alternative.h:111:
+^I^I      "  .long 663f\n"^I^I  /* new instruction */ ^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#782: FILE: include/asm-i386/alternative.h:116:
+^I^I      ".section .smp_altinstr_replacement,\"awx\"\n"   ^I^I\$

ERROR:CODE_INDENT: code indent should use tabs where possible
#788: FILE: include/asm-i386/alternative.h:122:
+^I       ^I"661:\n\tlock; "$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#788: FILE: include/asm-i386/alternative.h:122:
+^I       ^I"661:\n\tlock; "$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#790: FILE: include/asm-i386/alternative.h:124:
+^I^I"\n" ^I^I     \$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#794: FILE: include/asm-i386/alternative.h:128:
+^I^I"  .long 663f\n"^I    /* new instruction */ ^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#799: FILE: include/asm-i386/alternative.h:133:
+^I^I".section .smp_altinstr_replacement,\"awx\"\n"    ^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#804: FILE: include/asm-i386/alternative.h:138:
+#define alternative_smp_lock(lockinstr, args...) ^I\$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#804: FILE: include/asm-i386/alternative.h:138:
+#define alternative_smp_lock(lockinstr, args...) 	\
+	asm volatile (LOCK_PRE lockinstr LOCK_POST : args)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#808: FILE: include/asm-i386/alternative.h:142:
+#define alternative_smp(smpinstr, upinstr, args...) \
+	asm volatile (upinstr : args)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#810: FILE: include/asm-i386/alternative.h:144:
+#define alternative_smp_lock(lockinstr, args...) \
+	asm volatile (lockinstr : args)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#840: FILE: include/asm-i386/atomic.h:48:
+	alternative_smp_lock(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#853: FILE: include/asm-i386/atomic.h:63:
+	alternative_smp_lock(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#866: FILE: include/asm-i386/atomic.h:82:
+	alternative_smp_lock(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#879: FILE: include/asm-i386/atomic.h:97:
+	alternative_smp_lock(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#892: FILE: include/asm-i386/atomic.h:111:
+	alternative_smp_lock(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#905: FILE: include/asm-i386/atomic.h:129:
+	alternative_smp_lock(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#918: FILE: include/asm-i386/atomic.h:148:
+	alternative_smp_lock(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#931: FILE: include/asm-i386/atomic.h:168:
+	alternative_smp_lock(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#944: FILE: include/asm-i386/atomic.h:191:
+	alternative_smp_lock(

ERROR:SPACING: space required after that ',' (ctx:VxV)
#957: FILE: include/asm-i386/atomic.h:218:
+: "r" (~(mask)),"m" (*addr) : "memory")
                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#963: FILE: include/asm-i386/atomic.h:222:
+: "r" (mask),"m" (*(addr)) : "memory")
             ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#998: FILE: include/asm-i386/bitops.h:39:
+	alternative_smp_lock(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1011: FILE: include/asm-i386/bitops.h:74:
+	alternative_smp_lock(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1024: FILE: include/asm-i386/bitops.h:119:
+	alternative_smp_lock(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1037: FILE: include/asm-i386/bitops.h:138:
+	alternative_smp_lock(

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1039: FILE: include/asm-i386/bitops.h:140:
+		"=r" (oldbit),"=m" (ADDR)
 		             ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1050: FILE: include/asm-i386/bitops.h:178:
+	alternative_smp_lock(

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1052: FILE: include/asm-i386/bitops.h:180:
+		"=r" (oldbit),"=m" (ADDR)
 		             ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1063: FILE: include/asm-i386/bitops.h:229:
+	alternative_smp_lock(

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1065: FILE: include/asm-i386/bitops.h:231:
+		"=r" (oldbit),"=m" (ADDR)
 		             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1076: FILE: include/asm-i386/cpufeature.h:73:
+#define X86_FEATURE_UP		(3*32+ 8) /* smp kernel running on up */
                       		  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxW)
#1076: FILE: include/asm-i386/cpufeature.h:73:
+#define X86_FEATURE_UP		(3*32+ 8) /* smp kernel running on up */
                       		     ^

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#1089: FILE: include/asm-i386/futex.h:31:
+"2:	" LOCK_PRE "cmpxchgl %3, %2" LOCK_POST "\n\

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#1119: FILE: include/asm-i386/rwlock.h:29:
+			:"a" (rw) : "memory")
 			^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1138: FILE: include/asm-i386/rwlock.h:40:
+			"=m" (*(volatile int *)rw) : : "memory")

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#1156: FILE: include/asm-i386/rwlock.h:55:
+			:"a" (rw) : "memory")
 			^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1175: FILE: include/asm-i386/rwlock.h:66:
+			"=m" (*(volatile int *)rw) : : "memory")

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1187: FILE: include/asm-i386/rwsem.h:102:
+LOCK_PRE       ^I"  incl      (%%eax)" LOCK_POST "\n\t" /* adds 0x00000001, returns the old value */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1196: FILE: include/asm-i386/rwsem.h:133:
+LOCK_PRE       ^I"  cmpxchgl  %2,%0" LOCK_POST "\n\t"$

WARNING:LONG_LINE_COMMENT: line length of 109 exceeds 100 columns
#1205: FILE: include/asm-i386/rwsem.h:153:
+LOCK_PRE       	"  xadd      %%edx,(%%eax)" LOCK_POST "\n\t" /* subtract 0x0000ffff, returns the old value */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1205: FILE: include/asm-i386/rwsem.h:153:
+LOCK_PRE       ^I"  xadd      %%edx,(%%eax)" LOCK_POST "\n\t" /* subtract 0x0000ffff, returns the old value */$

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#1214: FILE: include/asm-i386/rwsem.h:191:
+LOCK_PRE	"  xadd      %%edx,(%%eax)" LOCK_POST "\n\t" /* subtracts 1, returns the old value */

WARNING:LONG_LINE_COMMENT: line length of 111 exceeds 100 columns
#1223: FILE: include/asm-i386/rwsem.h:217:
+LOCK_PRE       	"  xaddl     %%edx,(%%eax)" LOCK_POST "\n\t" /* tries to transition 0xffff0001 -> 0x00000000 */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1223: FILE: include/asm-i386/rwsem.h:217:
+LOCK_PRE       ^I"  xaddl     %%edx,(%%eax)" LOCK_POST "\n\t" /* tries to transition 0xffff0001 -> 0x00000000 */$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1243: FILE: include/asm-i386/rwsem.h:265:
+	alternative_smp_lock(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1256: FILE: include/asm-i386/rwsem.h:278:
+	alternative_smp_lock(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1316: FILE: include/asm-i386/spinlock.h:56:
+	alternative_smp(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1327: FILE: include/asm-i386/spinlock.h:64:
+	alternative_smp(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1339: FILE: include/asm-i386/spinlock.h:186:
+	alternative_smp_lock(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1348: FILE: include/asm-i386/spinlock.h:193:
+	alternative_smp_lock(

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000132094.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 73 errors, 105 warnings, 42 checks, 1266 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000132094.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
