WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
diff -u -p linux/drivers/net/irda/irda-usb.d0.c linux/drivers/net/irda/irda-usb.c

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#81: FILE: drivers/net/irda/irda-usb.c:85:
+	{ USB_DEVICE(0x4428, 0x012), driver_info: IUC_SPEED_BUG | IUC_NO_WINDOW },
 	                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#91: FILE: drivers/net/irda/irda-usb.c:171:
+		 * handler just in case the current URB fail - Jean II */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#101: FILE: drivers/net/irda/irda-usb.c:213:
+		 * handler just in case the current URB fail - Jean II */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "self"
#123: FILE: drivers/net/irda/irda-usb.c:300:
+	ASSERT(self != NULL, return;);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'commited' may be misspelled - perhaps 'committed'?
#140: FILE: drivers/net/irda/irda-usb.c:320:
+	/* New speed and xbof is now commited in hardware */
 	                             ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#155: FILE: drivers/net/irda/irda-usb.c:342:
+	IRDA_DEBUG(4, __FUNCTION__ "() on %s\n", netdev->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#185: FILE: drivers/net/irda/irda-usb.c:396:
+		IRDA_DEBUG(1, "%s(), Insuficient skb headroom.\n", __FUNCTION__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "self"
#206: FILE: drivers/net/irda/irda-usb.c:504:
+	ASSERT(self != NULL, return;);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'self->new_speed != self->speed'
#221: FILE: drivers/net/irda/irda-usb.c:541:
+		if ((self->new_speed != self->speed) ||
+		    (self->new_xbofs != self->xbofs)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'self->new_xbofs != self->xbofs'
#221: FILE: drivers/net/irda/irda-usb.c:541:
+		if ((self->new_speed != self->speed) ||
+		    (self->new_xbofs != self->xbofs)) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#224: FILE: drivers/net/irda/irda-usb.c:544:
+			 * IUC_SPEED_BUG), so do it now - Jean II */

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#225: FILE: drivers/net/irda/irda-usb.c:545:
+			IRDA_DEBUG(1, __FUNCTION__ "(), Changing speed now...\n");

WARNING:TYPO_SPELLING: 'commited' may be misspelled - perhaps 'committed'?
#228: FILE: drivers/net/irda/irda-usb.c:548:
+			/* New speed and xbof is now commited in hardware */
 			                             ^^^^^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "self"
#241: FILE: drivers/net/irda/irda-usb.c:578:
+	ASSERT(self != NULL, return;);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#297: FILE: drivers/net/irda/irda-usb.c:1122:
+	 * use it in native order (see parameters.c). - Jean II */

CHECK:CAMELCASE: Avoid CamelCase: <wBaudRate>
#298: FILE: drivers/net/irda/irda-usb.c:1123:
+	self->qos.baud_rate.bits       = le16_to_cpu(desc->wBaudRate);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:TRAILING_WHITESPACE: trailing whitespace
#319: FILE: drivers/net/irda/irda-usb.c:1337:
+^Iprintk("bcdSpecRevision=%x\n", le16_to_cpu(desc->bcdSpecRevision)); $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#319: FILE: drivers/net/irda/irda-usb.c:1337:
+	printk("bcdSpecRevision=%x\n", le16_to_cpu(desc->bcdSpecRevision)); 

CHECK:CAMELCASE: Avoid CamelCase: <bcdSpecRevision>
#319: FILE: drivers/net/irda/irda-usb.c:1337:
+	printk("bcdSpecRevision=%x\n", le16_to_cpu(desc->bcdSpecRevision)); 

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#324: FILE: drivers/net/irda/irda-usb.c:1341:
+	printk("wBaudRate=%x\n", le16_to_cpu(desc->wBaudRate));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000361909.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 12 warnings, 7 checks, 267 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000361909.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
