WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
1) The timeout bug in rtmutexes and PI futexes: When a task is blocked on a 

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#111: FILE: kernel/rtmutex.c:129:
+static int rt_mutex_getprio_real(struct task_struct *task)
  {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#153: FILE: kernel/rtmutex.c:179:
+static void rt_mutex_adjust_prio_final(struct task_struct *task,
+				       int old_sched_lifo)
  {

WARNING:TYPO_SPELLING: 'whith' may be misspelled - perhaps 'with'?
#190: FILE: kernel/rtmutex.c:335:
+ * whith unlocking and locking lock->wait_lock.
    ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#330: FILE: kernel/rtmutex.c:807:
+	BUG_ON(current->boosting_prio != MAX_PRIO);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#331: FILE: kernel/rtmutex.c:808:
+	BUG_ON(waiter.old_sched_lifo != get_sched_lifo());

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#354: FILE: kernel/rtmutex.c:828:
+	BUG_ON(current->boosting_prio != MAX_PRIO);

CHECK:BRACES: braces {} should be used on all arms of this statement
#414: FILE: kernel/rtmutex.c:1065:
+	if (unlikely(waiter.task)) {
[...]
+	else if (unlikely(ret))
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#418: FILE: kernel/rtmutex.c:1069:
+	}
+	else if (unlikely(ret))

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#448: FILE: kernel/rtmutex.c:1094:
+	BUG_ON(current->boosting_prio != MAX_PRIO);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#457: FILE: kernel/rtmutex.c:1149:
+	BUG_ON(current->boosting_prio != MAX_PRIO);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000032878.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 7 warnings, 1 checks, 495 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000032878.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
