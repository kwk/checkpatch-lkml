WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#38: FILE: linux/vlocator.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#53: FILE: linux/vlocator.h:16:
+ * controlled way. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#62: FILE: linux/vlocator.h:25:
+#include <asm/atomic.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#94: FILE: linux/vlocator.h:57:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#96: FILE: linux/vlocator.h:59:
+extern int vl_key_create (struct page **ppage, union vl_key *key,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#96: FILE: linux/vlocator.h:59:
+extern int vl_key_create (struct page **ppage, union vl_key *key,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#99: FILE: linux/vlocator.h:62:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#102: FILE: linux/vlocator.h:65:
+void vl_key_get (union vl_key *key) $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#102: FILE: linux/vlocator.h:65:
+void vl_key_get (union vl_key *key) 

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#105: FILE: linux/vlocator.h:68:
+		atomic_inc (&key->shared.inode->i_count);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#107: FILE: linux/vlocator.h:70:
+		atomic_inc (&key->private.mm->mm_count);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#110: FILE: linux/vlocator.h:73:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#115: FILE: linux/vlocator.h:78:
+void vl_key_put (union vl_key *key)

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#118: FILE: linux/vlocator.h:81:
+		iput (key->shared.inode);
 		^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#118: FILE: linux/vlocator.h:81:
+		iput (key->shared.inode);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#120: FILE: linux/vlocator.h:83:
+		mmdrop (key->private.mm);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#123: FILE: linux/vlocator.h:86:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#125: FILE: linux/vlocator.h:88:
+extern int vl_page_get (struct page **ppage, struct task_struct *task,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#125: FILE: linux/vlocator.h:88:
+extern int vl_page_get (struct page **ppage, struct task_struct *task,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#128: FILE: linux/vlocator.h:91:
+
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#131: FILE: linux/vlocator.h:94:
+void vl_page_put (struct page *page) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#131: FILE: linux/vlocator.h:94:
+void vl_page_put (struct page *page) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#132: FILE: linux/vlocator.h:95:
+	return put_page (page);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#135: FILE: linux/vlocator.h:98:
+extern int __vl_key_page_get_shared (struct page **ppage, union vl_key *key);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#135: FILE: linux/vlocator.h:98:
+extern int __vl_key_page_get_shared (struct page **ppage, union vl_key *key);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#137: FILE: linux/vlocator.h:100:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#144: FILE: linux/vlocator.h:107:
+ *          shrink_all_pages() and try again... I guess. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#149: FILE: linux/vlocator.h:112:
+ *          $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#154: FILE: linux/vlocator.h:117:
+int vl_key_page_get (struct page **ppage, union vl_key *key)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#157: FILE: linux/vlocator.h:120:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#158: FILE: linux/vlocator.h:121:
+^Iftrace ("(%p, %p)\n", ppage, key);^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#158: FILE: linux/vlocator.h:121:
+	ftrace ("(%p, %p)\n", ppage, key);	

ERROR:TRAILING_WHITESPACE: trailing whitespace
#160: FILE: linux/vlocator.h:123:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#161: FILE: linux/vlocator.h:124:
+^Iif (key->both.offset & 1) $

CHECK:BRACES: braces {} should be used on all arms of this statement
#161: FILE: linux/vlocator.h:124:
+	if (key->both.offset & 1) 
[...]
+	else {		/* Private mapping */
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#162: FILE: linux/vlocator.h:125:
+		result = __vl_key_page_get_shared (ppage, key);

CHECK:BRACES: Unbalanced braces around else statement
#163: FILE: linux/vlocator.h:126:
+	else {		/* Private mapping */

WARNING:LINE_SPACING: Missing a blank line after declarations
#165: FILE: linux/vlocator.h:128:
+		struct mm_struct *mm = key->private.mm;
+		down_read (&mm->mmap_sem);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#165: FILE: linux/vlocator.h:128:
+		down_read (&mm->mmap_sem);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#166: FILE: linux/vlocator.h:129:
+		result = vl_page_get (ppage, current, mm, key->private.uaddr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#167: FILE: linux/vlocator.h:130:
+		if (unlikely (result < 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'result < 0'
#167: FILE: linux/vlocator.h:130:
+		if (unlikely (result < 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#168: FILE: linux/vlocator.h:131:
+			up_read (&mm->mmap_sem);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#173: FILE: linux/vlocator.h:136:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#176: FILE: linux/vlocator.h:139:
+void vl_key_page_put (struct page *page, union vl_key *key)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#178: FILE: linux/vlocator.h:141:
+	ftrace ("(%p, %p)\n", page, key);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#181: FILE: linux/vlocator.h:144:
+		page_cache_release (page);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#182: FILE: linux/vlocator.h:145:
+		up (&key->shared.inode->i_mapping->i_shared_sem);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#184: FILE: linux/vlocator.h:147:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#184: FILE: linux/vlocator.h:147:
+	else {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#186: FILE: linux/vlocator.h:149:
+		vl_page_put (page);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#187: FILE: linux/vlocator.h:150:
+		up_read (&key->private.mm->mmap_sem);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#191: FILE: linux/vlocator.h:154:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#200: FILE: linux/vlocator.h:163:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#203: FILE: linux/vlocator.h:166:
+void vlocator_init (struct vlocator *vlocator)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#205: FILE: linux/vlocator.h:168:
+	atomic_set (&vlocator->refcount, 0);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#206: FILE: linux/vlocator.h:169:
+	INIT_LIST_HEAD (&vlocator->hash_list);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#209: FILE: linux/vlocator.h:172:
+
+

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#212: FILE: linux/vlocator.h:175:
+struct vlocator_ops
+{

WARNING:SPACING: Unnecessary space before function pointer name
#213: FILE: linux/vlocator.h:176:
+	struct vlocator * (* alloc) (void);

WARNING:SPACING: Unnecessary space before function pointer arguments
#213: FILE: linux/vlocator.h:176:
+	struct vlocator * (* alloc) (void);

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#213: FILE: linux/vlocator.h:176:
+	struct vlocator * (* alloc) (void);
 	                   ^

WARNING:SPACING: Unnecessary space before function pointer name
#214: FILE: linux/vlocator.h:177:
+	int (* create) (struct vlocator *,

WARNING:SPACING: Unnecessary space before function pointer arguments
#214: FILE: linux/vlocator.h:177:
+	int (* create) (struct vlocator *,

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#214: FILE: linux/vlocator.h:177:
+	int (* create) (struct vlocator *,
 	     ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vlocator *' should also have an identifier name
#214: FILE: linux/vlocator.h:177:
+	int (* create) (struct vlocator *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const union vl_key *' should also have an identifier name
#214: FILE: linux/vlocator.h:177:
+	int (* create) (struct vlocator *,

WARNING:SPACING: Unnecessary space before function pointer name
#216: FILE: linux/vlocator.h:179:
+	void (* release) (struct vlocator *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#216: FILE: linux/vlocator.h:179:
+	void (* release) (struct vlocator *);

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#216: FILE: linux/vlocator.h:179:
+	void (* release) (struct vlocator *);
 	      ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vlocator *' should also have an identifier name
#216: FILE: linux/vlocator.h:179:
+	void (* release) (struct vlocator *);

WARNING:SPACING: Unnecessary space before function pointer name
#217: FILE: linux/vlocator.h:180:
+	void (* free) (struct vlocator *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#217: FILE: linux/vlocator.h:180:
+	void (* free) (struct vlocator *);

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#217: FILE: linux/vlocator.h:180:
+	void (* free) (struct vlocator *);
 	      ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vlocator *' should also have an identifier name
#217: FILE: linux/vlocator.h:180:
+	void (* free) (struct vlocator *);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#220: FILE: linux/vlocator.h:183:
+
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#223: FILE: linux/vlocator.h:186:
+void vl_get (struct vlocator *vl) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#223: FILE: linux/vlocator.h:186:
+void vl_get (struct vlocator *vl) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#224: FILE: linux/vlocator.h:187:
+	atomic_inc (&vl->refcount);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#227: FILE: linux/vlocator.h:190:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#230: FILE: linux/vlocator.h:193:
+unsigned vl_put (struct vlocator *vlocator) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#230: FILE: linux/vlocator.h:193:
+unsigned vl_put (struct vlocator *vlocator) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#230: FILE: linux/vlocator.h:193:
+unsigned vl_put (struct vlocator *vlocator) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#231: FILE: linux/vlocator.h:194:
+	return atomic_dec_and_test (&vlocator->refcount);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#234: FILE: linux/vlocator.h:197:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#236: FILE: linux/vlocator.h:199:
+extern int vl_find (struct vlocator **pvl, const union vl_key *key,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#236: FILE: linux/vlocator.h:199:
+extern int vl_find (struct vlocator **pvl, const union vl_key *key,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#238: FILE: linux/vlocator.h:201:
+extern int vl_find_or_create (struct vlocator **pvl, const union vl_key *key,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#238: FILE: linux/vlocator.h:201:
+extern int vl_find_or_create (struct vlocator **pvl, const union vl_key *key,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#240: FILE: linux/vlocator.h:203:
+extern void vl_dispose (struct vlocator *vl);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#240: FILE: linux/vlocator.h:203:
+extern void vl_dispose (struct vlocator *vl);

WARNING:PATCH_PREFIX: patch prefix 'kernel' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#247: FILE: vlocator.c:1:
+

CHECK:BIT_MACRO: Prefer using the BIT macro
#267: FILE: vlocator.c:21:
+#define VL_HASH_QUEUES (1 << VL_HASH_BITS)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#269: FILE: vlocator.c:23:
+static struct list_head __vl_disposal = LIST_HEAD_INIT (__vl_disposal); $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#269: FILE: vlocator.c:23:
+static struct list_head __vl_disposal = LIST_HEAD_INIT (__vl_disposal); 

CHECK:LINE_SPACING: Please don't use multiple blank lines
#272: FILE: vlocator.c:26:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#275: FILE: vlocator.c:29:
+u32 vl_key_hash (const union vl_key *key)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#277: FILE: vlocator.c:31:
+	u32 hash = jhash2 (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#277: FILE: vlocator.c:31:
+	u32 hash = jhash2 (

CHECK:SPACING: No space is necessary after a cast
#278: FILE: vlocator.c:32:
+		(u32*) &key->both.word,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#278: FILE: vlocator.c:32:
+		(u32*) &key->both.word,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#279: FILE: vlocator.c:33:
+		(sizeof (key->both.word) + sizeof (key->both.ptr)) / 4,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#279: FILE: vlocator.c:33:
+		(sizeof (key->both.word) + sizeof (key->both.ptr)) / 4,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#284: FILE: vlocator.c:38:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#287: FILE: vlocator.c:41:
+int vl_key_equal (const union vl_key *key1, const union vl_key *key2)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#289: FILE: vlocator.c:43:
+	return !memcmp (key1, key2, sizeof (*key1));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#289: FILE: vlocator.c:43:
+	return !memcmp (key1, key2, sizeof (*key1));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#292: FILE: vlocator.c:46:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#303: FILE: vlocator.c:57:
+int __vl_key_page_get_shared (struct page **ppage, union vl_key *key)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#309: FILE: vlocator.c:63:
+^Iftrace ("(%p, %p)\n", ppage, key);^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#309: FILE: vlocator.c:63:
+	ftrace ("(%p, %p)\n", ppage, key);	

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#311: FILE: vlocator.c:65:
+#warning: FIXME: block/lock the mapping...I am not that sure of this
                       ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#312: FILE: vlocator.c:66:
+	down (&mapping->i_shared_sem);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#313: FILE: vlocator.c:67:
+^Ipage = read_cache_page (mapping, key->shared.pgoff, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#313: FILE: vlocator.c:67:
+	page = read_cache_page (mapping, key->shared.pgoff, 

CHECK:SPACING: No space is necessary after a cast
#314: FILE: vlocator.c:68:
+				(filler_t *) mapping->a_ops->readpage, NULL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#315: FILE: vlocator.c:69:
+	result = PTR_ERR (page);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#316: FILE: vlocator.c:70:
+	if (IS_ERR (page))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#318: FILE: vlocator.c:72:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#319: FILE: vlocator.c:73:
+	wait_on_page_locked (page);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#320: FILE: vlocator.c:74:
+	if (!PageUptodate (page)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#321: FILE: vlocator.c:75:
+		page_cache_release (page);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#322: FILE: vlocator.c:76:
+		page = ERR_PTR (-EIO);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#328: FILE: vlocator.c:82:
+	up (&mapping->i_shared_sem);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#332: FILE: vlocator.c:86:
+
+

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#335: FILE: vlocator.c:89:
+struct vl_queue
+{

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#336: FILE: vlocator.c:90:
+	spinlock_t lock;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#338: FILE: vlocator.c:92:
+	unsigned additions;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#341: FILE: vlocator.c:95:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#344: FILE: vlocator.c:98:
+struct vl_queue * vl_hash (const union vl_key *key) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#344: FILE: vlocator.c:98:
+struct vl_queue * vl_hash (const union vl_key *key) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#344: FILE: vlocator.c:98:
+struct vl_queue * vl_hash (const union vl_key *key) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#345: FILE: vlocator.c:99:
+	return &__vl_hash[vl_key_hash (key) & (VL_HASH_QUEUES - 1)];

ERROR:TRAILING_WHITESPACE: trailing whitespace
#348: FILE: vlocator.c:102:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#348: FILE: vlocator.c:102:
+
+	

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#351: FILE: vlocator.c:105:
+struct vlocator * __vl_find (struct vl_queue *vlq,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#351: FILE: vlocator.c:105:
+struct vlocator * __vl_find (struct vl_queue *vlq,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#357: FILE: vlocator.c:111:
+	list_for_each (itr, &vlq->queue) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#358: FILE: vlocator.c:112:
+		vl = container_of (itr, struct vlocator, hash_list);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#359: FILE: vlocator.c:113:
+		if (vl_key_equal (key, &vl->key))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#367: FILE: vlocator.c:121:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#370: FILE: vlocator.c:124:
+struct vlocator * __vl_find_r (struct vl_queue *vlq,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#370: FILE: vlocator.c:124:
+struct vlocator * __vl_find_r (struct vl_queue *vlq,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#376: FILE: vlocator.c:130:
+	list_for_each_prev (itr, &vlq->queue) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#377: FILE: vlocator.c:131:
+		vl = container_of (itr, struct vlocator, hash_list);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#378: FILE: vlocator.c:132:
+		if (vl_key_equal (key, &vl->key))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#386: FILE: vlocator.c:140:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#387: FILE: vlocator.c:141:
+/** Append @vlocator to queue @vlq. */ $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#389: FILE: vlocator.c:143:
+void __vl_add (struct vl_queue *vlq, struct vlocator *vl)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#392: FILE: vlocator.c:146:
+	list_add (&vl->hash_list, &vlq->queue);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#395: FILE: vlocator.c:149:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#397: FILE: vlocator.c:151:
+ * return true). */ $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#397: FILE: vlocator.c:151:
+ * return true). */ 

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#399: FILE: vlocator.c:153:
+unsigned __vl_rem (struct vlocator *v)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#399: FILE: vlocator.c:153:
+unsigned __vl_rem (struct vlocator *v)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#401: FILE: vlocator.c:155:
+	unsigned result = 0, refcount;

WARNING:LINE_SPACING: Missing a blank line after declarations
#402: FILE: vlocator.c:156:
+	unsigned result = 0, refcount;
+	refcount = atomic_read (&v->refcount);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#402: FILE: vlocator.c:156:
+	refcount = atomic_read (&v->refcount);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#404: FILE: vlocator.c:158:
+		list_del (&v->hash_list);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#410: FILE: vlocator.c:164:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#419: FILE: vlocator.c:173:
+ * $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#424: FILE: vlocator.c:178:
+int vl_page_get (struct page **ppage, struct task_struct *task,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#429: FILE: vlocator.c:183:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#430: FILE: vlocator.c:184:
+	spin_lock (&mm->page_table_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#431: FILE: vlocator.c:185:
+	page = follow_page (mm, uaddr, 0);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#432: FILE: vlocator.c:186:
+	if (likely (page != NULL)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'page != NULL'
#432: FILE: vlocator.c:186:
+	if (likely (page != NULL)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "page"
#432: FILE: vlocator.c:186:
+	if (likely (page != NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#433: FILE: vlocator.c:187:
+		if (!PageReserved (page))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#434: FILE: vlocator.c:188:
+			get_page (page);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#436: FILE: vlocator.c:190:
+		spin_unlock (&mm->page_table_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#439: FILE: vlocator.c:193:
+	spin_unlock (&mm->page_table_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#442: FILE: vlocator.c:196:
+	result = get_user_pages (task, mm, uaddr, 1, 0, 0, ppage, NULL);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#447: FILE: vlocator.c:201:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#462: FILE: vlocator.c:216:
+int vl_key_create (struct page **ppage, union vl_key *key,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#469: FILE: vlocator.c:223:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#470: FILE: vlocator.c:224:
+	ftrace ("(%p, %p, %p [%d], %lx)\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#475: FILE: vlocator.c:229:
+	if (unlikely ((key->both.offset % sizeof (u32)) != 0))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#475: FILE: vlocator.c:229:
+	if (unlikely ((key->both.offset % sizeof (u32)) != 0))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#478: FILE: vlocator.c:232:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#483: FILE: vlocator.c:237:
+	vma = find_extend_vma (mm, uaddr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#485: FILE: vlocator.c:239:
+	if (unlikely (!vma))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!vma'
#485: FILE: vlocator.c:239:
+	if (unlikely (!vma))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#489: FILE: vlocator.c:243:
+	if (unlikely ((vma->vm_flags & (VM_IO|VM_READ)) != VM_READ))

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#489: FILE: vlocator.c:243:
+	if (unlikely ((vma->vm_flags & (VM_IO|VM_READ)) != VM_READ))
 	                                     ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#501: FILE: vlocator.c:255:
+	if (likely (!(vma->vm_flags & VM_MAYSHARE))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#509: FILE: vlocator.c:263:
+	if (likely (!(vma->vm_flags & VM_NONLINEAR))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#517: FILE: vlocator.c:271:
+	result = vl_page_get (&page, current, mm, uaddr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#518: FILE: vlocator.c:272:
+	if (unlikely (result < 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'result < 0'
#518: FILE: vlocator.c:272:
+	if (unlikely (result < 0))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#523: FILE: vlocator.c:277:
+	vl_key_get (key);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#529: FILE: vlocator.c:283:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#532: FILE: vlocator.c:286:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#534: FILE: vlocator.c:288:
+ *       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#537: FILE: vlocator.c:291:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#539: FILE: vlocator.c:293:
+ * $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#549: FILE: vlocator.c:303:
+int vl_find (struct vlocator **pvl, const union vl_key *key,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#555: FILE: vlocator.c:309:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#556: FILE: vlocator.c:310:
+	ftrace ("(%p, %p, %p)\n", pvl, key, ops);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#559: FILE: vlocator.c:313:
+	vlq = vl_hash (key);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#560: FILE: vlocator.c:314:
+	spin_lock (&vlq->lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#561: FILE: vlocator.c:315:
+	vl = __vl_find (vlq, key);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#562: FILE: vlocator.c:316:
+	if (unlikely (vl == NULL))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vl == NULL'
#562: FILE: vlocator.c:316:
+	if (unlikely (vl == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vl"
#562: FILE: vlocator.c:316:
+	if (unlikely (vl == NULL))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#566: FILE: vlocator.c:320:
+	if (unlikely (vl->ops != ops))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vl->ops != ops'
#566: FILE: vlocator.c:320:
+	if (unlikely (vl->ops != ops))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#569: FILE: vlocator.c:323:
+	vl_get (vl);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#572: FILE: vlocator.c:326:
+	spin_unlock (&vlq->lock);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#576: FILE: vlocator.c:330:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#579: FILE: vlocator.c:333:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#582: FILE: vlocator.c:336:
+ *       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#585: FILE: vlocator.c:339:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#589: FILE: vlocator.c:343:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#592: FILE: vlocator.c:346:
+ *            and inserted into the hash. In both cases, it has been $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#599: FILE: vlocator.c:353:
+int vl_find_or_create (struct vlocator **pvl, const union vl_key *key,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#605: FILE: vlocator.c:359:
+	unsigned additions0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#606: FILE: vlocator.c:360:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#607: FILE: vlocator.c:361:
+	ftrace ("(%p, %p, %p, %lx)\n", pvl, key, ops, priv);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#609: FILE: vlocator.c:363:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#611: FILE: vlocator.c:365:
+	vlq = vl_hash (key);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#612: FILE: vlocator.c:366:
+	spin_lock (&vlq->lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#613: FILE: vlocator.c:367:
+	vl = __vl_find (vlq, key);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#614: FILE: vlocator.c:368:
+	if (likely (vl != NULL))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vl != NULL'
#614: FILE: vlocator.c:368:
+	if (likely (vl != NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "vl"
#614: FILE: vlocator.c:368:
+	if (likely (vl != NULL))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#617: FILE: vlocator.c:371:
+	spin_unlock (&vlq->lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#622: FILE: vlocator.c:376:
+	if (unlikely (vl == NULL))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vl == NULL'
#622: FILE: vlocator.c:376:
+	if (unlikely (vl == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vl"
#622: FILE: vlocator.c:376:
+	if (unlikely (vl == NULL))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#624: FILE: vlocator.c:378:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#628: FILE: vlocator.c:382:
+	 * allocations wrapping up the counter in the middle *grin*]. */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#629: FILE: vlocator.c:383:
+	spin_lock (&vlq->lock);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#630: FILE: vlocator.c:384:
+	if (additions0 == vlq->additions

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#631: FILE: vlocator.c:385:
+	if (additions0 == vlq->additions
+	    || (vl_alt = __vl_find_r (vlq, key)) == NULL) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#631: FILE: vlocator.c:385:
+	    || (vl_alt = __vl_find_r (vlq, key)) == NULL) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#632: FILE: vlocator.c:386:
+		result = ops->create (vl, key, priv);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#633: FILE: vlocator.c:387:
+		if (unlikely (result != 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'result != 0'
#633: FILE: vlocator.c:387:
+		if (unlikely (result != 0)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#634: FILE: vlocator.c:388:
+			ops->free (vl);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#638: FILE: vlocator.c:392:
+		__vl_add (vlq, vl);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#641: FILE: vlocator.c:395:
+^I/* Allocation collision, get the new one, discard ours */  $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#642: FILE: vlocator.c:396:
+	ops->free (vl);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#646: FILE: vlocator.c:400:
+	if (unlikely (vl->ops != ops))	/* Check the type is correct */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vl->ops != ops'
#646: FILE: vlocator.c:400:
+	if (unlikely (vl->ops != ops))	/* Check the type is correct */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#650: FILE: vlocator.c:404:
+	vl_get (vl);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#653: FILE: vlocator.c:407:
+	spin_unlock (&vlq->lock);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#658: FILE: vlocator.c:412:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#666: FILE: vlocator.c:420:
+void vl_dispose (struct vlocator *vl)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#671: FILE: vlocator.c:425:
+	vlq = vl_hash (&vl->key);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#672: FILE: vlocator.c:426:
+	spin_lock (&vlq->lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#673: FILE: vlocator.c:427:
+	list_del (&vl->hash_list);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#674: FILE: vlocator.c:428:
+	spin_lock (&__vl_disposal_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#675: FILE: vlocator.c:429:
+	list_add_tail (&vl->hash_list, &__vl_disposal);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#676: FILE: vlocator.c:430:
+	spin_unlock (&__vl_disposal_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#677: FILE: vlocator.c:431:
+	spin_unlock (&vlq->lock);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#680: FILE: vlocator.c:434:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#682: FILE: vlocator.c:436:
+static void vl_garbage_collector (void *);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#685: FILE: vlocator.c:439:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#687: FILE: vlocator.c:441:
+ * Do garbage collection (called from the work-queue) and re-arm $

WARNING:TYPO_SPELLING: 'suport' may be misspelled - perhaps 'support'?
#692: FILE: vlocator.c:446:
+ * suport robustness; kernel based fulocks have to do robustness
    ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#693: FILE: vlocator.c:447:
+ * always. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#696: FILE: vlocator.c:450:
+static $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#697: FILE: vlocator.c:451:
+void __vl_garbage_collect (struct list_head *purge_list,

WARNING:LINE_SPACING: Missing a blank line after declarations
#702: FILE: vlocator.c:456:
+	struct vlocator *vl;
+	list_for_each_safe (itr, nxt, list) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#702: FILE: vlocator.c:456:
+	list_for_each_safe (itr, nxt, list) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#703: FILE: vlocator.c:457:
+		vl = container_of (itr, struct vlocator, hash_list);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#704: FILE: vlocator.c:458:
+		if (__vl_rem (vl))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#705: FILE: vlocator.c:459:
+			list_add_tail (&vl->hash_list, purge_list);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#710: FILE: vlocator.c:464:
+void vl_garbage_collector (void *dummy)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#712: FILE: vlocator.c:466:
+	unsigned cnt;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#714: FILE: vlocator.c:468:
+	struct list_head purge_list = LIST_HEAD_INIT (purge_list);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#717: FILE: vlocator.c:471:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#721: FILE: vlocator.c:475:
+		if (list_empty (&vlq->queue)) /* Some cheating always helps... */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&vlq->queue'
#721: FILE: vlocator.c:475:
+		if (list_empty (&vlq->queue)) /* Some cheating always helps... */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#723: FILE: vlocator.c:477:
+		spin_lock (&vlq->lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#724: FILE: vlocator.c:478:
+		__vl_garbage_collect (&purge_list, &vlq->queue);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#725: FILE: vlocator.c:479:
+		spin_unlock (&vlq->lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#728: FILE: vlocator.c:482:
+	spin_lock (&__vl_disposal_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#729: FILE: vlocator.c:483:
+	__vl_garbage_collect (&purge_list, &__vl_disposal);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#730: FILE: vlocator.c:484:
+	spin_unlock (&__vl_disposal_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#732: FILE: vlocator.c:486:
+	list_for_each_safe (itr, nxt, &purge_list) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#733: FILE: vlocator.c:487:
+		vl = container_of (itr, struct vlocator, hash_list);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#735: FILE: vlocator.c:489:
+			vl->ops->release (vl);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#736: FILE: vlocator.c:490:
+		vl->ops->free (vl);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#738: FILE: vlocator.c:492:
+	schedule_delayed_work (&vl_workqueue, VL_GC_PERIOD * HZ);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#741: FILE: vlocator.c:495:
+
+

WARNING:TYPO_SPELLING: 'Initilize' may be misspelled - perhaps 'Initialize'?
#742: FILE: vlocator.c:496:
+/** Initilize vlocator queue @vlq. */
     ^^^^^^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#744: FILE: vlocator.c:498:
+void vl_queue_init (struct vl_queue *vlq)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#747: FILE: vlocator.c:501:
+	INIT_LIST_HEAD (&vlq->queue);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#753: FILE: vlocator.c:507:
+int __init vl_subsys_init (void)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#755: FILE: vlocator.c:509:
+	unsigned i;

WARNING:LINE_SPACING: Missing a blank line after declarations
#756: FILE: vlocator.c:510:
+	unsigned i;
+	for (i = 0; i < sizeof (__vl_hash) / sizeof (__vl_hash[0]); i++)

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(__vl_hash)
#756: FILE: vlocator.c:510:
+	for (i = 0; i < sizeof (__vl_hash) / sizeof (__vl_hash[0]); i++)

The ARRAY_SIZE(foo) macro should be preferred over
sizeof(foo)/sizeof(foo[0]) for finding number of elements in an
array.

The macro is defined in include/linux/kernel.h::

  #define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#756: FILE: vlocator.c:510:
+	for (i = 0; i < sizeof (__vl_hash) / sizeof (__vl_hash[0]); i++)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#756: FILE: vlocator.c:510:
+	for (i = 0; i < sizeof (__vl_hash) / sizeof (__vl_hash[0]); i++)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#757: FILE: vlocator.c:511:
+		vl_queue_init (&__vl_hash[i]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#759: FILE: vlocator.c:513:
+	schedule_delayed_work (&vl_workqueue, VL_GC_PERIOD * HZ);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#762: FILE: vlocator.c:516:
+__initcall (vl_subsys_init);

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#762: FILE: vlocator.c:516:
+__initcall (vl_subsys_init);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#764: FILE: vlocator.c:518:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000266398.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 53 errors, 187 warnings, 63 checks, 724 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000266398.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
