WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#92: 
  It removes the previous dumb in kernel workaround for this and shrinks the

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#167: FILE: arch/i386/mm/fault.c:75:
+	unsigned seg = regs->xcs & 0xffff;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#176: FILE: arch/i386/mm/fault.c:84:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'privelege' may be misspelled - perhaps 'privilege'?
#182: FILE: arch/i386/mm/fault.c:90:
+	   that kernel/user (ring 0..3) has the appropriate privelege,
 	                                                    ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#182: FILE: arch/i386/mm/fault.c:90:
+	/* Check the segment exists, is within the current LDT/GDT size,
+	   that kernel/user (ring 0..3) has the appropriate privelege,

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#183: FILE: arch/i386/mm/fault.c:91:
+	   that it's a code segment, and get the limit. */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#192: FILE: arch/i386/mm/fault.c:100:
+	if (seg & (1<<2)) {
 	            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#204: FILE: arch/i386/mm/fault.c:112:
+	if (seg & (1<<2))
 	            ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#210: FILE: arch/i386/mm/fault.c:118:
+	/* Adjust EIP and segment limit, and clamp at the kernel limit.
+	   It's legitimate for segments to wrap at 0xffffffff. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#210: FILE: arch/i386/mm/fault.c:118:
+	   It's legitimate for segments to wrap at 0xffffffff. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#217: FILE: arch/i386/mm/fault.c:125:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#222: FILE: arch/i386/mm/fault.c:130:
+{ $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#224: FILE: arch/i386/mm/fault.c:132:
+	unsigned long instr = get_segment_eip (regs, &limit);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#226: FILE: arch/i386/mm/fault.c:134:
+^Iint prefetch = 0; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#229: FILE: arch/i386/mm/fault.c:137:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#231: FILE: arch/i386/mm/fault.c:139:
+^I * More complicated races with unmapped EIP are handled elsewhere for $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#235: FILE: arch/i386/mm/fault.c:143:
+^I^Ireturn 0; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#237: FILE: arch/i386/mm/fault.c:145:
+^Ifor (i = 0; scan_more && i < 15; i++) { $

CHECK:SPACING: No space is necessary after a cast
#244: FILE: arch/i386/mm/fault.c:152:
+		if (__get_user(opcode, (unsigned char *) instr))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#245: FILE: arch/i386/mm/fault.c:153:
+^I^I^Ibreak; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#247: FILE: arch/i386/mm/fault.c:155:
+^I^Iinstr_hi = opcode & 0xf0; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#248: FILE: arch/i386/mm/fault.c:156:
+^I^Iinstr_lo = opcode & 0x0f; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#251: FILE: arch/i386/mm/fault.c:159:
+^I^Iswitch (instr_hi) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#257: FILE: arch/i386/mm/fault.c:165:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#261: FILE: arch/i386/mm/fault.c:169:
+^I^I^Ibreak;^I^I$

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#264: FILE: arch/i386/mm/fault.c:172:
+			scan_more = !instr_lo || (instr_lo>>1) == 1;
 			                                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#265: FILE: arch/i386/mm/fault.c:173:
+^I^I^Ibreak;^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#271: FILE: arch/i386/mm/fault.c:179:
+^I^I^Iif (__get_user(opcode, (unsigned char *) instr)) $

CHECK:SPACING: No space is necessary after a cast
#271: FILE: arch/i386/mm/fault.c:179:
+			if (__get_user(opcode, (unsigned char *) instr)) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#275: FILE: arch/i386/mm/fault.c:183:
+^I^I^Ibreak;^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#279: FILE: arch/i386/mm/fault.c:187:
+^I^I} $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#288: FILE: arch/i386/mm/fault.c:196:
+	/* This code is included only when optimising for AMD, so we
+	   may as well bias in favour of it. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#288: FILE: arch/i386/mm/fault.c:196:
+	   may as well bias in favour of it. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#293: FILE: arch/i386/mm/fault.c:201:
+} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#320: FILE: arch/i386/mm/fault.c:355:
+^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#321: FILE: arch/i386/mm/fault.c:356:
+^I^I * Valid to do another page fault here because this one came $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#334: FILE: arch/i386/mm/fault.c:394:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#336: FILE: arch/i386/mm/fault.c:396:
+^I * had been triggered by is_prefetch fixup_exception would have $

ERROR:CODE_INDENT: code indent should use tabs where possible
#339: FILE: arch/i386/mm/fault.c:399:
+ ^Iif (is_prefetch(regs, address))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#339: FILE: arch/i386/mm/fault.c:399:
+ ^Iif (is_prefetch(regs, address))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#339: FILE: arch/i386/mm/fault.c:399:
+ ^Iif (is_prefetch(regs, address))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#340: FILE: arch/i386/mm/fault.c:400:
+ ^I^Ireturn;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#340: FILE: arch/i386/mm/fault.c:400:
+ ^I^Ireturn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: arch/i386/mm/fault.c:400:
+ ^I^Ireturn;$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#383: FILE: include/asm-i386/cpufeature.h:72:
+#define X86_FEATURE_XMM_PREFETCH	(3*32+ 8) /* SSE */
                                 	  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxW)
#383: FILE: include/asm-i386/cpufeature.h:72:
+#define X86_FEATURE_XMM_PREFETCH	(3*32+ 8) /* SSE */
                                 	     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#384: FILE: include/asm-i386/cpufeature.h:73:
+#define X86_FEATURE_3DNOW_PREFETCH	(3*32+ 9) /* 3DNow! */
                                   	  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxW)
#384: FILE: include/asm-i386/cpufeature.h:73:
+#define X86_FEATURE_3DNOW_PREFETCH	(3*32+ 9) /* 3DNow! */
                                   	     ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000333499.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 25 errors, 14 warnings, 9 checks, 281 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000333499.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
