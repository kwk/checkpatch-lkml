WARNING:TYPO_SPELLING: 'leagacy' may be misspelled - perhaps 'legacy'?
#31: 
leagacy ports dynamically".
^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BAD_SIGN_OFF: Duplicate signature
#53: 
Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:TRAILING_WHITESPACE: trailing whitespace
#107: FILE: arch/ppc64/kernel/setup.c:1138:
+^I};                                                                        $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <serialPortAddr>
#111: FILE: arch/ppc64/kernel/setup.c:1142:
+	naca->serialPortAddr = 0;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:TRAILING_WHITESPACE: trailing whitespace
#135: FILE: arch/ppc64/kernel/setup.c:1166:
+^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: arch/ppc64/kernel/setup.c:1170:
+^I ^Itypep = (char *)get_property(np, "ibm,aix-loc", NULL);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#139: FILE: arch/ppc64/kernel/setup.c:1170:
+^I ^Itypep = (char *)get_property(np, "ibm,aix-loc", NULL);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#142: FILE: arch/ppc64/kernel/setup.c:1173:
+^I^Ireg = (struct isa_reg_property *)get_property(np, "reg", NULL);^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!reg"
#143: FILE: arch/ppc64/kernel/setup.c:1174:
+		if (reg == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#156: FILE: arch/ppc64/kernel/setup.c:1187:
+			index = simple_strtol(typep+1, NULL, 0) - 1;
 			                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#156: FILE: arch/ppc64/kernel/setup.c:1187:
+			index = simple_strtol(typep+1, NULL, 0) - 1;

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rangesp"
#211: FILE: arch/ppc64/kernel/setup.c:1242:
+		if (rangesp == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sizeprop"
#220: FILE: arch/ppc64/kernel/setup.c:1251:
+		if (sizeprop != NULL)

ERROR:SPACING: space required after that ';' (ctx:BxV)
#226: FILE: arch/ppc64/kernel/setup.c:1257:
+		for (;rlen >= rentsize; rlen -= rentsize,rangesp += rentsize) {
 		     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#226: FILE: arch/ppc64/kernel/setup.c:1257:
+		for (;rlen >= rentsize; rlen -= rentsize,rangesp += rentsize) {
 		                                        ^

WARNING:INDENTED_LABEL: labels should not be indented
#239: FILE: arch/ppc64/kernel/setup.c:1270:
+	next_port:

ERROR:SPACING: space required before the open parenthesis '('
#276: FILE: arch/ppc64/kernel/udbg.c:56:
+	switch(speed) {

WARNING:LONG_LINE_COMMENT: line length of 111 exceeds 100 columns
#294: FILE: arch/ppc64/kernel/udbg.c:73:
+		udbg_comport->dll = dll;   eieio();	/* 1 = 115200,  2 = 57600, 3 = 38400, 12 = 9600 baud */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space prohibited after that open parenthesis '('
#409: FILE: include/asm-ppc64/serial.h:23:
+#define BASE_BAUD ( 1843200 / 16 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#409: FILE: include/asm-ppc64/serial.h:23:
+#define BASE_BAUD ( 1843200 / 16 )

ERROR:DEFINE_ARCH_HAS: #define of 'ARCH_HAS_GET_LEGACY_SERIAL_PORTS' is wrong - use Kconfig variables or standard guards instead
#416: FILE: include/asm-ppc64/serial.h:25:
+#define ARCH_HAS_GET_LEGACY_SERIAL_PORTS

The ARCH_HAS_xyz and ARCH_HAVE_xyz patterns are wrong.

For big conceptual features use Kconfig symbols instead.  And for
smaller things where we have compatibility fallback functions but
want architectures able to override them with optimized ones, we
should either use weak functions (appropriate for some cases), or
the symbol that protects them should be the same symbol we use.

See: https://lore.kernel.org/lkml/CA+55aFycQ9XJvEOsiM3txHL5bjUc8CeKWJNR_H+MiicaddB42Q@mail.gmail.com/

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#418: FILE: include/asm-ppc64/serial.h:27:
+extern struct old_serial_port *get_legacy_serial_ports(unsigned int *count);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#430: FILE: arch/ppc64/kernel/pSeries_setup.c:85:
+extern void generic_find_legacy_serial_ports(unsigned int *default_speed);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000238503.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 7 warnings, 6 checks, 463 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000238503.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
