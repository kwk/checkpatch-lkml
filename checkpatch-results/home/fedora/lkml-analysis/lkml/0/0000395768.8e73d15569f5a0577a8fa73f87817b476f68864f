WARNING:TYPO_SPELLING: 'againt' may be misspelled - perhaps 'against'?
#28: 
This applies cleanly againt 2.5.59.  It gets rid of the ugly multi-line
                     ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#50: 
diff -ur linux-2.5.59-thread_info-infra/arch/i386/Kconfig linux-2.5.59-irqstack/arch/i386/Kconfig

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#73: FILE: arch/i386/kernel/apic.c:1041:
+struct pt_regs * IRQHANDLER(smp_apic_timer_interrupt(struct pt_regs* regs));

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#73: FILE: arch/i386/kernel/apic.c:1041:
+struct pt_regs * IRQHANDLER(smp_apic_timer_interrupt(struct pt_regs* regs));

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#73: FILE: arch/i386/kernel/apic.c:1041:
+struct pt_regs * IRQHANDLER(smp_apic_timer_interrupt(struct pt_regs* regs));

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#74: FILE: arch/i386/kernel/apic.c:1042:
+struct pt_regs * smp_apic_timer_interrupt(struct pt_regs* regs)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#74: FILE: arch/i386/kernel/apic.c:1042:
+struct pt_regs * smp_apic_timer_interrupt(struct pt_regs* regs)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#92: FILE: arch/i386/kernel/apic.c:1070:
+struct pt_regs * IRQHANDLER(smp_spurious_interrupt(struct pt_regs* regs));

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#92: FILE: arch/i386/kernel/apic.c:1070:
+struct pt_regs * IRQHANDLER(smp_spurious_interrupt(struct pt_regs* regs));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#93: FILE: arch/i386/kernel/apic.c:1071:
+struct pt_regs * smp_spurious_interrupt(struct pt_regs* regs)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#93: FILE: arch/i386/kernel/apic.c:1071:
+struct pt_regs * smp_spurious_interrupt(struct pt_regs* regs)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#109: FILE: arch/i386/kernel/apic.c:1096:
+struct pt_regs * IRQHANDLER(smp_error_interrupt(struct pt_regs* regs));

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#109: FILE: arch/i386/kernel/apic.c:1096:
+struct pt_regs * IRQHANDLER(smp_error_interrupt(struct pt_regs* regs));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#110: FILE: arch/i386/kernel/apic.c:1097:
+struct pt_regs * smp_error_interrupt(struct pt_regs* regs)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#110: FILE: arch/i386/kernel/apic.c:1097:
+struct pt_regs * smp_error_interrupt(struct pt_regs* regs)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#130: FILE: arch/i386/kernel/cpu/mcheck/p4.c:64:
+struct pt_regs * IRQHANDLER(smp_thermal_interrupt(struct pt_regs* regs));

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#130: FILE: arch/i386/kernel/cpu/mcheck/p4.c:64:
+struct pt_regs * IRQHANDLER(smp_thermal_interrupt(struct pt_regs* regs));

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#130: FILE: arch/i386/kernel/cpu/mcheck/p4.c:64:
+struct pt_regs * IRQHANDLER(smp_thermal_interrupt(struct pt_regs* regs));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#131: FILE: arch/i386/kernel/cpu/mcheck/p4.c:65:
+struct pt_regs * smp_thermal_interrupt(struct pt_regs* regs)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#131: FILE: arch/i386/kernel/cpu/mcheck/p4.c:65:
+struct pt_regs * smp_thermal_interrupt(struct pt_regs* regs)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#159: FILE: arch/i386/kernel/entry.S:403:
+# They take the pt_regs arg and move it from the normal place on the $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#160: FILE: arch/i386/kernel/entry.S:404:
+# stack to %eax.  Any handler function can retrieve it using regparm(1). $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#161: FILE: arch/i386/kernel/entry.S:405:
+# The handlers are expected to return the stack to switch back to in $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#162: FILE: arch/i386/kernel/entry.S:406:
+# the same register. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#169: FILE: arch/i386/kernel/entry.S:413:
+.macro SWITCH_TO_IRQSTACK $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#176: FILE: arch/i386/kernel/entry.S:420:
+^Ileal (THREAD_SIZE-4)(%ecx),%esi; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#197: FILE: arch/i386/kernel/entry.S:441:
+.macro RESTORE_FROM_IRQSTACK $

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#230: FILE: arch/i386/kernel/init_task.c:16:
+union thread_union init_irq_union

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".data.init_task") over __attribute__((__section__(".data.init_task")))
#231: FILE: arch/i386/kernel/init_task.c:17:
+	__attribute__((__section__(".data.init_task")));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#233: FILE: arch/i386/kernel/init_task.c:19:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#245: FILE: arch/i386/kernel/irq.c:314:
+struct pt_regs * IRQHANDLER(do_IRQ(struct pt_regs *regs));

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#245: FILE: arch/i386/kernel/irq.c:314:
+struct pt_regs * IRQHANDLER(do_IRQ(struct pt_regs *regs));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#246: FILE: arch/i386/kernel/irq.c:315:
+struct pt_regs * do_IRQ(struct pt_regs *regs)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#296: FILE: arch/i386/kernel/smp.c:308:
+struct pt_regs * IRQHANDLER(smp_invalidate_interrupt(struct pt_regs *regs));

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#296: FILE: arch/i386/kernel/smp.c:308:
+struct pt_regs * IRQHANDLER(smp_invalidate_interrupt(struct pt_regs *regs));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#297: FILE: arch/i386/kernel/smp.c:309:
+struct pt_regs * smp_invalidate_interrupt(struct pt_regs *regs)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#314: FILE: arch/i386/kernel/smp.c:581:
+struct pt_regs * IRQHANDLER(smp_reschedule_interrupt(struct pt_regs *regs));

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#314: FILE: arch/i386/kernel/smp.c:581:
+struct pt_regs * IRQHANDLER(smp_reschedule_interrupt(struct pt_regs *regs));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#315: FILE: arch/i386/kernel/smp.c:582:
+struct pt_regs * smp_reschedule_interrupt(struct pt_regs *regs)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#322: FILE: arch/i386/kernel/smp.c:588:
+struct pt_regs * IRQHANDLER(smp_call_function_interrupt(struct pt_regs *regs));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#323: FILE: arch/i386/kernel/smp.c:589:
+struct pt_regs * smp_call_function_interrupt(struct pt_regs *regs)

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#342: FILE: arch/i386/kernel/smpboot.c:75:
+extern union thread_union init_irq_union;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#344: FILE: arch/i386/kernel/smpboot.c:77:
+union thread_union *irq_stacks[NR_CPUS] __cacheline_aligned =
+	{ &init_irq_union, };

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#365: FILE: arch/i386/kernel/smpboot.c:792:
+					/* interrupts are not preemptable */
 					                      ^^^^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#374: FILE: arch/i386/kernel/smpboot.c:801:
+
+

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#394: FILE: include/asm-i386/linkage.h:6:
+#define IRQHANDLER(x)	x __attribute__((regparm(1)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'tsk' may be better as '(tsk)' to avoid precedence issues
#438: FILE: include/asm-i386/thread_info.h:69:
+#define INIT_THREAD_INFO(tsk)				\
+{							\
+	.task		= &tsk,         		\
+	.exec_domain	= &default_exec_domain,		\
+	.flags		= 0,				\
+	.cpu		= 0,				\
+	.preempt_count	= 1,				\
+	.addr_limit	= KERNEL_DS,			\
+	.irq_stack	= &init_irq_union.thread_info,	\
+	.restart_block = {				\
+		.fn = do_no_restart_syscall,		\
+	}						\
 }

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#440: FILE: include/asm-i386/thread_info.h:71:
+^I.task^I^I= &tsk,         ^I^I\$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000395768.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 33 errors, 12 warnings, 3 checks, 346 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000395768.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
