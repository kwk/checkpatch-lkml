ERROR:CODE_INDENT: code indent should use tabs where possible
#38: FILE: drivers/net/arlan-proc.c:819:
+        { .ctl_name = num,\$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#38: FILE: drivers/net/arlan-proc.c:819:
+        { .ctl_name = num,\$

ERROR:CODE_INDENT: code indent should use tabs where possible
#39: FILE: drivers/net/arlan-proc.c:820:
+          .procname = #nam,\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#39: FILE: drivers/net/arlan-proc.c:820:
+          .procname = #nam,\$

ERROR:CODE_INDENT: code indent should use tabs where possible
#40: FILE: drivers/net/arlan-proc.c:821:
+          .data = &(arlan_conf[card].nam),\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#40: FILE: drivers/net/arlan-proc.c:821:
+          .data = &(arlan_conf[card].nam),\$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around arlan_conf[card].nam
#40: FILE: drivers/net/arlan-proc.c:821:
+          .data = &(arlan_conf[card].nam),\

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:CODE_INDENT: code indent should use tabs where possible
#41: FILE: drivers/net/arlan-proc.c:822:
+          .maxlen = sizeof(int), .mode = 0600, .proc_handler = &proc_dointvec}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#41: FILE: drivers/net/arlan-proc.c:822:
+          .maxlen = sizeof(int), .mode = 0600, .proc_handler = &proc_dointvec}$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#48: FILE: drivers/net/arlan-proc.c:825:
+#define ARLAN_PROC_DEBUG_ENTRIES \
+        { .ctl_name = 48, .procname = "entry_exit_debug",\
+          .data = &arlan_entry_and_exit_debug,\
+          .maxlen = sizeof(int), .mode = 0600, .proc_handler = &proc_dointvec},\
+	{ .ctl_name = 49, .procname = "debug", .data = &arlan_debug,\
+          .maxlen = sizeof(int), .mode = 0600, .proc_handler = &proc_dointvec},

ERROR:CODE_INDENT: code indent should use tabs where possible
#49: FILE: drivers/net/arlan-proc.c:826:
+        { .ctl_name = 48, .procname = "entry_exit_debug",\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#49: FILE: drivers/net/arlan-proc.c:826:
+        { .ctl_name = 48, .procname = "entry_exit_debug",\$

ERROR:CODE_INDENT: code indent should use tabs where possible
#50: FILE: drivers/net/arlan-proc.c:827:
+          .data = &arlan_entry_and_exit_debug,\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#50: FILE: drivers/net/arlan-proc.c:827:
+          .data = &arlan_entry_and_exit_debug,\$

ERROR:CODE_INDENT: code indent should use tabs where possible
#51: FILE: drivers/net/arlan-proc.c:828:
+          .maxlen = sizeof(int), .mode = 0600, .proc_handler = &proc_dointvec},\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#51: FILE: drivers/net/arlan-proc.c:828:
+          .maxlen = sizeof(int), .mode = 0600, .proc_handler = &proc_dointvec},\$

ERROR:CODE_INDENT: code indent should use tabs where possible
#53: FILE: drivers/net/arlan-proc.c:830:
+          .maxlen = sizeof(int), .mode = 0600, .proc_handler = &proc_dointvec},$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#53: FILE: drivers/net/arlan-proc.c:830:
+          .maxlen = sizeof(int), .mode = 0600, .proc_handler = &proc_dointvec},$

CHECK:CAMELCASE: Avoid CamelCase: <cardNo>
#64: FILE: drivers/net/arlan-proc.c:866:
+	 .data = arlan_conf[cardNo].siteName,\

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <siteName>
#64: FILE: drivers/net/arlan-proc.c:866:
+	 .data = arlan_conf[cardNo].siteName,\

CHECK:CAMELCASE: Avoid CamelCase: <arlan_sysctl_infotxRing>
#95: FILE: drivers/net/arlan-proc.c:911:
+		.proc_handler	= &arlan_sysctl_infotxRing,

CHECK:CAMELCASE: Avoid CamelCase: <arlan_sysctl_inforxRing>
#103: FILE: drivers/net/arlan-proc.c:919:
+		.proc_handler	= &arlan_sysctl_inforxRing,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000393122.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 8 warnings, 5 checks, 427 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000393122.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
