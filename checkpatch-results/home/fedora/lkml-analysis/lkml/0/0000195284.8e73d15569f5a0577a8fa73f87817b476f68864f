WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
Content-Disposition: attachment; filename=kexec-tools-crashdump-elf-headers-x86.patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#63: FILE: kexec/arch/i386/crashdump-x86.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#79: FILE: kexec/arch/i386/crashdump-x86.c:17:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#80: FILE: kexec/arch/i386/crashdump-x86.c:18:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#101: FILE: kexec/arch/i386/crashdump-x86.c:39:
+ * A separate program header is created for backup region */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:STATIC_CONST_CHAR_ARRAY: const array should probably be static const
#120: FILE: kexec/arch/i386/crashdump-x86.c:58:
+	const char iomem[]= "/proc/iomem";

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#120: FILE: kexec/arch/i386/crashdump-x86.c:58:
+	const char iomem[]= "/proc/iomem";
 	                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#134: FILE: kexec/arch/i386/crashdump-x86.c:72:
+	 * 640K in different manner hence hardcoding it */

ERROR:SPACING: space required before the open parenthesis '('
#140: FILE: kexec/arch/i386/crashdump-x86.c:78:
+	while(fgets(line, sizeof(line), fp) != 0) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#143: FILE: kexec/arch/i386/crashdump-x86.c:81:
+		int type, consumed, count;
+		if (memory_ranges >= CRASH_MAX_MEMORY_RANGES)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#145: FILE: kexec/arch/i386/crashdump-x86.c:83:
+		count = sscanf(line, "%Lx-%Lx : %n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#146: FILE: kexec/arch/i386/crashdump-x86.c:84:
+		count = sscanf(line, "%Lx-%Lx : %n",
+			&start, &end, &consumed);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#150: FILE: kexec/arch/i386/crashdump-x86.c:88:
+#if 0

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#151: FILE: kexec/arch/i386/crashdump-x86.c:89:
+		printf("%016Lx-%016Lx : %s",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#152: FILE: kexec/arch/i386/crashdump-x86.c:90:
+		printf("%016Lx-%016Lx : %s",
+			start, end, str);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#157: FILE: kexec/arch/i386/crashdump-x86.c:95:
+		} else if (memcmp(str, "Crash kernel\n", 13) == 0) {
[...]
+				crash_reserved_mem.start = start;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#159: FILE: kexec/arch/i386/crashdump-x86.c:97:
+				 * use this region to boot into. */

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#181: FILE: kexec/arch/i386/crashdump-x86.c:119:
+#if 0

WARNING:LINE_SPACING: Missing a blank line after declarations
#183: FILE: kexec/arch/i386/crashdump-x86.c:121:
+	int i;
+	printf("CRASH MEMORY RANGES\n");

ERROR:SPACING: space required before the open parenthesis '('
#184: FILE: kexec/arch/i386/crashdump-x86.c:122:
+	for(i = 0; i < memory_ranges; i++) {

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#187: FILE: kexec/arch/i386/crashdump-x86.c:125:
+		printf("%016Lx-%016Lx\n", start, end);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#195: FILE: kexec/arch/i386/crashdump-x86.c:133:
+ * continuous area fully contained inside one of the memory chunks */

WARNING:LINE_SPACING: Missing a blank line after declarations
#208: FILE: kexec/arch/i386/crashdump-x86.c:146:
+		unsigned long long mstart, mend;
+		mstart = crash_memory_range[i].start;

CHECK:BRACES: braces {} should be used on all arms of this statement
#211: FILE: kexec/arch/i386/crashdump-x86.c:149:
+			if (cstart != mstart && cend != mend) {
[...]
+			} else if (cstart != mstart)
[...]
+			else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#217: FILE: kexec/arch/i386/crashdump-x86.c:155:
+				tidx = i+1;
 				        ^

WARNING:TYPO_SPELLING: 'excedeed' may be misspelled - perhaps 'exceeded'?
#229: FILE: kexec/arch/i386/crashdump-x86.c:167:
+					" excedeed the max limit\n");
 					  ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPLIT_STRING: quoted string split across lines
#229: FILE: kexec/arch/i386/crashdump-x86.c:167:
+			fprintf(stderr, "Error: Number of crash memory ranges"
+					" excedeed the max limit\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#233: FILE: kexec/arch/i386/crashdump-x86.c:171:
+			crash_memory_range[j+1] = crash_memory_range[j];
 			                    ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#243: FILE: kexec/arch/i386/crashdump-x86.c:181:
+ * boot. Segment start and end should be aligned to 1K boundary. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#245: FILE: kexec/arch/i386/crashdump-x86.c:183:
+int add_memmap(struct memory_range *memmap_p, unsigned long long addr,
+								size_t size)

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#251: FILE: kexec/arch/i386/crashdump-x86.c:189:
+	if ((addr%align) || (size%align))
 	         ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#251: FILE: kexec/arch/i386/crashdump-x86.c:189:
+	if ((addr%align) || (size%align))
 	                         ^

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#260: FILE: kexec/arch/i386/crashdump-x86.c:198:
+			break;
+		else

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#271: FILE: kexec/arch/i386/crashdump-x86.c:209:
+		if (mstart <= (addr+size-1) && mend >=addr)
 		                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#271: FILE: kexec/arch/i386/crashdump-x86.c:209:
+		if (mstart <= (addr+size-1) && mend >=addr)
 		                        ^

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#271: FILE: kexec/arch/i386/crashdump-x86.c:209:
+		if (mstart <= (addr+size-1) && mend >=addr)
 		                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#275: FILE: kexec/arch/i386/crashdump-x86.c:213:
+			tidx = i+1;
 			        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#278: FILE: kexec/arch/i386/crashdump-x86.c:216:
+		for (j = nr_entries-1; j >= tidx; j--)
 		                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#279: FILE: kexec/arch/i386/crashdump-x86.c:217:
+			memmap_p[j+1] = memmap_p[j];
 			          ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#282: FILE: kexec/arch/i386/crashdump-x86.c:220:
+#if 0

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#290: FILE: kexec/arch/i386/crashdump-x86.c:228:
+		printf("%016llx - %016llx\n",
+			mstart, mend);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#297: FILE: kexec/arch/i386/crashdump-x86.c:235:
+ * boot. Segment start and end should be aligned to 1K boundary. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#299: FILE: kexec/arch/i386/crashdump-x86.c:237:
+int delete_memmap(struct memory_range *memmap_p, unsigned long long addr,
+								size_t size)

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#306: FILE: kexec/arch/i386/crashdump-x86.c:244:
+	if ((addr%align) || (size%align))
 	         ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#306: FILE: kexec/arch/i386/crashdump-x86.c:244:
+	if ((addr%align) || (size%align))
 	                         ^

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#315: FILE: kexec/arch/i386/crashdump-x86.c:253:
+			break;
+		else

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#349: FILE: kexec/arch/i386/crashdump-x86.c:287:
+				break;
+			} else {

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#355: FILE: kexec/arch/i386/crashdump-x86.c:293:
+	if ((operation == 1) && tidx >=0) {
 	                             ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'operation == 1'
#355: FILE: kexec/arch/i386/crashdump-x86.c:293:
+	if ((operation == 1) && tidx >=0) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#357: FILE: kexec/arch/i386/crashdump-x86.c:295:
+		for (j = nr_entries-1; j > tidx; j--)
 		                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#358: FILE: kexec/arch/i386/crashdump-x86.c:296:
+			memmap_p[j+1] = memmap_p[j];
 			          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#359: FILE: kexec/arch/i386/crashdump-x86.c:297:
+		memmap_p[tidx+1] = temp_region;
 		             ^

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#361: FILE: kexec/arch/i386/crashdump-x86.c:299:
+	if ((operation == -1) && tidx >=0) {
 	                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#363: FILE: kexec/arch/i386/crashdump-x86.c:301:
+		for (j = i+1; j < CRASH_MAX_MEMMAP_NR; j++)
 		          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#364: FILE: kexec/arch/i386/crashdump-x86.c:302:
+			memmap_p[j-1] = memmap_p[j];
 			          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#365: FILE: kexec/arch/i386/crashdump-x86.c:303:
+		memmap_p[j-1].start = memmap_p[j-1].end = 0;
 		          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#365: FILE: kexec/arch/i386/crashdump-x86.c:303:
+		memmap_p[j-1].start = memmap_p[j-1].end = 0;
 		                                ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#365: FILE: kexec/arch/i386/crashdump-x86.c:303:
+		memmap_p[j-1].start = memmap_p[j-1].end = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#367: FILE: kexec/arch/i386/crashdump-x86.c:305:
+#if 0

WARNING:BRACES: braces {} are not necessary for single statement blocks
#372: FILE: kexec/arch/i386/crashdump-x86.c:310:
+		if (mstart == 0 && mend == 0) {
+			break;
+		}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#376: FILE: kexec/arch/i386/crashdump-x86.c:314:
+		printf("%016llx - %016llx\n",
+			mstart, mend);

ERROR:SPACING: spaces required around that '/=' (ctx:WxV)
#390: FILE: kexec/arch/i386/crashdump-x86.c:328:
+	} while ((i /=10) > 0);
 	            ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#402: FILE: kexec/arch/i386/crashdump-x86.c:340:
+ * memory regions the new kernel can use to boot into. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#418: FILE: kexec/arch/i386/crashdump-x86.c:356:
+		unsigned long startk, endk;
+		startk = (memmap_p[i].start/1024);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#418: FILE: kexec/arch/i386/crashdump-x86.c:356:
+		startk = (memmap_p[i].start/1024);
 		                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#419: FILE: kexec/arch/i386/crashdump-x86.c:357:
+		endk = ((memmap_p[i].end + 1)/1024);
 		                             ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#425: FILE: kexec/arch/i386/crashdump-x86.c:363:
+		 * up precious command line length. */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#428: FILE: kexec/arch/i386/crashdump-x86.c:366:
+		strcpy (str_mmap, " memmap=");

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#429: FILE: kexec/arch/i386/crashdump-x86.c:367:
+		ultoa((endk-startk), str_tmp);
 		           ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#430: FILE: kexec/arch/i386/crashdump-x86.c:368:
+		strcat (str_mmap, str_tmp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#431: FILE: kexec/arch/i386/crashdump-x86.c:369:
+		strcat (str_mmap, "K@");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#433: FILE: kexec/arch/i386/crashdump-x86.c:371:
+		strcat (str_mmap, str_tmp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#434: FILE: kexec/arch/i386/crashdump-x86.c:372:
+		strcat (str_mmap, "K");

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#442: FILE: kexec/arch/i386/crashdump-x86.c:380:
+#if 0

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#456: FILE: kexec/arch/i386/crashdump-x86.c:394:
+	 * Ensure 1K alignment*/

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#457: FILE: kexec/arch/i386/crashdump-x86.c:395:
+	if (addr%align)
 	        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#459: FILE: kexec/arch/i386/crashdump-x86.c:397:
+	addr = addr/align;
 	           ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#470: FILE: kexec/arch/i386/crashdump-x86.c:408:
+#if 0

WARNING:STATIC_CONST_CHAR_ARRAY: const array should probably be static const
#480: FILE: kexec/arch/i386/crashdump-x86.c:418:
+	const char crash_notes[]= "/sys/kernel/crash_notes";

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#480: FILE: kexec/arch/i386/crashdump-x86.c:418:
+	const char crash_notes[]= "/sys/kernel/crash_notes";
 	                        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#494: FILE: kexec/arch/i386/crashdump-x86.c:432:
+		int count;
+		count = sscanf(line, "%lx", addr);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#494: FILE: kexec/arch/i386/crashdump-x86.c:432:
+		count = sscanf(line, "%lx", addr);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#499: FILE: kexec/arch/i386/crashdump-x86.c:437:
+#if 0

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#508: FILE: kexec/arch/i386/crashdump-x86.c:446:
+int prepare_crash_memory_elf64_headers(struct kexec_info *info, void *buf,
+					unsigned long size)

CHECK:CAMELCASE: Avoid CamelCase: <Elf64_Ehdr>
#510: FILE: kexec/arch/i386/crashdump-x86.c:448:
+	Elf64_Ehdr *elf;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Elf64_Phdr>
#511: FILE: kexec/arch/i386/crashdump-x86.c:449:
+	Elf64_Phdr *phdr;

WARNING:UNNECESSARY_INT: Prefer 'long' over 'long int' as the int is unnecessary
#514: FILE: kexec/arch/i386/crashdump-x86.c:452:
+	long int nr_cpus = 0;

CHECK:SPACING: No space is necessary after a cast
#517: FILE: kexec/arch/i386/crashdump-x86.c:455:
+	bufp = (char*) buf;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#517: FILE: kexec/arch/i386/crashdump-x86.c:455:
+	bufp = (char*) buf;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#520: FILE: kexec/arch/i386/crashdump-x86.c:458:
+	elf = (Elf64_Ehdr *) bufp;

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#525: FILE: kexec/arch/i386/crashdump-x86.c:463:
+	elf->e_ident[EI_VERSION]= EV_CURRENT;
 	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#527: FILE: kexec/arch/i386/crashdump-x86.c:465:
+	memset(elf->e_ident+EI_PAD, 0, EI_NIDENT-EI_PAD);
 	                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#527: FILE: kexec/arch/i386/crashdump-x86.c:465:
+	memset(elf->e_ident+EI_PAD, 0, EI_NIDENT-EI_PAD);
 	                                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#536: FILE: kexec/arch/i386/crashdump-x86.c:474:
+	elf->e_phentsize= sizeof(Elf64_Phdr);
 	                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#538: FILE: kexec/arch/i386/crashdump-x86.c:476:
+	elf->e_shentsize= 0;
 	                ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#544: FILE: kexec/arch/i386/crashdump-x86.c:482:
+	if (nr_cpus < 0) {
+		return -1;
+	}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#550: FILE: kexec/arch/i386/crashdump-x86.c:488:
+	if (get_crash_notes_section_addr (&notes_addr) < 0) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&notes_addr'
#550: FILE: kexec/arch/i386/crashdump-x86.c:488:
+	if (get_crash_notes_section_addr (&notes_addr) < 0) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#550: FILE: kexec/arch/i386/crashdump-x86.c:488:
+	if (get_crash_notes_section_addr (&notes_addr) < 0) {
+		return -1;
+	}

CHECK:SPACING: No space is necessary after a cast
#555: FILE: kexec/arch/i386/crashdump-x86.c:493:
+		phdr = (Elf64_Phdr *) bufp;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#560: FILE: kexec/arch/i386/crashdump-x86.c:498:
+		phdr->p_vaddr	= phdr->p_paddr	= notes_offset;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#561: FILE: kexec/arch/i386/crashdump-x86.c:499:
+		phdr->p_filesz	= phdr->p_memsz	= MAX_NOTE_BYTES;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#564: FILE: kexec/arch/i386/crashdump-x86.c:502:
+^I^Inotes_offset ^I+= MAX_NOTE_BYTES;$

WARNING:TYPO_SPELLING: 'seprate' may be misspelled - perhaps 'separate'?
#571: FILE: kexec/arch/i386/crashdump-x86.c:509:
+	 * A seprate program header for Backup Region*/
 	     ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#571: FILE: kexec/arch/i386/crashdump-x86.c:509:
+	 * A seprate program header for Backup Region*/

WARNING:LINE_SPACING: Missing a blank line after declarations
#574: FILE: kexec/arch/i386/crashdump-x86.c:512:
+		unsigned long long mstart, mend;
+		mstart = crash_memory_range[i].start;

CHECK:SPACING: No space is necessary after a cast
#578: FILE: kexec/arch/i386/crashdump-x86.c:516:
+		phdr = (Elf64_Phdr *) bufp;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#581: FILE: kexec/arch/i386/crashdump-x86.c:519:
+		phdr->p_flags	= PF_R|PF_W|PF_X;
 		             	      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#581: FILE: kexec/arch/i386/crashdump-x86.c:519:
+		phdr->p_flags	= PF_R|PF_W|PF_X;
 		             	           ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#586: FILE: kexec/arch/i386/crashdump-x86.c:524:
+		phdr->p_vaddr = phdr->p_paddr = mstart;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#587: FILE: kexec/arch/i386/crashdump-x86.c:525:
+		phdr->p_filesz	= phdr->p_memsz	= mend - mstart + 1;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#599: FILE: kexec/arch/i386/crashdump-x86.c:537:
+int prepare_crash_memory_elf32_headers(struct kexec_info *info, void *buf,
+					unsigned long size)

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Ehdr>
#601: FILE: kexec/arch/i386/crashdump-x86.c:539:
+	Elf32_Ehdr *elf;

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Phdr>
#602: FILE: kexec/arch/i386/crashdump-x86.c:540:
+	Elf32_Phdr *phdr;

WARNING:UNNECESSARY_INT: Prefer 'long' over 'long int' as the int is unnecessary
#605: FILE: kexec/arch/i386/crashdump-x86.c:543:
+	long int nr_cpus = 0;

CHECK:SPACING: No space is necessary after a cast
#608: FILE: kexec/arch/i386/crashdump-x86.c:546:
+	bufp = (char*) buf;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#608: FILE: kexec/arch/i386/crashdump-x86.c:546:
+	bufp = (char*) buf;

CHECK:SPACING: No space is necessary after a cast
#611: FILE: kexec/arch/i386/crashdump-x86.c:549:
+	elf = (Elf32_Ehdr *) bufp;

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#616: FILE: kexec/arch/i386/crashdump-x86.c:554:
+	elf->e_ident[EI_VERSION]= EV_CURRENT;
 	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#618: FILE: kexec/arch/i386/crashdump-x86.c:556:
+	memset(elf->e_ident+EI_PAD, 0, EI_NIDENT-EI_PAD);
 	                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#618: FILE: kexec/arch/i386/crashdump-x86.c:556:
+	memset(elf->e_ident+EI_PAD, 0, EI_NIDENT-EI_PAD);
 	                                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#627: FILE: kexec/arch/i386/crashdump-x86.c:565:
+	elf->e_phentsize= sizeof(Elf32_Phdr);
 	                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#629: FILE: kexec/arch/i386/crashdump-x86.c:567:
+	elf->e_shentsize= 0;
 	                ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#635: FILE: kexec/arch/i386/crashdump-x86.c:573:
+	if (nr_cpus < 0) {
+		return -1;
+	}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#641: FILE: kexec/arch/i386/crashdump-x86.c:579:
+	if (get_crash_notes_section_addr (&notes_addr) < 0) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&notes_addr'
#641: FILE: kexec/arch/i386/crashdump-x86.c:579:
+	if (get_crash_notes_section_addr (&notes_addr) < 0) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#641: FILE: kexec/arch/i386/crashdump-x86.c:579:
+	if (get_crash_notes_section_addr (&notes_addr) < 0) {
+		return -1;
+	}

CHECK:SPACING: No space is necessary after a cast
#646: FILE: kexec/arch/i386/crashdump-x86.c:584:
+		phdr = (Elf32_Phdr *) bufp;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#651: FILE: kexec/arch/i386/crashdump-x86.c:589:
+		phdr->p_vaddr	= phdr->p_paddr	= notes_offset;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#652: FILE: kexec/arch/i386/crashdump-x86.c:590:
+		phdr->p_filesz	= phdr->p_memsz	= MAX_NOTE_BYTES;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#655: FILE: kexec/arch/i386/crashdump-x86.c:593:
+^I^Inotes_offset ^I+= MAX_NOTE_BYTES;$

WARNING:TYPO_SPELLING: 'seprate' may be misspelled - perhaps 'separate'?
#662: FILE: kexec/arch/i386/crashdump-x86.c:600:
+	 * A seprate program header for Backup Region*/
 	     ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#662: FILE: kexec/arch/i386/crashdump-x86.c:600:
+	 * A seprate program header for Backup Region*/

WARNING:LINE_SPACING: Missing a blank line after declarations
#665: FILE: kexec/arch/i386/crashdump-x86.c:603:
+		unsigned long long mstart, mend;
+		mstart = crash_memory_range[i].start;

CHECK:SPACING: No space is necessary after a cast
#669: FILE: kexec/arch/i386/crashdump-x86.c:607:
+		phdr = (Elf32_Phdr *) bufp;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#672: FILE: kexec/arch/i386/crashdump-x86.c:610:
+		phdr->p_flags	= PF_R|PF_W|PF_X;
 		             	      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#672: FILE: kexec/arch/i386/crashdump-x86.c:610:
+		phdr->p_flags	= PF_R|PF_W|PF_X;
 		             	           ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#677: FILE: kexec/arch/i386/crashdump-x86.c:615:
+		phdr->p_vaddr = phdr->p_paddr = mstart;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#678: FILE: kexec/arch/i386/crashdump-x86.c:616:
+		phdr->p_filesz	= phdr->p_memsz	= mend - mstart + 1;

ERROR:POINTER_LOCATION: "foo** bar" should be "foo **bar"
#693: FILE: kexec/arch/i386/crashdump-x86.h:4:
+int get_crash_memory_ranges(struct memory_range** range, int* ranges);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#693: FILE: kexec/arch/i386/crashdump-x86.h:4:
+int get_crash_memory_ranges(struct memory_range** range, int* ranges);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#695: FILE: kexec/arch/i386/crashdump-x86.h:6:
+int prepare_crash_memory_elf32_headers(struct kexec_info *info, void *buf,
+						unsigned long size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#697: FILE: kexec/arch/i386/crashdump-x86.h:8:
+int prepare_crash_memory_elf64_headers(struct kexec_info *info, void *buf,
+						unsigned long size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#699: FILE: kexec/arch/i386/crashdump-x86.h:10:
+int add_memmap(struct memory_range *memmap_p, unsigned long long addr,
+								size_t size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#701: FILE: kexec/arch/i386/crashdump-x86.h:12:
+int delete_memmap(struct memory_range *memmap_p, unsigned long long addr,
+								size_t size);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#708: FILE: kexec/arch/i386/crashdump-x86.h:19:
+#define __pa(x)		((unsigned long)(x)-PAGE_OFFSET)
                		                   ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#725: FILE: kexec/arch/i386/kexec-elf-x86.c:46:
+static int load_crashdump_segments(struct kexec_info*, int, char*,
+					unsigned long, unsigned long);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#760: FILE: kexec/arch/i386/kexec-elf-x86.c:114:
+#define OPT_ELF32_CORE  (OPT_ARCH_MAX+5)
                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#761: FILE: kexec/arch/i386/kexec-elf-x86.c:115:
+#define OPT_ELF64_CORE  (OPT_ARCH_MAX+6)
                                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#810: FILE: kexec/arch/i386/kexec-elf-x86.c:192:
+			strncpy(modified_cmdline, command_line,
+						COMMAND_LINE_SIZE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#865: FILE: kexec/arch/i386/kexec-elf-x86.c:281:
+			rc = load_crashdump_segments(info, core_header_type,
+						modified_cmdline, max_addr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#885: FILE: kexec/arch/i386/kexec-elf-x86.c:318:
+static int load_crashdump_segments(struct kexec_info *info, int core_type,
+				char* mod_cmdline, unsigned long max_addr,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#885: FILE: kexec/arch/i386/kexec-elf-x86.c:318:
+				char* mod_cmdline, unsigned long max_addr,

WARNING:UNNECESSARY_INT: Prefer 'long' over 'long int' as the int is unnecessary
#891: FILE: kexec/arch/i386/kexec-elf-x86.c:324:
+	long int nr_cpus = 0;

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#902: FILE: kexec/arch/i386/kexec-elf-x86.c:335:
+	sz = crash_reserved_mem.end - crash_reserved_mem.start +1;
 	                                                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#910: FILE: kexec/arch/i386/kexec-elf-x86.c:343:
+	info->backup_start = add_buffer(info, tmp, sz, sz, align,
+				0, max_addr, 1);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#917: FILE: kexec/arch/i386/kexec-elf-x86.c:350:
+		fprintf(stderr,"kexec_load (elf header segment)"
 		              ^

WARNING:SPLIT_STRING: quoted string split across lines
#918: FILE: kexec/arch/i386/kexec-elf-x86.c:351:
+		fprintf(stderr,"kexec_load (elf header segment)"
+			" failed: %s\n", strerror(errno));

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#922: FILE: kexec/arch/i386/kexec-elf-x86.c:355:
+^I^Isz = ^Isizeof(Elf64_Ehdr) +$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#926: FILE: kexec/arch/i386/kexec-elf-x86.c:359:
+^I^Isz = ^Isizeof(Elf32_Ehdr) +$

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#930: FILE: kexec/arch/i386/kexec-elf-x86.c:363:
+	sz = (sz + align - 1) & ~(align -1);
 	                                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#941: FILE: kexec/arch/i386/kexec-elf-x86.c:374:
+	elfcorehdr = add_buffer(info, tmp, sz, sz, align, min_base,
+							max_addr, 1);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000195284.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 22 errors, 61 warnings, 79 checks, 889 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000195284.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
