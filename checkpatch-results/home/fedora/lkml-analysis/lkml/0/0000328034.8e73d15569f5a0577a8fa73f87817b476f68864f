WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
--- linux-2.4.orig/drivers/net/wan/Makefile	2003-10-24 22:49:52.000000000 +0200

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#55: FILE: drivers/net/wan/hd64572.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#56: FILE: drivers/net/wan/hd64572.h:2:
+ * hd64572.h^IDescription of the Hitachi HD64572 (SCA-II), valid for $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#57: FILE: drivers/net/wan/hd64572.h:3:
+ * ^I^ICPU modes 0 & 2.$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#97: FILE: drivers/net/wan/hd64572.h:43:
+#define	M_REG(reg, chan)	(reg + 0x80*chan)	       /* MSCI */
        	                	           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#97: FILE: drivers/net/wan/hd64572.h:43:
+#define	M_REG(reg, chan)	(reg + 0x80*chan)	       /* MSCI */

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'chan' may be better as '(chan)' to avoid precedence issues
#97: FILE: drivers/net/wan/hd64572.h:43:
+#define	M_REG(reg, chan)	(reg + 0x80*chan)	       /* MSCI */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#98: FILE: drivers/net/wan/hd64572.h:44:
+#define	DRX_REG(reg, chan)	(reg + 0x40*chan)	       /* DMA Rx */
        	                  	           ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#98: FILE: drivers/net/wan/hd64572.h:44:
+#define	DRX_REG(reg, chan)	(reg + 0x40*chan)	       /* DMA Rx */

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'chan' may be better as '(chan)' to avoid precedence issues
#98: FILE: drivers/net/wan/hd64572.h:44:
+#define	DRX_REG(reg, chan)	(reg + 0x40*chan)	       /* DMA Rx */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#99: FILE: drivers/net/wan/hd64572.h:45:
+#define	DTX_REG(reg, chan)	(reg + 0x20*(2*chan + 1))      /* DMA Tx */
        	                  	           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#99: FILE: drivers/net/wan/hd64572.h:45:
+#define	DTX_REG(reg, chan)	(reg + 0x20*(2*chan + 1))      /* DMA Tx */
        	                  	              ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#99: FILE: drivers/net/wan/hd64572.h:45:
+#define	DTX_REG(reg, chan)	(reg + 0x20*(2*chan + 1))      /* DMA Tx */

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'chan' may be better as '(chan)' to avoid precedence issues
#99: FILE: drivers/net/wan/hd64572.h:45:
+#define	DTX_REG(reg, chan)	(reg + 0x20*(2*chan + 1))      /* DMA Tx */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#100: FILE: drivers/net/wan/hd64572.h:46:
+#define	TRX_REG(reg, chan)	(reg + 0x20*chan)	       /* Timer Rx */
        	                  	           ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#100: FILE: drivers/net/wan/hd64572.h:46:
+#define	TRX_REG(reg, chan)	(reg + 0x20*chan)	       /* Timer Rx */

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'chan' may be better as '(chan)' to avoid precedence issues
#100: FILE: drivers/net/wan/hd64572.h:46:
+#define	TRX_REG(reg, chan)	(reg + 0x20*chan)	       /* Timer Rx */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#101: FILE: drivers/net/wan/hd64572.h:47:
+#define	TTX_REG(reg, chan)	(reg + 0x10*(2*chan + 1))      /* Timer Tx */
        	                  	           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#101: FILE: drivers/net/wan/hd64572.h:47:
+#define	TTX_REG(reg, chan)	(reg + 0x10*(2*chan + 1))      /* Timer Tx */
        	                  	              ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#101: FILE: drivers/net/wan/hd64572.h:47:
+#define	TTX_REG(reg, chan)	(reg + 0x10*(2*chan + 1))      /* Timer Tx */

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'chan' may be better as '(chan)' to avoid precedence issues
#101: FILE: drivers/net/wan/hd64572.h:47:
+#define	TTX_REG(reg, chan)	(reg + 0x10*(2*chan + 1))      /* Timer Tx */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#102: FILE: drivers/net/wan/hd64572.h:48:
+#define	ST_REG(reg, chan)	(reg + 0x80*chan)	       /* Status Cnt */
        	                 	           ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#102: FILE: drivers/net/wan/hd64572.h:48:
+#define	ST_REG(reg, chan)	(reg + 0x80*chan)	       /* Status Cnt */

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'chan' may be better as '(chan)' to avoid precedence issues
#102: FILE: drivers/net/wan/hd64572.h:48:
+#define	ST_REG(reg, chan)	(reg + 0x80*chan)	       /* Status Cnt */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#103: FILE: drivers/net/wan/hd64572.h:49:
+#define IR0_DRX(val, chan)	((val)<<(8*(chan)))	       /* Int DMA Rx */
                           	      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#103: FILE: drivers/net/wan/hd64572.h:49:
+#define IR0_DRX(val, chan)	((val)<<(8*(chan)))	       /* Int DMA Rx */
                           	          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#104: FILE: drivers/net/wan/hd64572.h:50:
+#define IR0_DTX(val, chan)	((val)<<(4*(2*chan + 1)))      /* Int DMA Tx */
                           	      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#104: FILE: drivers/net/wan/hd64572.h:50:
+#define IR0_DTX(val, chan)	((val)<<(4*(2*chan + 1)))      /* Int DMA Tx */
                           	          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#104: FILE: drivers/net/wan/hd64572.h:50:
+#define IR0_DTX(val, chan)	((val)<<(4*(2*chan + 1)))      /* Int DMA Tx */
                           	             ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'chan' may be better as '(chan)' to avoid precedence issues
#104: FILE: drivers/net/wan/hd64572.h:50:
+#define IR0_DTX(val, chan)	((val)<<(4*(2*chan + 1)))      /* Int DMA Tx */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#105: FILE: drivers/net/wan/hd64572.h:51:
+#define IR0_M(val, chan)	((val)<<(8*(chan)))	       /* Int MSCI */
                         	      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#105: FILE: drivers/net/wan/hd64572.h:51:
+#define IR0_M(val, chan)	((val)<<(8*(chan)))	       /* Int MSCI */
                         	          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#137: FILE: drivers/net/wan/hd64572.h:83:
+#define TRBL^I0x100^I/* TX/RX buffer reg L */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#138: FILE: drivers/net/wan/hd64572.h:84:
+#define TRBK^I0x101^I/* TX/RX buffer reg K */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#139: FILE: drivers/net/wan/hd64572.h:85:
+#define TRBJ^I0x102^I/* TX/RX buffer reg J */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#140: FILE: drivers/net/wan/hd64572.h:86:
+#define TRBH^I0x103^I/* TX/RX buffer reg H */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#141: FILE: drivers/net/wan/hd64572.h:87:
+#define TRC0^I0x148^I/* TX Ready control reg 0 */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#142: FILE: drivers/net/wan/hd64572.h:88:
+#define TRC1^I0x149^I/* TX Ready control reg 1 */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#143: FILE: drivers/net/wan/hd64572.h:89:
+#define RRC^I0x14a^I/* RX Ready control reg */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#144: FILE: drivers/net/wan/hd64572.h:90:
+#define CST0^I0x108^I/* Current Status Register 0 */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#145: FILE: drivers/net/wan/hd64572.h:91:
+#define CST1^I0x109^I/* Current Status Register 1 */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#146: FILE: drivers/net/wan/hd64572.h:92:
+#define CST2^I0x10a^I/* Current Status Register 2 */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#147: FILE: drivers/net/wan/hd64572.h:93:
+#define CST3^I0x10b^I/* Current Status Register 3 */ $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#179: FILE: drivers/net/wan/hd64572.h:125:
+#define DSR_RX(chan)	(0x48 + 2*chan)	/* DMA Status Reg (Rx) */
                     	         ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'chan' may be better as '(chan)' to avoid precedence issues
#179: FILE: drivers/net/wan/hd64572.h:125:
+#define DSR_RX(chan)	(0x48 + 2*chan)	/* DMA Status Reg (Rx) */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#180: FILE: drivers/net/wan/hd64572.h:126:
+#define DSR_TX(chan)	(0x49 + 2*chan)	/* DMA Status Reg (Tx) */
                     	         ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'chan' may be better as '(chan)' to avoid precedence issues
#180: FILE: drivers/net/wan/hd64572.h:126:
+#define DSR_TX(chan)	(0x49 + 2*chan)	/* DMA Status Reg (Tx) */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#181: FILE: drivers/net/wan/hd64572.h:127:
+#define DIR_RX(chan)	(0x4c + 2*chan)	/* DMA Interrupt Enable Reg (Rx) */
                     	         ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'chan' may be better as '(chan)' to avoid precedence issues
#181: FILE: drivers/net/wan/hd64572.h:127:
+#define DIR_RX(chan)	(0x4c + 2*chan)	/* DMA Interrupt Enable Reg (Rx) */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#182: FILE: drivers/net/wan/hd64572.h:128:
+#define DIR_TX(chan)	(0x4d + 2*chan)	/* DMA Interrupt Enable Reg (Tx) */
                     	         ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'chan' may be better as '(chan)' to avoid precedence issues
#182: FILE: drivers/net/wan/hd64572.h:128:
+#define DIR_TX(chan)	(0x4d + 2*chan)	/* DMA Interrupt Enable Reg (Tx) */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#183: FILE: drivers/net/wan/hd64572.h:129:
+#define FCT_RX(chan)	(0x50 + 2*chan)	/* Frame End Interrupt Counter (Rx) */
                     	         ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'chan' may be better as '(chan)' to avoid precedence issues
#183: FILE: drivers/net/wan/hd64572.h:129:
+#define FCT_RX(chan)	(0x50 + 2*chan)	/* Frame End Interrupt Counter (Rx) */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#184: FILE: drivers/net/wan/hd64572.h:130:
+#define FCT_TX(chan)	(0x51 + 2*chan)	/* Frame End Interrupt Counter (Tx) */
                     	         ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'chan' may be better as '(chan)' to avoid precedence issues
#184: FILE: drivers/net/wan/hd64572.h:130:
+#define FCT_TX(chan)	(0x51 + 2*chan)	/* Frame End Interrupt Counter (Tx) */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#185: FILE: drivers/net/wan/hd64572.h:131:
+#define DMR_RX(chan)	(0x54 + 2*chan)	/* DMA Mode Reg (Rx) */
                     	         ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'chan' may be better as '(chan)' to avoid precedence issues
#185: FILE: drivers/net/wan/hd64572.h:131:
+#define DMR_RX(chan)	(0x54 + 2*chan)	/* DMA Mode Reg (Rx) */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#186: FILE: drivers/net/wan/hd64572.h:132:
+#define DMR_TX(chan)	(0x55 + 2*chan)	/* DMA Mode Reg (Tx) */
                     	         ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'chan' may be better as '(chan)' to avoid precedence issues
#186: FILE: drivers/net/wan/hd64572.h:132:
+#define DMR_TX(chan)	(0x55 + 2*chan)	/* DMA Mode Reg (Tx) */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#187: FILE: drivers/net/wan/hd64572.h:133:
+#define DCR_RX(chan)	(0x58 + 2*chan)	/* DMA Command Reg (Rx) */
                     	         ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'chan' may be better as '(chan)' to avoid precedence issues
#187: FILE: drivers/net/wan/hd64572.h:133:
+#define DCR_RX(chan)	(0x58 + 2*chan)	/* DMA Command Reg (Rx) */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#188: FILE: drivers/net/wan/hd64572.h:134:
+#define DCR_TX(chan)	(0x59 + 2*chan)	/* DMA Command Reg (Tx) */
                     	         ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'chan' may be better as '(chan)' to avoid precedence issues
#188: FILE: drivers/net/wan/hd64572.h:134:
+#define DCR_TX(chan)	(0x59 + 2*chan)	/* DMA Command Reg (Tx) */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#223: FILE: drivers/net/wan/hd64572.h:169:
+typedef struct {

ERROR:SPACING: space required after that close brace '}'
#229: FILE: drivers/net/wan/hd64572.h:175:
+}pkt_desc;

WARNING:TYPO_SPELLING: 'transmition' may be misspelled - perhaps 'transmission'?
#236: FILE: drivers/net/wan/hd64572.h:182:
+#define ST_TX_EOT     0x01	/* End of transmition */
                           	          ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#380: FILE: drivers/net/wan/hd64572.h:326:
+#define CLK_LINE    ^I0x00^I/* clock line input */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#381: FILE: drivers/net/wan/hd64572.h:327:
+#define CLK_BRG     ^I0x40^I/* internal baud rate generator */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#459: FILE: drivers/net/wan/hd64572.h:405:
+#define IE0_TXINT     ^I0x00000080 /* TX INT MSCI interrupt enable */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#460: FILE: drivers/net/wan/hd64572.h:406:
+#define IE0_UDRN      ^I0x00008000 /* TX underrun MSCI interrupt enable */$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#546: FILE: drivers/net/wan/pci200syn.c:1:
+/*

WARNING:INCLUDE_LINUX: Use #include <linux/delay.h> instead of <asm/delay.h>
#577: FILE: drivers/net/wan/pci200syn.c:32:
+#include <asm/delay.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#578: FILE: drivers/net/wan/pci200syn.c:33:
+#include <asm/io.h>

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#582: FILE: drivers/net/wan/pci200syn.c:37:
+static const char* version = "Goramo PCI200SYN driver version: 1.14";

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#583: FILE: drivers/net/wan/pci200syn.c:38:
+static const char* devname = "PCI200SYN";

CHECK:LINE_SPACING: Please don't use multiple blank lines
#597: FILE: drivers/net/wan/pci200syn.c:52:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#599: FILE: drivers/net/wan/pci200syn.c:54:
+/*
+ *      PLX PCI9052 local configuration and shared runtime registers.

WARNING:NEW_TYPEDEFS: do not add new typedefs
#602: FILE: drivers/net/wan/pci200syn.c:57:
+typedef struct {

ERROR:SPACING: space required after that close brace '}'
#612: FILE: drivers/net/wan/pci200syn.c:67:
+}plx9052;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#614: FILE: drivers/net/wan/pci200syn.c:69:
+
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#616: FILE: drivers/net/wan/pci200syn.c:71:
+typedef struct port_s {

ERROR:SPACING: space required after that close brace '}'
#629: FILE: drivers/net/wan/pci200syn.c:84:
+}port_t;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#631: FILE: drivers/net/wan/pci200syn.c:86:
+
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#633: FILE: drivers/net/wan/pci200syn.c:88:
+typedef struct card_s {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#635: FILE: drivers/net/wan/pci200syn.c:90:
+	u8* rambase;		/* buffer memory base (virtual) */

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#638: FILE: drivers/net/wan/pci200syn.c:93:
+	u8* scabase;		/* SCA memory base (virtual) */

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#640: FILE: drivers/net/wan/pci200syn.c:95:
+	plx9052* plxbase;	/* PLX registers memory base (virtual) */

ERROR:SPACING: space required after that close brace '}'
#647: FILE: drivers/net/wan/pci200syn.c:102:
+}card_t;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#649: FILE: drivers/net/wan/pci200syn.c:104:
+
+

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'card' may be better as '(card)' to avoid precedence issues
#650: FILE: drivers/net/wan/pci200syn.c:105:
+#define sca_in(reg, card)	     readb(card->scabase + (reg))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'card' may be better as '(card)' to avoid precedence issues
#651: FILE: drivers/net/wan/pci200syn.c:106:
+#define sca_out(value, reg, card)    writeb(value, card->scabase + (reg))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'card' may be better as '(card)' to avoid precedence issues
#652: FILE: drivers/net/wan/pci200syn.c:107:
+#define sca_inw(reg, card)	     readw(card->scabase + (reg))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'card' may be better as '(card)' to avoid precedence issues
#653: FILE: drivers/net/wan/pci200syn.c:108:
+#define sca_outw(value, reg, card)   writew(value, card->scabase + (reg))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'card' may be better as '(card)' to avoid precedence issues
#654: FILE: drivers/net/wan/pci200syn.c:109:
+#define sca_inl(reg, card)	     readl(card->scabase + (reg))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'card' may be better as '(card)' to avoid precedence issues
#655: FILE: drivers/net/wan/pci200syn.c:110:
+#define sca_outl(value, reg, card)   writel(value, card->scabase + (reg))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'port' may be better as '(port)' to avoid precedence issues
#657: FILE: drivers/net/wan/pci200syn.c:112:
+#define port_to_card(port)	     (port->card)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'port' may be better as '(port)' to avoid precedence issues
#658: FILE: drivers/net/wan/pci200syn.c:113:
+#define log_node(port)		     (port->phy_node)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'port' may be better as '(port)' to avoid precedence issues
#659: FILE: drivers/net/wan/pci200syn.c:114:
+#define phy_node(port)		     (port->phy_node)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#660: FILE: drivers/net/wan/pci200syn.c:115:
+#define winbase(card)      ^I     (card->rambase)$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'card' may be better as '(card)' to avoid precedence issues
#660: FILE: drivers/net/wan/pci200syn.c:115:
+#define winbase(card)      	     (card->rambase)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'card' may be better as '(card)' to avoid precedence issues
#661: FILE: drivers/net/wan/pci200syn.c:116:
+#define get_port(card, port)	     (&card->ports[port])

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#662: FILE: drivers/net/wan/pci200syn.c:117:
+#define sca_flush(card)		     (sca_in(IER0, card));

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:LINE_SPACING: Missing a blank line after declarations
#667: FILE: drivers/net/wan/pci200syn.c:122:
+	int len;
+	do {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#682: FILE: drivers/net/wan/pci200syn.c:137:
+
+

ERROR:SPACING: space required before the open parenthesis '('
#692: FILE: drivers/net/wan/pci200syn.c:147:
+	switch(port->settings.clock_type) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#721: FILE: drivers/net/wan/pci200syn.c:176:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#729: FILE: drivers/net/wan/pci200syn.c:184:
+	int result = hdlc_open(hdlc);
+	if (result)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#739: FILE: drivers/net/wan/pci200syn.c:194:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#744: FILE: drivers/net/wan/pci200syn.c:199:
+	hdlc_device *hdlc = dev_to_hdlc(dev);
+	sca_close(hdlc);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#751: FILE: drivers/net/wan/pci200syn.c:206:
+
+

ERROR:SPACING: space required before the open parenthesis '('
#769: FILE: drivers/net/wan/pci200syn.c:224:
+	switch(ifr->ifr_settings.type) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#788: FILE: drivers/net/wan/pci200syn.c:243:
+		if (new_line.clock_type != CLOCK_EXT &&
[...]
+		return -EINVAL;	/* No such clock setting */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#807: FILE: drivers/net/wan/pci200syn.c:262:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#812: FILE: drivers/net/wan/pci200syn.c:267:
+        card_t *card = pci_get_drvdata(pdev);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#812: FILE: drivers/net/wan/pci200syn.c:267:
+        card_t *card = pci_get_drvdata(pdev);$

ERROR:SPACING: space required before the open parenthesis '('
#814: FILE: drivers/net/wan/pci200syn.c:269:
+	for(i = 0; i < 2; i++)

ERROR:CODE_INDENT: code indent should use tabs where possible
#823: FILE: drivers/net/wan/pci200syn.c:278:
+        pci_release_regions(pdev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#823: FILE: drivers/net/wan/pci200syn.c:278:
+        pci_release_regions(pdev);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#827: FILE: drivers/net/wan/pci200syn.c:282:
+
+

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#829: FILE: drivers/net/wan/pci200syn.c:284:
+static int __devinit pci200_pci_init_one(struct pci_dev *pdev,

ERROR:CODE_INDENT: code indent should use tabs where possible
#838: FILE: drivers/net/wan/pci200syn.c:293:
+        static int printed_version;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#838: FILE: drivers/net/wan/pci200syn.c:293:
+        static int printed_version;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#839: FILE: drivers/net/wan/pci200syn.c:294:
+        if (!printed_version++)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#839: FILE: drivers/net/wan/pci200syn.c:294:
+        static int printed_version;
+        if (!printed_version++)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#839: FILE: drivers/net/wan/pci200syn.c:294:
+        if (!printed_version++)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#840: FILE: drivers/net/wan/pci200syn.c:295:
+                printk(KERN_INFO "%s\n", version);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#840: FILE: drivers/net/wan/pci200syn.c:295:
+                printk(KERN_INFO "%s\n", version);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#840: FILE: drivers/net/wan/pci200syn.c:295:
+                printk(KERN_INFO "%s\n", version);

ERROR:CODE_INDENT: code indent should use tabs where possible
#847: FILE: drivers/net/wan/pci200syn.c:302:
+        i = pci_request_regions(pdev, "PCI200SYN");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#847: FILE: drivers/net/wan/pci200syn.c:302:
+        i = pci_request_regions(pdev, "PCI200SYN");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#849: FILE: drivers/net/wan/pci200syn.c:304:
+                return i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#849: FILE: drivers/net/wan/pci200syn.c:304:
+                return i;$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!card"
#852: FILE: drivers/net/wan/pci200syn.c:307:
+	if (card == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#853: FILE: drivers/net/wan/pci200syn.c:308:
+		printk(KERN_ERR "pci200syn: unable to allocate memory\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#853: FILE: drivers/net/wan/pci200syn.c:308:
+	if (card == NULL) {
+		printk(KERN_ERR "pci200syn: unable to allocate memory\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#863: FILE: drivers/net/wan/pci200syn.c:318:
+		printk(KERN_ERR "pci200syn: invalid card EEPROM parameters\n");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#868: FILE: drivers/net/wan/pci200syn.c:323:
+	card->plxphys = pci_resource_start(pdev,0) & PCI_BASE_ADDRESS_MEM_MASK;
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#871: FILE: drivers/net/wan/pci200syn.c:326:
+	card->scaphys = pci_resource_start(pdev,2) & PCI_BASE_ADDRESS_MEM_MASK;
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#874: FILE: drivers/net/wan/pci200syn.c:329:
+	card->ramphys = pci_resource_start(pdev,3) & PCI_BASE_ADDRESS_MEM_MASK;
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#875: FILE: drivers/net/wan/pci200syn.c:330:
+	card->rambase = ioremap(card->ramphys, pci_resource_len(pdev,3));
 	                                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#888: FILE: drivers/net/wan/pci200syn.c:343:
+				       pci_resource_len(pdev,3));
 				                            ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#898: FILE: drivers/net/wan/pci200syn.c:353:
+	printk(KERN_INFO "pci200syn: %u KB RAM at 0x%x, IRQ%u, using %u TX +"

WARNING:SPLIT_STRING: quoted string split across lines
#899: FILE: drivers/net/wan/pci200syn.c:354:
+	printk(KERN_INFO "pci200syn: %u KB RAM at 0x%x, IRQ%u, using %u TX +"
+	       " %u RX packets rings\n", card->ramsize / 1024,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#904: FILE: drivers/net/wan/pci200syn.c:359:
+		printk(KERN_ERR "pci200syn: RAM test failed\n");

ERROR:SPACING: space required before the open parenthesis '('
#914: FILE: drivers/net/wan/pci200syn.c:369:
+	if(request_irq(pdev->irq, sca_intr, SA_SHIRQ, devname, card)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#915: FILE: drivers/net/wan/pci200syn.c:370:
+		printk(KERN_WARNING "pci200syn: could not allocate IRQ%d.\n",

ERROR:SPACING: space required before the open parenthesis '('
#924: FILE: drivers/net/wan/pci200syn.c:379:
+	for(i = 0; i < 2; i++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#927: FILE: drivers/net/wan/pci200syn.c:382:
+		struct net_device *dev = hdlc_to_dev(&port->hdlc);
+		port->phy_node = i;

ERROR:SPACING: space required before the open parenthesis '('
#940: FILE: drivers/net/wan/pci200syn.c:395:
+		if(register_hdlc_device(&port->hdlc)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#941: FILE: drivers/net/wan/pci200syn.c:396:
+			printk(KERN_ERR "pci200syn: unable to register hdlc "

WARNING:SPLIT_STRING: quoted string split across lines
#942: FILE: drivers/net/wan/pci200syn.c:397:
+			printk(KERN_ERR "pci200syn: unable to register hdlc "
+			       "device\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#949: FILE: drivers/net/wan/pci200syn.c:404:
+		printk(KERN_INFO "%s: PCI200SYN node %d\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#957: FILE: drivers/net/wan/pci200syn.c:412:
+
+

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#959: FILE: drivers/net/wan/pci200syn.c:414:
+static struct pci_device_id pci200_pci_tbl[] __devinitdata = {

ERROR:CODE_INDENT: code indent should use tabs where possible
#960: FILE: drivers/net/wan/pci200syn.c:415:
+        { PCI_VENDOR_ID_GORAMO, PCI_DEVICE_ID_PCI200SYN, PCI_ANY_ID,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#960: FILE: drivers/net/wan/pci200syn.c:415:
+        { PCI_VENDOR_ID_GORAMO, PCI_DEVICE_ID_PCI200SYN, PCI_ANY_ID,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#962: FILE: drivers/net/wan/pci200syn.c:417:
+        { 0, }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#962: FILE: drivers/net/wan/pci200syn.c:417:
+        { 0, }$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#965: FILE: drivers/net/wan/pci200syn.c:420:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#967: FILE: drivers/net/wan/pci200syn.c:422:
+        name:           "PCI200SYN",$

WARNING:INDENTED_LABEL: labels should not be indented
#967: FILE: drivers/net/wan/pci200syn.c:422:
+        name:           "PCI200SYN",

ERROR:CODE_INDENT: code indent should use tabs where possible
#968: FILE: drivers/net/wan/pci200syn.c:423:
+        id_table:       pci200_pci_tbl,$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#968: FILE: drivers/net/wan/pci200syn.c:423:
+        id_table:       pci200_pci_tbl,
                 ^

WARNING:INDENTED_LABEL: labels should not be indented
#968: FILE: drivers/net/wan/pci200syn.c:423:
+        id_table:       pci200_pci_tbl,

ERROR:CODE_INDENT: code indent should use tabs where possible
#969: FILE: drivers/net/wan/pci200syn.c:424:
+        probe:          pci200_pci_init_one,$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#969: FILE: drivers/net/wan/pci200syn.c:424:
+        probe:          pci200_pci_init_one,
              ^

WARNING:INDENTED_LABEL: labels should not be indented
#969: FILE: drivers/net/wan/pci200syn.c:424:
+        probe:          pci200_pci_init_one,

ERROR:CODE_INDENT: code indent should use tabs where possible
#970: FILE: drivers/net/wan/pci200syn.c:425:
+        remove:         pci200_pci_remove_one,$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#970: FILE: drivers/net/wan/pci200syn.c:425:
+        remove:         pci200_pci_remove_one,
               ^

WARNING:INDENTED_LABEL: labels should not be indented
#970: FILE: drivers/net/wan/pci200syn.c:425:
+        remove:         pci200_pci_remove_one,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#973: FILE: drivers/net/wan/pci200syn.c:428:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#977: FILE: drivers/net/wan/pci200syn.c:432:
+        printk(KERN_INFO "%s\n", version);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#977: FILE: drivers/net/wan/pci200syn.c:432:
+        printk(KERN_INFO "%s\n", version);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#977: FILE: drivers/net/wan/pci200syn.c:432:
+        printk(KERN_INFO "%s\n", version);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#980: FILE: drivers/net/wan/pci200syn.c:435:
+		printk(KERN_ERR "pci200syn: Invalid PCI clock frequency\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#986: FILE: drivers/net/wan/pci200syn.c:441:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000328034.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 49 errors, 53 warnings, 74 checks, 976 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000328034.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
