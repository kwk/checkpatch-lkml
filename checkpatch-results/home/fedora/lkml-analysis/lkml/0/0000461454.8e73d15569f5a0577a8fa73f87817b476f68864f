WARNING:TYPO_SPELLING: 'appropraite' may be misspelled - perhaps 'appropriate'?
#64: 
support related, so if it would be me appropraite to take this
                                      ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#89: FILE: arch/i386/kernel/pci-irq.c:581:
+	printk(KERN_WARNING "IRQ for %s:%d", dev->slot_name, pin);

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#97: FILE: arch/i386/kernel/pci-irq.c:594:
+	printk(KERN_WARNING " -> PIRQ 0x%02x, mask 0x%04x, excl 0x%04x\n", pirq, mask, pirq_table->exclusive_irqs);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#97: FILE: arch/i386/kernel/pci-irq.c:594:
+	printk(KERN_WARNING " -> PIRQ 0x%02x, mask 0x%04x, excl 0x%04x\n", pirq, mask, pirq_table->exclusive_irqs);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#103: FILE: arch/i386/kernel/pci-irq.c:600:
+	printk(KERN_WARNING "Let's see what we have...\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#104: FILE: arch/i386/kernel/pci-irq.c:601:
+	printk(KERN_WARNING "  Vendor:  0x%04x\n", dev->vendor);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#105: FILE: arch/i386/kernel/pci-irq.c:602:
+	printk(KERN_WARNING "  Device:  0x%04x\n", dev->device);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#106: FILE: arch/i386/kernel/pci-irq.c:603:
+	printk(KERN_WARNING "  IRQ:  %d\n", dev->irq);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#107: FILE: arch/i386/kernel/pci-irq.c:604:
+	printk(KERN_WARNING "  mask:  0x%04x\n", mask);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#108: FILE: arch/i386/kernel/pci-irq.c:605:
+	printk(KERN_WARNING "  pirq:  0x%04x\n", pirq);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#110: FILE: arch/i386/kernel/pci-irq.c:607:
+	if ((dev->vendor == 0x1106)
[...]
+	    printk(KERN_WARNING "Looks like a faulty HP BIOS.  Setting USB hub to IRQ 9!\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->vendor == 0x1106'
#110: FILE: arch/i386/kernel/pci-irq.c:607:
+	if ((dev->vendor == 0x1106)
+	    && (dev->device == 0x3038)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->device == 0x3038'
#110: FILE: arch/i386/kernel/pci-irq.c:607:
+	if ((dev->vendor == 0x1106)
+	    && (dev->device == 0x3038)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#111: FILE: arch/i386/kernel/pci-irq.c:608:
+	if ((dev->vendor == 0x1106)
+	    && (dev->device == 0x3038)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#112: FILE: arch/i386/kernel/pci-irq.c:609:
+	    printk(KERN_WARNING "Looks like a faulty HP BIOS.  Setting USB hub to IRQ 9!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#116: FILE: arch/i386/kernel/pci-irq.c:613:
+	    printk(KERN_WARNING "IRQ set to %d\n", dev->irq);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#119: FILE: arch/i386/kernel/pci-irq.c:616:
 	if (broken_hp_bios_irq9 && pirq == 0x59 && dev->irq == 9) {
+	  printk(KERN_WARNING "We must have a broken hp bios %d with IRQ of 9, reset to 11.\n", broken_hp_bios_irq9);

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#120: FILE: arch/i386/kernel/pci-irq.c:617:
+	  printk(KERN_WARNING "We must have a broken hp bios %d with IRQ of 9, reset to 11.\n", broken_hp_bios_irq9);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#120: FILE: arch/i386/kernel/pci-irq.c:617:
+	  printk(KERN_WARNING "We must have a broken hp bios %d with IRQ of 9, reset to 11.\n", broken_hp_bios_irq9);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#128: FILE: arch/i386/kernel/pci-irq.c:640:
+	printk(KERN_WARNING " -> newirq=%d\n", newirq);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#134: FILE: arch/i386/kernel/pci-irq.c:646:
+		printk(KERN_WARNING " -> hardcoded IRQ %d\n", irq);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#137: FILE: arch/i386/kernel/pci-irq.c:648:
+	} else if (r->get && (irq = r->get(pirq_router_dev, dev, pirq))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#138: FILE: arch/i386/kernel/pci-irq.c:649:
+	} else if (r->get && (irq = r->get(pirq_router_dev, dev, pirq))
+		   && !((dev->vendor == 0x1106)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#139: FILE: arch/i386/kernel/pci-irq.c:650:
+		   && !((dev->vendor == 0x1106)
+			&& (dev->device == 0x3038))) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: arch/i386/kernel/pci-irq.c:651:
+^I        printk(KERN_WARNING "Got IRQ %d by virtue of JSlupski's fix\n", irq);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#140: FILE: arch/i386/kernel/pci-irq.c:651:
+	        printk(KERN_WARNING "Got IRQ %d by virtue of JSlupski's fix\n", irq);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#142: FILE: arch/i386/kernel/pci-irq.c:653:
+		printk(KERN_WARNING " -> got IRQ %d\n", irq);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#146: FILE: arch/i386/kernel/pci-irq.c:657:
+		printk(KERN_WARNING " -> assigning IRQ %d", newirq);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#150: FILE: arch/i386/kernel/pci-irq.c:661:
+			printk(KERN_WARNING " ... OK\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#158: FILE: arch/i386/kernel/pci-irq.c:669:
+		printk(KERN_WARNING " ... failed newirq = %d and mask is 0x%04x\n", newirq, mask);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#166: FILE: arch/i386/kernel/pci-irq.c:676:
+	printk(KERN_WARNING "PCI: %s IRQ %d for device %s\n", msg, irq, dev->slot_name);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000461454.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 24 warnings, 5 checks, 89 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000461454.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
