WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
> Al is correct, of course.  But the patch takes bad_inode.o from 280 up to 703

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#42: 
> static int bad_file_release(struct inode * inode, struct file * filp)
                                                                  ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#44: 
> static int bad_file_fsync(struct inode * inode, struct file * filp)
                                                                ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#101: FILE: fs/bad_inode.c:41:
+static long * return_EIO_ptr(void)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_loff") over __attribute__((alias("return_EIO_loff")))
#109: FILE: fs/bad_inode.c:49:
+	__attribute__((alias("return_EIO_loff")));

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#111: FILE: fs/bad_inode.c:51:
+static ssize_t bad_file_read(struct file *filp, char __user *buf,
                                           ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#112: FILE: fs/bad_inode.c:52:
+static ssize_t bad_file_read(struct file *filp, char __user *buf,
+			size_t size, loff_t *ppos)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_ssize") over __attribute__((alias("return_EIO_ssize")))
#113: FILE: fs/bad_inode.c:53:
+	__attribute__((alias("return_EIO_ssize")));

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#115: FILE: fs/bad_inode.c:55:
+static ssize_t bad_file_write(struct file *filp, const char __user *buf,
                                            ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#116: FILE: fs/bad_inode.c:56:
+static ssize_t bad_file_write(struct file *filp, const char __user *buf,
+			size_t siz, loff_t *ppos)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_ssize") over __attribute__((alias("return_EIO_ssize")))
#117: FILE: fs/bad_inode.c:57:
+	__attribute__((alias("return_EIO_ssize")));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#120: FILE: fs/bad_inode.c:60:
+static ssize_t bad_file_aio_read(struct kiocb *iocb, const struct iovec *iov,
+			unsigned long nr_segs, loff_t pos)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_ssize") over __attribute__((alias("return_EIO_ssize")))
#121: FILE: fs/bad_inode.c:61:
+	__attribute__((alias("return_EIO_ssize")));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#124: FILE: fs/bad_inode.c:64:
+static ssize_t bad_file_aio_write(struct kiocb *iocb, const struct iovec *iov,
+			unsigned long nr_segs, loff_t pos)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_ssize") over __attribute__((alias("return_EIO_ssize")))
#125: FILE: fs/bad_inode.c:65:
+	__attribute__((alias("return_EIO_ssize")));

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#127: FILE: fs/bad_inode.c:67:
+static int bad_file_readdir(struct file * filp, void * dirent,
                                           ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#127: FILE: fs/bad_inode.c:67:
+static int bad_file_readdir(struct file * filp, void * dirent,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#127: FILE: fs/bad_inode.c:67:
+static int bad_file_readdir(struct file * filp, void * dirent,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#128: FILE: fs/bad_inode.c:68:
+static int bad_file_readdir(struct file * filp, void * dirent,
+			filldir_t filldir)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_int") over __attribute__((alias("return_EIO_int")))
#129: FILE: fs/bad_inode.c:69:
+	__attribute__((alias("return_EIO_int")));

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#131: FILE: fs/bad_inode.c:71:
+static unsigned int bad_file_poll(struct file *filp, poll_table *wait)
                                                ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#136: FILE: fs/bad_inode.c:76:
+static int bad_file_ioctl (struct inode * inode, struct file * filp,
                                                                ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#136: FILE: fs/bad_inode.c:76:
+static int bad_file_ioctl (struct inode * inode, struct file * filp,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#136: FILE: fs/bad_inode.c:76:
+static int bad_file_ioctl (struct inode * inode, struct file * filp,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#136: FILE: fs/bad_inode.c:76:
+static int bad_file_ioctl (struct inode * inode, struct file * filp,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#137: FILE: fs/bad_inode.c:77:
+static int bad_file_ioctl (struct inode * inode, struct file * filp,
+			unsigned int cmd, unsigned long arg)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_int") over __attribute__((alias("return_EIO_int")))
#138: FILE: fs/bad_inode.c:78:
+	__attribute__((alias("return_EIO_int")));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#140: FILE: fs/bad_inode.c:80:
+static long bad_file_unlocked_ioctl(struct file *file, unsigned cmd,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#141: FILE: fs/bad_inode.c:81:
+static long bad_file_unlocked_ioctl(struct file *file, unsigned cmd,
+			unsigned long arg)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_long") over __attribute__((alias("return_EIO_long")))
#142: FILE: fs/bad_inode.c:82:
+	__attribute__((alias("return_EIO_long")));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#145: FILE: fs/bad_inode.c:85:
+static long bad_file_compat_ioctl(struct file *file, unsigned int cmd,
+			unsigned long arg)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_long") over __attribute__((alias("return_EIO_long")))
#146: FILE: fs/bad_inode.c:86:
+	__attribute__((alias("return_EIO_long")));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#148: FILE: fs/bad_inode.c:88:
+static int bad_file_mmap(struct file * file, struct vm_area_struct * vma)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#148: FILE: fs/bad_inode.c:88:
+static int bad_file_mmap(struct file * file, struct vm_area_struct * vma)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_int") over __attribute__((alias("return_EIO_int")))
#149: FILE: fs/bad_inode.c:89:
+	__attribute__((alias("return_EIO_int")));

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#151: FILE: fs/bad_inode.c:91:
+static int bad_file_open(struct inode * inode, struct file * filp)
                                                              ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#151: FILE: fs/bad_inode.c:91:
+static int bad_file_open(struct inode * inode, struct file * filp)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#151: FILE: fs/bad_inode.c:91:
+static int bad_file_open(struct inode * inode, struct file * filp)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_int") over __attribute__((alias("return_EIO_int")))
#152: FILE: fs/bad_inode.c:92:
+	__attribute__((alias("return_EIO_int")));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_int") over __attribute__((alias("return_EIO_int")))
#155: FILE: fs/bad_inode.c:95:
+	__attribute__((alias("return_EIO_int")));

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#157: FILE: fs/bad_inode.c:97:
+static int bad_file_release(struct inode * inode, struct file * filp)
                                                                 ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#157: FILE: fs/bad_inode.c:97:
+static int bad_file_release(struct inode * inode, struct file * filp)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#157: FILE: fs/bad_inode.c:97:
+static int bad_file_release(struct inode * inode, struct file * filp)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_int") over __attribute__((alias("return_EIO_int")))
#158: FILE: fs/bad_inode.c:98:
+	__attribute__((alias("return_EIO_int")));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#160: FILE: fs/bad_inode.c:100:
+static int bad_file_fsync(struct file * file, struct dentry *dentry,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#161: FILE: fs/bad_inode.c:101:
+static int bad_file_fsync(struct file * file, struct dentry *dentry,
+			int datasync)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_int") over __attribute__((alias("return_EIO_int")))
#162: FILE: fs/bad_inode.c:102:
+	__attribute__((alias("return_EIO_int")));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_int") over __attribute__((alias("return_EIO_int")))
#165: FILE: fs/bad_inode.c:105:
+	__attribute__((alias("return_EIO_int")));

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#167: FILE: fs/bad_inode.c:107:
+static int bad_file_fasync(int fd, struct file *filp, int on)
                                                 ^^^^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_int") over __attribute__((alias("return_EIO_int")))
#168: FILE: fs/bad_inode.c:108:
+	__attribute__((alias("return_EIO_int")));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_int") over __attribute__((alias("return_EIO_int")))
#171: FILE: fs/bad_inode.c:111:
+	__attribute__((alias("return_EIO_int")));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#174: FILE: fs/bad_inode.c:114:
+static ssize_t bad_file_sendfile(struct file *in_file, loff_t *ppos,
+			size_t count, read_actor_t actor, void *target)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_ssize") over __attribute__((alias("return_EIO_ssize")))
#175: FILE: fs/bad_inode.c:115:
+	__attribute__((alias("return_EIO_ssize")));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#178: FILE: fs/bad_inode.c:118:
+static ssize_t bad_file_sendpage(struct file *file, struct page *page,
+			int off, size_t len, loff_t *pos, int more)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_ssize") over __attribute__((alias("return_EIO_ssize")))
#179: FILE: fs/bad_inode.c:119:
+	__attribute__((alias("return_EIO_ssize")));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#183: FILE: fs/bad_inode.c:123:
+static unsigned long bad_file_get_unmapped_area(struct file *file,
+				unsigned long addr, unsigned long len,

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_long") over __attribute__((alias("return_EIO_long")))
#185: FILE: fs/bad_inode.c:125:
+	__attribute__((alias("return_EIO_long")));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_int") over __attribute__((alias("return_EIO_int")))
#188: FILE: fs/bad_inode.c:128:
+	__attribute__((alias("return_EIO_int")));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#190: FILE: fs/bad_inode.c:130:
+static int bad_file_dir_notify(struct file * file, unsigned long arg)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_int") over __attribute__((alias("return_EIO_int")))
#191: FILE: fs/bad_inode.c:131:
+	__attribute__((alias("return_EIO_int")));

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#193: FILE: fs/bad_inode.c:133:
+static int bad_file_flock(struct file *filp, int cmd, struct file_lock *fl)
                                        ^^^^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_int") over __attribute__((alias("return_EIO_int")))
#194: FILE: fs/bad_inode.c:134:
+	__attribute__((alias("return_EIO_int")));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#197: FILE: fs/bad_inode.c:137:
+static ssize_t bad_file_splice_write(struct pipe_inode_info *pipe,
+			struct file *out, loff_t *ppos, size_t len,

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_ssize") over __attribute__((alias("return_EIO_ssize")))
#199: FILE: fs/bad_inode.c:139:
+	__attribute__((alias("return_EIO_ssize")));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#202: FILE: fs/bad_inode.c:142:
+static ssize_t bad_file_splice_read(struct file *in, loff_t *ppos,
+			struct pipe_inode_info *pipe, size_t len,

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_ssize") over __attribute__((alias("return_EIO_ssize")))
#204: FILE: fs/bad_inode.c:144:
+	__attribute__((alias("return_EIO_ssize")));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#257: FILE: fs/bad_inode.c:178:
+static int bad_inode_create (struct inode * dir, struct dentry * dentry,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#257: FILE: fs/bad_inode.c:178:
+static int bad_inode_create (struct inode * dir, struct dentry * dentry,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#257: FILE: fs/bad_inode.c:178:
+static int bad_inode_create (struct inode * dir, struct dentry * dentry,

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#258: FILE: fs/bad_inode.c:179:
+		int mode, struct nameidata *nd)
 		                            ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#258: FILE: fs/bad_inode.c:179:
+static int bad_inode_create (struct inode * dir, struct dentry * dentry,
+		int mode, struct nameidata *nd)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_int") over __attribute__((alias("return_EIO_int")))
#259: FILE: fs/bad_inode.c:180:
+	__attribute__((alias("return_EIO_int")));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#261: FILE: fs/bad_inode.c:182:
+static struct dentry *bad_inode_lookup(struct inode * dir,

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#262: FILE: fs/bad_inode.c:183:
+			struct dentry *dentry, struct nameidata *nd)
 			                                         ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#262: FILE: fs/bad_inode.c:183:
+static struct dentry *bad_inode_lookup(struct inode * dir,
+			struct dentry *dentry, struct nameidata *nd)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_ptr") over __attribute__((alias("return_EIO_ptr")))
#263: FILE: fs/bad_inode.c:184:
+	__attribute__((alias("return_EIO_ptr")));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#265: FILE: fs/bad_inode.c:186:
+static int bad_inode_link (struct dentry * old_dentry, struct inode * dir,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#265: FILE: fs/bad_inode.c:186:
+static int bad_inode_link (struct dentry * old_dentry, struct inode * dir,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#265: FILE: fs/bad_inode.c:186:
+static int bad_inode_link (struct dentry * old_dentry, struct inode * dir,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#266: FILE: fs/bad_inode.c:187:
+static int bad_inode_link (struct dentry * old_dentry, struct inode * dir,
+		struct dentry *dentry)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_int") over __attribute__((alias("return_EIO_int")))
#267: FILE: fs/bad_inode.c:188:
+	__attribute__((alias("return_EIO_int")));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#269: FILE: fs/bad_inode.c:190:
+static int bad_inode_unlink(struct inode * dir, struct dentry *dentry)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_int") over __attribute__((alias("return_EIO_int")))
#270: FILE: fs/bad_inode.c:191:
+	__attribute__((alias("return_EIO_int")));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#272: FILE: fs/bad_inode.c:193:
+static int bad_inode_symlink (struct inode * dir, struct dentry *dentry,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#272: FILE: fs/bad_inode.c:193:
+static int bad_inode_symlink (struct inode * dir, struct dentry *dentry,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#273: FILE: fs/bad_inode.c:194:
+static int bad_inode_symlink (struct inode * dir, struct dentry *dentry,
+		const char * symname)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#273: FILE: fs/bad_inode.c:194:
+		const char * symname)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_int") over __attribute__((alias("return_EIO_int")))
#274: FILE: fs/bad_inode.c:195:
+	__attribute__((alias("return_EIO_int")));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#276: FILE: fs/bad_inode.c:197:
+static int bad_inode_mkdir(struct inode * dir, struct dentry * dentry,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#276: FILE: fs/bad_inode.c:197:
+static int bad_inode_mkdir(struct inode * dir, struct dentry * dentry,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#277: FILE: fs/bad_inode.c:198:
+static int bad_inode_mkdir(struct inode * dir, struct dentry * dentry,
+			int mode)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_int") over __attribute__((alias("return_EIO_int")))
#278: FILE: fs/bad_inode.c:199:
+	__attribute__((alias("return_EIO_int")));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#280: FILE: fs/bad_inode.c:201:
+static int bad_inode_rmdir (struct inode * dir, struct dentry *dentry)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#280: FILE: fs/bad_inode.c:201:
+static int bad_inode_rmdir (struct inode * dir, struct dentry *dentry)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_int") over __attribute__((alias("return_EIO_int")))
#281: FILE: fs/bad_inode.c:202:
+	__attribute__((alias("return_EIO_int")));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#283: FILE: fs/bad_inode.c:204:
+static int bad_inode_mknod (struct inode * dir, struct dentry *dentry,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#283: FILE: fs/bad_inode.c:204:
+static int bad_inode_mknod (struct inode * dir, struct dentry *dentry,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#284: FILE: fs/bad_inode.c:205:
+static int bad_inode_mknod (struct inode * dir, struct dentry *dentry,
+			int mode, dev_t rdev)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_int") over __attribute__((alias("return_EIO_int")))
#285: FILE: fs/bad_inode.c:206:
+	__attribute__((alias("return_EIO_int")));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#287: FILE: fs/bad_inode.c:208:
+static int bad_inode_rename (struct inode * old_dir, struct dentry *old_dentry,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#287: FILE: fs/bad_inode.c:208:
+static int bad_inode_rename (struct inode * old_dir, struct dentry *old_dentry,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#288: FILE: fs/bad_inode.c:209:
+static int bad_inode_rename (struct inode * old_dir, struct dentry *old_dentry,
+		struct inode * new_dir, struct dentry *new_dentry)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#288: FILE: fs/bad_inode.c:209:
+		struct inode * new_dir, struct dentry *new_dentry)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_int") over __attribute__((alias("return_EIO_int")))
#289: FILE: fs/bad_inode.c:210:
+	__attribute__((alias("return_EIO_int")));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#292: FILE: fs/bad_inode.c:213:
+static int bad_inode_readlink(struct dentry *dentry, char __user *buffer,
+		int buflen)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_int") over __attribute__((alias("return_EIO_int")))
#293: FILE: fs/bad_inode.c:214:
+	__attribute__((alias("return_EIO_int")));

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#296: FILE: fs/bad_inode.c:217:
+			struct nameidata *nd)
 			                  ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#296: FILE: fs/bad_inode.c:217:
+static int bad_inode_permission(struct inode *inode, int mask,
+			struct nameidata *nd)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_int") over __attribute__((alias("return_EIO_int")))
#297: FILE: fs/bad_inode.c:218:
+	__attribute__((alias("return_EIO_int")));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#300: FILE: fs/bad_inode.c:221:
+static int bad_inode_getattr(struct vfsmount *mnt, struct dentry *dentry,
+			struct kstat *stat)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_int") over __attribute__((alias("return_EIO_int")))
#301: FILE: fs/bad_inode.c:222:
+	__attribute__((alias("return_EIO_int")));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_int") over __attribute__((alias("return_EIO_int")))
#304: FILE: fs/bad_inode.c:225:
+	__attribute__((alias("return_EIO_int")));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#307: FILE: fs/bad_inode.c:228:
+static int bad_inode_setxattr(struct dentry *dentry, const char *name,
+		const void *value, size_t size, int flags)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_int") over __attribute__((alias("return_EIO_int")))
#308: FILE: fs/bad_inode.c:229:
+	__attribute__((alias("return_EIO_int")));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#311: FILE: fs/bad_inode.c:232:
+static ssize_t bad_inode_getxattr(struct dentry *dentry, const char *name,
+			void *buffer, size_t size)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_ssize") over __attribute__((alias("return_EIO_ssize")))
#312: FILE: fs/bad_inode.c:233:
+	__attribute__((alias("return_EIO_ssize")));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#315: FILE: fs/bad_inode.c:236:
+static ssize_t bad_inode_listxattr(struct dentry *dentry, char *buffer,
+			size_t buffer_size)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_ssize") over __attribute__((alias("return_EIO_ssize")))
#316: FILE: fs/bad_inode.c:237:
+	__attribute__((alias("return_EIO_ssize")));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("return_EIO_int") over __attribute__((alias("return_EIO_int")))
#319: FILE: fs/bad_inode.c:240:
+	__attribute__((alias("return_EIO_int")));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000004480.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 27 errors, 65 warnings, 27 checks, 294 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000004480.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
