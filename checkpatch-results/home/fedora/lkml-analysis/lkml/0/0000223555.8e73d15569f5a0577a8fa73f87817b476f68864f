WARNING:TYPO_SPELLING: 'mesurements' may be misspelled - perhaps 'measurements'?
#52: 
priority happily run. This seems to contradict the mesurements with the
                                                   ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#72: 
# reader

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#75: 
# writer

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#78: 
# tar (dump.tar =3D=3D 2 built BK kernel trees ~900MB)

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#81: 
# tiobench

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#87: 
--- a/arch/i386/kernel/entry.S	2004-12-13 08:49:48 -05:00

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#96: FILE: arch/i386/kernel/entry.S:869:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#107: FILE: drivers/block/cfq-iosched.c:35:
+static int cfq_slice_sync =3D HZ / 1000;
                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#108: FILE: drivers/block/cfq-iosched.c:36:
+static int cfq_slice_async =3D HZ / 1000;
                            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#111: FILE: drivers/block/cfq-iosched.c:38:
+static int cfq_slice_idle =3D HZ / 1000;
                           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#114: FILE: drivers/block/cfq-iosched.c:41:
+static int cfq_prio_scale[] =3D {223, 194, 169, 147, 128,		/* 0..4 */
                             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#116: FILE: drivers/block/cfq-iosched.c:43:
+^I^I^I        56,  49,  42,  36,  32,^I^I/* 10..14 */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: drivers/block/cfq-iosched.c:44:
+^I^I^I        28,  24,  21,  18,  16,^I^I/* 15..19 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: drivers/block/cfq-iosched.c:45:
+^I^I^I        14,  12,  11,   9,   8,^I^I/* 20..24 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: drivers/block/cfq-iosched.c:46:
+^I^I^I         7,   6,   5,   5,   4,^I^I/* 25..29 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#120: FILE: drivers/block/cfq-iosched.c:47:
+^I^I^I         3,   3,   2,   2,   2,^I^I/* 30..34 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#121: FILE: drivers/block/cfq-iosched.c:48:
+^I^I^I         1,   1,   1,   1,   1};^I/* 35..39 */$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#156: FILE: drivers/block/cfq-iosched.c:930:
+		cfqq->slice_end =3D cfqd->cfq_prio_scale[cfqq->io_prio]*cfqd->cfq_slice[=
 		                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#156: FILE: drivers/block/cfq-iosched.c:930:
+		cfqq->slice_end =3D cfqd->cfq_prio_scale[cfqq->io_prio]*cfqd->cfq_slice[=
 		                                                       ^

ERROR:SPACING: spaces required around that '=' (ctx:BxE)
#156: FILE: drivers/block/cfq-iosched.c:930:
+		cfqq->slice_end =3D cfqd->cfq_prio_scale[cfqq->io_prio]*cfqd->cfq_slice[=
 		                                                                        ^

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#174: FILE: drivers/block/cfq-iosched.c:989:
 	}
+ =20

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: drivers/block/cfq-iosched.c:989:
+ =20$

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#174: FILE: drivers/block/cfq-iosched.c:989:
+ =20
  ^

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#181: FILE: drivers/block/cfq-iosched.c:995:
 		return;
+ =20

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: drivers/block/cfq-iosched.c:995:
+ =20$

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#181: FILE: drivers/block/cfq-iosched.c:995:
+ =20
  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#189: FILE: drivers/block/cfq-iosched.c:1109:
+	__cfqq->io_prio =3D current->io_prio;
 	                ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#224: FILE: include/asm-i386/unistd.h:44:
 };
+#define IOPRIO_MIN	0

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#248: FILE: include/linux/sched.h:728:
+extern void set_user_ioprio(task_t *p, long ioprio);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#251: FILE: include/linux/sched.h:731:
+extern int task_ioprio(const task_t *p);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#262: FILE: include/linux/security.h:1719:
 }
+static inline int security_task_setioprio (struct task_struct *p, int prio)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#262: FILE: include/linux/security.h:1719:
+static inline int security_task_setioprio (struct task_struct *p, int prio)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#280: FILE: include/linux/security.h:2366:
+static inline int security_task_setioprio (struct task_struct *p, int prio)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#291: FILE: init/main.c:446:
+	current->io_prio =3D IOPRIO_DEFAULT;
 	                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#321: FILE: kernel/sched.c:3030:
+	if (TASK_IOPRIO(p) =3D=3D ioprio || ioprio < 0 || ioprio > 39)
 	                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#321: FILE: kernel/sched.c:3030:
+	if (TASK_IOPRIO(p) =3D=3D ioprio || ioprio < 0 || ioprio > 39)
 	                      ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#321: FILE: kernel/sched.c:3030:
+	if (TASK_IOPRIO(p) =3D=3D ioprio || ioprio < 0 || ioprio > 39)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#323: FILE: kernel/sched.c:3032:
+=09
 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#324: FILE: kernel/sched.c:3033:
+	p->io_prio =3D ioprio;
 	           ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#325: FILE: kernel/sched.c:3034:
+	printk(KERN_ERR "task %d now has io_prio =3D %d\n", p->pid, p->io_prio);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#328: FILE: kernel/sched.c:3037:
+EXPORT_SYMBOL(set_user_ioprio);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#349: FILE: kernel/sched.c:3095:
+			increment =3D -40;
 			          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#349: FILE: kernel/sched.c:3095:
+			increment =3D -40;
 			              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#352: FILE: kernel/sched.c:3098:
+		increment =3D 40;
 		          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#354: FILE: kernel/sched.c:3100:
+	io_prio =3D current->io_prio + increment;
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#356: FILE: kernel/sched.c:3102:
+		io_prio =3D 0;
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#358: FILE: kernel/sched.c:3104:
+		io_prio =3D 39;
 		        ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#392: FILE: kernel/sched.c:242:
 }
+static int set_one_ioprio(struct task_struct *p, int prioval, int error)

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#394: FILE: kernel/sched.c:244:
+	if (p->uid !=3D current->euid &&
 	           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#395: FILE: kernel/sched.c:245:
+	if (p->uid !=3D current->euid &&
+		p->uid !=3D current->uid && !capable(CAP_SYS_NICE)) {

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#395: FILE: kernel/sched.c:245:
+		p->uid !=3D current->uid && !capable(CAP_SYS_NICE)) {
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#396: FILE: kernel/sched.c:246:
+		error =3D -EPERM;
 		      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#396: FILE: kernel/sched.c:246:
+		error =3D -EPERM;
 		          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#400: FILE: kernel/sched.c:250:
+		error =3D -EACCES;
 		      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#400: FILE: kernel/sched.c:250:
+		error =3D -EACCES;
 		          ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#416: FILE: kernel/sched.c:376:
 }
+asmlinkage long sys_setiopriority(int which, int who, int prioval)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#420: FILE: kernel/sched.c:380:
+	int error =3D -EINVAL;
 	          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#420: FILE: kernel/sched.c:380:
+	int error =3D -EINVAL;
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#426: FILE: kernel/sched.c:386:
+	error =3D -ESRCH;
 	      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#426: FILE: kernel/sched.c:386:
+	error =3D -ESRCH;
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#428: FILE: kernel/sched.c:388:
+		prioval =3D 0;
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#430: FILE: kernel/sched.c:390:
+		prioval =3D 39;
 		        ^

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#433: FILE: kernel/sched.c:393:
+	switch (which) {
+		case PRIO_PROCESS:
[...]
+		case PRIO_PGRP:
[...]
+		case PRIO_USER:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#436: FILE: kernel/sched.c:396:
+				who =3D current->pid;
 				    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#437: FILE: kernel/sched.c:397:
+			p =3D find_task_by_pid(who);
 			  ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#438: FILE: kernel/sched.c:398:
+			if (p) {
+				error =3D set_one_ioprio(p, prioval, error);
+			}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#439: FILE: kernel/sched.c:399:
+				error =3D set_one_ioprio(p, prioval, error);
 				      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#444: FILE: kernel/sched.c:404:
+				who =3D process_group(current);
 				    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#446: FILE: kernel/sched.c:406:
+				error =3D set_one_ioprio(p, prioval, error);
 				      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#451: FILE: kernel/sched.c:411:
+				user =3D current->user;
 				     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#453: FILE: kernel/sched.c:413:
+				user =3D find_user(who);
 				     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#459: FILE: kernel/sched.c:419:
+				if (p->uid =3D=3D who) {
 				           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#459: FILE: kernel/sched.c:419:
+				if (p->uid =3D=3D who) {
 				              ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#459: FILE: kernel/sched.c:419:
+				if (p->uid =3D=3D who) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#459: FILE: kernel/sched.c:419:
+				if (p->uid =3D=3D who) {
+					error =3D set_one_ioprio(p, prioval, error);
+				}

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#460: FILE: kernel/sched.c:420:
+					error =3D set_one_ioprio(p, prioval, error);
 					      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#477: FILE: kernel/sched.c:437:
+	long prioval, retval =3D -ESRCH;
 	                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#477: FILE: kernel/sched.c:437:
+	long prioval, retval =3D -ESRCH;
 	                         ^

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#483: FILE: kernel/sched.c:443:
+	switch (which) {
+		case PRIO_PROCESS:
[...]
+		case PRIO_PGRP:
[...]
+		case PRIO_USER:

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#486: FILE: kernel/sched.c:446:
+				who =3D current->pid;
 				    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#487: FILE: kernel/sched.c:447:
+			p =3D find_task_by_pid(who);
 			  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#489: FILE: kernel/sched.c:449:
+				prioval =3D task_ioprio(p);
 				        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#491: FILE: kernel/sched.c:451:
+					retval =3D prioval;
 					       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#496: FILE: kernel/sched.c:456:
+				who =3D process_group(current);
 				    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#498: FILE: kernel/sched.c:458:
+				prioval =3D task_ioprio(p);
 				        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#500: FILE: kernel/sched.c:460:
+					retval =3D prioval;
 					       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#505: FILE: kernel/sched.c:465:
+				user =3D current->user;
 				     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#507: FILE: kernel/sched.c:467:
+				user =3D find_user(who);
 				     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#513: FILE: kernel/sched.c:473:
+				if (p->uid =3D=3D who) {
 				           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#513: FILE: kernel/sched.c:473:
+				if (p->uid =3D=3D who) {
 				              ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#513: FILE: kernel/sched.c:473:
+				if (p->uid =3D=3D who) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#514: FILE: kernel/sched.c:474:
+					prioval =3D task_ioprio(p);
 					        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#516: FILE: kernel/sched.c:476:
+						retval =3D prioval;
 						       ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000223555.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 64 errors, 13 warnings, 16 checks, 416 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000223555.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
