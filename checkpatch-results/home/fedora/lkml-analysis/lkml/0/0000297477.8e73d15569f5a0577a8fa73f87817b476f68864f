WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#51: 
  Added Michael MIC keyed digest for TKIP (IEEE 802.11i/WPA). This algorithm

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#81: 
--- a/Documentation/crypto/api-intro.txt	Tue Mar  9 21:25:13 2004

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:LINE_SPACING: Missing a blank line after declarations
#130: FILE: crypto/digest.c:48:
+	u32 flags;
+	if (tfm->__crt_alg->cra_digest.dia_setkey == NULL)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tfm->__crt_alg->cra_digest.dia_setkey"
#130: FILE: crypto/digest.c:48:
+	if (tfm->__crt_alg->cra_digest.dia_setkey == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#131: FILE: crypto/digest.c:49:
+		return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#151: FILE: crypto/michael_mic.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#168: FILE: crypto/michael_mic.c:18:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#176: FILE: crypto/michael_mic.c:26:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#182: FILE: crypto/michael_mic.c:32:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#188: FILE: crypto/michael_mic.c:38:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#194: FILE: crypto/michael_mic.c:44:
+
+

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'l' - possible side-effects?
#195: FILE: crypto/michael_mic.c:45:
+#define michael_block(l, r)	\
+do {				\
+	r ^= rotl(l, 17);	\
+	l += r;			\
+	r ^= xswap(l);		\
+	l += r;			\
+	r ^= rotl(l, 3);	\
+	l += r;			\
+	r ^= rotr(l, 2);	\
+	l += r;			\
+} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'r' - possible side-effects?
#195: FILE: crypto/michael_mic.c:45:
+#define michael_block(l, r)	\
+do {				\
+	r ^= rotl(l, 17);	\
+	l += r;			\
+	r ^= xswap(l);		\
+	l += r;			\
+	r ^= rotl(l, 3);	\
+	l += r;			\
+	r ^= rotr(l, 2);	\
+	l += r;			\
+} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'r' may be better as '(r)' to avoid precedence issues
#195: FILE: crypto/michael_mic.c:45:
+#define michael_block(l, r)	\
+do {				\
+	r ^= rotl(l, 17);	\
+	l += r;			\
+	r ^= xswap(l);		\
+	l += r;			\
+	r ^= rotl(l, 3);	\
+	l += r;			\
+	r ^= rotr(l, 2);	\
+	l += r;			\
+} while (0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#207: FILE: crypto/michael_mic.c:57:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#213: FILE: crypto/michael_mic.c:63:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#222: FILE: crypto/michael_mic.c:72:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#226: FILE: crypto/michael_mic.c:76:
+	struct michael_mic_ctx *mctx = ctx;
+	mctx->pending_len = 0;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#229: FILE: crypto/michael_mic.c:79:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#236: FILE: crypto/michael_mic.c:86:
+		int flen = 4 - mctx->pending_len;
+		if (flen > len)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#264: FILE: crypto/michael_mic.c:114:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#294: FILE: crypto/michael_mic.c:144:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#299: FILE: crypto/michael_mic.c:149:
+	struct michael_mic_ctx *mctx = ctx;
+	if (keylen != 8) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#309: FILE: crypto/michael_mic.c:159:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#325: FILE: crypto/michael_mic.c:175:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#331: FILE: crypto/michael_mic.c:181:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#337: FILE: crypto/michael_mic.c:187:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#361: FILE: crypto/tcrypt.c:116:
+			crypto_digest_setkey (tfm, hash_tv[i].key,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#409: FILE: crypto/tcrypt.h:1730:
+struct hash_testvec michael_mic_tv_template[] =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#462: FILE: include/linux/crypto.h:80:
+^I                  unsigned int keylen, u32 *flags);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#471: FILE: include/linux/crypto.h:163:
+^I                  const u8 *key, unsigned int keylen);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#482: FILE: include/linux/crypto.h:290:
+                                       const u8 *key, unsigned int keylen)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#482: FILE: include/linux/crypto.h:290:
+                                       const u8 *key, unsigned int keylen)$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#484: FILE: include/linux/crypto.h:292:
+	BUG_ON(crypto_tfm_alg_type(tfm) != CRYPTO_ALG_TYPE_DIGEST);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tfm->crt_digest.dit_setkey"
#485: FILE: include/linux/crypto.h:293:
+	if (tfm->crt_digest.dit_setkey == NULL)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#486: FILE: include/linux/crypto.h:294:
+		return -ENOSYS;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000297477.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 11 warnings, 20 checks, 372 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000297477.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
