WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
> Here's a rewrite of Sundarapandian Durairaj's patch for accessing extended

CHECK:SPACING: No space is necessary after a cast
#97: FILE: arch/i386/kernel/acpi/boot.c:106:
+	mcfg = (struct acpi_table_mcfg *) __acpi_map_table(phys_addr, size);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#99: FILE: arch/i386/kernel/acpi/boot.c:108:
+		printk(KERN_WARNING PREFIX "Unable to map MCFG\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#120: FILE: arch/i386/kernel/acpi/boot.c:542:
+		printk(KERN_WARNING PREFIX "MCFG not present\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#123: FILE: arch/i386/kernel/acpi/boot.c:545:
+		printk(KERN_ERR PREFIX "Error parsing MCFG\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#126: FILE: arch/i386/kernel/acpi/boot.c:548:
+		printk(KERN_WARNING PREFIX "Multiple MCFG tables exist\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#174: FILE: arch/i386/pci/mmconfig.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LINE_SPACING: Missing a blank line after declarations
#198: FILE: arch/i386/pci/mmconfig.c:25:
+	u32 dev_base = pci_mmcfg_base_addr | (bus << 20) | (devfn << 12);
+	if (dev_base != mmcfg_last_accessed_device) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bus > 255'
#208: FILE: arch/i386/pci/mmconfig.c:35:
+	if (!value || (bus > 255) || (devfn > 255) || (reg > 4095))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'devfn > 255'
#208: FILE: arch/i386/pci/mmconfig.c:35:
+	if (!value || (bus > 255) || (devfn > 255) || (reg > 4095))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reg > 4095'
#208: FILE: arch/i386/pci/mmconfig.c:35:
+	if (!value || (bus > 255) || (devfn > 255) || (reg > 4095))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#236: FILE: arch/i386/pci/mmconfig.c:63:
+^Iif ((bus > 255) || (devfn > 255) || (reg > 4095)) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bus > 255'
#236: FILE: arch/i386/pci/mmconfig.c:63:
+	if ((bus > 255) || (devfn > 255) || (reg > 4095)) 

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'devfn > 255'
#236: FILE: arch/i386/pci/mmconfig.c:63:
+	if ((bus > 255) || (devfn > 255) || (reg > 4095)) 

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reg > 4095'
#236: FILE: arch/i386/pci/mmconfig.c:63:
+	if ((bus > 255) || (devfn > 255) || (reg > 4095)) 

WARNING:CONST_STRUCT: struct pci_raw_ops should normally be const
#263: FILE: arch/i386/pci/mmconfig.c:90:
+static struct pci_raw_ops pci_mmcfg = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#277: FILE: arch/i386/pci/mmconfig.c:104:
+	region = request_mem_region(pci_mmcfg_base_addr, 256 * 1024 * 1024,
+			"PCI MMCONFIG");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#284: FILE: arch/i386/pci/mmconfig.c:111:
+	printk(KERN_INFO "PCI: Using MMCONFIG\n");

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#350: FILE: drivers/pci/pci-sysfs.c:172:
+		.mode = S_IRUGO | S_IWUSR,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#365: FILE: drivers/pci/pci-sysfs.c:191:
+	if (pdev->cfg_size < 4096) {
[...]
+	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#407: FILE: drivers/pci/probe.c:492:
+	int is_pci_express_dev = pci_find_capability(dev, PCI_CAP_ID_EXP);
+	if (is_pci_express_dev)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#530: FILE: include/linux/acpi.h:327:
+} __attribute__ ((packed));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000307941.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 13 warnings, 8 checks, 451 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000307941.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
