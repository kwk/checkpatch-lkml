WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
 arch/x86_64/kernel/x86_64-stub.c |  523 +++++++++++++++++++++++++++++++++++++++

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#40: 
--- a/arch/x86_64/Kconfig	Wed Feb 11 15:42:06 2004

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#121: FILE: arch/x86_64/kernel/entry.S:895:
+^Imovq %rbx,5*8(%rsp) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#122: FILE: arch/x86_64/kernel/entry.S:896:
+^Imovq %rbp,4*8(%rsp) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#123: FILE: arch/x86_64/kernel/entry.S:897:
+^Imovq %r12,3*8(%rsp) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#124: FILE: arch/x86_64/kernel/entry.S:898:
+^Imovq %r13,2*8(%rsp) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#125: FILE: arch/x86_64/kernel/entry.S:899:
+^Imovq %r14,1*8(%rsp) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#126: FILE: arch/x86_64/kernel/entry.S:900:
+^Imovq %r15,(%rsp) $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#159: FILE: arch/x86_64/kernel/nmi.c:322:
+	if (atomic_read(&debugger_active)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#168: FILE: arch/x86_64/kernel/nmi.c:331:
+	} else if (last_irq_sums[cpu] == sum) {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#175: FILE: arch/x86_64/kernel/nmi.c:338:
 		if (alert_counter[cpu] == 5*nmi_hz) {
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#176: FILE: arch/x86_64/kernel/nmi.c:339:
+			CHK_DEBUGGER(2,SIGSEGV,0,regs,)
 			              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#176: FILE: arch/x86_64/kernel/nmi.c:339:
+			CHK_DEBUGGER(2,SIGSEGV,0,regs,)
 			                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#176: FILE: arch/x86_64/kernel/nmi.c:339:
+			CHK_DEBUGGER(2,SIGSEGV,0,regs,)
 			                        ^

ERROR:SPACING: space required after that ',' (ctx:VxB)
#176: FILE: arch/x86_64/kernel/nmi.c:339:
+			CHK_DEBUGGER(2,SIGSEGV,0,regs,)
 			                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#195: FILE: arch/x86_64/kernel/traps.c:367:
+	CHK_DEBUGGER(1,SIGTRAP,err,regs,)
 	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#195: FILE: arch/x86_64/kernel/traps.c:367:
+	CHK_DEBUGGER(1,SIGTRAP,err,regs,)
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#195: FILE: arch/x86_64/kernel/traps.c:367:
+	CHK_DEBUGGER(1,SIGTRAP,err,regs,)
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxB)
#195: FILE: arch/x86_64/kernel/traps.c:367:
+	CHK_DEBUGGER(1,SIGTRAP,err,regs,)
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#203: FILE: arch/x86_64/kernel/traps.c:441:
+	CHK_DEBUGGER(1,SIGTRAP,error_code,regs,return) \
 	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#203: FILE: arch/x86_64/kernel/traps.c:441:
+	CHK_DEBUGGER(1,SIGTRAP,error_code,regs,return) \
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#203: FILE: arch/x86_64/kernel/traps.c:441:
+	CHK_DEBUGGER(1,SIGTRAP,error_code,regs,return) \
 	                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#203: FILE: arch/x86_64/kernel/traps.c:441:
+	CHK_DEBUGGER(1,SIGTRAP,error_code,regs,return) \
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#220: FILE: arch/x86_64/kernel/traps.c:649:
+	CHK_DEBUGGER(1,SIGTRAP,error_code,regs,return)
 	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#220: FILE: arch/x86_64/kernel/traps.c:649:
+	CHK_DEBUGGER(1,SIGTRAP,error_code,regs,return)
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#220: FILE: arch/x86_64/kernel/traps.c:649:
+	CHK_DEBUGGER(1,SIGTRAP,error_code,regs,return)
 	                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#220: FILE: arch/x86_64/kernel/traps.c:649:
+	CHK_DEBUGGER(1,SIGTRAP,error_code,regs,return)
 	                                      ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#227: FILE: arch/x86_64/kernel/x86_64-stub.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'Origianl' may be misspelled - perhaps 'Original'?
#265: FILE: arch/x86_64/kernel/x86_64-stub.c:39:
+ *  Origianl kgdb, compatibility with 2.1.xx kernel by David Grothe <dave@gcom.com>
     ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#269: FILE: arch/x86_64/kernel/x86_64-stub.c:43:
+ *  ^Isupport for ia-32(x86) hardware debugging,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#270: FILE: arch/x86_64/kernel/x86_64-stub.c:44:
+ *  ^IConsole support,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#271: FILE: arch/x86_64/kernel/x86_64-stub.c:45:
+ *  ^Ihandling nmi watchdog$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#272: FILE: arch/x86_64/kernel/x86_64-stub.c:46:
+ *  ^IAmit S. Kale ( amitkale@emsyssoft.com )$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#343: FILE: arch/x86_64/kernel/x86_64-stub.c:117:
+/* Likewise, the vector number here (since GDB only gets the signal
+   number through the usual means, and that's not very specific).  */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#343: FILE: arch/x86_64/kernel/x86_64-stub.c:117:
+   number through the usual means, and that's not very specific).  */

ERROR:SPACING: space prohibited after that open square bracket '['
#359: FILE: arch/x86_64/kernel/x86_64-stub.c:133:
+	gdb_regs[ _PS] =  regs->eflags;

ERROR:SPACING: space prohibited after that open square bracket '['
#360: FILE: arch/x86_64/kernel/x86_64-stub.c:134:
+	gdb_regs[ _PC] =  regs->rip;

ERROR:SPACING: space prohibited after that open square bracket '['
#361: FILE: arch/x86_64/kernel/x86_64-stub.c:135:
+	gdb_regs[ _R8] =  regs->r8;

ERROR:SPACING: space prohibited after that open square bracket '['
#362: FILE: arch/x86_64/kernel/x86_64-stub.c:136:
+	gdb_regs[ _R9] =  regs->r9;

ERROR:SPACING: space prohibited after that open square bracket '['
#383: FILE: arch/x86_64/kernel/x86_64-stub.c:157:
+	gdb_regs[ _PS] = 0;

CHECK:SPACING: No space is necessary after a cast
#384: FILE: arch/x86_64/kernel/x86_64-stub.c:158:
+	gdb_regs[ _PC] = (unsigned long) __switch_to;

ERROR:SPACING: space prohibited after that open square bracket '['
#384: FILE: arch/x86_64/kernel/x86_64-stub.c:158:
+	gdb_regs[ _PC] = (unsigned long) __switch_to;

ERROR:SPACING: space prohibited after that open square bracket '['
#385: FILE: arch/x86_64/kernel/x86_64-stub.c:159:
+	gdb_regs[ _R8] = 0;

ERROR:SPACING: space prohibited after that open square bracket '['
#386: FILE: arch/x86_64/kernel/x86_64-stub.c:160:
+	gdb_regs[ _R9] = 0;

WARNING:SPACING: space prohibited before semicolon
#398: FILE: arch/x86_64/kernel/x86_64-stub.c:172:
+	regs->rax	=     gdb_regs[_RAX] ;

WARNING:SPACING: space prohibited before semicolon
#399: FILE: arch/x86_64/kernel/x86_64-stub.c:173:
+	regs->rbx	=     gdb_regs[_RBX] ;

WARNING:SPACING: space prohibited before semicolon
#400: FILE: arch/x86_64/kernel/x86_64-stub.c:174:
+	regs->rcx	=     gdb_regs[_RCX] ;

WARNING:SPACING: space prohibited before semicolon
#401: FILE: arch/x86_64/kernel/x86_64-stub.c:175:
+	regs->rdx	=     gdb_regs[_RDX] ;

WARNING:SPACING: space prohibited before semicolon
#402: FILE: arch/x86_64/kernel/x86_64-stub.c:176:
+	regs->rsi	=     gdb_regs[_RSI] ;

WARNING:SPACING: space prohibited before semicolon
#403: FILE: arch/x86_64/kernel/x86_64-stub.c:177:
+	regs->rdi	=     gdb_regs[_RDI] ;

WARNING:SPACING: space prohibited before semicolon
#404: FILE: arch/x86_64/kernel/x86_64-stub.c:178:
+	regs->rbp	=     gdb_regs[_RBP] ;

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#405: FILE: arch/x86_64/kernel/x86_64-stub.c:179:
+	regs->eflags=     gdb_regs[ _PS] ;
 	            ^

WARNING:SPACING: space prohibited before semicolon
#405: FILE: arch/x86_64/kernel/x86_64-stub.c:179:
+	regs->eflags=     gdb_regs[ _PS] ;

ERROR:SPACING: space prohibited after that open square bracket '['
#405: FILE: arch/x86_64/kernel/x86_64-stub.c:179:
+	regs->eflags=     gdb_regs[ _PS] ;

WARNING:SPACING: space prohibited before semicolon
#406: FILE: arch/x86_64/kernel/x86_64-stub.c:180:
+	regs->rip	=     gdb_regs[ _PC] ;

ERROR:SPACING: space prohibited after that open square bracket '['
#406: FILE: arch/x86_64/kernel/x86_64-stub.c:180:
+	regs->rip	=     gdb_regs[ _PC] ;

WARNING:SPACING: space prohibited before semicolon
#407: FILE: arch/x86_64/kernel/x86_64-stub.c:181:
+	regs->r8	=     gdb_regs[ _R8] ;

ERROR:SPACING: space prohibited after that open square bracket '['
#407: FILE: arch/x86_64/kernel/x86_64-stub.c:181:
+	regs->r8	=     gdb_regs[ _R8] ;

WARNING:SPACING: space prohibited before semicolon
#408: FILE: arch/x86_64/kernel/x86_64-stub.c:182:
+	regs->r9	=     gdb_regs[ _R9] ;

ERROR:SPACING: space prohibited after that open square bracket '['
#408: FILE: arch/x86_64/kernel/x86_64-stub.c:182:
+	regs->r9	=     gdb_regs[ _R9] ;

WARNING:SPACING: space prohibited before semicolon
#409: FILE: arch/x86_64/kernel/x86_64-stub.c:183:
+	regs->r10	=     gdb_regs[ _R10] ;

ERROR:SPACING: space prohibited after that open square bracket '['
#409: FILE: arch/x86_64/kernel/x86_64-stub.c:183:
+	regs->r10	=     gdb_regs[ _R10] ;

WARNING:SPACING: space prohibited before semicolon
#410: FILE: arch/x86_64/kernel/x86_64-stub.c:184:
+	regs->r11    =     gdb_regs[ _R11] ;

ERROR:SPACING: space prohibited after that open square bracket '['
#410: FILE: arch/x86_64/kernel/x86_64-stub.c:184:
+	regs->r11    =     gdb_regs[ _R11] ;

WARNING:SPACING: space prohibited before semicolon
#411: FILE: arch/x86_64/kernel/x86_64-stub.c:185:
+	regs->r12	=     gdb_regs[ _R12] ;

ERROR:SPACING: space prohibited after that open square bracket '['
#411: FILE: arch/x86_64/kernel/x86_64-stub.c:185:
+	regs->r12	=     gdb_regs[ _R12] ;

WARNING:SPACING: space prohibited before semicolon
#412: FILE: arch/x86_64/kernel/x86_64-stub.c:186:
+	regs->r13	=     gdb_regs[ _R13] ;

ERROR:SPACING: space prohibited after that open square bracket '['
#412: FILE: arch/x86_64/kernel/x86_64-stub.c:186:
+	regs->r13	=     gdb_regs[ _R13] ;

WARNING:SPACING: space prohibited before semicolon
#413: FILE: arch/x86_64/kernel/x86_64-stub.c:187:
+	regs->r14	=     gdb_regs[ _R14] ;

ERROR:SPACING: space prohibited after that open square bracket '['
#413: FILE: arch/x86_64/kernel/x86_64-stub.c:187:
+	regs->r14	=     gdb_regs[ _R14] ;

WARNING:SPACING: space prohibited before semicolon
#414: FILE: arch/x86_64/kernel/x86_64-stub.c:188:
+	regs->r15	=     gdb_regs[ _R15] ;

ERROR:SPACING: space prohibited after that open square bracket '['
#414: FILE: arch/x86_64/kernel/x86_64-stub.c:188:
+	regs->r15	=     gdb_regs[ _R15] ;

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#415: FILE: arch/x86_64/kernel/x86_64-stub.c:189:
+#if 0					/* can't change these */

WARNING:SPACING: space prohibited before semicolon
#416: FILE: arch/x86_64/kernel/x86_64-stub.c:190:
+	regs->rsp	=     gdb_regs[_RSP] ;

WARNING:SPACING: space prohibited before semicolon
#417: FILE: arch/x86_64/kernel/x86_64-stub.c:191:
+	regs->ss	=     gdb_regs[ _SS] ;

ERROR:SPACING: space prohibited after that open square bracket '['
#417: FILE: arch/x86_64/kernel/x86_64-stub.c:191:
+	regs->ss	=     gdb_regs[ _SS] ;

WARNING:SPACING: space prohibited before semicolon
#418: FILE: arch/x86_64/kernel/x86_64-stub.c:192:
+	regs->fs	=     gdb_regs[ _FS] ;

ERROR:SPACING: space prohibited after that open square bracket '['
#418: FILE: arch/x86_64/kernel/x86_64-stub.c:192:
+	regs->fs	=     gdb_regs[ _FS] ;

WARNING:SPACING: space prohibited before semicolon
#419: FILE: arch/x86_64/kernel/x86_64-stub.c:193:
+	regs->gs	=     gdb_regs[ _GS] ;

ERROR:SPACING: space prohibited after that open square bracket '['
#419: FILE: arch/x86_64/kernel/x86_64-stub.c:193:
+	regs->gs	=     gdb_regs[ _GS] ;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#424: FILE: arch/x86_64/kernel/x86_64-stub.c:198:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#426: FILE: arch/x86_64/kernel/x86_64-stub.c:200:
+	unsigned enabled;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#427: FILE: arch/x86_64/kernel/x86_64-stub.c:201:
+	unsigned type;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#428: FILE: arch/x86_64/kernel/x86_64-stub.c:202:
+	unsigned len;

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#443: FILE: arch/x86_64/kernel/x86_64-stub.c:217:
+	asm volatile ("movq %%db7, %0\n":"=r" (dr7) :);
 	                                ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#446: FILE: arch/x86_64/kernel/x86_64-stub.c:220:
+		unsigned long addr0, addr1, addr2, addr3;
+		asm volatile ("movq %%db0, %0\n"

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#449: FILE: arch/x86_64/kernel/x86_64-stub.c:223:
+			      "movq %%db3, %3\n":"=r" (addr0), "=r"(addr1),
 			                        ^

ERROR:SPACING: spaces required around that ':' (ctx:VxB)
#450: FILE: arch/x86_64/kernel/x86_64-stub.c:224:
+			      "=r"(addr2), "=r"(addr3):);
 			                              ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#489: FILE: arch/x86_64/kernel/x86_64-stub.c:263:
+	if (correctit) {
+		asm volatile ("movq %0, %%db7\n"::"r" (dr7));
+	}

WARNING:LINE_SPACING: Missing a blank line after declarations
#497: FILE: arch/x86_64/kernel/x86_64-stub.c:271:
+	int i, idx = -1;
+	for (i = 0; i < 4; i ++) {

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#497: FILE: arch/x86_64/kernel/x86_64-stub.c:271:
+	for (i = 0; i < 4; i ++) {
 	                     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#513: FILE: arch/x86_64/kernel/x86_64-stub.c:287:
+	int i, idx = -1;
+	for (i = 0; i < 4; i ++) {

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#513: FILE: arch/x86_64/kernel/x86_64-stub.c:287:
+	for (i = 0; i < 4; i ++) {
 	                     ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#529: FILE: arch/x86_64/kernel/x86_64-stub.c:303:
+int remove_hw_break(unsigned breakno)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#531: FILE: arch/x86_64/kernel/x86_64-stub.c:305:
+	if (!breakinfo[breakno].enabled) {
+		return -1;
+	}

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#538: FILE: arch/x86_64/kernel/x86_64-stub.c:312:
+int set_hw_break(unsigned breakno,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#539: FILE: arch/x86_64/kernel/x86_64-stub.c:313:
+		 unsigned type, unsigned len, unsigned addr)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#539: FILE: arch/x86_64/kernel/x86_64-stub.c:313:
+		 unsigned type, unsigned len, unsigned addr)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#539: FILE: arch/x86_64/kernel/x86_64-stub.c:313:
+		 unsigned type, unsigned len, unsigned addr)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#541: FILE: arch/x86_64/kernel/x86_64-stub.c:315:
+	if (breakinfo[breakno].enabled) {
+		return -1;
+	}

CHECK:CAMELCASE: Avoid CamelCase: <exceptionNo>
#551: FILE: arch/x86_64/kernel/x86_64-stub.c:325:
+void kgdb_printexceptioninfo(int exceptionNo, int errorcode, char *buffer)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LINE_SPACING: Missing a blank line after declarations
#555: FILE: arch/x86_64/kernel/x86_64-stub.c:329:
+	int		i;
+	switch (exceptionNo) {

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#565: FILE: arch/x86_64/kernel/x86_64-stub.c:339:
+	asm volatile ("movq %%db6, %0\n":"=r" (dr6)
 	                                ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#579: FILE: arch/x86_64/kernel/x86_64-stub.c:353:
+	return;
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#581: FILE: arch/x86_64/kernel/x86_64-stub.c:355:
+void kgdb_disable_hw_debug(struct pt_regs *regs) $

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#584: FILE: arch/x86_64/kernel/x86_64-stub.c:358:
+	asm volatile("movq %0,%%db7": /* no output */ : "r"(0UL));
 	                            ^

CHECK:CAMELCASE: Avoid CamelCase: <eVector>
#587: FILE: arch/x86_64/kernel/x86_64-stub.c:361:
+void kgdb_post_master_code(struct pt_regs *regs, int eVector, int err_code)

CHECK:CAMELCASE: Avoid CamelCase: <exceptionVector>
#594: FILE: arch/x86_64/kernel/x86_64-stub.c:368:
+int kgdb_arch_handle_exception(int exceptionVector, int signo, int err_code,

ERROR:CODE_INDENT: code indent should use tabs where possible
#595: FILE: arch/x86_64/kernel/x86_64-stub.c:369:
+                                 char *remcomInBuffer, char *remcomOutBuffer,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#595: FILE: arch/x86_64/kernel/x86_64-stub.c:369:
+int kgdb_arch_handle_exception(int exceptionVector, int signo, int err_code,
+                                 char *remcomInBuffer, char *remcomOutBuffer,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#595: FILE: arch/x86_64/kernel/x86_64-stub.c:369:
+                                 char *remcomInBuffer, char *remcomOutBuffer,$

CHECK:CAMELCASE: Avoid CamelCase: <remcomInBuffer>
#595: FILE: arch/x86_64/kernel/x86_64-stub.c:369:
+                                 char *remcomInBuffer, char *remcomOutBuffer,

CHECK:CAMELCASE: Avoid CamelCase: <remcomOutBuffer>
#595: FILE: arch/x86_64/kernel/x86_64-stub.c:369:
+                                 char *remcomInBuffer, char *remcomOutBuffer,

ERROR:CODE_INDENT: code indent should use tabs where possible
#596: FILE: arch/x86_64/kernel/x86_64-stub.c:370:
+                                 struct pt_regs *linux_regs)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#596: FILE: arch/x86_64/kernel/x86_64-stub.c:370:
+                                 struct pt_regs *linux_regs)$

CHECK:CAMELCASE: Avoid CamelCase: <newPC>
#601: FILE: arch/x86_64/kernel/x86_64-stub.c:375:
+	int newPC;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#603: FILE: arch/x86_64/kernel/x86_64-stub.c:377:
+^I$

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#614: FILE: arch/x86_64/kernel/x86_64-stub.c:388:
+		/* try to read optional parameter, pc unchanged if no parm */
 		                                                      ^^^^

CHECK:CAMELCASE: Avoid CamelCase: <kgdb_hexToLong>
#616: FILE: arch/x86_64/kernel/x86_64-stub.c:390:
+		if (kgdb_hexToLong(&ptr, &addr)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#616: FILE: arch/x86_64/kernel/x86_64-stub.c:390:
+		if (kgdb_hexToLong(&ptr, &addr)) {
+			linux_regs->rip = addr;
+		} 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#618: FILE: arch/x86_64/kernel/x86_64-stub.c:392:
+^I^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#620: FILE: arch/x86_64/kernel/x86_64-stub.c:394:
+^I^I$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#645: FILE: arch/x86_64/kernel/x86_64-stub.c:419:
+		return (0);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#656: FILE: arch/x86_64/kernel/x86_64-stub.c:430:
+^I^Iif (set_hw_break(breakno & 0x3, breaktype & 0x3, $

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#668: FILE: arch/x86_64/kernel/x86_64-stub.c:442:
+		if (remove_hw_break(breakno & 0x3) == 0) {
[...]
+		} else {
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#679: FILE: arch/x86_64/kernel/x86_64-stub.c:453:
+static struct pt_regs *in_interrupt_stack(unsigned long rsp, int cpu) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#680: FILE: arch/x86_64/kernel/x86_64-stub.c:454:
+{ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#682: FILE: arch/x86_64/kernel/x86_64-stub.c:456:
+^Iunsigned long end = (unsigned long) cpu_pda[cpu].irqstackptr; $

CHECK:SPACING: No space is necessary after a cast
#682: FILE: arch/x86_64/kernel/x86_64-stub.c:456:
+	unsigned long end = (unsigned long) cpu_pda[cpu].irqstackptr; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#683: FILE: arch/x86_64/kernel/x86_64-stub.c:457:
+^Iif (rsp <= end  && $

WARNING:LINE_SPACING: Missing a blank line after declarations
#683: FILE: arch/x86_64/kernel/x86_64-stub.c:457:
+	unsigned long end = (unsigned long) cpu_pda[cpu].irqstackptr; 
+	if (rsp <= end  && 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#684: FILE: arch/x86_64/kernel/x86_64-stub.c:458:
+^I    rsp >= end - IRQSTACKSIZE + 8) { $

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#685: FILE: arch/x86_64/kernel/x86_64-stub.c:459:
+		regs = *(((struct pt_regs **)end) -1);
 		                                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#687: FILE: arch/x86_64/kernel/x86_64-stub.c:461:
+^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#688: FILE: arch/x86_64/kernel/x86_64-stub.c:462:
+^Ireturn NULL; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#689: FILE: arch/x86_64/kernel/x86_64-stub.c:463:
+} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#692: FILE: arch/x86_64/kernel/x86_64-stub.c:466:
+{ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#694: FILE: arch/x86_64/kernel/x86_64-stub.c:468:
+^Ifor (i = 0; i < N_EXCEPTION_STACKS; i++) $

WARNING:LINE_SPACING: Missing a blank line after declarations
#694: FILE: arch/x86_64/kernel/x86_64-stub.c:468:
+	int i;
+	for (i = 0; i < N_EXCEPTION_STACKS; i++) 

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 15)
#694: FILE: arch/x86_64/kernel/x86_64-stub.c:468:
+	for (i = 0; i < N_EXCEPTION_STACKS; i++) 
+	       if (rsp >= init_tss[cpu].ist[i] && 

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#695: FILE: arch/x86_64/kernel/x86_64-stub.c:469:
+	       if (rsp >= init_tss[cpu].ist[i] && 
 	                                ^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#695: FILE: arch/x86_64/kernel/x86_64-stub.c:469:
+^I       if (rsp >= init_tss[cpu].ist[i] && $

WARNING:TABSTOP: Statements should start on a tabstop
#695: FILE: arch/x86_64/kernel/x86_64-stub.c:469:
+	       if (rsp >= init_tss[cpu].ist[i] && 

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#695: FILE: arch/x86_64/kernel/x86_64-stub.c:469:
+	       if (rsp >= init_tss[cpu].ist[i] && 
[...]
+		       struct pt_regs *r = (void *)init_tss[cpu].ist[i] + EXCEPTION_STKSZ;

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#696: FILE: arch/x86_64/kernel/x86_64-stub.c:470:
+		   rsp <= init_tss[cpu].ist[i] + EXCEPTION_STKSZ) {
 		                        ^^^

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#697: FILE: arch/x86_64/kernel/x86_64-stub.c:471:
+		       struct pt_regs *r = (void *)init_tss[cpu].ist[i] + EXCEPTION_STKSZ;
 		                                                 ^^^

WARNING:TABSTOP: Statements should start on a tabstop
#697: FILE: arch/x86_64/kernel/x86_64-stub.c:471:
+		       struct pt_regs *r = (void *)init_tss[cpu].ist[i] + EXCEPTION_STKSZ;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#698: FILE: arch/x86_64/kernel/x86_64-stub.c:472:
+^I^I       return r-1; $

WARNING:TABSTOP: Statements should start on a tabstop
#698: FILE: arch/x86_64/kernel/x86_64-stub.c:472:
+		       return r-1; 

WARNING:LINE_SPACING: Missing a blank line after declarations
#698: FILE: arch/x86_64/kernel/x86_64-stub.c:472:
+		       struct pt_regs *r = (void *)init_tss[cpu].ist[i] + EXCEPTION_STKSZ;
+		       return r-1; 

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#698: FILE: arch/x86_64/kernel/x86_64-stub.c:472:
+		       return r-1; 
 		               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#699: FILE: arch/x86_64/kernel/x86_64-stub.c:473:
+^I       } $

WARNING:TABSTOP: Statements should start on a tabstop
#699: FILE: arch/x86_64/kernel/x86_64-stub.c:473:
+	       } 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#701: FILE: arch/x86_64/kernel/x86_64-stub.c:475:
+} $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#704: FILE: arch/x86_64/kernel/x86_64-stub.c:478:
+static void kgdb_shadowinfo(struct pt_regs *regs, char *buffer,
+		unsigned threadid)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#704: FILE: arch/x86_64/kernel/x86_64-stub.c:478:
+		unsigned threadid)

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#706: FILE: arch/x86_64/kernel/x86_64-stub.c:480:
+	static char intr_desc[] = "Stack at interrupt entrypoint";

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#707: FILE: arch/x86_64/kernel/x86_64-stub.c:481:
+	static char exc_desc[] = "Stack at exception entrypoint";

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#711: FILE: arch/x86_64/kernel/x86_64-stub.c:485:
+	if ((stregs = in_interrupt_stack(regs->rsp, cpu))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#711: FILE: arch/x86_64/kernel/x86_64-stub.c:485:
+	if ((stregs = in_interrupt_stack(regs->rsp, cpu))) {
[...]
+	} else if ((stregs = in_exception_stack(regs->rsp, cpu))) {
[...]

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#713: FILE: arch/x86_64/kernel/x86_64-stub.c:487:
+	} else if ((stregs = in_exception_stack(regs->rsp, cpu))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#719: FILE: arch/x86_64/kernel/x86_64-stub.c:493:
+static struct task_struct *kgdb_get_shadow_thread(struct pt_regs *regs,
+		int threadid)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#724: FILE: arch/x86_64/kernel/x86_64-stub.c:498:
+	if ((stregs = in_interrupt_stack(regs->rsp, cpu))) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#724: FILE: arch/x86_64/kernel/x86_64-stub.c:498:
+	if ((stregs = in_interrupt_stack(regs->rsp, cpu))) {
[...]
+	} else if ((stregs = in_exception_stack(regs->rsp, cpu))) {
[...]

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#726: FILE: arch/x86_64/kernel/x86_64-stub.c:500:
+	} else if ((stregs = in_exception_stack(regs->rsp, cpu))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#737: FILE: arch/x86_64/kernel/x86_64-stub.c:511:
+	if ((stregs = in_interrupt_stack(regs->rsp, cpu))) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#737: FILE: arch/x86_64/kernel/x86_64-stub.c:511:
+	if ((stregs = in_interrupt_stack(regs->rsp, cpu))) {
[...]
+	} else if ((stregs = in_exception_stack(regs->rsp, cpu))) {
[...]

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#739: FILE: arch/x86_64/kernel/x86_64-stub.c:513:
+	} else if ((stregs = in_exception_stack(regs->rsp, cpu))) {

WARNING:CONST_STRUCT: struct kgdb_arch should normally be const
#745: FILE: arch/x86_64/kernel/x86_64-stub.c:519:
+struct kgdb_arch arch_kgdb_ops =  {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#766: FILE: arch/x86_64/mm/fault.c:296:
+		 * Don't handle it like user accesses */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#777: FILE: arch/x86_64/mm/fault.c:420:
+	CHK_DEBUGGER(14, SIGSEGV,error_code, regs,)
 	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxB)
#777: FILE: arch/x86_64/mm/fault.c:420:
+	CHK_DEBUGGER(14, SIGSEGV,error_code, regs,)
 	                                         ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#795: FILE: include/asm-x86_64/kgdb.h:1:
+#ifndef _ASM_KGDB_H_

ERROR:TRAILING_WHITESPACE: trailing whitespace
#816: FILE: include/asm-x86_64/kgdb.h:22:
+ *  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#821: FILE: include/asm-x86_64/kgdb.h:27:
+enum regnames {_RAX,^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#825: FILE: include/asm-x86_64/kgdb.h:31:
+^I       _RSI,^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#826: FILE: include/asm-x86_64/kgdb.h:32:
+^I       _RDI,^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#827: FILE: include/asm-x86_64/kgdb.h:33:
+^I       _RBP,^I       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#828: FILE: include/asm-x86_64/kgdb.h:34:
+^I       _RSP,^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#837: FILE: include/asm-x86_64/kgdb.h:43:
+^I       _PC, ^I^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#837: FILE: include/asm-x86_64/kgdb.h:43:
+^I       _PC, ^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#839: FILE: include/asm-x86_64/kgdb.h:45:
+^I       _LASTREG=_PS }; $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#839: FILE: include/asm-x86_64/kgdb.h:45:
+	       _LASTREG=_PS }; 
 	               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#846: FILE: include/asm-x86_64/kgdb.h:52:
+#define NUMREGBYTES (_LASTREG*8)
                              ^

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#848: FILE: include/asm-x86_64/kgdb.h:54:
+#define BREAKPOINT() asm("   int $3");

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#872: FILE: include/asm-x86_64/system.h:26:
+/* Should be replaced with a dwarf2 cie/fde description, then gdb could
+   figure it out all by itself. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#872: FILE: include/asm-x86_64/system.h:26:
+   figure it out all by itself. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#873: FILE: include/asm-x86_64/system.h:27:
+struct save_context_frame { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#874: FILE: include/asm-x86_64/system.h:28:
+^Iunsigned long rbp; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#881: FILE: include/asm-x86_64/system.h:35:
+^Iunsigned long rdx;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#889: FILE: include/asm-x86_64/system.h:43:
+}; $

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#891: FILE: include/asm-x86_64/system.h:45:
+#if 0

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#894: FILE: include/asm-x86_64/system.h:48:
+^I"subq $14*8,%%rsp\n\t" ^I^I^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#901: FILE: include/asm-x86_64/system.h:55:
+^I__SAVE(rsi, 0)  __SAVE(rbp, 13) ^I^I^I^I\$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#903: FILE: include/asm-x86_64/system.h:57:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#905: FILE: include/asm-x86_64/system.h:59:
+^I__RESTORE(rbx, 12) __RESTORE(rdi,  1) ^I^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#911: FILE: include/asm-x86_64/system.h:65:
+^I__RESTORE(rbp, 13) __RESTORE(rsi, 0) ^I^I   ^I^I        \$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#912: FILE: include/asm-x86_64/system.h:66:
+^I"addq $14*8,%%rsp\n\t" ^I^I^I^I^I^I^I\$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#915: FILE: include/asm-x86_64/system.h:69:
+#define __EXTRA_CLOBBER $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000304632.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 93 errors, 83 warnings, 23 checks, 835 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000304632.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
