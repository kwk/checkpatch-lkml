CHECK:CAMELCASE: Avoid CamelCase: <NvRegIrqMask>
#122: FILE: drivers/net/forcedeth.c:763:
+	writel(mask, base + NvRegIrqMask);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <NvRegMSIIrqMask>
#134: FILE: drivers/net/forcedeth.c:775:
+			writel(0, base + NvRegMSIIrqMask);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#351: FILE: drivers/net/forcedeth.c:2693:
+		for (i = 0; i < (np->msi_flags & NV_MSI_X_VECTORS_MASK); i++) {
+			np->msi_x_entry[i].entry = i;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#354: FILE: drivers/net/forcedeth.c:2696:
+		if ((ret = pci_enable_msix(np->pci_dev, np->msi_x_entry, (np->msi_flags & NV_MSI_X_VECTORS_MASK))) == 0) {

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#354: FILE: drivers/net/forcedeth.c:2696:
+		if ((ret = pci_enable_msix(np->pci_dev, np->msi_x_entry, (np->msi_flags & NV_MSI_X_VECTORS_MASK))) == 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:LONG_LINE: line length of 141 exceeds 100 columns
#358: FILE: drivers/net/forcedeth.c:2700:
+				if (request_irq(np->msi_x_entry[NV_MSI_X_VECTOR_RX].vector, &nv_nic_irq_rx, SA_SHIRQ, dev->name, dev) != 0) {

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#359: FILE: drivers/net/forcedeth.c:2701:
+					printk(KERN_INFO "forcedeth: request_irq failed for rx %d\n", ret);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#359: FILE: drivers/net/forcedeth.c:2701:
+					printk(KERN_INFO "forcedeth: request_irq failed for rx %d\n", ret);

WARNING:LONG_LINE: line length of 141 exceeds 100 columns
#365: FILE: drivers/net/forcedeth.c:2707:
+				if (request_irq(np->msi_x_entry[NV_MSI_X_VECTOR_TX].vector, &nv_nic_irq_tx, SA_SHIRQ, dev->name, dev) != 0) {

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#366: FILE: drivers/net/forcedeth.c:2708:
+					printk(KERN_INFO "forcedeth: request_irq failed for tx %d\n", ret);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#366: FILE: drivers/net/forcedeth.c:2708:
+					printk(KERN_INFO "forcedeth: request_irq failed for tx %d\n", ret);

WARNING:LONG_LINE: line length of 147 exceeds 100 columns
#372: FILE: drivers/net/forcedeth.c:2714:
+				if (request_irq(np->msi_x_entry[NV_MSI_X_VECTOR_OTHER].vector, &nv_nic_irq_other, SA_SHIRQ, dev->name, dev) != 0) {

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#373: FILE: drivers/net/forcedeth.c:2715:
+					printk(KERN_INFO "forcedeth: request_irq failed for link %d\n", ret);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#373: FILE: drivers/net/forcedeth.c:2715:
+					printk(KERN_INFO "forcedeth: request_irq failed for link %d\n", ret);

CHECK:CAMELCASE: Avoid CamelCase: <NvRegMSIXMap0>
#379: FILE: drivers/net/forcedeth.c:2721:
+				writel(0, base + NvRegMSIXMap0);

CHECK:CAMELCASE: Avoid CamelCase: <NvRegMSIXMap1>
#380: FILE: drivers/net/forcedeth.c:2722:
+				writel(0, base + NvRegMSIXMap1);

WARNING:LONG_LINE: line length of 139 exceeds 100 columns
#386: FILE: drivers/net/forcedeth.c:2728:
+				if (request_irq(np->msi_x_entry[NV_MSI_X_VECTOR_ALL].vector, &nv_nic_irq, SA_SHIRQ, dev->name, dev) != 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#387: FILE: drivers/net/forcedeth.c:2729:
+					printk(KERN_INFO "forcedeth: request_irq failed %d\n", ret);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#400: FILE: drivers/net/forcedeth.c:2742:
+		if ((ret = pci_enable_msi(np->pci_dev)) == 0) {

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#402: FILE: drivers/net/forcedeth.c:2744:
+			if (request_irq(np->pci_dev->irq, &nv_nic_irq, SA_SHIRQ, dev->name, dev) != 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#403: FILE: drivers/net/forcedeth.c:2745:
+				printk(KERN_INFO "forcedeth: request_irq failed %d\n", ret);

CHECK:CAMELCASE: Avoid CamelCase: <NvRegMSIMap0>
#410: FILE: drivers/net/forcedeth.c:2752:
+			writel(0, base + NvRegMSIMap0);

CHECK:CAMELCASE: Avoid CamelCase: <NvRegMSIMap1>
#411: FILE: drivers/net/forcedeth.c:2753:
+			writel(0, base + NvRegMSIMap1);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#436: FILE: drivers/net/forcedeth.c:2778:
+		for (i = 0; i < (np->msi_flags & NV_MSI_X_VECTORS_MASK); i++) {
+			free_irq(np->msi_x_entry[i].vector, dev);
+		}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#540: FILE: drivers/net/forcedeth.c:3129:
+			printk(KERN_INFO "forcedeth: using HIGHDMA\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#543: FILE: drivers/net/forcedeth.c:3132:
+			printk(KERN_INFO "forcedeth: 64-bit DMA (consistent) failed for device %s.\n",

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000080609.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 18 warnings, 6 checks, 504 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000080609.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
