WARNING:SPACING: space prohibited between function name and open parenthesis '('
#53: FILE: arch/ia64/kernel/module.c:947:
+percpu_modcopy (void *pcpudst, const void *src, unsigned long size,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#57: FILE: arch/ia64/kernel/module.c:951:
+	BUG_ON(zero_size != 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#70: FILE: include/asm-ia64/percpu.h:48:
+extern void percpu_modcopy(void *pcpudst, const void *src,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'zero_size' may be better as '(zero_size)' to avoid precedence issues
#84: FILE: include/asm-powerpc/percpu.h:28:
+#define percpu_modcopy(pcpudst, src, size, zero_size)		\
 do {								\
 	unsigned int __i;					\
+	BUG_ON(zero_size != 0);					\
 	for_each_possible_cpu(__i)				\
 		memcpy((pcpudst)+__per_cpu_offset(__i),		\
 		       (src), (size));				\

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#87: FILE: include/asm-powerpc/percpu.h:31:
+	BUG_ON(zero_size != 0);					\

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'zero_size' may be better as '(zero_size)' to avoid precedence issues
#100: FILE: include/asm-s390/percpu.h:47:
+#define percpu_modcopy(pcpudst, src, size, zero_size)		\
 do {								\
 	unsigned int __i;					\
+	BUG_ON(zero_size != 0);					\
 	for_each_possible_cpu(__i)				\
 		memcpy((pcpudst)+__per_cpu_offset[__i],		\
 		       (src), (size));				\

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#103: FILE: include/asm-s390/percpu.h:50:
+	BUG_ON(zero_size != 0);					\

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'zero_size' may be better as '(zero_size)' to avoid precedence issues
#116: FILE: include/asm-sparc64/percpu.h:27:
+#define percpu_modcopy(pcpudst, src, size, zero_size)		\
 do {								\
 	unsigned int __i;					\
+	BUG_ON(zero_size != 0);					\
 	for_each_possible_cpu(__i)				\
 		memcpy((pcpudst)+__per_cpu_offset(__i),		\
 		       (src), (size));				\

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#119: FILE: include/asm-sparc64/percpu.h:30:
+	BUG_ON(zero_size != 0);					\

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'zero_size' may be better as '(zero_size)' to avoid precedence issues
#132: FILE: include/asm-x86_64/percpu.h:27:
+#define percpu_modcopy(pcpudst, src, size, zero_size)		\
 do {								\
 	unsigned int __i;					\
+	BUG_ON(zero_size != 0);					\
 	for_each_possible_cpu(__i)				\
 		memcpy((pcpudst)+__per_cpu_offset(__i),		\
 		       (src), (size));				\

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#135: FILE: include/asm-x86_64/percpu.h:30:
+	BUG_ON(zero_size != 0);					\

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Ehdr>
#152: FILE: kernel/module.c:357:
+static void find_pcpusecs(Elf_Ehdr *hdr,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Shdr>
#153: FILE: kernel/module.c:358:
+			  Elf_Shdr *sechdrs,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#184: FILE: kernel/module.c:409:
 }
+static inline void find_pcpusecs(Elf_Ehdr *hdr,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#200: FILE: kernel/module.c:421:
+	BUG_ON(init_sz != 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#201: FILE: kernel/module.c:422:
+	BUG_ON(zero_sz != 0);

CHECK:BRACES: braces {} should be used on all arms of this statement
#219: FILE: kernel/module.c:1188:
+			if (sym[i].st_shndx == pcpuindex[0])
[...]
-			else
[...]
+					+ sechdrs[pcpuindex[0]].sh_size;
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#226: FILE: kernel/module.c:1194:
+			} else

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000078939.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 8 warnings, 10 checks, 215 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000078939.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
