WARNING:TYPO_SPELLING: 'adresses' may be misspelled - perhaps 'addresses'?
#53: 
- It adresses the notion of "home node" of a task, this should be the node
     ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'easilly' may be misspelled - perhaps 'easily'?
#102: 
problem. Anyhow, this is minor and can be changed easilly. As well as the
                                                  ^^^^^^^

WARNING:TYPO_SPELLING: 'oppinions' may be misspelled - perhaps 'opinions'?
#117: 
Would be interesting to hear oppinions on initial balancing. What are the
                             ^^^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#125: 
diff -urN 2.4.17-ia64-kdbv2.1-K3ia64/arch/ia64/kernel/smpboot.c 2.4.17-ia64-kdbv2.1-K3ia64-nod3/arch/ia64/kernel/smpboot.c

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#147: FILE: arch/ia64/kernel/smpboot.c:145:
+	for (end = n-1; end >= 0; end--) {
 	            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#149: FILE: arch/ia64/kernel/smpboot.c:147:
+			if (a[j] > a[j+1]) {
 			              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#150: FILE: arch/ia64/kernel/smpboot.c:148:
+				t = a[j+1];
 				       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#151: FILE: arch/ia64/kernel/smpboot.c:149:
+				a[j+1] = a[j];
 				   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#166: FILE: arch/ia64/kernel/smpboot.c:519:
+^I/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: arch/ia64/kernel/smpboot.c:520:
+         * To be on the safe side: sort SAPIC IDs of CPUs$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#168: FILE: arch/ia64/kernel/smpboot.c:521:
+         */$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#184: FILE: arch/ia64/kernel/smpboot.c:575:
+}
+#ifdef CONFIG_IA64_DIG

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#191: FILE: arch/ia64/kernel/smpboot.c:582:
+	for (cpu = 0; cpu < NR_CPUS; cpu++)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#192: FILE: arch/ia64/kernel/smpboot.c:583:
+		if (cpu_online_map & (1<<cpu))
 		                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#225: FILE: include/asm-ia64/smp.h:122:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#226: FILE: include/asm-ia64/smp.h:123:
+ * This is the node ID on the NEC AzusA, $

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'hwid' may be better as '(hwid)' to avoid precedence issues
#229: FILE: include/asm-ia64/smp.h:126:
+#define SAPICID_TO_NODE(hwid) ((hwid >> 12) & 0xff)

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#272: FILE: kernel/fork.c:642:
+		void sched_best_cpu(struct task_struct *p);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:CODE_INDENT: code indent should use tabs where possible
#295: FILE: kernel/sched.c:147:
+ ^Iint nr_homenode[NR_NODES];$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#295: FILE: kernel/sched.c:147:
+ ^Iint nr_homenode[NR_NODES];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: kernel/sched.c:147:
+ ^Iint nr_homenode[NR_NODES];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#296: FILE: kernel/sched.c:148:
+ ^Iint cpus_load[NR_CPUS];$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#296: FILE: kernel/sched.c:148:
+ ^Iint cpus_load[NR_CPUS];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: kernel/sched.c:148:
+ ^Iint cpus_load[NR_CPUS];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#297: FILE: kernel/sched.c:149:
+ ^Iint pools_load[NR_NODES];$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#297: FILE: kernel/sched.c:149:
+ ^Iint pools_load[NR_NODES];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: kernel/sched.c:149:
+ ^Iint pools_load[NR_NODES];$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#322: FILE: kernel/sched.c:186:
+static int pool_ptr[NR_NODES+1];
                             ^

WARNING:TYPO_SPELLING: 'easilly' may be misspelled - perhaps 'easily'?
#373: FILE: kernel/sched.c:509:
+ * This concept can be extended easilly to more than two levels (multi-level
                                 ^^^^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#390: FILE: kernel/sched.c:526:
+	for (ii = pool_ptr[this_pool]; ii < pool_ptr[this_pool+1]; ii++) {
 	                                                      ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rq_src->nr_running < this_rq->prev_nr_running[i]'
#393: FILE: kernel/sched.c:529:
+		if (idle || (rq_src->nr_running < this_rq->prev_nr_running[i]))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'load > max_load'
#400: FILE: kernel/sched.c:536:
+		if ((load > max_load) && (rq_src != this_rq)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rq_src != this_rq'
#400: FILE: kernel/sched.c:536:
+		if ((load > max_load) && (rq_src != this_rq)) {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#409: FILE: kernel/sched.c:545:
+	*imbalance = (max_load - nr_running)/2;
 	                                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#412: FILE: kernel/sched.c:548:
+	if (idle || (*imbalance >= (max_load + 3)/4))
 	                                         ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#421: FILE: kernel/sched.c:557:
+		if (pool == this_pool) continue; // current pool already done

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#423: FILE: kernel/sched.c:559:
+		for (ii = pool_ptr[pool]; ii < pool_ptr[pool+1]; ii++) {
 		                                            ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rq_src->nr_running < this_rq->prev_nr_running[i]'
#426: FILE: kernel/sched.c:562:
+			if (idle || (rq_src->nr_running < this_rq->prev_nr_running[i]))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#444: FILE: kernel/sched.c:580:
+	*imbalance = (max_pool_load - this_rq->pools_load[this_pool])/2;
 	                                                             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#446: FILE: kernel/sched.c:582:
+	if (!idle && (*imbalance < (max_pool_load + 3)/4))
 	                                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#452: FILE: kernel/sched.c:588:
+	for (ii = pool_ptr[max_pool_idx]+1; ii < pool_ptr[max_pool_idx+1]; ii++) {
 	                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#452: FILE: kernel/sched.c:588:
+	for (ii = pool_ptr[max_pool_idx]+1; ii < pool_ptr[max_pool_idx+1]; ii++) {
 	                                                              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#459: FILE: kernel/sched.c:595:
+	*imbalance = (max_load - nr_running)/2;
 	                                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#461: FILE: kernel/sched.c:597:
+	if (idle || (*imbalance >= (max_load + 3)/4))
 	                                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#483: FILE: kernel/sched.c:618:
+	int this_pool=CPU_TO_NODE(this_cpu), take_own;
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#562: FILE: kernel/sched.c:1561:
+static atomic_t sched_node=ATOMIC_INIT(0);
                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#586: FILE: kernel/sched.c:1572:
+	for (nn = pool_ptr[best_node]; nn < pool_ptr[best_node+1]; nn++) {
 	                                                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#610: FILE: kernel/sched.c:1591:
+	int i, nn, node=0, best_node, load, min_load;
 	               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#611: FILE: kernel/sched.c:1592:
+	int pool_load[NR_NODES] = { [0 ... NR_NODES-1] = 0};
 	                                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#612: FILE: kernel/sched.c:1593:
+	int cpus_per_node[NR_NODES] = { [0 ... NR_NODES-1] = 0};
 	                                               ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#621: FILE: kernel/sched.c:1602:
+		int cpu = cpu_logical_map(i);
+		if (!(mask & (1<<cpu)))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#621: FILE: kernel/sched.c:1602:
+		if (!(mask & (1<<cpu)))
 		               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#626: FILE: kernel/sched.c:1607:
+		pool_load[node] += 1000*load;
 		                       ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#647: FILE: kernel/sched.c:1628:
+	printk("CPU pools : %d\n",numpools);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#647: FILE: kernel/sched.c:1628:
+	printk("CPU pools : %d\n",numpools);
 	                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#648: FILE: kernel/sched.c:1629:
+	for (i=0;i<numpools;i++) {
 	      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#648: FILE: kernel/sched.c:1629:
+	for (i=0;i<numpools;i++) {
 	        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#648: FILE: kernel/sched.c:1629:
+	for (i=0;i<numpools;i++) {
 	          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#648: FILE: kernel/sched.c:1629:
+	for (i=0;i<numpools;i++) {
 	                   ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#649: FILE: kernel/sched.c:1630:
+		printk("pool %d :",i);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#649: FILE: kernel/sched.c:1630:
+		printk("pool %d :",i);
 		                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#650: FILE: kernel/sched.c:1631:
+		for (j=pool_ptr[i];j<pool_ptr[i+1];j++)
 		      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#650: FILE: kernel/sched.c:1631:
+		for (j=pool_ptr[i];j<pool_ptr[i+1];j++)
 		                  ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#650: FILE: kernel/sched.c:1631:
+		for (j=pool_ptr[i];j<pool_ptr[i+1];j++)
 		                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#650: FILE: kernel/sched.c:1631:
+		for (j=pool_ptr[i];j<pool_ptr[i+1];j++)
 		                               ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#650: FILE: kernel/sched.c:1631:
+		for (j=pool_ptr[i];j<pool_ptr[i+1];j++)
 		                                  ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#651: FILE: kernel/sched.c:1632:
+			printk("%d ",pool_cpus[j]);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#651: FILE: kernel/sched.c:1632:
+			printk("%d ",pool_cpus[j]);
 			            ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#652: FILE: kernel/sched.c:1633:
+		printk("\n");

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#659: FILE: kernel/sched.c:1640:
+	int flag[NR_CPUS] = { [ 0 ... NR_CPUS-1] = 0 };
 	                                     ^

ERROR:SPACING: space prohibited after that open square bracket '['
#659: FILE: kernel/sched.c:1640:
+	int flag[NR_CPUS] = { [ 0 ... NR_CPUS-1] = 0 };

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#665: FILE: kernel/sched.c:1646:
+		if (!(cpu_online_map & (1<<i))) continue;
 		                         ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#665: FILE: kernel/sched.c:1646:
+		if (!(cpu_online_map & (1<<i))) continue;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#667: FILE: kernel/sched.c:1648:
+			pool_ptr[numpools]=ptr;
 			                  ^

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#670: FILE: kernel/sched.c:1651:
+				if (! (cpu_online_map & (1<<j))) continue;
 				    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#670: FILE: kernel/sched.c:1651:
+				if (! (cpu_online_map & (1<<j))) continue;
 				                          ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#670: FILE: kernel/sched.c:1651:
+				if (! (cpu_online_map & (1<<j))) continue;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#672: FILE: kernel/sched.c:1653:
+					pool_cpus[ptr++]=j;
 					                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#673: FILE: kernel/sched.c:1654:
+					flag[j]=1;
 					       ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#674: FILE: kernel/sched.c:1655:
+					mask |= (1<<j);
 					          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#677: FILE: kernel/sched.c:1658:
+			pool_mask[numpools]=mask;
 			                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#681: FILE: kernel/sched.c:1662:
+	pool_ptr[numpools]=ptr;
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#700: FILE: kernel/sched.c:1716:
+			rq->nr_homenode[j]=0;
 			                  ^

CHECK:SPACING: No space is necessary after a cast
#721: FILE: kernel/sys.c:1278:
+			pid = (int) arg3;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#725: FILE: kernel/sys.c:1282:
+				error = put_user(child->node,(int *)arg2);
 				                            ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#727: FILE: kernel/sys.c:1284:
+				printk("prctl: could not find process %d\n",pid);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#727: FILE: kernel/sys.c:1284:
+				printk("prctl: could not find process %d\n",pid);
 				                                           ^

CHECK:SPACING: No space is necessary after a cast
#733: FILE: kernel/sys.c:1290:
+			pid = (int) arg3;

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#737: FILE: kernel/sys.c:1294:
+				if (child->uid == current->uid || \

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#739: FILE: kernel/sys.c:1296:
+					printk("setting node of process %d to %d\n",pid,(int)arg2);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#739: FILE: kernel/sys.c:1296:
+					printk("setting node of process %d to %d\n",pid,(int)arg2);
 					                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#739: FILE: kernel/sys.c:1296:
+					printk("setting node of process %d to %d\n",pid,(int)arg2);
 					                                               ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#743: FILE: kernel/sys.c:1300:
+				printk("prctl: could not find process %d\n",pid);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#743: FILE: kernel/sys.c:1300:
+				printk("prctl: could not find process %d\n",pid);
 				                                           ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000474433.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 38 errors, 22 warnings, 34 checks, 580 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000474433.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
