WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#23: 
Here's something that myself and others at Cobalt Networks have found useful.

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#50: FILE: drivers/char/keyboard.c:254:
kbd, tty);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#51: FILE: drivers/char/keyboard.c:255:
+                       (void) handle_sysrq(kbd_sysrq_xlate[keycode], $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#51: FILE: drivers/char/keyboard.c:255:
+                       (void) handle_sysrq(kbd_sysrq_xlate[keycode], $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: No space is necessary after a cast
#51: FILE: drivers/char/keyboard.c:255:
+                       (void) handle_sysrq(kbd_sysrq_xlate[keycode], 

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#51: FILE: drivers/char/keyboard.c:255:
+                       (void) handle_sysrq(kbd_sysrq_xlate[keycode], $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 31)
#63: FILE: drivers/char/serial.c:646:
                         if (ch != 0 &&
[...]
+                               if (!handle_sysrq(ch, regs, NULL, NULL)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#67: FILE: drivers/char/serial.c:648:
+                               if (!handle_sysrq(ch, regs, NULL, NULL)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: drivers/char/serial.c:648:
+                               if (!handle_sysrq(ch, regs, NULL, NULL)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#67: FILE: drivers/char/serial.c:648:
+                               if (!handle_sysrq(ch, regs, NULL, NULL)) {
+                                       break_pressed = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#68: FILE: drivers/char/serial.c:649:
+                                       break_pressed = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: drivers/char/serial.c:649:
+                                       break_pressed = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#69: FILE: drivers/char/serial.c:650:
+                               } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: drivers/char/serial.c:650:
+                               } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#69: FILE: drivers/char/serial.c:650:
+                               } else {
[...]
+                                       break_pressed = jiffies;

ERROR:CODE_INDENT: code indent should use tabs where possible
#70: FILE: drivers/char/serial.c:651:
+                                       /* reset time-out! more data needed */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#71: FILE: drivers/char/serial.c:652:
+                                       break_pressed = jiffies;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: drivers/char/serial.c:652:
+                                       break_pressed = jiffies;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#72: FILE: drivers/char/serial.c:653:
+                               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: drivers/char/serial.c:653:
+                               }$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 31)
#85: FILE: drivers/char/serial_amba.c:358:
                         if (ch && time_before(jiffies, info->sysrq)) {
+                               if (!handle_sysrq(ch, regs, NULL, NULL)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#88: FILE: drivers/char/serial_amba.c:359:
+                               if (!handle_sysrq(ch, regs, NULL, NULL)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: drivers/char/serial_amba.c:359:
+                               if (!handle_sysrq(ch, regs, NULL, NULL)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#88: FILE: drivers/char/serial_amba.c:359:
+                               if (!handle_sysrq(ch, regs, NULL, NULL)) {
+                                       info->sysrq = 0;

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#88: FILE: drivers/char/serial_amba.c:359:
+                               if (!handle_sysrq(ch, regs, NULL, NULL)) {
[...]
+                               } else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#89: FILE: drivers/char/serial_amba.c:360:
+                                       info->sysrq = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: drivers/char/serial_amba.c:360:
+                                       info->sysrq = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#90: FILE: drivers/char/serial_amba.c:361:
+                               } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: drivers/char/serial_amba.c:361:
+                               } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#90: FILE: drivers/char/serial_amba.c:361:
+                               } else {
+                                       info->sysrq = jiffies;

ERROR:CODE_INDENT: code indent should use tabs where possible
#91: FILE: drivers/char/serial_amba.c:362:
+                                       info->sysrq = jiffies;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: drivers/char/serial_amba.c:362:
+                                       info->sysrq = jiffies;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#92: FILE: drivers/char/serial_amba.c:363:
+                               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: drivers/char/serial_amba.c:363:
+                               }$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#105: FILE: drivers/char/sysrq.c:45:
+static int sysrq_handle_loglevel(int key, struct pt_regs *pt_regs,
                 struct kbd_struct *kbd, struct tty_struct *tty) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#106: FILE: drivers/char/sysrq.c:46:
+static int sysrq_handle_loglevel(int key, struct pt_regs *pt_regs,
                 struct kbd_struct *kbd, struct tty_struct *tty) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: drivers/char/sysrq.c:52:
+       return 0;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#121: FILE: drivers/char/sysrq.c:63:
+static int sysrq_handle_SAK(int key, struct pt_regs *pt_regs,
                 struct kbd_struct *kbd, struct tty_struct *tty) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#122: FILE: drivers/char/sysrq.c:64:
+static int sysrq_handle_SAK(int key, struct pt_regs *pt_regs,
                 struct kbd_struct *kbd, struct tty_struct *tty) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: drivers/char/sysrq.c:68:
+       return 0;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#135: FILE: drivers/char/sysrq.c:79:
+static int sysrq_handle_unraw(int key, struct pt_regs *pt_regs,
                 struct kbd_struct *kbd, struct tty_struct *tty) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#136: FILE: drivers/char/sysrq.c:80:
+static int sysrq_handle_unraw(int key, struct pt_regs *pt_regs,
                 struct kbd_struct *kbd, struct tty_struct *tty) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: drivers/char/sysrq.c:83:
+       return 0;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#148: FILE: drivers/char/sysrq.c:93:
+static int sysrq_handle_reboot(int key, struct pt_regs *pt_regs,
                 struct kbd_struct *kbd, struct tty_struct *tty) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#149: FILE: drivers/char/sysrq.c:94:
+static int sysrq_handle_reboot(int key, struct pt_regs *pt_regs,
                 struct kbd_struct *kbd, struct tty_struct *tty) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: drivers/char/sysrq.c:96:
+       return 0;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#160: FILE: drivers/char/sysrq.c:224:
+static int sysrq_handle_sync(int key, struct pt_regs *pt_regs,
                 struct kbd_struct *kbd, struct tty_struct *tty) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#161: FILE: drivers/char/sysrq.c:225:
+static int sysrq_handle_sync(int key, struct pt_regs *pt_regs,
                 struct kbd_struct *kbd, struct tty_struct *tty) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: drivers/char/sysrq.c:228:
+       return 0;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#173: FILE: drivers/char/sysrq.c:236:
+static int sysrq_handle_mountro(int key, struct pt_regs *pt_regs,
                 struct kbd_struct *kbd, struct tty_struct *tty) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#174: FILE: drivers/char/sysrq.c:237:
+static int sysrq_handle_mountro(int key, struct pt_regs *pt_regs,
                 struct kbd_struct *kbd, struct tty_struct *tty) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: drivers/char/sysrq.c:240:
+       return 0;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#186: FILE: drivers/char/sysrq.c:253:
+static int sysrq_handle_showregs(int key, struct pt_regs *pt_regs,
                 struct kbd_struct *kbd, struct tty_struct *tty) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#187: FILE: drivers/char/sysrq.c:254:
+static int sysrq_handle_showregs(int key, struct pt_regs *pt_regs,
                 struct kbd_struct *kbd, struct tty_struct *tty) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: drivers/char/sysrq.c:257:
+       return 0;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#199: FILE: drivers/char/sysrq.c:266:
+static int sysrq_handle_showstate(int key, struct pt_regs *pt_regs,
                 struct kbd_struct *kbd, struct tty_struct *tty) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#200: FILE: drivers/char/sysrq.c:267:
+static int sysrq_handle_showstate(int key, struct pt_regs *pt_regs,
                 struct kbd_struct *kbd, struct tty_struct *tty) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: drivers/char/sysrq.c:269:
+       return 0;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#211: FILE: drivers/char/sysrq.c:278:
+static int sysrq_handle_showmem(int key, struct pt_regs *pt_regs,
                 struct kbd_struct *kbd, struct tty_struct *tty) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#212: FILE: drivers/char/sysrq.c:279:
+static int sysrq_handle_showmem(int key, struct pt_regs *pt_regs,
                 struct kbd_struct *kbd, struct tty_struct *tty) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: drivers/char/sysrq.c:281:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: drivers/char/sysrq.c:292:
+       char *p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: drivers/char/sysrq.c:293:
+       pid_t pid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: drivers/char/sysrq.c:294:
+       int errors;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: drivers/char/sysrq.c:296:
+       for (p = buf; *p; p++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#229: FILE: drivers/char/sysrq.c:296:
+       for (p = buf; *p; p++) {
+               if (*p < '0' || *p > '9') {

ERROR:CODE_INDENT: code indent should use tabs where possible
#230: FILE: drivers/char/sysrq.c:297:
+               if (*p < '0' || *p > '9') {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: drivers/char/sysrq.c:297:
+               if (*p < '0' || *p > '9') {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#230: FILE: drivers/char/sysrq.c:297:
+               if (*p < '0' || *p > '9') {
+                       printk("Bad pid: %s\n", buf);

ERROR:CODE_INDENT: code indent should use tabs where possible
#231: FILE: drivers/char/sysrq.c:298:
+                       printk("Bad pid: %s\n", buf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: drivers/char/sysrq.c:298:
+                       printk("Bad pid: %s\n", buf);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#231: FILE: drivers/char/sysrq.c:298:
+                       printk("Bad pid: %s\n", buf);

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: drivers/char/sysrq.c:299:
+                       return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: drivers/char/sysrq.c:299:
+                       return;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#233: FILE: drivers/char/sysrq.c:300:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: drivers/char/sysrq.c:300:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: drivers/char/sysrq.c:301:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: drivers/char/sysrq.c:303:
+       for (p = buf, pid =0; *p; p++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#236: FILE: drivers/char/sysrq.c:303:
+       for (p = buf, pid =0; *p; p++) {
+               pid *= 10;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#236: FILE: drivers/char/sysrq.c:303:
+       for (p = buf, pid =0; *p; p++) {
                          ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: drivers/char/sysrq.c:304:
+               pid *= 10;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: drivers/char/sysrq.c:304:
+               pid *= 10;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#238: FILE: drivers/char/sysrq.c:305:
+               pid += *p - '0';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: drivers/char/sysrq.c:305:
+               pid += *p - '0';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: drivers/char/sysrq.c:306:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: drivers/char/sysrq.c:307:
+       errors = kill_proc(pid, SIGKILL, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: drivers/char/sysrq.c:308:
+       printk("kill: %d - returns %d\n", pid, errors);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#241: FILE: drivers/char/sysrq.c:308:
+       printk("kill: %d - returns %d\n", pid, errors);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#243: FILE: drivers/char/sysrq.c:310:
+}
+int in_accumulate;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: drivers/char/sysrq.c:316:
+       static int i = 0;$

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#249: FILE: drivers/char/sysrq.c:316:
+       static int i = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: drivers/char/sysrq.c:318:
+       if (c == '\n' || c == '\r') {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#251: FILE: drivers/char/sysrq.c:318:
+       if (c == '\n' || c == '\r') {
+               buf[i] = '\0';

ERROR:CODE_INDENT: code indent should use tabs where possible
#252: FILE: drivers/char/sysrq.c:319:
+               buf[i] = '\0';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: drivers/char/sysrq.c:319:
+               buf[i] = '\0';$

ERROR:CODE_INDENT: code indent should use tabs where possible
#253: FILE: drivers/char/sysrq.c:320:
+               printk("\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: drivers/char/sysrq.c:320:
+               printk("\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#253: FILE: drivers/char/sysrq.c:320:
+               printk("\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#254: FILE: drivers/char/sysrq.c:321:
+               ask_to_kill(buf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: drivers/char/sysrq.c:321:
+               ask_to_kill(buf);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#255: FILE: drivers/char/sysrq.c:322:
+               in_accumulate = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: drivers/char/sysrq.c:322:
+               in_accumulate = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#256: FILE: drivers/char/sysrq.c:323:
+               i = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: drivers/char/sysrq.c:323:
+               i = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#257: FILE: drivers/char/sysrq.c:324:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: drivers/char/sysrq.c:324:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: drivers/char/sysrq.c:325:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: drivers/char/sysrq.c:326:
+       if (c == '\b' || c == '\0177') { /* backspace or delete? */$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#259: FILE: drivers/char/sysrq.c:326:
+       if (c == '\b' || c == '\0177') { /* backspace or delete? */
+               if (i > 0) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#260: FILE: drivers/char/sysrq.c:327:
+               if (i > 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: drivers/char/sysrq.c:327:
+               if (i > 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#260: FILE: drivers/char/sysrq.c:327:
+               if (i > 0) {
+                       i--;

ERROR:CODE_INDENT: code indent should use tabs where possible
#261: FILE: drivers/char/sysrq.c:328:
+                       i--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: drivers/char/sysrq.c:328:
+                       i--;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#262: FILE: drivers/char/sysrq.c:329:
+                       printk("\b \b");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: drivers/char/sysrq.c:329:
+                       printk("\b \b");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#262: FILE: drivers/char/sysrq.c:329:
+                       printk("\b \b");

ERROR:CODE_INDENT: code indent should use tabs where possible
#263: FILE: drivers/char/sysrq.c:330:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: drivers/char/sysrq.c:330:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#264: FILE: drivers/char/sysrq.c:331:
+               return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: drivers/char/sysrq.c:331:
+               return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: drivers/char/sysrq.c:332:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: drivers/char/sysrq.c:333:
+       if (c == '\025') { /* ^U?  kill the whole entry */$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#266: FILE: drivers/char/sysrq.c:333:
+       if (c == '\025') { /* ^U?  kill the whole entry */
+               i = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#267: FILE: drivers/char/sysrq.c:334:
+               i = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: drivers/char/sysrq.c:334:
+               i = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#268: FILE: drivers/char/sysrq.c:335:
+               printk("XXX\nenter pid to kill: ");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: drivers/char/sysrq.c:335:
+               printk("XXX\nenter pid to kill: ");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#268: FILE: drivers/char/sysrq.c:335:
+               printk("XXX\nenter pid to kill: ");

ERROR:CODE_INDENT: code indent should use tabs where possible
#269: FILE: drivers/char/sysrq.c:336:
+               return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: drivers/char/sysrq.c:336:
+               return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: drivers/char/sysrq.c:337:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: drivers/char/sysrq.c:338:
+       buf[i++] = c;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: drivers/char/sysrq.c:339:
+       printk("%c", c);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#272: FILE: drivers/char/sysrq.c:339:
+       printk("%c", c);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: drivers/char/sysrq.c:340:
+       return 1;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#276: FILE: drivers/char/sysrq.c:343:
+
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#277: FILE: drivers/char/sysrq.c:344:
+static int sysrq_handle_nuke(int key, struct pt_regs *pt_regs,
+               struct kbd_struct *kbd, struct tty_struct *tty) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#278: FILE: drivers/char/sysrq.c:345:
+               struct kbd_struct *kbd, struct tty_struct *tty) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#278: FILE: drivers/char/sysrq.c:345:
+static int sysrq_handle_nuke(int key, struct pt_regs *pt_regs,
+               struct kbd_struct *kbd, struct tty_struct *tty) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: drivers/char/sysrq.c:345:
+               struct kbd_struct *kbd, struct tty_struct *tty) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: drivers/char/sysrq.c:346:
+       printk("enter pid to kill: ");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#279: FILE: drivers/char/sysrq.c:346:
+       printk("enter pid to kill: ");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: drivers/char/sysrq.c:347:
+       in_accumulate = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: drivers/char/sysrq.c:348:
+       return 1;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#283: FILE: drivers/char/sysrq.c:350:
+}
+static struct sysrq_key_op sysrq_nuke_op = {

WARNING:INDENTED_LABEL: labels should not be indented
#284: FILE: drivers/char/sysrq.c:351:
+       handler:        sysrq_handle_nuke,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#285: FILE: drivers/char/sysrq.c:352:
+       help_msg:       "Nuke",
                ^

WARNING:INDENTED_LABEL: labels should not be indented
#285: FILE: drivers/char/sysrq.c:352:
+       help_msg:       "Nuke",

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#286: FILE: drivers/char/sysrq.c:353:
+       action_msg:     "Nuke process",
                  ^

WARNING:INDENTED_LABEL: labels should not be indented
#286: FILE: drivers/char/sysrq.c:353:
+       action_msg:     "Nuke process",

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#297: FILE: drivers/char/sysrq.c:378:
+static int sysrq_handle_term(int key, struct pt_regs *pt_regs,
                 struct kbd_struct *kbd, struct tty_struct *tty) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#298: FILE: drivers/char/sysrq.c:379:
+static int sysrq_handle_term(int key, struct pt_regs *pt_regs,
                 struct kbd_struct *kbd, struct tty_struct *tty) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: drivers/char/sysrq.c:382:
+       return 0;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#310: FILE: drivers/char/sysrq.c:390:
+static int sysrq_handle_kill(int key, struct pt_regs *pt_regs,
                 struct kbd_struct *kbd, struct tty_struct *tty) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#311: FILE: drivers/char/sysrq.c:391:
+static int sysrq_handle_kill(int key, struct pt_regs *pt_regs,
                 struct kbd_struct *kbd, struct tty_struct *tty) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: drivers/char/sysrq.c:394:
+       return 0;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#323: FILE: drivers/char/sysrq.c:402:
+static int sysrq_handle_killall(int key, struct pt_regs *pt_regs,
                 struct kbd_struct *kbd, struct tty_struct *tty) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#324: FILE: drivers/char/sysrq.c:403:
+static int sysrq_handle_killall(int key, struct pt_regs *pt_regs,
                 struct kbd_struct *kbd, struct tty_struct *tty) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#327: FILE: drivers/char/sysrq.c:406:
+       return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#347: FILE: drivers/char/sysrq.c:514:
+                 struct kbd_struct *kbd, struct tty_struct *tty)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: drivers/char/sysrq.c:514:
+                 struct kbd_struct *kbd, struct tty_struct *tty)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: drivers/char/sysrq.c:516:
+       int ret_val;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 15)
#351: FILE: drivers/char/sysrq.c:518:
         if (!sysrq_enabled)
+               return 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#353: FILE: drivers/char/sysrq.c:519:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: drivers/char/sysrq.c:519:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#357: FILE: drivers/char/sysrq.c:522:
+       ret_val = __handle_sysrq_nolock(key, pt_regs, kbd, tty);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: drivers/char/sysrq.c:524:
+       return ret_val;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#368: FILE: drivers/char/sysrq.c:533:
+int __handle_sysrq_nolock(int key, struct pt_regs *pt_regs,
                   struct kbd_struct *kbd, struct tty_struct *tty) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#369: FILE: drivers/char/sysrq.c:534:
+int __handle_sysrq_nolock(int key, struct pt_regs *pt_regs,
                   struct kbd_struct *kbd, struct tty_struct *tty) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#373: FILE: drivers/char/sysrq.c:538:
+       int ret_val;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 15)
#375: FILE: drivers/char/sysrq.c:540:
         if (!sysrq_enabled)
+               return 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#377: FILE: drivers/char/sysrq.c:541:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: drivers/char/sysrq.c:541:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: drivers/char/sysrq.c:543:
+       if (in_accumulate) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#379: FILE: drivers/char/sysrq.c:543:
+       if (in_accumulate) {
+               ret_val = accumulate_buf(key);

ERROR:CODE_INDENT: code indent should use tabs where possible
#380: FILE: drivers/char/sysrq.c:544:
+               ret_val = accumulate_buf(key);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: drivers/char/sysrq.c:544:
+               ret_val = accumulate_buf(key);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#381: FILE: drivers/char/sysrq.c:545:
+               return ret_val;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: drivers/char/sysrq.c:545:
+               return ret_val;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: drivers/char/sysrq.c:546:
+       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#391: FILE: drivers/char/sysrq.c:556:
+               ret_val = op_p->handler(key, pt_regs, kbd, tty);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#391: FILE: drivers/char/sysrq.c:556:
+               ret_val = op_p->handler(key, pt_regs, kbd, tty);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#399: FILE: drivers/char/sysrq.c:568:
+               ret_val = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#399: FILE: drivers/char/sysrq.c:568:
+               ret_val = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#401: FILE: drivers/char/sysrq.c:570:
+       return ret_val;$

CHECK:SPACING: No space is necessary after a cast
#415: FILE: drivers/s390/char/ctrlchar.c:29:
+       (void) handle_sysrq(ctrlchar_sysrq_key, NULL, NULL, tty);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#415: FILE: drivers/s390/char/ctrlchar.c:29:
+       (void) handle_sysrq(ctrlchar_sysrq_key, NULL, NULL, tty);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 31)
#424: FILE: drivers/tc/zs.c:445:
                         if (ch != 0 &&
[...]
+                               if (!handle_sysrq(ch, regs, NULL, NULL)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#428: FILE: drivers/tc/zs.c:447:
+                               if (!handle_sysrq(ch, regs, NULL, NULL)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#428: FILE: drivers/tc/zs.c:447:
+                               if (!handle_sysrq(ch, regs, NULL, NULL)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#428: FILE: drivers/tc/zs.c:447:
+                               if (!handle_sysrq(ch, regs, NULL, NULL)) {
+                                       break_pressed = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#429: FILE: drivers/tc/zs.c:448:
+                                       break_pressed = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#429: FILE: drivers/tc/zs.c:448:
+                                       break_pressed = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#430: FILE: drivers/tc/zs.c:449:
+                               } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#430: FILE: drivers/tc/zs.c:449:
+                               } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#430: FILE: drivers/tc/zs.c:449:
+                               } else {
[...]
+                                       break_pressed = jiffies;

ERROR:CODE_INDENT: code indent should use tabs where possible
#431: FILE: drivers/tc/zs.c:450:
+                                       /* reset time-out! more data needed */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#432: FILE: drivers/tc/zs.c:451:
+                                       break_pressed = jiffies;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#432: FILE: drivers/tc/zs.c:451:
+                                       break_pressed = jiffies;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#433: FILE: drivers/tc/zs.c:452:
+                               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#433: FILE: drivers/tc/zs.c:452:
+                               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#446: FILE: include/linux/sysrq.h:21:
+       int (*handler)(int, struct pt_regs *,$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#446: FILE: include/linux/sysrq.h:21:
+       int (*handler)(int, struct pt_regs *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#446: FILE: include/linux/sysrq.h:21:
+       int (*handler)(int, struct pt_regs *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kbd_struct *' should also have an identifier name
#446: FILE: include/linux/sysrq.h:21:
+       int (*handler)(int, struct pt_regs *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct tty_struct *' should also have an identifier name
#446: FILE: include/linux/sysrq.h:21:
+       int (*handler)(int, struct pt_regs *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#447: FILE: include/linux/sysrq.h:22:
+       int (*handler)(int, struct pt_regs *,
                         struct kbd_struct *, struct tty_struct *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#464: FILE: include/linux/sysrq.h:40:
+int handle_sysrq(int, struct pt_regs *,
                 struct kbd_struct *, struct tty_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#472: FILE: include/linux/sysrq.h:48:
+int __handle_sysrq_nolock(int, struct pt_regs *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#472: FILE: include/linux/sysrq.h:48:
+int __handle_sysrq_nolock(int, struct pt_regs *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kbd_struct *' should also have an identifier name
#472: FILE: include/linux/sysrq.h:48:
+int __handle_sysrq_nolock(int, struct pt_regs *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct tty_struct *' should also have an identifier name
#472: FILE: include/linux/sysrq.h:48:
+int __handle_sysrq_nolock(int, struct pt_regs *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#473: FILE: include/linux/sysrq.h:49:
+int __handle_sysrq_nolock(int, struct pt_regs *,
                  struct kbd_struct *, struct tty_struct *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000478214.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 66 errors, 126 warnings, 22 checks, 378 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000478214.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
