WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
It will additionally be used by NFSv4 in order to optimize away LOOKUP calls

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#55: FILE: drivers/net/wan/comx.c:925:
+static struct dentry *comx_lookup(struct inode *dir, struct dentry *dentry, struct vfsintent *intent)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#67: FILE: fs/adfs/adfs.h:91:
+extern struct dentry *adfs_lookup(struct inode *dir, struct dentry *dentry, struct vfsintent *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsintent *' should also have an identifier name
#67: FILE: fs/adfs/adfs.h:91:
+extern struct dentry *adfs_lookup(struct inode *dir, struct dentry *dentry, struct vfsintent *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#116: FILE: fs/afs/dir.c:417:
+static struct dentry *afs_dir_lookup(struct inode *dir, struct dentry *dentry, struct vfsintent *intent)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#134: FILE: fs/afs/dir.c:498:
+	_enter("%s,%p",dentry->d_name.name,intent);
 	              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#134: FILE: fs/afs/dir.c:498:
+	_enter("%s,%p",dentry->d_name.name,intent);
 	                                  ^

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#146: FILE: fs/afs/mntpt.c:24:
+static struct dentry *afs_mntpt_lookup(struct inode *dir, struct dentry *dentry, struct vfsintent *);

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#155: FILE: fs/afs/mntpt.c:96:
+static struct dentry *afs_mntpt_lookup(struct inode *dir, struct dentry *dentry, struct vfsintent *intent)

ERROR:SPACING: space required after that ',' (ctx:OxV)
#167: FILE: fs/autofs/root.c:21:
+static struct dentry *autofs_root_lookup(struct inode *,struct dentry *, struct vfsintent *);
                                                        ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#176: FILE: fs/autofs/root.c:147:
+static int autofs_revalidate(struct dentry * dentry, struct vfsintent *intent)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#185: FILE: fs/autofs/root.c:198:
+static struct dentry *autofs_root_lookup(struct inode *dir, struct dentry *dentry, struct vfsintent *intent)

ERROR:SPACING: space required after that ',' (ctx:OxV)
#206: FILE: fs/autofs4/root.c:21:
+static struct dentry *autofs4_dir_lookup(struct inode *,struct dentry *, struct vfsintent *);
                                                        ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#213: FILE: fs/autofs4/root.c:27:
+static struct dentry *autofs4_root_lookup(struct inode *,struct dentry *, struct vfsintent *);
                                                         ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#222: FILE: fs/autofs4/root.c:146:
+static int autofs4_root_revalidate(struct dentry * dentry, struct vfsintent *intent)

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#240: FILE: fs/autofs4/root.c:231:
+static struct dentry *autofs4_dir_lookup(struct inode *dir, struct dentry *dentry, struct vfsintent *intent)

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#249: FILE: fs/autofs4/root.c:245:
+static struct dentry *autofs4_root_lookup(struct inode *dir, struct dentry *dentry, struct vfsintent *intent)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (dentry->d_op->d_revalidate)
#258: FILE: fs/autofs4/root.c:282:
+		(dentry->d_op->d_revalidate)(dentry, intent);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#291: FILE: fs/bfs/dir.c:130:
+static struct dentry * bfs_lookup(struct inode * dir, struct dentry * dentry, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#291: FILE: fs/bfs/dir.c:130:
+static struct dentry * bfs_lookup(struct inode * dir, struct dentry * dentry, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#291: FILE: fs/bfs/dir.c:130:
+static struct dentry * bfs_lookup(struct inode * dir, struct dentry * dentry, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#291: FILE: fs/bfs/dir.c:130:
+static struct dentry * bfs_lookup(struct inode * dir, struct dentry * dentry, struct vfsintent *intent)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#303: FILE: fs/cifs/cifsfs.h:50:
+extern struct dentry *cifs_lookup(struct inode *, struct dentry *, struct vfsintent *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#303: FILE: fs/cifs/cifsfs.h:50:
+extern struct dentry *cifs_lookup(struct inode *, struct dentry *, struct vfsintent *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#303: FILE: fs/cifs/cifsfs.h:50:
+extern struct dentry *cifs_lookup(struct inode *, struct dentry *, struct vfsintent *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsintent *' should also have an identifier name
#303: FILE: fs/cifs/cifsfs.h:50:
+extern struct dentry *cifs_lookup(struct inode *, struct dentry *, struct vfsintent *);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#336: FILE: fs/coda/dir.c:33:
+static struct dentry *coda_lookup(struct inode *dir, struct dentry *target, struct vfsintent *intent);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#375: FILE: fs/cramfs/inode.c:345:
+static struct dentry * cramfs_lookup(struct inode *dir, struct dentry *dentry, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#375: FILE: fs/cramfs/inode.c:345:
+static struct dentry * cramfs_lookup(struct inode *dir, struct dentry *dentry, struct vfsintent *intent)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#387: FILE: fs/devfs/base.c:2164:
+static int devfs_d_revalidate_wait (struct dentry *dentry, struct vfsintent *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#396: FILE: fs/devfs/base.c:2201:
+static int devfs_d_revalidate_wait (struct dentry *dentry, struct vfsintent *intent)

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#405: FILE: fs/devfs/base.c:2254:
+static struct dentry *devfs_lookup (struct inode *dir, struct dentry *dentry, struct vfsintent *intent)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#405: FILE: fs/devfs/base.c:2254:
+static struct dentry *devfs_lookup (struct inode *dir, struct dentry *dentry, struct vfsintent *intent)

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#417: FILE: fs/efs/namei.c:60:
+struct dentry *efs_lookup(struct inode *dir, struct dentry *dentry, struct vfsintent *intent) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#429: FILE: fs/ext2/namei.c:69:
+static struct dentry *ext2_lookup(struct inode * dir, struct dentry *dentry, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#429: FILE: fs/ext2/namei.c:69:
+static struct dentry *ext2_lookup(struct inode * dir, struct dentry *dentry, struct vfsintent *intent)

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#441: FILE: fs/ext3/namei.c:975:
+static struct dentry *ext3_lookup(struct inode * dir, struct dentry *dentry, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#441: FILE: fs/ext3/namei.c:975:
+static struct dentry *ext3_lookup(struct inode * dir, struct dentry *dentry, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#453: FILE: fs/freevxfs/vxfs_lookup.c:54:
+static struct dentry *	vxfs_lookup(struct inode *, struct dentry *, struct vfsintent *);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#491: FILE: fs/hfs/dir_cap.c:98:
+static struct dentry *cap_lookup(struct inode * dir, struct dentry *dentry, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#491: FILE: fs/hfs/dir_cap.c:98:
+static struct dentry *cap_lookup(struct inode * dir, struct dentry *dentry, struct vfsintent *intent)

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#512: FILE: fs/hfs/dir_dbl.c:111:
+static struct dentry *dbl_lookup(struct inode * dir, struct dentry *dentry, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#512: FILE: fs/hfs/dir_dbl.c:111:
+static struct dentry *dbl_lookup(struct inode * dir, struct dentry *dentry, struct vfsintent *intent)

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#533: FILE: fs/hfs/dir_nat.c:100:
+static struct dentry *nat_lookup(struct inode * dir, struct dentry *dentry, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#533: FILE: fs/hfs/dir_nat.c:100:
+static struct dentry *nat_lookup(struct inode * dir, struct dentry *dentry, struct vfsintent *intent)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#578: FILE: fs/hpfs/hpfs_fn.h:219:
+struct dentry *hpfs_lookup(struct inode *, struct dentry *, struct vfsintent *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#578: FILE: fs/hpfs/hpfs_fn.h:219:
+struct dentry *hpfs_lookup(struct inode *, struct dentry *, struct vfsintent *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsintent *' should also have an identifier name
#578: FILE: fs/hpfs/hpfs_fn.h:219:
+struct dentry *hpfs_lookup(struct inode *, struct dentry *, struct vfsintent *);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#602: FILE: fs/intermezzo/dir.c:242:
+struct dentry *presto_lookup(struct inode * dir, struct dentry *dentry, struct vfsintent *intent)

ERROR:CODE_INDENT: code indent should use tabs where possible
#611: FILE: fs/intermezzo/dir.c:289:
+                        de = iops->lookup(dir, dentry, intent);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#611: FILE: fs/intermezzo/dir.c:289:
+                        de = iops->lookup(dir, dentry, intent);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#623: FILE: fs/intermezzo/intermezzo_fs.h:373:
+struct dentry *presto_lookup(struct inode * dir, struct dentry *dentry, struct vfsintent *intent);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#635: FILE: fs/isofs/namei.c:161:
+struct dentry *isofs_lookup(struct inode * dir, struct dentry * dentry, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#635: FILE: fs/isofs/namei.c:161:
+struct dentry *isofs_lookup(struct inode * dir, struct dentry * dentry, struct vfsintent *intent)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#659: FILE: fs/jffs2/dir.c:29:
+static struct dentry *jffs2_lookup (struct inode *,struct dentry *, struct vfsintent *);

ERROR:SPACING: space required after that ',' (ctx:OxV)
#659: FILE: fs/jffs2/dir.c:29:
+static struct dentry *jffs2_lookup (struct inode *,struct dentry *, struct vfsintent *);
                                                   ^

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#668: FILE: fs/jffs2/dir.c:69:
+static struct dentry *jffs2_lookup(struct inode *dir_i, struct dentry *target, struct vfsintent *intent)

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#704: FILE: fs/minix/namei.c:57:
+static struct dentry *minix_lookup(struct inode * dir, struct dentry *dentry, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#704: FILE: fs/minix/namei.c:57:
+static struct dentry *minix_lookup(struct inode * dir, struct dentry *dentry, struct vfsintent *intent)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#716: FILE: fs/msdos/namei.c:196:
+struct dentry *msdos_lookup(struct inode *dir,struct dentry *dentry, struct vfsintent *intent)
                                              ^

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#728: FILE: fs/namei.c:277:
+static struct dentry * cached_lookup(struct dentry * parent, struct qstr * name, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#728: FILE: fs/namei.c:277:
+static struct dentry * cached_lookup(struct dentry * parent, struct qstr * name, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#728: FILE: fs/namei.c:277:
+static struct dentry * cached_lookup(struct dentry * parent, struct qstr * name, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#728: FILE: fs/namei.c:277:
+static struct dentry * cached_lookup(struct dentry * parent, struct qstr * name, struct vfsintent *intent)

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#746: FILE: fs/namei.c:340:
+static struct dentry * real_lookup(struct dentry * parent, struct qstr * name, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#746: FILE: fs/namei.c:340:
+static struct dentry * real_lookup(struct dentry * parent, struct qstr * name, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#746: FILE: fs/namei.c:340:
+static struct dentry * real_lookup(struct dentry * parent, struct qstr * name, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#746: FILE: fs/namei.c:340:
+static struct dentry * real_lookup(struct dentry * parent, struct qstr * name, struct vfsintent *intent)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#774: FILE: fs/namei.c:527:
+static int do_lookup(struct nameidata *nd, struct qstr *name, struct path *path)
                                        ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#799: FILE: fs/namei.c:642:
+		err = do_lookup(nd, &this, &next);
 		                ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#808: FILE: fs/namei.c:703:
+		err = do_lookup(nd, &this, &next);
 		                ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#825: FILE: fs/namei.c:838:
+int __path_lookup(const char *name, unsigned int flags, struct nameidata *nd,
                                                                           ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#826: FILE: fs/namei.c:839:
+int __path_lookup(const char *name, unsigned int flags, struct nameidata *nd,
+		struct vfsintent *intent)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#836: FILE: fs/namei.c:867:
+int path_lookup(const char *name, unsigned int flags, struct nameidata *nd)
                                                                         ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#838: FILE: fs/namei.c:869:
+	return __path_lookup(name, flags, nd, NULL);
 	                                  ^^

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#847: FILE: fs/namei.c:877:
+static struct dentry * __lookup_hash(struct qstr *name, struct dentry * base, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#847: FILE: fs/namei.c:877:
+static struct dentry * __lookup_hash(struct qstr *name, struct dentry * base, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#847: FILE: fs/namei.c:877:
+static struct dentry * __lookup_hash(struct qstr *name, struct dentry * base, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#871: FILE: fs/namei.c:916:
+struct dentry * lookup_hash(struct qstr *name, struct dentry * base)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#871: FILE: fs/namei.c:916:
+struct dentry * lookup_hash(struct qstr *name, struct dentry * base)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#892: FILE: fs/namei.c:1235:
+	intent->nd = nd;
 	        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#892: FILE: fs/namei.c:1235:
+	intent->nd = nd;
 	             ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#899: FILE: fs/namei.c:1241:
+		error = __path_lookup(pathname, lookup_flags(flag), nd, intent);
 		                                                    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#908: FILE: fs/namei.c:1251:
+	error = __path_lookup(pathname, LOOKUP_PARENT, nd, intent);
 	                                               ^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#956: FILE: fs/ncpfs/dir.c:267:
+__ncp_lookup_validate(struct dentry * dentry, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#965: FILE: fs/ncpfs/dir.c:336:
+ncp_lookup_validate(struct dentry * dentry, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1000: FILE: fs/nfs/dir.c:518:
+static int nfs_lookup_revalidate(struct dentry * dentry, struct vfsintent *intent)

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1009: FILE: fs/nfs/dir.c:633:
+static struct dentry *nfs_lookup(struct inode *dir, struct dentry * dentry, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1009: FILE: fs/nfs/dir.c:633:
+static struct dentry *nfs_lookup(struct inode *dir, struct dentry * dentry, struct vfsintent *intent)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1020: FILE: fs/nfsctl.c:37:
+	nd.intent = NULL;
 	^^

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1040: FILE: fs/ntfs/namei.c:91:
+static struct dentry *ntfs_lookup(struct inode *dir_ino, struct dentry *dent, struct vfsintent *intent)

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#1052: FILE: fs/openpromfs/inode.c:64:
+static struct dentry *openpromfs_lookup(struct inode *, struct dentry *dentry, struct vfsintent *intent);

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#1061: FILE: fs/openpromfs/inode.c:642:
+static struct dentry *openpromfs_lookup(struct inode * dir, struct dentry *dentry, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1061: FILE: fs/openpromfs/inode.c:642:
+static struct dentry *openpromfs_lookup(struct inode * dir, struct dentry *dentry, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1073: FILE: fs/proc/base.c:809:
+static int pid_revalidate(struct dentry * dentry, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1082: FILE: fs/proc/base.c:817:
+static int pid_fd_revalidate(struct dentry * dentry, struct vfsintent *intent)

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#1091: FILE: fs/proc/base.c:901:
+static struct dentry *proc_lookupfd(struct inode * dir, struct dentry * dentry, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1091: FILE: fs/proc/base.c:901:
+static struct dentry *proc_lookupfd(struct inode * dir, struct dentry * dentry, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1091: FILE: fs/proc/base.c:901:
+static struct dentry *proc_lookupfd(struct inode * dir, struct dentry * dentry, struct vfsintent *intent)

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#1100: FILE: fs/proc/base.c:967:
+static struct dentry *proc_base_lookup(struct inode *dir, struct dentry *dentry, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1109: FILE: fs/proc/base.c:1099:
+struct dentry *proc_pid_lookup(struct inode *dir, struct dentry * dentry, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1121: FILE: fs/proc/generic.c:339:
+struct dentry *proc_lookup(struct inode * dir, struct dentry *dentry, struct vfsintent *intent)

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#1133: FILE: fs/proc/root.c:82:
+static struct dentry *proc_root_lookup(struct inode * dir, struct dentry * dentry, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1133: FILE: fs/proc/root.c:82:
+static struct dentry *proc_root_lookup(struct inode * dir, struct dentry * dentry, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1133: FILE: fs/proc/root.c:82:
+static struct dentry *proc_root_lookup(struct inode * dir, struct dentry * dentry, struct vfsintent *intent)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1142: FILE: fs/proc/root.c:90:
+	if (!proc_lookup(dir, dentry, intent)) {
 		return NULL;
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1159: FILE: fs/qnx4/namei.c:110:
+struct dentry * qnx4_lookup(struct inode *dir, struct dentry *dentry, struct vfsintent *intent)

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#1171: FILE: fs/reiserfs/namei.c:319:
+static struct dentry * reiserfs_lookup (struct inode * dir, struct dentry * dentry, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1171: FILE: fs/reiserfs/namei.c:319:
+static struct dentry * reiserfs_lookup (struct inode * dir, struct dentry * dentry, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1171: FILE: fs/reiserfs/namei.c:319:
+static struct dentry * reiserfs_lookup (struct inode * dir, struct dentry * dentry, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1171: FILE: fs/reiserfs/namei.c:319:
+static struct dentry * reiserfs_lookup (struct inode * dir, struct dentry * dentry, struct vfsintent *intent)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1171: FILE: fs/reiserfs/namei.c:319:
+static struct dentry * reiserfs_lookup (struct inode * dir, struct dentry * dentry, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1213: FILE: fs/smbfs/dir.c:295:
+smb_lookup_validate(struct dentry * dentry, struct vfsintent *intent)

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1234: FILE: fs/sysv/namei.c:67:
+static struct dentry *sysv_lookup(struct inode * dir, struct dentry * dentry, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1234: FILE: fs/sysv/namei.c:67:
+static struct dentry *sysv_lookup(struct inode * dir, struct dentry * dentry, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1234: FILE: fs/sysv/namei.c:67:
+static struct dentry *sysv_lookup(struct inode * dir, struct dentry * dentry, struct vfsintent *intent)

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1266: FILE: fs/ufs/namei.c:65:
+static struct dentry *ufs_lookup(struct inode * dir, struct dentry *dentry, struct vfsintent *intent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1266: FILE: fs/ufs/namei.c:65:
+static struct dentry *ufs_lookup(struct inode * dir, struct dentry *dentry, struct vfsintent *intent)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1287: FILE: fs/umsdos/dir.c:567:
+struct dentry *UMSDOS_lookup (struct inode *dir, struct dentry *dentry, struct vfsintent *intent)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1299: FILE: fs/umsdos/rdir.c:104:
+	ret = msdos_lookup (dir, dentry, NULL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1308: FILE: fs/umsdos/rdir.c:132:
+struct dentry *UMSDOS_rlookup ( struct inode *dir, struct dentry *dentry, struct vfsintent *intent)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1308: FILE: fs/umsdos/rdir.c:132:
+struct dentry *UMSDOS_rlookup ( struct inode *dir, struct dentry *dentry, struct vfsintent *intent)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1338: FILE: fs/vfat/namei.c:862:
+struct dentry *vfat_lookup(struct inode *dir,struct dentry *dentry, struct vfsintent *intent)
                                             ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1363: FILE: include/linux/affs_fs.h:44:
+extern struct dentry *affs_lookup(struct inode *dir, struct dentry *dentry, struct vfsintent *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsintent *' should also have an identifier name
#1363: FILE: include/linux/affs_fs.h:44:
+extern struct dentry *affs_lookup(struct inode *dir, struct dentry *dentry, struct vfsintent *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#1383: FILE: include/linux/dcache.h:110:
+	int (*d_revalidate)(struct dentry *, struct vfsintent *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsintent *' should also have an identifier name
#1383: FILE: include/linux/dcache.h:110:
+	int (*d_revalidate)(struct dentry *, struct vfsintent *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1395: FILE: include/linux/efs_fs.h:49:
+extern struct dentry *efs_lookup(struct inode *, struct dentry *, struct vfsintent *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#1395: FILE: include/linux/efs_fs.h:49:
+extern struct dentry *efs_lookup(struct inode *, struct dentry *, struct vfsintent *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#1395: FILE: include/linux/efs_fs.h:49:
+extern struct dentry *efs_lookup(struct inode *, struct dentry *, struct vfsintent *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsintent *' should also have an identifier name
#1395: FILE: include/linux/efs_fs.h:49:
+extern struct dentry *efs_lookup(struct inode *, struct dentry *, struct vfsintent *);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1415: FILE: include/linux/fs.h:734:
+	struct dentry * (*lookup) (struct inode *,struct dentry *, struct vfsintent *);

ERROR:SPACING: space required after that ',' (ctx:OxV)
#1415: FILE: include/linux/fs.h:734:
+	struct dentry * (*lookup) (struct inode *,struct dentry *, struct vfsintent *);
 	                                         ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#1415: FILE: include/linux/fs.h:734:
+	struct dentry * (*lookup) (struct inode *,struct dentry *, struct vfsintent *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#1415: FILE: include/linux/fs.h:734:
+	struct dentry * (*lookup) (struct inode *,struct dentry *, struct vfsintent *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsintent *' should also have an identifier name
#1415: FILE: include/linux/fs.h:734:
+	struct dentry * (*lookup) (struct inode *,struct dentry *, struct vfsintent *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1424: FILE: include/linux/fs.h:1295:
+extern struct dentry *simple_lookup(struct inode *, struct dentry *, struct vfsintent *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#1424: FILE: include/linux/fs.h:1295:
+extern struct dentry *simple_lookup(struct inode *, struct dentry *, struct vfsintent *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#1424: FILE: include/linux/fs.h:1295:
+extern struct dentry *simple_lookup(struct inode *, struct dentry *, struct vfsintent *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsintent *' should also have an identifier name
#1424: FILE: include/linux/fs.h:1295:
+extern struct dentry *simple_lookup(struct inode *, struct dentry *, struct vfsintent *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1436: FILE: include/linux/iso_fs.h:230:
+extern struct dentry *isofs_lookup(struct inode *, struct dentry *, struct vfsintent *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#1436: FILE: include/linux/iso_fs.h:230:
+extern struct dentry *isofs_lookup(struct inode *, struct dentry *, struct vfsintent *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#1436: FILE: include/linux/iso_fs.h:230:
+extern struct dentry *isofs_lookup(struct inode *, struct dentry *, struct vfsintent *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsintent *' should also have an identifier name
#1436: FILE: include/linux/iso_fs.h:230:
+extern struct dentry *isofs_lookup(struct inode *, struct dentry *, struct vfsintent *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1448: FILE: include/linux/msdos_fs.h:320:
+extern struct dentry *msdos_lookup(struct inode *dir, struct dentry *, struct vfsintent *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#1448: FILE: include/linux/msdos_fs.h:320:
+extern struct dentry *msdos_lookup(struct inode *dir, struct dentry *, struct vfsintent *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsintent *' should also have an identifier name
#1448: FILE: include/linux/msdos_fs.h:320:
+extern struct dentry *msdos_lookup(struct inode *dir, struct dentry *, struct vfsintent *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1457: FILE: include/linux/msdos_fs.h:330:
+extern struct dentry *vfat_lookup(struct inode *dir, struct dentry *, struct vfsintent *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#1457: FILE: include/linux/msdos_fs.h:330:
+extern struct dentry *vfat_lookup(struct inode *dir, struct dentry *, struct vfsintent *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsintent *' should also have an identifier name
#1457: FILE: include/linux/msdos_fs.h:330:
+extern struct dentry *vfat_lookup(struct inode *dir, struct dentry *, struct vfsintent *);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#1501: FILE: include/linux/namei.h:55:
+	struct nameidata *nd;
 	                  ^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1504: FILE: include/linux/namei.h:58:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1520: FILE: include/linux/open.h:10:
+	struct file *filp;
 	             ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1532: FILE: include/linux/proc_fs.h:89:
+struct dentry *proc_pid_lookup(struct inode *dir, struct dentry * dentry, struct vfsintent *intent);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1541: FILE: include/linux/proc_fs.h:110:
+extern struct dentry *proc_lookup(struct inode *, struct dentry *, struct vfsintent *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#1541: FILE: include/linux/proc_fs.h:110:
+extern struct dentry *proc_lookup(struct inode *, struct dentry *, struct vfsintent *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#1541: FILE: include/linux/proc_fs.h:110:
+extern struct dentry *proc_lookup(struct inode *, struct dentry *, struct vfsintent *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsintent *' should also have an identifier name
#1541: FILE: include/linux/proc_fs.h:110:
+extern struct dentry *proc_lookup(struct inode *, struct dentry *, struct vfsintent *);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1553: FILE: include/linux/qnx4_fs.h:113:
+extern struct dentry *qnx4_lookup(struct inode *dir, struct dentry *dentry, struct vfsintent *intent);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1553: FILE: include/linux/qnx4_fs.h:113:
+extern struct dentry *qnx4_lookup(struct inode *dir, struct dentry *dentry, struct vfsintent *intent);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000368099.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 61 errors, 86 warnings, 13 checks, 1208 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000368099.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
