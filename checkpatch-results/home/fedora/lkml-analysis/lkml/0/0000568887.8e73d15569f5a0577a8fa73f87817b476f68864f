CHECK:MACRO_ARG_REUSE: Macro argument reuse 'inode' - possible side-effects?
#43: FILE: fs/pipe.c:31:
+#define PIPE_UMAP_EMPTY(inode)	\
+	((PIPE_UMAP(inode) == NULL) || \
+	 (PIPE_UMAPOFF(inode) >= PIPE_UMAPLEN(inode)))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!PIPE_UMAP"
#44: FILE: fs/pipe.c:32:
+	((PIPE_UMAP(inode) == NULL) || \

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'inode' - possible side-effects?
#47: FILE: fs/pipe.c:35:
+#define PIPE_EMPTY(inode)	\
+	((PIPE_LEN(inode) == 0) && PIPE_UMAP_EMPTY(inode))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#50: FILE: fs/pipe.c:38:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#214: FILE: fs/pipe.c:278:
+		int err, do_sigpipe;;

WARNING:INDENTED_LABEL: labels should not be indented
#260: FILE: fs/pipe.c:324:
+	kio_break:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#263: FILE: fs/pipe.c:327:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#266: FILE: fs/pipe.c:330:
+	} else while (count > 0) {

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#266: FILE: fs/pipe.c:330:
+	} else while (count > 0) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#285: FILE: fs/pipe.c:438:
+ ^I/* Is this not racy occasionally? */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#285: FILE: fs/pipe.c:438:
+ ^I/* Is this not racy occasionally? */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: fs/pipe.c:438:
+ ^I/* Is this not racy occasionally? */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#286: FILE: fs/pipe.c:439:
+ ^Imask = 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#286: FILE: fs/pipe.c:439:
+ ^Imask = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: fs/pipe.c:439:
+ ^Imask = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#287: FILE: fs/pipe.c:440:
+ ^Iif (!PIPE_EMPTY(*inode))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#287: FILE: fs/pipe.c:440:
+ ^Iif (!PIPE_EMPTY(*inode))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#287: FILE: fs/pipe.c:440:
+ ^Iif (!PIPE_EMPTY(*inode))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#288: FILE: fs/pipe.c:441:
+ ^I^Imask = POLLIN | POLLRDNORM;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#288: FILE: fs/pipe.c:441:
+ ^I^Imask = POLLIN | POLLRDNORM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: fs/pipe.c:441:
+ ^I^Imask = POLLIN | POLLRDNORM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#289: FILE: fs/pipe.c:442:
+ ^Ielse if (!PIPE_UMAP(*inode))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#289: FILE: fs/pipe.c:442:
+ ^Ielse if (!PIPE_UMAP(*inode))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: fs/pipe.c:442:
+ ^Ielse if (!PIPE_UMAP(*inode))$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "info->umap"
#297: FILE: fs/pipe.c:465:
+		if (info->umap != NULL)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#298: FILE: fs/pipe.c:466:
+			BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000568887.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 13 warnings, 5 checks, 291 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000568887.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
