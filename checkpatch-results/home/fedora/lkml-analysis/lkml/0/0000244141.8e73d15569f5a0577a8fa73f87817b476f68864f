WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#85: FILE: drivers/char/ds1302.c:1:
+/*!***************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#86: FILE: drivers/char/ds1302.c:2:
+/*!***************************************************************************
+*!

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#109: FILE: drivers/char/ds1302.c:25:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#111: FILE: drivers/char/ds1302.c:27:
+#include <asm/io.h>

ERROR:SPACING: space required after that ',' (ctx:VxV)
#126: FILE: drivers/char/ds1302.c:42:
+	outw(0x0001,(unsigned long)PLD_RTCRSTODT);
 	           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#128: FILE: drivers/char/ds1302.c:44:
+	outw(((x<<8)|(reg_addr&0xff)),(unsigned long)PLD_RTCWRDATA);
 	        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#128: FILE: drivers/char/ds1302.c:44:
+	outw(((x<<8)|(reg_addr&0xff)),(unsigned long)PLD_RTCWRDATA);
 	            ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#128: FILE: drivers/char/ds1302.c:44:
+	outw(((x<<8)|(reg_addr&0xff)),(unsigned long)PLD_RTCWRDATA);
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#128: FILE: drivers/char/ds1302.c:44:
+	outw(((x<<8)|(reg_addr&0xff)),(unsigned long)PLD_RTCWRDATA);
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#130: FILE: drivers/char/ds1302.c:46:
+	outw(0x0002,(unsigned long)PLD_RTCCR);
 	           ^

ERROR:SPACING: space required before the open parenthesis '('
#132: FILE: drivers/char/ds1302.c:48:
+	while(inw((unsigned long)PLD_RTCCR));

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#132: FILE: drivers/char/ds1302.c:48:
+	while(inw((unsigned long)PLD_RTCCR));

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#135: FILE: drivers/char/ds1302.c:51:
+	outw(0x0000,(unsigned long)PLD_RTCRSTODT);
 	           ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#137: FILE: drivers/char/ds1302.c:53:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#145: FILE: drivers/char/ds1302.c:61:
+	outw(0x0001,(unsigned long)PLD_RTCRSTODT);
 	           ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#147: FILE: drivers/char/ds1302.c:63:
+	outw((reg_addr&0xff),(unsigned long)PLD_RTCRDDATA);
 	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#147: FILE: drivers/char/ds1302.c:63:
+	outw((reg_addr&0xff),(unsigned long)PLD_RTCRDDATA);
 	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#149: FILE: drivers/char/ds1302.c:65:
+	outw(0x0001,(unsigned long)PLD_RTCCR);
 	           ^

ERROR:SPACING: space required before the open parenthesis '('
#151: FILE: drivers/char/ds1302.c:67:
+	while(inw((unsigned long)PLD_RTCCR));

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#151: FILE: drivers/char/ds1302.c:67:
+	while(inw((unsigned long)PLD_RTCCR));

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#154: FILE: drivers/char/ds1302.c:70:
+	retval=(inw((unsigned long)PLD_RTCRDDATA) & 0xff00)>>8;
 	      ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#154: FILE: drivers/char/ds1302.c:70:
+	retval=(inw((unsigned long)PLD_RTCRDDATA) & 0xff00)>>8;
 	                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#157: FILE: drivers/char/ds1302.c:73:
+	outw(0x0000,(unsigned long)PLD_RTCRSTODT);
 	           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#167: FILE: drivers/char/ds1302.c:83:
+	out_byte_rtc(0x8e,0x00);
 	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#175: FILE: drivers/char/ds1302.c:91:
+	out_byte_rtc(0x8e,0x80);
 	                 ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#178: FILE: drivers/char/ds1302.c:94:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#187: FILE: drivers/char/ds1302.c:103:
+	x=in_byte_rtc((0x81 | (reg << 1))); /* read register */
 	 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#198: FILE: drivers/char/ds1302.c:114:
+	out_byte_rtc((0x80 | (reg << 1)),val);
 	                                ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: drivers/char/ds1302.c:154:
+    {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#238: FILE: drivers/char/ds1302.c:154:
+static unsigned char days_in_mo[] =
+    {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#248: FILE: drivers/char/ds1302.c:164:
+	switch(cmd) {
+		case RTC_RD_TIME:	/* read the time/date from RTC	*/
[...]
+		case RTC_SET_TIME:	/* set the RTC */
[...]
+		case RTC_SET_CHARGE: /* set the RTC TRICKLE CHARGE register */
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required before the open parenthesis '('
#248: FILE: drivers/char/ds1302.c:164:
+	switch(cmd) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#253: FILE: drivers/char/ds1302.c:169:
+			memset(&rtc_tm, 0, sizeof (struct rtc_time));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#255: FILE: drivers/char/ds1302.c:171:
+			if (copy_to_user((struct rtc_time*)arg, &rtc_tm, sizeof(struct rtc_time)))

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#269: FILE: drivers/char/ds1302.c:185:
+			if (copy_from_user(&rtc_tm, (struct rtc_time*)arg, sizeof(struct rtc_time)))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#279: FILE: drivers/char/ds1302.c:195:
+
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'yrs < 1970'
#280: FILE: drivers/char/ds1302.c:196:
+			if ((yrs < 1970) || (yrs > 2069))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'yrs > 2069'
#280: FILE: drivers/char/ds1302.c:196:
+			if ((yrs < 1970) || (yrs > 2069))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mon > 12'
#285: FILE: drivers/char/ds1302.c:201:
+			if ((mon > 12) || (day == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'day == 0'
#285: FILE: drivers/char/ds1302.c:201:
+			if ((mon > 12) || (day == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mon == 2'
#288: FILE: drivers/char/ds1302.c:204:
+			if (day > (days_in_mo[mon] + ((mon == 2) && leap_yr)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hrs >= 24'
#291: FILE: drivers/char/ds1302.c:207:
+			if ((hrs >= 24) || (min >= 60) || (sec >= 60))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'min >= 60'
#291: FILE: drivers/char/ds1302.c:207:
+			if ((hrs >= 24) || (min >= 60) || (sec >= 60))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sec >= 60'
#291: FILE: drivers/char/ds1302.c:207:
+			if ((hrs >= 24) || (min >= 60) || (sec >= 60))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#331: FILE: drivers/char/ds1302.c:247:
+			if(copy_from_user(&tcs_val, (int*)arg, sizeof(int)))

ERROR:SPACING: space required before the open parenthesis '('
#331: FILE: drivers/char/ds1302.c:247:
+			if(copy_from_user(&tcs_val, (int*)arg, sizeof(int)))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#367: FILE: drivers/char/ds1302.c:283:
+
+

WARNING:CONST_STRUCT: struct file_operations should normally be const
#370: FILE: drivers/char/ds1302.c:286:
+static struct file_operations rtc_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#384: FILE: drivers/char/ds1302.c:300:
+	baur=(boot_cpu_data.bus_clock/(2*1000*1000));
 	    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#384: FILE: drivers/char/ds1302.c:300:
+	baur=(boot_cpu_data.bus_clock/(2*1000*1000));
 	                             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#384: FILE: drivers/char/ds1302.c:300:
+	baur=(boot_cpu_data.bus_clock/(2*1000*1000));
 	                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#384: FILE: drivers/char/ds1302.c:300:
+	baur=(boot_cpu_data.bus_clock/(2*1000*1000));
 	                                     ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#386: FILE: drivers/char/ds1302.c:302:
+	printk("%s: Set PLD_RTCBAUR = %d\n", ds1302_name,baur);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#386: FILE: drivers/char/ds1302.c:302:
+	printk("%s: Set PLD_RTCBAUR = %d\n", ds1302_name,baur);
 	                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#388: FILE: drivers/char/ds1302.c:304:
+	outw(0x0000,(unsigned long)PLD_RTCCR);
 	           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#389: FILE: drivers/char/ds1302.c:305:
+	outw(0x0000,(unsigned long)PLD_RTCRSTODT);
 	           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#390: FILE: drivers/char/ds1302.c:306:
+	outw(baur,(unsigned long)PLD_RTCBAUR);
 	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#397: FILE: drivers/char/ds1302.c:313:
+	out_byte_rtc(0xc0,MAGIC_PATTERN);
 	                 ^

ERROR:SPACING: space required before the open parenthesis '('
#400: FILE: drivers/char/ds1302.c:316:
+	if((res = in_byte_rtc(0xc1)) == MAGIC_PATTERN) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#400: FILE: drivers/char/ds1302.c:316:
+	if((res = in_byte_rtc(0xc1)) == MAGIC_PATTERN) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#402: FILE: drivers/char/ds1302.c:318:
+		char buf[100];
+		ds1302_wdisable();

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#403: FILE: drivers/char/ds1302.c:319:
+		printk("%s: RTC found.\n", ds1302_name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#405: FILE: drivers/char/ds1302.c:321:
+		printk(buf);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#408: FILE: drivers/char/ds1302.c:324:
+		printk("%s: RTC not found.\n", ds1302_name);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#415: FILE: drivers/char/ds1302.c:331:
+
+

WARNING:BRACES: braces {} are not necessary for single statement blocks
#421: FILE: drivers/char/ds1302.c:337:
+	if (!ds1302_probe()) {
+		return -1;
+  	}

ERROR:CODE_INDENT: code indent should use tabs where possible
#423: FILE: drivers/char/ds1302.c:339:
+  ^I}$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#423: FILE: drivers/char/ds1302.c:339:
+  ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: drivers/char/ds1302.c:339:
+  ^I}$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#431: FILE: drivers/char/ds1302.c:347:
+		printk(KERN_INFO "%s: unable to get major %d for rtc\n",

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000244141.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 33 errors, 16 warnings, 21 checks, 384 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000244141.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
