WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#47: 
diff -urN linux-2.4.20-clean/Documentation/Configure.help linux-2.4.20_ippp-filter/Documentation/Configure.help

WARNING:LONG_LINE_STRING: line length of 114 exceeds 100 columns
#91: FILE: drivers/isdn/isdn_net.c:1304:
+						isdn_net_unreachable(ndev, skb, "dial rejected: packet filtered");

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#156: FILE: drivers/isdn/isdn_ppp.c:390:
+	if (is->pass_filter.filter) {
+		kfree(is->pass_filter.filter);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#160: FILE: drivers/isdn/isdn_ppp.c:394:
+	if (is->active_filter.filter) {
+		kfree(is->active_filter.filter);

CHECK:SPACING: No space is necessary after a cast
#179: FILE: drivers/isdn/isdn_ppp.c:615:
+				if (copy_from_user(&uprog, (void *) arg, sizeof(uprog)))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!code"
#184: FILE: drivers/isdn/isdn_ppp.c:620:
+					if (code == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#194: FILE: drivers/isdn/isdn_ppp.c:630:
+				filtp = (cmd == PPPIOCSPASS) ? &is->pass_filter : &is->active_filter;

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#196: FILE: drivers/isdn/isdn_ppp.c:632:
+				if (filtp->filter)
+					kfree(filtp->filter);

CHECK:SPACING: No space is necessary after a cast
#218: FILE: drivers/isdn/isdn_ppp.c:1039:
+		mlp = (isdn_net_local *) lp->master->priv;

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: drivers/isdn/isdn_ppp.c:1040:
+ ^I^Islot = mlp->ppp_slot;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#219: FILE: drivers/isdn/isdn_ppp.c:1040:
+ ^I^Islot = mlp->ppp_slot;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: drivers/isdn/isdn_ppp.c:1040:
+ ^I^Islot = mlp->ppp_slot;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#233: FILE: drivers/isdn/isdn_ppp.c:1137:
+	 * a four-byte PPP header on each packet (which is still present) */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#238: FILE: drivers/isdn/isdn_ppp.c:1142:
+	if (is->pass_filter.filter
+	    && sk_run_filter(skb, is->pass_filter.filter,

ERROR:CODE_INDENT: code indent should use tabs where possible
#239: FILE: drivers/isdn/isdn_ppp.c:1143:
+^I                    is->pass_filter.len) == 0) {$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#241: FILE: drivers/isdn/isdn_ppp.c:1145:
+			printk(KERN_DEBUG "IPPP: inbound frame filtered.\n");

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#246: FILE: drivers/isdn/isdn_ppp.c:1150:
+	if (!(is->active_filter.filter
+	      && sk_run_filter(skb, is->active_filter.filter,

ERROR:CODE_INDENT: code indent should use tabs where possible
#247: FILE: drivers/isdn/isdn_ppp.c:1151:
+^I                       is->active_filter.len) == 0)) {$

WARNING:TYPO_SPELLING: 'reseting' may be misspelled - perhaps 'resetting'?
#249: FILE: drivers/isdn/isdn_ppp.c:1153:
+			printk(KERN_DEBUG "IPPP: link-active filter: reseting huptimer.\n");
 			                                             ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#249: FILE: drivers/isdn/isdn_ppp.c:1153:
+			printk(KERN_DEBUG "IPPP: link-active filter: reseting huptimer.\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#286: FILE: drivers/isdn/isdn_ppp.c:1279:
+	 * a four-byte PPP header on each packet */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#291: FILE: drivers/isdn/isdn_ppp.c:1284:
+^Iif (ipt->pass_filter.filter $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#292: FILE: drivers/isdn/isdn_ppp.c:1285:
+	if (ipt->pass_filter.filter 
+	    && sk_run_filter(skb, ipt->pass_filter.filter,

ERROR:CODE_INDENT: code indent should use tabs where possible
#293: FILE: drivers/isdn/isdn_ppp.c:1286:
+^I^I             ipt->pass_filter.len) == 0) {$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#295: FILE: drivers/isdn/isdn_ppp.c:1288:
+			printk(KERN_DEBUG "IPPP: outbound frame filtered.\n");

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#300: FILE: drivers/isdn/isdn_ppp.c:1293:
+	if (!(ipt->active_filter.filter
+	      && sk_run_filter(skb, ipt->active_filter.filter,

ERROR:CODE_INDENT: code indent should use tabs where possible
#301: FILE: drivers/isdn/isdn_ppp.c:1294:
+^I^I               ipt->active_filter.len) == 0)) {$

WARNING:TYPO_SPELLING: 'reseting' may be misspelled - perhaps 'resetting'?
#303: FILE: drivers/isdn/isdn_ppp.c:1296:
+			printk(KERN_DEBUG "IPPP: link-active filter: reseting huptimer.\n");
 			                                             ^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#303: FILE: drivers/isdn/isdn_ppp.c:1296:
+			printk(KERN_DEBUG "IPPP: link-active filter: reseting huptimer.\n");

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'u_int16_t'
#326: FILE: drivers/isdn/isdn_ppp.c:1453:
+	u_int16_t proto;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#337: FILE: drivers/isdn/isdn_ppp.c:1464:
+		printk(KERN_ERR "isdn_ppp_autodial_filter: unsupported protocol 0x%x.\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'isdn_ppp_autodial_filter', this function's name, in a string
#337: FILE: drivers/isdn/isdn_ppp.c:1464:
+		printk(KERN_ERR "isdn_ppp_autodial_filter: unsupported protocol 0x%x.\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#350: FILE: drivers/isdn/isdn_ppp.c:1477:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#352: FILE: drivers/isdn/isdn_ppp.c:1479:
+^I        && sk_run_filter(skb, is->pass_filter.filter,$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#352: FILE: drivers/isdn/isdn_ppp.c:1479:
+	drop |= is->pass_filter.filter
+	        && sk_run_filter(skb, is->pass_filter.filter,

ERROR:CODE_INDENT: code indent should use tabs where possible
#353: FILE: drivers/isdn/isdn_ppp.c:1480:
+^I                         is->pass_filter.len) == 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#355: FILE: drivers/isdn/isdn_ppp.c:1482:
+^I        && sk_run_filter(skb, is->active_filter.filter,$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#355: FILE: drivers/isdn/isdn_ppp.c:1482:
+	drop |= is->active_filter.filter
+	        && sk_run_filter(skb, is->active_filter.filter,

ERROR:CODE_INDENT: code indent should use tabs where possible
#356: FILE: drivers/isdn/isdn_ppp.c:1483:
+^I                         is->active_filter.len) == 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#357: FILE: drivers/isdn/isdn_ppp.c:1484:
+^I$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#372: FILE: drivers/isdn/isdn_ppp.h:22:
+extern int isdn_ppp_autodial_filter(struct sk_buff *, isdn_net_local *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sk_buff *' should also have an identifier name
#372: FILE: drivers/isdn/isdn_ppp.h:22:
+extern int isdn_ppp_autodial_filter(struct sk_buff *, isdn_net_local *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'isdn_net_local *' should also have an identifier name
#372: FILE: drivers/isdn/isdn_ppp.h:22:
+extern int isdn_ppp_autodial_filter(struct sk_buff *, isdn_net_local *);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#394: FILE: include/linux/isdn_ppp.h:230:
+  struct sock_fprog pass_filter;^I/* filter for packets to pass */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: include/linux/isdn_ppp.h:231:
+  struct sock_fprog active_filter;^I/* filter for pkts to reset idle */$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#459: FILE: ipppd/ippp-filter-compat.h:1:
+#ifndef _IPPP_FILTER_COMPAT_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#468: FILE: ipppd/ippp-filter-compat.h:10:
+                                                                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#468: FILE: ipppd/ippp-filter-compat.h:10:
+                                                                                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#468: FILE: ipppd/ippp-filter-compat.h:10:
+                                                                                $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#535: FILE: ipppd/options.c:304:
+static int setpassfilter __P((int,char **));
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#536: FILE: ipppd/options.c:305:
+static int setactivefilter __P((int,char **));
                                    ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#548: FILE: ipppd/options.c:487:
+    { "pass-filter", 1, setpassfilter},^I^I/* pass filter */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#549: FILE: ipppd/options.c:488:
+    { "active-filter", 1, setactivefilter},^I/* link-active filter */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#565: FILE: ipppd/options.c:2641:
+    int argc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#566: FILE: ipppd/options.c:2642:
+    char **argv;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#568: FILE: ipppd/options.c:2644:
+    if (pcap_compile_nopcap(PPP_HDRLEN, DLT_PPP, &pass_filter, *argv, 1, netmask) == 0)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#569: FILE: ipppd/options.c:2645:
+        return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#569: FILE: ipppd/options.c:2645:
+        return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#570: FILE: ipppd/options.c:2646:
+    option_error("error in pass-filter expression.\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#571: FILE: ipppd/options.c:2647:
+    return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#579: FILE: ipppd/options.c:2655:
+    int argc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#580: FILE: ipppd/options.c:2656:
+    char **argv;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#582: FILE: ipppd/options.c:2658:
+    if (pcap_compile_nopcap(PPP_HDRLEN, DLT_PPP, &active_filter, *argv, 1, netmask) == 0)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#583: FILE: ipppd/options.c:2659:
+        return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#583: FILE: ipppd/options.c:2659:
+        return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#584: FILE: ipppd/options.c:2660:
+    option_error("error in active-filter expression.\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#585: FILE: ipppd/options.c:2661:
+    return 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#620: FILE: ipppd/sys-linux.c:529:
+{       $

ERROR:CODE_INDENT: code indent should use tabs where possible
#621: FILE: ipppd/sys-linux.c:530:
+        struct sock_fprog fp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#621: FILE: ipppd/sys-linux.c:530:
+        struct sock_fprog fp;$

CHECK:SPACING: No space is necessary after a cast
#631: FILE: ipppd/sys-linux.c:540:
+		fp.filter = (struct sock_filter *) pass->bf_insns;

CHECK:SPACING: No space is necessary after a cast
#639: FILE: ipppd/sys-linux.c:548:
+		fp.filter = (struct sock_filter *) active->bf_insns;

ERROR:CODE_INDENT: code indent should use tabs where possible
#642: FILE: ipppd/sys-linux.c:551:
+^I        ^Ireturn 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#642: FILE: ipppd/sys-linux.c:551:
+^I        ^Ireturn 0;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000387005.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 40 warnings, 13 checks, 523 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000387005.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
