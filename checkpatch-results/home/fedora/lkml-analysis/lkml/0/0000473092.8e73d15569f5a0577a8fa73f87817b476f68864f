WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
diff -Nur -X /opt/home/roman/nodiff linux-task_struct/arch/i386/kernel/process.c linux-thread_info/arch/i386/kernel/process.c

CHECK:SPACING: No space is necessary after a cast
#38: FILE: arch/i386/kernel/process.c:594:
+	childregs = ((struct pt_regs *) (THREAD_SIZE + (unsigned long) p->stack)) - 1;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#59: FILE: arch/i386/kernel/smpboot.c:848:
+	stack_start.esp = (void *) (1024 + PAGE_SIZE + (char *)idle->stack);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#71: FILE: arch/i386/kernel/traps.c:161:
+	if ((esp ^ (unsigned long)tsk->stack) & (PAGE_MASK<<1))
 	                                                  ^

CHECK:SPACING: No space is necessary after a cast
#100: FILE: include/asm-alpha/thread_info.h:50:
+#define free_thread_stack(stk) free_pages((unsigned long) (stk), 1)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#115: FILE: include/asm-i386/processor.h:438:
+#define KSTK_EIP(tsk)	(((unsigned long *)(4096+(unsigned long)(tsk)->stack))[1019])
                      	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#116: FILE: include/asm-i386/processor.h:439:
+#define KSTK_ESP(tsk)	(((unsigned long *)(4096+(unsigned long)(tsk)->stack))[1022])
                      	                        ^

CHECK:SPACING: No space is necessary after a cast
#131: FILE: include/asm-i386/thread_info.h:76:
+#define alloc_thread_stack()	((struct thread_info *) __get_free_pages(GFP_KERNEL,1))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#131: FILE: include/asm-i386/thread_info.h:76:
+#define alloc_thread_stack()	((struct thread_info *) __get_free_pages(GFP_KERNEL,1))
                             	                                                   ^

CHECK:SPACING: No space is necessary after a cast
#132: FILE: include/asm-i386/thread_info.h:77:
+#define free_thread_stack(stk)	free_pages((unsigned long) (stk), 1)

CHECK:SPACING: No space is necessary after a cast
#151: FILE: include/asm-ppc/thread_info.h:52:
+#define free_thread_stack(stk)	free_pages((unsigned long) (stk), 1)

CHECK:SPACING: No space is necessary after a cast
#171: FILE: include/asm-ppc64/thread_info.h:49:
+#define free_thread_stack(stk)	free_pages((unsigned long) (stk), THREAD_ORDER)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#187: FILE: include/asm-sparc64/thread_info.h:133:
+#define free_thread_stack(stk)	free_pages((unsigned long)(stk),1)
                               	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#192: FILE: include/asm-sparc64/thread_info.h:136:
+#define free_thread_stack(stk)	free_pages((unsigned long)(stk),0)
                               	                               ^

CHECK:SPACING: No space is necessary after a cast
#210: FILE: include/asm-x86_64/thread_info.h:74:
+#define alloc_thread_stack()	((struct thread_info *) __get_free_pages(GFP_KERNEL,1))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#210: FILE: include/asm-x86_64/thread_info.h:74:
+#define alloc_thread_stack()	((struct thread_info *) __get_free_pages(GFP_KERNEL,1))
                             	                                                   ^

CHECK:SPACING: No space is necessary after a cast
#211: FILE: include/asm-x86_64/thread_info.h:75:
+#define free_thread_stack(stk)	free_pages((unsigned long) (stk), 1)

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#225: FILE: include/linux/init_task.h:45:
+    stack:		&init_thread_info,				\
          ^

WARNING:INDENTED_LABEL: labels should not be indented
#225: FILE: include/linux/init_task.h:45:
+    stack:		&init_thread_info,				\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#237: FILE: include/linux/sched.h:666:
+	set_ti_thread_flag(get_thread_info(tsk),flag);
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#243: FILE: include/linux/sched.h:671:
+	clear_ti_thread_flag(get_thread_info(tsk),flag);
 	                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#249: FILE: include/linux/sched.h:676:
+	return test_and_set_ti_thread_flag(get_thread_info(tsk),flag);
 	                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#255: FILE: include/linux/sched.h:681:
+	return test_and_clear_ti_thread_flag(get_thread_info(tsk),flag);
 	                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#261: FILE: include/linux/sched.h:686:
+	return test_ti_thread_flag(get_thread_info(tsk),flag);
 	                                               ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#302: FILE: kernel/fork.c:102:
+	if (!stack) return NULL;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 't->state == TASK_RUNNING'
#453: FILE: kernel/signal.c:511:
+	if ((t->state == TASK_RUNNING) && (get_thread_info(t)->cpu != smp_processor_id()))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000473092.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 2 warnings, 13 checks, 343 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000473092.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
