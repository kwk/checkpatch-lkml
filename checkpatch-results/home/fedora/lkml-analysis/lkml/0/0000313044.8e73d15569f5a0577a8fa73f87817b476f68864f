WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
diff -urN -X dontdiff linux-2.6.1-rc2.pending/security/selinux/hooks.c linux-2.6.1-rc2.w1/security/selinux/hooks.c

ERROR:TRAILING_WHITESPACE: trailing whitespace
#84: FILE: security/selinux/hooks.c:2685:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#102: FILE: security/selinux/hooks.c:2703:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#110: FILE: security/selinux/hooks.c:2711:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#114: FILE: security/selinux/hooks.c:2715:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#125: FILE: security/selinux/hooks.c:2726:
+^I                   netif_perm, &nsec->avcr, &ad);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_WHITESPACE: trailing whitespace
#128: FILE: security/selinux/hooks.c:2729:
+out:^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#134: FILE: security/selinux/hooks.c:2735:
+                                              struct sk_buff **pskb,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: security/selinux/hooks.c:2735:
+                                              struct sk_buff **pskb,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#135: FILE: security/selinux/hooks.c:2736:
+                                              const struct net_device *in,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: security/selinux/hooks.c:2736:
+                                              const struct net_device *in,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#136: FILE: security/selinux/hooks.c:2737:
+                                              const struct net_device *out,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: security/selinux/hooks.c:2737:
+                                              const struct net_device *out,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: security/selinux/hooks.c:2738:
+                                              int (*okfn)(struct sk_buff *))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: security/selinux/hooks.c:2738:
+                                              int (*okfn)(struct sk_buff *))$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#149: FILE: security/selinux/hooks.c:2750:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#152: FILE: security/selinux/hooks.c:2753:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#156: FILE: security/selinux/hooks.c:2757:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#166: FILE: security/selinux/hooks.c:2767:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#169: FILE: security/selinux/hooks.c:2770:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#174: FILE: security/selinux/hooks.c:2775:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#178: FILE: security/selinux/hooks.c:2779:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#189: FILE: security/selinux/hooks.c:2790:
+^I                   netif_perm, &nsec->avcr, &ad) ? NF_DROP : NF_ACCEPT;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#218: FILE: security/selinux/hooks.c:3608:
+^I  .pf =^I^IPF_INET, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#219: FILE: security/selinux/hooks.c:3609:
+^I  .hooknum =^INF_IP_POST_ROUTING, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#229: FILE: security/selinux/hooks.c:3619:
+^I^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#230: FILE: security/selinux/hooks.c:3620:
+	printk(KERN_INFO "SELinux:  Registering netfilter hooks\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#231: FILE: security/selinux/hooks.c:3621:
+^I$

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#240: FILE: security/selinux/hooks.c:3630:
+__initcall(selinux_nf_ip_init);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#247: FILE: security/selinux/include/netif.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#265: FILE: security/selinux/include/netif.h:19:
+struct sel_netif
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#311: FILE: security/selinux/netif.c:1:
+/*

ERROR:CODE_INDENT: code indent should use tabs where possible
#369: FILE: security/selinux/netif.c:59:
+^I^I                                     struct sel_netif, list);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#379: FILE: security/selinux/netif.c:69:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#384: FILE: security/selinux/netif.c:74:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#402: FILE: security/selinux/netif.c:92:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "netif"
#403: FILE: security/selinux/netif.c:93:
+	if (likely(netif != NULL))

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#405: FILE: security/selinux/netif.c:95:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#411: FILE: security/selinux/netif.c:101:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#423: FILE: security/selinux/netif.c:113:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#425: FILE: security/selinux/netif.c:115:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#432: FILE: security/selinux/netif.c:122:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#435: FILE: security/selinux/netif.c:125:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#437: FILE: security/selinux/netif.c:127:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#439: FILE: security/selinux/netif.c:129:
+^I        nsec->if_sid, nsec->msg_sid);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#439: FILE: security/selinux/netif.c:129:
+	DEBUGP("new: ifindex=%u name=%s if_sid=%u msg_sid=%u\n", dev->ifindex, dev->name,
+	        nsec->if_sid, nsec->msg_sid);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#449: FILE: security/selinux/netif.c:139:
+^I$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#450: FILE: security/selinux/netif.c:140:
+	DEBUGP("%s: %s\n", __FUNCTION__, netif->nsec.dev->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#456: FILE: security/selinux/netif.c:146:
+	DEBUGP("%s: %s\n", __FUNCTION__, netif->nsec.dev->name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#457: FILE: security/selinux/netif.c:147:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#475: FILE: security/selinux/netif.c:165:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#491: FILE: security/selinux/netif.c:181:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#494: FILE: security/selinux/netif.c:184:
+^I^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#503: FILE: security/selinux/netif.c:193:
+                                  u16 class, u32 perms, u32 *retained)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#503: FILE: security/selinux/netif.c:193:
+                                  u16 class, u32 perms, u32 *retained)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#513: FILE: security/selinux/netif.c:203:
+                                             unsigned long event, void *ptr)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#513: FILE: security/selinux/netif.c:203:
+                                             unsigned long event, void *ptr)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#530: FILE: security/selinux/netif.c:220:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#538: FILE: security/selinux/netif.c:228:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#540: FILE: security/selinux/netif.c:230:
+^I                       SECSID_NULL, SECSID_NULL, SECCLASS_NULL, 0);$

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#548: FILE: security/selinux/netif.c:238:
+__initcall(sel_netif_init);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000313044.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 45 errors, 14 warnings, 2 checks, 483 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000313044.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
