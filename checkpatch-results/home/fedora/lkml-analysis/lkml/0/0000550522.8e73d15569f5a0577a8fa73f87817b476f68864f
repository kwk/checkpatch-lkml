WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#87: 
//  EXTRAVERSION =
    ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#123: FILE: include/asm-i386/kfpu.h:1:
+#ifndef _ASM_KFPU_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#140: FILE: include/asm-i386/kfpu.h:18:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#150: FILE: include/asm-i386/kfpu.h:28:
+	unsigned char buffer[512+16];
 	                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#160: FILE: include/asm-i386/kfpu.h:38:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#219: FILE: include/asm-i386/page.h:19:
+#define copy_page(to,from)	sse_copy_page(to,from)
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#219: FILE: include/asm-i386/page.h:19:
+#define copy_page(to,from)	sse_copy_page(to,from)
                           	                ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#229: FILE: include/asm-i386/sse.h:1:
+#ifndef _ASM_SSE_H

ERROR:TRAILING_WHITESPACE: trailing whitespace
#235: FILE: include/asm-i386/sse.h:7:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: include/asm-i386/sse.h:7:
+ $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#236: FILE: include/asm-i386/sse.h:8:
+extern void sse_clear_page(void *page);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#237: FILE: include/asm-i386/sse.h:9:
+extern void sse_copy_page(void *to, void *from);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#371: FILE: include/asm-i386/xor.h:534:
+^I^I__asm__ __volatile__ ( ^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#395: FILE: include/asm-i386/xor.h:548:
+^I^I__asm__ __volatile__ ( ^I^I\$

ERROR:SPACING: space required before the open parenthesis '('
#462: FILE: arch/i386/lib/mmx.c:31:
+	if(!kfpu_try_begin() {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#466: FILE: arch/i386/lib/mmx.c:35:
+^I} $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#549: FILE: arch/i386/lib/sse.c:1:
+#include <linux/types.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#563: FILE: arch/i386/lib/sse.c:15:
+ *^I^IJanuary 12, 1999^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#566: FILE: arch/i386/lib/sse.c:18:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#566: FILE: arch/i386/lib/sse.c:18:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#567: FILE: arch/i386/lib/sse.c:19:
+ 
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#568: FILE: arch/i386/lib/sse.c:20:
+void sse_clear_page(void * page)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#573: FILE: arch/i386/lib/sse.c:25:
+	int d0;
+	restore = kfpu_nosave_begin();

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#575: FILE: arch/i386/lib/sse.c:27:
+		__asm__ __volatile__(

ERROR:SPACING: space prohibited before that close parenthesis ')'
#579: FILE: arch/i386/lib/sse.c:31:
+		: "memory" );

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#581: FILE: arch/i386/lib/sse.c:33:
+	__asm__ __volatile__(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#595: FILE: arch/i386/lib/sse.c:47:
+		__asm__ __volatile__(

ERROR:SPACING: space prohibited before that close parenthesis ')'
#599: FILE: arch/i386/lib/sse.c:51:
+		: "memory" );

WARNING:LINE_SPACING: Missing a blank line after declarations
#609: FILE: arch/i386/lib/sse.c:61:
+	int d0;
+	restore = kfpu_nosave_begin();

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#611: FILE: arch/i386/lib/sse.c:63:
+		__asm__ __volatile__(

ERROR:SPACING: space prohibited before that close parenthesis ')'
#618: FILE: arch/i386/lib/sse.c:70:
+		: "memory" );

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#620: FILE: arch/i386/lib/sse.c:72:
+	__asm__ __volatile__(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#645: FILE: arch/i386/lib/sse.c:97:
+		__asm__ __volatile__(

ERROR:SPACING: space prohibited before that close parenthesis ')'
#652: FILE: arch/i386/lib/sse.c:104:
+			: "memory" );

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#662: FILE: arch/i386/kernel/i387.c:27:
+static volatile int cpu_fpuactive[NR_CPUS];

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#671: FILE: arch/i386/kernel/i387.c:44:
+void inline stts(void)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#678: FILE: arch/i386/kernel/i387.c:51:
+	return (char*)((((unsigned long)buffer)+15)&(~15));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#678: FILE: arch/i386/kernel/i387.c:51:
+	return (char*)((((unsigned long)buffer)+15)&(~15));
 	                                       ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#678: FILE: arch/i386/kernel/i387.c:51:
+	return (char*)((((unsigned long)buffer)+15)&(~15));
 	                                           ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#698: FILE: arch/i386/kernel/i387.c:77:
+	if ( cpu_has_fpu ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#698: FILE: arch/i386/kernel/i387.c:77:
+	if ( cpu_has_fpu ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#718: FILE: arch/i386/kernel/i387.c:95:
+	if ( cpu_has_fxsr ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#718: FILE: arch/i386/kernel/i387.c:95:
+	if ( cpu_has_fxsr ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#720: FILE: arch/i386/kernel/i387.c:97:
+		memcpy(buf->buffer, &current->thread.i387.fxsave,
+			sizeof(current->thread.i387.fxsave));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#723: FILE: arch/i386/kernel/i387.c:100:
+		memcpy(buf->buffer, &current->thread.i387.fsave,
+			sizeof(current->thread.i387.fsave));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#725: FILE: arch/i386/kernel/i387.c:102:
+^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#727: FILE: arch/i386/kernel/i387.c:104:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: space prohibited after that open parenthesis '('
#744: FILE: arch/i386/kernel/i387.c:118:
+	if ( cpu_has_fxsr ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#744: FILE: arch/i386/kernel/i387.c:118:
+	if ( cpu_has_fxsr ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#746: FILE: arch/i386/kernel/i387.c:120:
+		memcpy(&current->thread.i387.fxsave, buf->buffer,
+			sizeof(current->thread.i387.fxsave));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#749: FILE: arch/i386/kernel/i387.c:123:
+		memcpy(&current->thread.i387.fsave, buf->buffer,
+			sizeof(current->thread.i387.fsave));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#752: FILE: arch/i386/kernel/i387.c:126:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#754: FILE: arch/i386/kernel/i387.c:128:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#775: FILE: arch/i386/kernel/i387.c:149:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#777: FILE: arch/i386/kernel/i387.c:151:
+		BUG();

ERROR:SPACING: space required before the open parenthesis '('
#784: FILE: arch/i386/kernel/i387.c:158:
+	if(cpu_fpuactive[smp_processor_id()] > 1) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#786: FILE: arch/i386/kernel/i387.c:160:
+		char *buffer = sse_aligned(buffer);
+		asm volatile( "fxsave %0 ; fnclex"

ERROR:SPACING: space prohibited after that open parenthesis '('
#786: FILE: arch/i386/kernel/i387.c:160:
+		asm volatile( "fxsave %0 ; fnclex"

ERROR:SPACING: space prohibited before that close parenthesis ')'
#787: FILE: arch/i386/kernel/i387.c:161:
+			      : "=m" (buffer) );

ERROR:SPACING: space required before the open parenthesis '('
#797: FILE: arch/i386/kernel/i387.c:171:
+	if(cpu_fpuactive[smp_processor_id()] > 1) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#798: FILE: arch/i386/kernel/i387.c:172:
+		asm volatile( "fnsave %0 ; fwait"

ERROR:SPACING: space prohibited before that close parenthesis ')'
#799: FILE: arch/i386/kernel/i387.c:173:
+			      : "=m" (buf->buffer) );

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#809: FILE: arch/i386/kernel/i387.c:183:
+	return cpu_fpuactive[smp_processor_id()]-1;
 	                                        ^

ERROR:SPACING: space required before the open parenthesis '('
#814: FILE: arch/i386/kernel/i387.c:188:
+	if(cpu_fpuactive[smp_processor_id()] > 1) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#816: FILE: arch/i386/kernel/i387.c:190:
+		char *buffer = sse_aligned(buffer);
+		asm volatile( "fxrstor %0"

ERROR:SPACING: space prohibited after that open parenthesis '('
#816: FILE: arch/i386/kernel/i387.c:190:
+		asm volatile( "fxrstor %0"

ERROR:SPACING: space prohibited before that close parenthesis ')'
#817: FILE: arch/i386/kernel/i387.c:191:
+			      : "=m" (buffer) );

ERROR:SPACING: space required before the open parenthesis '('
#827: FILE: arch/i386/kernel/i387.c:201:
+	if(cpu_fpuactive[smp_processor_id()] > 1) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#828: FILE: arch/i386/kernel/i387.c:202:
+		asm volatile( "frstor %0"

ERROR:SPACING: space prohibited before that close parenthesis ')'
#829: FILE: arch/i386/kernel/i387.c:203:
+			      : "=m" (buf->buffer) );

ERROR:SPACING: space required before the open parenthesis '('
#840: FILE: arch/i386/kernel/i387.c:214:
+	if(cpu_fpuactive[smp_processor_id()] == 0)

ERROR:SPACING: space prohibited after that open parenthesis '('
#852: FILE: arch/i386/kernel/i387.c:226:
+	if ( cpu_has_xmm )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#852: FILE: arch/i386/kernel/i387.c:226:
+	if ( cpu_has_xmm )

ERROR:SPACING: space required before the open parenthesis '('
#871: FILE: arch/i386/kernel/i387.c:245:
+	if(cpu_fpuactive[smp_processor_id()] != 0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#872: FILE: arch/i386/kernel/i387.c:246:
+		BUG();

ERROR:SPACING: space required before the open parenthesis '('
#881: FILE: arch/i386/kernel/i387.c:255:
+	if(cpu_fpuactive[smp_processor_id()] != 0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#882: FILE: arch/i386/kernel/i387.c:256:
+		BUG();

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#920: FILE: arch/i386/kernel/i386_ksyms.c:125:
+EXPORT_SYMBOL(kfpu_start);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#921: FILE: arch/i386/kernel/i386_ksyms.c:126:
+EXPORT_SYMBOL(kfpu_acquire);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#922: FILE: arch/i386/kernel/i386_ksyms.c:127:
+EXPORT_SYMBOL(kfpu_release);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#923: FILE: arch/i386/kernel/i386_ksyms.c:128:
+EXPORT_SYMBOL(kfpu_try_acquire);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#924: FILE: arch/i386/kernel/i386_ksyms.c:129:
+EXPORT_SYMBOL(kfpu_try_release);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#925: FILE: arch/i386/kernel/i386_ksyms.c:130:
+EXPORT_SYMBOL(kfpu_full_begin);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#926: FILE: arch/i386/kernel/i386_ksyms.c:131:
+EXPORT_SYMBOL(kfpu_mmx_begin);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#927: FILE: arch/i386/kernel/i386_ksyms.c:132:
+EXPORT_SYMBOL(kfpu_nosave_begin);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#928: FILE: arch/i386/kernel/i386_ksyms.c:133:
+EXPORT_SYMBOL(kfpu_full_end);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#929: FILE: arch/i386/kernel/i386_ksyms.c:134:
+EXPORT_SYMBOL(kfpu_mmx_end);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#930: FILE: arch/i386/kernel/i386_ksyms.c:135:
+EXPORT_SYMBOL(kfpu_nosave_end);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#931: FILE: arch/i386/kernel/i386_ksyms.c:136:
+EXPORT_SYMBOL(kfpu_try_begin);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#932: FILE: arch/i386/kernel/i386_ksyms.c:137:
+EXPORT_SYMBOL(kfpu_try_end);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000550522.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 38 errors, 33 warnings, 19 checks, 791 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000550522.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
