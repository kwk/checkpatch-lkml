WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
[DVB] - fix WRITE_RPS0 and WRITE_RPS1 inlines, fix usage in mxb and budget drivers

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#71: FILE: drivers/media/common/saa7146_i2c.c:184:
+static int saa7146_i2c_writeout(struct saa7146_dev *dev, u32* dword, int short_delay)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#99: FILE: drivers/media/common/saa7146_i2c.c:243:
+				udelay(10);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 24)
#100: FILE: drivers/media/common/saa7146_i2c.c:244:
+			else
 			my_wait(dev,1);

ERROR:CODE_INDENT: code indent should use tabs where possible
#108: FILE: drivers/media/common/saa7146_i2c.c:287:
+        int short_delay = 0;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: drivers/media/common/saa7146_i2c.c:287:
+        int short_delay = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#116: FILE: drivers/media/common/saa7146_i2c.c:303:
+        if (count > 3) short_delay = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: drivers/media/common/saa7146_i2c.c:303:
+        if (count > 3) short_delay = 1;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#116: FILE: drivers/media/common/saa7146_i2c.c:303:
+        if (count > 3) short_delay = 1;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#117: FILE: drivers/media/common/saa7146_i2c.c:304:
+  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: drivers/media/common/saa7146_i2c.c:304:
+  $

ERROR:SPACING: space prohibited after that open parenthesis '('
#135: FILE: drivers/media/common/saa7146_i2c.c:370:
+		if( 0 != saa7146_i2c_writeout(dev, &zero, short_delay)) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#135: FILE: drivers/media/common/saa7146_i2c.c:370:
+		if( 0 != saa7146_i2c_writeout(dev, &zero, short_delay)) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:SPACING: space required before the open parenthesis '('
#135: FILE: drivers/media/common/saa7146_i2c.c:370:
+		if( 0 != saa7146_i2c_writeout(dev, &zero, short_delay)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#135: FILE: drivers/media/common/saa7146_i2c.c:370:
+		if( 0 != saa7146_i2c_writeout(dev, &zero, short_delay)) {
 			INFO(("revision 0 error. this should never happen.\n"));
 		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'saa7146_stop_preview', this function's name, in a string
#162: FILE: drivers/media/common/saa7146_video.c:274:
+	DEB_EE(("saa7146.o: saa7146_stop_preview()\n"));

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#271: FILE: drivers/media/common/saa7146_video.c:1364:
+EXPORT_SYMBOL_GPL(saa7146_start_preview);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#272: FILE: drivers/media/common/saa7146_video.c:1365:
+EXPORT_SYMBOL_GPL(saa7146_stop_preview);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct saa7146_fh*' should also have an identifier name
#294: FILE: include/media/saa7146_vv.h:167:
+	int (*ioctl)(struct saa7146_fh*, unsigned int cmd, void *arg);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#315: FILE: drivers/media/dvb/ttpci/budget-av.c:259:
+static int av_ioctl(struct saa7146_fh *fh, unsigned int cmd, void *arg) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#329: FILE: drivers/media/video/dpc7146.c:249:
+static int dpc_ioctl(struct saa7146_fh *fh, unsigned int cmd, void *arg) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#343: FILE: drivers/media/video/mxb.c:569:
+static int mxb_ioctl(struct saa7146_fh *fh, unsigned int cmd, void *arg) $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000354646.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 11 warnings, 1 checks, 263 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000354646.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
