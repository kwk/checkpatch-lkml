WARNING:TYPO_SPELLING: 'maintaing' may be misspelled - perhaps 'maintaining'?
#46: 
> > your case might be very useful. Bharata is maintaing an instrumentation
                                               ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#47: 
> > patch to collect more information and an alternative dentry aging patch 

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#194: FILE: fs/dcache.c:81:
+	lru_dentry_stat.nr_total = lru_dentry_stat.nr_inuse = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#195: FILE: fs/dcache.c:82:
+	lru_dentry_stat.nr_ref = lru_dentry_stat.nr_free = 0;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#224: FILE: fs/dcache.c:111:
+	BUG_ON(atomic_read(&nr_dentry[page->nr_dentry]) < 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#225: FILE: fs/dcache.c:112:
+	BUG_ON(page->nr_dentry > 29);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#273: FILE: fs/dcache.c:824:
+	BUG_ON(atomic_read(&nr_dentry[page->nr_dentry]) < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#274: FILE: fs/dcache.c:825:
+	BUG_ON(page->nr_dentry > 29);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#296: FILE: fs/proc/proc_misc.c:120:
+extern spinlock_t prune_dcache_lock;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#313: FILE: fs/proc/proc_misc.c:208:
+		for (j =0; j < 30; j++) {
 		       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#387: FILE: include/linux/dcache.h:57:
+};
+extern struct lru_dentry_stat lru_dentry_stat;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#388: FILE: include/linux/dcache.h:58:
+extern void get_dstat_info(void);

WARNING:BAD_SIGN_OFF: Duplicate signature
#407: 
Signed-off-by: Bharata B Rao <bharata@in.ibm.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:SPACING: space prohibited before that close parenthesis ')'
#433: FILE: fs/dcache.c:78:
+#define RB_CLEAR(node)	((node)->rb_color = RB_NONE )

ERROR:TRAILING_WHITESPACE: trailing whitespace
#434: FILE: fs/dcache.c:79:
+  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#434: FILE: fs/dcache.c:79:
+  $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#435: FILE: fs/dcache.c:80:
+  
+

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#437: FILE: fs/dcache.c:82:
+static void drb_delete(struct dentry* dentry)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#444: FILE: fs/dcache.c:89:
+		BUG_ON(1);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#448: FILE: fs/dcache.c:93:
+static  struct dentry * drb_insert(struct dentry * dentry)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#448: FILE: fs/dcache.c:93:
+static  struct dentry * drb_insert(struct dentry * dentry)

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#450: FILE: fs/dcache.c:95:
+	struct rb_node ** p = &dentry_tree.rb_node;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#451: FILE: fs/dcache.c:96:
+	struct rb_node * parent = NULL;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#452: FILE: fs/dcache.c:97:
+	struct rb_node * node    = &dentry->d_rb;

ERROR:POINTER_LOCATION: "foo  * bar" should be "foo  *bar"
#453: FILE: fs/dcache.c:98:
+	struct dentry  * cur    = NULL;

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#459: FILE: fs/dcache.c:104:
+		if (dentry < cur)
[...]
+		else if (dentry > cur)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#463: FILE: fs/dcache.c:108:
+		else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#469: FILE: fs/dcache.c:114:
+^Irb_insert_color(node,&dentry_tree); $

ERROR:SPACING: space required after that ',' (ctx:VxO)
#469: FILE: fs/dcache.c:114:
+	rb_insert_color(node,&dentry_tree); 
 	                    ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#469: FILE: fs/dcache.c:114:
+	rb_insert_color(node,&dentry_tree); 
 	                     ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#525: FILE: fs/dcache.c:537:
+static void prune_dcache(unsigned  requested)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#532: FILE: fs/dcache.c:544:
+	unsigned found = 0;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#533: FILE: fs/dcache.c:545:
+	unsigned count;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#534: FILE: fs/dcache.c:546:
+	struct rb_node * next;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#542: FILE: fs/dcache.c:554:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#543: FILE: fs/dcache.c:555:
+       ^Icur = dentry_unused.prev;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#543: FILE: fs/dcache.c:555:
+       ^Icur = dentry_unused.prev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#543: FILE: fs/dcache.c:555:
+       ^Icur = dentry_unused.prev;$

WARNING:TYPO_SPELLING: 'entrys' may be misspelled - perhaps 'entries'?
#545: FILE: fs/dcache.c:557:
+	/* grab NUM_LRU_PTRS entrys off the end of lru list */
 	                     ^^^^^^

ERROR:SPACING: space required before the open brace '{'
#547: FILE: fs/dcache.c:559:
+	for (i = 0 ; i < NUM_LRU_PTRS ; i++ ){

ERROR:SPACING: space prohibited before that close parenthesis ')'
#547: FILE: fs/dcache.c:559:
+	for (i = 0 ; i < NUM_LRU_PTRS ; i++ ){

ERROR:SPACING: space prohibited after that open parenthesis '('
#548: FILE: fs/dcache.c:560:
+		if ( cur == &dentry_unused ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#548: FILE: fs/dcache.c:560:
+		if ( cur == &dentry_unused ) {

WARNING:TYPO_SPELLING: 'entrys' may be misspelled - perhaps 'entries'?
#549: FILE: fs/dcache.c:561:
+			/* if there aren't NUM_LRU_PTRS entrys, we probably
 			                                ^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#550: FILE: fs/dcache.c:562:
+			/* if there aren't NUM_LRU_PTRS entrys, we probably
+			   can't even free a page now, give up */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#550: FILE: fs/dcache.c:562:
+			   can't even free a page now, give up */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#554: FILE: fs/dcache.c:566:
+^I^Ilru_ptrs[i] = &(list_entry(cur,struct dentry, d_lru)->d_rb); $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#554: FILE: fs/dcache.c:566:
+		lru_ptrs[i] = &(list_entry(cur,struct dentry, d_lru)->d_rb); 
 		                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#557: FILE: fs/dcache.c:569:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#559: FILE: fs/dcache.c:571:
+^I$

WARNING:TYPO_SPELLING: 'abitrary' may be misspelled - perhaps 'arbitrary'?
#561: FILE: fs/dcache.c:573:
+		count = 4 * PAGE_SIZE / sizeof(struct dentry) ; /* abitrary heuristic */
 		                                                   ^^^^^^^^

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#564: FILE: fs/dcache.c:576:
+			if( ! next ) {
 			    ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#564: FILE: fs/dcache.c:576:
+			if( ! next ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#564: FILE: fs/dcache.c:576:
+			if( ! next ) {

ERROR:SPACING: space required before the open parenthesis '('
#564: FILE: fs/dcache.c:576:
+			if( ! next ) {

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#571: FILE: fs/dcache.c:583:
+			if( ! list_empty( &dentry->d_lru) ) {
 			    ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#571: FILE: fs/dcache.c:583:
+			if( ! list_empty( &dentry->d_lru) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#571: FILE: fs/dcache.c:583:
+			if( ! list_empty( &dentry->d_lru) ) {

ERROR:SPACING: space required before the open parenthesis '('
#571: FILE: fs/dcache.c:583:
+			if( ! list_empty( &dentry->d_lru) ) {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#576: FILE: fs/dcache.c:588:
+^I^I^I^I//removed++; ^I/* ------ debug --------- */$

ERROR:SPACING: space prohibited after that open parenthesis '('
#585: FILE: fs/dcache.c:597:
+	} while ( (found < requested / 2) && (i < NUM_LRU_PTRS ) );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#585: FILE: fs/dcache.c:597:
+	} while ( (found < requested / 2) && (i < NUM_LRU_PTRS ) );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#589: FILE: fs/dcache.c:601:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#591: FILE: fs/dcache.c:603:
+^I//mod++;^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000151863.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 36 errors, 22 warnings, 6 checks, 460 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000151863.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
