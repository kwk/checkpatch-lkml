ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#42: 
--- a/include/linux/slab.h	Wed Dec  5 23:03:27 2001

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#48: FILE: include/linux/slab.h:59:
+extern int kmem_cache_alloc_bulk (kmem_cache_t *, int, unsigned int, void **);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#48: FILE: include/linux/slab.h:59:
+extern int kmem_cache_alloc_bulk (kmem_cache_t *, int, unsigned int, void **);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'kmem_cache_t *' should also have an identifier name
#48: FILE: include/linux/slab.h:59:
+extern int kmem_cache_alloc_bulk (kmem_cache_t *, int, unsigned int, void **);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#48: FILE: include/linux/slab.h:59:
+extern int kmem_cache_alloc_bulk (kmem_cache_t *, int, unsigned int, void **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#48: FILE: include/linux/slab.h:59:
+extern int kmem_cache_alloc_bulk (kmem_cache_t *, int, unsigned int, void **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void **' should also have an identifier name
#48: FILE: include/linux/slab.h:59:
+extern int kmem_cache_alloc_bulk (kmem_cache_t *, int, unsigned int, void **);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#50: FILE: include/linux/slab.h:61:
+extern void kmem_cache_free_bulk (kmem_cache_t *, unsigned int, void **);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#50: FILE: include/linux/slab.h:61:
+extern void kmem_cache_free_bulk (kmem_cache_t *, unsigned int, void **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'kmem_cache_t *' should also have an identifier name
#50: FILE: include/linux/slab.h:61:
+extern void kmem_cache_free_bulk (kmem_cache_t *, unsigned int, void **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#50: FILE: include/linux/slab.h:61:
+extern void kmem_cache_free_bulk (kmem_cache_t *, unsigned int, void **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void **' should also have an identifier name
#50: FILE: include/linux/slab.h:61:
+extern void kmem_cache_free_bulk (kmem_cache_t *, unsigned int, void **);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#61: FILE: mm/slab.c:281:
+#define STATS_ADD_ALLOCHIT(x,y)	atomic_add(y, &(x)->allochit)
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#63: FILE: mm/slab.c:283:
+#define STATS_ADD_ALLOCMISS(x,y) atomic_add(y, &(x)->allocmiss)
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#65: FILE: mm/slab.c:285:
+#define STATS_ADD_FREEHIT(x,y)	atomic_add(y, &(x)->freehit)
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#67: FILE: mm/slab.c:287:
+#define STATS_ADD_FREEMISS(x,y)	atomic_add(y, &(x)->freemiss)
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#74: FILE: mm/slab.c:290:
+#define STATS_ADD_ALLOCHIT(x,y) do { } while (0)
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#76: FILE: mm/slab.c:292:
+#define STATS_ADD_ALLOCMISS(x,y) do { } while (0)
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#78: FILE: mm/slab.c:294:
+#define STATS_ADD_FREEHIT(x,y)  do { } while (0)
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#80: FILE: mm/slab.c:296:
+#define STATS_ADD_FREEMISS(x,y) do { } while (0)
                             ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#90: FILE: mm/slab.c:1292:
+int __kmem_cache_alloc_bulk (kmem_cache_t* cachep, int flags, unsigned int bulkcount, void **buf)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#90: FILE: mm/slab.c:1292:
+int __kmem_cache_alloc_bulk (kmem_cache_t* cachep, int flags, unsigned int bulkcount, void **buf)

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#108: FILE: mm/slab.c:1314:
+		buf [count++] = kmem_cache_alloc_one_tail(cachep, slabp);

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#127: FILE: mm/slab.c:1339:
+				cc->avail += __kmem_cache_alloc_bulk (cachep, flags,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#129: FILE: mm/slab.c:1341:
+								      cc_entry (cc));

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#132: FILE: mm/slab.c:1344:
+				objp = cc_entry(cc) [--cc->avail];

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'objp' - possible side-effects?
#141: FILE: mm/slab.c:1378:
+# define CHECK_NR(objp)						\
 	do {							\
+		if (!VALID_PAGE(virt_to_page (objp))) {		\
 			printk(KERN_ERR "kfree: out of range ptr %lxh.\n", \
 				(unsigned long)objp);		\
 			BUG();					\
 		} \
 	} while (0)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#144: FILE: mm/slab.c:1380:
+		if (!VALID_PAGE(virt_to_page (objp))) {		\

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'objp' - possible side-effects?
#151: FILE: mm/slab.c:1386:
+# define CHECK_PAGE(objp)					\
 	do {							\
+		CHECK_NR(objp);					\
+		if (!PageSlab(virt_to_page(objp))) {		\
 			printk(KERN_ERR "kfree: bad ptr %lxh.\n", \
 				(unsigned long)objp);		\
 			BUG();					\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#208: FILE: mm/slab.c:1529:
+int kmem_cache_alloc_bulk (kmem_cache_t *cachep, int flags, unsigned int size, void **buf)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#211: FILE: mm/slab.c:1532:
+	cpucache_t *cc = cc_data (cachep);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#223: FILE: mm/slab.c:1544:
+			STATS_ADD_ALLOCHIT(cachep, min (size - count, cc->avail));

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#225: FILE: mm/slab.c:1546:
+				buf [count++] = cc_entry (cc) [--cc->avail];

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#225: FILE: mm/slab.c:1546:
+				buf [count++] = cc_entry (cc) [--cc->avail];

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#225: FILE: mm/slab.c:1546:
+				buf [count++] = cc_entry (cc) [--cc->avail];

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#227: FILE: mm/slab.c:1548:
+			cc->avail += __kmem_cache_alloc_bulk (cachep, flags, cachep->batchcount,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#228: FILE: mm/slab.c:1549:
+							      cc_entry (cc));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#232: FILE: mm/slab.c:1553:
+			STATS_ADD_ALLOCMISS(cachep, min (size - count, cc->avail));

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#234: FILE: mm/slab.c:1555:
+				buf [count++] = cc_entry (cc) [--cc->avail];

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#234: FILE: mm/slab.c:1555:
+				buf [count++] = cc_entry (cc) [--cc->avail];

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#234: FILE: mm/slab.c:1555:
+				buf [count++] = cc_entry (cc) [--cc->avail];

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#237: FILE: mm/slab.c:1558:
+		count += __kmem_cache_alloc_bulk (cachep, flags, size - count, buf + count);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#240: FILE: mm/slab.c:1561:
+	count += __kmem_cache_alloc_bulk (cachep, flags, size - count, buf + count);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#242: FILE: mm/slab.c:1563:
+	if (count < size)
+	  goto alloc_new_slab;

WARNING:TABSTOP: Statements should start on a tabstop
#243: FILE: mm/slab.c:1564:
+	  goto alloc_new_slab;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#281: FILE: mm/slab.c:1642:
+void kmem_cache_free_bulk (kmem_cache_t *cachep, unsigned int count, void **buf)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#290: FILE: mm/slab.c:1651:
+		STATS_ADD_FREEHIT (cachep, min (count, cc->limit - cc->avail));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#290: FILE: mm/slab.c:1651:
+		STATS_ADD_FREEHIT (cachep, min (count, cc->limit - cc->avail));

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#292: FILE: mm/slab.c:1653:
+			CHECK_PAGE (buf [count - 1]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#292: FILE: mm/slab.c:1653:
+			CHECK_PAGE (buf [count - 1]);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#293: FILE: mm/slab.c:1654:
+			cc_entry(cc)[cc->avail++] = buf [--count];

WARNING:LINE_SPACING: Missing a blank line after declarations
#307: FILE: mm/slab.c:1668:
+		int i = count;
+		while (i-- > 0)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#308: FILE: mm/slab.c:1669:
+			CHECK_PAGE (buf [i]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#308: FILE: mm/slab.c:1669:
+			CHECK_PAGE (buf [i]);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000494402.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 19 errors, 31 warnings, 4 checks, 267 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000494402.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
