WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#49: 
diff --exclude-from=/home/ldb/src/linux-exclude -urNdp linux-2.5.32_fixup/arch/i386/kernel/entry.S linux-2.5.32_fixup_smp/arch/i386/kernel/entry.S

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#102: FILE: arch/i386/kernel/fixup.c:61:
+static volatile unsigned long /* cpu_mask_t */ smp_lock_spinning_cpus = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#102: FILE: arch/i386/kernel/fixup.c:61:
+static volatile unsigned long /* cpu_mask_t */ smp_lock_spinning_cpus = 0;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#106: FILE: arch/i386/kernel/fixup.c:65:
+	__asm__ __volatile__(

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#107: FILE: arch/i386/kernel/fixup.c:66:
+		"\n1:\t" \

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#117: FILE: arch/i386/kernel/fixup.c:76:
+		:"=m" (lock->lock) : : "memory");
 		^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#123: FILE: arch/i386/kernel/fixup.c:82:
+	char oldval = 1;
+	__asm__ __volatile__(

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#123: FILE: arch/i386/kernel/fixup.c:82:
+	__asm__ __volatile__(

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#124: FILE: arch/i386/kernel/fixup.c:83:
+		"xchgb %b0, %1" \

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#125: FILE: arch/i386/kernel/fixup.c:84:
+		:"=q" (oldval), "=m" (lock->lock) \
 		^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#126: FILE: arch/i386/kernel/fixup.c:85:
+		:"0" (oldval) : "memory"
 		^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#152: FILE: arch/i386/kernel/fixup.c:111:
+static inline int __prepare_ICR (unsigned int shortcut, int vector)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#157: FILE: arch/i386/kernel/fixup.c:116:
+static inline int __prepare_ICR2 (unsigned int mask)

CHECK:CAMELCASE: Avoid CamelCase: <dynamic_fixup_send_IPIs>
#162: FILE: arch/i386/kernel/fixup.c:121:
+static inline void dynamic_fixup_send_IPIs(int vector)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LINE_SPACING: Missing a blank line after declarations
#165: FILE: arch/i386/kernel/fixup.c:124:
+	unsigned int cfg;
+	if (clustered_apic_mode) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#168: FILE: arch/i386/kernel/fixup.c:127:
+		for (cpu = 0; cpu < NR_CPUS; ++cpu) {

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#169: FILE: arch/i386/kernel/fixup.c:128:
+			if (cpu_online(cpu) && !(cpu & smp_lock_spinning_cpus) && cpu != smp_processor_id())

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#169: FILE: arch/i386/kernel/fixup.c:128:
+			if (cpu_online(cpu) && !(cpu & smp_lock_spinning_cpus) && cpu != smp_processor_id())
+			{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#172: FILE: arch/i386/kernel/fixup.c:131:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#176: FILE: arch/i386/kernel/fixup.c:135:
+^I^I$

CHECK:SPACING: spaces preferred around that '&' (ctx:WxO)
#185: FILE: arch/i386/kernel/fixup.c:144:
+		cfg = __prepare_ICR2((~smp_lock_spinning_cpus &~ (1 << smp_processor_id())));
 		                                              ^

ERROR:SPACING: space prohibited after that '~' (ctx:OxW)
#185: FILE: arch/i386/kernel/fixup.c:144:
+		cfg = __prepare_ICR2((~smp_lock_spinning_cpus &~ (1 << smp_processor_id())));
 		                                               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#187: FILE: arch/i386/kernel/fixup.c:146:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#189: FILE: arch/i386/kernel/fixup.c:148:
+^I^I^I$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#200: FILE: arch/i386/kernel/fixup.c:159:
+	while (smp_lock_spinning_cpus != cpu_online_map) {}

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#200: FILE: arch/i386/kernel/fixup.c:159:
+	while (smp_lock_spinning_cpus != cpu_online_map) {}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#205: FILE: arch/i386/kernel/fixup.c:164:
+^I/* check if we are fixing up and we are smp */^I$

ERROR:SPACING: space required before the open parenthesis '('
#206: FILE: arch/i386/kernel/fixup.c:165:
+	if(lock_fixup == 0xf0)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#213: FILE: arch/i386/kernel/fixup.c:172:
+	if(lock_fixup == 0xf0)
+	{

ERROR:SPACING: space required before the open parenthesis '('
#213: FILE: arch/i386/kernel/fixup.c:172:
+	if(lock_fixup == 0xf0)

ERROR:SPACING: space required before the open parenthesis '('
#220: FILE: arch/i386/kernel/fixup.c:179:
+#define dynamic_fixup_smp_lock() do {} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#221: FILE: arch/i386/kernel/fixup.c:180:
+#define dynamic_fixup_smp_unlock() do {} while(0)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000436619.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 17 errors, 11 warnings, 4 checks, 199 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000436619.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
