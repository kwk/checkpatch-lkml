WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
#1. A long standing annoyance with quick close and reopen after a disconnect

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#33: 
#1. A long standing annoyance with quick close and reopen after a disconnect

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#42: 
#2. Added drain on close. I forgot, who asked for it, it was a while ago.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#44: 
#3. Moved paranoya in-line;

WARNING:TYPO_SPELLING: 'paranoya' may be misspelled - perhaps 'paranoia'?
#44: 
#3. Moved paranoya in-line;
          ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#46: 
#4. My mct_u232 would make a lockup on unplug. It turned out that it

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
#5. The tty_hangup. I have to say, I made a mistake associating this with

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#240: FILE: drivers/usb/serial/mct_u232.c:469:
+static void mct_u232_error_step (struct urb *urb,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#241: FILE: drivers/usb/serial/mct_u232.c:470:
+static void mct_u232_error_step (struct urb *urb,
+    struct mct_u232_private *priv, int n)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: drivers/usb/serial/mct_u232.c:470:
+    struct mct_u232_private *priv, int n)$

WARNING:SPLIT_STRING: quoted string split across lines
#338: FILE: drivers/usb/serial/mct_u232.c:477:
+			err("%s - too many errors: "
+			    "status %d pipe 0x%x interval %d",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#339: FILE: drivers/usb/serial/mct_u232.c:478:
+			    __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#367: FILE: drivers/usb/serial/mct_u232.c:498:
+		    __FUNCTION__,

ERROR:CODE_INDENT: code indent should use tabs where possible
#388: FILE: drivers/usb/serial/mct_u232.c:518:
+        dbg("%s - port %d", __FUNCTION__, port->number);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: drivers/usb/serial/mct_u232.c:518:
+        dbg("%s - port %d", __FUNCTION__, port->number);$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#388: FILE: drivers/usb/serial/mct_u232.c:518:
+        dbg("%s - port %d", __FUNCTION__, port->number);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#411: FILE: drivers/usb/serial/mct_u232.c:702:
+static int mct_u232_tiocmget (struct usb_serial_port *port, struct file *file)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#416: FILE: drivers/usb/serial/mct_u232.c:707:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#417: FILE: drivers/usb/serial/mct_u232.c:708:
+	dbg("%s", __FUNCTION__);

CHECK:SPACING: No space is necessary after a cast
#436: FILE: drivers/usb/serial/mct_u232.c:731:
+		return put_user(mask, (unsigned long *) arg);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#461: FILE: drivers/usb/serial/usbserial.c:412:
+    const char *function) $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#461: FILE: drivers/usb/serial/usbserial.c:412:
+struct usb_serial *usb_serial_get_serial(struct usb_serial_port *port,
+    const char *function) 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: drivers/usb/serial/usbserial.c:412:
+    const char *function) $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#463: FILE: drivers/usb/serial/usbserial.c:414:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#465: FILE: drivers/usb/serial/usbserial.c:416:
+^Iif (!port || $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#466: FILE: drivers/usb/serial/usbserial.c:417:
+	    port_paranoia_check (port, function) ||

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#467: FILE: drivers/usb/serial/usbserial.c:418:
+	    serial_paranoia_check (port->serial, function)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!port->serial->dev"
#472: FILE: drivers/usb/serial/usbserial.c:423:
+	if (port->serial->dev == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LINE_SPACING: Please don't use multiple blank lines
#478: FILE: drivers/usb/serial/usbserial.c:429:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "serial->dev"
#496: FILE: drivers/usb/serial/usbserial.c:530:
+		if (serial->dev != NULL) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#505: FILE: drivers/usb/serial/usbserial.c:612:
+	if (serial_paranoia_check (serial, __FUNCTION__) || serial->dev == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!serial->dev"
#505: FILE: drivers/usb/serial/usbserial.c:612:
+	if (serial_paranoia_check (serial, __FUNCTION__) || serial->dev == NULL)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#505: FILE: drivers/usb/serial/usbserial.c:612:
+	if (serial_paranoia_check (serial, __FUNCTION__) || serial->dev == NULL)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#522: FILE: drivers/usb/serial/usbserial.c:644:
+/* P3 */ err("%s - port %d: opened with %d", __FUNCTION__, MINOR(tty->device), retval);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#528: FILE: drivers/usb/serial/usbserial.c:650:
 {
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#531: FILE: drivers/usb/serial/usbserial.c:652:
+		err("%s - port %d: not open", __FUNCTION__, port->number);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#545: FILE: drivers/usb/serial/usbserial.c:680:
+	if ((port = tty->driver_data) == NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#548: FILE: drivers/usb/serial/usbserial.c:683:
+		err("%s - port %d: none", __FUNCTION__, MINOR(tty->device));

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#553: FILE: drivers/usb/serial/usbserial.c:686:
+	if ((serial = port->serial) == NULL) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#554: FILE: drivers/usb/serial/usbserial.c:687:
+		err("%s - port %d: not open", __FUNCTION__, port->number);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "serial->dev"
#578: FILE: drivers/usb/serial/usbserial.c:694:
+	if (serial->dev != NULL) {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#581: FILE: drivers/usb/serial/usbserial.c:697:
+		tty_wait_until_sent(tty, /** info->closing_wait **/ 30*HZ);
 		                                                      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#584: FILE: drivers/usb/serial/usbserial.c:700:
+	down (&port->sem);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#585: FILE: drivers/usb/serial/usbserial.c:701:
+	__serial_close(port, filp);
 	                     ^^^^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#597: FILE: drivers/usb/serial/usbserial.c:718:
+		dbg("%s - port not open", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#626: FILE: drivers/usb/serial/usbserial.c:1268:
+		err("%s - null serial pointer, exiting", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#633: FILE: drivers/usb/serial/usbserial.c:1274:
+		    __FUNCTION__, urb->status, urb->pipe);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#637: FILE: drivers/usb/serial/usbserial.c:1278:
+	dbg("%s - port %d", __FUNCTION__, port->number);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!serial->dev"
#646: FILE: drivers/usb/serial/usbserial.c:1295:
+	if (serial->dev == NULL)

WARNING:MEMORY_BARRIER: memory barrier without comment
#693: FILE: drivers/usb/serial/usbserial.c:1687:
+		wmb();

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#703: FILE: drivers/usb/serial/usbserial.c:1825:
+		err("%s - module is in use, hanging...\n", __FUNCTION__);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#705: FILE: drivers/usb/serial/usbserial.c:1827:
+		schedule_timeout(5*HZ);
 		                  ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#741: FILE: drivers/usb/serial/usb-serial.h:312:
+extern struct usb_serial *usb_serial_get_serial(struct usb_serial_port *port,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#742: FILE: drivers/usb/serial/usb-serial.h:313:
+extern struct usb_serial *usb_serial_get_serial(struct usb_serial_port *port,
+    const char *function_name);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#742: FILE: drivers/usb/serial/usb-serial.h:313:
+    const char *function_name);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000227142.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 34 warnings, 15 checks, 628 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000227142.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
