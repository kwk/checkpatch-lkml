ERROR:SPACING: space required after that ',' (ctx:VxV)
#39: FILE: arch/sh64/mm/cache.c:584:
+	pgd = pml4_pgd_offset(pml4_offset(mm, eaddr),eaddr);
 	                                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#93: FILE: arch/sh64/mm/init.c:35:
+pml4_t * mmu_pdtp_cache;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#105: FILE: arch/sh64/mm/init.c:204:
+	if ((ret = pgd_quicklist) != NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#105: FILE: arch/sh64/mm/init.c:204:
+	if ((ret = pgd_quicklist) != NULL) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#109: FILE: arch/sh64/mm/init.c:208:
+	} else

WARNING:BRACES: braces {} are not necessary for single statement blocks
#112: FILE: arch/sh64/mm/init.c:211:
+	if (ret) {
+		memset(ret, 0, USER_PTRS_PER_PGD * sizeof(pgd_t));
+	}

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#264: FILE: include/asm-sh64/pgtable.h:234:
+#define USER_PPGDS_IN_LAST_PML4	((TASK_SIZE+PGDIR_SIZE-1)/PGDIR_SIZE)
                                	           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#264: FILE: include/asm-sh64/pgtable.h:234:
+#define USER_PPGDS_IN_LAST_PML4	((TASK_SIZE+PGDIR_SIZE-1)/PGDIR_SIZE)
                                	                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#264: FILE: include/asm-sh64/pgtable.h:234:
+#define USER_PPGDS_IN_LAST_PML4	((TASK_SIZE+PGDIR_SIZE-1)/PGDIR_SIZE)
                                	                         ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000237857.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 1 warnings, 5 checks, 193 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000237857.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
