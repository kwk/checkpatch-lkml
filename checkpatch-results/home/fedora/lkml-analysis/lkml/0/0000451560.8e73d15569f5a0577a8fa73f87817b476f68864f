WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#24: 
This is a version of the tcore multi-threaded core dump patch that supports both 

ERROR:SPACING: space prohibited after that open parenthesis '('
#75: FILE: arch/i386/kernel/i387.c:532:
+int dump_task_fpu( struct task_struct *tsk, struct user_i387_struct *fpu )

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#75: FILE: arch/i386/kernel/i387.c:532:
+int dump_task_fpu( struct task_struct *tsk, struct user_i387_struct *fpu )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: arch/i386/kernel/i387.c:534:
+       int fpvalid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: arch/i386/kernel/i387.c:536:
+       fpvalid = tsk->used_math;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: arch/i386/kernel/i387.c:537:
+       if ( fpvalid ) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#80: FILE: arch/i386/kernel/i387.c:537:
+       if ( fpvalid ) {
+               if (tsk == current) unlazy_fpu( tsk );

ERROR:SPACING: space prohibited after that open parenthesis '('
#80: FILE: arch/i386/kernel/i387.c:537:
+       if ( fpvalid ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#80: FILE: arch/i386/kernel/i387.c:537:
+       if ( fpvalid ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#81: FILE: arch/i386/kernel/i387.c:538:
+               if (tsk == current) unlazy_fpu( tsk );$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: arch/i386/kernel/i387.c:538:
+               if (tsk == current) unlazy_fpu( tsk );$

ERROR:SPACING: space prohibited after that open parenthesis '('
#81: FILE: arch/i386/kernel/i387.c:538:
+               if (tsk == current) unlazy_fpu( tsk );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#81: FILE: arch/i386/kernel/i387.c:538:
+               if (tsk == current) unlazy_fpu( tsk );

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#81: FILE: arch/i386/kernel/i387.c:538:
+               if (tsk == current) unlazy_fpu( tsk );

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#82: FILE: arch/i386/kernel/i387.c:539:
+               if ( cpu_has_fxsr ) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: arch/i386/kernel/i387.c:539:
+               if ( cpu_has_fxsr ) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#82: FILE: arch/i386/kernel/i387.c:539:
+               if ( cpu_has_fxsr ) {
+                       copy_fpu_fxsave( tsk, fpu );

ERROR:SPACING: space prohibited after that open parenthesis '('
#82: FILE: arch/i386/kernel/i387.c:539:
+               if ( cpu_has_fxsr ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#82: FILE: arch/i386/kernel/i387.c:539:
+               if ( cpu_has_fxsr ) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#82: FILE: arch/i386/kernel/i387.c:539:
+               if ( cpu_has_fxsr ) {
[...]
+               } else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#83: FILE: arch/i386/kernel/i387.c:540:
+                       copy_fpu_fxsave( tsk, fpu );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: arch/i386/kernel/i387.c:540:
+                       copy_fpu_fxsave( tsk, fpu );$

ERROR:SPACING: space prohibited after that open parenthesis '('
#83: FILE: arch/i386/kernel/i387.c:540:
+                       copy_fpu_fxsave( tsk, fpu );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#83: FILE: arch/i386/kernel/i387.c:540:
+                       copy_fpu_fxsave( tsk, fpu );

ERROR:CODE_INDENT: code indent should use tabs where possible
#84: FILE: arch/i386/kernel/i387.c:541:
+               } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: arch/i386/kernel/i387.c:541:
+               } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#84: FILE: arch/i386/kernel/i387.c:541:
+               } else {
+                       copy_fpu_fsave( tsk, fpu );

ERROR:CODE_INDENT: code indent should use tabs where possible
#85: FILE: arch/i386/kernel/i387.c:542:
+                       copy_fpu_fsave( tsk, fpu );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: arch/i386/kernel/i387.c:542:
+                       copy_fpu_fsave( tsk, fpu );$

ERROR:SPACING: space prohibited after that open parenthesis '('
#85: FILE: arch/i386/kernel/i387.c:542:
+                       copy_fpu_fsave( tsk, fpu );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#85: FILE: arch/i386/kernel/i387.c:542:
+                       copy_fpu_fsave( tsk, fpu );

ERROR:CODE_INDENT: code indent should use tabs where possible
#86: FILE: arch/i386/kernel/i387.c:543:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: arch/i386/kernel/i387.c:543:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: arch/i386/kernel/i387.c:544:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: arch/i386/kernel/i387.c:546:
+       return fpvalid;$

ERROR:SPACING: space prohibited after that open parenthesis '('
#92: FILE: arch/i386/kernel/i387.c:549:
+int dump_task_extended_fpu( struct task_struct *tsk, struct user_fxsr_struct *fpu )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#92: FILE: arch/i386/kernel/i387.c:549:
+int dump_task_extended_fpu( struct task_struct *tsk, struct user_fxsr_struct *fpu )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: arch/i386/kernel/i387.c:551:
+       int fpvalid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: arch/i386/kernel/i387.c:553:
+       fpvalid = tsk->used_math && cpu_has_fxsr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: arch/i386/kernel/i387.c:554:
+       if ( fpvalid ) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#97: FILE: arch/i386/kernel/i387.c:554:
+       if ( fpvalid ) {
+               if (tsk == current) unlazy_fpu( tsk );

ERROR:SPACING: space prohibited after that open parenthesis '('
#97: FILE: arch/i386/kernel/i387.c:554:
+       if ( fpvalid ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#97: FILE: arch/i386/kernel/i387.c:554:
+       if ( fpvalid ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#98: FILE: arch/i386/kernel/i387.c:555:
+               if (tsk == current) unlazy_fpu( tsk );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: arch/i386/kernel/i387.c:555:
+               if (tsk == current) unlazy_fpu( tsk );$

ERROR:SPACING: space prohibited after that open parenthesis '('
#98: FILE: arch/i386/kernel/i387.c:555:
+               if (tsk == current) unlazy_fpu( tsk );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#98: FILE: arch/i386/kernel/i387.c:555:
+               if (tsk == current) unlazy_fpu( tsk );

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#98: FILE: arch/i386/kernel/i387.c:555:
+               if (tsk == current) unlazy_fpu( tsk );

ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: arch/i386/kernel/i387.c:556:
+               memcpy( fpu, &tsk->thread.i387.fxsave,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: arch/i386/kernel/i387.c:556:
+               memcpy( fpu, &tsk->thread.i387.fxsave,$

ERROR:SPACING: space prohibited after that open parenthesis '('
#99: FILE: arch/i386/kernel/i387.c:556:
+               memcpy( fpu, &tsk->thread.i387.fxsave,

ERROR:CODE_INDENT: code indent should use tabs where possible
#100: FILE: arch/i386/kernel/i387.c:557:
+               sizeof(struct user_fxsr_struct) );$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#100: FILE: arch/i386/kernel/i387.c:557:
+               memcpy( fpu, &tsk->thread.i387.fxsave,
+               sizeof(struct user_fxsr_struct) );

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: arch/i386/kernel/i387.c:557:
+               sizeof(struct user_fxsr_struct) );$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#100: FILE: arch/i386/kernel/i387.c:557:
+               sizeof(struct user_fxsr_struct) );

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: arch/i386/kernel/i387.c:558:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: arch/i386/kernel/i387.c:560:
+       return fpvalid;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#106: FILE: arch/i386/kernel/i387.c:563:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#114: FILE: arch/i386/kernel/process.c:613:
 }
+/*

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: arch/i386/kernel/process.c:619:
+       struct pt_regs ptregs;$

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#122: FILE: arch/i386/kernel/process.c:621:
+       ptregs = *(struct pt_regs *)((unsigned long)tsk->thread_info + THREAD_SIZE - sizeof(struct pt_regs));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: arch/i386/kernel/process.c:621:
+       ptregs = *(struct pt_regs *)((unsigned long)tsk->thread_info + THREAD_SIZE - sizeof(struct pt_regs));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: arch/i386/kernel/process.c:622:
+       ptregs.xcs &= 0xffff;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: arch/i386/kernel/process.c:623:
+       ptregs.xds &= 0xffff;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: arch/i386/kernel/process.c:624:
+       ptregs.xes &= 0xffff;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: arch/i386/kernel/process.c:625:
+       ptregs.xss &= 0xffff;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: arch/i386/kernel/process.c:627:
+       elf_core_copy_regs(regs, &ptregs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: arch/i386/kernel/process.c:629:
+       return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: arch/ia64/kernel/process.c:369:
+       do_copy_task_regs(current, info, arg);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#146: FILE: arch/ia64/kernel/process.c:373:
+do_dump_fpu (struct unw_frame_info *info, void *arg)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: arch/ia64/kernel/process.c:375:
+       do_dump_task_fpu(current, info, arg);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#152: FILE: arch/ia64/kernel/process.c:379:
+ia64_elf_core_copy_regs (struct pt_regs *pt, elf_gregset_t dst)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: arch/ia64/kernel/process.c:381:
+       unw_init_running(do_copy_regs, dst);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#158: FILE: arch/ia64/kernel/process.c:385:
+dump_fpu (struct pt_regs *pt, elf_fpregset_t dst)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: arch/ia64/kernel/process.c:387:
+       unw_init_running(do_dump_fpu, dst);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: arch/ia64/kernel/process.c:388:
+       return 1;       /* f0-f31 are always valid so we always return 1 */$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#165: FILE: arch/ia64/kernel/process.c:392:
+do_copy_task_regs (struct task_struct *task, struct unw_frame_info *info, void *arg)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: arch/ia64/kernel/process.c:408:
+       urbs_end = ia64_get_user_rbs_end(task, pt, &cfm);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: arch/ia64/kernel/process.c:410:
+       if (ia64_sync_user_rbs(task, info->sw, pt->ar_bspstore, urbs_end) < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#178: FILE: arch/ia64/kernel/process.c:410:
+       if (ia64_sync_user_rbs(task, info->sw, pt->ar_bspstore, urbs_end) < 0)
                return;

CHECK:SPACING: No space is necessary after a cast
#182: FILE: arch/ia64/kernel/process.c:413:
+       ia64_peek(task, info->sw, urbs_end, (long) ia64_rse_rnat_addr((long *) urbs_end),

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: arch/ia64/kernel/process.c:413:
+       ia64_peek(task, info->sw, urbs_end, (long) ia64_rse_rnat_addr((long *) urbs_end),$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#191: FILE: arch/ia64/kernel/process.c:462:
+do_dump_task_fpu (struct task_struct *task, struct unw_frame_info *info, void *arg)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: arch/ia64/kernel/process.c:477:
+       ia64_flush_fph(task);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: arch/ia64/kernel/process.c:478:
+       if ((task->thread.flags & IA64_THREAD_FPH_VALID) != 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#203: FILE: arch/ia64/kernel/process.c:478:
+       if ((task->thread.flags & IA64_THREAD_FPH_VALID) != 0)
+               memcpy(dst + 32, task->thread.fph, 96*16);

ERROR:CODE_INDENT: code indent should use tabs where possible
#204: FILE: arch/ia64/kernel/process.c:479:
+               memcpy(dst + 32, task->thread.fph, 96*16);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: arch/ia64/kernel/process.c:479:
+               memcpy(dst + 32, task->thread.fph, 96*16);$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#204: FILE: arch/ia64/kernel/process.c:479:
+               memcpy(dst + 32, task->thread.fph, 96*16);
                                                     ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: arch/ia64/kernel/process.c:484:
+       struct unw_frame_info tcore_info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: arch/ia64/kernel/process.c:486:
+       if(current == task) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#214: FILE: arch/ia64/kernel/process.c:486:
+       if(current == task) {
+               unw_init_running(do_copy_regs, regs);

ERROR:SPACING: space required before the open parenthesis '('
#214: FILE: arch/ia64/kernel/process.c:486:
+       if(current == task) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: arch/ia64/kernel/process.c:487:
+               unw_init_running(do_copy_regs, regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: arch/ia64/kernel/process.c:487:
+               unw_init_running(do_copy_regs, regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: arch/ia64/kernel/process.c:488:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: arch/ia64/kernel/process.c:489:
+       else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#217: FILE: arch/ia64/kernel/process.c:489:
+       else {
+               memset(&tcore_info, 0, sizeof(tcore_info));

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#217: FILE: arch/ia64/kernel/process.c:489:
+       }
+       else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#217: FILE: arch/ia64/kernel/process.c:489:
+       else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: arch/ia64/kernel/process.c:490:
+               memset(&tcore_info, 0, sizeof(tcore_info));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: arch/ia64/kernel/process.c:490:
+               memset(&tcore_info, 0, sizeof(tcore_info));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: arch/ia64/kernel/process.c:491:
+               unw_init_from_blocked_task(&tcore_info, task);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: arch/ia64/kernel/process.c:491:
+               unw_init_from_blocked_task(&tcore_info, task);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: arch/ia64/kernel/process.c:492:
+               do_copy_task_regs(task, &tcore_info, regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: arch/ia64/kernel/process.c:492:
+               do_copy_task_regs(task, &tcore_info, regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: arch/ia64/kernel/process.c:493:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: arch/ia64/kernel/process.c:495:
+       return 1;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#228: FILE: arch/ia64/kernel/process.c:498:
+int dump_task_fpu (struct task_struct *task, elf_fpregset_t *dst)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: arch/ia64/kernel/process.c:500:
+       struct unw_frame_info tcore_info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: arch/ia64/kernel/process.c:502:
+       if(current == task) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#234: FILE: arch/ia64/kernel/process.c:502:
+       if(current == task) {
+               unw_init_running(do_dump_fpu, dst);

ERROR:SPACING: space required before the open parenthesis '('
#234: FILE: arch/ia64/kernel/process.c:502:
+       if(current == task) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#235: FILE: arch/ia64/kernel/process.c:503:
+               unw_init_running(do_dump_fpu, dst);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: arch/ia64/kernel/process.c:503:
+               unw_init_running(do_dump_fpu, dst);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: arch/ia64/kernel/process.c:504:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: arch/ia64/kernel/process.c:505:
+       else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#237: FILE: arch/ia64/kernel/process.c:505:
+       else {
+               memset(&tcore_info, 0, sizeof(tcore_info));

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#237: FILE: arch/ia64/kernel/process.c:505:
+       }
+       else {

CHECK:BRACES: Unbalanced braces around else statement
#237: FILE: arch/ia64/kernel/process.c:505:
+       else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#238: FILE: arch/ia64/kernel/process.c:506:
+               memset(&tcore_info, 0, sizeof(tcore_info));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: arch/ia64/kernel/process.c:506:
+               memset(&tcore_info, 0, sizeof(tcore_info));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#239: FILE: arch/ia64/kernel/process.c:507:
+               unw_init_from_blocked_task(&tcore_info, task);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: arch/ia64/kernel/process.c:507:
+               unw_init_from_blocked_task(&tcore_info, task);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#240: FILE: arch/ia64/kernel/process.c:508:
+               do_dump_task_fpu(task, &tcore_info, dst);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: arch/ia64/kernel/process.c:508:
+               do_dump_task_fpu(task, &tcore_info, dst);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: arch/ia64/kernel/process.c:509:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: arch/ia64/kernel/process.c:511:
+       return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: fs/binfmt_elf.c:1014:
+       memcpy(elf->e_ident, ELFMAG, SELFMAG);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: fs/binfmt_elf.c:1015:
+       elf->e_ident[EI_CLASS] = ELF_CLASS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: fs/binfmt_elf.c:1016:
+       elf->e_ident[EI_DATA] = ELF_DATA;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: fs/binfmt_elf.c:1017:
+       elf->e_ident[EI_VERSION] = EV_CURRENT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: fs/binfmt_elf.c:1018:
+       memset(elf->e_ident+EI_PAD, 0, EI_NIDENT-EI_PAD);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#286: FILE: fs/binfmt_elf.c:1018:
+       memset(elf->e_ident+EI_PAD, 0, EI_NIDENT-EI_PAD);
                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#286: FILE: fs/binfmt_elf.c:1018:
+       memset(elf->e_ident+EI_PAD, 0, EI_NIDENT-EI_PAD);
                                                ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: fs/binfmt_elf.c:1020:
+       elf->e_type = ET_CORE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: fs/binfmt_elf.c:1021:
+       elf->e_machine = ELF_ARCH;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: fs/binfmt_elf.c:1022:
+       elf->e_version = EV_CURRENT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: fs/binfmt_elf.c:1023:
+       elf->e_entry = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: fs/binfmt_elf.c:1024:
+       elf->e_phoff = sizeof(struct elfhdr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: fs/binfmt_elf.c:1025:
+       elf->e_shoff = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: fs/binfmt_elf.c:1026:
+       elf->e_flags = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: fs/binfmt_elf.c:1027:
+       elf->e_ehsize = sizeof(struct elfhdr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: fs/binfmt_elf.c:1028:
+       elf->e_phentsize = sizeof(struct elf_phdr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: fs/binfmt_elf.c:1029:
+       elf->e_phnum = segs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: fs/binfmt_elf.c:1030:
+       elf->e_shentsize = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: fs/binfmt_elf.c:1031:
+       elf->e_shnum = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: fs/binfmt_elf.c:1032:
+       elf->e_shstrndx = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: fs/binfmt_elf.c:1033:
+       return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: fs/binfmt_elf.c:1038:
+       phdr->p_type = PT_NOTE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: fs/binfmt_elf.c:1039:
+       phdr->p_offset = offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: fs/binfmt_elf.c:1040:
+       phdr->p_vaddr = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#309: FILE: fs/binfmt_elf.c:1041:
+       phdr->p_paddr = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#310: FILE: fs/binfmt_elf.c:1042:
+       phdr->p_filesz = sz;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: fs/binfmt_elf.c:1043:
+       phdr->p_memsz = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#312: FILE: fs/binfmt_elf.c:1044:
+       phdr->p_flags = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: fs/binfmt_elf.c:1045:
+       phdr->p_align = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: fs/binfmt_elf.c:1046:
+       return;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#318: FILE: fs/binfmt_elf.c:1050:
+               unsigned int sz, void *data)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#318: FILE: fs/binfmt_elf.c:1050:
+static inline void fill_note(struct memelfnote *note, const char *name, int type,
+               unsigned int sz, void *data)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#318: FILE: fs/binfmt_elf.c:1050:
+               unsigned int sz, void *data)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: fs/binfmt_elf.c:1052:
+       note->name = name;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: fs/binfmt_elf.c:1053:
+       note->type = type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: fs/binfmt_elf.c:1054:
+       note->datasz = sz;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: fs/binfmt_elf.c:1055:
+       note->data = data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: fs/binfmt_elf.c:1056:
+       return;$

WARNING:TYPO_SPELLING: 'seperately' may be misspelled - perhaps 'separately'?
#329: FILE: fs/binfmt_elf.c:1061:
+ * which need to be filled up seperately.
                               ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: fs/binfmt_elf.c:1065:
+       prstatus->pr_info.si_signo = prstatus->pr_cursig = signr;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#333: FILE: fs/binfmt_elf.c:1065:
+       prstatus->pr_info.si_signo = prstatus->pr_cursig = signr;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: fs/binfmt_elf.c:1066:
+       prstatus->pr_sigpend = p->pending.signal.sig[0];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: fs/binfmt_elf.c:1067:
+       prstatus->pr_sighold = p->blocked.sig[0];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#336: FILE: fs/binfmt_elf.c:1068:
+       prstatus->pr_pid = p->pid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: fs/binfmt_elf.c:1069:
+       prstatus->pr_ppid = p->parent->pid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: fs/binfmt_elf.c:1070:
+       prstatus->pr_pgrp = p->pgrp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#339: FILE: fs/binfmt_elf.c:1071:
+       prstatus->pr_sid = p->session;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: fs/binfmt_elf.c:1072:
+       prstatus->pr_utime.tv_sec = CT_TO_SECS(p->times.tms_utime);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: fs/binfmt_elf.c:1073:
+       prstatus->pr_utime.tv_usec = CT_TO_USECS(p->times.tms_utime);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: fs/binfmt_elf.c:1074:
+       prstatus->pr_stime.tv_sec = CT_TO_SECS(p->times.tms_stime);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: fs/binfmt_elf.c:1075:
+       prstatus->pr_stime.tv_usec = CT_TO_USECS(p->times.tms_stime);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: fs/binfmt_elf.c:1076:
+       prstatus->pr_cutime.tv_sec = CT_TO_SECS(p->times.tms_cutime);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: fs/binfmt_elf.c:1077:
+       prstatus->pr_cutime.tv_usec = CT_TO_USECS(p->times.tms_cutime);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: fs/binfmt_elf.c:1078:
+       prstatus->pr_cstime.tv_sec = CT_TO_SECS(p->times.tms_cstime);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: fs/binfmt_elf.c:1079:
+       prstatus->pr_cstime.tv_usec = CT_TO_USECS(p->times.tms_cstime);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: fs/binfmt_elf.c:1080:
+       return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: fs/binfmt_elf.c:1085:
+       int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: fs/binfmt_elf.c:1087:
+       psinfo->pr_pid = p->pid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#356: FILE: fs/binfmt_elf.c:1088:
+       psinfo->pr_ppid = p->parent->pid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#357: FILE: fs/binfmt_elf.c:1089:
+       psinfo->pr_pgrp = p->pgrp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#358: FILE: fs/binfmt_elf.c:1090:
+       psinfo->pr_sid = p->session;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#360: FILE: fs/binfmt_elf.c:1092:
+       i = p->state ? ffz(~p->state) + 1 : 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#361: FILE: fs/binfmt_elf.c:1093:
+       psinfo->pr_state = i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: fs/binfmt_elf.c:1094:
+       psinfo->pr_sname = (i < 0 || i > 5) ? '.' : "RSDZTD"[i];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: fs/binfmt_elf.c:1095:
+       psinfo->pr_zomb = psinfo->pr_sname == 'Z';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: fs/binfmt_elf.c:1096:
+       psinfo->pr_nice =  task_nice(p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: fs/binfmt_elf.c:1097:
+       psinfo->pr_flag = p->flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: fs/binfmt_elf.c:1098:
+       psinfo->pr_uid = NEW_TO_OLD_UID(p->uid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: fs/binfmt_elf.c:1099:
+       psinfo->pr_gid = NEW_TO_OLD_GID(p->gid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#368: FILE: fs/binfmt_elf.c:1100:
+       strncpy(psinfo->pr_fname, p->comm, sizeof(psinfo->pr_fname));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: fs/binfmt_elf.c:1101:
+       return;$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#374: FILE: fs/binfmt_elf.c:1106:
+struct elf_thread_status
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: fs/binfmt_elf.c:1107:
+       struct list_head list;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: fs/binfmt_elf.c:1108:
+       struct elf_prstatus prstatus;   /* NT_PRSTATUS */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: fs/binfmt_elf.c:1109:
+       elf_fpregset_t fpu;             /* NT_PRFPREG */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: fs/binfmt_elf.c:1111:
+       elf_fpxregset_t xfpu;           /* NT_PRXFPREG */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: fs/binfmt_elf.c:1113:
+       struct memelfnote notes[3];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: fs/binfmt_elf.c:1114:
+       int num_notes;$

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#390: FILE: fs/binfmt_elf.c:1122:
+static int elf_dump_thread_status(long signr, struct task_struct * p, struct list_head * thread_list)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#390: FILE: fs/binfmt_elf.c:1122:
+static int elf_dump_thread_status(long signr, struct task_struct * p, struct list_head * thread_list)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#390: FILE: fs/binfmt_elf.c:1122:
+static int elf_dump_thread_status(long signr, struct task_struct * p, struct list_head * thread_list)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#392: FILE: fs/binfmt_elf.c:1124:
+{
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: fs/binfmt_elf.c:1125:
+       struct elf_thread_status *t;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#394: FILE: fs/binfmt_elf.c:1126:
+       int sz = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: fs/binfmt_elf.c:1128:
+       t = kmalloc(sizeof(*t), GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#397: FILE: fs/binfmt_elf.c:1129:
+       if (!t) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#397: FILE: fs/binfmt_elf.c:1129:
+       if (!t) {
+               printk(KERN_WARNING "Cannot allocate memory for thread status.\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#398: FILE: fs/binfmt_elf.c:1130:
+               printk(KERN_WARNING "Cannot allocate memory for thread status.\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: fs/binfmt_elf.c:1130:
+               printk(KERN_WARNING "Cannot allocate memory for thread status.\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#398: FILE: fs/binfmt_elf.c:1130:
+               printk(KERN_WARNING "Cannot allocate memory for thread status.\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#398: FILE: fs/binfmt_elf.c:1130:
+       if (!t) {
+               printk(KERN_WARNING "Cannot allocate memory for thread status.\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#399: FILE: fs/binfmt_elf.c:1131:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#399: FILE: fs/binfmt_elf.c:1131:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#400: FILE: fs/binfmt_elf.c:1132:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#402: FILE: fs/binfmt_elf.c:1134:
+       INIT_LIST_HEAD(&t->list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#403: FILE: fs/binfmt_elf.c:1135:
+       t->num_notes = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#405: FILE: fs/binfmt_elf.c:1137:
+       fill_prstatus(&t->prstatus, p, signr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#406: FILE: fs/binfmt_elf.c:1138:
+       elf_core_copy_task_regs(p, &t->prstatus.pr_reg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: fs/binfmt_elf.c:1140:
+       fill_note(&t->notes[0], "CORE", NT_PRSTATUS, sizeof(t->prstatus), &(t->prstatus));$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around t->prstatus
#408: FILE: fs/binfmt_elf.c:1140:
+       fill_note(&t->notes[0], "CORE", NT_PRSTATUS, sizeof(t->prstatus), &(t->prstatus));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: fs/binfmt_elf.c:1141:
+       t->num_notes++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#410: FILE: fs/binfmt_elf.c:1142:
+       sz += notesize(&t->notes[0]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#412: FILE: fs/binfmt_elf.c:1144:
+       if ((t->prstatus.pr_fpvalid = elf_core_copy_task_fpregs(p, &t->fpu))) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#412: FILE: fs/binfmt_elf.c:1144:
+       if ((t->prstatus.pr_fpvalid = elf_core_copy_task_fpregs(p, &t->fpu))) {
+               fill_note(&t->notes[1], "CORE", NT_PRFPREG, sizeof(t->fpu), &(t->fpu));

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#412: FILE: fs/binfmt_elf.c:1144:
+       if ((t->prstatus.pr_fpvalid = elf_core_copy_task_fpregs(p, &t->fpu))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#413: FILE: fs/binfmt_elf.c:1145:
+               fill_note(&t->notes[1], "CORE", NT_PRFPREG, sizeof(t->fpu), &(t->fpu));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#413: FILE: fs/binfmt_elf.c:1145:
+               fill_note(&t->notes[1], "CORE", NT_PRFPREG, sizeof(t->fpu), &(t->fpu));$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around t->fpu
#413: FILE: fs/binfmt_elf.c:1145:
+               fill_note(&t->notes[1], "CORE", NT_PRFPREG, sizeof(t->fpu), &(t->fpu));

ERROR:CODE_INDENT: code indent should use tabs where possible
#414: FILE: fs/binfmt_elf.c:1146:
+               t->num_notes++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#414: FILE: fs/binfmt_elf.c:1146:
+               t->num_notes++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#415: FILE: fs/binfmt_elf.c:1147:
+               sz += notesize(&t->notes[1]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#415: FILE: fs/binfmt_elf.c:1147:
+               sz += notesize(&t->notes[1]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#416: FILE: fs/binfmt_elf.c:1148:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#419: FILE: fs/binfmt_elf.c:1151:
+       if (elf_core_copy_task_xfpregs(p, &t->xfpu)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#419: FILE: fs/binfmt_elf.c:1151:
+       if (elf_core_copy_task_xfpregs(p, &t->xfpu)) {
+               fill_note(&t->notes[2], "LINUX", NT_PRXFPREG, sizeof(t->xfpu), &(t->xfpu));

ERROR:CODE_INDENT: code indent should use tabs where possible
#420: FILE: fs/binfmt_elf.c:1152:
+               fill_note(&t->notes[2], "LINUX", NT_PRXFPREG, sizeof(t->xfpu), &(t->xfpu));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#420: FILE: fs/binfmt_elf.c:1152:
+               fill_note(&t->notes[2], "LINUX", NT_PRXFPREG, sizeof(t->xfpu), &(t->xfpu));$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around t->xfpu
#420: FILE: fs/binfmt_elf.c:1152:
+               fill_note(&t->notes[2], "LINUX", NT_PRXFPREG, sizeof(t->xfpu), &(t->xfpu));

ERROR:CODE_INDENT: code indent should use tabs where possible
#421: FILE: fs/binfmt_elf.c:1153:
+               t->num_notes++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: fs/binfmt_elf.c:1153:
+               t->num_notes++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#422: FILE: fs/binfmt_elf.c:1154:
+               sz += notesize(&t->notes[2]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#422: FILE: fs/binfmt_elf.c:1154:
+               sz += notesize(&t->notes[2]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: fs/binfmt_elf.c:1155:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#425: FILE: fs/binfmt_elf.c:1157:
+       list_add(&t->list, thread_list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#426: FILE: fs/binfmt_elf.c:1158:
+       return sz;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#429: FILE: fs/binfmt_elf.c:1161:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#440: FILE: fs/binfmt_elf.c:1181:
+       int numnote = 5;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: fs/binfmt_elf.c:1182:
+       struct memelfnote notes[5];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#445: FILE: fs/binfmt_elf.c:1185:
+       struct task_struct *p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#446: FILE: fs/binfmt_elf.c:1186:
+       LIST_HEAD(thread_list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#447: FILE: fs/binfmt_elf.c:1187:
+       struct list_head *t;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#448: FILE: fs/binfmt_elf.c:1188:
+       elf_fpregset_t fpu;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#450: FILE: fs/binfmt_elf.c:1190:
+       elf_fpxregset_t xfpu;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#452: FILE: fs/binfmt_elf.c:1192:
+       int thread_status_size = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#456: FILE: fs/binfmt_elf.c:1196:
+       tcore_suspend_threads();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#475: FILE: fs/binfmt_elf.c:1232:
+       if (signr) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#475: FILE: fs/binfmt_elf.c:1232:
+       if (signr) {
+               read_lock(&tasklist_lock);

ERROR:CODE_INDENT: code indent should use tabs where possible
#476: FILE: fs/binfmt_elf.c:1233:
+               read_lock(&tasklist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: fs/binfmt_elf.c:1233:
+               read_lock(&tasklist_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#477: FILE: fs/binfmt_elf.c:1234:
+               for_each_task(p)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#477: FILE: fs/binfmt_elf.c:1234:
+               for_each_task(p)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#477: FILE: fs/binfmt_elf.c:1234:
+               for_each_task(p)
+                       if (current->mm == p->mm && current != p) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#478: FILE: fs/binfmt_elf.c:1235:
+                       if (current->mm == p->mm && current != p) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#478: FILE: fs/binfmt_elf.c:1235:
+                       if (current->mm == p->mm && current != p) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#478: FILE: fs/binfmt_elf.c:1235:
+                       if (current->mm == p->mm && current != p) {
+                               int sz = elf_dump_thread_status(signr, p, &thread_list);

ERROR:CODE_INDENT: code indent should use tabs where possible
#479: FILE: fs/binfmt_elf.c:1236:
+                               int sz = elf_dump_thread_status(signr, p, &thread_list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#479: FILE: fs/binfmt_elf.c:1236:
+                               int sz = elf_dump_thread_status(signr, p, &thread_list);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#480: FILE: fs/binfmt_elf.c:1237:
+                               if (!sz) {$

WARNING:LINE_SPACING: Missing a blank line after declarations
#480: FILE: fs/binfmt_elf.c:1237:
+                               int sz = elf_dump_thread_status(signr, p, &thread_list);
+                               if (!sz) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#480: FILE: fs/binfmt_elf.c:1237:
+                               if (!sz) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#480: FILE: fs/binfmt_elf.c:1237:
+                               if (!sz) {
+                                       read_unlock(&tasklist_lock);

CHECK:BRACES: braces {} should be used on all arms of this statement
#480: FILE: fs/binfmt_elf.c:1237:
+                               if (!sz) {
[...]
+                               else
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#481: FILE: fs/binfmt_elf.c:1238:
+                                       read_unlock(&tasklist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#481: FILE: fs/binfmt_elf.c:1238:
+                                       read_unlock(&tasklist_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#482: FILE: fs/binfmt_elf.c:1239:
+                                       goto cleanup;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#482: FILE: fs/binfmt_elf.c:1239:
+                                       goto cleanup;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#483: FILE: fs/binfmt_elf.c:1240:
+                               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#483: FILE: fs/binfmt_elf.c:1240:
+                               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#484: FILE: fs/binfmt_elf.c:1241:
+                               else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#484: FILE: fs/binfmt_elf.c:1241:
+                               else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#484: FILE: fs/binfmt_elf.c:1241:
+                               else
+                                       thread_status_size += sz;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#484: FILE: fs/binfmt_elf.c:1241:
+                               }
+                               else

ERROR:CODE_INDENT: code indent should use tabs where possible
#485: FILE: fs/binfmt_elf.c:1242:
+                                       thread_status_size += sz;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#485: FILE: fs/binfmt_elf.c:1242:
+                                       thread_status_size += sz;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#486: FILE: fs/binfmt_elf.c:1243:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#486: FILE: fs/binfmt_elf.c:1243:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#487: FILE: fs/binfmt_elf.c:1244:
+               read_unlock(&tasklist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#487: FILE: fs/binfmt_elf.c:1244:
+               read_unlock(&tasklist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: fs/binfmt_elf.c:1245:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#490: FILE: fs/binfmt_elf.c:1247:
+       memset(&prstatus, 0, sizeof(prstatus));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#491: FILE: fs/binfmt_elf.c:1248:
+       fill_prstatus(&prstatus, current, signr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#492: FILE: fs/binfmt_elf.c:1249:
+       elf_core_copy_regs(&prstatus.pr_reg, regs);$

WARNING:TYPO_SPELLING: 'proceses' may be misspelled - perhaps 'processes'?
#498: FILE: fs/binfmt_elf.c:1253:
+       /* This because those proceses that could possibly
                              ^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#499: FILE: fs/binfmt_elf.c:1254:
+        * change map_count or the mmap / vma pages are now suspended.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#500: FILE: fs/binfmt_elf.c:1255:
+        *$

ERROR:CODE_INDENT: code indent should use tabs where possible
#501: FILE: fs/binfmt_elf.c:1256:
+        * Only ptrace can touch these memory address, but it cannot change$

ERROR:CODE_INDENT: code indent should use tabs where possible
#502: FILE: fs/binfmt_elf.c:1257:
+        * the map_count or the pages.  So no possibility of crashing exists while dumping$

ERROR:CODE_INDENT: code indent should use tabs where possible
#503: FILE: fs/binfmt_elf.c:1258:
+        * the mm->vm_next areas to the core file.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#504: FILE: fs/binfmt_elf.c:1259:
+        *$

ERROR:CODE_INDENT: code indent should use tabs where possible
#505: FILE: fs/binfmt_elf.c:1260:
+        * Grabbing mmap_sem in this function is risky WRT the use of suspend_threads.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#506: FILE: fs/binfmt_elf.c:1261:
+        * Although no locks ups have been induced, if one of the suspended threads was$

ERROR:CODE_INDENT: code indent should use tabs where possible
#507: FILE: fs/binfmt_elf.c:1262:
+        * in line for the current->mmap_sem and if gets it while on the Phantom runque,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#508: FILE: fs/binfmt_elf.c:1263:
+        * then we would dead lock in this function if we continue to attempt to down_write$

ERROR:CODE_INDENT: code indent should use tabs where possible
#509: FILE: fs/binfmt_elf.c:1264:
+        * in this function.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#510: FILE: fs/binfmt_elf.c:1265:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#537: FILE: fs/binfmt_elf.c:1273:
+       fill_elf_header(&elf, segs+1); /* including notes section*/$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#537: FILE: fs/binfmt_elf.c:1273:
+       fill_elf_header(&elf, segs+1); /* including notes section*/
                                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#564: FILE: fs/binfmt_elf.c:1290:
+       fill_note(&notes[0], "CORE", NT_PRSTATUS, sizeof(prstatus), &prstatus);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#566: FILE: fs/binfmt_elf.c:1292:
+       fill_psinfo(&psinfo, current);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#567: FILE: fs/binfmt_elf.c:1293:
+       fill_note(&notes[1], "CORE", NT_PRPSINFO, sizeof(psinfo), &psinfo);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#569: FILE: fs/binfmt_elf.c:1295:
+       fill_note(&notes[2], "CORE", NT_TASKSTRUCT, sizeof(*current), current);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#572: FILE: fs/binfmt_elf.c:1298:
+       if ((prstatus.pr_fpvalid = elf_core_copy_task_fpregs(current, &fpu))) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#572: FILE: fs/binfmt_elf.c:1298:
+       if ((prstatus.pr_fpvalid = elf_core_copy_task_fpregs(current, &fpu))) {
+               fill_note(&notes[3], "CORE", NT_PRFPREG, sizeof(fpu), &fpu);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#572: FILE: fs/binfmt_elf.c:1298:
+       if ((prstatus.pr_fpvalid = elf_core_copy_task_fpregs(current, &fpu))) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#572: FILE: fs/binfmt_elf.c:1298:
+       if ((prstatus.pr_fpvalid = elf_core_copy_task_fpregs(current, &fpu))) {
[...]
+       } else {
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#573: FILE: fs/binfmt_elf.c:1299:
+               fill_note(&notes[3], "CORE", NT_PRFPREG, sizeof(fpu), &fpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#573: FILE: fs/binfmt_elf.c:1299:
+               fill_note(&notes[3], "CORE", NT_PRFPREG, sizeof(fpu), &fpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#574: FILE: fs/binfmt_elf.c:1300:
+       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#574: FILE: fs/binfmt_elf.c:1300:
+       } else {
+               --numnote;

ERROR:CODE_INDENT: code indent should use tabs where possible
#575: FILE: fs/binfmt_elf.c:1301:
+               --numnote;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#575: FILE: fs/binfmt_elf.c:1301:
+               --numnote;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#576: FILE: fs/binfmt_elf.c:1302:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#578: FILE: fs/binfmt_elf.c:1304:
+       if (elf_core_copy_task_xfpregs(current, &xfpu)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#578: FILE: fs/binfmt_elf.c:1304:
+       if (elf_core_copy_task_xfpregs(current, &xfpu)) {
+               fill_note(&notes[4], "LINUX", NT_PRXFPREG, sizeof(xfpu), &xfpu);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#578: FILE: fs/binfmt_elf.c:1304:
+       if (elf_core_copy_task_xfpregs(current, &xfpu)) {
[...]
+       } else {
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#579: FILE: fs/binfmt_elf.c:1305:
+               fill_note(&notes[4], "LINUX", NT_PRXFPREG, sizeof(xfpu), &xfpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#579: FILE: fs/binfmt_elf.c:1305:
+               fill_note(&notes[4], "LINUX", NT_PRXFPREG, sizeof(xfpu), &xfpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#580: FILE: fs/binfmt_elf.c:1306:
+       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#580: FILE: fs/binfmt_elf.c:1306:
+       } else {
+               --numnote;

ERROR:CODE_INDENT: code indent should use tabs where possible
#581: FILE: fs/binfmt_elf.c:1307:
+               --numnote;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#581: FILE: fs/binfmt_elf.c:1307:
+               --numnote;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#582: FILE: fs/binfmt_elf.c:1308:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#584: FILE: fs/binfmt_elf.c:1310:
+       numnote --;$

ERROR:SPACING: space prohibited before that '--' (ctx:WxO)
#584: FILE: fs/binfmt_elf.c:1310:
+       numnote --;
                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#633: FILE: fs/binfmt_elf.c:1326:
+               sz += thread_status_size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#633: FILE: fs/binfmt_elf.c:1326:
+               sz += thread_status_size;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#645: FILE: fs/binfmt_elf.c:1328:
+               fill_elf_note_phdr(&phdr, sz, offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#645: FILE: fs/binfmt_elf.c:1328:
+               fill_elf_note_phdr(&phdr, sz, offset);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#646: FILE: fs/binfmt_elf.c:1329:
+               offset += sz;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#646: FILE: fs/binfmt_elf.c:1329:
+               offset += sz;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#660: FILE: fs/binfmt_elf.c:1364:
+       list_for_each(t, &thread_list) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#661: FILE: fs/binfmt_elf.c:1365:
+               struct elf_thread_status *tmp = list_entry(t, struct elf_thread_status, list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#661: FILE: fs/binfmt_elf.c:1365:
+               struct elf_thread_status *tmp = list_entry(t, struct elf_thread_status, list);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#662: FILE: fs/binfmt_elf.c:1366:
+               for (i = 0; i < tmp->num_notes; i++)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#662: FILE: fs/binfmt_elf.c:1366:
+               struct elf_thread_status *tmp = list_entry(t, struct elf_thread_status, list);
+               for (i = 0; i < tmp->num_notes; i++)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#662: FILE: fs/binfmt_elf.c:1366:
+               for (i = 0; i < tmp->num_notes; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#662: FILE: fs/binfmt_elf.c:1366:
+               for (i = 0; i < tmp->num_notes; i++)
+                       if (!writenote(&tmp->notes[i], file))

ERROR:CODE_INDENT: code indent should use tabs where possible
#663: FILE: fs/binfmt_elf.c:1367:
+                       if (!writenote(&tmp->notes[i], file))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#663: FILE: fs/binfmt_elf.c:1367:
+                       if (!writenote(&tmp->notes[i], file))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#663: FILE: fs/binfmt_elf.c:1367:
+                       if (!writenote(&tmp->notes[i], file))
+                               goto end_coredump;

ERROR:CODE_INDENT: code indent should use tabs where possible
#664: FILE: fs/binfmt_elf.c:1368:
+                               goto end_coredump;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#664: FILE: fs/binfmt_elf.c:1368:
+                               goto end_coredump;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#665: FILE: fs/binfmt_elf.c:1369:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#680: FILE: fs/binfmt_elf.c:1418:
+       while(!list_empty(&thread_list)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#680: FILE: fs/binfmt_elf.c:1418:
+       while(!list_empty(&thread_list)) {
+               struct list_head *tmp = thread_list.next;

ERROR:SPACING: space required before the open parenthesis '('
#680: FILE: fs/binfmt_elf.c:1418:
+       while(!list_empty(&thread_list)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#681: FILE: fs/binfmt_elf.c:1419:
+               struct list_head *tmp = thread_list.next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#681: FILE: fs/binfmt_elf.c:1419:
+               struct list_head *tmp = thread_list.next;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#682: FILE: fs/binfmt_elf.c:1420:
+               list_del(tmp);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#682: FILE: fs/binfmt_elf.c:1420:
+               struct list_head *tmp = thread_list.next;
+               list_del(tmp);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#682: FILE: fs/binfmt_elf.c:1420:
+               list_del(tmp);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#683: FILE: fs/binfmt_elf.c:1421:
+               kfree(list_entry(tmp, struct elf_thread_status, list));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#683: FILE: fs/binfmt_elf.c:1421:
+               kfree(list_entry(tmp, struct elf_thread_status, list));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#684: FILE: fs/binfmt_elf.c:1422:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#686: FILE: fs/binfmt_elf.c:1424:
+       tcore_resume_threads();$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#702: FILE: include/asm-i386/elf.h:103:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#703: FILE: include/asm-i386/elf.h:104:
+extern int dump_task_regs (struct task_struct *, elf_gregset_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#703: FILE: include/asm-i386/elf.h:104:
+extern int dump_task_regs (struct task_struct *, elf_gregset_t *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#703: FILE: include/asm-i386/elf.h:104:
+extern int dump_task_regs (struct task_struct *, elf_gregset_t *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'elf_gregset_t *' should also have an identifier name
#703: FILE: include/asm-i386/elf.h:104:
+extern int dump_task_regs (struct task_struct *, elf_gregset_t *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#704: FILE: include/asm-i386/elf.h:105:
+extern int dump_task_fpu (struct task_struct *, elf_fpregset_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#704: FILE: include/asm-i386/elf.h:105:
+extern int dump_task_fpu (struct task_struct *, elf_fpregset_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#704: FILE: include/asm-i386/elf.h:105:
+extern int dump_task_fpu (struct task_struct *, elf_fpregset_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'elf_fpregset_t *' should also have an identifier name
#704: FILE: include/asm-i386/elf.h:105:
+extern int dump_task_fpu (struct task_struct *, elf_fpregset_t *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#705: FILE: include/asm-i386/elf.h:106:
+extern int dump_task_extended_fpu (struct task_struct *, struct user_fxsr_struct *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#705: FILE: include/asm-i386/elf.h:106:
+extern int dump_task_extended_fpu (struct task_struct *, struct user_fxsr_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#705: FILE: include/asm-i386/elf.h:106:
+extern int dump_task_extended_fpu (struct task_struct *, struct user_fxsr_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct user_fxsr_struct *' should also have an identifier name
#705: FILE: include/asm-i386/elf.h:106:
+extern int dump_task_extended_fpu (struct task_struct *, struct user_fxsr_struct *);

WARNING:NEW_TYPEDEFS: do not add new typedefs
#721: FILE: include/asm-ia64/elf.h:68:
+typedef unsigned long elf_fpxregset_t;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#730: FILE: include/asm-ia64/elf.h:77:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#739: FILE: include/asm-ia64/elf.h:96:
+extern int dump_task_regs(struct task_struct *, elf_gregset_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#739: FILE: include/asm-ia64/elf.h:96:
+extern int dump_task_regs(struct task_struct *, elf_gregset_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'elf_gregset_t *' should also have an identifier name
#739: FILE: include/asm-ia64/elf.h:96:
+extern int dump_task_regs(struct task_struct *, elf_gregset_t *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#740: FILE: include/asm-ia64/elf.h:97:
+extern int dump_task_fpu (struct task_struct *, elf_fpregset_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#740: FILE: include/asm-ia64/elf.h:97:
+extern int dump_task_fpu (struct task_struct *, elf_fpregset_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#740: FILE: include/asm-ia64/elf.h:97:
+extern int dump_task_fpu (struct task_struct *, elf_fpregset_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'elf_fpregset_t *' should also have an identifier name
#740: FILE: include/asm-ia64/elf.h:97:
+extern int dump_task_fpu (struct task_struct *, elf_fpregset_t *);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#745: FILE: include/asm-ia64/elf.h:102:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#757: FILE: include/linux/elf.h:580:
+                                       /* from gdb5.1/include/elf/common.h */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#780: FILE: include/linux/elfcore.h:93:
+       ELF_CORE_COPY_REGS((*elfregs), regs)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#782: FILE: include/linux/elfcore.h:95:
+       if (sizeof(elf_gregset_t) != sizeof(struct pt_regs)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#782: FILE: include/linux/elfcore.h:95:
+       if (sizeof(elf_gregset_t) != sizeof(struct pt_regs)) {
+               printk("sizeof(elf_gregset_t) (%ld) != sizeof(struct pt_regs) (%ld)\n",

CHECK:BRACES: braces {} should be used on all arms of this statement
#782: FILE: include/linux/elfcore.h:95:
+       if (sizeof(elf_gregset_t) != sizeof(struct pt_regs)) {
[...]
+       } else
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#783: FILE: include/linux/elfcore.h:96:
+               printk("sizeof(elf_gregset_t) (%ld) != sizeof(struct pt_regs) (%ld)\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#783: FILE: include/linux/elfcore.h:96:
+               printk("sizeof(elf_gregset_t) (%ld) != sizeof(struct pt_regs) (%ld)\n",$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#783: FILE: include/linux/elfcore.h:96:
+               printk("sizeof(elf_gregset_t) (%ld) != sizeof(struct pt_regs) (%ld)\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#784: FILE: include/linux/elfcore.h:97:
+                       (long)sizeof(elf_gregset_t), (long)sizeof(struct pt_regs));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#784: FILE: include/linux/elfcore.h:97:
+               printk("sizeof(elf_gregset_t) (%ld) != sizeof(struct pt_regs) (%ld)\n",
+                       (long)sizeof(elf_gregset_t), (long)sizeof(struct pt_regs));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#784: FILE: include/linux/elfcore.h:97:
+                       (long)sizeof(elf_gregset_t), (long)sizeof(struct pt_regs));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#785: FILE: include/linux/elfcore.h:98:
+       } else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#785: FILE: include/linux/elfcore.h:98:
+       } else
+               *(struct pt_regs *)elfregs = *regs;

CHECK:BRACES: Unbalanced braces around else statement
#785: FILE: include/linux/elfcore.h:98:
+       } else

ERROR:CODE_INDENT: code indent should use tabs where possible
#786: FILE: include/linux/elfcore.h:99:
+               *(struct pt_regs *)elfregs = *regs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#786: FILE: include/linux/elfcore.h:99:
+               *(struct pt_regs *)elfregs = *regs;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#790: FILE: include/linux/elfcore.h:103:
+static inline int elf_core_copy_task_regs(struct task_struct *t, elf_gregset_t* elfregs)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#794: FILE: include/linux/elfcore.h:107:
+       return ELF_CORE_COPY_TASK_REGS(t, elfregs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#796: FILE: include/linux/elfcore.h:109:
+       return 0;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#799: FILE: include/linux/elfcore.h:112:
+extern int dump_fpu (struct pt_regs *, elf_fpregset_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#799: FILE: include/linux/elfcore.h:112:
+extern int dump_fpu (struct pt_regs *, elf_fpregset_t *);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#804: FILE: include/linux/elfcore.h:117:
+       return ELF_CORE_COPY_FPREGS(t, fpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#806: FILE: include/linux/elfcore.h:119:
+       return dump_fpu(NULL, fpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#813: FILE: include/linux/elfcore.h:126:
+       return ELF_CORE_COPY_XFPREGS(t, xfpu);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#819: FILE: include/linux/elfcore.h:132:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#831: FILE: include/linux/sched.h:137:
+ * by the multithreaded elf core dump code in binfmt_elf.c*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: space prohibited after that open parenthesis '('
#832: FILE: include/linux/sched.h:138:
+extern void tcore_suspend_threads( void );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#832: FILE: include/linux/sched.h:138:
+extern void tcore_suspend_threads( void );

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#832: FILE: include/linux/sched.h:138:
+extern void tcore_suspend_threads( void );

ERROR:SPACING: space prohibited after that open parenthesis '('
#833: FILE: include/linux/sched.h:139:
+extern void tcore_resume_threads( void );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#833: FILE: include/linux/sched.h:139:
+extern void tcore_resume_threads( void );

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#833: FILE: include/linux/sched.h:139:
+extern void tcore_resume_threads( void );

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#833: FILE: include/linux/sched.h:139:
+extern void tcore_resume_threads( void );

CHECK:LINE_SPACING: Please don't use multiple blank lines
#835: FILE: include/linux/sched.h:141:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#856: FILE: kernel/sched.c:253:
+       if( unlikely(!p->cpus_allowed) )$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 23)
#856: FILE: kernel/sched.c:253:
+       if( unlikely(!p->cpus_allowed) )
+                       return;

ERROR:SPACING: space prohibited after that open parenthesis '('
#856: FILE: kernel/sched.c:253:
+       if( unlikely(!p->cpus_allowed) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#856: FILE: kernel/sched.c:253:
+       if( unlikely(!p->cpus_allowed) )

ERROR:SPACING: space required before the open parenthesis '('
#856: FILE: kernel/sched.c:253:
+       if( unlikely(!p->cpus_allowed) )

ERROR:CODE_INDENT: code indent should use tabs where possible
#857: FILE: kernel/sched.c:254:
+                       return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#857: FILE: kernel/sched.c:254:
+                       return;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#867: FILE: kernel/sched.c:332:
+               if (p->cpus_allowed && (p->prio < rq->curr->prio) )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#867: FILE: kernel/sched.c:332:
+               if (p->cpus_allowed && (p->prio < rq->curr->prio) )$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#867: FILE: kernel/sched.c:332:
+               if (p->cpus_allowed && (p->prio < rq->curr->prio) )
                        resched_task(rq->curr);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#867: FILE: kernel/sched.c:332:
+               if (p->cpus_allowed && (p->prio < rq->curr->prio) )

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->prio < rq->curr->prio'
#867: FILE: kernel/sched.c:332:
+               if (p->cpus_allowed && (p->prio < rq->curr->prio) )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#882: FILE: kernel/sched.c:996:
+       int i, cpu;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#883: FILE: kernel/sched.c:997:
+       struct task_struct *p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#885: FILE: kernel/sched.c:999:
+       for(i=0; i< smp_num_cpus; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#885: FILE: kernel/sched.c:999:
+       for(i=0; i< smp_num_cpus; i++) {
+               cpu = cpu_logical_map(i);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#885: FILE: kernel/sched.c:999:
+       for(i=0; i< smp_num_cpus; i++) {
             ^

ERROR:SPACING: spaces required around that '<' (ctx:VxW)
#885: FILE: kernel/sched.c:999:
+       for(i=0; i< smp_num_cpus; i++) {
                  ^

ERROR:SPACING: space required before the open parenthesis '('
#885: FILE: kernel/sched.c:999:
+       for(i=0; i< smp_num_cpus; i++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#886: FILE: kernel/sched.c:1000:
+               cpu = cpu_logical_map(i);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#886: FILE: kernel/sched.c:1000:
+               cpu = cpu_logical_map(i);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#887: FILE: kernel/sched.c:1001:
+               p = cpu_curr(cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#887: FILE: kernel/sched.c:1001:
+               p = cpu_curr(cpu);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#888: FILE: kernel/sched.c:1002:
+               if (p->thread_info->cpu!= smp_processor_id()) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#888: FILE: kernel/sched.c:1002:
+               if (p->thread_info->cpu!= smp_processor_id()) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#888: FILE: kernel/sched.c:1002:
+               if (p->thread_info->cpu!= smp_processor_id()) {
+                       set_tsk_need_resched(p);

ERROR:SPACING: spaces required around that '!=' (ctx:VxW)
#888: FILE: kernel/sched.c:1002:
+               if (p->thread_info->cpu!= smp_processor_id()) {
                                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#889: FILE: kernel/sched.c:1003:
+                       set_tsk_need_resched(p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#889: FILE: kernel/sched.c:1003:
+                       set_tsk_need_resched(p);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#890: FILE: kernel/sched.c:1004:
+                       smp_send_reschedule(p->thread_info->cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#890: FILE: kernel/sched.c:1004:
+                       smp_send_reschedule(p->thread_info->cpu);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#891: FILE: kernel/sched.c:1005:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#891: FILE: kernel/sched.c:1005:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#892: FILE: kernel/sched.c:1006:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#894: FILE: kernel/sched.c:1008:
+       return;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#897: FILE: kernel/sched.c:1011:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#901: FILE: kernel/sched.c:1015:
+       unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#902: FILE: kernel/sched.c:1016:
+       runqueue_t *phantomQ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#903: FILE: kernel/sched.c:1017:
+       task_t *threads[NR_CPUS], *p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#904: FILE: kernel/sched.c:1018:
+       int i, OnCPUCount = 0;$

CHECK:CAMELCASE: Avoid CamelCase: <OnCPUCount>
#904: FILE: kernel/sched.c:1018:
+       int i, OnCPUCount = 0;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#911: FILE: kernel/sched.c:1025:
+       down_write(&current->mm->mmap_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#915: FILE: kernel/sched.c:1029:
+       local_irq_save(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#917: FILE: kernel/sched.c:1031:
+       for(i=0; i< smp_num_cpus; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#917: FILE: kernel/sched.c:1031:
+       for(i=0; i< smp_num_cpus; i++) {
+               spin_lock(&cpu_rq(i)->lock);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#917: FILE: kernel/sched.c:1031:
+       for(i=0; i< smp_num_cpus; i++) {
             ^

ERROR:SPACING: spaces required around that '<' (ctx:VxW)
#917: FILE: kernel/sched.c:1031:
+       for(i=0; i< smp_num_cpus; i++) {
                  ^

ERROR:SPACING: space required before the open parenthesis '('
#917: FILE: kernel/sched.c:1031:
+       for(i=0; i< smp_num_cpus; i++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#917: FILE: kernel/sched.c:1031:
+       for(i=0; i< smp_num_cpus; i++) {
+               spin_lock(&cpu_rq(i)->lock);
+       }

ERROR:CODE_INDENT: code indent should use tabs where possible
#918: FILE: kernel/sched.c:1032:
+               spin_lock(&cpu_rq(i)->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#918: FILE: kernel/sched.c:1032:
+               spin_lock(&cpu_rq(i)->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#919: FILE: kernel/sched.c:1033:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#921: FILE: kernel/sched.c:1035:
+       current->cpus_allowed = 1UL << current->thread_info->cpu;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#924: FILE: kernel/sched.c:1038:
+       phantomQ = cpu_rq(PHANTOM_CPU);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#925: FILE: kernel/sched.c:1039:
+       spin_lock(&phantomQ->lock);$

CHECK:CAMELCASE: Avoid CamelCase: <phantomQ>
#925: FILE: kernel/sched.c:1039:
+       spin_lock(&phantomQ->lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#927: FILE: kernel/sched.c:1041:
+       reschedule_other_cpus();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#930: FILE: kernel/sched.c:1044:
+       read_lock(&tasklist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#932: FILE: kernel/sched.c:1046:
+       for_each_task(p) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#932: FILE: kernel/sched.c:1046:
+       for_each_task(p) {
+               if (current->mm == p->mm && current != p) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#933: FILE: kernel/sched.c:1047:
+               if (current->mm == p->mm && current != p) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#933: FILE: kernel/sched.c:1047:
+               if (current->mm == p->mm && current != p) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#933: FILE: kernel/sched.c:1047:
+               if (current->mm == p->mm && current != p) {
+                       if( p == task_rq(p)->curr ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#934: FILE: kernel/sched.c:1048:
+                       if( p == task_rq(p)->curr ) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#934: FILE: kernel/sched.c:1048:
+                       if( p == task_rq(p)->curr ) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#934: FILE: kernel/sched.c:1048:
+                       if( p == task_rq(p)->curr ) {
[...]
+                               threads[OnCPUCount] = p;

ERROR:SPACING: space prohibited after that open parenthesis '('
#934: FILE: kernel/sched.c:1048:
+                       if( p == task_rq(p)->curr ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#934: FILE: kernel/sched.c:1048:
+                       if( p == task_rq(p)->curr ) {

ERROR:SPACING: space required before the open parenthesis '('
#934: FILE: kernel/sched.c:1048:
+                       if( p == task_rq(p)->curr ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#935: FILE: kernel/sched.c:1049:
+                               //then remember it for later us of set_cpus_allowed$

ERROR:CODE_INDENT: code indent should use tabs where possible
#936: FILE: kernel/sched.c:1050:
+                               threads[OnCPUCount] = p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#936: FILE: kernel/sched.c:1050:
+                               threads[OnCPUCount] = p;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#937: FILE: kernel/sched.c:1051:
+                               p->cpus_allowed = 0;//prevent load balance from moving these guys.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#937: FILE: kernel/sched.c:1051:
+                               p->cpus_allowed = 0;//prevent load balance from moving these guys.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#938: FILE: kernel/sched.c:1052:
+                               OnCPUCount ++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#938: FILE: kernel/sched.c:1052:
+                               OnCPUCount ++;$

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#938: FILE: kernel/sched.c:1052:
+                               OnCPUCount ++;
                                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#939: FILE: kernel/sched.c:1053:
+                       } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#939: FILE: kernel/sched.c:1053:
+                       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#939: FILE: kernel/sched.c:1053:
+                       } else {
[...]
+                               if (p->array) {

WARNING:TYPO_SPELLING: 'manualy' may be misspelled - perhaps 'manually'?
#940: FILE: kernel/sched.c:1054:
+                               // we manualy move the process to the phantom run queue.
                                      ^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#940: FILE: kernel/sched.c:1054:
+                               // we manualy move the process to the phantom run queue.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#942: FILE: kernel/sched.c:1056:
+                               if (p->array) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#942: FILE: kernel/sched.c:1056:
+                               if (p->array) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#942: FILE: kernel/sched.c:1056:
+                               if (p->array) {
+                                       deactivate_task(p, task_rq(p));

ERROR:CODE_INDENT: code indent should use tabs where possible
#943: FILE: kernel/sched.c:1057:
+                                       deactivate_task(p, task_rq(p));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#943: FILE: kernel/sched.c:1057:
+                                       deactivate_task(p, task_rq(p));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#944: FILE: kernel/sched.c:1058:
+                                       activate_task(p, phantomQ);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#944: FILE: kernel/sched.c:1058:
+                                       activate_task(p, phantomQ);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#945: FILE: kernel/sched.c:1059:
+                               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#945: FILE: kernel/sched.c:1059:
+                               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#946: FILE: kernel/sched.c:1060:
+                               p->thread_info->cpu = PHANTOM_CPU;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#946: FILE: kernel/sched.c:1060:
+                               p->thread_info->cpu = PHANTOM_CPU;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#947: FILE: kernel/sched.c:1061:
+                               p->cpus_allowed = 0;//prevent load balance from moving these guys.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#947: FILE: kernel/sched.c:1061:
+                               p->cpus_allowed = 0;//prevent load balance from moving these guys.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#948: FILE: kernel/sched.c:1062:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#948: FILE: kernel/sched.c:1062:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#949: FILE: kernel/sched.c:1063:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#949: FILE: kernel/sched.c:1063:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#950: FILE: kernel/sched.c:1064:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#951: FILE: kernel/sched.c:1065:
+       read_unlock(&tasklist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#953: FILE: kernel/sched.c:1067:
+       spin_unlock(&phantomQ->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#954: FILE: kernel/sched.c:1068:
+       for(i=smp_num_cpus-1; 0<= i; i--) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#954: FILE: kernel/sched.c:1068:
+       for(i=smp_num_cpus-1; 0<= i; i--) {
+               spin_unlock(&cpu_rq(i)->lock);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#954: FILE: kernel/sched.c:1068:
+       for(i=smp_num_cpus-1; 0<= i; i--) {
             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#954: FILE: kernel/sched.c:1068:
+       for(i=smp_num_cpus-1; 0<= i; i--) {
                          ^

ERROR:SPACING: spaces required around that '<=' (ctx:VxW)
#954: FILE: kernel/sched.c:1068:
+       for(i=smp_num_cpus-1; 0<= i; i--) {
                               ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#954: FILE: kernel/sched.c:1068:
+       for(i=smp_num_cpus-1; 0<= i; i--) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:SPACING: space required before the open parenthesis '('
#954: FILE: kernel/sched.c:1068:
+       for(i=smp_num_cpus-1; 0<= i; i--) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#954: FILE: kernel/sched.c:1068:
+       for(i=smp_num_cpus-1; 0<= i; i--) {
+               spin_unlock(&cpu_rq(i)->lock);
+       }

ERROR:CODE_INDENT: code indent should use tabs where possible
#955: FILE: kernel/sched.c:1069:
+               spin_unlock(&cpu_rq(i)->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#955: FILE: kernel/sched.c:1069:
+               spin_unlock(&cpu_rq(i)->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#956: FILE: kernel/sched.c:1070:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#958: FILE: kernel/sched.c:1072:
+       local_irq_restore(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#960: FILE: kernel/sched.c:1074:
+       for( i = 0; i<OnCPUCount; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#960: FILE: kernel/sched.c:1074:
+       for( i = 0; i<OnCPUCount; i++) {
+               set_cpus_allowed(threads[i], 0);

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#960: FILE: kernel/sched.c:1074:
+       for( i = 0; i<OnCPUCount; i++) {
                     ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#960: FILE: kernel/sched.c:1074:
+       for( i = 0; i<OnCPUCount; i++) {

ERROR:SPACING: space required before the open parenthesis '('
#960: FILE: kernel/sched.c:1074:
+       for( i = 0; i<OnCPUCount; i++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#960: FILE: kernel/sched.c:1074:
+       for( i = 0; i<OnCPUCount; i++) {
+               set_cpus_allowed(threads[i], 0);
+       }

ERROR:CODE_INDENT: code indent should use tabs where possible
#961: FILE: kernel/sched.c:1075:
+               set_cpus_allowed(threads[i], 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#961: FILE: kernel/sched.c:1075:
+               set_cpus_allowed(threads[i], 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#962: FILE: kernel/sched.c:1076:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#964: FILE: kernel/sched.c:1078:
+       up_write(&current->mm->mmap_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#969: FILE: kernel/sched.c:1083:
+       unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#970: FILE: kernel/sched.c:1084:
+       runqueue_t *phantomQ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#971: FILE: kernel/sched.c:1085:
+       task_t *p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#972: FILE: kernel/sched.c:1086:
+       int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#974: FILE: kernel/sched.c:1088:
+       local_irq_save(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#975: FILE: kernel/sched.c:1089:
+       phantomQ = cpu_rq(PHANTOM_CPU);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#977: FILE: kernel/sched.c:1091:
+       spin_lock(&task_rq(current)->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#978: FILE: kernel/sched.c:1092:
+       spin_lock(&phantomQ->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#980: FILE: kernel/sched.c:1094:
+       read_lock(&tasklist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#981: FILE: kernel/sched.c:1095:
+       for_each_task(p) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#981: FILE: kernel/sched.c:1095:
+       for_each_task(p) {
+               if (current->mm == p->mm && current != p) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#982: FILE: kernel/sched.c:1096:
+               if (current->mm == p->mm && current != p) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#982: FILE: kernel/sched.c:1096:
+               if (current->mm == p->mm && current != p) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#982: FILE: kernel/sched.c:1096:
+               if (current->mm == p->mm && current != p) {
+                       p->cpus_allowed = 1UL << current->thread_info->cpu;

ERROR:CODE_INDENT: code indent should use tabs where possible
#983: FILE: kernel/sched.c:1097:
+                       p->cpus_allowed = 1UL << current->thread_info->cpu;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#983: FILE: kernel/sched.c:1097:
+                       p->cpus_allowed = 1UL << current->thread_info->cpu;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#984: FILE: kernel/sched.c:1098:
+                       if (p->array) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#984: FILE: kernel/sched.c:1098:
+                       if (p->array) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#984: FILE: kernel/sched.c:1098:
+                       if (p->array) {
+                               deactivate_task(p,phantomQ);

ERROR:CODE_INDENT: code indent should use tabs where possible
#985: FILE: kernel/sched.c:1099:
+                               deactivate_task(p,phantomQ);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#985: FILE: kernel/sched.c:1099:
+                               deactivate_task(p,phantomQ);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#985: FILE: kernel/sched.c:1099:
+                               deactivate_task(p,phantomQ);
                                                 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#986: FILE: kernel/sched.c:1100:
+                               activate_task(p, task_rq(current));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#986: FILE: kernel/sched.c:1100:
+                               activate_task(p, task_rq(current));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#987: FILE: kernel/sched.c:1101:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#987: FILE: kernel/sched.c:1101:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#988: FILE: kernel/sched.c:1102:
+                       p->thread_info->cpu = current->thread_info->cpu;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#988: FILE: kernel/sched.c:1102:
+                       p->thread_info->cpu = current->thread_info->cpu;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#989: FILE: kernel/sched.c:1103:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#989: FILE: kernel/sched.c:1103:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#990: FILE: kernel/sched.c:1104:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#992: FILE: kernel/sched.c:1106:
+       read_unlock(&tasklist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#994: FILE: kernel/sched.c:1108:
+       spin_unlock(&phantomQ->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#995: FILE: kernel/sched.c:1109:
+       spin_unlock(&task_rq(current)->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#997: FILE: kernel/sched.c:1111:
+       local_irq_restore(flags);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1000: FILE: kernel/sched.c:1114:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1009: FILE: kernel/sched.c:1702:
+       prio_array_t *array;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1015: FILE: kernel/sched.c:1705:
+       for (i = 0; i < NR_CPUS; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1015: FILE: kernel/sched.c:1705:
+       for (i = 0; i < NR_CPUS; i++) {
+               rq = cpu_rq(i);

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#1015: FILE: kernel/sched.c:1705:
+       for (i = 0; i < NR_CPUS; i++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1016: FILE: kernel/sched.c:1706:
+               rq = cpu_rq(i);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1016: FILE: kernel/sched.c:1706:
+               rq = cpu_rq(i);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1025: FILE: kernel/sched.c:1724:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1026: FILE: kernel/sched.c:1725:
+       i = PHANTOM_CPU;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1027: FILE: kernel/sched.c:1726:
+       rq = cpu_rq(i);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1028: FILE: kernel/sched.c:1727:
+       rq->active = rq->arrays;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1029: FILE: kernel/sched.c:1728:
+       rq->expired = rq->arrays + 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1030: FILE: kernel/sched.c:1729:
+       rq->curr = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1031: FILE: kernel/sched.c:1730:
+       spin_lock_init(&rq->lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1032: FILE: kernel/sched.c:1731:
+       spin_lock_init(&rq->frozen);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1033: FILE: kernel/sched.c:1732:
+       INIT_LIST_HEAD(&rq->migration_queue);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1035: FILE: kernel/sched.c:1734:
+       for (j = 0; j < 2; j++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1035: FILE: kernel/sched.c:1734:
+       for (j = 0; j < 2; j++) {
+               array = rq->arrays + j;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1036: FILE: kernel/sched.c:1735:
+               array = rq->arrays + j;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1036: FILE: kernel/sched.c:1735:
+               array = rq->arrays + j;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1037: FILE: kernel/sched.c:1736:
+               for (k = 0; k < MAX_PRIO; k++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1037: FILE: kernel/sched.c:1736:
+               for (k = 0; k < MAX_PRIO; k++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1037: FILE: kernel/sched.c:1736:
+               for (k = 0; k < MAX_PRIO; k++) {
+                       INIT_LIST_HEAD(array->queue + k);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1038: FILE: kernel/sched.c:1737:
+                       INIT_LIST_HEAD(array->queue + k);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1038: FILE: kernel/sched.c:1737:
+                       INIT_LIST_HEAD(array->queue + k);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1039: FILE: kernel/sched.c:1738:
+                       __clear_bit(k, array->bitmap);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1039: FILE: kernel/sched.c:1738:
+                       __clear_bit(k, array->bitmap);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1040: FILE: kernel/sched.c:1739:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1040: FILE: kernel/sched.c:1739:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1041: FILE: kernel/sched.c:1740:
+               // delimiter for bitsearch$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1042: FILE: kernel/sched.c:1741:
+               __set_bit(MAX_PRIO, array->bitmap);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1042: FILE: kernel/sched.c:1741:
+               __set_bit(MAX_PRIO, array->bitmap);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1043: FILE: kernel/sched.c:1742:
+       }$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1045: FILE: kernel/sched.c:1744:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1056: FILE: kernel/sched.c:1804:
+       if(new_mask){ // can be O for TCore process suspends$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1056: FILE: kernel/sched.c:1804:
+       if(new_mask){ // can be O for TCore process suspends
+               new_mask &= cpu_online_map;

ERROR:SPACING: space required before the open brace '{'
#1056: FILE: kernel/sched.c:1804:
+       if(new_mask){ // can be O for TCore process suspends

ERROR:SPACING: space required before the open parenthesis '('
#1056: FILE: kernel/sched.c:1804:
+       if(new_mask){ // can be O for TCore process suspends

ERROR:CODE_INDENT: code indent should use tabs where possible
#1057: FILE: kernel/sched.c:1805:
+               new_mask &= cpu_online_map;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1057: FILE: kernel/sched.c:1805:
+               new_mask &= cpu_online_map;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1058: FILE: kernel/sched.c:1806:
+               if (!new_mask)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1058: FILE: kernel/sched.c:1806:
+               if (!new_mask)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1058: FILE: kernel/sched.c:1806:
+               if (!new_mask)
+                       BUG();

ERROR:CODE_INDENT: code indent should use tabs where possible
#1059: FILE: kernel/sched.c:1807:
+                       BUG();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1059: FILE: kernel/sched.c:1807:
+                       BUG();$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1059: FILE: kernel/sched.c:1807:
+                       BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1060: FILE: kernel/sched.c:1808:
+       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1070: FILE: kernel/sched.c:1882:
+               if( p->cpus_allowed)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1070: FILE: kernel/sched.c:1882:
+               if( p->cpus_allowed)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1070: FILE: kernel/sched.c:1882:
+               if( p->cpus_allowed)
+                       cpu_dest = __ffs(p->cpus_allowed);

ERROR:SPACING: space prohibited after that open parenthesis '('
#1070: FILE: kernel/sched.c:1882:
+               if( p->cpus_allowed)

ERROR:SPACING: space required before the open parenthesis '('
#1070: FILE: kernel/sched.c:1882:
+               if( p->cpus_allowed)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1071: FILE: kernel/sched.c:1883:
+                       cpu_dest = __ffs(p->cpus_allowed);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1071: FILE: kernel/sched.c:1883:
+                       cpu_dest = __ffs(p->cpus_allowed);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1072: FILE: kernel/sched.c:1884:
+               else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1072: FILE: kernel/sched.c:1884:
+               else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#1072: FILE: kernel/sched.c:1884:
+               else
+                       cpu_dest = PHANTOM_CPU;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1073: FILE: kernel/sched.c:1885:
+                       cpu_dest = PHANTOM_CPU;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1073: FILE: kernel/sched.c:1885:
+                       cpu_dest = PHANTOM_CPU;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000451560.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 184 errors, 422 warnings, 42 checks, 948 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000451560.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
