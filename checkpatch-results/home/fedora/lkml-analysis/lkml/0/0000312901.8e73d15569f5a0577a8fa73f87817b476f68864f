CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#30: 
> > Is NAPI enabled for this driver?  The interrupt behavior seems normal
                                    ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#35: 
> I 'went back' to 2.6.1-rc1 and that seems fine now.  Any patches you want
                                                     ^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#48: 
--- net-drivers-2.5-exp/drivers/net/e100.c.orig	2004-01-09 16:41:42.000000000 -0800

ERROR:SPACING: space required before the open parenthesis '('
#116: FILE: drivers/net/e100.c:1356:
+	if(!nic->ru_running && nic->rx_to_clean->skb) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#132: FILE: drivers/net/e100.c:1367:
+	if(!(rx->skb = dev_alloc_skb(RFD_BUF_LEN + rx_offset)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#132: FILE: drivers/net/e100.c:1367:
+	if(!(rx->skb = dev_alloc_skb(RFD_BUF_LEN + rx_offset)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#153: FILE: drivers/net/e100.c:1375:
+	rx->dma_addr = pci_map_single(nic->pdev, rx->skb->data,
+		RFD_BUF_LEN, PCI_DMA_FROMDEVICE);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#166: FILE: drivers/net/e100.c:1378:
+	 * this one, and clearing EL bit of previous.  */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: space required before the open parenthesis '('
#167: FILE: drivers/net/e100.c:1379:
+	if(rx->prev->skb) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#169: FILE: drivers/net/e100.c:1381:
+		struct rfd *prev_rfd = (struct rfd *)rx->prev->skb->data;
+		put_unaligned(cpu_to_le32(rx->dma_addr),

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#170: FILE: drivers/net/e100.c:1382:
+		put_unaligned(cpu_to_le32(rx->dma_addr),
+			(u32 *)&prev_rfd->link);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#173: FILE: drivers/net/e100.c:1385:
+		pci_dma_sync_single(nic->pdev, rx->prev->dma_addr,
+			sizeof(struct rfd), PCI_DMA_TODEVICE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#181: FILE: drivers/net/e100.c:1392:
+static inline int e100_rx_indicate(struct nic *nic, struct rx *rx,
 	unsigned int *work_done, unsigned int work_to_do)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#194: FILE: drivers/net/e100.c:1403:
+	pci_dma_sync_single(nic->pdev, rx->dma_addr,
 		sizeof(struct rfd), PCI_DMA_FROMDEVICE);

ERROR:SPACING: space required before the open parenthesis '('
#203: FILE: drivers/net/e100.c:1414:
+	if(unlikely(actual_size > RFD_BUF_LEN - sizeof(struct rfd)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#209: FILE: drivers/net/e100.c:1419:
+	pci_dma_sync_single(nic->pdev, rx->dma_addr,
 		sizeof(struct rfd) + actual_size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#214: FILE: drivers/net/e100.c:1422:
+	pci_unmap_single(nic->pdev, rx->dma_addr,
+		RFD_BUF_LEN, PCI_DMA_FROMDEVICE);

ERROR:SPACING: space required before the open parenthesis '('
#244: FILE: drivers/net/e100.c:1457:
+	for(rx = nic->rx_to_clean; rx->skb; rx = nic->rx_to_clean = rx->next) {

ERROR:SPACING: space required before the open parenthesis '('
#245: FILE: drivers/net/e100.c:1458:
+		if(e100_rx_indicate(nic, rx, work_done, work_to_do))

ERROR:SPACING: space required before the open parenthesis '('
#255: FILE: drivers/net/e100.c:1463:
+	for(rx = nic->rx_to_use; !rx->skb; rx = nic->rx_to_use = rx->next) {

ERROR:SPACING: space required before the open parenthesis '('
#256: FILE: drivers/net/e100.c:1464:
+		if(unlikely(e100_rx_alloc_skb(nic, rx)))

ERROR:SPACING: space required before the open parenthesis '('
#282: FILE: drivers/net/e100.c:1476:
+	if(nic->rxs) {

ERROR:SPACING: space required before the open parenthesis '('
#283: FILE: drivers/net/e100.c:1477:
+		for(rx = nic->rxs, i = 0; i < count; rx++, i++) {

ERROR:SPACING: space required before the open parenthesis '('
#284: FILE: drivers/net/e100.c:1478:
+			if(rx->skb) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#286: FILE: drivers/net/e100.c:1480:
+				pci_unmap_single(nic->pdev, rx->dma_addr,
+					RFD_BUF_LEN, PCI_DMA_FROMDEVICE);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#296: FILE: drivers/net/e100.c:1488:
+	nic->rx_to_use = nic->rx_to_clean = NULL;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#309: FILE: drivers/net/e100.c:1497:
+	nic->rx_to_use = nic->rx_to_clean = NULL;

ERROR:SPACING: space required before the open parenthesis '('
#311: FILE: drivers/net/e100.c:1499:
+	if(!(nic->rxs = kmalloc(sizeof(struct rx) * count, GFP_ATOMIC)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#311: FILE: drivers/net/e100.c:1499:
+	if(!(nic->rxs = kmalloc(sizeof(struct rx) * count, GFP_ATOMIC)))

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*nic->rxs)...) over kmalloc(sizeof(struct rx)...)
#311: FILE: drivers/net/e100.c:1499:
+	if(!(nic->rxs = kmalloc(sizeof(struct rx) * count, GFP_ATOMIC)))

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:SPACING: space required before the open parenthesis '('
#317: FILE: drivers/net/e100.c:1503:
+	for(rx = nic->rxs, i = 0; i < count; rx++, i++) {

ERROR:SPACING: space required before the open parenthesis '('
#320: FILE: drivers/net/e100.c:1506:
+		if(e100_rx_alloc_skb(nic, rx)) {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#329: FILE: drivers/net/e100.c:1512:
+	nic->rx_to_use = nic->rx_to_clean = nic->rxs;

ERROR:SPACING: space required before the open parenthesis '('
#340: FILE: drivers/net/e100.c:1525:
+	if(stat_ack == stat_ack_not_ours ||	/* Not our interrupt */

ERROR:SPACING: space required before the open parenthesis '('
#350: FILE: drivers/net/e100.c:1533:
+	if(stat_ack & stat_ack_rnr)

ERROR:SPACING: space required before the open parenthesis '('
#378: FILE: drivers/net/e100.c:1712:
+	if(memcmp(nic->rx_to_clean->skb->data + sizeof(struct rfd),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#379: FILE: drivers/net/e100.c:1713:
+	if(memcmp(nic->rx_to_clean->skb->data + sizeof(struct rfd),
+	   skb->data, ETH_DATA_LEN))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000312901.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 19 errors, 3 warnings, 15 checks, 320 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000312901.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
