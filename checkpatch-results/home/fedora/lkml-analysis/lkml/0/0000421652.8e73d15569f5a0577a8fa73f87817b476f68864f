WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
This patch addresses a few minor issues for the Linux Plug and Play Rewrite.  It

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#45: 
--- a/drivers/pnp/Config.in	Sat Oct 19 04:01:07 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#231: FILE: drivers/pnp/isapnp/compat.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#238: FILE: drivers/pnp/isapnp/compat.c:8:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: drivers/pnp/isapnp/compat.c:8:
+ $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#249: FILE: drivers/pnp/isapnp/compat.c:19:
+	sprintf(buf, "%c%c%c%x%x%x%x",
+			'A' + ((vendor >> 2) & 0x3f) - 1,

WARNING:RETURN_VOID: void function return statements are not generally useful
#257: FILE: drivers/pnp/isapnp/compat.c:27:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#260: FILE: drivers/pnp/isapnp/compat.c:30:
+struct pnp_card *pnp_find_card(unsigned short vendor,
+				 unsigned short device,

WARNING:LINE_SPACING: Missing a blank line after declarations
#266: FILE: drivers/pnp/isapnp/compat.c:36:
+	struct list_head *list;
+	pnp_convert_id(id, vendor, device);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#274: FILE: drivers/pnp/isapnp/compat.c:44:
+		struct pnp_card *card = to_pnp_card(list);
+		if (compare_pnp_id(&card->ids,id) || (memcmp(id,any,7)==0))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#274: FILE: drivers/pnp/isapnp/compat.c:44:
+		if (compare_pnp_id(&card->ids,id) || (memcmp(id,any,7)==0))
 		                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#274: FILE: drivers/pnp/isapnp/compat.c:44:
+		if (compare_pnp_id(&card->ids,id) || (memcmp(id,any,7)==0))
 		                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#274: FILE: drivers/pnp/isapnp/compat.c:44:
+		if (compare_pnp_id(&card->ids,id) || (memcmp(id,any,7)==0))
 		                                                   ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#274: FILE: drivers/pnp/isapnp/compat.c:44:
+		if (compare_pnp_id(&card->ids,id) || (memcmp(id,any,7)==0))
 		                                                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#282: FILE: drivers/pnp/isapnp/compat.c:52:
+struct pnp_dev *pnp_find_dev(struct pnp_card *card,
+				unsigned short vendor,

WARNING:LINE_SPACING: Missing a blank line after declarations
#288: FILE: drivers/pnp/isapnp/compat.c:58:
+	char any[7];
+	pnp_convert_id(id, vendor, function);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!card"
#290: FILE: drivers/pnp/isapnp/compat.c:60:
+	if (card == NULL) {	/* look for a logical device from all cards */

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LINE_SPACING: Missing a blank line after declarations
#299: FILE: drivers/pnp/isapnp/compat.c:69:
+			struct pnp_dev *dev = global_to_pnp_dev(list);
+			if (compare_pnp_id(&dev->ids,id) || (memcmp(id,any,7)==0))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#299: FILE: drivers/pnp/isapnp/compat.c:69:
+			if (compare_pnp_id(&dev->ids,id) || (memcmp(id,any,7)==0))
 			                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#299: FILE: drivers/pnp/isapnp/compat.c:69:
+			if (compare_pnp_id(&dev->ids,id) || (memcmp(id,any,7)==0))
 			                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#299: FILE: drivers/pnp/isapnp/compat.c:69:
+			if (compare_pnp_id(&dev->ids,id) || (memcmp(id,any,7)==0))
 			                                                  ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#299: FILE: drivers/pnp/isapnp/compat.c:69:
+			if (compare_pnp_id(&dev->ids,id) || (memcmp(id,any,7)==0))
 			                                                     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#314: FILE: drivers/pnp/isapnp/compat.c:84:
+			struct pnp_dev *dev = card_to_pnp_dev(list);
+			if (compare_pnp_id(&dev->ids,id))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#314: FILE: drivers/pnp/isapnp/compat.c:84:
+			if (compare_pnp_id(&dev->ids,id))
 			                            ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#322: FILE: drivers/pnp/isapnp/compat.c:92:
+EXPORT_SYMBOL(pnp_find_card);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#323: FILE: drivers/pnp/isapnp/compat.c:93:
+EXPORT_SYMBOL(pnp_find_dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#331: FILE: include/linux/pnp.h:230:
+int compare_pnp_id(struct list_head * id_list, const char * id);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#331: FILE: include/linux/pnp.h:230:
+int compare_pnp_id(struct list_head * id_list, const char * id);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#359: FILE: include/linux/pnp.h:254:
+static inline int compare_pnp_id(struct list_head * id_list, char * id) { return -ENODEV; }

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#359: FILE: include/linux/pnp.h:254:
+static inline int compare_pnp_id(struct list_head * id_list, char * id) { return -ENODEV; }

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#369: FILE: include/linux/pnp.h:264:
+struct pnp_card *pnp_find_card(unsigned short vendor,
+				 unsigned short device,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#372: FILE: include/linux/pnp.h:267:
+struct pnp_dev *pnp_find_dev(struct pnp_card *card,
+				unsigned short vendor,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000421652.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 11 warnings, 6 checks, 216 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000421652.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
