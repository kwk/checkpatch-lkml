WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#57: FILE: drivers/char/eqnx/sst_poll.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#69: FILE: drivers/char/eqnx/sst_poll.c:13:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#70: FILE: drivers/char/eqnx/sst_poll.c:14:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#76: FILE: drivers/char/eqnx/sst_poll.c:19:
boards

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#89: FILE: drivers/char/eqnx/sst_poll.c:32:
+ * sst_poll and support routines.  These routines run off the kernel $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#121: FILE: drivers/char/eqnx/sst_poll.c:62:
+/**********************************************************************
+/* module globals and defines

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#123: FILE: drivers/char/eqnx/sst_poll.c:63:
+/* module globals and defines
+/**********************************************************************

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#125: FILE: drivers/char/eqnx/sst_poll.c:64:
+/**********************************************************************
+

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#127: FILE: drivers/char/eqnx/sst_poll.c:66:
+static u32 poll_cnt = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#136: FILE: drivers/char/eqnx/sst_poll.c:74:
+int eqnx_quiet_mode = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#140: FILE: drivers/char/eqnx/sst_poll.c:77:
+/**********************************************************************
+/* module function declarations

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#142: FILE: drivers/char/eqnx/sst_poll.c:78:
+/* module function declarations
+/**********************************************************************

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#144: FILE: drivers/char/eqnx/sst_poll.c:79:
+/**********************************************************************
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#156: FILE: drivers/char/eqnx/sst_poll.c:90:
+/**********************************************************************
+/* external variable and routines

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#158: FILE: drivers/char/eqnx/sst_poll.c:91:
+/* external variable and routines
+/**********************************************************************

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#160: FILE: drivers/char/eqnx/sst_poll.c:92:
+/**********************************************************************
+

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#183: FILE: drivers/char/eqnx/sst_poll.c:115:
+static void inline sstpoll_SSP64(struct mpdev *mpd, struct mpchan *mpc,

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#186: FILE: drivers/char/eqnx/sst_poll.c:118:
+	volatile union global_regs_u *icpg;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#187: FILE: drivers/char/eqnx/sst_poll.c:119:
+	volatile struct icp_out_struct *icpo;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#188: FILE: drivers/char/eqnx/sst_poll.c:120:
+	volatile struct icp_in_struct *icpi;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#189: FILE: drivers/char/eqnx/sst_poll.c:121:
+	volatile struct cin_bnk_struct *icpb;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#190: FILE: drivers/char/eqnx/sst_poll.c:122:
+	volatile struct cout_que_struct *icpq;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#201: FILE: drivers/char/eqnx/sst_poll.c:133:
+	icpg = (volatile union global_regs_u *)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#228: FILE: drivers/char/eqnx/sst_poll.c:159:
+			icp->icp_rng_svcreq = mega_rng_delta(icp,
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#229: FILE: drivers/char/eqnx/sst_poll.c:159:
+			icp->icp_rng_svcreq = mega_rng_delta(icp,
mpd->mpd_nchan);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#257: FILE: drivers/char/eqnx/sst_poll.c:186:
+			icp->icp_rng_svcreq = mega_rng_delta(icp,
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#258: FILE: drivers/char/eqnx/sst_poll.c:186:
+			icp->icp_rng_svcreq = mega_rng_delta(icp,
mpd->mpd_nchan);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#259: FILE: drivers/char/eqnx/sst_poll.c:187:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#291: FILE: drivers/char/eqnx/sst_poll.c:218:
+	if (g_attn & GATTN_RX) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#292: FILE: drivers/char/eqnx/sst_poll.c:219:
+		rbits0 = SSTRD32(*(u32 *) & icpg->ssp.gicp_rcv_attn[0]);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#292: FILE: drivers/char/eqnx/sst_poll.c:219:
+		rbits0 = SSTRD32(*(u32 *) & icpg->ssp.gicp_rcv_attn[0]);
 		                          ^

CHECK:SPACING: No space is necessary after a cast
#293: FILE: drivers/char/eqnx/sst_poll.c:220:
+		rbits1 = SSTRD32(*(u32 *) & icpg->ssp.gicp_rcv_attn[4]);

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#293: FILE: drivers/char/eqnx/sst_poll.c:220:
+		rbits1 = SSTRD32(*(u32 *) & icpg->ssp.gicp_rcv_attn[4]);
 		                          ^

CHECK:BRACES: Unbalanced braces around else statement
#294: FILE: drivers/char/eqnx/sst_poll.c:221:
+	} else

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#295: FILE: drivers/char/eqnx/sst_poll.c:222:
+		rbits0 = rbits1 = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:BRACES: braces {} should be used on all arms of this statement
#298: FILE: drivers/char/eqnx/sst_poll.c:225:
+	if (g_attn & GATTN_TX) {
[...]
+	} else
[...]

CHECK:SPACING: No space is necessary after a cast
#299: FILE: drivers/char/eqnx/sst_poll.c:226:
+		xbits0 = SSTRD32(*(u32 *) &

CHECK:SPACING: No space is necessary after a cast
#301: FILE: drivers/char/eqnx/sst_poll.c:227:
+		xbits1 = SSTRD32(*(u32 *) &

CHECK:BRACES: Unbalanced braces around else statement
#303: FILE: drivers/char/eqnx/sst_poll.c:228:
+	} else

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#304: FILE: drivers/char/eqnx/sst_poll.c:229:
+		xbits0 = xbits1 = 0;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#362: FILE: drivers/char/eqnx/sst_poll.c:281:
+
+			}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'icp->lmx[mpc->mpc_lmxno].lmx_active !=
 EV_GOOD'
#377: FILE: drivers/char/eqnx/sst_poll.c:295:
+			if ((!(SSTRD16(icpb->bank_signals) &
LMX_PRESENT)) &&
+			    (icp->lmx[mpc->mpc_lmxno].lmx_active !=
DEV_GOOD))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:BRACES: braces {} should be used on all arms of this statement
#384: FILE: drivers/char/eqnx/sst_poll.c:300:
+			if (!(port % 16) && (mpc->mpc_cin_events &
[...]
+			} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#409: FILE: drivers/char/eqnx/sst_poll.c:320:
+						mega_rng_delta(icp,
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#410: FILE: drivers/char/eqnx/sst_poll.c:320:
+						mega_rng_delta(icp,
mpd->mpd_nchan);

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#412: FILE: drivers/char/eqnx/sst_poll.c:322:
+						if (icp->icp_rng_last &

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (48, 0)
#412: FILE: drivers/char/eqnx/sst_poll.c:322:
+						if (icp->icp_rng_last &
[...]
mega_rdv_delta(icp, mpc,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#416: FILE: drivers/char/eqnx/sst_poll.c:325:
+
+

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#418: FILE: drivers/char/eqnx/sst_poll.c:326:
+						else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (48, 0)
#418: FILE: drivers/char/eqnx/sst_poll.c:326:
+						else
[...]
mega_rdv_delta(icp, mpc,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#421: FILE: drivers/char/eqnx/sst_poll.c:328:
+
+

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#423: FILE: drivers/char/eqnx/sst_poll.c:329:
+
+					}

CHECK:BRACES: Unbalanced braces around else statement
#425: FILE: drivers/char/eqnx/sst_poll.c:331:
+			} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#459: FILE: drivers/char/eqnx/sst_poll.c:365:
+			if (port <= 31) {
[...]
+			} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#462: FILE: drivers/char/eqnx/sst_poll.c:368:
+			} else

WARNING:RETURN_VOID: void function return statements are not generally useful
#478: FILE: drivers/char/eqnx/sst_poll.c:384:
+	return;
+}

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#492: FILE: drivers/char/eqnx/sst_poll.c:398:
+static void inline sstpoll_SSP4(struct mpdev *mpd, struct mpchan *mpc,

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#495: FILE: drivers/char/eqnx/sst_poll.c:401:
+	volatile union global_regs_u *icp_glo;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#496: FILE: drivers/char/eqnx/sst_poll.c:402:
+	volatile struct icp_out_struct *icpo;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#497: FILE: drivers/char/eqnx/sst_poll.c:403:
+	volatile struct icp_in_struct *icpi;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#498: FILE: drivers/char/eqnx/sst_poll.c:404:
+	volatile struct cin_bnk_struct *icpb;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#499: FILE: drivers/char/eqnx/sst_poll.c:405:
+	volatile struct cout_que_struct *icpq;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#510: FILE: drivers/char/eqnx/sst_poll.c:416:
+	icp_glo = (volatile union global_regs_u *)

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#546: FILE: drivers/char/eqnx/sst_poll.c:447:
+						if (!mpc->xmit_cnt)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#560: FILE: drivers/char/eqnx/sst_poll.c:458:
+					if (SSTRD16(icpq->q_data_count)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#586: FILE: drivers/char/eqnx/sst_poll.c:477:
+
+

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#588: FILE: drivers/char/eqnx/sst_poll.c:478:
+
+				}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#599: FILE: drivers/char/eqnx/sst_poll.c:485:
+				SSTWR16(icpo->cout_attn_enbl,
+			}

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 0)
#602: FILE: drivers/char/eqnx/sst_poll.c:488:
+			if ((rxtx_work & 0x08) || (mpc->mpc_flags &
[...]
115Kb) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#606: FILE: drivers/char/eqnx/sst_poll.c:490:
+				/* Defer processing to 40 mills (<=
+				/* Defer processing to 20 mills (==

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#608: FILE: drivers/char/eqnx/sst_poll.c:491:
+				/* Defer processing to 20 mills (==
+				if (mpc->mpc_tty != (struct tty_struct

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mpc->mpc_icpi == NULL'
#698: FILE: drivers/char/eqnx/sst_poll.c:577:
+			if ((mpc->mpc_icpi == NULL) || (mpc->mpc_icpo ==
NULL))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mpc->mpc_icpo ==
 ULL'
#698: FILE: drivers/char/eqnx/sst_poll.c:577:
+			if ((mpc->mpc_icpi == NULL) || (mpc->mpc_icpo ==
NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mpc->mpc_icpi"
#698: FILE: drivers/char/eqnx/sst_poll.c:577:
+			if ((mpc->mpc_icpi == NULL) || (mpc->mpc_icpo ==

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 0)
#702: FILE: drivers/char/eqnx/sst_poll.c:580:
+			if (mpd->mpd_board_def->asic == SSP64) {
[...]
MPTIMEO */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#705: FILE: drivers/char/eqnx/sst_poll.c:582:
+				/* ICP on SSP64 board - every 4 *
+				if (poll_cnt & 3)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#731: FILE: drivers/char/eqnx/sst_poll.c:608:
+	volatile union global_regs_u *icpg;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#732: FILE: drivers/char/eqnx/sst_poll.c:609:
+	volatile struct icp_out_struct *icpo;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#736: FILE: drivers/char/eqnx/sst_poll.c:613:
+	volatile u16 *frame_ptr, b;

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#740: FILE: drivers/char/eqnx/sst_poll.c:617:
+	if (!(spin_is_locked(&mpc->mpc_mpd->mpd_lock)))

lockdep_assert_held() annotations should be preferred over
assertions based on spin_is_locked()

See: https://www.kernel.org/doc/html/latest/locking/lockdep-design.html#annotations

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#776: FILE: drivers/char/eqnx/sst_poll.c:650:
+ * mega_rng_delta_GOOD_chk1(icp, mcp, lx)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#777: FILE: drivers/char/eqnx/sst_poll.c:651:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#778: FILE: drivers/char/eqnx/sst_poll.c:652:
+ * Validate an LMX on the ICP - validate queue pointer take test$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#780: FILE: drivers/char/eqnx/sst_poll.c:653:
+ * Helper routine called by mega_rng_delta()$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#781: FILE: drivers/char/eqnx/sst_poll.c:654:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#782: FILE: drivers/char/eqnx/sst_poll.c:655:
+ * Return TRUE if ok.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#783: FILE: drivers/char/eqnx/sst_poll.c:656:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#784: FILE: drivers/char/eqnx/sst_poll.c:657:
+ * icp^I= pointer to icp struct.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#785: FILE: drivers/char/eqnx/sst_poll.c:658:
+ * mpc^I= pointer to 1st channel struct.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#786: FILE: drivers/char/eqnx/sst_poll.c:659:
+ * lx^I= LMX index.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#787: FILE: drivers/char/eqnx/sst_poll.c:660:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#788: FILE: drivers/char/eqnx/sst_poll.c:661:
+ * mpdev (board-level) lock ** MUST ** be held.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#789: FILE: drivers/char/eqnx/sst_poll.c:662:
+ */$

WARNING:TYPO_SPELLING: 'Maching' may be misspelled - perhaps 'Machine'?
#799: FILE: drivers/char/eqnx/sst_poll.c:672:
+	/* note: this is fix for ATMEL State Maching Problem 4.01 */
 	                                     ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#853: FILE: drivers/char/eqnx/sst_poll.c:720:
+ * mega_rng_delta_GOOD_chk2(icp, mcp, lx)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#854: FILE: drivers/char/eqnx/sst_poll.c:721:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#855: FILE: drivers/char/eqnx/sst_poll.c:722:
+ * Validate an LMX on the ICP - initialize each channel, verify ring$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#857: FILE: drivers/char/eqnx/sst_poll.c:723:
+ * Helper routine called by mega_rng_delta()$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#858: FILE: drivers/char/eqnx/sst_poll.c:724:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#859: FILE: drivers/char/eqnx/sst_poll.c:725:
+ * Return TRUE if ok.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#860: FILE: drivers/char/eqnx/sst_poll.c:726:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#861: FILE: drivers/char/eqnx/sst_poll.c:727:
+ * icp^I= pointer to icp struct.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#862: FILE: drivers/char/eqnx/sst_poll.c:728:
+ * mpc^I= pointer to 1st channel struct.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#863: FILE: drivers/char/eqnx/sst_poll.c:729:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#864: FILE: drivers/char/eqnx/sst_poll.c:730:
+ * mpdev (board-level) lock ** MUST ** be held.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#865: FILE: drivers/char/eqnx/sst_poll.c:731:
+ */$

WARNING:TYPO_SPELLING: 'Maching' may be misspelled - perhaps 'Machine'?
#869: FILE: drivers/char/eqnx/sst_poll.c:735:
+	/* note: this is fix for ATMEL State Maching Problem 4.02 */
 	                                     ^^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#924: FILE: drivers/char/eqnx/sst_poll.c:788:
+ * mega_rng_delta_GOOD_initLMX(icp, mcp, lx, lmx)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#925: FILE: drivers/char/eqnx/sst_poll.c:789:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#926: FILE: drivers/char/eqnx/sst_poll.c:790:
+ * Validate an LMX on the ICP - bring LMX online$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#927: FILE: drivers/char/eqnx/sst_poll.c:791:
+ * Helper routine called by mega_rng_delta()$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#928: FILE: drivers/char/eqnx/sst_poll.c:792:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#929: FILE: drivers/char/eqnx/sst_poll.c:793:
+ * Return TRUE if ok.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#930: FILE: drivers/char/eqnx/sst_poll.c:794:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#931: FILE: drivers/char/eqnx/sst_poll.c:795:
+ * icp^I= pointer to icp struct.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#932: FILE: drivers/char/eqnx/sst_poll.c:796:
+ * mpc^I= pointer to 1st channel struct.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#933: FILE: drivers/char/eqnx/sst_poll.c:797:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#934: FILE: drivers/char/eqnx/sst_poll.c:798:
+ * mpdev (board-level) lock ** MUST ** be held.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#935: FILE: drivers/char/eqnx/sst_poll.c:799:
+ */$

WARNING:TYPO_SPELLING: 'Maching' may be misspelled - perhaps 'Machine'?
#992: FILE: drivers/char/eqnx/sst_poll.c:850:
+		/* note: this is fix for ATMEL State Maching Problem
 		                                     ^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1148: FILE: drivers/char/eqnx/sst_poll.c:987:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1215: FILE: drivers/char/eqnx/sst_poll.c:1047:
+ * mega_rng_delta_CHK(icp)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1216: FILE: drivers/char/eqnx/sst_poll.c:1048:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1217: FILE: drivers/char/eqnx/sst_poll.c:1049:
+ * Validate each channel on the ICP - verify input queue pointers.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1218: FILE: drivers/char/eqnx/sst_poll.c:1050:
+ * Helper routine called by mega_rng_delta()$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1219: FILE: drivers/char/eqnx/sst_poll.c:1051:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1220: FILE: drivers/char/eqnx/sst_poll.c:1052:
+ * Return TRUE if ok.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1221: FILE: drivers/char/eqnx/sst_poll.c:1053:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1222: FILE: drivers/char/eqnx/sst_poll.c:1054:
+ * mpdev (board-level) lock ** MUST ** be held.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1223: FILE: drivers/char/eqnx/sst_poll.c:1055:
+ */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1273: FILE: drivers/char/eqnx/sst_poll.c:1099:
+ * mega_rng_delta(icp, reason, nchan)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1274: FILE: drivers/char/eqnx/sst_poll.c:1100:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1275: FILE: drivers/char/eqnx/sst_poll.c:1101:
+ * Handle a change in the ring pointed to by "icp". "reason" may be$

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1275: FILE: drivers/char/eqnx/sst_poll.c:1101:
+ * Handle a change in the ring pointed to by "icp". "reason" may be

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1276: FILE: drivers/char/eqnx/sst_poll.c:1102:
+ *     RNG_BAD^I^Istatus just went to bad$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1277: FILE: drivers/char/eqnx/sst_poll.c:1103:
+ *     RNG_GOOD^I^Istatus just went to good (includes init$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1279: FILE: drivers/char/eqnx/sst_poll.c:1104:
+ *     RNG_WAIT^I^Idebounce of RNG_CLK in progress$

WARNING:TYPO_SPELLING: 'transistion' may be misspelled - perhaps 'transition'?
#1280: FILE: drivers/char/eqnx/sst_poll.c:1105:
+ *     RNG_CHK		service of a transistion to RNG_GOOD in progress
               		             ^^^^^^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1280: FILE: drivers/char/eqnx/sst_poll.c:1105:
+ *     RNG_CHK^I^Iservice of a transistion to RNG_GOOD in progress$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1281: FILE: drivers/char/eqnx/sst_poll.c:1106:
+ *     RNG_FAIL^I^Iring clock offline detected$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1282: FILE: drivers/char/eqnx/sst_poll.c:1107:
+ *                                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1282: FILE: drivers/char/eqnx/sst_poll.c:1107:
+ *                                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1283: FILE: drivers/char/eqnx/sst_poll.c:1108:
+ * Initialization code relies on this state machine to establish the$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1284: FILE: drivers/char/eqnx/sst_poll.c:1109:
+ * ring as well as ring failure detection and re-initialization.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1285: FILE: drivers/char/eqnx/sst_poll.c:1110:
+ * This routine is responsible for "local" lmx's only!!!$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1286: FILE: drivers/char/eqnx/sst_poll.c:1111:
+ *        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1286: FILE: drivers/char/eqnx/sst_poll.c:1111:
+ *        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1287: FILE: drivers/char/eqnx/sst_poll.c:1112:
+ * Return the new value for "rng_reqsvc" to indicate if this routine$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1288: FILE: drivers/char/eqnx/sst_poll.c:1113:
+ * should be run next entry of sstpoll() without any change in the$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1289: FILE: drivers/char/eqnx/sst_poll.c:1114:
+ * ring status.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1290: FILE: drivers/char/eqnx/sst_poll.c:1115:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1291: FILE: drivers/char/eqnx/sst_poll.c:1116:
+ * An inherent assumption in ring processing is that ring processing$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1292: FILE: drivers/char/eqnx/sst_poll.c:1117:
+ * has precedence over lmx processing.  This implies:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1293: FILE: drivers/char/eqnx/sst_poll.c:1118:
+ *     1) changes in local lmx's will be prompted by loss of ring.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1294: FILE: drivers/char/eqnx/sst_poll.c:1119:
+ *     2) lmx condition change events will be due to mux$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1295: FILE: drivers/char/eqnx/sst_poll.c:1120:
+ *        changes (not local lmx changes)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1296: FILE: drivers/char/eqnx/sst_poll.c:1121:
+ * $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1296: FILE: drivers/char/eqnx/sst_poll.c:1121:
+ * $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1297: FILE: drivers/char/eqnx/sst_poll.c:1122:
+ * mpdev (board-level) lock ** MUST ** be held.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1298: FILE: drivers/char/eqnx/sst_poll.c:1123:
+ */$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1332: FILE: drivers/char/eqnx/sst_poll.c:1156:
+			dev_warn(mpd->dev, "WARNING: SST expansion bus "
 			                           ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1333: FILE: drivers/char/eqnx/sst_poll.c:1157:
+				 "failure detected for minor devices %d
 				                                     ^

WARNING:TYPO_SPELLING: 'transistion' may be misspelled - perhaps 'transition'?
#1362: FILE: drivers/char/eqnx/sst_poll.c:1182:
+		 * transistion to GOOD state
 		   ^^^^^^^^^^^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1372: FILE: drivers/char/eqnx/sst_poll.c:1191:
+			dev_warn(mpd->dev, "mega_rng_delta: called w/
 			                                  ^

CHECK:SPACING: space preferred before that '/' (ctx:VxE)
#1372: FILE: drivers/char/eqnx/sst_poll.c:1191:
+			dev_warn(mpd->dev, "mega_rng_delta: called w/
 			                                            ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1382: FILE: drivers/char/eqnx/sst_poll.c:1200:
+		     chnl += 16, lx++) {
+

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1403: FILE: drivers/char/eqnx/sst_poll.c:1219:
+			icpg = (volatile union global_regs_u *)icpo;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1416: FILE: drivers/char/eqnx/sst_poll.c:1230:
+			/* check for not offline, if so, check next poll
+			if (SSTRD16(icpb->bank_signals) & LMX_ONLN) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1485: FILE: drivers/char/eqnx/sst_poll.c:1292:
+ * mega_rdv_delta_wait(arg)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1486: FILE: drivers/char/eqnx/sst_poll.c:1293:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1487: FILE: drivers/char/eqnx/sst_poll.c:1294:
+ * Timer routine for mega_rdvc_delta$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1488: FILE: drivers/char/eqnx/sst_poll.c:1295:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1489: FILE: drivers/char/eqnx/sst_poll.c:1296:
+ * arg^I= pointer to channel structure.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1490: FILE: drivers/char/eqnx/sst_poll.c:1297:
+ */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1506: FILE: drivers/char/eqnx/sst_poll.c:1313:
+ * mega_rdv_delta(icp, mpc, rng_state)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1507: FILE: drivers/char/eqnx/sst_poll.c:1314:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1508: FILE: drivers/char/eqnx/sst_poll.c:1315:
+ * Handle a change in the remote lmx pointed to by channel "mp".$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1509: FILE: drivers/char/eqnx/sst_poll.c:1316:
+ * This change was indicated by "lmx condition changed" bit$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1510: FILE: drivers/char/eqnx/sst_poll.c:1317:
+ * in input events register, now stored in "mpc->mpc_rx_bank".  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1510: FILE: drivers/char/eqnx/sst_poll.c:1317:
+ * in input events register, now stored in "mpc->mpc_rx_bank".  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1511: FILE: drivers/char/eqnx/sst_poll.c:1318:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1512: FILE: drivers/char/eqnx/sst_poll.c:1319:
+ * Only channels 0, 16, 32 and 48 arrive here!$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1513: FILE: drivers/char/eqnx/sst_poll.c:1320:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1514: FILE: drivers/char/eqnx/sst_poll.c:1321:
+ * Remote lmx init/failure/recovery is handled by this routine.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1515: FILE: drivers/char/eqnx/sst_poll.c:1322:
+ * Local lmx (ldev) init/failure/recovery is handled by $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1515: FILE: drivers/char/eqnx/sst_poll.c:1322:
+ * Local lmx (ldev) init/failure/recovery is handled by $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1516: FILE: drivers/char/eqnx/sst_poll.c:1323:
+ * "mega_ring_delta" by detecting changes in the ring.  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1516: FILE: drivers/char/eqnx/sst_poll.c:1323:
+ * "mega_ring_delta" by detecting changes in the ring.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1517: FILE: drivers/char/eqnx/sst_poll.c:1324:
+ *        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1517: FILE: drivers/char/eqnx/sst_poll.c:1324:
+ *        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1518: FILE: drivers/char/eqnx/sst_poll.c:1325:
+ * icp^I= poiinter to icp structure.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1519: FILE: drivers/char/eqnx/sst_poll.c:1326:
+ * mpc^I= pointer to channel structure.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1520: FILE: drivers/char/eqnx/sst_poll.c:1327:
+ * rng_state = one of RNG_BAD or RNG_GOOD$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1521: FILE: drivers/char/eqnx/sst_poll.c:1328:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1522: FILE: drivers/char/eqnx/sst_poll.c:1329:
+ * mpdev (board-level) lock ** MUST ** be held.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1523: FILE: drivers/char/eqnx/sst_poll.c:1330:
+ */$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1542: FILE: drivers/char/eqnx/sst_poll.c:1349:
+		dev_warn(mpd->dev, "mega_rdv_delta: called w/ SSP4\n");
 		                                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxW)
#1542: FILE: drivers/char/eqnx/sst_poll.c:1349:
+		dev_warn(mpd->dev, "mega_rdv_delta: called w/ SSP4\n");
 		                                            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1576: FILE: drivers/char/eqnx/sst_poll.c:1382:
+ 100;$

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#1591: FILE: drivers/char/eqnx/sst_poll.c:1397:
+			/* event occured while waiting */
 			         ^^^^^^^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1635: FILE: drivers/char/eqnx/sst_poll.c:1438:
+				dev_info(mpd->dev, "NOTICE: SST: minor "
 				                          ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1635: FILE: drivers/char/eqnx/sst_poll.c:1438:
+				dev_info(mpd->dev, "NOTICE: SST: minor "
 				                               ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1636: FILE: drivers/char/eqnx/sst_poll.c:1439:
+					 "devices %d to %d available on
 					          ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#1636: FILE: drivers/char/eqnx/sst_poll.c:1439:
+					 "devices %d to %d available on
 					                ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 0)
#1659: FILE: drivers/char/eqnx/sst_poll.c:1461:
+			if ((!rmt_lmx_found && lmx_online) ||
[...]
*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1664: FILE: drivers/char/eqnx/sst_poll.c:1465:
+				/* wait for RNG_GOOD and rmt_lmx_found
+				lmx->lmx_rmt_active = DEV_BAD;

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#1712: FILE: drivers/char/eqnx/sst_poll.c:1508:
+	if (!(spin_is_locked(&mpc->mpc_mpd->mpd_lock)))

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'txint_event', this function's name, in a string
#1713: FILE: drivers/char/eqnx/sst_poll.c:1509:
+		dev_dbg(mpd->dev, "txint_event: mpd lock !locked\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (tty->ldisc.write_wakeup)
#1729: FILE: drivers/char/eqnx/sst_poll.c:1525:
+		(tty->ldisc.write_wakeup) (tty);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1745: FILE: drivers/char/eqnx/sst_poll.c:1541:
+static inline void megainput_copy(struct mpchan *mpc, u8 * cbuf, int

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1789: FILE: drivers/char/eqnx/sst_poll.c:1581:
+
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1809: FILE: drivers/char/eqnx/sst_poll.c:1601:
+ * NOTE - lock is dropped and then re-locked to do input $

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1814: FILE: drivers/char/eqnx/sst_poll.c:1606:
+	volatile struct icp_in_struct *icpi = mpc->mpc_icpi;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1815: FILE: drivers/char/eqnx/sst_poll.c:1607:
+	volatile struct icp_out_struct *icpo;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1818: FILE: drivers/char/eqnx/sst_poll.c:1610:
+	volatile struct cin_bnk_struct *icpb = mpc->mpc_icpb;

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#1829: FILE: drivers/char/eqnx/sst_poll.c:1621:
+	if (!(spin_is_locked(&mpc->mpc_mpd->mpd_lock)))

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'megainput', this function's name, in a string
#1830: FILE: drivers/char/eqnx/sst_poll.c:1622:
+		dev_dbg(mpd->dev, "megainput: mpd lock !locked\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tiosp"
#1836: FILE: drivers/char/eqnx/sst_poll.c:1628:
+	if (tiosp == NULL)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'megainput', this function's name, in a string
#1853: FILE: drivers/char/eqnx/sst_poll.c:1644:
+	dev_dbg(mpd->dev, "megainput: device %d receive count = %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1860: FILE: drivers/char/eqnx/sst_poll.c:1650:
+	rcv_cnt = tty_prepare_flip_string_flags(tp, &cbuf, &fbuf,
+	if (rcv_cnt <= 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1872: FILE: drivers/char/eqnx/sst_poll.c:1662:
+	if ((err = (mpc->mpc_cin_events & EV_PAR_ERR))) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1884: FILE: drivers/char/eqnx/sst_poll.c:1674:
+		u8 *tagptr;
+		if (mpc->mpc_mpd->mpd_board_def->asic == SSP64)

CHECK:BRACES: Unbalanced braces around else statement
#1899: FILE: drivers/char/eqnx/sst_poll.c:1687:
+		} else

CHECK:SPACING: No space is necessary after a cast
#1905: FILE: drivers/char/eqnx/sst_poll.c:1693:
+			if (h_tagp > (u16) (mpc->mpc_rxq.q_end - 1))

WARNING:LINE_SPACING: Missing a blank line after declarations
#1905: FILE: drivers/char/eqnx/sst_poll.c:1693:
+			int h_tagp = tagp + 4;
+			if (h_tagp > (u16) (mpc->mpc_rxq.q_end - 1))

CHECK:SPACING: No space is necessary after a cast
#1906: FILE: drivers/char/eqnx/sst_poll.c:1694:
+				h_tagp = (u16) mpc->mpc_rxq.q_begin;

CHECK:SPACING: No space is necessary after a cast
#1921: FILE: drivers/char/eqnx/sst_poll.c:1707:
+			if (dma_ptr++ > (u16) (mpc->mpc_rxq.q_end - 1))

CHECK:SPACING: No space is necessary after a cast
#1922: FILE: drivers/char/eqnx/sst_poll.c:1708:
+				dma_ptr = (u16) mpc->mpc_rxq.q_begin;

CHECK:CAMELCASE: Avoid CamelCase: <qptrCnt>
#1930: FILE: drivers/char/eqnx/sst_poll.c:1716:
+		int qptrCnt = mpc->mpc_rxq.q_ptr;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1933: FILE: drivers/char/eqnx/sst_poll.c:1718:
+		/* if error, find first invalid character based on tag
+		if (err) {

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'mpc->mpc_mpd->icp[mpc->mpc_icpno].icp_tags_start'
#1943: FILE: drivers/char/eqnx/sst_poll.c:1728:
+				    mpc->mpc_mpd->icp[mpc->mpc_icpno].
+				    icp_tags_start;

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

CHECK:BRACES: Unbalanced braces around else statement
#1949: FILE: drivers/char/eqnx/sst_poll.c:1733:
+			} else

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1961: FILE: drivers/char/eqnx/sst_poll.c:1745:
+					break;
+				} else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1964: FILE: drivers/char/eqnx/sst_poll.c:1748:
+				if (qptrCnt++ > (u16)
[...]
+				} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1977: FILE: drivers/char/eqnx/sst_poll.c:1756:
+					} else

CHECK:BRACES: Unbalanced braces around else statement
#1982: FILE: drivers/char/eqnx/sst_poll.c:1760:
+				} else

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2024: FILE: drivers/char/eqnx/sst_poll.c:1800:
+				if ((mpc->mpc_flags & MPC_DSCOPER)
+				    && (eqnx_dscope[0].chan ==

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2026: FILE: drivers/char/eqnx/sst_poll.c:1802:
+					(mpc - eqnx_chan))) {
+

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (40, 0)
#2031: FILE: drivers/char/eqnx/sst_poll.c:1806:
+					if (eqnx_dscope[d].next ==
[...]
eqnx_dscope[d].scope_wait_wait

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2033: FILE: drivers/char/eqnx/sst_poll.c:1808:
+					    eqnx_dscope[d].q.q_ptr) {
+

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#2035: FILE: drivers/char/eqnx/sst_poll.c:1809:
+
+						    = 0;

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'eqnx_dscope[d].scope_wait'
#2038: FILE: drivers/char/eqnx/sst_poll.c:1812:
+						    (&eqnx_dscope[d].
+						     scope_wait);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2049: FILE: drivers/char/eqnx/sst_poll.c:1822:
+
+				}

WARNING:SPLIT_STRING: quoted string split across lines
#2052: FILE: drivers/char/eqnx/sst_poll.c:1825:
+				dev_warn(mpd->dev, "Unknown error code "
+					 "value %d", code);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#2066: FILE: drivers/char/eqnx/sst_poll.c:1838:
+		"chars for device %d\n",
 		                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2072: FILE: drivers/char/eqnx/sst_poll.c:1844:
+ * rxint_cs_change(mpc)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2073: FILE: drivers/char/eqnx/sst_poll.c:1845:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2074: FILE: drivers/char/eqnx/sst_poll.c:1846:
+ * Process an input control signal transition.  In the usual$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2075: FILE: drivers/char/eqnx/sst_poll.c:1847:
+ * case, a transition indicates a change in the data carrier$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2076: FILE: drivers/char/eqnx/sst_poll.c:1848:
+ * detect.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2077: FILE: drivers/char/eqnx/sst_poll.c:1849:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2078: FILE: drivers/char/eqnx/sst_poll.c:1850:
+ * mpc^I= pointer to channel structure.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2079: FILE: drivers/char/eqnx/sst_poll.c:1851:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2080: FILE: drivers/char/eqnx/sst_poll.c:1852:
+ * mpdev (board-level) lock ** MUST ** be held.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2081: FILE: drivers/char/eqnx/sst_poll.c:1853:
+ */$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!mpc->carr_state'
#2106: FILE: drivers/char/eqnx/sst_poll.c:1877:
+	if (dcd && (!mpc->carr_state)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2138: FILE: drivers/char/eqnx/sst_poll.c:1907:
+ * NOTE - lock is dropped and then re-locked to do input $

WARNING:USE_LOCKDEP: Where possible, use lockdep_assert_held instead of assertions based on spin_is_locked
#2147: FILE: drivers/char/eqnx/sst_poll.c:1916:
+	if (!(spin_is_locked(&mpc->mpc_mpd->mpd_lock)))

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rxint_break', this function's name, in a string
#2148: FILE: drivers/char/eqnx/sst_poll.c:1917:
+		dev_dbg(mpd->dev, "rxint_break: mpd lock !locked\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000066336.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 27 errors, 171 warnings, 61 checks, 2121 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000066336.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
