WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
It is based on multipath_drr.c, the multipath device round robin algorithm, and

WARNING:TYPO_SPELLING: 'maintians' may be misspelled - perhaps 'maintains'?
#37: 
is derived from it.  This implementation maintians per node state table, and 
                                         ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#127: FILE: net/core/dev.c:3006:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#169: FILE: net/ipv4/multipath_node_drr.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#182: FILE: net/ipv4/multipath_node_drr.c:14:
+^Iint ^I^Iallocated;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#183: FILE: net/ipv4/multipath_node_drr.c:15:
+^Iint ^I^Inode; /* node id of device */$

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#191: FILE: net/ipv4/multipath_node_drr.c:23:
+static int inline __multipath_findslot(int ifindex, int nid)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#210: FILE: net/ipv4/multipath_node_drr.c:42:
+static int inline __multipath_finddev(int ifindex, int nid)

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#259: FILE: net/ipv4/multipath_node_drr.c:91:
+static void inline drr_safe_inc(atomic_t *usecount)

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#272: FILE: net/ipv4/multipath_node_drr.c:104:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited before semicolon
#368: FILE: net/ipv4/multipath_node_drr.c:200:
+		return ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#370: FILE: net/ipv4/multipath_node_drr.c:202:
+^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#371: FILE: net/ipv4/multipath_node_drr.c:203:
+	if (cur_min_devidx != -1) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#374: FILE: net/ipv4/multipath_node_drr.c:206:
+	} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#385: FILE: net/ipv4/multipath_node_drr.c:217:
+^Iint size = MULTIPATH_MAX_DEVICECANDIDATES * $

WARNING:LINE_SPACING: Missing a blank line after declarations
#389: FILE: net/ipv4/multipath_node_drr.c:221:
+		int i;
+		local_state[nid] = kmalloc_node(size, GFP_KERNEL, nid);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!local_state[nid]"
#390: FILE: net/ipv4/multipath_node_drr.c:222:
+		if (local_state[nid] == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LINE_SPACING: Missing a blank line after declarations
#392: FILE: net/ipv4/multipath_node_drr.c:224:
+			int i;
+			for_each_node(i){

ERROR:SPACING: space required before the open brace '{'
#392: FILE: net/ipv4/multipath_node_drr.c:224:
+			for_each_node(i){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#396: FILE: net/ipv4/multipath_node_drr.c:228:
+			printk(KERN_CRIT"drr_init: Cannot allocate state table\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'drr_init', this function's name, in a string
#396: FILE: net/ipv4/multipath_node_drr.c:228:
+			printk(KERN_CRIT"drr_init: Cannot allocate state table\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#396: FILE: net/ipv4/multipath_node_drr.c:228:
+			printk(KERN_CRIT"drr_init: Cannot allocate state table\n");

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:LINE_SPACING: Missing a blank line after declarations
#423: FILE: net/ipv4/multipath_node_drr.c:255:
+	int nid;
+	unregister_netdevice_notifier(&drr_dev_notifier);

ERROR:SPACING: space required before the open brace '{'
#425: FILE: net/ipv4/multipath_node_drr.c:257:
+	for_each_node(nid){

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000092075.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 11 warnings, 5 checks, 333 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000092075.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
