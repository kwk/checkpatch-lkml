CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#51: FILE: include/linux/timex.h:311:
+extern void second_overflow(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#52: FILE: include/linux/timex.h:312:
+extern void update_ntp_one_tick(void);

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#248: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#253: FILE: kernel/time/ntp.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#254: FILE: kernel/time/ntp.c:2:
+ * linux/kernel/time/ntp.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#277: FILE: kernel/time/ntp.c:25:
+int tickadj = 500/HZ ? : 1;		/* microsecs */
                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#291: FILE: kernel/time/ntp.c:39:
+long time_freq = (((NSEC_PER_SEC + HZ/2) % HZ - HZ/2) << SHIFT_USEC) / NSEC_PER_USEC;
                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#291: FILE: kernel/time/ntp.c:39:
+long time_freq = (((NSEC_PER_SEC + HZ/2) % HZ - HZ/2) << SHIFT_USEC) / NSEC_PER_USEC;
                                                   ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#342: FILE: kernel/time/ntp.c:90:
+			printk(KERN_NOTICE "Clock: inserting leap second "

WARNING:SPLIT_STRING: quoted string split across lines
#343: FILE: kernel/time/ntp.c:91:
+			printk(KERN_NOTICE "Clock: inserting leap second "
+					"23:59:60 UTC\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#357: FILE: kernel/time/ntp.c:105:
+			printk(KERN_NOTICE "Clock: deleting leap second "

WARNING:SPLIT_STRING: quoted string split across lines
#358: FILE: kernel/time/ntp.c:106:
+			printk(KERN_NOTICE "Clock: deleting leap second "
+					"23:59:59 UTC\n");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#365: FILE: kernel/time/ntp.c:113:
+		if (!(time_status & (STA_INS | STA_DEL)))
+		time_state = TIME_OK;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#389: FILE: kernel/time/ntp.c:137:
+	time_adj += shift_right(ltemp,(SHIFT_USEC + SHIFT_HZ - SHIFT_SCALE));
 	                             ^

WARNING:MINMAX: min() should probably be min_t(long, time_adjust_step, tickadj)
#432: FILE: kernel/time/ntp.c:180:
+		time_adjust_step = min(time_adjust_step, (long)tickadj);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#478: FILE: kernel/time/ntp.c:226:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#479: FILE: kernel/time/ntp.c:227:
+void __attribute__ ((weak)) notify_arch_cmos_timer(void)

WARNING:RETURN_VOID: void function return statements are not generally useful
#482: FILE: kernel/time/ntp.c:230:
+	return;
+}

ERROR:SPACING: space prohibited after that '-' (ctx:WxW)
#505: FILE: kernel/time/ntp.c:253:
+		if (txc->offset <= - MAXPHASE || txc->offset >= MAXPHASE )
 		                   ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#505: FILE: kernel/time/ntp.c:253:
+		if (txc->offset <= - MAXPHASE || txc->offset >= MAXPHASE )

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#510: FILE: kernel/time/ntp.c:258:
+		if (txc->tick <  900000/USER_HZ ||
 		                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#511: FILE: kernel/time/ntp.c:259:
+		    txc->tick > 1100000/USER_HZ)
 		                       ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#520: FILE: kernel/time/ntp.c:268:
+#if 0	/* STA_CLOCKERR is never set yet */

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#524: FILE: kernel/time/ntp.c:272:
+	if (txc->modes)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#524: FILE: kernel/time/ntp.c:272:
+	if (txc->modes)
+	{

WARNING:TABSTOP: Statements should start on a tabstop
#526: FILE: kernel/time/ntp.c:274:
+	    if (txc->modes & ADJ_STATUS)	/* only set allowed bits */

WARNING:TABSTOP: Statements should start on a tabstop
#530: FILE: kernel/time/ntp.c:278:
+	    if (txc->modes & ADJ_FREQUENCY) {	/* p. 22 */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#531: FILE: kernel/time/ntp.c:279:
+		if (txc->freq > MAXFREQ || txc->freq < -MAXFREQ) {
+		    result = -EINVAL;

WARNING:TABSTOP: Statements should start on a tabstop
#533: FILE: kernel/time/ntp.c:281:
+		    goto leave;

WARNING:TABSTOP: Statements should start on a tabstop
#536: FILE: kernel/time/ntp.c:284:
+	    }

WARNING:TABSTOP: Statements should start on a tabstop
#538: FILE: kernel/time/ntp.c:286:
+	    if (txc->modes & ADJ_MAXERROR) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#539: FILE: kernel/time/ntp.c:287:
+		if (txc->maxerror < 0 || txc->maxerror >= NTP_PHASE_LIMIT) {
+		    result = -EINVAL;

WARNING:TABSTOP: Statements should start on a tabstop
#541: FILE: kernel/time/ntp.c:289:
+		    goto leave;

WARNING:TABSTOP: Statements should start on a tabstop
#544: FILE: kernel/time/ntp.c:292:
+	    }

WARNING:TABSTOP: Statements should start on a tabstop
#546: FILE: kernel/time/ntp.c:294:
+	    if (txc->modes & ADJ_ESTERROR) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#547: FILE: kernel/time/ntp.c:295:
+		if (txc->esterror < 0 || txc->esterror >= NTP_PHASE_LIMIT) {
+		    result = -EINVAL;

WARNING:TABSTOP: Statements should start on a tabstop
#549: FILE: kernel/time/ntp.c:297:
+		    goto leave;

WARNING:TABSTOP: Statements should start on a tabstop
#552: FILE: kernel/time/ntp.c:300:
+	    }

WARNING:TABSTOP: Statements should start on a tabstop
#554: FILE: kernel/time/ntp.c:302:
+	    if (txc->modes & ADJ_TIMECONST) {	/* p. 24 */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#555: FILE: kernel/time/ntp.c:303:
+		if (txc->constant < 0) {	/* NTP v4 uses values > 6 */
+		    result = -EINVAL;

WARNING:TABSTOP: Statements should start on a tabstop
#557: FILE: kernel/time/ntp.c:305:
+		    goto leave;

WARNING:TABSTOP: Statements should start on a tabstop
#560: FILE: kernel/time/ntp.c:308:
+	    }

WARNING:TABSTOP: Statements should start on a tabstop
#562: FILE: kernel/time/ntp.c:310:
+	    if (txc->modes & ADJ_OFFSET) {	/* values checked earlier */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#563: FILE: kernel/time/ntp.c:311:
+		if (txc->modes == ADJ_OFFSET_SINGLESHOT) {
[...]
+		    if ((time_next_adjust = txc->offset) == 0)

WARNING:TABSTOP: Statements should start on a tabstop
#565: FILE: kernel/time/ntp.c:313:
+		    if ((time_next_adjust = txc->offset) == 0)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (20, 25)
#565: FILE: kernel/time/ntp.c:313:
+		    if ((time_next_adjust = txc->offset) == 0)
+			 time_adjust = 0;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#565: FILE: kernel/time/ntp.c:313:
+		    if ((time_next_adjust = txc->offset) == 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#568: FILE: kernel/time/ntp.c:316:
+		else if (time_status & STA_PLL) {
+		    ltemp = txc->offset;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#568: FILE: kernel/time/ntp.c:316:
+		}
+		else if (time_status & STA_PLL) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TABSTOP: Statements should start on a tabstop
#575: FILE: kernel/time/ntp.c:323:
+		    if (ltemp > MAXPHASE)

ERROR:CODE_INDENT: code indent should use tabs where possible
#576: FILE: kernel/time/ntp.c:324:
+^I^I        time_offset = MAXPHASE << SHIFT_UPDATE;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:TABSTOP: Statements should start on a tabstop
#577: FILE: kernel/time/ntp.c:325:
+		    else if (ltemp < -MAXPHASE)

WARNING:TABSTOP: Statements should start on a tabstop
#579: FILE: kernel/time/ntp.c:327:
+		    else

ERROR:CODE_INDENT: code indent should use tabs where possible
#580: FILE: kernel/time/ntp.c:328:
+^I^I        time_offset = ltemp << SHIFT_UPDATE;$

WARNING:TABSTOP: Statements should start on a tabstop
#588: FILE: kernel/time/ntp.c:336:
+		    if (time_status & STA_FREQHOLD || time_reftime == 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#589: FILE: kernel/time/ntp.c:337:
+^I^I        time_reftime = xtime.tv_sec;$

WARNING:TABSTOP: Statements should start on a tabstop
#592: FILE: kernel/time/ntp.c:340:
+		    if (time_status & STA_FLL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#593: FILE: kernel/time/ntp.c:341:
+^I^I        if (mtemp >= MINSEC) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#593: FILE: kernel/time/ntp.c:341:
+		        if (mtemp >= MINSEC) {
+			    ltemp = (time_offset / mtemp) << (SHIFT_USEC -

CHECK:BRACES: Unbalanced braces around else statement
#597: FILE: kernel/time/ntp.c:345:
+			} else /* calibration interval too short (p. 12) */

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TABSTOP: Statements should start on a tabstop
#599: FILE: kernel/time/ntp.c:347:
+		    } else {	/* PLL mode */

ERROR:CODE_INDENT: code indent should use tabs where possible
#600: FILE: kernel/time/ntp.c:348:
+^I^I        if (mtemp < MAXSEC) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#600: FILE: kernel/time/ntp.c:348:
+		        if (mtemp < MAXSEC) {
+			    ltemp *= mtemp;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#602: FILE: kernel/time/ntp.c:350:
+			    time_freq += shift_right(ltemp,(time_constant +
 			                                  ^

CHECK:BRACES: Unbalanced braces around else statement
#605: FILE: kernel/time/ntp.c:353:
+			} else /* calibration interval too long (p. 12) */

WARNING:TABSTOP: Statements should start on a tabstop
#607: FILE: kernel/time/ntp.c:355:
+		    }

WARNING:TABSTOP: Statements should start on a tabstop
#611: FILE: kernel/time/ntp.c:359:
+	    } /* txc->modes & ADJ_OFFSET */

WARNING:TABSTOP: Statements should start on a tabstop
#612: FILE: kernel/time/ntp.c:360:
+	    if (txc->modes & ADJ_TICK) {

WARNING:TABSTOP: Statements should start on a tabstop
#615: FILE: kernel/time/ntp.c:363:
+	    }

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 16)
#617: FILE: kernel/time/ntp.c:365:
+leave:	if ((time_status & (STA_UNSYNC|STA_CLOCKERR)) != 0)
+		result = TIME_ERROR;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#617: FILE: kernel/time/ntp.c:365:
+leave:	if ((time_status & (STA_UNSYNC|STA_CLOCKERR)) != 0)
       	                              ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#620: FILE: kernel/time/ntp.c:368:
+	if ((txc->modes & ADJ_OFFSET_SINGLESHOT) == ADJ_OFFSET_SINGLESHOT)
+	    txc->offset	   = save_adjust;

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#620: FILE: kernel/time/ntp.c:368:
+	if ((txc->modes & ADJ_OFFSET_SINGLESHOT) == ADJ_OFFSET_SINGLESHOT)
[...]
+	else {
[...]

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#622: FILE: kernel/time/ntp.c:370:
+	else {
+	    txc->offset = shift_right(time_offset, SHIFT_UPDATE);

CHECK:BRACES: Unbalanced braces around else statement
#622: FILE: kernel/time/ntp.c:370:
+	else {

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#646: FILE: kernel/time/ntp.c:394:
+	return(result);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000049923.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 51 warnings, 12 checks, 793 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000049923.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
