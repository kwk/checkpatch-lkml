WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
 arch/arm/mm/fault-armv.c        |   82 +++++++++++++++----------------------

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#88: FILE: arch/arm/mm/fault-armv.c:208:
+	mpnt = __vma_prio_tree_first(&mapping->i_mmap_shared,
+					&iter, pgoff, pgoff);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#109: FILE: arch/arm/mm/fault-armv.c:218:
+		mpnt = __vma_prio_tree_next(mpnt, &mapping->i_mmap_shared,
+						&iter, pgoff, pgoff);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#139: FILE: arch/arm/mm/fault-armv.c:240:
+	mpnt = __vma_prio_tree_first(&mapping->i_mmap_shared,
+					&iter, pgoff, pgoff);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#171: FILE: arch/arm/mm/fault-armv.c:252:
+		mpnt = __vma_prio_tree_next(mpnt, &mapping->i_mmap_shared,
+						&iter, pgoff, pgoff);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#216: FILE: arch/mips/mm/cache.c:85:
+	if (pfn_valid(pfn) && (page = pfn_to_page(pfn), page_mapping(page)) &&

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#266: FILE: arch/parisc/kernel/cache.c:248:
+	 * the shortest */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#268: FILE: arch/parisc/kernel/cache.c:250:
+	mpnt = __vma_prio_tree_first(&mapping->i_mmap_shared,
+					&iter, pgoff, pgoff);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#299: FILE: arch/parisc/kernel/cache.c:265:
+		mpnt = __vma_prio_tree_next(mpnt, &mapping->i_mmap_shared,
+						&iter, pgoff, pgoff);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#326: FILE: arch/parisc/kernel/cache.c:271:
+	mpnt = __vma_prio_tree_first(&mapping->i_mmap,
+					&iter, pgoff, pgoff);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#342: FILE: arch/parisc/kernel/cache.c:286:
+		mpnt = __vma_prio_tree_next(mpnt, &mapping->i_mmap_shared,
+						&iter, pgoff, pgoff);

CHECK:BRACES: braces {} should be used on all arms of this statement
#383: FILE: arch/ppc/mm/pgtable.c:89:
+	if (mem_init_done) {
[...]
+		}
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#388: FILE: arch/ppc/mm/pgtable.c:93:
+			ptepage->mapping = (void *) mm;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#388: FILE: arch/ppc/mm/pgtable.c:93:
+			struct page *ptepage = virt_to_page(pte);
+			ptepage->mapping = (void *) mm;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#391: FILE: arch/ppc/mm/pgtable.c:96:
+	} else

CHECK:SPACING: No space is necessary after a cast
#414: FILE: arch/ppc/mm/pgtable.c:115:
+		ptepage->mapping = (void *) mm;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "page_mapping"
#449: FILE: arch/sparc64/kernel/smp.c:674:
+			     page_mapping(page) != NULL));

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "page_mapping"
#452: FILE: arch/sparc64/kernel/smp.c:676:
+	if (page_mapping(page) != NULL &&

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "page_mapping"
#461: FILE: arch/sparc64/kernel/smp.c:697:
+			if (page_mapping(page) != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "page_mapping"
#470: FILE: arch/sparc64/kernel/smp.c:730:
+		if (page_mapping(page) != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "page_mapping"
#481: FILE: arch/sparc64/mm/init.c:142:
+			     page_mapping(page) != NULL));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "page_mapping"
#484: FILE: arch/sparc64/mm/init.c:144:
+	if (page_mapping(page) != NULL &&

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000290779.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 3 warnings, 18 checks, 515 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000290779.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
