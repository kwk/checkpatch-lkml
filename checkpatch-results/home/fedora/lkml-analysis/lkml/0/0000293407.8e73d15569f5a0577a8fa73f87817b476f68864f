WARNING:TYPO_SPELLING: 'separatly' may be misspelled - perhaps 'separately'?
#42: 
separatly, preventing allocation in the hugetlb pool from being accounted
^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#107: FILE: include/linux/security.h:54:
+extern int cap_vm_enough_memory (int domain, long pages);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#107: FILE: include/linux/security.h:54:
+extern int cap_vm_enough_memory (int domain, long pages);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: Unnecessary space before function pointer arguments
#126: FILE: include/linux/security.h:1026:
+	int (*vm_enough_memory) (int domain, long pages);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#211: FILE: mm/mmap.c:614:
+^Iif (acctdom == VM_AD_DEFAULT && (!(flags & MAP_NORESERVE) || $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#212: FILE: mm/mmap.c:615:
+	if (acctdom == VM_AD_DEFAULT && (!(flags & MAP_NORESERVE) || 
+	    sysctl_overcommit_memory > 1)) {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#264: FILE: mm/mprotect.c:176:
+		if (!(vma->vm_flags & (VM_ACCOUNT|VM_WRITE|VM_SHARED)) &&
 		                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#264: FILE: mm/mprotect.c:176:
+		if (!(vma->vm_flags & (VM_ACCOUNT|VM_WRITE|VM_SHARED)) &&
 		                                          ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#265: FILE: mm/mprotect.c:177:
+		if (!(vma->vm_flags & (VM_ACCOUNT|VM_WRITE|VM_SHARED)) &&
+				VM_ACCTDOM(vma) == VM_AD_DEFAULT) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#284: FILE: mm/mremap.c:406:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: mm/mremap.c:406:
+  $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#306: FILE: mm/shmem.c:1191:
+		if (security_vm_enough_memory(VM_AD_DEFAULT,
+				VM_ACCT(maxpos) - VM_ACCT(inode->i_size))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#325: FILE: mm/shmem.c:1952:
+	if ((flags & VM_ACCOUNT) && security_vm_enough_memory(VM_AD_DEFAULT,
+			VM_ACCT(size)))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000293407.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 4 warnings, 7 checks, 270 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000293407.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
