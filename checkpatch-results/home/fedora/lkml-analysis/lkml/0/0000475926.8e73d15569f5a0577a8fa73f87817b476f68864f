WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: compat_name.c:141:
+    char *ptr, *rsl = strrchr (devname, '/') + 1;/* right slash + 1 */$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#77: FILE: compat_name.c:141:
+    char *ptr, *rsl = strrchr (devname, '/') + 1;/* right slash + 1 */

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#85: FILE: compat_name.c:145:
+	if (ptr = strtry (devname, trans->match))
 	{

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#85: FILE: compat_name.c:145:
+	if (ptr = strtry (devname, trans->match))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#85: FILE: compat_name.c:145:
+	if (ptr = strtry (devname, trans->match))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:TABSTOP: Statements should start on a tabstop
#89: FILE: compat_name.c:147:
+	    if (trans->format == NULL) return (ptr);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#89: FILE: compat_name.c:147:
+	    if (trans->format == NULL) return (ptr);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!trans->format"
#89: FILE: compat_name.c:147:
+	    if (trans->format == NULL) return (ptr);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#90: FILE: compat_name.c:148:
+	    sprintf (buffer, trans->format, ptr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: compat_name.c:151:
+    if (strtry (devname, "sbp/"))$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#95: FILE: compat_name.c:151:
+    if (strtry (devname, "sbp/"))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: compat_name.c:156:
+    else if (strtry (devname, "scsi/"))$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#101: FILE: compat_name.c:156:
+    else if (strtry (devname, "scsi/"))

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#101: FILE: compat_name.c:156:
     }
+    else if (strtry (devname, "scsi/"))

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#109: FILE: compat_name.c:163:
+	else if (ptr = strtry (rsl, "mt"))
 	{

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#109: FILE: compat_name.c:163:
+	else if (ptr = strtry (rsl, "mt"))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#109: FILE: compat_name.c:163:
+	else if (ptr = strtry (rsl, "mt"))

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#109: FILE: compat_name.c:163:
 	}
+	else if (ptr = strtry (rsl, "mt"))

WARNING:TABSTOP: Statements should start on a tabstop
#112: FILE: compat_name.c:165:
+	    char mode = *ptr;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#122: FILE: compat_name.c:179:
+	else if (ptr = strtry (rsl, "part"))
+	    compat_name = write_old_sd_name (buffer, major, minor, ptr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#122: FILE: compat_name.c:179:
+	else if (ptr = strtry (rsl, "part"))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#122: FILE: compat_name.c:179:
+	else if (ptr = strtry (rsl, "part"))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#123: FILE: compat_name.c:180:
+	    compat_name = write_old_sd_name (buffer, major, minor, ptr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: compat_name.c:183:
+    else if (strtry (devname, "ide/host"))$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#127: FILE: compat_name.c:183:
+    else if (strtry (devname, "ide/host"))

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#127: FILE: compat_name.c:183:
     }
+    else if (strtry (devname, "ide/host"))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#130: FILE: compat_name.c:185:
+	if (ptr = strtry (rsl, "mt"))
 	{

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#130: FILE: compat_name.c:185:
+	if (ptr = strtry (rsl, "mt"))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#130: FILE: compat_name.c:185:
+	if (ptr = strtry (rsl, "mt"))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#133: FILE: compat_name.c:187:
+	    sprintf (buffer, "%sht%d", ptr, minor & 0x7f);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#142: FILE: compat_name.c:196:
+	else if (ptr = strtry (rsl, "part"))
 	{

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#142: FILE: compat_name.c:196:
+	else if (ptr = strtry (rsl, "part"))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#142: FILE: compat_name.c:196:
+	else if (ptr = strtry (rsl, "part"))

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#142: FILE: compat_name.c:196:
 	}
+	else if (ptr = strtry (rsl, "part"))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#146: FILE: compat_name.c:199:
+		     get_old_ide_name (major, minor), ptr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: compat_name.c:210:
+    else if (ptr = strtry (devname, "vcc/"))$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#155: FILE: compat_name.c:210:
+    else if (ptr = strtry (devname, "vcc/"))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#155: FILE: compat_name.c:210:
+    else if (ptr = strtry (devname, "vcc/"))

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#155: FILE: compat_name.c:210:
     }
+    else if (ptr = strtry (devname, "vcc/"))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#158: FILE: compat_name.c:212:
+	sprintf (buffer, "vcs%s", ptr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: compat_name.c:216:
+    else if (ptr = strtry (devname, "pty/"))$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#163: FILE: compat_name.c:216:
+    else if (ptr = strtry (devname, "pty/"))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#163: FILE: compat_name.c:216:
+    else if (ptr = strtry (devname, "pty/"))

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#163: FILE: compat_name.c:216:
     }
+    else if (ptr = strtry (devname, "pty/"))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#166: FILE: compat_name.c:218:
+	int index = atoi (ptr + 1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: devfsd.c:1420:
+    char *ptr, *rsl = strrchr (info->devname, '/') + 1;/* right slash + 1 */$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#192: FILE: devfsd.c:1420:
+    char *ptr, *rsl = strrchr (info->devname, '/') + 1;/* right slash + 1 */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#201: FILE: devfsd.c:1434:
+	if (ptr = strtry (info->devname, "scsi/"))
 	{

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#201: FILE: devfsd.c:1434:
+	if (ptr = strtry (info->devname, "scsi/"))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#201: FILE: devfsd.c:1434:
+	if (ptr = strtry (info->devname, "scsi/"))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#206: FILE: devfsd.c:1438:
+	    sscanf (ptr, "host%d/bus%d/target%d/lun%d/",

WARNING:NAKED_SSCANF: unchecked sscanf return value
#206: FILE: devfsd.c:1438:
+	    sscanf (ptr, "host%d/bus%d/target%d/lun%d/",
 		    &host, &bus, &target, &lun);

WARNING:TABSTOP: Statements should start on a tabstop
#213: FILE: devfsd.c:1443:
+	    if (ptr = strtry (rsl, "mt"))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#213: FILE: devfsd.c:1443:
+	    if (ptr = strtry (rsl, "mt"))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#213: FILE: devfsd.c:1443:
+	    if (ptr = strtry (rsl, "mt"))

WARNING:TABSTOP: Statements should start on a tabstop
#229: FILE: devfsd.c:1475:
+	    else if (ptr = strtry (rsl, "part"))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#229: FILE: devfsd.c:1475:
+	    else if (ptr = strtry (rsl, "part"))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#229: FILE: devfsd.c:1475:
+	    else if (ptr = strtry (rsl, "part"))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#232: FILE: devfsd.c:1477:
+			  host, bus, target, lun, atoi (ptr) );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#232: FILE: devfsd.c:1477:
+			  host, bus, target, lun, atoi (ptr) );

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#236: FILE: devfsd.c:1480:
+	else if (ptr = strtry (info->devname, "ide/host"))
 	{

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#236: FILE: devfsd.c:1480:
+	else if (ptr = strtry (info->devname, "ide/host"))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#236: FILE: devfsd.c:1480:
+	else if (ptr = strtry (info->devname, "ide/host"))

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#236: FILE: devfsd.c:1480:
 	}
+	else if (ptr = strtry (info->devname, "ide/host"))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#241: FILE: devfsd.c:1484:
+	    sscanf (ptr, "%d/bus%d/target%d/lun%d/",

WARNING:NAKED_SSCANF: unchecked sscanf return value
#241: FILE: devfsd.c:1484:
+	    sscanf (ptr, "%d/bus%d/target%d/lun%d/",
 		    &host, &bus, &target, &lun);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#245: FILE: devfsd.c:1487:
+	    snprintf (dest_buf, sizeof (dest_buf), "../%s", ptr - 4);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#245: FILE: devfsd.c:1487:
+	    snprintf (dest_buf, sizeof (dest_buf), "../%s", ptr - 4);

WARNING:TABSTOP: Statements should start on a tabstop
#252: FILE: devfsd.c:1492:
+	    else if (ptr = strtry (rsl, "part"))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#252: FILE: devfsd.c:1492:
+	    else if (ptr = strtry (rsl, "part"))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#252: FILE: devfsd.c:1492:
+	    else if (ptr = strtry (rsl, "part"))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#255: FILE: devfsd.c:1494:
+			  host, bus, target, lun, atoi (ptr) );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#255: FILE: devfsd.c:1494:
+			  host, bus, target, lun, atoi (ptr) );

WARNING:TABSTOP: Statements should start on a tabstop
#261: FILE: devfsd.c:1498:
+	    else if (ptr = strtry (rsl, "mt"))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#261: FILE: devfsd.c:1498:
+	    else if (ptr = strtry (rsl, "mt"))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#261: FILE: devfsd.c:1498:
+	    else if (ptr = strtry (rsl, "mt"))

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#273: FILE: strtry.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#274: FILE: strtry.h:2:
+/*
+  Tries if a string begins from some prefix. Returns an address of a

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: strtry.h:8:
+    char c;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#281: FILE: strtry.h:9:
+    char c;
+    do if (!(c= *try++)) return (char*)s;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: strtry.h:9:
+    do if (!(c= *try++)) return (char*)s;$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#281: FILE: strtry.h:9:
+    do if (!(c= *try++)) return (char*)s;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#281: FILE: strtry.h:9:
+    do if (!(c= *try++)) return (char*)s;
               ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#281: FILE: strtry.h:9:
+    do if (!(c= *try++)) return (char*)s;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#281: FILE: strtry.h:9:
+    do if (!(c= *try++)) return (char*)s;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: strtry.h:10:
+    while (*s++ == c); return NULL;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000475926.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 27 errors, 58 warnings, 1 checks, 210 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000475926.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
