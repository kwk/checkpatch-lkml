WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
Attached is an update to this patch that includes some ia64 enablining bits last tested way back with 2.5.23.

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 23)
#72: FILE: arch/i386/kernel/i387.c:552:
+		if (tsk == current)
+		       unlazy_fpu(tsk);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#79: FILE: arch/i386/kernel/i387.c:559:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:RETURN_VOID: void function return statements are not generally useful
#85: FILE: arch/i386/kernel/i387.c:565:
+	return;
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#105: FILE: arch/i386/kernel/process.c:377:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#111: FILE: arch/i386/kernel/process.c:383:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#136: FILE: arch/ia64/kernel/process.c:389:
+do_dump_fpu (struct unw_frame_info *info, void *arg)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#142: FILE: arch/ia64/kernel/process.c:395:
+ia64_elf_core_copy_regs (struct pt_regs *pt, elf_gregset_t dst)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#148: FILE: arch/ia64/kernel/process.c:401:
+dump_fpu (struct pt_regs *pt, elf_fpregset_t dst)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#155: FILE: arch/ia64/kernel/process.c:408:
+do_copy_task_regs (struct task_struct *task, struct unw_frame_info *info, void *arg)

CHECK:SPACING: No space is necessary after a cast
#172: FILE: arch/ia64/kernel/process.c:429:
+	ia64_peek(task, info->sw, urbs_end, (long) ia64_rse_rnat_addr((long *) urbs_end),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#181: FILE: arch/ia64/kernel/process.c:478:
+do_dump_task_fpu (struct task_struct *task, struct unw_frame_info *info, void *arg)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#194: FILE: arch/ia64/kernel/process.c:495:
+		memcpy(dst + 32, task->thread.fph, 96*16);
 		                                     ^

ERROR:SPACING: space required before the open parenthesis '('
#204: FILE: arch/ia64/kernel/process.c:502:
+	if(current == task) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#207: FILE: arch/ia64/kernel/process.c:505:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#207: FILE: arch/ia64/kernel/process.c:505:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#208: FILE: arch/ia64/kernel/process.c:506:
+^I^Imemset(&tcore_info, 0, sizeof(tcore_info));^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#218: FILE: arch/ia64/kernel/process.c:514:
+int dump_task_fpu (struct task_struct *task, elf_fpregset_t *dst)

ERROR:SPACING: space required before the open parenthesis '('
#224: FILE: arch/ia64/kernel/process.c:518:
+	if(current == task) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#227: FILE: arch/ia64/kernel/process.c:521:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#227: FILE: arch/ia64/kernel/process.c:521:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#228: FILE: arch/ia64/kernel/process.c:522:
+^I^Imemset(&tcore_info, 0, sizeof(tcore_info));^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#233: FILE: arch/ia64/kernel/process.c:527:
+^Ireturn 1; $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#268: FILE: fs/binfmt_elf.c:1029:
+	memset(elf->e_ident+EI_PAD, 0, EI_NIDENT-EI_PAD);
 	                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#268: FILE: fs/binfmt_elf.c:1029:
+	memset(elf->e_ident+EI_PAD, 0, EI_NIDENT-EI_PAD);
 	                                        ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#284: FILE: fs/binfmt_elf.c:1045:
+	return;
+}

WARNING:RETURN_VOID: void function return statements are not generally useful
#297: FILE: fs/binfmt_elf.c:1058:
+	return;
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#299: FILE: fs/binfmt_elf.c:1060:
+static inline void fill_note(struct memelfnote *note, const char *name, int type, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#300: FILE: fs/binfmt_elf.c:1061:
+static inline void fill_note(struct memelfnote *note, const char *name, int type, 
+		unsigned int sz, void *data)

WARNING:RETURN_VOID: void function return statements are not generally useful
#307: FILE: fs/binfmt_elf.c:1068:
+	return;
+}

WARNING:TYPO_SPELLING: 'seperately' may be misspelled - perhaps 'separately'?
#311: FILE: fs/binfmt_elf.c:1072:
+ * which need to be filled up seperately.
                               ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#313: FILE: fs/binfmt_elf.c:1074:
+static inline void fill_prstatus(struct elf_prstatus *prstatus, struct task_struct *p, long signr) $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#315: FILE: fs/binfmt_elf.c:1076:
+	prstatus->pr_info.si_signo = prstatus->pr_cursig = signr;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#331: FILE: fs/binfmt_elf.c:1092:
+^I$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#337: FILE: fs/binfmt_elf.c:1098:
+		len = ELF_PRARGSZ-1;
 		                 ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#339: FILE: fs/binfmt_elf.c:1100:
+	copy_from_user(&psinfo->pr_psargs,
+		      (const char *)p->mm->arg_start, len);

ERROR:SPACING: space required before the open parenthesis '('
#340: FILE: fs/binfmt_elf.c:1101:
+	for(i = 0; i < len; i++)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#359: FILE: fs/binfmt_elf.c:1120:
+^I$

WARNING:RETURN_VOID: void function return statements are not generally useful
#361: FILE: fs/binfmt_elf.c:1122:
+	return;
+}

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#365: FILE: fs/binfmt_elf.c:1126:
+struct elf_thread_status
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#381: FILE: fs/binfmt_elf.c:1142:
+static int elf_dump_thread_status(long signr, struct task_struct * p, struct list_head * thread_list)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#381: FILE: fs/binfmt_elf.c:1142:
+static int elf_dump_thread_status(long signr, struct task_struct * p, struct list_head * thread_list)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#381: FILE: fs/binfmt_elf.c:1142:
+static int elf_dump_thread_status(long signr, struct task_struct * p, struct list_head * thread_list)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#383: FILE: fs/binfmt_elf.c:1144:
+{
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#395: FILE: fs/binfmt_elf.c:1156:
+^Ielf_core_copy_task_regs(p, &t->prstatus.pr_reg);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#396: FILE: fs/binfmt_elf.c:1157:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around t->prstatus
#397: FILE: fs/binfmt_elf.c:1158:
+	fill_note(&t->notes[0], "CORE", NT_PRSTATUS, sizeof(t->prstatus), &(t->prstatus));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#401: FILE: fs/binfmt_elf.c:1162:
+	if ((t->prstatus.pr_fpvalid = elf_core_copy_task_fpregs(p, &t->fpu))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around t->fpu
#402: FILE: fs/binfmt_elf.c:1163:
+		fill_note(&t->notes[1], "CORE", NT_PRFPREG, sizeof(t->fpu), &(t->fpu));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#413: FILE: fs/binfmt_elf.c:1174:
+#endif^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#454: FILE: fs/binfmt_elf.c:1201:
+ ^Istruct task_struct *g, *p;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#454: FILE: fs/binfmt_elf.c:1201:
+ ^Istruct task_struct *g, *p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#454: FILE: fs/binfmt_elf.c:1201:
+ ^Istruct task_struct *g, *p;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#455: FILE: fs/binfmt_elf.c:1202:
+ ^ILIST_HEAD(thread_list);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#455: FILE: fs/binfmt_elf.c:1202:
+ ^ILIST_HEAD(thread_list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#455: FILE: fs/binfmt_elf.c:1202:
+ ^ILIST_HEAD(thread_list);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#456: FILE: fs/binfmt_elf.c:1203:
+ ^Istruct list_head *t;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#456: FILE: fs/binfmt_elf.c:1203:
+ ^Istruct list_head *t;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#456: FILE: fs/binfmt_elf.c:1203:
+ ^Istruct list_head *t;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#462: FILE: fs/binfmt_elf.c:1209:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#464: FILE: fs/binfmt_elf.c:1211:
+^I * $

WARNING:TYPO_SPELLING: 'proceses' may be misspelled - perhaps 'processes'?
#465: FILE: fs/binfmt_elf.c:1212:
+	 * This because those proceses that could possibly 
 	                      ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#465: FILE: fs/binfmt_elf.c:1212:
+^I * This because those proceses that could possibly $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#481: FILE: fs/binfmt_elf.c:1221:
+  ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#481: FILE: fs/binfmt_elf.c:1221:
+  ^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#481: FILE: fs/binfmt_elf.c:1221:
+  ^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#485: FILE: fs/binfmt_elf.c:1225:
+		do_each_thread(g,p)
 		                ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#488: FILE: fs/binfmt_elf.c:1228:
+				int sz = elf_dump_thread_status(signr, p, &thread_list);
+				if (!sz) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#488: FILE: fs/binfmt_elf.c:1228:
+				if (!sz) {
[...]
+				} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#491: FILE: fs/binfmt_elf.c:1231:
+				} else

ERROR:SPACING: space required after that ',' (ctx:VxV)
#494: FILE: fs/binfmt_elf.c:1234:
+		while_each_thread(g,p);
 		                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#507: FILE: fs/binfmt_elf.c:1242:
+^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#534: FILE: fs/binfmt_elf.c:1250:
+	fill_elf_header(&elf, segs+1); /* including notes section*/
 	                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#599: FILE: fs/binfmt_elf.c:1271:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#601: FILE: fs/binfmt_elf.c:1273:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#601: FILE: fs/binfmt_elf.c:1273:
+  $

ERROR:CODE_INDENT: code indent should use tabs where possible
#602: FILE: fs/binfmt_elf.c:1274:
+  ^I/* Try to dump the FPU. */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#602: FILE: fs/binfmt_elf.c:1274:
+  ^I/* Try to dump the FPU. */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#602: FILE: fs/binfmt_elf.c:1274:
+  ^I/* Try to dump the FPU. */$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#603: FILE: fs/binfmt_elf.c:1275:
+	if ((prstatus.pr_fpvalid = elf_core_copy_task_fpregs(current, &fpu))) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#603: FILE: fs/binfmt_elf.c:1275:
+	if ((prstatus.pr_fpvalid = elf_core_copy_task_fpregs(current, &fpu))) {
[...]
+	} else {
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#607: FILE: fs/binfmt_elf.c:1279:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#607: FILE: fs/binfmt_elf.c:1279:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#607: FILE: fs/binfmt_elf.c:1279:
+ ^I}$

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#609: FILE: fs/binfmt_elf.c:1281:
+	if (elf_core_copy_task_xfpregs(current, &xfpu)) {
[...]
+	} else {
[...]

ERROR:SPACING: space prohibited before that '--' (ctx:WxO)
#615: FILE: fs/binfmt_elf.c:1287:
+	numnote --;
 	        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#616: FILE: fs/binfmt_elf.c:1288:
+#endif^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#617: FILE: fs/binfmt_elf.c:1289:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#617: FILE: fs/binfmt_elf.c:1289:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#625: FILE: fs/binfmt_elf.c:1297:
+^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#647: FILE: fs/binfmt_elf.c:1330:
+ ^I/* write out the notes section */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#647: FILE: fs/binfmt_elf.c:1330:
+ ^I/* write out the notes section */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#647: FILE: fs/binfmt_elf.c:1330:
+ ^I/* write out the notes section */$

WARNING:LINE_SPACING: Missing a blank line after declarations
#655: FILE: fs/binfmt_elf.c:1338:
+		struct elf_thread_status *tmp = list_entry(t, struct elf_thread_status, list);
+		for (i = 0; i < tmp->num_notes; i++)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#659: FILE: fs/binfmt_elf.c:1342:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#659: FILE: fs/binfmt_elf.c:1342:
+ $

ERROR:SPACING: space required before the open parenthesis '('
#673: FILE: fs/binfmt_elf.c:1390:
+	while(!list_empty(&thread_list)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#675: FILE: fs/binfmt_elf.c:1392:
+		struct list_head *tmp = thread_list.next;
+		list_del(tmp);

WARNING:INCLUDE_LINUX: Use #include <linux/processor.h> instead of <asm/processor.h>
#692: FILE: include/asm-i386/elf.h:10:
+#include <asm/processor.h>

ERROR:SPACING: space required after that ',' (ctx:VxV)
#700: FILE: include/asm-i386/elf.h:63:
+#define savesegment(seg,value) \
                        ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#700: FILE: include/asm-i386/elf.h:63:
+#define savesegment(seg,value) \
+	asm volatile("movl %%" #seg ",%0":"=m" (*(int *)&(value)))

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#701: FILE: include/asm-i386/elf.h:64:
+	asm volatile("movl %%" #seg ",%0":"=m" (*(int *)&(value)))
 	                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#713: FILE: include/asm-i386/elf.h:79:
+	savesegment(fs,pr_reg[9]);			\
 	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#714: FILE: include/asm-i386/elf.h:80:
+	savesegment(gs,pr_reg[10]);			\
 	              ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#723: FILE: include/asm-i386/elf.h:106:
+extern int dump_task_regs (struct task_struct *, elf_gregset_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#723: FILE: include/asm-i386/elf.h:106:
+extern int dump_task_regs (struct task_struct *, elf_gregset_t *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#723: FILE: include/asm-i386/elf.h:106:
+extern int dump_task_regs (struct task_struct *, elf_gregset_t *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'elf_gregset_t *' should also have an identifier name
#723: FILE: include/asm-i386/elf.h:106:
+extern int dump_task_regs (struct task_struct *, elf_gregset_t *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#724: FILE: include/asm-i386/elf.h:107:
+extern int dump_task_fpu (struct task_struct *, elf_fpregset_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#724: FILE: include/asm-i386/elf.h:107:
+extern int dump_task_fpu (struct task_struct *, elf_fpregset_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#724: FILE: include/asm-i386/elf.h:107:
+extern int dump_task_fpu (struct task_struct *, elf_fpregset_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'elf_fpregset_t *' should also have an identifier name
#724: FILE: include/asm-i386/elf.h:107:
+extern int dump_task_fpu (struct task_struct *, elf_fpregset_t *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#725: FILE: include/asm-i386/elf.h:108:
+extern int dump_task_extended_fpu (struct task_struct *, struct user_fxsr_struct *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#725: FILE: include/asm-i386/elf.h:108:
+extern int dump_task_extended_fpu (struct task_struct *, struct user_fxsr_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#725: FILE: include/asm-i386/elf.h:108:
+extern int dump_task_extended_fpu (struct task_struct *, struct user_fxsr_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct user_fxsr_struct *' should also have an identifier name
#725: FILE: include/asm-i386/elf.h:108:
+extern int dump_task_extended_fpu (struct task_struct *, struct user_fxsr_struct *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#732: FILE: include/asm-i386/elf.h:115:
+extern void dump_smp_unlazy_fpu(void);

WARNING:NEW_TYPEDEFS: do not add new typedefs
#746: FILE: include/asm-ia64/elf.h:68:
+typedef unsigned long elf_fpxregset_t;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#754: FILE: include/asm-ia64/elf.h:76:
 
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#764: FILE: include/asm-ia64/elf.h:96:
+extern int dump_task_regs(struct task_struct *, elf_gregset_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#764: FILE: include/asm-ia64/elf.h:96:
+extern int dump_task_regs(struct task_struct *, elf_gregset_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'elf_gregset_t *' should also have an identifier name
#764: FILE: include/asm-ia64/elf.h:96:
+extern int dump_task_regs(struct task_struct *, elf_gregset_t *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#765: FILE: include/asm-ia64/elf.h:97:
+extern int dump_task_fpu (struct task_struct *, elf_fpregset_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#765: FILE: include/asm-ia64/elf.h:97:
+extern int dump_task_fpu (struct task_struct *, elf_fpregset_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#765: FILE: include/asm-ia64/elf.h:97:
+extern int dump_task_fpu (struct task_struct *, elf_fpregset_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'elf_fpregset_t *' should also have an identifier name
#765: FILE: include/asm-ia64/elf.h:97:
+extern int dump_task_fpu (struct task_struct *, elf_fpregset_t *);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#770: FILE: include/asm-ia64/elf.h:102:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#808: FILE: include/linux/elfcore.h:94:
+	BUG_ON(sizeof(*elfregs) != sizeof(*regs));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#813: FILE: include/linux/elfcore.h:99:
+static inline int elf_core_copy_task_regs(struct task_struct *t, elf_gregset_t* elfregs)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#816: FILE: include/linux/elfcore.h:102:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#822: FILE: include/linux/elfcore.h:108:
+extern int dump_fpu (struct pt_regs *, elf_fpregset_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#822: FILE: include/linux/elfcore.h:108:
+extern int dump_fpu (struct pt_regs *, elf_fpregset_t *);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#842: FILE: include/linux/elfcore.h:128:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000425322.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 49 errors, 56 warnings, 28 checks, 751 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000425322.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
