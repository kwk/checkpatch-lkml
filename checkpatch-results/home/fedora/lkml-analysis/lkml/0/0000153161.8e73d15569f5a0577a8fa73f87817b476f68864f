WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
      - Support journals ($LogFile) which have been modified by chkdsk.  This

WARNING:DEPRECATED_VARIABLE: Use of EXTRA_CFLAGS is deprecated, please use `ccflags-y instead.
#84: FILE: fs/ntfs/Makefile:9:
+EXTRA_CFLAGS = -DNTFS_VERSION=\"2.1.24-WIP\"

EXTRA_{A,C,CPP,LD}FLAGS are deprecated and should be replaced by the new
flags added via commit f77bf01425b1 ("kbuild: introduce ccflags-y,
asflags-y and ldflags-y").

The following conversion scheme maybe used::

  EXTRA_AFLAGS    ->  asflags-y
  EXTRA_CFLAGS    ->  ccflags-y
  EXTRA_CPPFLAGS  ->  cppflags-y
  EXTRA_LDFLAGS   ->  ldflags-y

See:

  1. https://lore.kernel.org/lkml/20070930191054.GA15876@uranus.ravnborg.org/
  2. https://lore.kernel.org/lkml/1313384834-24433-12-git-send-email-lacombar@gmail.com/
  3. https://www.kernel.org/doc/html/latest/kbuild/makefiles.html#compilation-flags

WARNING:SPLIT_STRING: quoted string split across lines
#96: FILE: fs/ntfs/logfile.c:124:
 		ntfs_error(vi->i_sb, "$LogFile restart page is not modified "
+				"by chkdsk but a chkdsk LSN is specified.");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:TYPO_SPELLING: 'succes' may be misspelled - perhaps 'success'?
#121: FILE: fs/ntfs/logfile.c:329:
+ * Simillarly, if @lsn is not NULL, on succes *@lsn will be set to the current
                                        ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#127: FILE: fs/ntfs/logfile.c:335:
+ *	-EIO	- Failed to reading from $LogFile.

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#132: FILE: fs/ntfs/logfile.c:338:
+static int ntfs_check_and_load_restart_page(struct inode *vi,
+		RESTART_PAGE_HEADER *rp, s64 pos, RESTART_PAGE_HEADER **wrp,

WARNING:TYPO_SPELLING: 'tranfer' may be misspelled - perhaps 'transfer'?
#190: FILE: fs/ntfs/logfile.c:409:
+		 * A multi sector tranfer error was detected.  We only need to
 		                  ^^^^^^^

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#198: FILE: fs/ntfs/logfile.c:417:
+					"detected in $LogFile restart page.");

WARNING:SPLIT_STRING: quoted string split across lines
#198: FILE: fs/ntfs/logfile.c:417:
+			ntfs_error(vi->i_sb, "Multi sector transfer error "
+					"detected in $LogFile restart page.");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#210: FILE: fs/ntfs/logfile.c:429:
+	if (ntfs_is_rstr_record(rp->magic) &&
+			ra->client_in_use_list != LOGFILE_NO_CLIENT) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#224: FILE: fs/ntfs/logfile.c:442:
+	if (wrp)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#226: FILE: fs/ntfs/logfile.c:444:
+	else {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#298: FILE: fs/ntfs/logfile.c:554:
+		if (!ntfs_is_rstr_recordp((le32*)kaddr) &&

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#299: FILE: fs/ntfs/logfile.c:555:
+		if (!ntfs_is_rstr_recordp((le32*)kaddr) &&
+				!ntfs_is_chkd_recordp((le32*)kaddr)) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#299: FILE: fs/ntfs/logfile.c:555:
+				!ntfs_is_chkd_recordp((le32*)kaddr)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#326: FILE: fs/ntfs/logfile.c:566:
+		err = ntfs_check_and_load_restart_page(log_vi,
 				(RESTART_PAGE_HEADER*)kaddr, pos,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#392: FILE: fs/ntfs/logfile.c:606:
+		BUG_ON(rstr2_ph);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#394: FILE: fs/ntfs/logfile.c:608:
+				"$LogFile and it was not empty.");

WARNING:SPLIT_STRING: quoted string split across lines
#394: FILE: fs/ntfs/logfile.c:608:
+		ntfs_error(vol->sb, "Did not find any restart pages in "
+				"$LogFile and it was not empty.");

CHECK:BRACES: braces {} should be used on all arms of this statement
#403: FILE: fs/ntfs/logfile.c:617:
+		if (rstr2_lsn > rstr1_lsn) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#407: FILE: fs/ntfs/logfile.c:621:
+		} else

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#471: FILE: fs/ntfs/logfile.c:669:
+	BUG_ON(!rp);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#473: FILE: fs/ntfs/logfile.c:671:
+	if (!ntfs_is_rstr_record(rp->magic) &&
+			!ntfs_is_chkd_record(rp->magic)) {

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#475: FILE: fs/ntfs/logfile.c:673:
+				"probably a bug in that the $LogFile should "

WARNING:SPLIT_STRING: quoted string split across lines
#475: FILE: fs/ntfs/logfile.c:673:
+		ntfs_error(vol->sb, "Restart page buffer is invalid.  This is "
+				"probably a bug in that the $LogFile should "

WARNING:SPLIT_STRING: quoted string split across lines
#476: FILE: fs/ntfs/logfile.c:674:
+				"probably a bug in that the $LogFile should "
+				"have been consistency checked before calling "

WARNING:SPLIT_STRING: quoted string split across lines
#477: FILE: fs/ntfs/logfile.c:675:
+				"have been consistency checked before calling "
+				"this function.");

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#516: FILE: fs/ntfs/logfile.h:299:
+extern BOOL ntfs_check_logfile(struct inode *log_vi,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#517: FILE: fs/ntfs/logfile.h:300:
+extern BOOL ntfs_check_logfile(struct inode *log_vi,
+		RESTART_PAGE_HEADER **rp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#520: FILE: fs/ntfs/logfile.h:302:
+extern BOOL ntfs_is_logfile_clean(struct inode *log_vi,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#521: FILE: fs/ntfs/logfile.h:303:
+extern BOOL ntfs_is_logfile_clean(struct inode *log_vi,
+		const RESTART_PAGE_HEADER *rp);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#534: FILE: fs/ntfs/super.c:1137:
+static BOOL load_and_check_logfile(ntfs_volume *vol,
+		RESTART_PAGE_HEADER **rp)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#563: FILE: fs/ntfs/super.c:1848:
+	if (!load_and_check_logfile(vol, &rp) ||
+			!ntfs_is_logfile_clean(vol->logfile_ino, rp)) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#572: FILE: fs/ntfs/super.c:1864:
+					BUG_ON(!rp);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000153161.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 17 warnings, 15 checks, 496 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000153161.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
