WARNING:TYPO_SPELLING: 'chello' may be misspelled - perhaps 'cello'?
#29: 
From: Peter Zijlstra <a.p.zijlstra@chello.nl>
                                   ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#174: FILE: mm/memory.c:1472:
+	if (unlikely((vma->vm_flags & (VM_WRITE|VM_SHARED)) ==
 	                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#175: FILE: mm/memory.c:1473:
+					(VM_WRITE|VM_SHARED))) {
 					         ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#262: FILE: mm/mmap.c:1070:
+	vma->vm_page_prot = vm_page_prot = protection_map[vm_flags &

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#263: FILE: mm/mmap.c:1071:
+		(VM_READ|VM_WRITE|VM_EXEC|VM_SHARED)];
 		        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#263: FILE: mm/mmap.c:1071:
+		(VM_READ|VM_WRITE|VM_EXEC|VM_SHARED)];
 		                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#263: FILE: mm/mmap.c:1071:
+		(VM_READ|VM_WRITE|VM_EXEC|VM_SHARED)];
 		                         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#304: FILE: mm/mmap.c:1132:
+	     ((vm_flags & (VM_WRITE|VM_SHARED|VM_PFNMAP|VM_INSERTPAGE)) ==
 	                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#304: FILE: mm/mmap.c:1132:
+	     ((vm_flags & (VM_WRITE|VM_SHARED|VM_PFNMAP|VM_INSERTPAGE)) ==
 	                                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#304: FILE: mm/mmap.c:1132:
+	     ((vm_flags & (VM_WRITE|VM_SHARED|VM_PFNMAP|VM_INSERTPAGE)) ==
 	                                               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#305: FILE: mm/mmap.c:1133:
+			  (VM_WRITE|VM_SHARED)) &&
 			           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#310: FILE: mm/mmap.c:1138:
+			protection_map[vm_flags & (VM_READ|VM_WRITE|VM_EXEC)];
 			                                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#310: FILE: mm/mmap.c:1138:
+			protection_map[vm_flags & (VM_READ|VM_WRITE|VM_EXEC)];
 			                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#343: FILE: mm/mprotect.c:189:
+	if ((((newflags & (VM_WRITE|VM_SHARED|VM_PFNMAP|VM_INSERTPAGE)) ==
 	                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#343: FILE: mm/mprotect.c:189:
+	if ((((newflags & (VM_WRITE|VM_SHARED|VM_PFNMAP|VM_INSERTPAGE)) ==
 	                                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#343: FILE: mm/mprotect.c:189:
+	if ((((newflags & (VM_WRITE|VM_SHARED|VM_PFNMAP|VM_INSERTPAGE)) ==
 	                                               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#344: FILE: mm/mprotect.c:190:
+			  (VM_WRITE|VM_SHARED)) &&
 			           ^

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#421: FILE: mm/rmap.c:443:
+	spinlock_t *ptl;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#456: FILE: mm/rmap.c:478:
+	BUG_ON(PageAnon(page));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#461: FILE: mm/rmap.c:483:
+			((vma->vm_flags & (VM_WRITE|VM_SHARED)) ==
 			                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#462: FILE: mm/rmap.c:484:
+			 (VM_WRITE|VM_SHARED));
 			          ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#463: FILE: mm/rmap.c:485:
+		BUG_ON(vma->vm_flags & (VM_PFNMAP|VM_INSERTPAGE));

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#463: FILE: mm/rmap.c:485:
+		BUG_ON(vma->vm_flags & (VM_PFNMAP|VM_INSERTPAGE));
 		                                 ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#474: FILE: mm/rmap.c:496:
+	BUG_ON(!PageLocked(page));

WARNING:LINE_SPACING: Missing a blank line after declarations
#478: FILE: mm/rmap.c:500:
+		struct address_space *mapping = page_mapping(page);
+		if (mapping)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#502: FILE: include/linux/rmap.h:112:
+int page_mkclean(struct page *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000065565.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 6 warnings, 20 checks, 325 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000065565.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
