WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
Actually, it does not, due to the cpumask_t -> unsigned long change. This one

CHECK:LINE_SPACING: Please don't use multiple blank lines
#68: FILE: arch/i386/kernel/timers/timer_tsc.c:137:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#79: FILE: arch/i386/kernel/smpboot.c:918:
+	cache_decay_ticks = (long)cacheflush_time/cpu_khz + 1;
 	                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#106: FILE: include/linux/sched.h:515:
+extern unsigned long long sched_clock(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#128: FILE: kernel/sched.c:71:
+#define TIMESLICE_GRANULARITY	(HZ/20 ?: 1)
                              	   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#135: FILE: kernel/sched.c:77:
+#define MAX_SLEEP_AVG		(2*1000000000)
                      		  ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#143: FILE: kernel/sched.c:119:
+#define TASK_PREEMPTS_CURR(p, rq) \
+	((p)->prio < (rq)->curr->prio || \
+		((p)->prio == (rq)->curr->prio && \
+			(p)->time_slice > (rq)->curr->time_slice * 2))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'rq' - possible side-effects?
#143: FILE: kernel/sched.c:119:
+#define TASK_PREEMPTS_CURR(p, rq) \
+	((p)->prio < (rq)->curr->prio || \
+		((p)->prio == (rq)->curr->prio && \
+			(p)->time_slice > (rq)->curr->time_slice * 2))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#157: FILE: kernel/sched.c:328:
+	bonus = MAX_USER_PRIO*PRIO_BONUS_RATIO*(p->sleep_avg/1024)/(MAX_SLEEP_AVG/1024)/100;
 	                     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#157: FILE: kernel/sched.c:328:
+	bonus = MAX_USER_PRIO*PRIO_BONUS_RATIO*(p->sleep_avg/1024)/(MAX_SLEEP_AVG/1024)/100;
 	                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#157: FILE: kernel/sched.c:328:
+	bonus = MAX_USER_PRIO*PRIO_BONUS_RATIO*(p->sleep_avg/1024)/(MAX_SLEEP_AVG/1024)/100;
 	                                                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#157: FILE: kernel/sched.c:328:
+	bonus = MAX_USER_PRIO*PRIO_BONUS_RATIO*(p->sleep_avg/1024)/(MAX_SLEEP_AVG/1024)/100;
 	                                                          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#157: FILE: kernel/sched.c:328:
+	bonus = MAX_USER_PRIO*PRIO_BONUS_RATIO*(p->sleep_avg/1024)/(MAX_SLEEP_AVG/1024)/100;
 	                                                                         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#157: FILE: kernel/sched.c:328:
+	bonus = MAX_USER_PRIO*PRIO_BONUS_RATIO*(p->sleep_avg/1024)/(MAX_SLEEP_AVG/1024)/100;
 	                                                                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#158: FILE: kernel/sched.c:329:
+	bonus -= MAX_USER_PRIO*PRIO_BONUS_RATIO/100/2;
 	                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#158: FILE: kernel/sched.c:329:
+	bonus -= MAX_USER_PRIO*PRIO_BONUS_RATIO/100/2;
 	                                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#158: FILE: kernel/sched.c:329:
+	bonus -= MAX_USER_PRIO*PRIO_BONUS_RATIO/100/2;
 	                                           ^

WARNING:LONG_LINE: line length of 129 exceeds 100 columns
#247: FILE: kernel/sched.c:618:
+		p->parent->sleep_avg = p->parent->sleep_avg / (EXIT_WEIGHT + 1) * EXIT_WEIGHT + p->sleep_avg / (EXIT_WEIGHT + 1);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#288: FILE: kernel/sched.c:1076:
+	((!idle || (((now - (p)->timestamp)>>10) > cache_decay_ticks)) &&\
 	                                   ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#316: FILE: kernel/sched.c:1264:
+		if (!TASK_INTERACTIVE(p) || EXPIRED_STARVING(rq) || 0) {
[...]
 		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->array == rq->active'
#336: FILE: kernel/sched.c:1284:
+		if (!(p->time_slice % TIMESLICE_GRANULARITY) &&
+			       		(p->array == rq->active)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:CODE_INDENT: code indent should use tabs where possible
#337: FILE: kernel/sched.c:1285:
+^I^I^I       ^I^I(p->array == rq->active)) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#337: FILE: kernel/sched.c:1285:
+^I^I^I       ^I^I(p->array == rq->active)) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#337: FILE: kernel/sched.c:1285:
+		if (!(p->time_slice % TIMESLICE_GRANULARITY) &&
+			       		(p->array == rq->active)) {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#398: FILE: kernel/sched.c:2422:
+typedef struct {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#422: FILE: kernel/sched.c:2447:
+	BUG_ON(smp_processor_id() != cpu);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: No space is necessary after a cast
#441: FILE: kernel/sched.c:2487:
+	long cpu = (long) hcpu;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#451: FILE: kernel/sched.c:2493:
+		printk("Starting migration thread for cpu %li\n", cpu);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000351436.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 6 warnings, 21 checks, 393 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000351436.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
