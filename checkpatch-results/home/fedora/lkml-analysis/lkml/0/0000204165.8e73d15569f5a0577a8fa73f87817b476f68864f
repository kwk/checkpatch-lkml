WARNING:TYPO_SPELLING: 'extened' may be misspelled - perhaps 'extended'?
#50: 
memory space, and offers extened UART register mapping beyond the 
                         ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#75: FILE: drivers/serial/jsm/jsm_driver.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#83: FILE: drivers/serial/jsm/jsm_driver.c:9:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#85: FILE: drivers/serial/jsm/jsm_driver.c:11:
+ * but WITHOUT ANY WARRANTY, EXPRESS OR IMPLIED; without even the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#86: FILE: drivers/serial/jsm/jsm_driver.c:12:
+ * implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#88: FILE: drivers/serial/jsm/jsm_driver.c:14:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#90: FILE: drivers/serial/jsm/jsm_driver.c:16:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#91: FILE: drivers/serial/jsm/jsm_driver.c:17:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#104: FILE: drivers/serial/jsm/jsm_driver.c:30:
+ * $Id: jsm_driver.c,v 1.57 2004/08/31 19:41:34 scottk Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#108: FILE: drivers/serial/jsm/jsm_driver.c:34:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#128: FILE: drivers/serial/jsm/jsm_driver.c:54:
+#define NR_PORTS^I32 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#129: FILE: drivers/serial/jsm/jsm_driver.c:55:
+#define JSM_MINOR_START^I0 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#134: FILE: drivers/serial/jsm/jsm_driver.c:60:
+^I.dev_name = "ttyn", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#136: FILE: drivers/serial/jsm/jsm_driver.c:62:
+^I.minor = JSM_MINOR_START, $

WARNING:TYPO_SPELLING: 'overrideable' may be misspelled - perhaps 'overridable'?
#142: FILE: drivers/serial/jsm/jsm_driver.c:68:
+ * insmod command line overrideable parameters
                        ^^^^^^^^^^^^

ERROR:NON_OCTAL_PERMISSIONS: Use 4 digit octal (0777) not decimal permissions
#151: FILE: drivers/serial/jsm/jsm_driver.c:77:
+module_param(rawreadok, int, 1);
Permission bits should use 4 digit octal permissions (like 0700 or 0444).
Avoid using any other base like decimal.

CHECK:CAMELCASE: Avoid CamelCase: <jsm_BoardFops>
#166: FILE: drivers/serial/jsm/jsm_driver.c:92:
+static struct file_operations jsm_BoardFops =

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:CONST_STRUCT: struct file_operations should normally be const
#166: FILE: drivers/serial/jsm/jsm_driver.c:92:
+static struct file_operations jsm_BoardFops =

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#167: FILE: drivers/serial/jsm/jsm_driver.c:93:
+static struct file_operations jsm_BoardFops =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#177: FILE: drivers/serial/jsm/jsm_driver.c:103:
+uint		jsm_NumBoards,current_NumBoards;
     		             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <jsm_NumBoards>
#177: FILE: drivers/serial/jsm/jsm_driver.c:103:
+uint		jsm_NumBoards,current_NumBoards;

CHECK:CAMELCASE: Avoid CamelCase: <current_NumBoards>
#177: FILE: drivers/serial/jsm/jsm_driver.c:103:
+uint		jsm_NumBoards,current_NumBoards;

CHECK:CAMELCASE: Avoid CamelCase: <jsm_Board>
#178: FILE: drivers/serial/jsm/jsm_driver.c:104:
+struct board_t	*jsm_Board[MAXBOARDS];

CHECK:CAMELCASE: Avoid CamelCase: <jsm_Major>
#183: FILE: drivers/serial/jsm/jsm_driver.c:109:
+uint		jsm_Major;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#224: FILE: drivers/serial/jsm/jsm_driver.c:150:
+static struct board_id jsm_Ids[] = {^I$

CHECK:CAMELCASE: Avoid CamelCase: <jsm_Ids>
#224: FILE: drivers/serial/jsm/jsm_driver.c:150:
+static struct board_id jsm_Ids[] = {	

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#272: FILE: drivers/serial/jsm/jsm_driver.c:198:
+		jsm_board_slot[i] = (char *)kmalloc(20, GFP_KERNEL);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#304: FILE: drivers/serial/jsm/jsm_driver.c:230:
+		if (jsm_Board[i] == NULL) continue;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!jsm_Board[i]"
#304: FILE: drivers/serial/jsm/jsm_driver.c:230:
+		if (jsm_Board[i] == NULL) continue;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: No space is necessary after a cast
#331: FILE: drivers/serial/jsm/jsm_driver.c:257:
+		if ((ulong) time >= 2 * jsm_poll_tick)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#400: FILE: drivers/serial/jsm/jsm_driver.c:326:
+static int jsm_finalize_board_init(struct board_t *brd) $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'jsm_finalize_board_init', this function's name, in a string
#404: FILE: drivers/serial/jsm/jsm_driver.c:330:
+	DPR_INIT(("jsm_finalize_board_init() - start\n"));

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'jsm_finalize_board_init', this function's name, in a string
#409: FILE: drivers/serial/jsm/jsm_driver.c:335:
+	DPR_INIT(("jsm_finalize_board_init() - start #2\n"));

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#412: FILE: drivers/serial/jsm/jsm_driver.c:338:
+		rc = request_irq(brd->irq, brd->bd_ops->intr, SA_INTERRUPT|SA_SHIRQ, "JSM", brd);
 		                                                          ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#415: FILE: drivers/serial/jsm/jsm_driver.c:341:
+			printk(KERN_WARNING "Failed to hook IRQ %d\n",brd->irq);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#415: FILE: drivers/serial/jsm/jsm_driver.c:341:
+			printk(KERN_WARNING "Failed to hook IRQ %d\n",brd->irq);
 			                                             ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#450: FILE: drivers/serial/jsm/jsm_driver.c:376:
+	brd = jsm_Board[wen_board] =

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#451: FILE: drivers/serial/jsm/jsm_driver.c:377:
+	(struct board_t *)kmalloc(sizeof(struct board_t), GFP_KERNEL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#469: FILE: drivers/serial/jsm/jsm_driver.c:395:
+	strcpy(jsm_board_slot[wen_board],pdev->slot_name);
 	                                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#477: FILE: drivers/serial/jsm/jsm_driver.c:403:
+^Ifor (i = 0; i < MAXPORTS; i++) $

ERROR:SPACING: space required before the open parenthesis '('
#488: FILE: drivers/serial/jsm/jsm_driver.c:414:
+	switch(brd->device) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#489: FILE: drivers/serial/jsm/jsm_driver.c:415:
+	switch(brd->device) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#502: FILE: drivers/serial/jsm/jsm_driver.c:428:
+^I^I * No need to enable global interrupts or anything. $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'jsm_found_board', this function's name, in a string
#506: FILE: drivers/serial/jsm/jsm_driver.c:432:
+		DPR_INIT(("jsm_found_board - NEO.\n"));

CHECK:SPACING: No space is necessary after a cast
#575: FILE: drivers/serial/jsm/jsm_driver.c:501:
+	tasklet_init(&brd->helper_tasklet, brd->bd_ops->tasklet, (unsigned long) brd);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#578: FILE: drivers/serial/jsm/jsm_driver.c:504:
+	APR(("board %d: %s (rev %d), irq %d\n",wen_board, brd->name, brd->rev, brd->irq));
 	                                      ^

CHECK:SPACING: No space is necessary after a cast
#605: FILE: drivers/serial/jsm/jsm_driver.c:531:
+	iounmap((void *) brd->re_map_membase);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#609: FILE: drivers/serial/jsm/jsm_driver.c:535:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#624: FILE: drivers/serial/jsm/jsm_driver.c:550:
+^I} $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#626: FILE: drivers/serial/jsm/jsm_driver.c:552:
+	if ((rc = jsm_probe1(pdev, ent->driver_data))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#629: FILE: drivers/serial/jsm/jsm_driver.c:555:
+^I ^Ireturn rc;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#629: FILE: drivers/serial/jsm/jsm_driver.c:555:
+^I ^Ireturn rc;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#634: FILE: drivers/serial/jsm/jsm_driver.c:560:
+
+

WARNING:SPACING: space prohibited before semicolon
#645: FILE: drivers/serial/jsm/jsm_driver.c:571:
+		return ;

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#661: FILE: drivers/serial/jsm/jsm_driver.c:587:
+			if (brd->channels[i]->ch_rqueue)
+				kfree(brd->channels[i]->ch_rqueue);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#663: FILE: drivers/serial/jsm/jsm_driver.c:589:
+			if (brd->channels[i]->ch_equeue)
+				kfree(brd->channels[i]->ch_equeue);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#665: FILE: drivers/serial/jsm/jsm_driver.c:591:
+			if (brd->channels[i]->ch_wqueue)
+				kfree(brd->channels[i]->ch_wqueue);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#673: FILE: drivers/serial/jsm/jsm_driver.c:599:
+	if (brd->flipbuf)
+		kfree(brd->flipbuf);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'jsm_Board[i] != NULL'
#686: FILE: drivers/serial/jsm/jsm_driver.c:612:
+		if ((jsm_Board[i] != NULL) && (jsm_Board[i]->pci_dev == dev)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'jsm_Board[i]->pci_dev == dev'
#686: FILE: drivers/serial/jsm/jsm_driver.c:612:
+		if ((jsm_Board[i] != NULL) && (jsm_Board[i]->pci_dev == dev)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "jsm_Board[i]"
#686: FILE: drivers/serial/jsm/jsm_driver.c:612:
+		if ((jsm_Board[i] != NULL) && (jsm_Board[i]->pci_dev == dev)) {

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#705: FILE: drivers/serial/jsm/jsm_driver.c:631:
+	APR(("%s, Digi International Part Number %s\n", "jsm: 1.1-1-INKERNEL", "40002438_A-INKERNEL"));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#711: FILE: drivers/serial/jsm/jsm_driver.c:637:
+^Iif (rc < 0) $

ERROR:SPACING: space required before the open parenthesis '('
#762: FILE: drivers/serial/jsm/jsm_driver.c:688:
+	switch(cmd) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#763: FILE: drivers/serial/jsm/jsm_driver.c:689:
+	switch(cmd) {
+

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#764: FILE: drivers/serial/jsm/jsm_driver.c:690:
+	case TCGETA:		return("TCGETA");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#765: FILE: drivers/serial/jsm/jsm_driver.c:691:
+	case TCGETS:		return("TCGETS");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#766: FILE: drivers/serial/jsm/jsm_driver.c:692:
+	case TCSETA:		return("TCSETA");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#767: FILE: drivers/serial/jsm/jsm_driver.c:693:
+	case TCSETS:		return("TCSETS");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#768: FILE: drivers/serial/jsm/jsm_driver.c:694:
+	case TCSETAW:		return("TCSETAW");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#769: FILE: drivers/serial/jsm/jsm_driver.c:695:
+	case TCSETSW:		return("TCSETSW");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#770: FILE: drivers/serial/jsm/jsm_driver.c:696:
+	case TCSETAF:		return("TCSETAF");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#771: FILE: drivers/serial/jsm/jsm_driver.c:697:
+	case TCSETSF:		return("TCSETSF");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#772: FILE: drivers/serial/jsm/jsm_driver.c:698:
+	case TCSBRK:		return("TCSBRK");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#773: FILE: drivers/serial/jsm/jsm_driver.c:699:
+	case TCXONC:		return("TCXONC");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#774: FILE: drivers/serial/jsm/jsm_driver.c:700:
+	case TCFLSH:		return("TCFLSH");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#775: FILE: drivers/serial/jsm/jsm_driver.c:701:
+	case TIOCGSID:		return("TIOCGSID");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#777: FILE: drivers/serial/jsm/jsm_driver.c:703:
+	case TIOCGETD:		return("TIOCGETD");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#778: FILE: drivers/serial/jsm/jsm_driver.c:704:
+	case TIOCSETD:		return("TIOCSETD");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#779: FILE: drivers/serial/jsm/jsm_driver.c:705:
+	case TIOCGWINSZ:	return("TIOCGWINSZ");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#780: FILE: drivers/serial/jsm/jsm_driver.c:706:
+	case TIOCSWINSZ:	return("TIOCSWINSZ");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#782: FILE: drivers/serial/jsm/jsm_driver.c:708:
+	case TIOCMGET:		return("TIOCMGET");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#783: FILE: drivers/serial/jsm/jsm_driver.c:709:
+	case TIOCMSET:		return("TIOCMSET");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#784: FILE: drivers/serial/jsm/jsm_driver.c:710:
+	case TIOCMBIS:		return("TIOCMBIS");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#785: FILE: drivers/serial/jsm/jsm_driver.c:711:
+	case TIOCMBIC:		return("TIOCMBIC");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#788: FILE: drivers/serial/jsm/jsm_driver.c:714:
+	case DIGI_SETA:		return("DIGI_SETA");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#789: FILE: drivers/serial/jsm/jsm_driver.c:715:
+	case DIGI_SETAW:	return("DIGI_SETAW");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#790: FILE: drivers/serial/jsm/jsm_driver.c:716:
+	case DIGI_SETAF:	return("DIGI_SETAF");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#791: FILE: drivers/serial/jsm/jsm_driver.c:717:
+	case DIGI_SETFLOW:	return("DIGI_SETFLOW");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#792: FILE: drivers/serial/jsm/jsm_driver.c:718:
+	case DIGI_SETAFLOW:	return("DIGI_SETAFLOW");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#793: FILE: drivers/serial/jsm/jsm_driver.c:719:
+	case DIGI_GETFLOW:	return("DIGI_GETFLOW");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#794: FILE: drivers/serial/jsm/jsm_driver.c:720:
+	case DIGI_GETAFLOW:	return("DIGI_GETAFLOW");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#795: FILE: drivers/serial/jsm/jsm_driver.c:721:
+	case DIGI_GETA:		return("DIGI_GETA");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#796: FILE: drivers/serial/jsm/jsm_driver.c:722:
+	case DIGI_GEDELAY:	return("DIGI_GEDELAY");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#797: FILE: drivers/serial/jsm/jsm_driver.c:723:
+	case DIGI_SEDELAY:	return("DIGI_SEDELAY");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#798: FILE: drivers/serial/jsm/jsm_driver.c:724:
+	case DIGI_GETCUSTOMBAUD: return("DIGI_GETCUSTOMBAUD");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#799: FILE: drivers/serial/jsm/jsm_driver.c:725:
+	case DIGI_SETCUSTOMBAUD: return("DIGI_SETCUSTOMBAUD");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#800: FILE: drivers/serial/jsm/jsm_driver.c:726:
+	case TIOCMODG:		return("TIOCMODG");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#801: FILE: drivers/serial/jsm/jsm_driver.c:727:
+	case TIOCMODS:		return("TIOCMODS");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#802: FILE: drivers/serial/jsm/jsm_driver.c:728:
+	case TIOCSDTR:		return("TIOCSDTR");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#803: FILE: drivers/serial/jsm/jsm_driver.c:729:
+	case TIOCCDTR:		return("TIOCCDTR");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#805: FILE: drivers/serial/jsm/jsm_driver.c:731:
+	default:		return("unknown");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000204165.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 64 errors, 18 warnings, 20 checks, 733 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000204165.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
