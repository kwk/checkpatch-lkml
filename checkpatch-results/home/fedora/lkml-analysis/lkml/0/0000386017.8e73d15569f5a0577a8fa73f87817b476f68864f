ERROR:TRAILING_WHITESPACE: trailing whitespace
#79: FILE: fs/ext2/balloc.c:97:
+static inline int group_reserve_blocks(struct ext2_sb_info *sbi, struct ext2_bg_info *bgi, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#80: FILE: fs/ext2/balloc.c:98:
+static inline int group_reserve_blocks(struct ext2_sb_info *sbi, struct ext2_bg_info *bgi, 
+					struct ext2_group_desc *desc,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#87: FILE: fs/ext2/balloc.c:101:
+	unsigned free_blocks;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#88: FILE: fs/ext2/balloc.c:102:
+	unsigned root_blocks;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#91: FILE: fs/ext2/balloc.c:105:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#129: FILE: fs/ext2/balloc.c:116:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#130: FILE: fs/ext2/balloc.c:117:
+        if (free_blocks < root_blocks + count && !capable(CAP_SYS_RESOURCE) &&$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: fs/ext2/balloc.c:117:
+        if (free_blocks < root_blocks + count && !capable(CAP_SYS_RESOURCE) &&$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sbi->s_resgid'
#130: FILE: fs/ext2/balloc.c:117:
+        if (free_blocks < root_blocks + count && !capable(CAP_SYS_RESOURCE) &&
+            sbi->s_resuid != current->fsuid &&
+            (sbi->s_resgid == 0 || !in_group_p (sbi->s_resgid))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:CODE_INDENT: code indent should use tabs where possible
#131: FILE: fs/ext2/balloc.c:118:
+            sbi->s_resuid != current->fsuid &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: fs/ext2/balloc.c:118:
+            sbi->s_resuid != current->fsuid &&$

ERROR:CODE_INDENT: code indent should use tabs where possible
#132: FILE: fs/ext2/balloc.c:119:
+            (sbi->s_resgid == 0 || !in_group_p (sbi->s_resgid))) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: fs/ext2/balloc.c:119:
+            (sbi->s_resgid == 0 || !in_group_p (sbi->s_resgid))) {$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#132: FILE: fs/ext2/balloc.c:119:
+            (sbi->s_resgid == 0 || !in_group_p (sbi->s_resgid))) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: fs/ext2/balloc.c:120:
+                /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#134: FILE: fs/ext2/balloc.c:121:
+                 * We are too close to reserve and we are not privileged.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#135: FILE: fs/ext2/balloc.c:122:
+                 * Can we allocate anything at all?$

ERROR:CODE_INDENT: code indent should use tabs where possible
#136: FILE: fs/ext2/balloc.c:123:
+                 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: fs/ext2/balloc.c:124:
+                if (free_blocks > root_blocks)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: fs/ext2/balloc.c:124:
+                if (free_blocks > root_blocks)$

CHECK:BRACES: braces {} should be used on all arms of this statement
#137: FILE: fs/ext2/balloc.c:124:
+                if (free_blocks > root_blocks)
[...]
+                else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#138: FILE: fs/ext2/balloc.c:125:
+                        count = free_blocks - root_blocks;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: fs/ext2/balloc.c:125:
+                        count = free_blocks - root_blocks;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: fs/ext2/balloc.c:126:
+                else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: fs/ext2/balloc.c:126:
+                else {$

CHECK:BRACES: Unbalanced braces around else statement
#139: FILE: fs/ext2/balloc.c:126:
+                else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: fs/ext2/balloc.c:128:
+                        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: fs/ext2/balloc.c:128:
+                        return 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#158: FILE: fs/ext2/balloc.c:132:
+^I$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#173: FILE: fs/ext2/balloc.c:144:
+		unsigned free_blocks;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#174: FILE: fs/ext2/balloc.c:145:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#176: FILE: fs/ext2/balloc.c:147:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#179: FILE: fs/ext2/balloc.c:150:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#181: FILE: fs/ext2/balloc.c:152:
+^I^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#189: FILE: fs/ext2/balloc.c:168:
+	struct ext2_sb_info * sbi = EXT2_SB(sb);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#192: FILE: fs/ext2/balloc.c:170:
+	struct ext2_super_block * es = sbi->s_es;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#217: FILE: fs/ext2/balloc.c:220:
+		if (!ext2_clear_bit_atomic(&sbi->s_bgi[block_group].alloc_lock,
+					bit + i, (void *) bitmap_bh->b_data))

CHECK:SPACING: No space is necessary after a cast
#217: FILE: fs/ext2/balloc.c:220:
+					bit + i, (void *) bitmap_bh->b_data))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#240: FILE: fs/ext2/balloc.c:245:
+static int grab_block(spinlock_t *lock, char *map, unsigned size, int goal)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#257: FILE: fs/ext2/balloc.c:293:
+^Iif (ext2_set_bit_atomic(lock, goal, (void *) map)) $

CHECK:SPACING: No space is necessary after a cast
#257: FILE: fs/ext2/balloc.c:293:
+	if (ext2_set_bit_atomic(lock, goal, (void *) map)) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#258: FILE: fs/ext2/balloc.c:294:
+^I^Igoto repeat;^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#293: FILE: fs/ext2/balloc.c:351:
+	group_alloc = group_reserve_blocks(sbi, &sbi->s_bgi[group_no],
+					desc, gdp_bh, es_alloc, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#303: FILE: fs/ext2/balloc.c:363:
+		ret_block = grab_block(&sbi->s_bgi[group_no].alloc_lock,
+				bitmap_bh->b_data,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#326: FILE: fs/ext2/balloc.c:387:
+		group_alloc = group_reserve_blocks(sbi, &sbi->s_bgi[group_no],
+						desc, gdp_bh, es_alloc, use_reserve);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#332: FILE: fs/ext2/balloc.c:393:
+		 * will try to allocate reserved blocks -bzzz */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#344: FILE: fs/ext2/balloc.c:407:
+	ret_block = grab_block(&sbi->s_bgi[group_no].alloc_lock,
+			bitmap_bh->b_data, group_size, 0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#351: FILE: fs/ext2/balloc.c:410:
+^I^Igoto repeat;^I$

CHECK:SPACING: No space is necessary after a cast
#361: FILE: fs/ext2/balloc.c:453:
+						ret_block, (void*) bitmap_bh->b_data))

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#361: FILE: fs/ext2/balloc.c:453:
+						ret_block, (void*) bitmap_bh->b_data))

ERROR:CODE_INDENT: code indent should use tabs where possible
#397: FILE: fs/ext2/balloc.c:517:
+        for (i = 0; i < EXT2_SB(sb)->s_groups_count; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#397: FILE: fs/ext2/balloc.c:517:
+        for (i = 0; i < EXT2_SB(sb)->s_groups_count; i++) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#398: FILE: fs/ext2/balloc.c:518:
+                desc = ext2_get_group_desc (sb, i, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: fs/ext2/balloc.c:518:
+                desc = ext2_get_group_desc (sb, i, NULL);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#398: FILE: fs/ext2/balloc.c:518:
+                desc = ext2_get_group_desc (sb, i, NULL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#399: FILE: fs/ext2/balloc.c:519:
+                if (!desc)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#399: FILE: fs/ext2/balloc.c:519:
+                if (!desc)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#400: FILE: fs/ext2/balloc.c:520:
+                        continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#400: FILE: fs/ext2/balloc.c:520:
+                        continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#401: FILE: fs/ext2/balloc.c:521:
+                desc_count += le16_to_cpu(desc->bg_free_blocks_count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#401: FILE: fs/ext2/balloc.c:521:
+                desc_count += le16_to_cpu(desc->bg_free_blocks_count);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#472: FILE: fs/ext2/super.c:467:
+	struct ext2_super_block * es = sbi->s_es;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#484: FILE: fs/ext2/super.c:510:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#488: FILE: fs/ext2/super.c:514:
+		printk(KERN_INFO "EXT2-fs: last umount wasn't clean."

WARNING:SPLIT_STRING: quoted string split across lines
#489: FILE: fs/ext2/super.c:515:
+		printk(KERN_INFO "EXT2-fs: last umount wasn't clean."
+			       "correct free blocks counter\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#493: FILE: fs/ext2/super.c:519:
+	for(i = sbi->s_groups_count-1; reserved && total_free && i >= 0; i--) {
 	                           ^

ERROR:SPACING: space required before the open parenthesis '('
#493: FILE: fs/ext2/super.c:519:
+	for(i = sbi->s_groups_count-1; reserved && total_free && i >= 0; i--) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#494: FILE: fs/ext2/super.c:520:
+		gdp = ext2_get_group_desc (sb, i, NULL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#496: FILE: fs/ext2/super.c:522:
+			ext2_error (sb, "ext2_check_descriptors",

WARNING:TYPO_SPELLING: 'cant' may be misspelled - perhaps 'can't'?
#497: FILE: fs/ext2/super.c:523:
+					"cant get descriptor for group %d", i);
 					 ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#497: FILE: fs/ext2/super.c:523:
+			ext2_error (sb, "ext2_check_descriptors",
+					"cant get descriptor for group %d", i);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#500: FILE: fs/ext2/super.c:526:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#508: FILE: fs/ext2/super.c:534:
+^I$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#517: FILE: fs/ext2/super.c:799:
+	sbi->s_bgi = kmalloc(sbi->s_groups_count*sizeof(struct ext2_bg_info),
 	                                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#518: FILE: fs/ext2/super.c:800:
+	sbi->s_bgi = kmalloc(sbi->s_groups_count*sizeof(struct ext2_bg_info),
 			       GFP_KERNEL);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#540: FILE: fs/ext2/super.c:856:
+	if (sbi->s_bgi)
+		kfree(sbi->s_bgi);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#578: FILE: fs/ext2/super.c:991:
+^I^I^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#580: FILE: fs/ext2/super.c:993:
+			desc = ext2_get_group_desc (sb, i, NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#602: FILE: include/asm-alpha/bitops.h:490:
+#define ext2_set_bit_atomic(l,n,a)   test_and_set_bit(n,a)
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#602: FILE: include/asm-alpha/bitops.h:490:
+#define ext2_set_bit_atomic(l,n,a)   test_and_set_bit(n,a)
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#602: FILE: include/asm-alpha/bitops.h:490:
+#define ext2_set_bit_atomic(l,n,a)   test_and_set_bit(n,a)
                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#604: FILE: include/asm-alpha/bitops.h:492:
+#define ext2_clear_bit_atomic(l,n,a) test_and_clear_bit(n,a)
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#604: FILE: include/asm-alpha/bitops.h:492:
+#define ext2_clear_bit_atomic(l,n,a) test_and_clear_bit(n,a)
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#604: FILE: include/asm-alpha/bitops.h:492:
+#define ext2_clear_bit_atomic(l,n,a) test_and_clear_bit(n,a)
                                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#615: FILE: include/asm-arm/bitops.h:360:
+#define ext2_set_bit_atomic(lock,nr,p)          \
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#615: FILE: include/asm-arm/bitops.h:360:
+#define ext2_set_bit_atomic(lock,nr,p)          \
                                    ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#616: FILE: include/asm-arm/bitops.h:361:
+                test_and_set_bit(WORD_BITOFF_TO_LE(nr), (unsigned long *)(p))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#616: FILE: include/asm-arm/bitops.h:361:
+                test_and_set_bit(WORD_BITOFF_TO_LE(nr), (unsigned long *)(p))$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#619: FILE: include/asm-arm/bitops.h:364:
+#define ext2_clear_bit_atomic(lock,nr,p)        \
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#619: FILE: include/asm-arm/bitops.h:364:
+#define ext2_clear_bit_atomic(lock,nr,p)        \
                                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#620: FILE: include/asm-arm/bitops.h:365:
+                test_and_clear_bit(WORD_BITOFF_TO_LE(nr), (unsigned long *)(p))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#620: FILE: include/asm-arm/bitops.h:365:
+                test_and_clear_bit(WORD_BITOFF_TO_LE(nr), (unsigned long *)(p))$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#631: FILE: include/asm-cris/bitops.h:363:
+#define ext2_set_bit_atomic(l,n,a)   test_and_set_bit(n,a)
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#631: FILE: include/asm-cris/bitops.h:363:
+#define ext2_set_bit_atomic(l,n,a)   test_and_set_bit(n,a)
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#631: FILE: include/asm-cris/bitops.h:363:
+#define ext2_set_bit_atomic(l,n,a)   test_and_set_bit(n,a)
                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#633: FILE: include/asm-cris/bitops.h:365:
+#define ext2_clear_bit_atomic(l,n,a) test_and_clear_bit(n,a)
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#633: FILE: include/asm-cris/bitops.h:365:
+#define ext2_clear_bit_atomic(l,n,a) test_and_clear_bit(n,a)
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#633: FILE: include/asm-cris/bitops.h:365:
+#define ext2_clear_bit_atomic(l,n,a) test_and_clear_bit(n,a)
                                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#644: FILE: include/asm-i386/bitops.h:482:
+#define ext2_set_bit_atomic(lock,nr,addr) \
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#644: FILE: include/asm-i386/bitops.h:482:
+#define ext2_set_bit_atomic(lock,nr,addr) \
                                    ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#645: FILE: include/asm-i386/bitops.h:483:
+        test_and_set_bit((nr),(unsigned long*)addr)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#645: FILE: include/asm-i386/bitops.h:483:
+        test_and_set_bit((nr),(unsigned long*)addr)$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#645: FILE: include/asm-i386/bitops.h:483:
+        test_and_set_bit((nr),(unsigned long*)addr)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#645: FILE: include/asm-i386/bitops.h:483:
+        test_and_set_bit((nr),(unsigned long*)addr)
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#648: FILE: include/asm-i386/bitops.h:486:
+#define ext2_clear_bit_atomic(lock,nr, addr) \
                                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#649: FILE: include/asm-i386/bitops.h:487:
+^I        test_and_clear_bit((nr),(unsigned long*)addr)$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#649: FILE: include/asm-i386/bitops.h:487:
+	        test_and_clear_bit((nr),(unsigned long*)addr)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#649: FILE: include/asm-i386/bitops.h:487:
+	        test_and_clear_bit((nr),(unsigned long*)addr)
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#660: FILE: include/asm-ia64/bitops.h:456:
+#define ext2_set_atomic(l,n,a)	     test_and_set_bit(n,a)
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#660: FILE: include/asm-ia64/bitops.h:456:
+#define ext2_set_atomic(l,n,a)	     test_and_set_bit(n,a)
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#660: FILE: include/asm-ia64/bitops.h:456:
+#define ext2_set_atomic(l,n,a)	     test_and_set_bit(n,a)
                               	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#662: FILE: include/asm-ia64/bitops.h:458:
+#define ext2_clear_atomic(l,n,a)     test_and_clear_bit(n,a)
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#662: FILE: include/asm-ia64/bitops.h:458:
+#define ext2_clear_atomic(l,n,a)     test_and_clear_bit(n,a)
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#662: FILE: include/asm-ia64/bitops.h:458:
+#define ext2_clear_atomic(l,n,a)     test_and_clear_bit(n,a)
                                                          ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#673: FILE: include/asm-m68k/bitops.h:358:
+ext2_set_bit_atomic (spinlock_t *lock, int nr, volatile void *vaddr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#673: FILE: include/asm-m68k/bitops.h:358:
+ext2_set_bit_atomic (spinlock_t *lock, int nr, volatile void *vaddr)

WARNING:LINE_SPACING: Missing a blank line after declarations
#676: FILE: include/asm-m68k/bitops.h:361:
+	int ret;
+	spin_lock(lock);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INLINE: plain inline is preferred over __inline__
#682: FILE: include/asm-m68k/bitops.h:367:
+extern __inline__ int

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#690: FILE: include/asm-m68k/bitops.h:379:
+ext2_clear_bit_atomic (spinlock_t *lock, int nr, volatile void *vaddr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#690: FILE: include/asm-m68k/bitops.h:379:
+ext2_clear_bit_atomic (spinlock_t *lock, int nr, volatile void *vaddr)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#691: FILE: include/asm-m68k/bitops.h:380:
+{       $

ERROR:CODE_INDENT: code indent should use tabs where possible
#692: FILE: include/asm-m68k/bitops.h:381:
+        int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#692: FILE: include/asm-m68k/bitops.h:381:
+        int ret;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#693: FILE: include/asm-m68k/bitops.h:382:
+        spin_lock(lock);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#693: FILE: include/asm-m68k/bitops.h:382:
+        int ret;
+        spin_lock(lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#693: FILE: include/asm-m68k/bitops.h:382:
+        spin_lock(lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#694: FILE: include/asm-m68k/bitops.h:383:
+        ret = ext2_clear_bit(nr, vaddr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#694: FILE: include/asm-m68k/bitops.h:383:
+        ret = ext2_clear_bit(nr, vaddr);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#695: FILE: include/asm-m68k/bitops.h:384:
+        spin_unlock(lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#695: FILE: include/asm-m68k/bitops.h:384:
+        spin_unlock(lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#696: FILE: include/asm-m68k/bitops.h:385:
+        return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#696: FILE: include/asm-m68k/bitops.h:385:
+        return ret;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#697: FILE: include/asm-m68k/bitops.h:386:
+}       $

WARNING:INLINE: plain inline is preferred over __inline__
#699: FILE: include/asm-m68k/bitops.h:388:
+extern __inline__ int

WARNING:INLINE: plain inline is preferred over __inline__
#710: FILE: include/asm-m68knommu/bitops.h:390:
+extern __inline__ int ext2_set_bit_atomic(spinlock_t *lock, int nr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#711: FILE: include/asm-m68knommu/bitops.h:391:
+extern __inline__ int ext2_set_bit_atomic(spinlock_t *lock, int nr,
+		volatile void * addr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#711: FILE: include/asm-m68knommu/bitops.h:391:
+		volatile void * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#711: FILE: include/asm-m68knommu/bitops.h:391:
+		volatile void * addr)

ERROR:CODE_INDENT: code indent should use tabs where possible
#713: FILE: include/asm-m68knommu/bitops.h:393:
+        int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#713: FILE: include/asm-m68knommu/bitops.h:393:
+        int ret;$

WARNING:INLINE: plain inline is preferred over __inline__
#727: FILE: include/asm-m68knommu/bitops.h:415:
+extern __inline__ int ext2_clear_bit_atomic(spinlock_t *lock, int nr,

ERROR:CODE_INDENT: code indent should use tabs where possible
#728: FILE: include/asm-m68knommu/bitops.h:416:
+                volatile void * addr)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#728: FILE: include/asm-m68knommu/bitops.h:416:
+extern __inline__ int ext2_clear_bit_atomic(spinlock_t *lock, int nr,
+                volatile void * addr)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#728: FILE: include/asm-m68knommu/bitops.h:416:
+                volatile void * addr)$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#728: FILE: include/asm-m68knommu/bitops.h:416:
+                volatile void * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#728: FILE: include/asm-m68knommu/bitops.h:416:
+                volatile void * addr)

ERROR:CODE_INDENT: code indent should use tabs where possible
#730: FILE: include/asm-m68knommu/bitops.h:418:
+        int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#730: FILE: include/asm-m68knommu/bitops.h:418:
+        int ret;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#731: FILE: include/asm-m68knommu/bitops.h:419:
+        spin_lock(lock);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#731: FILE: include/asm-m68knommu/bitops.h:419:
+        int ret;
+        spin_lock(lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#731: FILE: include/asm-m68knommu/bitops.h:419:
+        spin_lock(lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#732: FILE: include/asm-m68knommu/bitops.h:420:
+        ret = ext2_clear_bit(nr, addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#732: FILE: include/asm-m68knommu/bitops.h:420:
+        ret = ext2_clear_bit(nr, addr);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#733: FILE: include/asm-m68knommu/bitops.h:421:
+        spin_unlock(lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#733: FILE: include/asm-m68knommu/bitops.h:421:
+        spin_unlock(lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#734: FILE: include/asm-m68knommu/bitops.h:422:
+        return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#734: FILE: include/asm-m68knommu/bitops.h:422:
+        return ret;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#747: FILE: include/asm-mips/bitops.h:813:
+extern __inline__ int ext2_set_bit_atomic(spinlock_t * lock, int nr, void * addr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#747: FILE: include/asm-mips/bitops.h:813:
+extern __inline__ int ext2_set_bit_atomic(spinlock_t * lock, int nr, void * addr)

WARNING:INLINE: plain inline is preferred over __inline__
#747: FILE: include/asm-mips/bitops.h:813:
+extern __inline__ int ext2_set_bit_atomic(spinlock_t * lock, int nr, void * addr)

WARNING:LINE_SPACING: Missing a blank line after declarations
#750: FILE: include/asm-mips/bitops.h:816:
+	int ret;
+	spin_lock(lock);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#763: FILE: include/asm-mips/bitops.h:836:
+extern __inline__ int ext2_clear_bit_atomic(spinlock_t * lock, int nr, void * addr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#763: FILE: include/asm-mips/bitops.h:836:
+extern __inline__ int ext2_clear_bit_atomic(spinlock_t * lock, int nr, void * addr)

WARNING:INLINE: plain inline is preferred over __inline__
#763: FILE: include/asm-mips/bitops.h:836:
+extern __inline__ int ext2_clear_bit_atomic(spinlock_t * lock, int nr, void * addr)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#764: FILE: include/asm-mips/bitops.h:837:
+{       $

ERROR:CODE_INDENT: code indent should use tabs where possible
#765: FILE: include/asm-mips/bitops.h:838:
+        int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#765: FILE: include/asm-mips/bitops.h:838:
+        int ret;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#766: FILE: include/asm-mips/bitops.h:839:
+        spin_lock(lock);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#766: FILE: include/asm-mips/bitops.h:839:
+        int ret;
+        spin_lock(lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#766: FILE: include/asm-mips/bitops.h:839:
+        spin_lock(lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#767: FILE: include/asm-mips/bitops.h:840:
+        ret = ext2_clear_bit(nr, addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#767: FILE: include/asm-mips/bitops.h:840:
+        ret = ext2_clear_bit(nr, addr);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#768: FILE: include/asm-mips/bitops.h:841:
+        spin_unlock(lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#768: FILE: include/asm-mips/bitops.h:841:
+        spin_unlock(lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#769: FILE: include/asm-mips/bitops.h:842:
+        return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#769: FILE: include/asm-mips/bitops.h:842:
+        return ret;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#792: FILE: include/asm-mips64/bitops.h:520:
+ext2_set_bit_atomic(spinlock_t * lock, int nr, void * addr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#792: FILE: include/asm-mips64/bitops.h:520:
+ext2_set_bit_atomic(spinlock_t * lock, int nr, void * addr)

ERROR:CODE_INDENT: code indent should use tabs where possible
#794: FILE: include/asm-mips64/bitops.h:522:
+        int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#794: FILE: include/asm-mips64/bitops.h:522:
+        int ret;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#795: FILE: include/asm-mips64/bitops.h:523:
+        spin_lock(lock);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#795: FILE: include/asm-mips64/bitops.h:523:
+        int ret;
+        spin_lock(lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#795: FILE: include/asm-mips64/bitops.h:523:
+        spin_lock(lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#796: FILE: include/asm-mips64/bitops.h:524:
+        ret = ext2_set_bit(nr, addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#796: FILE: include/asm-mips64/bitops.h:524:
+        ret = ext2_set_bit(nr, addr);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#797: FILE: include/asm-mips64/bitops.h:525:
+        spin_unlock(lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#797: FILE: include/asm-mips64/bitops.h:525:
+        spin_unlock(lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#798: FILE: include/asm-mips64/bitops.h:526:
+        return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#798: FILE: include/asm-mips64/bitops.h:526:
+        return ret;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#809: FILE: include/asm-mips64/bitops.h:545:
+ext2_clear_bit_atomic(spinlock_t * lock, int nr, void * addr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#809: FILE: include/asm-mips64/bitops.h:545:
+ext2_clear_bit_atomic(spinlock_t * lock, int nr, void * addr)

ERROR:CODE_INDENT: code indent should use tabs where possible
#811: FILE: include/asm-mips64/bitops.h:547:
+        int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#811: FILE: include/asm-mips64/bitops.h:547:
+        int ret;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#812: FILE: include/asm-mips64/bitops.h:548:
+        spin_lock(lock);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#812: FILE: include/asm-mips64/bitops.h:548:
+        int ret;
+        spin_lock(lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#812: FILE: include/asm-mips64/bitops.h:548:
+        spin_lock(lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#813: FILE: include/asm-mips64/bitops.h:549:
+        ret = ext2_clear_bit(nr, addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#813: FILE: include/asm-mips64/bitops.h:549:
+        ret = ext2_clear_bit(nr, addr);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#814: FILE: include/asm-mips64/bitops.h:550:
+        spin_unlock(lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#814: FILE: include/asm-mips64/bitops.h:550:
+        spin_unlock(lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#815: FILE: include/asm-mips64/bitops.h:551:
+        return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#815: FILE: include/asm-mips64/bitops.h:551:
+        return ret;$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#839: FILE: include/asm-parisc/bitops.h:392:
+#define ext2_set_bit_atomic(l,nr,addr)  test_and_set_bit((nr) ^ 0x38, addr)
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#839: FILE: include/asm-parisc/bitops.h:392:
+#define ext2_set_bit_atomic(l,nr,addr)  test_and_set_bit((nr) ^ 0x38, addr)
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#841: FILE: include/asm-parisc/bitops.h:394:
+#define ext2_clear_bit_atomic(l,nr,addr) test_and_clear_bit((nr) ^ 0x38, addr)
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#841: FILE: include/asm-parisc/bitops.h:394:
+#define ext2_clear_bit_atomic(l,nr,addr) test_and_clear_bit((nr) ^ 0x38, addr)
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#844: FILE: include/asm-parisc/bitops.h:397:
+#define ext2_set_bit_atomic(l,nr,addr)  test_and_set_bit((nr) ^ 0x18, addr)
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#844: FILE: include/asm-parisc/bitops.h:397:
+#define ext2_set_bit_atomic(l,nr,addr)  test_and_set_bit((nr) ^ 0x18, addr)
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#846: FILE: include/asm-parisc/bitops.h:399:
+#define ext2_clear_bit_atomic(l,nr,addr) test_and_clear_bit((nr) ^ 0x18, addr)
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#846: FILE: include/asm-parisc/bitops.h:399:
+#define ext2_clear_bit_atomic(l,nr,addr) test_and_clear_bit((nr) ^ 0x18, addr)
                                   ^

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#859: FILE: include/asm-ppc/bitops.h:397:
+#define ext2_clear_bit_atomic(lock, nr, addr) test_and_clear_bit((nr) ^ 0x18, (unsigned long *)(addr))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxV)
#870: FILE: include/asm-ppc64/bitops.h:339:
+#define ext2_set_bit_atomic(lock, nr,addr) \
                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#871: FILE: include/asm-ppc64/bitops.h:340:
+^I        test_and_set_le_bit((nr),(unsigned long*)addr)$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#871: FILE: include/asm-ppc64/bitops.h:340:
+	        test_and_set_le_bit((nr),(unsigned long*)addr)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#871: FILE: include/asm-ppc64/bitops.h:340:
+	        test_and_set_le_bit((nr),(unsigned long*)addr)
 	                                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#875: FILE: include/asm-ppc64/bitops.h:344:
+^I        test_and_clear_le_bit((nr),(unsigned long*)addr)$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#875: FILE: include/asm-ppc64/bitops.h:344:
+	        test_and_clear_le_bit((nr),(unsigned long*)addr)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#875: FILE: include/asm-ppc64/bitops.h:344:
+	        test_and_clear_le_bit((nr),(unsigned long*)addr)
 	                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#887: FILE: include/asm-s390/bitops.h:809:
+^I        test_and_set_bit((nr)^24, (unsigned long *)addr)$

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#887: FILE: include/asm-s390/bitops.h:809:
+	        test_and_set_bit((nr)^24, (unsigned long *)addr)
 	                             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#891: FILE: include/asm-s390/bitops.h:813:
+^I        test_and_clear_bit((nr)^24, (unsigned long *)addr)$

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#891: FILE: include/asm-s390/bitops.h:813:
+	        test_and_clear_bit((nr)^24, (unsigned long *)addr)
 	                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#903: FILE: include/asm-s390x/bitops.h:842:
+^I        test_and_set_bit((nr)^56, (unsigned long *)addr)$

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#903: FILE: include/asm-s390x/bitops.h:842:
+	        test_and_set_bit((nr)^56, (unsigned long *)addr)
 	                             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#907: FILE: include/asm-s390x/bitops.h:846:
+^I        test_and_clear_bit((nr)^56, (unsigned long *)addr)$

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#907: FILE: include/asm-s390x/bitops.h:846:
+	        test_and_clear_bit((nr)^56, (unsigned long *)addr)
 	                               ^

WARNING:INLINE: plain inline is preferred over __inline__
#918: FILE: include/asm-sh/bitops.h:268:
+static __inline__ int ext2_set_bit_atomic(spinlock_t *lock,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#919: FILE: include/asm-sh/bitops.h:269:
+static __inline__ int ext2_set_bit_atomic(spinlock_t *lock,
+		int nr, volatile void * addr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#919: FILE: include/asm-sh/bitops.h:269:
+		int nr, volatile void * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#919: FILE: include/asm-sh/bitops.h:269:
+		int nr, volatile void * addr)

WARNING:LINE_SPACING: Missing a blank line after declarations
#922: FILE: include/asm-sh/bitops.h:272:
+	int ret;
+	spin_lock(lock);

WARNING:INLINE: plain inline is preferred over __inline__
#935: FILE: include/asm-sh/bitops.h:293:
+static __inline__ int ext2_clear_bit_atomic(spinlock_t *lock,

ERROR:CODE_INDENT: code indent should use tabs where possible
#936: FILE: include/asm-sh/bitops.h:294:
+                int nr, volatile void * addr)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#936: FILE: include/asm-sh/bitops.h:294:
+static __inline__ int ext2_clear_bit_atomic(spinlock_t *lock,
+                int nr, volatile void * addr)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#936: FILE: include/asm-sh/bitops.h:294:
+                int nr, volatile void * addr)$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#936: FILE: include/asm-sh/bitops.h:294:
+                int nr, volatile void * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#936: FILE: include/asm-sh/bitops.h:294:
+                int nr, volatile void * addr)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#937: FILE: include/asm-sh/bitops.h:295:
+{       $

ERROR:CODE_INDENT: code indent should use tabs where possible
#938: FILE: include/asm-sh/bitops.h:296:
+        int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#938: FILE: include/asm-sh/bitops.h:296:
+        int ret;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#939: FILE: include/asm-sh/bitops.h:297:
+        spin_lock(lock);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#939: FILE: include/asm-sh/bitops.h:297:
+        int ret;
+        spin_lock(lock);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#939: FILE: include/asm-sh/bitops.h:297:
+        spin_lock(lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#940: FILE: include/asm-sh/bitops.h:298:
+        ret = ext2_clear_bit(nr, addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#940: FILE: include/asm-sh/bitops.h:298:
+        ret = ext2_clear_bit(nr, addr);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#941: FILE: include/asm-sh/bitops.h:299:
+        spin_unlock(lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#941: FILE: include/asm-sh/bitops.h:299:
+        spin_unlock(lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#942: FILE: include/asm-sh/bitops.h:300:
+        return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#942: FILE: include/asm-sh/bitops.h:300:
+        return ret;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#943: FILE: include/asm-sh/bitops.h:301:
+}       $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#955: FILE: include/asm-sparc/bitops.h:457:
+#define ext2_set_bit_atomic(l,n,a)      test_and_set_le_bit(n,a)
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#955: FILE: include/asm-sparc/bitops.h:457:
+#define ext2_set_bit_atomic(l,n,a)      test_and_set_le_bit(n,a)
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#955: FILE: include/asm-sparc/bitops.h:457:
+#define ext2_set_bit_atomic(l,n,a)      test_and_set_le_bit(n,a)
                                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#957: FILE: include/asm-sparc/bitops.h:459:
+#define ext2_clear_bit_atomic(l,n,a)    test_and_clear_le_bit(n,a)
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#957: FILE: include/asm-sparc/bitops.h:459:
+#define ext2_clear_bit_atomic(l,n,a)    test_and_clear_le_bit(n,a)
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#957: FILE: include/asm-sparc/bitops.h:459:
+#define ext2_clear_bit_atomic(l,n,a)    test_and_clear_le_bit(n,a)
                                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#968: FILE: include/asm-sparc64/bitops.h:354:
+#define ext2_set_bit_atomic(lock,nr,addr) test_and_set_le_bit((nr),(unsigned long *)(addr))
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#968: FILE: include/asm-sparc64/bitops.h:354:
+#define ext2_set_bit_atomic(lock,nr,addr) test_and_set_le_bit((nr),(unsigned long *)(addr))
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#968: FILE: include/asm-sparc64/bitops.h:354:
+#define ext2_set_bit_atomic(lock,nr,addr) test_and_set_le_bit((nr),(unsigned long *)(addr))
                                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#970: FILE: include/asm-sparc64/bitops.h:356:
+#define ext2_clear_bit_atomic(lock,nr,addr) test_and_clear_le_bit((nr),(unsigned long *)(addr))
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#970: FILE: include/asm-sparc64/bitops.h:356:
+#define ext2_clear_bit_atomic(lock,nr,addr) test_and_clear_le_bit((nr),(unsigned long *)(addr))
                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#970: FILE: include/asm-sparc64/bitops.h:356:
+#define ext2_clear_bit_atomic(lock,nr,addr) test_and_clear_le_bit((nr),(unsigned long *)(addr))
                                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#981: FILE: include/asm-v850/bitops.h:255:
+#define ext2_set_bit_atomic(l,n,a)      test_and_set_bit(n,a)
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#981: FILE: include/asm-v850/bitops.h:255:
+#define ext2_set_bit_atomic(l,n,a)      test_and_set_bit(n,a)
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#981: FILE: include/asm-v850/bitops.h:255:
+#define ext2_set_bit_atomic(l,n,a)      test_and_set_bit(n,a)
                                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#983: FILE: include/asm-v850/bitops.h:257:
+#define ext2_clear_bit_atomic(l,n,a)    test_and_clear_bit(n,a)
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#983: FILE: include/asm-v850/bitops.h:257:
+#define ext2_clear_bit_atomic(l,n,a)    test_and_clear_bit(n,a)
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#983: FILE: include/asm-v850/bitops.h:257:
+#define ext2_clear_bit_atomic(l,n,a)    test_and_clear_bit(n,a)
                                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#994: FILE: include/asm-x86_64/bitops.h:490:
+#define ext2_set_bit_atomic(lock,nr,addr) \
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#994: FILE: include/asm-x86_64/bitops.h:490:
+#define ext2_set_bit_atomic(lock,nr,addr) \
                                    ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#995: FILE: include/asm-x86_64/bitops.h:491:
+^I        test_and_set_bit((nr),(unsigned long*)addr)$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#995: FILE: include/asm-x86_64/bitops.h:491:
+	        test_and_set_bit((nr),(unsigned long*)addr)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#995: FILE: include/asm-x86_64/bitops.h:491:
+	        test_and_set_bit((nr),(unsigned long*)addr)
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#998: FILE: include/asm-x86_64/bitops.h:494:
+#define ext2_clear_bit_atomic(lock,nr,addr) \
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#998: FILE: include/asm-x86_64/bitops.h:494:
+#define ext2_clear_bit_atomic(lock,nr,addr) \
                                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#999: FILE: include/asm-x86_64/bitops.h:495:
+^I        test_and_clear_bit((nr),(unsigned long*)addr)$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#999: FILE: include/asm-x86_64/bitops.h:495:
+	        test_and_clear_bit((nr),(unsigned long*)addr)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#999: FILE: include/asm-x86_64/bitops.h:495:
+	        test_and_clear_bit((nr),(unsigned long*)addr)
 	                               ^

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1012: FILE: include/linux/ext2_fs_sb.h:21:
+	spinlock_t alloc_lock;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000386017.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 166 errors, 88 warnings, 25 checks, 829 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000386017.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
