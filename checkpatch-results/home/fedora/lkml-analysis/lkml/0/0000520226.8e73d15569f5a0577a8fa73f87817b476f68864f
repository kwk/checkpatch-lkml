WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#55: 
diff -Naur linux-2.4.7/arch/i386/kernel/apm.c linux-2.4.7-mq/arch/i386/kernel/apm.c

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#121: FILE: include/linux/sched.h:77:
+extern int nr_running(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:NEW_TYPEDEFS: do not add new typedefs
#138: FILE: include/linux/sched.h:145:
+typedef union aligned_data {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#140: FILE: include/linux/sched.h:147:
+		struct task_struct * curr;	/* current task on this CPU */

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#148: FILE: include/linux/sched.h:155:
+	char __pad [SMP_CACHE_BYTES];

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#160: FILE: include/linux/sched.h:167:
+ * ^IOne runqueue per CPU in the system, plus one additional runqueue for$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#164: FILE: include/linux/sched.h:171:
+typedef union runqueue_data {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#171: FILE: include/linux/sched.h:178:
+		struct task_struct * max_na_ptr; /* pointer to task which */

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#182: FILE: include/linux/sched.h:189:
+	char __pad [SMP_CACHE_BYTES];

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#224: FILE: include/linux/sched.h:532:
+    cpus_allowed:	ALL_CPUS_ALLOWED,				\
                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#224: FILE: include/linux/sched.h:532:
+    cpus_allowed:	ALL_CPUS_ALLOWED,				\

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "p->run_list.next"
#236: FILE: include/linux/sched.h:918:
+	return (p->run_list.next != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#245: FILE: include/linux/sched.h:927:
+static inline int na_goodness(struct task_struct * p)

WARNING:TYPO_SPELLING: 'nuber' may be misspelled - perhaps 'number'?
#267: FILE: include/linux/sched.h:949:
+	 * na_goodness is based on the nuber of ticks left.
 	                               ^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#274: FILE: include/linux/sched.h:956:
+^I^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#291: FILE: include/linux/sched.h:973:
+	if ((t->policy & ~SCHED_YIELD) != SCHED_OTHER) {
[...]
+	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#349: FILE: include/linux/sched.h:1031:
+static inline void del_from_runqueue_common(struct task_struct * p, int upd)

WARNING:TYPO_SPELLING: 'valies' may be misspelled - perhaps 'values'?
#361: FILE: include/linux/sched.h:1043:
+			 * If we want to update max_na_* valies for the
 			                                 ^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#372: FILE: include/linux/sched.h:1054:
+				t = list_entry(tmp, struct task_struct,
+								run_list);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#405: FILE: include/linux/sched.h:1086:
+static inline void del_from_runqueue(struct task_struct * p)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#415: FILE: include/linux/sched.h:1095:
+static inline void del_from_runqueue_update(struct task_struct * p)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#420: FILE: include/linux/sched.h:1100:
+static inline void del_from_runqueue(struct task_struct * p)

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#470: FILE: kernel/sched.c:96:
+runqueue_data_t runqueue_data [NR_CPUS+1] __cacheline_aligned;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#470: FILE: kernel/sched.c:96:
+runqueue_data_t runqueue_data [NR_CPUS+1] __cacheline_aligned;
                                       ^

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#495: FILE: kernel/sched.c:111:
+aligned_data_t aligned_data [NR_CPUS] __cacheline_aligned =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#496: FILE: kernel/sched.c:112:
+aligned_data_t aligned_data [NR_CPUS] __cacheline_aligned =
+			{ {{&init_task,NA_GOODNESS_INIT,0}}};

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#496: FILE: kernel/sched.c:112:
+			{ {{&init_task,NA_GOODNESS_INIT,0}}};
 			              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#496: FILE: kernel/sched.c:112:
+			{ {{&init_task,NA_GOODNESS_INIT,0}}};
 			                               ^

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#498: FILE: kernel/sched.c:114:
+aligned_data_t aligned_data [NR_CPUS] __cacheline_aligned =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#499: FILE: kernel/sched.c:115:
+aligned_data_t aligned_data [NR_CPUS] __cacheline_aligned =
+			{ {{&init_task,0}}};

ERROR:SPACING: space required after that ',' (ctx:VxV)
#499: FILE: kernel/sched.c:115:
+			{ {{&init_task,0}}};
 			              ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'tcpu' may be better as '(tcpu)' to avoid precedence issues
#509: FILE: kernel/sched.c:126:
+#define this_cpu_allowed(ca, tcpu) ((ca) & (1 << tcpu))

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#523: FILE: kernel/sched.c:143:
+int
+nr_running(void) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#526: FILE: kernel/sched.c:146:
+	int tot=nt_running(REALTIME_RQ);
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#528: FILE: kernel/sched.c:148:
+	for(i=0; i<smp_num_cpus; i++) {
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#528: FILE: kernel/sched.c:148:
+	for(i=0; i<smp_num_cpus; i++) {
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#528: FILE: kernel/sched.c:148:
+	for(i=0; i<smp_num_cpus; i++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#528: FILE: kernel/sched.c:148:
+	for(i=0; i<smp_num_cpus; i++) {
+		tot += nt_running(cpu_logical_map(i));
+	}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#541: FILE: kernel/sched.c:161:
+static inline int local_goodness(struct task_struct * p, struct mm_struct *this_mm)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#552: FILE: kernel/sched.c:172:
+^I^I^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#577: FILE: kernel/sched.c:263:
+static inline void add_to_runqueue(struct task_struct * p)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tsk_na_goodness > max_na_goodness(rq)'
#585: FILE: kernel/sched.c:271:
+	if (!p->has_cpu && (tsk_na_goodness > max_na_goodness(rq))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:BRACES: braces {} are not necessary for single statement blocks
#625: FILE: kernel/sched.c:307:
+		if (!task_on_runqueue(p)) {
+			add_to_runqueue(p);
+		}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tsk_cpu != this_cpu'
#631: FILE: kernel/sched.c:313:
+		if ((tsk_cpu != this_cpu) && !need_resched) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#631: FILE: kernel/sched.c:313:
+		if ((tsk_cpu != this_cpu) && !need_resched) {
+			smp_send_reschedule(tsk_cpu);
+		}

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#679: FILE: kernel/sched.c:344:
+			if (tmp_cycles > INT_MAX) {
[...]
+			} else {
[...]

WARNING:BRACES: braces {} are not necessary for single statement blocks
#689: FILE: kernel/sched.c:354:
+			if (cpu != tsk_cpu) {
+				stack_list[cpu] += PROC_CHANGE_PENALTY;
+			}

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#717: FILE: kernel/sched.c:373:
+		if (target_cpu == tsk_cpu &&

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#729: FILE: kernel/sched.c:385:
+			if (!task_on_runqueue(p)) {
+				add_to_runqueue(p);
+			}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#734: FILE: kernel/sched.c:390:
+			if (target_cpu != this_cpu) {
+				smp_send_reschedule(target_cpu);
+			}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tsk == idle_task(target_cpu)'
#761: FILE: kernel/sched.c:401:
+			if ((tsk == idle_task(target_cpu)) ||
+			     (preemption_goodness(tsk, p, target_cpu) > 1)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#762: FILE: kernel/sched.c:402:
+			if ((tsk == idle_task(target_cpu)) ||
+			     (preemption_goodness(tsk, p, target_cpu) > 1)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#768: FILE: kernel/sched.c:408:
+				if (task_on_runqueue(p)) {
+					del_from_runqueue_update(p);
+				}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'target_cpu != this_cpu'
#784: FILE: kernel/sched.c:421:
+				if ((target_cpu != this_cpu) &&
+				    ((tsk != idle_task(target_cpu)) ||
+				      !need_resched)){

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tsk != idle_task(target_cpu)'
#784: FILE: kernel/sched.c:421:
+				if ((target_cpu != this_cpu) &&
+				    ((tsk != idle_task(target_cpu)) ||
+				      !need_resched)){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#832: FILE: kernel/sched.c:460:
+	if (!task_on_runqueue(p)) {
+		add_to_runqueue(p);
 	}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#857: FILE: kernel/sched.c:482:
+static inline int lock_task_cpu_rq_irqsave(struct task_struct *t,
+						unsigned long *flags)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#934: FILE: kernel/sched.c:563:
+	if (task_to_runqueue(p) == REALTIME_RQ) {
+		spin_unlock(&runqueue_lock(REALTIME_RQ));
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#970: FILE: kernel/sched.c:737:
+		if (task_to_runqueue(prev) == REALTIME_RQ) {
+			spin_unlock(&runqueue_lock(REALTIME_RQ));
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#973: FILE: kernel/sched.c:740:
+^I^Ispin_unlock_irqrestore(&runqueue_lock(rq), flags); $

WARNING:TYPO_SPELLING: 'curent' may be misspelled - perhaps 'current'?
#1034: FILE: kernel/sched.c:790:
+		 * Indicates curent is a realtime task.  We must also
 		             ^^^^^^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1077: FILE: kernel/sched.c:855:
+	if (prev_rq == REALTIME_RQ || nt_running(REALTIME_RQ)) {
+		goto scan_rt_queue;
+	}

WARNING:LINE_SPACING: Missing a blank line after declarations
#1089: FILE: kernel/sched.c:867:
+			int weight = local_goodness(p, prev->active_mm);
+			if (weight > c) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1111: FILE: kernel/sched.c:889:
+	if (task_to_runqueue(next) == REALTIME_RQ) {
+		goto set_max_na_goodness;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1121: FILE: kernel/sched.c:899:
+	if (c > 0) {
+		c += PROC_CHANGE_PENALTY;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1165: FILE: kernel/sched.c:943:
+^I^I^Iif (max_na_goodness(rrq) > c && $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1167: FILE: kernel/sched.c:945:
+			    this_cpu_allowed(max_na_cpus_allowed(rrq),
+								this_cpu)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1171: FILE: kernel/sched.c:949:
+				if (!next->has_cpu) {
+					prev_next = next;
+				}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'next == idle_task(this_cpu)'
#1216: FILE: kernel/sched.c:994:
+	if ((next == idle_task(this_cpu)) && premature_idle) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1248: FILE: kernel/sched.c:1026:
+ ^Inext->has_cpu = 1;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1248: FILE: kernel/sched.c:1026:
+ ^Inext->has_cpu = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1248: FILE: kernel/sched.c:1026:
+ ^Inext->has_cpu = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1283: FILE: kernel/sched.c:1064:
+ ^Ilast_schedule(this_cpu) = get_cycles();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1283: FILE: kernel/sched.c:1064:
+ ^Ilast_schedule(this_cpu) = get_cycles();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1283: FILE: kernel/sched.c:1064:
+ ^Ilast_schedule(this_cpu) = get_cycles();$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1346: FILE: kernel/sched.c:1170:
+	if (prev_rq != REALTIME_RQ) {
+		spin_lock(&runqueue_lock(REALTIME_RQ));
+	}

WARNING:LINE_SPACING: Missing a blank line after declarations
#1359: FILE: kernel/sched.c:1183:
+			int weight = 1000 + p->rt_priority;
+			if (weight > c)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1370: FILE: kernel/sched.c:1194:
+	if (next != idle_task(this_cpu)) {
+		next->has_cpu = 1;
+	}

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1385: FILE: kernel/sched.c:1209:
+	     !nt_running(this_cpu)) ) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->policy != SCHED_OTHER'
#1446: FILE: kernel/sched.c:1490:
+	if ((p->policy != SCHED_OTHER) || (policy != SCHED_OTHER)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'policy != SCHED_OTHER'
#1446: FILE: kernel/sched.c:1490:
+	if ((p->policy != SCHED_OTHER) || (policy != SCHED_OTHER)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1462: FILE: kernel/sched.c:1506:
+	if (was_on_rq) {
+		add_to_runqueue(p);
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1467: FILE: kernel/sched.c:1511:
+	if (lock_rt) {
+		spin_unlock(&runqueue_lock(REALTIME_RQ));
+	}

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1523: FILE: kernel/sched.c:1837:
+	for (nr = 0; nr < NR_CPUS+1; nr++) {
 	                         ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#1523: FILE: kernel/sched.c:1837:
+	for (nr = 0; nr < NR_CPUS+1; nr++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1560: FILE: kernel/timer.c:591:
+		if (curr_na_goodness(cpu) != NA_GOODNESS_INIT) {
+			curr_na_goodness(cpu) = na_goodness(p);
+		}

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000520226.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 33 errors, 36 warnings, 17 checks, 1456 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000520226.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
