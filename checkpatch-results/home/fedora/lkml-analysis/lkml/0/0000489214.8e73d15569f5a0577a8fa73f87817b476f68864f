WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#21: 
I've split the gfp functions out of mm.h into a seperate <gfp.h>
                                                ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#26: 
definition out of sched.h into a seperate <linux/current.h>:
                                 ^^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#171: FILE: include/linux/gfp.h:1:
+#ifndef __LINUX_GFP_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:SPACING: space prohibited after that open parenthesis '('
#195: FILE: include/linux/gfp.h:25:
+#define GFP_USER	(             __GFP_WAIT | __GFP_IO | __GFP_HIGHIO | __GFP_FS)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#196: FILE: include/linux/gfp.h:26:
+#define GFP_HIGHUSER	(             __GFP_WAIT | __GFP_IO | __GFP_HIGHIO | __GFP_FS | __GFP_HIGHMEM)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space prohibited after that open parenthesis '('
#196: FILE: include/linux/gfp.h:26:
+#define GFP_HIGHUSER	(             __GFP_WAIT | __GFP_IO | __GFP_HIGHIO | __GFP_FS | __GFP_HIGHMEM)

ERROR:SPACING: space prohibited after that open parenthesis '('
#199: FILE: include/linux/gfp.h:29:
+#define GFP_KSWAPD	(             __GFP_WAIT | __GFP_IO | __GFP_HIGHIO | __GFP_FS)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#202: FILE: include/linux/gfp.h:32:
+/* Flag - indicates that the buffer will be suitable for DMA.  Ignored on some
+   platforms, used as appropriate on others */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#202: FILE: include/linux/gfp.h:32:
+   platforms, used as appropriate on others */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#212: FILE: include/linux/gfp.h:42:
+extern struct page * FASTCALL(_alloc_pages(unsigned int gfp_mask, unsigned int order));

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#212: FILE: include/linux/gfp.h:42:
+extern struct page * FASTCALL(_alloc_pages(unsigned int gfp_mask, unsigned int order));

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#213: FILE: include/linux/gfp.h:43:
+extern struct page * FASTCALL(__alloc_pages(unsigned int gfp_mask, unsigned int order, zonelist_t *zonelist));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#213: FILE: include/linux/gfp.h:43:
+extern struct page * FASTCALL(__alloc_pages(unsigned int gfp_mask, unsigned int order, zonelist_t *zonelist));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#213: FILE: include/linux/gfp.h:43:
+extern struct page * FASTCALL(__alloc_pages(unsigned int gfp_mask, unsigned int order, zonelist_t *zonelist));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#214: FILE: include/linux/gfp.h:44:
+extern struct page * alloc_pages_node(int nid, unsigned int gfp_mask, unsigned int order);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#214: FILE: include/linux/gfp.h:44:
+extern struct page * alloc_pages_node(int nid, unsigned int gfp_mask, unsigned int order);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#216: FILE: include/linux/gfp.h:46:
+static inline struct page * alloc_pages(unsigned int gfp_mask, unsigned int order)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#228: FILE: include/linux/gfp.h:58:
+extern unsigned long FASTCALL(__get_free_pages(unsigned int gfp_mask, unsigned int order));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#229: FILE: include/linux/gfp.h:59:
+extern unsigned long FASTCALL(get_zeroed_page(unsigned int gfp_mask));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#232: FILE: include/linux/gfp.h:62:
+		__get_free_pages((gfp_mask),0)
 		                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#235: FILE: include/linux/gfp.h:65:
+		__get_free_pages((gfp_mask) | GFP_DMA,(order))
 		                                     ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#245: FILE: include/linux/gfp.h:75:
+extern void FASTCALL(__free_pages(struct page *page, unsigned int order));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#246: FILE: include/linux/gfp.h:76:
+extern void FASTCALL(free_pages(unsigned long addr, unsigned int order));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#249: FILE: include/linux/gfp.h:79:
+#define free_page(addr) free_pages((addr),0)
                                          ^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __noreturn over __attribute__((noreturn))
#291: FILE: include/linux/linkage.h:64:
+# define ATTRIB_NORET  __attribute__((noreturn))

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#294: FILE: include/linux/linkage.h:67:
+#ifdef __i386__

Architecture specific defines should be avoided wherever
possible.

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#295: FILE: include/linux/linkage.h:68:
+#define FASTCALL(x)	x __attribute__((regparm(3)))

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#419: FILE: include/linux/proc_fs.h:7:
+#include <asm/atomic.h>

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000489214.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 9 warnings, 8 checks, 460 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000489214.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
