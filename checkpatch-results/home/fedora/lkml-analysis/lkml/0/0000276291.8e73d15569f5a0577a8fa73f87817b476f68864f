WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#102: FILE: include/linux/page-flags.h:87:
+#define MAIN_PAGE_STATE \
+	unsigned long nr_dirty;		/* Dirty writeable pages */	\
+	unsigned long nr_writeback;	/* Pages under writeback */	\
+	unsigned long nr_unstable;	/* NFS unstable pages */	\
+	unsigned long nr_page_table_pages; /* Used for pagetables */	\
+	unsigned long nr_mapped;	/* Mapped into pagetables */	\
 	unsigned long nr_slab;		/* In slab */

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#131: FILE: include/linux/page-flags.h:143:
+extern void get_main_page_state(struct main_page_state *mps);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#132: FILE: include/linux/page-flags.h:144:
+extern void get_full_page_state(struct page_state *fps);

CHECK:SPACING: No space is necessary after a cast
#264: FILE: mm/page_alloc.c:979:
+	__get_page_state((unsigned long *) mps,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#265: FILE: mm/page_alloc.c:980:
+	__get_page_state((unsigned long *) mps,
+		sizeof(*mps) / sizeof(unsigned long));

CHECK:SPACING: No space is necessary after a cast
#273: FILE: mm/page_alloc.c:986:
+	__get_page_state((unsigned long *) fps,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#274: FILE: mm/page_alloc.c:987:
+	__get_page_state((unsigned long *) fps,
+		sizeof(*fps) / sizeof(unsigned long));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#344: FILE: mm/vmscan.c:933:
+static int balance_pgdat(pg_data_t *pgdat, int nr_pages,
+			struct main_page_state *ps)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000276291.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 1 warnings, 7 checks, 290 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000276291.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
