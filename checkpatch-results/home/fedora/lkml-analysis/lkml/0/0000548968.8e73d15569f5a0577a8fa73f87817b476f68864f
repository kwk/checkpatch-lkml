WARNING:TYPO_SPELLING: 'alot' may be misspelled - perhaps 'a lot'?
#31: 
this helpless state. Thanks alot!
                            ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#90: FILE: fs/isofs/dir.c:205:
+		if (inode->i_sb->u.isofs_sb.s_rock &&

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#94: FILE: fs/isofs/dir.c:209:
+			if (len > 7 && (! strncmp(&tmpname[len - 7], ".cramed", 7))) {
 			                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#122: FILE: fs/isofs/dir.c:220:
+			if (len > 7 && (! strncmp(&tmpname[len - 7], ".cramed", 7))) {
 			                ^

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#191: FILE: fs/isofs/namei.c:124:
+			if (dlen > 7 && (! strncmp(&tmpname[dlen - 7], ".cramed", 7))) {
 			                 ^

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#202: FILE: fs/isofs/namei.c:135:
+			if (dlen > 7 && (! strncmp(&tmpname[dlen - 7], ".cramed", 7))) {
 			                 ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#267: FILE: fs/isofs/inode.c:61:
+int cisofs_uncompress_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#268: FILE: fs/isofs/inode.c:62:
+int cisofs_uncompress_exit(void);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#281: FILE: fs/isofs/inode.c:993:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#282: FILE: fs/isofs/inode.c:994:
+	if (! inode->u.isofs_i.i_compr)
 	    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#284: FILE: fs/isofs/inode.c:996:
+		return block_read_full_page(page,isofs_get_block);
 		                                ^

CHECK:BRACES: Unbalanced braces around else statement
#286: FILE: fs/isofs/inode.c:998:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#292: FILE: fs/isofs/inode.c:1004:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#295: FILE: fs/isofs/inode.c:1007:
+^I^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#299: FILE: fs/isofs/inode.c:1011:
+			printk("cisofs: page->index > maxpage\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#302: FILE: fs/isofs/inode.c:1014:
+^I^I$

WARNING:IF_1: Consider removing the #if 1 and its #endif
#303: FILE: fs/isofs/inode.c:1015:
+#if 1

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#304: FILE: fs/isofs/inode.c:1016:
+		printk("cisofs: yow! before pageptr bread!\n");

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#309: FILE: fs/isofs/inode.c:1021:
+		if (! (bh = isofs_bread(inode, bufsize, iblk))) {
 		    ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#309: FILE: fs/isofs/inode.c:1021:
+		if (! (bh = isofs_bread(inode, bufsize, iblk))) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#310: FILE: fs/isofs/inode.c:1022:
+			printk("cisofs: bad pageptr bread: %ld\n", iblk);

WARNING:IF_1: Consider removing the #if 1 and its #endif
#313: FILE: fs/isofs/inode.c:1025:
+#if 1

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#314: FILE: fs/isofs/inode.c:1026:
+		printk("cisofs: yow! after pageptr bread!\n");

CHECK:SPACING: No space is necessary after a cast
#316: FILE: fs/isofs/inode.c:1028:
+		start_offset = (u32) bh->b_data[pageptr_blk_offset];

CHECK:SPACING: No space is necessary after a cast
#317: FILE: fs/isofs/inode.c:1029:
+		end_offset = (u32) bh->b_data[pageptr_blk_offset + 4];

CHECK:BRACES: Unbalanced braces around else statement
#328: FILE: fs/isofs/inode.c:1040:
+		else {

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#334: FILE: fs/isofs/inode.c:1046:
+				if (! (bh = isofs_bread(inode, bufsize, iblk))) {
 				    ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#334: FILE: fs/isofs/inode.c:1046:
+				if (! (bh = isofs_bread(inode, bufsize, iblk))) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#335: FILE: fs/isofs/inode.c:1047:
+					printk("cisofs: bad bread: %ld\n", iblk);

WARNING:IF_1: Consider removing the #if 1 and its #endif
#338: FILE: fs/isofs/inode.c:1050:
+#if 1

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#339: FILE: fs/isofs/inode.c:1051:
+				printk("cisofs: yow! good bread!\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#353: FILE: fs/isofs/inode.c:1065:
+				printk("cisofs: curr - compr != compr_len\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#361: FILE: fs/isofs/inode.c:1073:
+^Iout:^I^I$

WARNING:INDENTED_LABEL: labels should not be indented
#361: FILE: fs/isofs/inode.c:1073:
+	out:		

CHECK:CAMELCASE: Avoid CamelCase: <UnlockPage>
#366: FILE: fs/isofs/inode.c:1078:
+		UnlockPage(page);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000548968.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 14 warnings, 5 checks, 315 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000548968.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
