WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#92: FILE: drivers/char/tpm/tpm_tis.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#100: FILE: drivers/char/tpm/tpm_tis.c:9:
+ * Specifications at www.trustedcomputinggroup.org^I $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:WHILE_AFTER_BRACE: while should follow close brace '}'
#204: FILE: drivers/char/tpm/tpm_tis.c:113:
+		}
+		while (time_before(jiffies, stop));

while should follow the closing bracket on the same line::

  do {
          ...
  } while(something);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#245: FILE: drivers/char/tpm/tpm_tis.c:154:
+			 wait_queue_head_t * queue)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#272: FILE: drivers/char/tpm/tpm_tis.c:181:
+static int recv_data(struct tpm_chip *chip, u8 * buf, size_t count)

WARNING:LINE_SPACING: Missing a blank line after declarations
#275: FILE: drivers/char/tpm/tpm_tis.c:184:
+	int size = 0, burstcnt;
+	while (size < count &&

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'chip->vendor.locality'
#285: FILE: drivers/char/tpm/tpm_tis.c:194:
+					      TPM_DATA_FIFO(chip->vendor.
+							    locality));

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#290: FILE: drivers/char/tpm/tpm_tis.c:199:
+static int tpm_tis_recv(struct tpm_chip *chip, u8 * buf, size_t count)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#301: FILE: drivers/char/tpm/tpm_tis.c:210:
+	if ((size =

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: No space is necessary after a cast
#307: FILE: drivers/char/tpm/tpm_tis.c:216:
+	expected = be32_to_cpu(*(__be32 *) (buf + 2));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#313: FILE: drivers/char/tpm/tpm_tis.c:222:
+	if ((size +=

ERROR:TRAILING_WHITESPACE: trailing whitespace
#336: FILE: drivers/char/tpm/tpm_tis.c:245:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#339: FILE: drivers/char/tpm/tpm_tis.c:248:
+ * waited for here $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#341: FILE: drivers/char/tpm/tpm_tis.c:250:
+static int tpm_tis_send(struct tpm_chip *chip, u8 * buf, size_t len)

CHECK:SPACING: No space is necessary after a cast
#395: FILE: drivers/char/tpm/tpm_tis.c:304:
+		ordinal = be32_to_cpu(*((__be32 *) (buf + 6)));

WARNING:CONST_STRUCT: struct file_operations should normally be const
#411: FILE: drivers/char/tpm/tpm_tis.c:320:
+static struct file_operations tis_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'tpm_show_pubek' to 'pubek_show'
#420: FILE: drivers/char/tpm/tpm_tis.c:329:
+static DEVICE_ATTR(pubek, S_IRUGO, tpm_show_pubek, NULL);

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#420: FILE: drivers/char/tpm/tpm_tis.c:329:
+static DEVICE_ATTR(pubek, S_IRUGO, tpm_show_pubek, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'tpm_show_pcrs' to 'pcrs_show'
#421: FILE: drivers/char/tpm/tpm_tis.c:330:
+static DEVICE_ATTR(pcrs, S_IRUGO, tpm_show_pcrs, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#421: FILE: drivers/char/tpm/tpm_tis.c:330:
+static DEVICE_ATTR(pcrs, S_IRUGO, tpm_show_pcrs, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'tpm_show_state' to 'state_show'
#422: FILE: drivers/char/tpm/tpm_tis.c:331:
+static DEVICE_ATTR(state, S_IRUGO, tpm_show_state, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#422: FILE: drivers/char/tpm/tpm_tis.c:331:
+static DEVICE_ATTR(state, S_IRUGO, tpm_show_state, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'tpm_show_caps_1_2' to 'caps_show'
#423: FILE: drivers/char/tpm/tpm_tis.c:332:
+static DEVICE_ATTR(caps, S_IRUGO, tpm_show_caps_1_2, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#423: FILE: drivers/char/tpm/tpm_tis.c:332:
+static DEVICE_ATTR(caps, S_IRUGO, tpm_show_caps_1_2, NULL);

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions 'S_IWUSR | S_IWGRP' used
#424: FILE: drivers/char/tpm/tpm_tis.c:333:
+static DEVICE_ATTR(cancel, S_IWUSR | S_IWGRP, NULL, tpm_store_cancel);

The permissions used in DEVICE_ATTR are unusual.
Typically only three permissions are used - 0644 (RW), 0444 (RO)
and 0200 (WO).

See: https://www.kernel.org/doc/html/latest/filesystems/sysfs.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IWGRP' are not preferred. Consider using octal permissions '0220'.
#424: FILE: drivers/char/tpm/tpm_tis.c:333:
+static DEVICE_ATTR(cancel, S_IWUSR | S_IWGRP, NULL, tpm_store_cancel);

CHECK:SPACING: No space is necessary after a cast
#452: FILE: drivers/char/tpm/tpm_tis.c:361:
+	struct tpm_chip *chip = (struct tpm_chip *) dev_id;

CHECK:SPACING: No space is necessary after a cast
#473: FILE: drivers/char/tpm/tpm_tis.c:382:
+	struct tpm_chip *chip = (struct tpm_chip *) dev_id;

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#501: FILE: drivers/char/tpm/tpm_tis.c:410:
+static int __devinit tpm_tis_pnp_init(struct pnp_dev

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#504: FILE: drivers/char/tpm/tpm_tis.c:413:
+				      *pnp_id)
 				      ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#514: FILE: drivers/char/tpm/tpm_tis.c:423:
+	if (!(chip = tpm_register_hardware(&pnp_dev->dev, &tpm_tis)))

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#673: FILE: drivers/char/tpm/tpm_tis.c:582:
+static struct pnp_device_id tpm_pnp_tbl[] __devinitdata = {

WARNING:LINE_SPACING: Missing a blank line after declarations
#695: FILE: drivers/char/tpm/tpm_tis.c:604:
+	struct tpm_chip *chip;
+	spin_lock(&tis_lock);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'chip->vendor.locality'
#701: FILE: drivers/char/tpm/tpm_tis.c:610:
+				   TPM_INT_ENABLE(chip->vendor.
+						  locality)),

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#736: FILE: drivers/char/tpm/Kconfig:23:
+config TCG_TIS
+	tristate "TPM Interface Specification 1.2 Interface"
+	depends on TCG_TPM
+	---help---
+	  If you have a TPM security chip that is compliant with the
+	  TCG TIS 1.2 TPM specification say Yes and it will be accessible
+	  from within Linux.  To compile this driver as a module, choose
+	  M here; the module will be called tpm_tis.
+

Kconfig symbols should have a help text which fully describes
it.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000088014.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 19 warnings, 5 checks, 692 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000088014.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
