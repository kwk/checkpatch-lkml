WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: kernel/capability.c:69:
+     if (pid && pid != task_pid(current)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 13)
#139: FILE: kernel/capability.c:69:
+     if (pid && pid != task_pid(current)) {
 	     target = find_task_by_pid(pid);

ERROR:CODE_INDENT: code indent should use tabs where possible
#148: FILE: kernel/capability.c:135:
+             if (target == current || task_pid(target) == 1)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: kernel/capability.c:135:
+             if (target == current || task_pid(target) == 1)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (13, 21)
#148: FILE: kernel/capability.c:135:
+             if (target == current || task_pid(target) == 1)
                      continue;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: kernel/capability.c:190:
+     if (pid && pid != task_pid(current) && !capable(CAP_SETPCAP))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 13)
#157: FILE: kernel/capability.c:190:
+     if (pid && pid != task_pid(current) && !capable(CAP_SETPCAP))
              return -EPERM;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: kernel/capability.c:201:
+     if (pid > 0 && pid != task_pid(current)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 10)
#166: FILE: kernel/capability.c:201:
+     if (pid > 0 && pid != task_pid(current)) {
           target = find_task_by_pid(pid);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#214: FILE: kernel/exit.c:173:
 				|| p->exit_state
+				|| task_pid(p->real_parent) == 1)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#388: FILE: kernel/futex.c:792:
+		err = f_setown(filp, task_pid(current), 1);
 		               ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#416: FILE: kernel/pid.c:235:
+	leader->__pid = leader->__tgid = thread->__pid;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#561: FILE: kernel/sched.c:4336:
+	printk("%5lu %5d %6d ", free, task_pid(p),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#562: FILE: kernel/sched.c:4337:
+	printk("%5lu %5d %6d ", free, task_pid(p),
+				      task_pid(p->parent));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#565: FILE: kernel/sched.c:4339:
+		printk("%5d ", task_pid(relative));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#570: FILE: kernel/sched.c:4343:
+		printk("%7d", task_pid(relative));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#575: FILE: kernel/sched.c:4347:
+		printk(" %5d", task_pid(relative));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#606: FILE: kernel/signal.c:949:
+		BUG_ON(task_tgid(t) != task_tgid(p));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#698: FILE: kernel/stop_machine.c:95:
+	sys_sched_setscheduler(task_pid(current), SCHED_FIFO,
 				(struct sched_param __user *)&param);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000134786.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 14 warnings, 4 checks, 602 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000134786.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
