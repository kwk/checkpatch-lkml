WARNING:REPEATED_WORD: Possible repeated word: 'are'
#44: 
get it back, but these are not elegant solutions are are problematic.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#84: 
--- linux-2.6.12/drivers/input/evdev.c.orig	2005-08-15 11:12:15.000000000 -0600

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#124: FILE: drivers/input/evdev.c:88:
+static void evdev_event(struct input_handle *handle, unsigned int type, unsigned int code, int value)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#128: FILE: drivers/input/evdev.c:92:
+        evdev_handle_event(evdev, type, code, value);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: drivers/input/evdev.c:92:
+        evdev_handle_event(evdev, type, code, value);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#129: FILE: drivers/input/evdev.c:93:
+        evdev_handle_event(&evdev_mix, type, code, value);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: drivers/input/evdev.c:93:
+        evdev_handle_event(&evdev_mix, type, code, value);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: drivers/input/evdev.c:108:
+        if (list->evdev->handle.dev)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: drivers/input/evdev.c:108:
+        if (list->evdev->handle.dev)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#140: FILE: drivers/input/evdev.c:108:
+        if (list->evdev->handle.dev)
+            return input_flush_device(&list->evdev->handle, file);

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: drivers/input/evdev.c:109:
+            return input_flush_device(&list->evdev->handle, file);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: drivers/input/evdev.c:109:
+            return input_flush_device(&list->evdev->handle, file);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: drivers/input/evdev.c:110:
+        else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: drivers/input/evdev.c:110:
+        else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#142: FILE: drivers/input/evdev.c:110:
+        else
+            return 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: drivers/input/evdev.c:111:
+            return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: drivers/input/evdev.c:111:
+            return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: drivers/input/evdev.c:177:
+        if (evdev_table[i]->handle.dev)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: drivers/input/evdev.c:177:
+        if (evdev_table[i]->handle.dev)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#205: FILE: drivers/input/evdev.c:177:
+        if (evdev_table[i]->handle.dev)
+            if ((accept_err = input_accept_process(&(evdev_table[i]->handle), file)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#206: FILE: drivers/input/evdev.c:178:
+            if ((accept_err = input_accept_process(&(evdev_table[i]->handle), file)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: drivers/input/evdev.c:178:
+            if ((accept_err = input_accept_process(&(evdev_table[i]->handle), file)))$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around evdev_table[i]->handle
#206: FILE: drivers/input/evdev.c:178:
+            if ((accept_err = input_accept_process(&(evdev_table[i]->handle), file)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#206: FILE: drivers/input/evdev.c:178:
+            if ((accept_err = input_accept_process(&(evdev_table[i]->handle), file)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:BRACES: Unbalanced braces around else statement
#225: FILE: drivers/input/evdev.c:196:
+		} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#228: FILE: drivers/input/evdev.c:199:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: drivers/input/evdev.c:199:
+        }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#229: FILE: drivers/input/evdev.c:200:
+        $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#229: FILE: drivers/input/evdev.c:200:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: drivers/input/evdev.c:200:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#238: FILE: drivers/input/evdev.c:216:
+                if (list->evdev->handle.dev)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: drivers/input/evdev.c:216:
+                if (list->evdev->handle.dev)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#238: FILE: drivers/input/evdev.c:216:
+                if (list->evdev->handle.dev)
+                    input_event(list->evdev->handle.dev, event.type, event.code, event.value);

ERROR:CODE_INDENT: code indent should use tabs where possible
#239: FILE: drivers/input/evdev.c:217:
+                    input_event(list->evdev->handle.dev, event.type, event.code, event.value);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: drivers/input/evdev.c:217:
+                    input_event(list->evdev->handle.dev, event.type, event.code, event.value);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#248: FILE: drivers/input/evdev.c:328:
+                        if (evdev->handle.dev) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: drivers/input/evdev.c:328:
+                        if (evdev->handle.dev) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#248: FILE: drivers/input/evdev.c:328:
+                        if (evdev->handle.dev) {
+                            if (arg) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#249: FILE: drivers/input/evdev.c:329:
+                            if (arg) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: drivers/input/evdev.c:329:
+                            if (arg) {$

WARNING:TABSTOP: Statements should start on a tabstop
#257: FILE: drivers/input/evdev.c:336:
+			    } else {

WARNING:TABSTOP: Statements should start on a tabstop
#264: FILE: drivers/input/evdev.c:342:
+			    }

ERROR:CODE_INDENT: code indent should use tabs where possible
#265: FILE: drivers/input/evdev.c:343:
+                        } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: drivers/input/evdev.c:343:
+                        } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 28)
#265: FILE: drivers/input/evdev.c:343:
+                        } else {
+                            return 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#266: FILE: drivers/input/evdev.c:344:
+                            return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: drivers/input/evdev.c:344:
+                            return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#267: FILE: drivers/input/evdev.c:345:
+                        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: drivers/input/evdev.c:345:
+                        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#290: FILE: drivers/input/evdev.c:523:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: drivers/input/evdev.c:523:
+        }$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#307: FILE: drivers/input/evdev.c:555:
+	devfs_mk_cdev(MKDEV(INPUT_MAJOR, EVDEV_MINOR_BASE + EVDEV_MIX),
+			S_IFCHR|S_IRUGO|S_IWUSR, "input/events");

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#307: FILE: drivers/input/evdev.c:555:
+			S_IFCHR|S_IRUGO|S_IWUSR, "input/events");
 			       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#307: FILE: drivers/input/evdev.c:555:
+			S_IFCHR|S_IRUGO|S_IWUSR, "input/events");
 			               ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#307: FILE: drivers/input/evdev.c:555:
+			S_IFCHR|S_IRUGO|S_IWUSR, "input/events");

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#311: FILE: drivers/input/evdev.c:559:
+	printk(KERN_INFO "events: event device common for all events\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000159596.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 20 errors, 31 warnings, 5 checks, 224 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000159596.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
