WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#42: 
- Fixed a PPC bug in kunmap_atomic(): it forgot to reenable
                                                   ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#45: 
- Fixed a sparc bug in kunmap_atomic(): it forgot to reenable
                                                     ^^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#63: 
--- 2.5.33/include/asm-i386/highmem.h~copy_user_atomic	Thu Sep  5 00:44:46 2002

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: arch/sparc/mm/fault.c:236:
+        if (in_atomic() || !mm)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: arch/sparc/mm/fault.c:236:
+        if (in_atomic() || !mm)$

WARNING:IN_ATOMIC: use of in_atomic() is incorrect outside core kernel code
#159: FILE: arch/sparc/mm/fault.c:236:
+        if (in_atomic() || !mm)

in_atomic() is not for driver use so any such use is reported as an ERROR.
Also in_atomic() is often used to determine if sleeping is permitted,
but it is not reliable in this use model.  Therefore its use is
strongly discouraged.

However, in_atomic() is ok for core kernel use.

See: https://lore.kernel.org/lkml/20080320201723.b87b3732.akpm@linux-foundation.org/

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mm"
#170: FILE: arch/ppc/mm/fault.c:105:
+	if (in_atomic() || mm == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:IN_ATOMIC: use of in_atomic() is incorrect outside core kernel code
#170: FILE: arch/ppc/mm/fault.c:105:
+	if (in_atomic() || mm == NULL) {

WARNING:IN_ATOMIC: use of in_atomic() is incorrect outside core kernel code
#181: FILE: include/asm-sparc/hardirq.h:117:
+# define in_atomic()	(preempt_count() != kernel_locked())

WARNING:IN_ATOMIC: use of in_atomic() is incorrect outside core kernel code
#183: FILE: include/asm-sparc/hardirq.h:119:
+# define in_atomic()	(preempt_count() != 0)

WARNING:IN_ATOMIC: use of in_atomic() is incorrect outside core kernel code
#195: FILE: include/asm-ppc/hardirq.h:88:
+# define in_atomic()	(preempt_count() != kernel_locked())

WARNING:IN_ATOMIC: use of in_atomic() is incorrect outside core kernel code
#198: FILE: include/asm-ppc/hardirq.h:91:
+# define in_atomic()	(preempt_count() != 0)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000434983.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 10 warnings, 1 checks, 122 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000434983.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
