CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#28: 
____/|  Ragnar Højland      Freedom - Linux - OpenGL |    Brainbench MVP
                ^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
diff -rup -x '*~' linux-2.4.16-O/drivers/i2c/i2c-proc.c linux-2.4.16/drivers/i2c/i2c-proc.c

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#41: FILE: drivers/i2c/i2c-proc.c:123:
+		printk (KERN_WARNING "i2c_create_name: not enough memory\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#41: FILE: drivers/i2c/i2c-proc.c:123:
+		printk (KERN_WARNING "i2c_create_name: not enough memory\n");

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'i2c_create_name', this function's name, in a string
#41: FILE: drivers/i2c/i2c-proc.c:123:
+		printk (KERN_WARNING "i2c_create_name: not enough memory\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#55: FILE: drivers/net/wireless/airo_cs.c:248:
+		printk(KERN_ERR "airo_cs: no memory for new device\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#55: FILE: drivers/net/wireless/airo_cs.c:248:
+	if (!local) {
+		printk(KERN_ERR "airo_cs: no memory for new device\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#56: FILE: drivers/net/wireless/airo_cs.c:249:
+		kfree (link);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: drivers/parport/parport_cs.c:314:
+    if (p->private_data == NULL) {$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p->private_data"
#69: FILE: drivers/parport/parport_cs.c:314:
+    if (p->private_data == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#70: FILE: drivers/parport/parport_cs.c:315:
+        printk(KERN_WARNING "parport_cs: not enough memory\n");$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: drivers/parport/parport_cs.c:315:
+        printk(KERN_WARNING "parport_cs: not enough memory\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#70: FILE: drivers/parport/parport_cs.c:315:
+        printk(KERN_WARNING "parport_cs: not enough memory\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#70: FILE: drivers/parport/parport_cs.c:315:
+    if (p->private_data == NULL) {
+        printk(KERN_WARNING "parport_cs: not enough memory\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: drivers/parport/parport_cs.c:317:
+    }$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#99: FILE: drivers/sbus/dvma.c:94:
+			printk (KERN_WARNING "dvma_init: not enough memory\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#99: FILE: drivers/sbus/dvma.c:94:
+			printk (KERN_WARNING "dvma_init: not enough memory\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dvma_init', this function's name, in a string
#99: FILE: drivers/sbus/dvma.c:94:
+			printk (KERN_WARNING "dvma_init: not enough memory\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#99: FILE: drivers/sbus/dvma.c:94:
+		if (!dma) {
+			printk (KERN_WARNING "dvma_init: not enough memory\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#111: FILE: drivers/sbus/dvma.c:133:
+			printk (KERN_WARNING "sun4_dvma_init: not enough memory\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#111: FILE: drivers/sbus/dvma.c:133:
+			printk (KERN_WARNING "sun4_dvma_init: not enough memory\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sun4_dvma_init', this function's name, in a string
#111: FILE: drivers/sbus/dvma.c:133:
+			printk (KERN_WARNING "sun4_dvma_init: not enough memory\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#111: FILE: drivers/sbus/dvma.c:133:
+		if (!dma) {
+			printk (KERN_WARNING "sun4_dvma_init: not enough memory\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#115: FILE: drivers/sbus/dvma.c:137:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#127: FILE: drivers/sound/btaudio.c:889:
+^I^Iprintk(KERN_WARNING $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#127: FILE: drivers/sound/btaudio.c:889:
+		printk(KERN_WARNING 

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#127: FILE: drivers/sound/btaudio.c:889:
+	if (!bta) {
+		printk(KERN_WARNING 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#144: FILE: fs/binfmt_elf.c:613:
+^Iif (retval) $

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#156: FILE: fs/qnx4/inode.c:321:
+						if (!sb->u.qnx4_sb.BitMap) {

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

CHECK:CAMELCASE: Avoid CamelCase: <BitMap>
#156: FILE: fs/qnx4/inode.c:321:
+						if (!sb->u.qnx4_sb.BitMap) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#157: FILE: fs/qnx4/inode.c:322:
+							brelse (bh);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000495124.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 24 warnings, 3 checks, 97 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000495124.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
