WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
	This patch adds a compatibility interface (aka old style) to the code and an 

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#46: FILE: fs/Config.in:17:
CONFIG_AUTOFS4_FS

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#67: FILE: fs/quota.c:240:
+static int check_compat_quotactl_valid(struct super_block *sb, int type, int $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#74: FILE: fs/quota.c:246:
+		return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#76: FILE: fs/quota.c:248:
+	switch (cmd) {
+	    case Q_COMP_QUOTAON:
[...]
+	    case Q_COMP_QUOTAOFF:
[...]
+	    case Q_COMP_SYNC:
[...]
+	    case Q_V2_SETFLAGS:
+	    case Q_V2_SETGRACE:
+	    case Q_V2_SETINFO:
[...]
+	    case Q_V2_GETINFO:
[...]
+	    case Q_V2_SETQLIM:
+	    case Q_V2_SETUSE:
+	    case Q_V2_SETQUOTA:
[...]
+	    case Q_V2_GETQUOTA:
[...]
+	    case Q_V2_GETSTATS:
[...]
+	    case Q_V1_SETQLIM:
+	    case Q_V1_SETUSE:
+	    case Q_V1_SETQUOTA:
[...]
+	    case Q_V1_GETQUOTA:
[...]
+	    case Q_V1_RSQUASH:
[...]
+	    case Q_V1_GETSTATS:
[...]
+	    default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:TABSTOP: Statements should start on a tabstop
#77: FILE: fs/quota.c:249:
+	    case Q_COMP_QUOTAON:

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#79: FILE: fs/quota.c:251:
+			return -ENOSYS;

WARNING:TABSTOP: Statements should start on a tabstop
#81: FILE: fs/quota.c:253:
+	    case Q_COMP_QUOTAOFF:

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#83: FILE: fs/quota.c:255:
+			return -ENOSYS;

WARNING:TABSTOP: Statements should start on a tabstop
#85: FILE: fs/quota.c:257:
+	    case Q_COMP_SYNC:

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#87: FILE: fs/quota.c:259:
+			return -ENOSYS;

WARNING:TABSTOP: Statements should start on a tabstop
#90: FILE: fs/quota.c:262:
+	    case Q_V2_SETFLAGS:

WARNING:TABSTOP: Statements should start on a tabstop
#91: FILE: fs/quota.c:263:
+	    case Q_V2_SETGRACE:

WARNING:TABSTOP: Statements should start on a tabstop
#92: FILE: fs/quota.c:264:
+	    case Q_V2_SETINFO:

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#94: FILE: fs/quota.c:266:
+			return -ENOSYS;

WARNING:TABSTOP: Statements should start on a tabstop
#96: FILE: fs/quota.c:268:
+	    case Q_V2_GETINFO:

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#98: FILE: fs/quota.c:270:
+			return -ENOSYS;

WARNING:TABSTOP: Statements should start on a tabstop
#100: FILE: fs/quota.c:272:
+	    case Q_V2_SETQLIM:

WARNING:TABSTOP: Statements should start on a tabstop
#101: FILE: fs/quota.c:273:
+	    case Q_V2_SETUSE:

WARNING:TABSTOP: Statements should start on a tabstop
#102: FILE: fs/quota.c:274:
+	    case Q_V2_SETQUOTA:

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#104: FILE: fs/quota.c:276:
+			return -ENOSYS;

WARNING:TABSTOP: Statements should start on a tabstop
#106: FILE: fs/quota.c:278:
+	    case Q_V2_GETQUOTA:

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#108: FILE: fs/quota.c:280:
+			return -ENOSYS;

WARNING:TABSTOP: Statements should start on a tabstop
#110: FILE: fs/quota.c:282:
+	    case Q_V2_GETSTATS:

WARNING:TABSTOP: Statements should start on a tabstop
#114: FILE: fs/quota.c:286:
+	    case Q_V1_SETQLIM:

WARNING:TABSTOP: Statements should start on a tabstop
#115: FILE: fs/quota.c:287:
+	    case Q_V1_SETUSE:

WARNING:TABSTOP: Statements should start on a tabstop
#116: FILE: fs/quota.c:288:
+	    case Q_V1_SETQUOTA:

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#118: FILE: fs/quota.c:290:
+			return -ENOSYS;

WARNING:TABSTOP: Statements should start on a tabstop
#120: FILE: fs/quota.c:292:
+	    case Q_V1_GETQUOTA:

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#122: FILE: fs/quota.c:294:
+			return -ENOSYS;

WARNING:TABSTOP: Statements should start on a tabstop
#124: FILE: fs/quota.c:296:
+	    case Q_V1_RSQUASH:

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#126: FILE: fs/quota.c:298:
+			return -ENOSYS;

WARNING:TABSTOP: Statements should start on a tabstop
#128: FILE: fs/quota.c:300:
+	    case Q_V1_GETSTATS:

WARNING:TABSTOP: Statements should start on a tabstop
#131: FILE: fs/quota.c:303:
+	    default:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#136: FILE: fs/quota.c:308:
+^Iif (cmd != Q_COMP_QUOTAON && cmd != Q_COMP_QUOTAOFF && cmd != Q_COMP_SYNC $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#139: FILE: fs/quota.c:310:
+^Iif (cmd != Q_COMP_QUOTAON && cmd != Q_COMP_QUOTAOFF && cmd != Q_COMP_SYNC $

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#145: FILE: fs/quota.c:315:
+	switch (cmd) {
+	    case Q_V2_SETFLAGS:
+	    case Q_V2_SETGRACE:
+	    case Q_V2_SETINFO:
+	    case Q_V2_GETINFO:
+	    case Q_COMP_QUOTAOFF:
+	    case Q_V1_RSQUASH:
+	    case Q_V1_SETQUOTA:
+	    case Q_V1_SETQLIM:
+	    case Q_V1_SETUSE:
+	    case Q_V2_SETQUOTA:
[...]
+	    case Q_V2_SETUSE:
+	    case Q_V1_GETQUOTA:
+	    case Q_V2_GETQUOTA:

WARNING:TABSTOP: Statements should start on a tabstop
#146: FILE: fs/quota.c:316:
+	    case Q_V2_SETFLAGS:

WARNING:TABSTOP: Statements should start on a tabstop
#147: FILE: fs/quota.c:317:
+	    case Q_V2_SETGRACE:

WARNING:TABSTOP: Statements should start on a tabstop
#148: FILE: fs/quota.c:318:
+	    case Q_V2_SETINFO:

WARNING:TABSTOP: Statements should start on a tabstop
#149: FILE: fs/quota.c:319:
+	    case Q_V2_GETINFO:

WARNING:TABSTOP: Statements should start on a tabstop
#150: FILE: fs/quota.c:320:
+	    case Q_COMP_QUOTAOFF:

WARNING:TABSTOP: Statements should start on a tabstop
#151: FILE: fs/quota.c:321:
+	    case Q_V1_RSQUASH:

WARNING:TABSTOP: Statements should start on a tabstop
#152: FILE: fs/quota.c:322:
+	    case Q_V1_SETQUOTA:

WARNING:TABSTOP: Statements should start on a tabstop
#153: FILE: fs/quota.c:323:
+	    case Q_V1_SETQLIM:

WARNING:TABSTOP: Statements should start on a tabstop
#154: FILE: fs/quota.c:324:
+	    case Q_V1_SETUSE:

WARNING:TABSTOP: Statements should start on a tabstop
#155: FILE: fs/quota.c:325:
+	    case Q_V2_SETQUOTA:

WARNING:TABSTOP: Statements should start on a tabstop
#157: FILE: fs/quota.c:327:
+	    case Q_V2_SETUSE:

WARNING:TABSTOP: Statements should start on a tabstop
#158: FILE: fs/quota.c:328:
+	    case Q_V1_GETQUOTA:

WARNING:TABSTOP: Statements should start on a tabstop
#159: FILE: fs/quota.c:329:
+	    case Q_V2_GETQUOTA:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#170: FILE: fs/quota.c:340:
+^Ielse if (cmd != Q_V1_GETSTATS && cmd != Q_V2_GETSTATS && cmd != $

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#170: FILE: fs/quota.c:340:
+	}
+	else if (cmd != Q_V1_GETSTATS && cmd != Q_V2_GETSTATS && cmd != 

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#186: FILE: fs/quota.c:355:
+static int v1_get_dqblk(struct super_block *sb, int type, qid_t id, struct $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#192: FILE: fs/quota.c:360:
+	if ((ret = sb->s_qcop->get_dqblk(sb, type, id, &idq)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#205: FILE: fs/quota.c:373:
+		if ((ret = sb->s_qcop->get_info(sb, type, &info)) < 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#213: FILE: fs/quota.c:381:
+static int v1_set_dqblk(struct super_block *sb, int type, int cmd, qid_t id, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#215: FILE: fs/quota.c:382:
+static int v1_set_dqblk(struct super_block *sb, int type, int cmd, qid_t id, 
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#233: FILE: fs/quota.c:400:
+^Iif (!ret && id == 0 && cmd == Q_V1_SETQUOTA) {^I/* Times for id 0 are in $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 0)
#233: FILE: fs/quota.c:400:
+	if (!ret && id == 0 && cmd == Q_V1_SETQUOTA) {	/* Times for id 0 are in 
fact grace times */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#235: FILE: fs/quota.c:401:
+	if (!ret && id == 0 && cmd == Q_V1_SETQUOTA) {	/* Times for id 0 are in 
+		struct if_dqinfo info;

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#250: FILE: fs/quota.c:416:
+static int v2_get_info(struct super_block *sb, int type, struct $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#267: FILE: fs/quota.c:432:
+static int v2_set_info(struct super_block *sb, int type, int cmd, struct $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#286: FILE: fs/quota.c:450:
+static int v2_get_dqblk(struct super_block *sb, int type, qid_t id, struct $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#292: FILE: fs/quota.c:455:
+	if ((ret = sb->s_qcop->get_dqblk(sb, type, id, &idq)) < 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#305: FILE: fs/quota.c:468:
+static int v2_set_dqblk(struct super_block *sb, int type, int cmd, qid_t id, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#307: FILE: fs/quota.c:469:
+static int v2_set_dqblk(struct super_block *sb, int type, int cmd, qid_t id, 
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#333: FILE: fs/quota.c:495:
+static int do_compat_quotactl(struct super_block *sb, int type, int cmd, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#335: FILE: fs/quota.c:496:
+static int do_compat_quotactl(struct super_block *sb, int type, int cmd, 
+{

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#342: FILE: fs/quota.c:503:
+			if (IS_ERR(pathname = getname(addr)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#366: FILE: fs/quota.c:527:
+			if ((ret = v1_get_dqblk(sb, type, id, &mdq)))

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#386: FILE: fs/quota.c:547:
+			}
+			else {

CHECK:BRACES: Unbalanced braces around else statement
#386: FILE: fs/quota.c:547:
+			else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#404: FILE: fs/quota.c:565:
+			if ((ret = v2_get_info(sb, type, &info)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#417: FILE: fs/quota.c:578:
+^I^I^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#423: FILE: fs/quota.c:584:
+			if ((ret = v2_get_dqblk(sb, type, id, &mdq)))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#438: FILE: fs/quota.c:599:
+	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#451: FILE: fs/quota.c:621:
+^Iif (((cmds != Q_SYNC && cmds != Q_COMP_SYNC) || special) && IS_ERR(sb = $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#451: FILE: fs/quota.c:621:
+	if (((cmds != Q_SYNC && cmds != Q_COMP_SYNC) || special) && IS_ERR(sb = 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#457: FILE: fs/quota.c:626:
+^Iif (!(cmds & 0x800000) && cmds != Q_XQUOTAON && cmds != Q_XQUOTAOFF && cmds $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#457: FILE: fs/quota.c:626:
+	if (!(cmds & 0x800000) && cmds != Q_XQUOTAON && cmds != Q_XQUOTAOFF && cmds 

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#460: FILE: fs/quota.c:628:
+		if ((ret = check_compat_quotactl_valid(sb, type, cmds, id)) < 0)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#480: FILE: include/linux/quotacompat.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000472834.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 30 errors, 48 warnings, 4 checks, 520 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000472834.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
