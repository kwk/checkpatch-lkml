WARNING:TYPO_SPELLING: 'dirctory' may be misspelled - perhaps 'directory'?
#45: 
The /sys/power/operating_points dirctory still contains the operating
                                ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#74: 
Signed-Off-by: David Singleton <dsingleton@mvista.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#98: FILE: kernel/power/main.c:53:
+static int suspend_prepare(struct oppoint * state)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#105: FILE: kernel/power/main.c:85:
        if (pm_ops->prepare) {
+               if ((error = pm_ops->prepare(state->type)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#107: FILE: kernel/power/main.c:86:
+               if ((error = pm_ops->prepare(state->type)))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: kernel/power/main.c:86:
+               if ((error = pm_ops->prepare(state->type)))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#107: FILE: kernel/power/main.c:86:
+               if ((error = pm_ops->prepare(state->type)))
                        goto Thaw;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#107: FILE: kernel/power/main.c:86:
+               if ((error = pm_ops->prepare(state->type)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#114: FILE: kernel/power/main.c:97:
        if (pm_ops->finish)
+               pm_ops->finish(state->type);

ERROR:CODE_INDENT: code indent should use tabs where possible
#116: FILE: kernel/power/main.c:98:
+               pm_ops->finish(state->type);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: kernel/power/main.c:98:
+               pm_ops->finish(state->type);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#125: FILE: kernel/power/main.c:108:
+int suspend_enter(struct oppoint * state)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: kernel/power/main.c:119:
+       error = pm_ops->enter(state->type);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#143: FILE: kernel/power/main.c:135:
+static void suspend_finish(struct oppoint * state)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#149: FILE: kernel/power/main.c:141:
        if (pm_ops && pm_ops->finish)
+               pm_ops->finish(state->type);

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: kernel/power/main.c:142:
+               pm_ops->finish(state->type);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: kernel/power/main.c:142:
+               pm_ops->finish(state->type);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: kernel/power/main.c:148:
+       .name = "standby",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: kernel/power/main.c:149:
+       .type = PM_SUSPEND_STANDBY,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: kernel/power/main.c:153:
+       .name = "mem",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: kernel/power/main.c:154:
+       .type = PM_SUSPEND_MEM,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: kernel/power/main.c:155:
+       .frequency = 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: kernel/power/main.c:156:
+       .voltage = 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: kernel/power/main.c:157:
+       .latency = 150,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: kernel/power/main.c:162:
+       .name = "disk",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: kernel/power/main.c:163:
+       .type = PM_SUSPEND_DISK,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: kernel/power/main.c:168:
+       .name = "default",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: kernel/power/main.c:169:
+       .type = PM_FREQ_CHANGE,$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#185: FILE: kernel/power/main.c:171:
 };
+struct oppoint *current_state;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: kernel/power/main.c:178:
+       int error = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: kernel/power/main.c:180:
+       printk("OpPoint: changing from %s to %s\n", current_state->name,$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#194: FILE: kernel/power/main.c:180:
+       printk("OpPoint: changing from %s to %s\n", current_state->name,

ERROR:CODE_INDENT: code indent should use tabs where possible
#195: FILE: kernel/power/main.c:181:
+            state->name);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#195: FILE: kernel/power/main.c:181:
+       printk("OpPoint: changing from %s to %s\n", current_state->name,
+            state->name);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: kernel/power/main.c:181:
+            state->name);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: kernel/power/main.c:183:
+        * compare to current operating point.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#198: FILE: kernel/power/main.c:184:
+        * if different change to new operating point.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#199: FILE: kernel/power/main.c:185:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: kernel/power/main.c:186:
+       if (current_state == state)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#200: FILE: kernel/power/main.c:186:
+       if (current_state == state)
+               goto out;

ERROR:CODE_INDENT: code indent should use tabs where possible
#201: FILE: kernel/power/main.c:187:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: kernel/power/main.c:187:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: kernel/power/main.c:189:
+       if ((error = state->prepare_transition(current_state, state)))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#203: FILE: kernel/power/main.c:189:
+       if ((error = state->prepare_transition(current_state, state)))
+               goto out;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#203: FILE: kernel/power/main.c:189:
+       if ((error = state->prepare_transition(current_state, state)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#204: FILE: kernel/power/main.c:190:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: kernel/power/main.c:190:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: kernel/power/main.c:192:
+       if ((error = state->transition(current_state, state)))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 16)
#206: FILE: kernel/power/main.c:192:
+       if ((error = state->transition(current_state, state)))
+                state = current_state;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#206: FILE: kernel/power/main.c:192:
+       if ((error = state->transition(current_state, state)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#207: FILE: kernel/power/main.c:193:
+                state = current_state;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: kernel/power/main.c:193:
+                state = current_state;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: kernel/power/main.c:195:
+       if ((error = state->finish_transition(current_state, state)) == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#209: FILE: kernel/power/main.c:195:
+       if ((error = state->finish_transition(current_state, state)) == 0)
+               current_state = state;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#209: FILE: kernel/power/main.c:195:
+       if ((error = state->finish_transition(current_state, state)) == 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#210: FILE: kernel/power/main.c:196:
+               current_state = state;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: kernel/power/main.c:196:
+               current_state = state;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: kernel/power/main.c:199:
+       printk("OpPoint: State change returned %d\n", error);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#213: FILE: kernel/power/main.c:199:
+       printk("OpPoint: State change returned %d\n", error);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: kernel/power/main.c:200:
+       return error;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#218: FILE: kernel/power/main.c:203:
+static inline int valid_state(struct oppoint * state)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: kernel/power/main.c:207:
+       if (state->type == PM_SUSPEND_DISK)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#223: FILE: kernel/power/main.c:207:
+       if (state->type == PM_SUSPEND_DISK)
                return 1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: kernel/power/main.c:210:
+       if (pm_ops && pm_ops->valid && !pm_ops->valid(state->type))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#227: FILE: kernel/power/main.c:210:
+       if (pm_ops && pm_ops->valid && !pm_ops->valid(state->type))
                return 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: kernel/power/main.c:236:
+       if (state->type == PM_SUSPEND_DISK) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#254: FILE: kernel/power/main.c:236:
+       if (state->type == PM_SUSPEND_DISK) {
                error = pm_suspend_disk();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: kernel/power/main.c:241:
+       if (state->type == PM_FREQ_CHANGE || state->type == PM_VOLT_CHANGE) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#260: FILE: kernel/power/main.c:241:
+       if (state->type == PM_FREQ_CHANGE || state->type == PM_VOLT_CHANGE) {
+               error = pm_change_state(state);

ERROR:CODE_INDENT: code indent should use tabs where possible
#261: FILE: kernel/power/main.c:242:
+               error = pm_change_state(state);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: kernel/power/main.c:242:
+               error = pm_change_state(state);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#262: FILE: kernel/power/main.c:243:
+               goto Unlock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: kernel/power/main.c:243:
+               goto Unlock;$

CHECK:CAMELCASE: Avoid CamelCase: <Unlock>
#262: FILE: kernel/power/main.c:243:
+               goto Unlock;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: kernel/power/main.c:244:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: kernel/power/main.c:246:
+       pr_debug("PM: Preparing system for %s sleep\n", state->name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: kernel/power/main.c:250:
+       pr_debug("PM: Entering %s sleep\n", state->name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: kernel/power/main.c:266:
+       struct oppoint *this, *next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: kernel/power/main.c:267:
+       struct list_head *head = &mem.list;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: kernel/power/main.c:268:
+       int error = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: kernel/power/main.c:270:
+       list_for_each_entry_safe(this, next, head, list) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#283: FILE: kernel/power/main.c:270:
+       list_for_each_entry_safe(this, next, head, list) {
+               if (this->type == PM_SUSPEND_DISK)

ERROR:CODE_INDENT: code indent should use tabs where possible
#284: FILE: kernel/power/main.c:271:
+               if (this->type == PM_SUSPEND_DISK)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: kernel/power/main.c:271:
+               if (this->type == PM_SUSPEND_DISK)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#284: FILE: kernel/power/main.c:271:
+               if (this->type == PM_SUSPEND_DISK)
+                       error= enter_state(this);

ERROR:CODE_INDENT: code indent should use tabs where possible
#285: FILE: kernel/power/main.c:272:
+                       error= enter_state(this);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: kernel/power/main.c:272:
+                       error= enter_state(this);$

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#285: FILE: kernel/power/main.c:272:
+                       error= enter_state(this);
                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: kernel/power/main.c:273:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#287: FILE: kernel/power/main.c:274:
+       return error;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#296: FILE: kernel/power/main.c:286:
+int pm_suspend(struct oppoint * state)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: kernel/power/main.c:288:
+       if (state->type > PM_SUSPEND_ON && state->type <= PM_SUSPEND_MAX)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#299: FILE: kernel/power/main.c:288:
+       if (state->type > PM_SUSPEND_ON && state->type <= PM_SUSPEND_MAX)
                return enter_state(state);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#309: FILE: kernel/power/main.c:311:
+       struct oppoint *this, *next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#310: FILE: kernel/power/main.c:312:
+       struct list_head *head = &pm_list;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: kernel/power/main.c:313:
+       char *s = buf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: kernel/power/main.c:315:
+       list_for_each_entry_safe(this, next, head, list)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#313: FILE: kernel/power/main.c:315:
+       list_for_each_entry_safe(this, next, head, list)
+               s += sprintf(s,"%s ", this->name);

ERROR:CODE_INDENT: code indent should use tabs where possible
#314: FILE: kernel/power/main.c:316:
+               s += sprintf(s,"%s ", this->name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: kernel/power/main.c:316:
+               s += sprintf(s,"%s ", this->name);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#314: FILE: kernel/power/main.c:316:
+               s += sprintf(s,"%s ", this->name);
                              ^

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#326: FILE: kernel/power/main.c:323:
buf, size_t n)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: kernel/power/main.c:325:
+       struct oppoint *this, *next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: kernel/power/main.c:326:
+       struct list_head *head = &mem.list;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: kernel/power/main.c:328:
+       int error = -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: kernel/power/main.c:333:
+       list_for_each_entry_safe(this, next, head, list) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#342: FILE: kernel/power/main.c:333:
+       list_for_each_entry_safe(this, next, head, list) {
+               if ((strlen(this->name) == len) &&

ERROR:CODE_INDENT: code indent should use tabs where possible
#343: FILE: kernel/power/main.c:334:
+               if ((strlen(this->name) == len) &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: kernel/power/main.c:334:
+               if ((strlen(this->name) == len) &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#343: FILE: kernel/power/main.c:334:
+               if ((strlen(this->name) == len) &&
[...]
+                       error = enter_state(this);

ERROR:CODE_INDENT: code indent should use tabs where possible
#344: FILE: kernel/power/main.c:335:
+                  (!strncmp(this->name, buf, len))) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#344: FILE: kernel/power/main.c:335:
+               if ((strlen(this->name) == len) &&
+                  (!strncmp(this->name, buf, len))) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: kernel/power/main.c:335:
+                  (!strncmp(this->name, buf, len))) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#345: FILE: kernel/power/main.c:336:
+                       error = enter_state(this);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: kernel/power/main.c:336:
+                       error = enter_state(this);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#347: FILE: kernel/power/main.c:338:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: kernel/power/main.c:338:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#361: FILE: kernel/power/main.c:355:
+        .kset = &power_subsys.kset,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#361: FILE: kernel/power/main.c:355:
+        .kset = &power_subsys.kset,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#365: FILE: kernel/power/main.c:359:
+        struct attribute        attr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: kernel/power/main.c:359:
+        struct attribute        attr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#366: FILE: kernel/power/main.c:360:
+        ssize_t (*show)(struct kobject * kobj, char * buf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: kernel/power/main.c:360:
+        ssize_t (*show)(struct kobject * kobj, char * buf);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#366: FILE: kernel/power/main.c:360:
+        ssize_t (*show)(struct kobject * kobj, char * buf);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#366: FILE: kernel/power/main.c:360:
+        ssize_t (*show)(struct kobject * kobj, char * buf);

ERROR:CODE_INDENT: code indent should use tabs where possible
#367: FILE: kernel/power/main.c:361:
+        ssize_t (*store)(struct kobject * kobj, const char * buf,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: kernel/power/main.c:361:
+        ssize_t (*store)(struct kobject * kobj, const char * buf,$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#367: FILE: kernel/power/main.c:361:
+        ssize_t (*store)(struct kobject * kobj, const char * buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#367: FILE: kernel/power/main.c:361:
+        ssize_t (*store)(struct kobject * kobj, const char * buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#369: FILE: kernel/power/main.c:362:
+        ssize_t (*store)(struct kobject * kobj, const char * buf,
+};

ERROR:SPACING: space required after that ',' (ctx:VxV)
#371: FILE: kernel/power/main.c:364:
+#define to_oppoint(obj) container_of(obj,struct oppoint,kobj)
                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#371: FILE: kernel/power/main.c:364:
+#define to_oppoint(obj) container_of(obj,struct oppoint,kobj)
                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#372: FILE: kernel/power/main.c:365:
+#define to_oppoint_attr(_attr) container_of(_attr,struct
                                                  ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#378: FILE: kernel/power/main.c:370:
+static ssize_t oppoint_voltage_show(struct kobject * kobj, char * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#378: FILE: kernel/power/main.c:370:
+static ssize_t oppoint_voltage_show(struct kobject * kobj, char * buf)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: kernel/power/main.c:372:
+       ssize_t len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: kernel/power/main.c:373:
+       struct oppoint *opt = to_oppoint(kobj);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: kernel/power/main.c:375:
+       len = sprintf(buf, "%8d\n", opt->voltage);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: kernel/power/main.c:377:
+       return len;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#388: FILE: kernel/power/main.c:380:
+static ssize_t oppoint_voltage_store(struct kobject * kobj, const char * buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#388: FILE: kernel/power/main.c:380:
+static ssize_t oppoint_voltage_store(struct kobject * kobj, const char * buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#389: FILE: kernel/power/main.c:381:
+static ssize_t oppoint_voltage_store(struct kobject * kobj, const char * buf,
+       size_t n)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: kernel/power/main.c:381:
+       size_t n)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#391: FILE: kernel/power/main.c:383:
+        return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#391: FILE: kernel/power/main.c:383:
+        return -EINVAL;$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#393: FILE: kernel/power/main.c:385:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#395: FILE: kernel/power/main.c:387:
+static ssize_t oppoint_frequency_show(struct kobject * kobj, char * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#395: FILE: kernel/power/main.c:387:
+static ssize_t oppoint_frequency_show(struct kobject * kobj, char * buf)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#397: FILE: kernel/power/main.c:389:
+       ssize_t len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: kernel/power/main.c:390:
+       struct oppoint *opt = to_oppoint(kobj);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#400: FILE: kernel/power/main.c:392:
+       len = sprintf(buf, "%8d\n", opt->frequency);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#402: FILE: kernel/power/main.c:394:
+       return len;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#405: FILE: kernel/power/main.c:397:
+static ssize_t oppoint_frequency_store(struct kobject * kobj,

ERROR:CODE_INDENT: code indent should use tabs where possible
#406: FILE: kernel/power/main.c:398:
+        const char * buf, size_t n)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#406: FILE: kernel/power/main.c:398:
+static ssize_t oppoint_frequency_store(struct kobject * kobj,
+        const char * buf, size_t n)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#406: FILE: kernel/power/main.c:398:
+        const char * buf, size_t n)$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#406: FILE: kernel/power/main.c:398:
+        const char * buf, size_t n)

ERROR:CODE_INDENT: code indent should use tabs where possible
#408: FILE: kernel/power/main.c:400:
+        return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: kernel/power/main.c:400:
+        return -EINVAL;$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#410: FILE: kernel/power/main.c:402:
+
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#412: FILE: kernel/power/main.c:404:
+static ssize_t oppoint_point_show(struct kobject * kobj, char * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#412: FILE: kernel/power/main.c:404:
+static ssize_t oppoint_point_show(struct kobject * kobj, char * buf)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#414: FILE: kernel/power/main.c:406:
+       ssize_t len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#416: FILE: kernel/power/main.c:408:
+       len = sprintf(buf, "%s\n", current_state->name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#418: FILE: kernel/power/main.c:410:
+       return len;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#421: FILE: kernel/power/main.c:413:
+static ssize_t oppoint_point_store(struct kobject * kobj, const char * buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#421: FILE: kernel/power/main.c:413:
+static ssize_t oppoint_point_store(struct kobject * kobj, const char * buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#422: FILE: kernel/power/main.c:414:
+static ssize_t oppoint_point_store(struct kobject * kobj, const char * buf,
+       size_t n)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#422: FILE: kernel/power/main.c:414:
+       size_t n)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#424: FILE: kernel/power/main.c:416:
+        struct oppoint *this, *next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#424: FILE: kernel/power/main.c:416:
+        struct oppoint *this, *next;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#425: FILE: kernel/power/main.c:417:
+        struct list_head *head = &pm_states.list;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#425: FILE: kernel/power/main.c:417:
+        struct list_head *head = &pm_states.list;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#426: FILE: kernel/power/main.c:418:
+        char *p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#426: FILE: kernel/power/main.c:418:
+        char *p;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#427: FILE: kernel/power/main.c:419:
+        int error = -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#427: FILE: kernel/power/main.c:419:
+        int error = -EINVAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#428: FILE: kernel/power/main.c:420:
+        int len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#428: FILE: kernel/power/main.c:420:
+        int len;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#430: FILE: kernel/power/main.c:422:
+        p = memchr(buf, '\n', n);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#430: FILE: kernel/power/main.c:422:
+        p = memchr(buf, '\n', n);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#431: FILE: kernel/power/main.c:423:
+        len = p ? p - buf : n;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#431: FILE: kernel/power/main.c:423:
+        len = p ? p - buf : n;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#432: FILE: kernel/power/main.c:424:
+        list_for_each_entry_safe(this, next, head, list) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#432: FILE: kernel/power/main.c:424:
+        list_for_each_entry_safe(this, next, head, list) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#433: FILE: kernel/power/main.c:425:
+                if ((strlen(this->name) == len) &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#433: FILE: kernel/power/main.c:425:
+                if ((strlen(this->name) == len) &&$

ERROR:CODE_INDENT: code indent should use tabs where possible
#434: FILE: kernel/power/main.c:426:
+                   (!strncmp(this->name, buf, len))) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#434: FILE: kernel/power/main.c:426:
+                if ((strlen(this->name) == len) &&
+                   (!strncmp(this->name, buf, len))) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#434: FILE: kernel/power/main.c:426:
+                   (!strncmp(this->name, buf, len))) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#435: FILE: kernel/power/main.c:427:
+                        error = enter_state(this);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#435: FILE: kernel/power/main.c:427:
+                        error = enter_state(this);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#436: FILE: kernel/power/main.c:428:
+                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#436: FILE: kernel/power/main.c:428:
+                        break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#437: FILE: kernel/power/main.c:429:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#437: FILE: kernel/power/main.c:429:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#438: FILE: kernel/power/main.c:430:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#438: FILE: kernel/power/main.c:430:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#439: FILE: kernel/power/main.c:431:
+        return error ? error : n;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#439: FILE: kernel/power/main.c:431:
+        return error ? error : n;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#442: FILE: kernel/power/main.c:434:
+static ssize_t oppoint_latency_show(struct kobject * kobj, char * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#442: FILE: kernel/power/main.c:434:
+static ssize_t oppoint_latency_show(struct kobject * kobj, char * buf)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#444: FILE: kernel/power/main.c:436:
+       ssize_t len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#445: FILE: kernel/power/main.c:437:
+       struct oppoint *opt = to_oppoint(kobj);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#447: FILE: kernel/power/main.c:439:
+       len = sprintf(buf, "%8d\n", opt->latency);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#449: FILE: kernel/power/main.c:441:
+       return len;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#452: FILE: kernel/power/main.c:444:
+static ssize_t oppoint_latency_store(struct kobject * kobj,

ERROR:CODE_INDENT: code indent should use tabs where possible
#453: FILE: kernel/power/main.c:445:
+        const char * buf, size_t n)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#453: FILE: kernel/power/main.c:445:
+static ssize_t oppoint_latency_store(struct kobject * kobj,
+        const char * buf, size_t n)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#453: FILE: kernel/power/main.c:445:
+        const char * buf, size_t n)$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#453: FILE: kernel/power/main.c:445:
+        const char * buf, size_t n)

ERROR:CODE_INDENT: code indent should use tabs where possible
#455: FILE: kernel/power/main.c:447:
+        return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#455: FILE: kernel/power/main.c:447:
+        return -EINVAL;$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#457: FILE: kernel/power/main.c:449:
+
+}

ERROR:CODE_INDENT: code indent should use tabs where possible
#460: FILE: kernel/power/main.c:452:
+        .attr   = {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#460: FILE: kernel/power/main.c:452:
+        .attr   = {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#461: FILE: kernel/power/main.c:453:
+                .name = "current_point",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: kernel/power/main.c:453:
+                .name = "current_point",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#462: FILE: kernel/power/main.c:454:
+                .mode = 0600,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#462: FILE: kernel/power/main.c:454:
+                .mode = 0600,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#463: FILE: kernel/power/main.c:455:
+        },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: kernel/power/main.c:455:
+        },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#464: FILE: kernel/power/main.c:456:
+        .show   = oppoint_point_show,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#464: FILE: kernel/power/main.c:456:
+        .show   = oppoint_point_show,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#465: FILE: kernel/power/main.c:457:
+        .store  = oppoint_point_store,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#465: FILE: kernel/power/main.c:457:
+        .store  = oppoint_point_store,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#469: FILE: kernel/power/main.c:461:
+        .attr   = {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#469: FILE: kernel/power/main.c:461:
+        .attr   = {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#470: FILE: kernel/power/main.c:462:
+                .name = "frequency",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#470: FILE: kernel/power/main.c:462:
+                .name = "frequency",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#471: FILE: kernel/power/main.c:463:
+                .mode = 0400,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#471: FILE: kernel/power/main.c:463:
+                .mode = 0400,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#472: FILE: kernel/power/main.c:464:
+        },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#472: FILE: kernel/power/main.c:464:
+        },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#473: FILE: kernel/power/main.c:465:
+        .show   = oppoint_frequency_show,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#473: FILE: kernel/power/main.c:465:
+        .show   = oppoint_frequency_show,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#474: FILE: kernel/power/main.c:466:
+        .store  = oppoint_frequency_store,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#474: FILE: kernel/power/main.c:466:
+        .store  = oppoint_frequency_store,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#478: FILE: kernel/power/main.c:470:
+        .attr   = {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#478: FILE: kernel/power/main.c:470:
+        .attr   = {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#479: FILE: kernel/power/main.c:471:
+                .name = "voltage",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#479: FILE: kernel/power/main.c:471:
+                .name = "voltage",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#480: FILE: kernel/power/main.c:472:
+                .mode = 0400,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#480: FILE: kernel/power/main.c:472:
+                .mode = 0400,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#481: FILE: kernel/power/main.c:473:
+        },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#481: FILE: kernel/power/main.c:473:
+        },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#482: FILE: kernel/power/main.c:474:
+        .show   = oppoint_voltage_show,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#482: FILE: kernel/power/main.c:474:
+        .show   = oppoint_voltage_show,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#483: FILE: kernel/power/main.c:475:
+        .store  = oppoint_voltage_store,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#483: FILE: kernel/power/main.c:475:
+        .store  = oppoint_voltage_store,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#487: FILE: kernel/power/main.c:479:
+        .attr   = {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#487: FILE: kernel/power/main.c:479:
+        .attr   = {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#488: FILE: kernel/power/main.c:480:
+                .name = "latency",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: kernel/power/main.c:480:
+                .name = "latency",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#489: FILE: kernel/power/main.c:481:
+                .mode = 0400,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: kernel/power/main.c:481:
+                .mode = 0400,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#490: FILE: kernel/power/main.c:482:
+        },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#490: FILE: kernel/power/main.c:482:
+        },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#491: FILE: kernel/power/main.c:483:
+        .show   = oppoint_latency_show,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#491: FILE: kernel/power/main.c:483:
+        .show   = oppoint_latency_show,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#492: FILE: kernel/power/main.c:484:
+        .store  = oppoint_latency_store,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#492: FILE: kernel/power/main.c:484:
+        .store  = oppoint_latency_store,$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#496: FILE: kernel/power/main.c:488:
+oppoint_attr_show(struct kobject * kobj, struct attribute * attr, char * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#496: FILE: kernel/power/main.c:488:
+oppoint_attr_show(struct kobject * kobj, struct attribute * attr, char * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#496: FILE: kernel/power/main.c:488:
+oppoint_attr_show(struct kobject * kobj, struct attribute * attr, char * buf)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#498: FILE: kernel/power/main.c:490:
+       struct oppoint_attribute * opt_attr = to_oppoint_attr(attr);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#498: FILE: kernel/power/main.c:490:
+       struct oppoint_attribute * opt_attr = to_oppoint_attr(attr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#499: FILE: kernel/power/main.c:491:
+       ssize_t ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#501: FILE: kernel/power/main.c:493:
+       if (opt_attr->show)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#501: FILE: kernel/power/main.c:493:
+       if (opt_attr->show)
+               ret = opt_attr->show(kobj,buf);

ERROR:CODE_INDENT: code indent should use tabs where possible
#502: FILE: kernel/power/main.c:494:
+               ret = opt_attr->show(kobj,buf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#502: FILE: kernel/power/main.c:494:
+               ret = opt_attr->show(kobj,buf);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#502: FILE: kernel/power/main.c:494:
+               ret = opt_attr->show(kobj,buf);
                                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#503: FILE: kernel/power/main.c:495:
+       return ret;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#507: FILE: kernel/power/main.c:499:
+oppoint_attr_store(struct kobject * kobj, struct attribute * attr,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#507: FILE: kernel/power/main.c:499:
+oppoint_attr_store(struct kobject * kobj, struct attribute * attr,

ERROR:CODE_INDENT: code indent should use tabs where possible
#508: FILE: kernel/power/main.c:500:
+             const char * buf, size_t count)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#508: FILE: kernel/power/main.c:500:
+oppoint_attr_store(struct kobject * kobj, struct attribute * attr,
+             const char * buf, size_t count)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#508: FILE: kernel/power/main.c:500:
+             const char * buf, size_t count)$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#508: FILE: kernel/power/main.c:500:
+             const char * buf, size_t count)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#510: FILE: kernel/power/main.c:502:
+       return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#515: FILE: kernel/power/main.c:507:
+       return;$

WARNING:CONST_STRUCT: struct sysfs_ops should normally be const
#518: FILE: kernel/power/main.c:510:
+static struct sysfs_ops oppoint_sysfs_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#519: FILE: kernel/power/main.c:511:
+       .show   = oppoint_attr_show,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#520: FILE: kernel/power/main.c:512:
+       .store  = oppoint_attr_store,$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#523: FILE: kernel/power/main.c:515:
+static struct attribute * oppoint_default_attrs[] = {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#524: FILE: kernel/power/main.c:516:
+       &frequency_attr.attr,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#525: FILE: kernel/power/main.c:517:
+       &voltage_attr.attr,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#526: FILE: kernel/power/main.c:518:
+       &latency_attr.attr,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#527: FILE: kernel/power/main.c:519:
+       NULL,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#531: FILE: kernel/power/main.c:523:
+        .release        = oppoint_kobj_release,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#531: FILE: kernel/power/main.c:523:
+        .release        = oppoint_kobj_release,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#532: FILE: kernel/power/main.c:524:
+        .sysfs_ops      = &oppoint_sysfs_ops,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#532: FILE: kernel/power/main.c:524:
+        .sysfs_ops      = &oppoint_sysfs_ops,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#533: FILE: kernel/power/main.c:525:
+        .default_attrs  = oppoint_default_attrs,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#533: FILE: kernel/power/main.c:525:
+        .default_attrs  = oppoint_default_attrs,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#538: FILE: kernel/power/main.c:530:
+       down(&pm_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#539: FILE: kernel/power/main.c:531:
+       list_del_init(&opt->list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#540: FILE: kernel/power/main.c:532:
+       sysfs_remove_file(&opt->kobj, &frequency_attr.attr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#541: FILE: kernel/power/main.c:533:
+       sysfs_remove_file(&opt->kobj, &voltage_attr.attr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#542: FILE: kernel/power/main.c:534:
+       sysfs_remove_file(&opt->kobj, &latency_attr.attr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#543: FILE: kernel/power/main.c:535:
+       up(&pm_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#545: FILE: kernel/power/main.c:537:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#551: FILE: kernel/power/main.c:543:
+       down(&pm_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#552: FILE: kernel/power/main.c:544:
+       kobject_set_name(&opt->kobj, opt->name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#553: FILE: kernel/power/main.c:545:
+       opt->kobj.kset = &power_subsys.kset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#554: FILE: kernel/power/main.c:546:
+       opt->kobj.parent = &oppoint_kobj;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#555: FILE: kernel/power/main.c:547:
+       opt->kobj.ktype = &ktype_operating_point;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#556: FILE: kernel/power/main.c:548:
+       kobject_register(&opt->kobj);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#558: FILE: kernel/power/main.c:550:
+       sysfs_create_file(&opt->kobj, &frequency_attr.attr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#559: FILE: kernel/power/main.c:551:
+       sysfs_create_file(&opt->kobj, &voltage_attr.attr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#560: FILE: kernel/power/main.c:552:
+       sysfs_create_file(&opt->kobj, &latency_attr.attr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#562: FILE: kernel/power/main.c:554:
+       list_add_tail(&opt->list, &pm_states.list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#563: FILE: kernel/power/main.c:555:
+       up(&pm_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#564: FILE: kernel/power/main.c:556:
+       return 0;$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#570: FILE: kernel/power/main.c:562:
 {
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#573: FILE: kernel/power/main.c:564:
+       if (!error) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#573: FILE: kernel/power/main.c:564:
+       if (!error) {
                error = sysfs_create_group(&power_subsys.kset.kobj,&attr_group);

ERROR:CODE_INDENT: code indent should use tabs where possible
#575: FILE: kernel/power/main.c:566:
+               kobject_set_name(&oppoint_kobj, "operating_points");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#575: FILE: kernel/power/main.c:566:
+               kobject_set_name(&oppoint_kobj, "operating_points");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#576: FILE: kernel/power/main.c:567:
+               kobject_register(&oppoint_kobj);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#576: FILE: kernel/power/main.c:567:
+               kobject_register(&oppoint_kobj);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#577: FILE: kernel/power/main.c:568:
+               sysfs_create_file(&oppoint_kobj, &point_attr.attr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#577: FILE: kernel/power/main.c:568:
+               sysfs_create_file(&oppoint_kobj, &point_attr.attr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#578: FILE: kernel/power/main.c:569:
+       }$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#580: FILE: kernel/power/main.c:571:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#581: FILE: kernel/power/main.c:572:
+       INIT_LIST_HEAD(&pm_states.list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#582: FILE: kernel/power/main.c:573:
+       INIT_LIST_HEAD(&pm_list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#585: FILE: kernel/power/main.c:576:
+       list_add(&disk.list, &pm_list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#587: FILE: kernel/power/main.c:578:
+       list_add(&standby.list, &pm_list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#588: FILE: kernel/power/main.c:579:
+       list_add(&mem.list, &pm_list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#589: FILE: kernel/power/main.c:580:
+       current_state = &pm_states;$

CHECK:SPACING: No space is necessary after a cast
#611: FILE: include/linux/pm.h:112:
+#define PM_FREQ_CHANGE         ((__force suspend_state_t) 5)

CHECK:SPACING: No space is necessary after a cast
#612: FILE: include/linux/pm.h:113:
+#define PM_VOLT_CHANGE         ((__force suspend_state_t) 6)

CHECK:SPACING: No space is necessary after a cast
#613: FILE: include/linux/pm.h:114:
+#define PM_SUSPEND_MAX         ((__force suspend_state_t) 7)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#616: FILE: include/linux/pm.h:117:
+       struct list_head list;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#617: FILE: include/linux/pm.h:118:
+       suspend_state_t type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#618: FILE: include/linux/pm.h:119:
+       char *name;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#619: FILE: include/linux/pm.h:120:
+       unsigned int flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#620: FILE: include/linux/pm.h:121:
+       unsigned int frequency;         /* in KHz */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#621: FILE: include/linux/pm.h:122:
+       unsigned int voltage;           /* mV */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#622: FILE: include/linux/pm.h:123:
+       unsigned int latency;           /* transition latency in us */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#623: FILE: include/linux/pm.h:124:
+       int     (*prepare_transition)(struct oppoint *cur, struct oppoint *new);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#624: FILE: include/linux/pm.h:125:
+       int     (*transition)(struct oppoint *cur, struct oppoint *new);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#625: FILE: include/linux/pm.h:126:
+       int     (*finish_transition)(struct oppoint *cur, struct oppoint *new);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#627: FILE: include/linux/pm.h:128:
+       void *md_data;                  /* arch dependent data */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#628: FILE: include/linux/pm.h:129:
+       struct kobject kobj;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#631: FILE: include/linux/pm.h:132:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#634: FILE: include/linux/pm.h:135:
+extern int register_operating_point(struct oppoint *opt);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#635: FILE: include/linux/pm.h:136:
+extern int unregister_operating_point(struct oppoint *opt);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#645: FILE: include/linux/pm.h:157:
+extern int pm_suspend(struct oppoint *state);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#658: FILE: kernel/power/power.h:116:
+extern int suspend_enter(struct oppoint * state);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#658: FILE: kernel/power/power.h:116:
+extern int suspend_enter(struct oppoint * state);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000037579.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 121 errors, 208 warnings, 24 checks, 548 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000037579.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
