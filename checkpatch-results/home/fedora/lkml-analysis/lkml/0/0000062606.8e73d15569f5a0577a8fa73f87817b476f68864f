WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
instructions, so please give it a test drive if you can spare a few minutes. 

WARNING:TYPO_SPELLING: 'lenghts' may be misspelled - perhaps 'lengths'?
#304: FILE: Documentation/networking/udplite.txt:236:
+  coverage lenghts are likely to be expected.
            ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#415: FILE: net/ipv4/Kconfig:594:
+config IP_UDPLITE
+	bool "The UDP-Lite Protocol (EXPERIMENTAL)"
+	depends on INET && EXPERIMENTAL
+        default n
+	---help---
+	  The UDP-Lite Protocol            <http://www.ietf.org/rfc/rfc3828.txt>
+
+	  UDP-Lite is  a Standards-Track IETF  transport protocol (RFC 3828). It
+	  features  a  variable-length checksum;  which allows partially damaged
+	  packets  to  be forwarded to media codecs, rather than being discarded
+	  due to invalid (UDP) checksum values. This can have advantages for the
+	  transport of multimedia (e.g. video/audio) over wireless networks.
+
+	  The protocol runs on both IPv4 and IPv6. The socket API resembles that
+	  of UDP. Applications must indicate their wish to utilise the partial
+	  checksum coverage feature by setting a socket option; UDP-Lite will
+	  otherwise run in (compatible) UDP mode.
+
+	  Detailed documentation in <file:Documentation/networking/udplite.txt>.
+
+	  If in doubt, say N.

Kconfig symbols should have a help text which fully describes
it.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#462: FILE: include/net/snmp.h:103:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following enum go on the same line
#495: FILE: include/linux/snmp.h:166:
+enum
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#543: FILE: include/linux/in.h:47:
+  IPPROTO_UDPLITE = 136,^I/* UDP-Lite Protocol (RFC 3828)^I        */$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#551: FILE: include/linux/udplite.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#592: FILE: include/linux/udplite.h:42:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#620: FILE: include/linux/udplite.h:70:
+	 *  UDP-Lite header when the socket is uncorked.  */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please don't use multiple blank lines
#635: FILE: include/linux/udplite.h:85:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#651: FILE: include/net/udplite.h:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#671: FILE: include/net/udplite.h:21:
+#include <net/udp.h>       ^I/* for UDP_HTABLE_SIZE and proc structures */$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#684: FILE: include/net/udplite.h:34:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#686: FILE: include/net/udplite.h:36:
+ *      ^I   and hashing code needs to work with different AF's yet$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#687: FILE: include/net/udplite.h:37:
+ *            ^I   the port space is shared.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#689: FILE: include/net/udplite.h:39:
+extern struct hlist_head ^Iudplite_hash[UDP_HTABLE_SIZE];$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#690: FILE: include/net/udplite.h:40:
+extern rwlock_t ^I^Iudplite_hash_lock;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#691: FILE: include/net/udplite.h:41:
+extern int ^I^I^Iudplite_port_rover;$

WARNING:TABSTOP: Statements should start on a tabstop
#699: FILE: include/net/udplite.h:49:
+	    if (inet_sk(sk)->num == num)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#704: FILE: include/net/udplite.h:54:
+/* ^Inet/ipv4/udplite.c ^I*/$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#705: FILE: include/net/udplite.h:55:
+extern unsigned int udplite_poll(struct file *file, struct socket *sock,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#707: FILE: include/net/udplite.h:57:
+extern int  ^I    udplite_rcv(struct sk_buff *skb);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#707: FILE: include/net/udplite.h:57:
+extern int  	    udplite_rcv(struct sk_buff *skb);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#708: FILE: include/net/udplite.h:58:
+extern void	    udplite_err(struct sk_buff *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sk_buff *' should also have an identifier name
#708: FILE: include/net/udplite.h:58:
+extern void	    udplite_err(struct sk_buff *, u32);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#708: FILE: include/net/udplite.h:58:
+extern void	    udplite_err(struct sk_buff *, u32);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#709: FILE: include/net/udplite.h:59:
+extern int  ^I    udplite_disconnect(struct sock *sk, int flags);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#709: FILE: include/net/udplite.h:59:
+extern int  	    udplite_disconnect(struct sock *sk, int flags);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#710: FILE: include/net/udplite.h:60:
+extern int  ^I    udplite_ioctl(struct sock *sk, int cmd, unsigned long arg);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#710: FILE: include/net/udplite.h:60:
+extern int  	    udplite_ioctl(struct sock *sk, int cmd, unsigned long arg);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#711: FILE: include/net/udplite.h:61:
+extern int  ^I    udplite_sendmsg(struct kiocb *iocb, struct sock *sk,$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#711: FILE: include/net/udplite.h:61:
+extern int  	    udplite_sendmsg(struct kiocb *iocb, struct sock *sk,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#713: FILE: include/net/udplite.h:63:
+extern int          udplite_getfrag(void *from, char *to, int off, int len,

ERROR:CODE_INDENT: code indent should use tabs where possible
#714: FILE: include/net/udplite.h:64:
+^I^I^I            int odd, struct sk_buff *skb);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#714: FILE: include/net/udplite.h:64:
+extern int          udplite_getfrag(void *from, char *to, int off, int len,
+			            int odd, struct sk_buff *skb);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#726: FILE: include/net/udplite.h:76:
+#if defined(CONFIG_IPV6) || defined (CONFIG_IPV6_MODULE)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#733: FILE: include/net/udplite.h:83:
+};
+#define UDPLITE_SKB_CB(skb)	((struct udplite_skb_cb *)&((skb)->cb))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#735: FILE: include/net/udplite.h:85:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#737: FILE: include/net/udplite.h:87:
+ * ^ICalculate / check variable-length UDP-Lite checksum$

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#741: FILE: include/net/udplite.h:91:
+	if (! UDPLITE_SKB_CB(skb)->partial)
 	    ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#754: FILE: include/net/udplite.h:104:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#758: FILE: include/net/udplite.h:108:
+extern int  udplite_proc_register(struct udp_seq_afinfo *afinfo);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#759: FILE: include/net/udplite.h:109:
+extern void udplite_proc_unregister(struct udp_seq_afinfo *afinfo);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#761: FILE: include/net/udplite.h:111:
+extern int  udplite4_proc_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#762: FILE: include/net/udplite.h:112:
+extern void udplite4_proc_exit(void);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000062606.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 23 warnings, 19 checks, 659 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000062606.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
