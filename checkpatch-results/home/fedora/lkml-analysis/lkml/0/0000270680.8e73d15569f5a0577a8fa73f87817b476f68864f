WARNING:TYPO_SPELLING: 'doesnt' may be misspelled - perhaps 'doesn't'?
#35: 
	processors in the system.  This doesnt happen on most systems, but
	                                ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
      - this should apply clean to latest linus tree.  (test-applied against

CHECK:CAMELCASE: Avoid CamelCase: <itLpNaca>
#82: FILE: arch/ppc64/kernel/LparData.c:127:
+EXPORT_SYMBOL(itLpNaca);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <xItExtVpdPanel>
#89: FILE: arch/ppc64/kernel/LparData.c:134:
+EXPORT_SYMBOL(xItExtVpdPanel);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#123: FILE: arch/ppc64/kernel/lparcfg.c:41:
+void log_plpar_hcall_return(unsigned long rc,char * tag)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#123: FILE: arch/ppc64/kernel/lparcfg.c:41:
+void log_plpar_hcall_return(unsigned long rc,char * tag)
                                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#125: FILE: arch/ppc64/kernel/lparcfg.c:43:
+	if (rc==0) /* success, return */
 	      ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#129: FILE: arch/ppc64/kernel/lparcfg.c:47:
+		printk(KERN_INFO "plpar-hcall (%s) failed with hardware fault\n",tag);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#129: FILE: arch/ppc64/kernel/lparcfg.c:47:
+		printk(KERN_INFO "plpar-hcall (%s) failed with hardware fault\n",tag);
 		                                                                ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#131: FILE: arch/ppc64/kernel/lparcfg.c:49:
+		printk(KERN_INFO "plpar-hcall (%s) failed; function not allowed\n",tag);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#131: FILE: arch/ppc64/kernel/lparcfg.c:49:
+		printk(KERN_INFO "plpar-hcall (%s) failed; function not allowed\n",tag);
 		                                                                  ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#133: FILE: arch/ppc64/kernel/lparcfg.c:51:
+		printk(KERN_INFO "plpar-hcall (%s) failed; not authorized to this function\n",tag);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#133: FILE: arch/ppc64/kernel/lparcfg.c:51:
+		printk(KERN_INFO "plpar-hcall (%s) failed; not authorized to this function\n",tag);
 		                                                                             ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#135: FILE: arch/ppc64/kernel/lparcfg.c:53:
+		printk(KERN_INFO "plpar-hcall (%s) failed; Bad parameter(s)\n",tag);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#135: FILE: arch/ppc64/kernel/lparcfg.c:53:
+		printk(KERN_INFO "plpar-hcall (%s) failed; Bad parameter(s)\n",tag);
 		                                                              ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#137: FILE: arch/ppc64/kernel/lparcfg.c:55:
+		printk(KERN_INFO "plpar-hcall (%s) failed with unexpected rc(0x%lx)\n",tag,rc);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#137: FILE: arch/ppc64/kernel/lparcfg.c:55:
+		printk(KERN_INFO "plpar-hcall (%s) failed with unexpected rc(0x%lx)\n",tag,rc);
 		                                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#137: FILE: arch/ppc64/kernel/lparcfg.c:55:
+		printk(KERN_INFO "plpar-hcall (%s) failed with unexpected rc(0x%lx)\n",tag,rc);
 		                                                                          ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#139: FILE: arch/ppc64/kernel/lparcfg.c:57:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#141: FILE: arch/ppc64/kernel/lparcfg.c:59:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#227: FILE: arch/ppc64/kernel/lparcfg.c:67:
+extern unsigned char e2a(unsigned char);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char' should also have an identifier name
#227: FILE: arch/ppc64/kernel/lparcfg.c:67:
+extern unsigned char e2a(unsigned char);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#233: FILE: arch/ppc64/kernel/lparcfg.c:72:
+static int lparcfg_data(struct seq_file *m,void *v)
                                           ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#233: FILE: arch/ppc64/kernel/lparcfg.c:72:
+static int lparcfg_data(struct seq_file *m,void *v)
  {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#250: FILE: arch/ppc64/kernel/lparcfg.c:81:
+	seq_printf(m, "serial_number=%c%c%c%c%c%c%c\n",
  		      e2a(xItExtVpdPanel.mfgID[2]),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#260: FILE: arch/ppc64/kernel/lparcfg.c:90:
+	seq_printf(m, "system_type=%c%c%c%c\n",
  		      e2a(xItExtVpdPanel.machineType[0]),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#273: FILE: arch/ppc64/kernel/lparcfg.c:99:
+	seq_printf(m, "system_active_processors=%d\n",
  		      (int)HvLpConfig_getSystemPhysicalProcessors());

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#278: FILE: arch/ppc64/kernel/lparcfg.c:102:
+	seq_printf(m, "system_potential_processors=%d\n",
  		      (int)HvLpConfig_getSystemPhysicalProcessors());

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#303: FILE: arch/ppc64/kernel/lparcfg.c:120:
+	seq_printf(m, "partition_max_entitled_capacity=%d\n",
  		      max_entitled_capacity);

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#312: FILE: arch/ppc64/kernel/lparcfg.c:125:
+		seq_printf(m, "pool_capacity=%d\n", (int)(HvLpConfig_getNumProcsInSharedPool(pool_id)*100));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#312: FILE: arch/ppc64/kernel/lparcfg.c:125:
+		seq_printf(m, "pool_capacity=%d\n", (int)(HvLpConfig_getNumProcsInSharedPool(pool_id)*100));
 		                                                                                     ^

CHECK:CAMELCASE: Avoid CamelCase: <HvLpConfig_getNumProcsInSharedPool>
#312: FILE: arch/ppc64/kernel/lparcfg.c:125:
+		seq_printf(m, "pool_capacity=%d\n", (int)(HvLpConfig_getNumProcsInSharedPool(pool_id)*100));

WARNING:LONG_LINE: line length of 133 exceeds 100 columns
#335: FILE: arch/ppc64/kernel/lparcfg.c:159:
+static unsigned int h_get_ppp(unsigned long *entitled,unsigned long  *unallocated,unsigned long *aggregation,unsigned long *resource)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#335: FILE: arch/ppc64/kernel/lparcfg.c:159:
+static unsigned int h_get_ppp(unsigned long *entitled,unsigned long  *unallocated,unsigned long *aggregation,unsigned long *resource)
                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#335: FILE: arch/ppc64/kernel/lparcfg.c:159:
+static unsigned int h_get_ppp(unsigned long *entitled,unsigned long  *unallocated,unsigned long *aggregation,unsigned long *resource)
                                                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#335: FILE: arch/ppc64/kernel/lparcfg.c:159:
+static unsigned int h_get_ppp(unsigned long *entitled,unsigned long  *unallocated,unsigned long *aggregation,unsigned long *resource)
                                                                                                             ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#335: FILE: arch/ppc64/kernel/lparcfg.c:159:
+static unsigned int h_get_ppp(unsigned long *entitled,unsigned long  *unallocated,unsigned long *aggregation,unsigned long *resource)
  {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#341: FILE: arch/ppc64/kernel/lparcfg.c:164:
+	log_plpar_hcall_return(rc,"H_GET_PPP");
 	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#350: FILE: arch/ppc64/kernel/lparcfg.c:169:
+static void h_pic(unsigned long *pool_idle_time,unsigned long *num_procs)
                                                ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#354: FILE: arch/ppc64/kernel/lparcfg.c:173:
+	unsigned long dummy;
+	rc = plpar_hcall(H_PIC,0,0,0,0,pool_idle_time,num_procs,&dummy);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#354: FILE: arch/ppc64/kernel/lparcfg.c:173:
+	rc = plpar_hcall(H_PIC,0,0,0,0,pool_idle_time,num_procs,&dummy);
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#354: FILE: arch/ppc64/kernel/lparcfg.c:173:
+	rc = plpar_hcall(H_PIC,0,0,0,0,pool_idle_time,num_procs,&dummy);
 	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#354: FILE: arch/ppc64/kernel/lparcfg.c:173:
+	rc = plpar_hcall(H_PIC,0,0,0,0,pool_idle_time,num_procs,&dummy);
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#354: FILE: arch/ppc64/kernel/lparcfg.c:173:
+	rc = plpar_hcall(H_PIC,0,0,0,0,pool_idle_time,num_procs,&dummy);
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#354: FILE: arch/ppc64/kernel/lparcfg.c:173:
+	rc = plpar_hcall(H_PIC,0,0,0,0,pool_idle_time,num_procs,&dummy);
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#354: FILE: arch/ppc64/kernel/lparcfg.c:173:
+	rc = plpar_hcall(H_PIC,0,0,0,0,pool_idle_time,num_procs,&dummy);
 	                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#354: FILE: arch/ppc64/kernel/lparcfg.c:173:
+	rc = plpar_hcall(H_PIC,0,0,0,0,pool_idle_time,num_procs,&dummy);
 	                                                       ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#354: FILE: arch/ppc64/kernel/lparcfg.c:173:
+	rc = plpar_hcall(H_PIC,0,0,0,0,pool_idle_time,num_procs,&dummy);
 	                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#356: FILE: arch/ppc64/kernel/lparcfg.c:175:
+	log_plpar_hcall_return(rc,"H_PIC");
 	                         ^

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - unsigned long get_purr() should probably be unsigned long get_purr(void)
#364: FILE: arch/ppc64/kernel/lparcfg.c:183:
+static unsigned long get_purr()

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#366: FILE: arch/ppc64/kernel/lparcfg.c:185:
+	unsigned long sum_purr=0;
 	                      ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#380: FILE: arch/ppc64/kernel/lparcfg.c:198:
+static void parse_system_parameter_string(struct seq_file *m)
  {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#391: FILE: arch/ppc64/kernel/lparcfg.c:203:
+	char * local_buffer = kmalloc(SPLPAR_MAXLENGTH, GFP_KERNEL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#392: FILE: arch/ppc64/kernel/lparcfg.c:204:
+	char * local_buffer = kmalloc(SPLPAR_MAXLENGTH, GFP_KERNEL);
+	if (!local_buffer) {

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#393: FILE: arch/ppc64/kernel/lparcfg.c:205:
+		printk(KERN_ERR "%s %s kmalloc failure at line %d \n",__FILE__,__FUNCTION__,__LINE__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#393: FILE: arch/ppc64/kernel/lparcfg.c:205:
+		printk(KERN_ERR "%s %s kmalloc failure at line %d \n",__FILE__,__FUNCTION__,__LINE__);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#393: FILE: arch/ppc64/kernel/lparcfg.c:205:
+		printk(KERN_ERR "%s %s kmalloc failure at line %d \n",__FILE__,__FUNCTION__,__LINE__);
 		                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#393: FILE: arch/ppc64/kernel/lparcfg.c:205:
+		printk(KERN_ERR "%s %s kmalloc failure at line %d \n",__FILE__,__FUNCTION__,__LINE__);
 		                                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#393: FILE: arch/ppc64/kernel/lparcfg.c:205:
+		printk(KERN_ERR "%s %s kmalloc failure at line %d \n",__FILE__,__FUNCTION__,__LINE__);
 		                                                                           ^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#393: FILE: arch/ppc64/kernel/lparcfg.c:205:
+		printk(KERN_ERR "%s %s kmalloc failure at line %d \n",__FILE__,__FUNCTION__,__LINE__);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#393: FILE: arch/ppc64/kernel/lparcfg.c:205:
+	if (!local_buffer) {
+		printk(KERN_ERR "%s %s kmalloc failure at line %d \n",__FILE__,__FUNCTION__,__LINE__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#393: FILE: arch/ppc64/kernel/lparcfg.c:205:
+		printk(KERN_ERR "%s %s kmalloc failure at line %d \n",__FILE__,__FUNCTION__,__LINE__);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#406: FILE: arch/ppc64/kernel/lparcfg.c:217:
+	memcpy(local_buffer,rtas_data_buf, SPLPAR_MAXLENGTH);
 	                   ^

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#413: FILE: arch/ppc64/kernel/lparcfg.c:221:
+		printk(KERN_INFO "%s %s Error calling get-system-parameter (0x%lx)\n",__FILE__,__FUNCTION__,call_status);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#413: FILE: arch/ppc64/kernel/lparcfg.c:221:
+		printk(KERN_INFO "%s %s Error calling get-system-parameter (0x%lx)\n",__FILE__,__FUNCTION__,call_status);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#413: FILE: arch/ppc64/kernel/lparcfg.c:221:
+		printk(KERN_INFO "%s %s Error calling get-system-parameter (0x%lx)\n",__FILE__,__FUNCTION__,call_status);
 		                                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#413: FILE: arch/ppc64/kernel/lparcfg.c:221:
+		printk(KERN_INFO "%s %s Error calling get-system-parameter (0x%lx)\n",__FILE__,__FUNCTION__,call_status);
 		                                                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#413: FILE: arch/ppc64/kernel/lparcfg.c:221:
+		printk(KERN_INFO "%s %s Error calling get-system-parameter (0x%lx)\n",__FILE__,__FUNCTION__,call_status);
 		                                                                                           ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#413: FILE: arch/ppc64/kernel/lparcfg.c:221:
+		printk(KERN_INFO "%s %s Error calling get-system-parameter (0x%lx)\n",__FILE__,__FUNCTION__,call_status);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#420: FILE: arch/ppc64/kernel/lparcfg.c:224:
+		int idx,w_idx;
 		       ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#421: FILE: arch/ppc64/kernel/lparcfg.c:225:
+		char * workbuffer = kmalloc(SPLPAR_MAXLENGTH, GFP_KERNEL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#422: FILE: arch/ppc64/kernel/lparcfg.c:226:
+		char * workbuffer = kmalloc(SPLPAR_MAXLENGTH, GFP_KERNEL);
+		if (!workbuffer) {

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#423: FILE: arch/ppc64/kernel/lparcfg.c:227:
+			printk(KERN_ERR "%s %s kmalloc failure at line %d \n",__FILE__,__FUNCTION__,__LINE__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#423: FILE: arch/ppc64/kernel/lparcfg.c:227:
+			printk(KERN_ERR "%s %s kmalloc failure at line %d \n",__FILE__,__FUNCTION__,__LINE__);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#423: FILE: arch/ppc64/kernel/lparcfg.c:227:
+			printk(KERN_ERR "%s %s kmalloc failure at line %d \n",__FILE__,__FUNCTION__,__LINE__);
 			                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#423: FILE: arch/ppc64/kernel/lparcfg.c:227:
+			printk(KERN_ERR "%s %s kmalloc failure at line %d \n",__FILE__,__FUNCTION__,__LINE__);
 			                                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#423: FILE: arch/ppc64/kernel/lparcfg.c:227:
+			printk(KERN_ERR "%s %s kmalloc failure at line %d \n",__FILE__,__FUNCTION__,__LINE__);
 			                                                                           ^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#423: FILE: arch/ppc64/kernel/lparcfg.c:227:
+			printk(KERN_ERR "%s %s kmalloc failure at line %d \n",__FILE__,__FUNCTION__,__LINE__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#423: FILE: arch/ppc64/kernel/lparcfg.c:227:
+			printk(KERN_ERR "%s %s kmalloc failure at line %d \n",__FILE__,__FUNCTION__,__LINE__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#428: FILE: arch/ppc64/kernel/lparcfg.c:232:
+		printk(KERN_INFO "success calling get-system-parameter \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#428: FILE: arch/ppc64/kernel/lparcfg.c:232:
+		printk(KERN_INFO "success calling get-system-parameter \n");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#430: FILE: arch/ppc64/kernel/lparcfg.c:234:
+		splpar_strlen=local_buffer[0]*16+local_buffer[1];
 		             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#430: FILE: arch/ppc64/kernel/lparcfg.c:234:
+		splpar_strlen=local_buffer[0]*16+local_buffer[1];
 		                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#430: FILE: arch/ppc64/kernel/lparcfg.c:234:
+		splpar_strlen=local_buffer[0]*16+local_buffer[1];
 		                                ^

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#431: FILE: arch/ppc64/kernel/lparcfg.c:235:
+		local_buffer+=2; /* step over strlen value */
 		            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#434: FILE: arch/ppc64/kernel/lparcfg.c:238:
+		w_idx=0; idx=0;
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#434: FILE: arch/ppc64/kernel/lparcfg.c:238:
+		w_idx=0; idx=0;
 		            ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#435: FILE: arch/ppc64/kernel/lparcfg.c:239:
+		while ((*local_buffer) && (idx<splpar_strlen)) {
 		                              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#436: FILE: arch/ppc64/kernel/lparcfg.c:240:
+			workbuffer[w_idx++]=local_buffer[idx++];
 			                   ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#437: FILE: arch/ppc64/kernel/lparcfg.c:241:
+			if ((local_buffer[idx]==',')||(local_buffer[idx]=='\0')) {
 			                      ^

ERROR:SPACING: spaces required around that '||' (ctx:VxV)
#437: FILE: arch/ppc64/kernel/lparcfg.c:241:
+			if ((local_buffer[idx]==',')||(local_buffer[idx]=='\0')) {
 			                            ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#437: FILE: arch/ppc64/kernel/lparcfg.c:241:
+			if ((local_buffer[idx]==',')||(local_buffer[idx]=='\0')) {
 			                                                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#438: FILE: arch/ppc64/kernel/lparcfg.c:242:
+				workbuffer[w_idx]='\0';
 				                 ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#439: FILE: arch/ppc64/kernel/lparcfg.c:243:
+				if (w_idx) /* avoid the empty string */
+				{

ERROR:SPACING: space required after that ',' (ctx:VxV)
#441: FILE: arch/ppc64/kernel/lparcfg.c:245:
+					seq_printf(m, "%s\n",workbuffer);
 					                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#445: FILE: arch/ppc64/kernel/lparcfg.c:249:
+				w_idx=0;
 				     ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#446: FILE: arch/ppc64/kernel/lparcfg.c:250:
+			} else if (local_buffer[idx]=='=') {
 			                            ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#448: FILE: arch/ppc64/kernel/lparcfg.c:252:
+				/* code here to replace workbuffer contents
+				 with different keyword strings */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#448: FILE: arch/ppc64/kernel/lparcfg.c:252:
+				 with different keyword strings */

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#449: FILE: arch/ppc64/kernel/lparcfg.c:253:
+				if (0==strcmp(workbuffer,"MaxEntCap")) {
 				     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#449: FILE: arch/ppc64/kernel/lparcfg.c:253:
+				if (0==strcmp(workbuffer,"MaxEntCap")) {
 				                        ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#449: FILE: arch/ppc64/kernel/lparcfg.c:253:
+				if (0==strcmp(workbuffer,"MaxEntCap")) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#450: FILE: arch/ppc64/kernel/lparcfg.c:254:
+					strcpy(workbuffer,"partition_max_entitled_capacity\0");
 					                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#451: FILE: arch/ppc64/kernel/lparcfg.c:255:
+					w_idx=strlen(workbuffer);
 					     ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#453: FILE: arch/ppc64/kernel/lparcfg.c:257:
+				if (0==strcmp(workbuffer,"MaxPlatProcs")) {
 				     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#453: FILE: arch/ppc64/kernel/lparcfg.c:257:
+				if (0==strcmp(workbuffer,"MaxPlatProcs")) {
 				                        ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#453: FILE: arch/ppc64/kernel/lparcfg.c:257:
+				if (0==strcmp(workbuffer,"MaxPlatProcs")) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#454: FILE: arch/ppc64/kernel/lparcfg.c:258:
+					strcpy(workbuffer,"system_potential_processors\0");
 					                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#455: FILE: arch/ppc64/kernel/lparcfg.c:259:
+					w_idx=strlen(workbuffer);
 					     ^

ERROR:SPACING: spaces required around that '-=' (ctx:VxV)
#460: FILE: arch/ppc64/kernel/lparcfg.c:264:
+		local_buffer-=2; /* back up over strlen value */
 		            ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#464: FILE: arch/ppc64/kernel/lparcfg.c:268:
+	return;
+}

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - int lparcfg_count_active_processors() should probably be int lparcfg_count_active_processors(void)
#472: FILE: arch/ppc64/kernel/lparcfg.c:276:
+static int lparcfg_count_active_processors()

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#475: FILE: arch/ppc64/kernel/lparcfg.c:279:
+	int count=0;
 	         ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#476: FILE: arch/ppc64/kernel/lparcfg.c:280:
+	int count=0;
+	for (cpus_dn = of_find_node_by_type(NULL, "cpu");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#480: FILE: arch/ppc64/kernel/lparcfg.c:284:
+		printk(KERN_ERR "cpus_dn %p \n",cpus_dn);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#480: FILE: arch/ppc64/kernel/lparcfg.c:284:
+		printk(KERN_ERR "cpus_dn %p \n",cpus_dn);
 		                               ^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#480: FILE: arch/ppc64/kernel/lparcfg.c:284:
+		printk(KERN_ERR "cpus_dn %p \n",cpus_dn);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#489: FILE: arch/ppc64/kernel/lparcfg.c:292:
+static int lparcfg_data(struct seq_file *m, void *v)
  {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#512: FILE: arch/ppc64/kernel/lparcfg.c:307:
+		if (lp_index_ptr) lp_index = *lp_index_ptr;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#526: FILE: arch/ppc64/kernel/lparcfg.c:311:
+	seq_printf(m,"%s %s \n",MODULE_NAME,MODULE_VERS);
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#526: FILE: arch/ppc64/kernel/lparcfg.c:311:
+	seq_printf(m,"%s %s \n",MODULE_NAME,MODULE_VERS);
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#526: FILE: arch/ppc64/kernel/lparcfg.c:311:
+	seq_printf(m,"%s %s \n",MODULE_NAME,MODULE_VERS);
 	                                   ^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#526: FILE: arch/ppc64/kernel/lparcfg.c:311:
+	seq_printf(m,"%s %s \n",MODULE_NAME,MODULE_VERS);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#528: FILE: arch/ppc64/kernel/lparcfg.c:313:
+	seq_printf(m,"serial_number=%s\n", system_id);
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#532: FILE: arch/ppc64/kernel/lparcfg.c:315:
+	seq_printf(m,"system_type=%s\n", model);
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#536: FILE: arch/ppc64/kernel/lparcfg.c:317:
+	seq_printf(m,"partition_id=%d\n", (int)lp_index);
 	            ^

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#543: FILE: arch/ppc64/kernel/lparcfg.c:322:
+	if (lrdrp == NULL) {
[...]
  	} else {
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lrdrp"
#543: FILE: arch/ppc64/kernel/lparcfg.c:322:
+	if (lrdrp == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required after that ',' (ctx:VxV)
#552: FILE: arch/ppc64/kernel/lparcfg.c:329:
+		unsigned long h_entitled,h_unallocated,h_aggregation,h_resource;
 		                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#552: FILE: arch/ppc64/kernel/lparcfg.c:329:
+		unsigned long h_entitled,h_unallocated,h_aggregation,h_resource;
 		                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#552: FILE: arch/ppc64/kernel/lparcfg.c:329:
+		unsigned long h_entitled,h_unallocated,h_aggregation,h_resource;
 		                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#553: FILE: arch/ppc64/kernel/lparcfg.c:330:
+		unsigned long pool_idle_time,pool_procs;
 		                            ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#578: FILE: arch/ppc64/kernel/lparcfg.c:340:
+		h_pic(&pool_idle_time,&pool_procs);
 		                     ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#578: FILE: arch/ppc64/kernel/lparcfg.c:340:
+		h_pic(&pool_idle_time,&pool_procs);
 		                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#586: FILE: arch/ppc64/kernel/lparcfg.c:348:
+		seq_printf(m, "partition_entitled_capacity=%ld\n",
+			      h_entitled);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#589: FILE: arch/ppc64/kernel/lparcfg.c:351:
+		seq_printf(m, "pool=%ld\n",
+			      (h_aggregation >> 0*8) & 0xffff);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#589: FILE: arch/ppc64/kernel/lparcfg.c:351:
+			      (h_aggregation >> 0*8) & 0xffff);
 			                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#592: FILE: arch/ppc64/kernel/lparcfg.c:354:
+		seq_printf(m, "group=%ld\n",
+			      (h_aggregation >> 2*8) & 0xffff);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#592: FILE: arch/ppc64/kernel/lparcfg.c:354:
+			      (h_aggregation >> 2*8) & 0xffff);
 			                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#595: FILE: arch/ppc64/kernel/lparcfg.c:357:
+		seq_printf(m, "system_active_processors=%ld\n",
+			      (h_resource >> 0*8) & 0xffff);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#595: FILE: arch/ppc64/kernel/lparcfg.c:357:
+			      (h_resource >> 0*8) & 0xffff);
 			                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#598: FILE: arch/ppc64/kernel/lparcfg.c:360:
+		seq_printf(m, "pool_capacity=%ld\n",
  			      (h_resource >> 2*8) & 0xffff);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#619: FILE: arch/ppc64/kernel/lparcfg.c:363:
+		seq_printf(m, "unallocated_capacity_weight=%ld\n",
+			      (h_resource >> 4*8) & 0xFF);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#619: FILE: arch/ppc64/kernel/lparcfg.c:363:
+			      (h_resource >> 4*8) & 0xFF);
 			                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#631: FILE: arch/ppc64/kernel/lparcfg.c:366:
+		seq_printf(m, "capacity_weight=%ld\n",
+			      (h_resource >> 5*8) & 0xFF);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#631: FILE: arch/ppc64/kernel/lparcfg.c:366:
+			      (h_resource >> 5*8) & 0xFF);
 			                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#637: FILE: arch/ppc64/kernel/lparcfg.c:369:
+		seq_printf(m, "capped=%ld\n",
+			      (h_resource >> 6*8) & 0x01);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#637: FILE: arch/ppc64/kernel/lparcfg.c:369:
+			      (h_resource >> 6*8) & 0x01);
 			                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#643: FILE: arch/ppc64/kernel/lparcfg.c:372:
+		seq_printf(m, "unallocated_capacity=%ld\n",
+			      h_unallocated);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#649: FILE: arch/ppc64/kernel/lparcfg.c:375:
+		seq_printf(m, "pool_idle_time=%ld\n",
+			      pool_idle_time);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#652: FILE: arch/ppc64/kernel/lparcfg.c:378:
+		seq_printf(m, "pool_num_procs=%ld\n",
+			      pool_procs);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#657: FILE: arch/ppc64/kernel/lparcfg.c:381:
+		seq_printf(m, "purr=%ld\n",
+			      purr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#663: FILE: arch/ppc64/kernel/lparcfg.c:385:
+		seq_printf(m, "system_active_processors=%d\n",
+			      system_active_processors);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#666: FILE: arch/ppc64/kernel/lparcfg.c:388:
+		seq_printf(m, "system_potential_processors=%d\n",
+			      system_active_processors);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#671: FILE: arch/ppc64/kernel/lparcfg.c:391:
+		seq_printf(m, "partition_max_entitled_capacity=%d\n",
+			      100*system_active_processors);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#671: FILE: arch/ppc64/kernel/lparcfg.c:391:
+			      100*system_active_processors);
 			         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#676: FILE: arch/ppc64/kernel/lparcfg.c:394:
+		seq_printf(m, "partition_entitled_capacity=%d\n",
+			      system_active_processors*100);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#676: FILE: arch/ppc64/kernel/lparcfg.c:394:
+			      system_active_processors*100);
 			                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#680: FILE: arch/ppc64/kernel/lparcfg.c:398:
+	seq_printf(m, "partition_active_processors=%d\n",
+			(int) lparcfg_count_active_processors());

CHECK:SPACING: No space is necessary after a cast
#680: FILE: arch/ppc64/kernel/lparcfg.c:398:
+			(int) lparcfg_count_active_processors());

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#683: FILE: arch/ppc64/kernel/lparcfg.c:401:
+	seq_printf(m, "partition_potential_processors=%d\n",
+			system_active_processors);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#686: FILE: arch/ppc64/kernel/lparcfg.c:404:
+	seq_printf(m, "shared_processor_mode=%d\n",
+			paca[0].xLpPaca.xSharedProc);

CHECK:CAMELCASE: Avoid CamelCase: <xLpPaca>
#686: FILE: arch/ppc64/kernel/lparcfg.c:404:
+			paca[0].xLpPaca.xSharedProc);

CHECK:CAMELCASE: Avoid CamelCase: <xSharedProc>
#686: FILE: arch/ppc64/kernel/lparcfg.c:404:
+			paca[0].xLpPaca.xSharedProc);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#741: FILE: arch/ppc64/kernel/lparcfg.c:505:
+	return single_open(file,lparcfg_data,NULL);
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#741: FILE: arch/ppc64/kernel/lparcfg.c:505:
+	return single_open(file,lparcfg_data,NULL);
 	                                    ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#747: FILE: arch/ppc64/kernel/lparcfg.c:510:
+	read:		seq_read,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#747: FILE: arch/ppc64/kernel/lparcfg.c:510:
+	read:		seq_read,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#749: FILE: arch/ppc64/kernel/lparcfg.c:512:
+	release:	single_release,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#749: FILE: arch/ppc64/kernel/lparcfg.c:512:
+	release:	single_release,

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#761: FILE: arch/ppc64/kernel/viopath.c:111:
+unsigned char e2a(unsigned char x)
  {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000270680.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 87 errors, 40 warnings, 44 checks, 693 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000270680.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
