ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#91: FILE: include/linux/ioport.h:114:
+extern struct resource * __request_region(struct resource *, u64 start, u64 n, const char *name);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#91: FILE: include/linux/ioport.h:114:
+extern struct resource * __request_region(struct resource *, u64 start, u64 n, const char *name);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct resource *' should also have an identifier name
#91: FILE: include/linux/ioport.h:114:
+extern struct resource * __request_region(struct resource *, u64 start, u64 n, const char *name);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#100: FILE: include/linux/ioport.h:121:
+extern int __check_region(struct resource *, u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct resource *' should also have an identifier name
#100: FILE: include/linux/ioport.h:121:
+extern int __check_region(struct resource *, u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#100: FILE: include/linux/ioport.h:121:
+extern int __check_region(struct resource *, u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#100: FILE: include/linux/ioport.h:121:
+extern int __check_region(struct resource *, u64, u64);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#101: FILE: include/linux/ioport.h:122:
+extern void __release_region(struct resource *, u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct resource *' should also have an identifier name
#101: FILE: include/linux/ioport.h:122:
+extern void __release_region(struct resource *, u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#101: FILE: include/linux/ioport.h:122:
+extern void __release_region(struct resource *, u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#101: FILE: include/linux/ioport.h:122:
+extern void __release_region(struct resource *, u64, u64);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#137: FILE: kernel/resource.c:87:
+	seq_printf(m, "%*s%0*llx-%0*llx : %s\n",
 			depth * 2, "",

CHECK:SPACING: No space is necessary after a cast
#140: FILE: kernel/resource.c:88:
+			width, (unsigned long long) r->start,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#141: FILE: kernel/resource.c:89:
+			width, (unsigned long long) r->end,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#206: FILE: kernel/resource.c:441:
+struct resource * __request_region(struct resource *parent, u64 start, u64 n, const char *name)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#237: FILE: kernel/resource.c:524:
+	printk(KERN_WARNING "Trying to free nonexistent resource "

WARNING:SPLIT_STRING: quoted string split across lines
#238: FILE: kernel/resource.c:525:
+	printk(KERN_WARNING "Trying to free nonexistent resource "
+		"<%16llx-%16llx>\n", (unsigned long long)start,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#239: FILE: kernel/resource.c:526:
+		(unsigned long long) end);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000091253.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 9 warnings, 7 checks, 177 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000091253.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
