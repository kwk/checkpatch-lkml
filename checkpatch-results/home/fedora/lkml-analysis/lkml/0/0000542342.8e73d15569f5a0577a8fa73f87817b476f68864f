WARNING:TYPO_SPELLING: 'appling' may be misspelled - perhaps 'applying'?
#13: 
Subject: Fwd: Re: [PATCH][RFC] appling preasure to icache and dcache
                               ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'appling' may be misspelled - perhaps 'applying'?
#26: 
Subject: Re: [PATCH][RFC] appling preasure to icache and dcache
                          ^^^^^^^

ERROR:BAD_SIGN_OFF: Unrecognized email address: 'l '
#30: 
Cc: l 

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:TYPO_SPELLING: 'intially' may be misspelled - perhaps 'initially'?
#39: 
like this.  Let K be a number intially representing 25% of ram pages.
                              ^^^^^^^^

WARNING:TYPO_SPELLING: 'releated' may be misspelled - perhaps 'related'?
#40: 
Because vmtime is directly releated to allocation rates its meanful to
                           ^^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#71: 
take 2:35 (plus or minus 5 mins) and use over 190K inodes/dentries.  On a box

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#152: FILE: mm/vmscan.c:982:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#155: FILE: mm/vmscan.c:985:
+	static int base, free = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#166: FILE: mm/vmscan.c:996:
+		base -= (base>free-old) ? free-old : base;
 		             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#166: FILE: mm/vmscan.c:996:
+		base -= (base>free-old) ? free-old : base;
 		                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#166: FILE: mm/vmscan.c:996:
+		base -= (base>free-old) ? free-old : base;
 		                              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#173: FILE: mm/vmscan.c:1003:
+	if (pages-base >= goal) {
 	         ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#173: FILE: mm/vmscan.c:1003:
+	if (pages-base >= goal) {
[...]
+	} else
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: mm/vmscan.c:1005:
+       ^I^Ishrink_dcache_memory(DEF_PRIORITY, gfp_mask);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#175: FILE: mm/vmscan.c:1005:
+       ^I^Ishrink_dcache_memory(DEF_PRIORITY, gfp_mask);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: mm/vmscan.c:1005:
+       ^I^Ishrink_dcache_memory(DEF_PRIORITY, gfp_mask);$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#177: FILE: mm/vmscan.c:1007:
+		base += (!ret) ? pages-base : (ret>goal) ? ret : goal;
 		                      ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#177: FILE: mm/vmscan.c:1007:
+		base += (!ret) ? pages-base : (ret>goal) ? ret : goal;
 		                                  ^

CHECK:BRACES: Unbalanced braces around else statement
#178: FILE: mm/vmscan.c:1008:
+	} else

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#189: FILE: mm/vmscan.c:1019:
+	static int base, free = 0;

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#200: FILE: mm/vmscan.c:1030:
+		base -= (base>free-old) ? free-old : base;
 		             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#200: FILE: mm/vmscan.c:1030:
+		base -= (base>free-old) ? free-old : base;
 		                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#200: FILE: mm/vmscan.c:1030:
+		base -= (base>free-old) ? free-old : base;
 		                              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#202: FILE: mm/vmscan.c:1032:
+	if (pages-base >= goal) {
 	         ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#202: FILE: mm/vmscan.c:1032:
+	if (pages-base >= goal) {
[...]
+	} else
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#204: FILE: mm/vmscan.c:1034:
+       ^I^Ishrink_icache_memory(DEF_PRIORITY, gfp_mask);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#204: FILE: mm/vmscan.c:1034:
+       ^I^Ishrink_icache_memory(DEF_PRIORITY, gfp_mask);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: mm/vmscan.c:1034:
+       ^I^Ishrink_icache_memory(DEF_PRIORITY, gfp_mask);$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#206: FILE: mm/vmscan.c:1036:
+		base += (!ret) ? pages-base : (ret>goal) ? ret : goal;
 		                      ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#206: FILE: mm/vmscan.c:1036:
+		base += (!ret) ? pages-base : (ret>goal) ? ret : goal;
 		                                  ^

CHECK:BRACES: Unbalanced braces around else statement
#207: FILE: mm/vmscan.c:1037:
+	} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#213: FILE: mm/vmscan.c:1043:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'enought' may be misspelled - perhaps 'enough'?
#237: FILE: mm/vmscan.c:1103:
+		 * there are enought freeable pages there.
 		             ^^^^^^^

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#240: FILE: mm/vmscan.c:1105:
+		delta = (memory_pressure >> INACTIVE_SHIFT) \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#243: FILE: mm/vmscan.c:1108:
+			delta -= try_shrinking_dcache(delta,GFP_KSWAPD);
 			                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#245: FILE: mm/vmscan.c:1110:
+			delta -= try_shrinking_icache(delta,GFP_KSWAPD);
 			                                   ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000542342.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 11 warnings, 14 checks, 157 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000542342.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
