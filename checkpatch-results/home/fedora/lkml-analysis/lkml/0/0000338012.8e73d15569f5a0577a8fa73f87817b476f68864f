WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
This patch[1] adds an i586 assembler optimized version of the Rijndael (AES)

WARNING:TYPO_SPELLING: 'implemention' may be misspelled - perhaps 'implementation'?
#42: 
As tested by hvr[2] this implemention is significantly faster than the C=20
                         ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'implemention' may be misspelled - perhaps 'implementation'?
#49: 
implemention or automatic selection of implementions or preferences by
^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'implemention' may be misspelled - perhaps 'implementation'?
#50: 
application for a particular implemention and so one: This is the first
                             ^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'implemention' may be misspelled - perhaps 'implementation'?
#51: 
assembler implemention and most likely the last for a long time. So I think
          ^^^^^^^^^^^^

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#70: FILE: crypto/Kconfig:125:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#117: FILE: crypto/aes-i586-asm.S:1:
+//

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'artihmetic' may be misspelled - perhaps 'arithmetic'?
#155: FILE: crypto/aes-i586-asm.S:38:
+// does not preserve the eax, ecx or edx registers or the artihmetic status
                                                           ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'witho' may be misspelled - perhaps 'with'?
#190: FILE: crypto/aes-i586-asm.S:68:
+	.ascii " Redistribution and use in source and binary forms, with or witho=
 	                                                                    ^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1162: FILE: crypto/aes-i586-glue.c:1:
+/*=20

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1171: FILE: crypto/aes-i586-glue.c:9:
+ * Copyright (c) 2003, Fruhwirth Clemens <clemens@endorphin.org>
+*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1181: FILE: crypto/aes-i586-glue.c:19:
+#define AES_KS_LENGTH   4 * AES_BLOCK_SIZE

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1182: FILE: crypto/aes-i586-glue.c:20:
+#define AES_RC_LENGTH   (9 * AES_BLOCK_SIZE) / 8 - 8

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1184: FILE: crypto/aes-i586-glue.c:22:
+typedef struct

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1185: FILE: crypto/aes-i586-glue.c:23:
+typedef struct
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1186: FILE: crypto/aes-i586-glue.c:24:
+    u_int32_t^I aes_Nkey;^I// the number of words in the key input block$

CHECK:CAMELCASE: Avoid CamelCase: <aes_Nkey>
#1186: FILE: crypto/aes-i586-glue.c:24:
+    u_int32_t	 aes_Nkey;	// the number of words in the key input block

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'u_int32_t'
#1186: FILE: crypto/aes-i586-glue.c:24:
+    u_int32_t	 aes_Nkey;	// the number of words in the key input block

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1187: FILE: crypto/aes-i586-glue.c:25:
+    u_int32_t^I aes_Nrnd;^I// the number of cipher rounds$

CHECK:CAMELCASE: Avoid CamelCase: <aes_Nrnd>
#1187: FILE: crypto/aes-i586-glue.c:25:
+    u_int32_t	 aes_Nrnd;	// the number of cipher rounds

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'u_int32_t'
#1187: FILE: crypto/aes-i586-glue.c:25:
+    u_int32_t	 aes_Nrnd;	// the number of cipher rounds

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1188: FILE: crypto/aes-i586-glue.c:26:
+    u_int32_t^I aes_e_key[AES_KS_LENGTH];   // the encryption key schedule$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'u_int32_t'
#1188: FILE: crypto/aes-i586-glue.c:26:
+    u_int32_t	 aes_e_key[AES_KS_LENGTH];   // the encryption key schedule

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1189: FILE: crypto/aes-i586-glue.c:27:
+    u_int32_t^I aes_d_key[AES_KS_LENGTH];   // the decryption key schedule$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'u_int32_t'
#1189: FILE: crypto/aes-i586-glue.c:27:
+    u_int32_t	 aes_d_key[AES_KS_LENGTH];   // the decryption key schedule

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1190: FILE: crypto/aes-i586-glue.c:28:
+    u_int32_t^I aes_Ncol;^I// the number of columns in the cipher state$

CHECK:CAMELCASE: Avoid CamelCase: <aes_Ncol>
#1190: FILE: crypto/aes-i586-glue.c:28:
+    u_int32_t	 aes_Ncol;	// the number of columns in the cipher state

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'u_int32_t'
#1190: FILE: crypto/aes-i586-glue.c:28:
+    u_int32_t	 aes_Ncol;	// the number of columns in the cipher state

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#1196: FILE: crypto/aes-i586-glue.c:34:
+=20
 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#1197: FILE: crypto/aes-i586-glue.c:35:
+extern void aes_set_key(void *, const unsigned char [], const int, const i=
                                                                           ^

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1205: FILE: crypto/aes-i586-glue.c:40:
+ * extern void aes_decrypt(const aes_context *, unsigned char [], const un=
+*/

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#1206: FILE: crypto/aes-i586-glue.c:41:
+=20
 ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1208: FILE: crypto/aes-i586-glue.c:43:
+extern void aes_decrypt(void*, unsigned char [], const unsigned char []);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void*' should also have an identifier name
#1208: FILE: crypto/aes-i586-glue.c:43:
+extern void aes_decrypt(void*, unsigned char [], const unsigned char []);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char []' should also have an identifier name
#1208: FILE: crypto/aes-i586-glue.c:43:
+extern void aes_decrypt(void*, unsigned char [], const unsigned char []);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const unsigned char []' should also have an identifier name
#1208: FILE: crypto/aes-i586-glue.c:43:
+extern void aes_decrypt(void*, unsigned char [], const unsigned char []);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1210: FILE: crypto/aes-i586-glue.c:45:
+static int aes_set_key_glue(void *cx, const u8 *key,unsigned int key_lengt=
                                                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#1210: FILE: crypto/aes-i586-glue.c:45:
+static int aes_set_key_glue(void *cx, const u8 *key,unsigned int key_lengt=
                                                                           ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1212: FILE: crypto/aes-i586-glue.c:46:
+static int aes_set_key_glue(void *cx, const u8 *key,unsigned int key_lengt=
+{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1213: FILE: crypto/aes-i586-glue.c:47:
+	if(key_length !=3D 16 && key_length !=3D 24 && key_length !=3D 32)
+	{

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#1213: FILE: crypto/aes-i586-glue.c:47:
+	if(key_length !=3D 16 && key_length !=3D 24 && key_length !=3D 32)
 	              ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#1213: FILE: crypto/aes-i586-glue.c:47:
+	if(key_length !=3D 16 && key_length !=3D 24 && key_length !=3D 32)
 	                                    ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#1213: FILE: crypto/aes-i586-glue.c:47:
+	if(key_length !=3D 16 && key_length !=3D 24 && key_length !=3D 32)
 	                                                          ^

ERROR:SPACING: space required before the open parenthesis '('
#1213: FILE: crypto/aes-i586-glue.c:47:
+	if(key_length !=3D 16 && key_length !=3D 24 && key_length !=3D 32)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1215: FILE: crypto/aes-i586-glue.c:49:
+ ^I^I*flags |=3D CRYPTO_TFM_RES_BAD_KEY_LEN;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1215: FILE: crypto/aes-i586-glue.c:49:
+ ^I^I*flags |=3D CRYPTO_TFM_RES_BAD_KEY_LEN;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1215: FILE: crypto/aes-i586-glue.c:49:
+ ^I^I*flags |=3D CRYPTO_TFM_RES_BAD_KEY_LEN;$

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#1215: FILE: crypto/aes-i586-glue.c:49:
+ 		*flags |=3D CRYPTO_TFM_RES_BAD_KEY_LEN;
  		       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1218: FILE: crypto/aes-i586-glue.c:52:
+	aes_set_key(cx, key,key_length,0);
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1218: FILE: crypto/aes-i586-glue.c:52:
+	aes_set_key(cx, key,key_length,0);
 	                              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1222: FILE: crypto/aes-i586-glue.c:56:
+static struct crypto_alg aes_alg =3D {
                                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1223: FILE: crypto/aes-i586-glue.c:57:
+	.cra_name		=3D	"aes",
 	         		^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1224: FILE: crypto/aes-i586-glue.c:58:
+	.cra_flags		=3D	CRYPTO_ALG_TYPE_CIPHER,
 	          		^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1225: FILE: crypto/aes-i586-glue.c:59:
+	.cra_blocksize		=3D	AES_BLOCK_SIZE,
 	              		^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1226: FILE: crypto/aes-i586-glue.c:60:
+	.cra_ctxsize		=3D	sizeof(aes_context),
 	            		^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1227: FILE: crypto/aes-i586-glue.c:61:
+	.cra_module		=3D	THIS_MODULE,
 	           		^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1228: FILE: crypto/aes-i586-glue.c:62:
+	.cra_list		=3D	LIST_HEAD_INIT(aes_alg.cra_list),
 	         		^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1229: FILE: crypto/aes-i586-glue.c:63:
+	.cra_u			=3D	{
 	      			^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1230: FILE: crypto/aes-i586-glue.c:64:
+		.cipher =3D {
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1231: FILE: crypto/aes-i586-glue.c:65:
+			.cia_min_keysize	=3D	AES_MIN_KEY_SIZE,
 			                	^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1232: FILE: crypto/aes-i586-glue.c:66:
+			.cia_max_keysize	=3D	AES_MAX_KEY_SIZE,
 			                	^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1233: FILE: crypto/aes-i586-glue.c:67:
+^I^I^I.cia_setkey^I   ^I=3D ^Iaes_set_key_glue,$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1233: FILE: crypto/aes-i586-glue.c:67:
+			.cia_setkey	   	=3D 	aes_set_key_glue,
 			           	   	^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1234: FILE: crypto/aes-i586-glue.c:68:
+^I^I^I.cia_encrypt^I ^I=3D^Iaes_encrypt,$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1234: FILE: crypto/aes-i586-glue.c:68:
+			.cia_encrypt	 	=3D	aes_encrypt,
 			            	 	^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1235: FILE: crypto/aes-i586-glue.c:69:
+^I^I^I.cia_decrypt^I  ^I=3D^Iaes_decrypt$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1235: FILE: crypto/aes-i586-glue.c:69:
+			.cia_decrypt	  	=3D	aes_decrypt
 			            	  	^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000338012.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 33 errors, 26 warnings, 8 checks, 1177 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000338012.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
