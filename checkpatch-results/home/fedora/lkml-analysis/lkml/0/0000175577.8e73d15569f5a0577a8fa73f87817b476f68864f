WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
> http://www.fr.zoreil.com/people/francois/misc/20050616-2.6.12-rc-sis190-test.patch

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
# diff -puN sis190-20050616.c sis190.c

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: sis190.c:624:
+       unsigned int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: sis190.c:625:
+       u32 *u;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#85: FILE: sis190.c:642:
+               if ( status != 0x20000000)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: sis190.c:642:
+               if ( status != 0x20000000)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 17)
#85: FILE: sis190.c:642:
+               if ( status != 0x20000000)
+                 printk(KERN_INFO "%s: status = %08x\n", dev->name, status);

ERROR:SPACING: space prohibited after that open parenthesis '('
#85: FILE: sis190.c:642:
+               if ( status != 0x20000000)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#86: FILE: sis190.c:643:
+                 printk(KERN_INFO "%s: status = %08x\n", dev->name, status);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: sis190.c:643:
+                 printk(KERN_INFO "%s: status = %08x\n", dev->name, status);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#86: FILE: sis190.c:643:
+                 printk(KERN_INFO "%s: status = %08x\n", dev->name, status);

ERROR:CODE_INDENT: code indent should use tabs where possible
#96: FILE: sis190.c:653:
+               if (status & (RxQInt)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: sis190.c:653:
+               if (status & (RxQInt)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 17)
#96: FILE: sis190.c:653:
+               if (status & (RxQInt)) {
+                 if ( tp->cur_rx > 29) {

CHECK:CAMELCASE: Avoid CamelCase: <RxQInt>
#96: FILE: sis190.c:653:
+               if (status & (RxQInt)) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:CODE_INDENT: code indent should use tabs where possible
#97: FILE: sis190.c:654:
+                 if ( tp->cur_rx > 29) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: sis190.c:654:
+                 if ( tp->cur_rx > 29) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 19)
#97: FILE: sis190.c:654:
+                 if ( tp->cur_rx > 29) {
+                   printk(KERN_INFO "%s: dirty_rx=%ld cur_rx=%ld\n",

ERROR:SPACING: space prohibited after that open parenthesis '('
#97: FILE: sis190.c:654:
+                 if ( tp->cur_rx > 29) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#98: FILE: sis190.c:655:
+                   printk(KERN_INFO "%s: dirty_rx=%ld cur_rx=%ld\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: sis190.c:655:
+                   printk(KERN_INFO "%s: dirty_rx=%ld cur_rx=%ld\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#98: FILE: sis190.c:655:
+                   printk(KERN_INFO "%s: dirty_rx=%ld cur_rx=%ld\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: sis190.c:656:
+                          dev->name, tp->dirty_rx, tp->cur_rx);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: sis190.c:656:
+                          dev->name, tp->dirty_rx, tp->cur_rx);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#100: FILE: sis190.c:657:
+                   u = (void *) tp->RxDescRing;$

CHECK:SPACING: No space is necessary after a cast
#100: FILE: sis190.c:657:
+                   u = (void *) tp->RxDescRing;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: sis190.c:657:
+                   u = (void *) tp->RxDescRing;$

CHECK:CAMELCASE: Avoid CamelCase: <RxDescRing>
#100: FILE: sis190.c:657:
+                   u = (void *) tp->RxDescRing;

ERROR:CODE_INDENT: code indent should use tabs where possible
#101: FILE: sis190.c:658:
+                   printk(KERN_INFO "   PSize    status   addr     size     PSize    status   addr     size\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: sis190.c:658:
+                   printk(KERN_INFO "   PSize    status   addr     size     PSize    status   addr     size\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#101: FILE: sis190.c:658:
+                   printk(KERN_INFO "   PSize    status   addr     size     PSize    status   addr     size\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: sis190.c:659:
+                   for (i = 0; i < (NUM_RX_DESC / 2); i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: sis190.c:659:
+                   for (i = 0; i < (NUM_RX_DESC / 2); i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (19, 21)
#102: FILE: sis190.c:659:
+                   for (i = 0; i < (NUM_RX_DESC / 2); i++) {
+                     printk(KERN_INFO "%02d:%08x %08x %08x %08x %08x %08x %08x %08x\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#103: FILE: sis190.c:660:
+                     printk(KERN_INFO "%02d:%08x %08x %08x %08x %08x %08x %08x %08x\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: sis190.c:660:
+                     printk(KERN_INFO "%02d:%08x %08x %08x %08x %08x %08x %08x %08x\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#103: FILE: sis190.c:660:
+                     printk(KERN_INFO "%02d:%08x %08x %08x %08x %08x %08x %08x %08x\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#104: FILE: sis190.c:661:
+                            i, u[0], u[1], u[2], u[3], u[4], u[5], u[6], u[7]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: sis190.c:661:
+                            i, u[0], u[1], u[2], u[3], u[4], u[5], u[6], u[7]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: sis190.c:662:
+                     u += 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: sis190.c:662:
+                     u += 8;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#106: FILE: sis190.c:663:
+                   }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: sis190.c:663:
+                   }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#107: FILE: sis190.c:664:
+                   printk(KERN_INFO "%s: dirty_tx=%ld cur_tx=%ld\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: sis190.c:664:
+                   printk(KERN_INFO "%s: dirty_tx=%ld cur_tx=%ld\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#107: FILE: sis190.c:664:
+                   printk(KERN_INFO "%s: dirty_tx=%ld cur_tx=%ld\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#108: FILE: sis190.c:665:
+                          dev->name, tp->dirty_tx, tp->cur_tx);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: sis190.c:665:
+                          dev->name, tp->dirty_tx, tp->cur_tx);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#109: FILE: sis190.c:666:
+                   u = (void *) tp->TxDescRing;$

CHECK:SPACING: No space is necessary after a cast
#109: FILE: sis190.c:666:
+                   u = (void *) tp->TxDescRing;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: sis190.c:666:
+                   u = (void *) tp->TxDescRing;$

CHECK:CAMELCASE: Avoid CamelCase: <TxDescRing>
#109: FILE: sis190.c:666:
+                   u = (void *) tp->TxDescRing;

ERROR:CODE_INDENT: code indent should use tabs where possible
#110: FILE: sis190.c:667:
+                   printk(KERN_INFO "   PSize    status   addr     size     PSize    status   addr     size\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: sis190.c:667:
+                   printk(KERN_INFO "   PSize    status   addr     size     PSize    status   addr     size\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#110: FILE: sis190.c:667:
+                   printk(KERN_INFO "   PSize    status   addr     size     PSize    status   addr     size\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: sis190.c:668:
+                   for (i = 0; i < (NUM_TX_DESC / 2); i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: sis190.c:668:
+                   for (i = 0; i < (NUM_TX_DESC / 2); i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (19, 21)
#111: FILE: sis190.c:668:
+                   for (i = 0; i < (NUM_TX_DESC / 2); i++) {
+                     printk(KERN_INFO "%02d %08x %08x %08x %08x %08x %08x %08x %08x\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#112: FILE: sis190.c:669:
+                     printk(KERN_INFO "%02d %08x %08x %08x %08x %08x %08x %08x %08x\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: sis190.c:669:
+                     printk(KERN_INFO "%02d %08x %08x %08x %08x %08x %08x %08x %08x\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#112: FILE: sis190.c:669:
+                     printk(KERN_INFO "%02d %08x %08x %08x %08x %08x %08x %08x %08x\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#113: FILE: sis190.c:670:
+                            i, u[0], u[1], u[2], u[3], u[4], u[5], u[6], u[7]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: sis190.c:670:
+                            i, u[0], u[1], u[2], u[3], u[4], u[5], u[6], u[7]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#114: FILE: sis190.c:671:
+                     u += 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: sis190.c:671:
+                     u += 8;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: sis190.c:672:
+                   }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: sis190.c:672:
+                   }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#116: FILE: sis190.c:673:
+                 }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: sis190.c:673:
+                 }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: sis190.c:674:
+                 sis190_rx_interrupt(dev, tp, ioaddr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: sis190.c:674:
+                 sis190_rx_interrupt(dev, tp, ioaddr);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: sis190.c:675:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: sis190.c:675:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: sis190.c:1318:
+       SET_ETHTOOL_OPS(dev, &sis190_ethtool_ops);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#326: FILE: sis190.c:638:
+               if ( status != 0x20000000)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: sis190.c:638:
+               if ( status != 0x20000000)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 17)
#326: FILE: sis190.c:638:
+               if ( status != 0x20000000)
+                 printk(KERN_INFO "%s: status = %08x\n", dev->name, status);

ERROR:SPACING: space prohibited after that open parenthesis '('
#326: FILE: sis190.c:638:
+               if ( status != 0x20000000)

ERROR:CODE_INDENT: code indent should use tabs where possible
#327: FILE: sis190.c:639:
+                 printk(KERN_INFO "%s: status = %08x\n", dev->name, status);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#327: FILE: sis190.c:639:
+                 printk(KERN_INFO "%s: status = %08x\n", dev->name, status);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#327: FILE: sis190.c:639:
+                 printk(KERN_INFO "%s: status = %08x\n", dev->name, status);

ERROR:CODE_INDENT: code indent should use tabs where possible
#337: FILE: sis190.c:649:
+               if (status & (RxQInt))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: sis190.c:649:
+               if (status & (RxQInt))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#337: FILE: sis190.c:649:
+               if (status & (RxQInt))
+                       sis190_rx_interrupt(dev, tp, ioaddr);

ERROR:CODE_INDENT: code indent should use tabs where possible
#338: FILE: sis190.c:650:
+                       sis190_rx_interrupt(dev, tp, ioaddr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: sis190.c:650:
+                       sis190_rx_interrupt(dev, tp, ioaddr);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 17)
#345: FILE: sis190.c:846:
                for (p = reg31; p->ctl; p++) {
+                 if ((val & p->val) == p->val)

ERROR:CODE_INDENT: code indent should use tabs where possible
#347: FILE: sis190.c:847:
+                 if ((val & p->val) == p->val)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: sis190.c:847:
+                 if ((val & p->val) == p->val)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 31)
#347: FILE: sis190.c:847:
+                 if ((val & p->val) == p->val)
                                break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#387: FILE: sis190.c:1293:
+       SET_ETHTOOL_OPS(dev, &sis190_ethtool_ops);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000175577.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 33 errors, 53 warnings, 5 checks, 175 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000175577.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
