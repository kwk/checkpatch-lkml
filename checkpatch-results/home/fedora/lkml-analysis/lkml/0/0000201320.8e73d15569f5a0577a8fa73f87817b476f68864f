WARNING:TYPO_SPELLING: 'encypted' may be misspelled - perhaps 'encrypted'?
#49: 
data encypted/decrypted) filter driver must call ->complete() callback 
     ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'untill' may be misspelled - perhaps 'until'?
#53: 
is an ability to wait untill all previous filters(and appropriate injected 
                      ^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#59: 
With such flexibility one can read data from the file or the real block device, 

WARNING:TYPO_SPELLING: 'availabilty' may be misspelled - perhaps 'availability'?
#61: 
high availabilty systems, distributed backup and others.
     ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'actully' may be misspelled - perhaps 'actually'?
#63: 
Transfer structure is actully a bvec structure from BIO, it has a pointer 
                      ^^^^^^^

WARNING:USE_RELATIVE_PATH: use relative pathname instead of absolute in changelog text
#77: 
diff -Nru /tmp/empty/Kconfig ./drivers/block/bd/Kconfig

WARNING:USE_RELATIVE_PATH: use relative pathname instead of absolute in changelog text
#78: 
--- /tmp/empty/Kconfig	1970-01-01 03:00:00.000000000 +0300

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#83: FILE: drivers/block/bd/Kconfig:3:
+config BD
+	tristate "Asynchronous block device"
+	--- help ---
+	Asynchronous block device is similar to device mapping, 
+	but allows asynchronous operations.
+	Any number of filter can be connected to each device
+	in linear order. Each filter must have transfer() method.
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#86: FILE: drivers/block/bd/Kconfig:6:
+^IAsynchronous block device is similar to device mapping, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#91: FILE: drivers/block/bd/Kconfig:11:
+config BD_FD
+	tristate "File backend for bd"
+	--- help ---
+	File backend for asynchronous block device - it allows
+	similar to loopdev file mapping.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#97: FILE: drivers/block/bd/Kconfig:17:
+config BD_ACRYPTO
+	tristate "Asynchronous crypto filter for bd"
+	depends on ACRYPTO
+	--- help ---
+	Asynchronous crypto filter which uses provided from userspace
+	IV and key for the full disk encryption.
+

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#109: FILE: drivers/block/bd/Makefile:1:
+obj-$(CONFIG_BD)^I^I+= ubd.o $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#110: FILE: drivers/block/bd/Makefile:2:
+obj-$(CONFIG_BD_FD)^I^I+= bd_fd.o $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#111: FILE: drivers/block/bd/Makefile:3:
+obj-$(CONFIG_BD_ACRYPTO)^I+= bd_acrypto.o $

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#117: FILE: drivers/block/bd/bd.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#118: FILE: drivers/block/bd/bd.c:2:
+ * ^Ibd.c$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#121: FILE: drivers/block/bd/bd.c:5:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#134: FILE: drivers/block/bd/bd.c:18:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#135: FILE: drivers/block/bd/bd.c:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#152: FILE: drivers/block/bd/bd.c:36:
+static char bd_name[] = "bd";

WARNING:CONST_STRUCT: struct block_device_operations should normally be const
#168: FILE: drivers/block/bd/bd.c:52:
+static struct block_device_operations bd_fops =

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#169: FILE: drivers/block/bd/bd.c:53:
+static struct block_device_operations bd_fops =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#180: FILE: drivers/block/bd/bd.c:64:
+^Id->major ^I^I= dev->major;$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#197: FILE: drivers/block/bd/bd.c:81:
+	if (!dev)
+	{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#215: FILE: drivers/block/bd/bd.c:99:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#217: FILE: drivers/block/bd/bd.c:101:
+	if (!dev->disk)
+	{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#222: FILE: drivers/block/bd/bd.c:106:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#224: FILE: drivers/block/bd/bd.c:108:
+	if (!dev->disk->queue)
+	{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#244: FILE: drivers/block/bd/bd.c:128:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#251: FILE: drivers/block/bd/bd.c:135:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#263: FILE: drivers/block/bd/bd.c:147:
+^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#263: FILE: drivers/block/bd/bd.c:147:
+{
+	

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#274: FILE: drivers/block/bd/bd.c:158:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#276: FILE: drivers/block/bd/bd.c:160:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#278: FILE: drivers/block/bd/bd.c:162:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#299: FILE: drivers/block/bd/bd.c:183:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#300: FILE: drivers/block/bd/bd.c:184:
+	if (minor < 0 || minor >= bd_max_num)
+	{

CHECK:LINE_SPACING: Please don't use multiple blank lines
#313: FILE: drivers/block/bd/bd.c:197:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#318: FILE: drivers/block/bd/bd.c:202:
+	if (!q || !q->queuedata)
+	{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#325: FILE: drivers/block/bd/bd.c:209:
+       ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#325: FILE: drivers/block/bd/bd.c:209:
+       ^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: drivers/block/bd/bd.c:209:
+       ^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#334: FILE: drivers/block/bd/bd.c:218:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#343: FILE: drivers/block/bd/bd.c:227:
+^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#359: FILE: drivers/block/bd/bd.c:243:
+	if (dev->biotail) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#362: FILE: drivers/block/bd/bd.c:246:
+	} else

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#363: FILE: drivers/block/bd/bd.c:247:
+		dev->bio = dev->biotail = bio;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#369: FILE: drivers/block/bd/bd.c:253:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#380: FILE: drivers/block/bd/bd.c:264:
+^Iif (bio) $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#380: FILE: drivers/block/bd/bd.c:264:
+	if (bio) 
+	{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#386: FILE: drivers/block/bd/bd.c:270:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#388: FILE: drivers/block/bd/bd.c:272:
+^I^I$

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#389: FILE: drivers/block/bd/bd.c:273:
+		dprintk("%s: bio has been gotten, refcnt=%d.\n", __func__, atomic_read(&dev->bio_refcnt));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#406: FILE: drivers/block/bd/bd.c:290:
+	if (!bd_is_bound(dev))
+	{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#417: FILE: drivers/block/bd/bd.c:301:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#419: FILE: drivers/block/bd/bd.c:303:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#437: FILE: drivers/block/bd/bd.c:321:
+	while (!dev->need_exit)
+	{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#447: FILE: drivers/block/bd/bd.c:331:
+		while ((bio = bd_get_bio(dev)) != NULL)
+		{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#458: FILE: drivers/block/bd/bd.c:342:
+	if (!dev->bdev || IS_ERR(dev->bdev))
+	{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#464: FILE: drivers/block/bd/bd.c:348:
+	if (!dev->bd_block_size)
+	{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#498: FILE: drivers/block/bd/bd.c:382:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#510: FILE: drivers/block/bd/bd.c:394:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#513: FILE: drivers/block/bd/bd.c:397:
+	if (_IOC_TYPE(cmd) != BD_ID)
+	{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#523: FILE: drivers/block/bd/bd.c:407:
+	switch (cmd)
+	{

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#535: FILE: drivers/block/bd/bd.c:419:
+				dprintk("dev=%s, filter=%s: private size %u is too big, max=%lu.\n",
+						dev->name, u.name, u.size, PAGE_SIZE);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#550: FILE: drivers/block/bd/bd.c:434:
+^I^I^I^I * f->priv will be freed in bd_del_filter()/bd_add_filter() -> bd_filter_free() $

WARNING:LONG_LINE_COMMENT: line length of 112 exceeds 100 columns
#550: FILE: drivers/block/bd/bd.c:434:
+				 * f->priv will be freed in bd_del_filter()/bd_add_filter() -> bd_filter_free() 

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#558: FILE: drivers/block/bd/bd.c:442:
+^I^I^I^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#559: FILE: drivers/block/bd/bd.c:443:
+				n = copy_from_user(priv, (long *)(arg+sizeof(u)), u.size);
 				                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#569: FILE: drivers/block/bd/bd.c:453:
+			else
+			{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#569: FILE: drivers/block/bd/bd.c:453:
+			}
+			else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:ENOTSUPP: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
#580: FILE: drivers/block/bd/bd.c:464:
+			err = -ENOTSUPP;

ENOTSUPP is not a standard error code and should be avoided in new patches.
EOPNOTSUPP should be used instead.

See: https://lore.kernel.org/netdev/20200510182252.GA411829@lunn.ch/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#583: FILE: drivers/block/bd/bd.c:467:
+^I$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#589: FILE: drivers/block/bd/bd.c:473:
+int __devinit bd_init(void)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#595: FILE: drivers/block/bd/bd.c:479:
+	if (err)
+	{

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#598: FILE: drivers/block/bd/bd.c:482:
+		dprintk("Failed to register blkdev with major %u: err=%d.\n",
+				bd_major, err);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#603: FILE: drivers/block/bd/bd.c:487:
+	if (!bd_devs)
+	{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#611: FILE: drivers/block/bd/bd.c:495:
+	for (i=0; i<bd_max_num; ++i)
+	{

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#611: FILE: drivers/block/bd/bd.c:495:
+	for (i=0; i<bd_max_num; ++i)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#611: FILE: drivers/block/bd/bd.c:495:
+	for (i=0; i<bd_max_num; ++i)
 	           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#616: FILE: drivers/block/bd/bd.c:500:
+^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#622: FILE: drivers/block/bd/bd.c:506:
+
+

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#629: FILE: drivers/block/bd/bd.c:513:
+	while(i >= 0)
+	{

ERROR:SPACING: space required before the open parenthesis '('
#629: FILE: drivers/block/bd/bd.c:513:
+	while(i >= 0)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#640: FILE: drivers/block/bd/bd.c:524:
+void __devexit bd_fini(void)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#644: FILE: drivers/block/bd/bd.c:528:
+	for (i=0; i<bd_max_num; ++i)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#644: FILE: drivers/block/bd/bd.c:528:
+	for (i=0; i<bd_max_num; ++i)
 	           ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#660: FILE: drivers/block/bd/bd.c:544:
+EXPORT_SYMBOL(bd_get_dev);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#661: FILE: drivers/block/bd/bd.c:545:
+EXPORT_SYMBOL(bd_get_dev_minor);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#662: FILE: drivers/block/bd/bd.c:546:
+EXPORT_SYMBOL(bd_put_dev);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#663: FILE: drivers/block/bd/bd.c:547:
+EXPORT_SYMBOL(bd_fill_dev);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#664: FILE: drivers/block/bd/bd.c:548:
+EXPORT_SYMBOL(bd_bind_dev);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#665: FILE: drivers/block/bd/bd.c:549:
+EXPORT_SYMBOL(bd_unbind_dev);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#666: FILE: drivers/block/bd/bd.c:550:
+EXPORT_SYMBOL(bd_is_bound);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#671: FILE: drivers/block/bd/bd.h:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#672: FILE: drivers/block/bd/bd.h:2:
+ * ^Ibd.h$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#675: FILE: drivers/block/bd/bd.h:5:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#688: FILE: drivers/block/bd/bd.h:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#689: FILE: drivers/block/bd/bd.h:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#704: FILE: drivers/block/bd/bd.h:34:
+struct bd_user
+{

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#717: FILE: drivers/block/bd/bd.h:47:
+#define dprintk(f, a...) printk(f, ##a)

ERROR:SPACING: space required before the open parenthesis '('
#719: FILE: drivers/block/bd/bd.h:49:
+#define dprintk(f, a...) do {} while(0)

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#728: FILE: drivers/block/bd/bd.h:58:
+struct bd_private
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#732: FILE: drivers/block/bd/bd.h:62:
+struct bd_device $

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#733: FILE: drivers/block/bd/bd.h:63:
+struct bd_device 
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#753: FILE: drivers/block/bd/bd.h:83:
+^I$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#754: FILE: drivers/block/bd/bd.h:84:
+	spinlock_t		bio_lock;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#755: FILE: drivers/block/bd/bd.h:85:
+^Istruct bio ^I^I*bio;$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#760: FILE: drivers/block/bd/bd.h:90:
+	spinlock_t		state_lock;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#765: FILE: drivers/block/bd/bd.h:95:
+^Iint ^I^I^Ipid;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#770: FILE: drivers/block/bd/bd.h:100:
+^Istruct semaphore ^Ifilter_sem;$

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#795: FILE: drivers/block/bd/bd_acrypto.c:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#796: FILE: drivers/block/bd/bd_acrypto.c:2:
+ * ^Ibd_acrypto.c$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#799: FILE: drivers/block/bd/bd_acrypto.c:5:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#812: FILE: drivers/block/bd/bd_acrypto.c:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#813: FILE: drivers/block/bd/bd_acrypto.c:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#842: FILE: drivers/block/bd/bd_acrypto.c:48:
+static struct bd_main_filter bd_acrypto_main_filter =
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#850: FILE: drivers/block/bd/bd_acrypto.c:56:
+static int bd_acrypto_prepare(struct crypto_data *data, void *src, void *dst, unsigned long size, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#851: FILE: drivers/block/bd/bd_acrypto.c:57:
+static int bd_acrypto_prepare(struct crypto_data *data, void *src, void *dst, unsigned long size, 
+		void *key, int key_size, void *iv, int iv_size, void *priv)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#852: FILE: drivers/block/bd/bd_acrypto.c:58:
+{^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#858: FILE: drivers/block/bd/bd_acrypto.c:64:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#863: FILE: drivers/block/bd/bd_acrypto.c:69:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#873: FILE: drivers/block/bd/bd_acrypto.c:79:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#887: FILE: drivers/block/bd/bd_acrypto.c:93:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#902: FILE: drivers/block/bd/bd_acrypto.c:108:
+^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#905: FILE: drivers/block/bd/bd_acrypto.c:111:
+^Ici.operation ^I= (t->cmd == WRITE)?CRYPTO_OP_ENCRYPT:CRYPTO_OP_DECRYPT;$

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#905: FILE: drivers/block/bd/bd_acrypto.c:111:
+	ci.operation 	= (t->cmd == WRITE)?CRYPTO_OP_ENCRYPT:CRYPTO_OP_DECRYPT;
 	             	                   ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#905: FILE: drivers/block/bd/bd_acrypto.c:111:
+	ci.operation 	= (t->cmd == WRITE)?CRYPTO_OP_ENCRYPT:CRYPTO_OP_DECRYPT;
 	             	                                     ^

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#912: FILE: drivers/block/bd/bd_acrypto.c:118:
+	 * This is an acrypto filter feature - it is used exactly as filter - it changes data in-place.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#916: FILE: drivers/block/bd/bd_acrypto.c:122:
+^I$

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#917: FILE: drivers/block/bd/bd_acrypto.c:123:
+	err = bd_acrypto_prepare(&data, src, dst, t->src.size, p->key, p->key_size, p->iv, p->iv_size, t);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#924: FILE: drivers/block/bd/bd_acrypto.c:130:
+^I$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#938: FILE: drivers/block/bd/bd_acrypto.c:144:
+int __devinit bd_acrypto_init_dev(void)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#943: FILE: drivers/block/bd/bd_acrypto.c:149:
+void __devexit bd_acrypto_fini_dev(void)

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#962: FILE: drivers/block/bd/bd_acrypto.c~:5:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#975: FILE: drivers/block/bd/bd_acrypto.c~:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#976: FILE: drivers/block/bd/bd_acrypto.c~:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1013: FILE: drivers/block/bd/bd_acrypto.c~:56:
+static int bd_acrypto_prepare(struct crypto_data *data, void *src, void *dst, unsigned long size, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1015: FILE: drivers/block/bd/bd_acrypto.c~:58:
+{^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1021: FILE: drivers/block/bd/bd_acrypto.c~:64:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1026: FILE: drivers/block/bd/bd_acrypto.c~:69:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1036: FILE: drivers/block/bd/bd_acrypto.c~:79:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1050: FILE: drivers/block/bd/bd_acrypto.c~:93:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1065: FILE: drivers/block/bd/bd_acrypto.c~:108:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1079: FILE: drivers/block/bd/bd_acrypto.c~:122:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1087: FILE: drivers/block/bd/bd_acrypto.c~:130:
+^I$

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1121: FILE: drivers/block/bd/bd_acrypto.h:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1122: FILE: drivers/block/bd/bd_acrypto.h:2:
+ * ^Ibd_acrypto.h$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1125: FILE: drivers/block/bd/bd_acrypto.h:5:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1138: FILE: drivers/block/bd/bd_acrypto.h:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1139: FILE: drivers/block/bd/bd_acrypto.h:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1146: FILE: drivers/block/bd/bd_acrypto.h:26:
+struct bd_acrypto_private
+{

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1162: FILE: drivers/block/bd/bd_bio.c:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1163: FILE: drivers/block/bd/bd_bio.c:2:
+ * ^Ibd_bio.c$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1166: FILE: drivers/block/bd/bd_bio.c:5:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1179: FILE: drivers/block/bd/bd_bio.c:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1180: FILE: drivers/block/bd/bd_bio.c:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1191: FILE: drivers/block/bd/bd_bio.c:30:
+extern struct list_head filter_list;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1197: FILE: drivers/block/bd/bd_bio.c:36:
+	for (i=0; i<bio->bi_vcnt; ++i)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1197: FILE: drivers/block/bd/bd_bio.c:36:
+	for (i=0; i<bio->bi_vcnt; ++i)
 	           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1212: FILE: drivers/block/bd/bd_bio.c:51:
+	t = kmalloc(bio->bi_vcnt*sizeof(struct bd_filter_transfer), GFP_KERNEL);
 	                        ^

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#1212: FILE: drivers/block/bd/bd_bio.c:51:
+	t = kmalloc(bio->bi_vcnt*sizeof(struct bd_filter_transfer), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1215: FILE: drivers/block/bd/bd_bio.c:54:
+		dprintk("Failed to allocate %d bytes array for %d bd_filter_transfer structures.\n",
+				bio->bi_vcnt*sizeof(struct bd_filter_transfer), bio->bi_vcnt);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1215: FILE: drivers/block/bd/bd_bio.c:54:
+				bio->bi_vcnt*sizeof(struct bd_filter_transfer), bio->bi_vcnt);
 				            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1219: FILE: drivers/block/bd/bd_bio.c:58:
+	memset(t, 0, bio->bi_vcnt*sizeof(struct bd_filter_transfer));
 	                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1232: FILE: drivers/block/bd/bd_bio.c:71:
+^Idprintk("%s: %d [need %d] bd_filter_transfer structures have been successfully allocated.\n", $

WARNING:LONG_LINE_STRING: line length of 102 exceeds 100 columns
#1232: FILE: drivers/block/bd/bd_bio.c:71:
+	dprintk("%s: %d [need %d] bd_filter_transfer structures have been successfully allocated.\n", 

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1233: FILE: drivers/block/bd/bd_bio.c:72:
+	dprintk("%s: %d [need %d] bd_filter_transfer structures have been successfully allocated.\n", 
+			__func__, good_num, bio->bi_vcnt);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1234: FILE: drivers/block/bd/bd_bio.c:73:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1235: FILE: drivers/block/bd/bd_bio.c:74:
+	if (good_num != bio->bi_vcnt)
+	{

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1244: FILE: drivers/block/bd/bd_bio.c:83:
+	return (good_num == bio->bi_vcnt)?t:NULL;
 	                                 ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1244: FILE: drivers/block/bd/bd_bio.c:83:
+	return (good_num == bio->bi_vcnt)?t:NULL;
 	                                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1247: FILE: drivers/block/bd/bd_bio.c:86:
+static int bd_process_bio_cmd_filter(struct bd_device *dev, struct bd_filter *f, struct bio *bio, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1248: FILE: drivers/block/bd/bd_bio.c:87:
+^I^Istruct bd_transfer_private *priv, unsigned int cmd, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1248: FILE: drivers/block/bd/bd_bio.c:87:
+static int bd_process_bio_cmd_filter(struct bd_device *dev, struct bd_filter *f, struct bio *bio, 
+		struct bd_transfer_private *priv, unsigned int cmd, 

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1254: FILE: drivers/block/bd/bd_bio.c:93:
+	loff_t pos = bio->bi_sector << (ffs(dev->bd_block_size)-1);
 	                                                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1255: FILE: drivers/block/bd/bd_bio.c:94:
+^I$

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#1256: FILE: drivers/block/bd/bd_bio.c:95:
+	dprintk("%s: TRANSFER: filter=%s, flags=%08x, pos=%llu.\n", dev->name, f->mf->name, f->mf->flags, pos);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1270: FILE: drivers/block/bd/bd_bio.c:109:
+^I^It->cmd ^I^I= cmd;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1274: FILE: drivers/block/bd/bd_bio.c:113:
+^I^It->f ^I^I= f;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1275: FILE: drivers/block/bd/bd_bio.c:114:
+^I^It->f->complete ^I= bd_filter_complete;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1278: FILE: drivers/block/bd/bd_bio.c:117:
+^I^I^It->src.page ^I= src[i].page;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1282: FILE: drivers/block/bd/bd_bio.c:121:
+^I^I^It->src.page ^I= bvec->bv_page;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1288: FILE: drivers/block/bd/bd_bio.c:127:
+^I^I^It->dst.page ^I= dst[i].page;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1292: FILE: drivers/block/bd/bd_bio.c:131:
+^I^I^It->dst.page ^I= t->src.page;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1298: FILE: drivers/block/bd/bd_bio.c:137:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1299: FILE: drivers/block/bd/bd_bio.c:138:
+^I^Idprintk("bvec in bio=%p, t=%p, f->refcnt=%d, pos=%llu: SRC=[%p.%u.%u], DST=[%p.%u.%u].\n", $

WARNING:LONG_LINE_STRING: line length of 107 exceeds 100 columns
#1299: FILE: drivers/block/bd/bd_bio.c:138:
+		dprintk("bvec in bio=%p, t=%p, f->refcnt=%d, pos=%llu: SRC=[%p.%u.%u], DST=[%p.%u.%u].\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1300: FILE: drivers/block/bd/bd_bio.c:139:
+		dprintk("bvec in bio=%p, t=%p, f->refcnt=%d, pos=%llu: SRC=[%p.%u.%u], DST=[%p.%u.%u].\n", 
+				bio, t, atomic_read(&t->f->refcnt), pos,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1306: FILE: drivers/block/bd/bd_bio.c:145:
+		if (i+1 < bio->bi_vcnt)
 		     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1323: FILE: drivers/block/bd/bd_bio.c:162:
+^Idprintk("%s: TRANSFER: cmd=%s [%d], [bs=%lu, bios=%d, bvecs=%d].\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1324: FILE: drivers/block/bd/bd_bio.c:163:
+^I^I^Idev->name, (cmd == READ)?"READ":"WRITE", cmd, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1324: FILE: drivers/block/bd/bd_bio.c:163:
+	dprintk("%s: TRANSFER: cmd=%s [%d], [bs=%lu, bios=%d, bvecs=%d].\n", 
+			dev->name, (cmd == READ)?"READ":"WRITE", cmd, 

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1324: FILE: drivers/block/bd/bd_bio.c:163:
+			dev->name, (cmd == READ)?"READ":"WRITE", cmd, 
 			                        ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1324: FILE: drivers/block/bd/bd_bio.c:163:
+			dev->name, (cmd == READ)?"READ":"WRITE", cmd, 
 			                               ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*priv)...) over kmalloc(sizeof(struct bd_transfer_private)...)
#1329: FILE: drivers/block/bd/bd_bio.c:168:
+	priv = kmalloc(sizeof(struct bd_transfer_private), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1330: FILE: drivers/block/bd/bd_bio.c:169:
+	if (!priv)
+	{

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1338: FILE: drivers/block/bd/bd_bio.c:177:
+	atomic_set(&priv->bio_refcnt, bio->bi_vcnt*dev->filter_num);
 	                                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1342: FILE: drivers/block/bd/bd_bio.c:181:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1345: FILE: drivers/block/bd/bd_bio.c:184:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1348: FILE: drivers/block/bd/bd_bio.c:187:
+^I^I$

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#1358: FILE: drivers/block/bd/bd_bio.c:197:
+				err = bd_process_bio_cmd_filter(dev, f, bio, priv, cmd, NULL, transfers);

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#1361: FILE: drivers/block/bd/bd_bio.c:200:
+				err = bd_process_bio_cmd_filter(dev, f, bio, priv, cmd, transfers, NULL);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1364: FILE: drivers/block/bd/bd_bio.c:203:
+			if (err && (atomic_read(&f->refcnt) == 0)) {
+				complete(&f->completed);
+			}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1367: FILE: drivers/block/bd/bd_bio.c:206:
+^I^I^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1368: FILE: drivers/block/bd/bd_bio.c:207:
+			if (need_wait(f->mf->flags)) {
+				wait_for_completion(&f->completed);
+			}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1378: FILE: drivers/block/bd/bd_bio.c:217:
+			if (err && (atomic_read(&f->refcnt) == 0)) {
+				complete(&f->completed);
+			}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1381: FILE: drivers/block/bd/bd_bio.c:220:
+^I^I^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1382: FILE: drivers/block/bd/bd_bio.c:221:
+			if (need_wait(f->mf->flags)) {
+				wait_for_completion(&f->completed);
+			}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1396: FILE: drivers/block/bd/bd_bio.c:235:
+^I$

ERROR:SPACING: spaces required around that '?' (ctx:VxO)
#1399: FILE: drivers/block/bd/bd_bio.c:238:
+	bio_endio(bio, bio->bi_size, (bio_err)?-ENOMEM:0);
 	                                      ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#1399: FILE: drivers/block/bd/bd_bio.c:238:
+	bio_endio(bio, bio->bi_size, (bio_err)?-ENOMEM:0);
 	                                       ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1399: FILE: drivers/block/bd/bd_bio.c:238:
+	bio_endio(bio, bio->bi_size, (bio_err)?-ENOMEM:0);
 	                                              ^

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1412: FILE: drivers/block/bd/bd_bio.c:251:
+	dprintk("%s: %lu: dev=%s, bio=%p, cmd=%lu.\n", __func__, jiffies, dev->name, bio, bio_rw(bio));

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1413: FILE: drivers/block/bd/bd_bio.c:252:
+	err = bd_process_bio_cmd(dev, (bio_rw(bio) == WRITE)?WRITE:READ, bio);
 	                                                    ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1413: FILE: drivers/block/bd/bd_bio.c:252:
+	err = bd_process_bio_cmd(dev, (bio_rw(bio) == WRITE)?WRITE:READ, bio);
 	                                                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1423: FILE: drivers/block/bd/bd_bio.c:262:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1425: FILE: drivers/block/bd/bd_bio.c:264:
+	if (!dev->transfer_queue)
+	{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1427: FILE: drivers/block/bd/bd_bio.c:266:
+^I^Idprintk("Failed to create work queue %s for bd device %s.\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1428: FILE: drivers/block/bd/bd_bio.c:267:
+		dprintk("Failed to create work queue %s for bd device %s.\n", 
+				name, dev->name);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1446: FILE: drivers/block/bd/bd_fd.c:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1447: FILE: drivers/block/bd/bd_fd.c:2:
+ * ^Ibd_fd.c$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1450: FILE: drivers/block/bd/bd_fd.c:5:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1463: FILE: drivers/block/bd/bd_fd.c:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1464: FILE: drivers/block/bd/bd_fd.c:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1486: FILE: drivers/block/bd/bd_fd.c:41:
+static struct bd_main_filter fd_filter = $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1487: FILE: drivers/block/bd/bd_fd.c:42:
+static struct bd_main_filter fd_filter = 
+{

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1501: FILE: drivers/block/bd/bd_fd.c:56:
+	dprintk("dev=%s, size=%llu [%llu].\n", dev->name, size, size >> (ffs(dev->bd_block_size) - 1));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1519: FILE: drivers/block/bd/bd_fd.c:74:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1521: FILE: drivers/block/bd/bd_fd.c:76:
+	if (!p->file)
+	{

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1529: FILE: drivers/block/bd/bd_fd.c:84:
+	dprintk("%s: Found file: fd=%d, dentry=%s.\n",
+			dev->name, p->u.fd, p->file->f_dentry->d_iname);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1530: FILE: drivers/block/bd/bd_fd.c:85:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1533: FILE: drivers/block/bd/bd_fd.c:88:
+^I$

WARNING:CONST_STRUCT: struct address_space_operations should normally be const
#1536: FILE: drivers/block/bd/bd_fd.c:91:
+		struct address_space_operations *aops = mapping->a_ops;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1537: FILE: drivers/block/bd/bd_fd.c:92:
+^I^I$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1554: FILE: drivers/block/bd/bd_fd.c:109:
+	mapping_set_gfp_mask(mapping, dev->old_gfp_mask & ~(__GFP_IO|__GFP_FS));
 	                                                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1573: FILE: drivers/block/bd/bd_fd.c:128:
+       ^Istruct bd_fd_user *u = f->priv;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1573: FILE: drivers/block/bd/bd_fd.c:128:
+       ^Istruct bd_fd_user *u = f->priv;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1573: FILE: drivers/block/bd/bd_fd.c:128:
+       ^Istruct bd_fd_user *u = f->priv;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1578: FILE: drivers/block/bd/bd_fd.c:133:
+^I^Idprintk("Failed to allocate new bd_fd priavte structure in dev=%s, filter=%s.\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1579: FILE: drivers/block/bd/bd_fd.c:134:
+		dprintk("Failed to allocate new bd_fd priavte structure in dev=%s, filter=%s.\n", 
+				dev->name, f->mf->name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1588: FILE: drivers/block/bd/bd_fd.c:143:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1594: FILE: drivers/block/bd/bd_fd.c:149:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1600: FILE: drivers/block/bd/bd_fd.c:155:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1606: FILE: drivers/block/bd/bd_fd.c:161:
+       ^Istruct bd_fd_private *p = f->priv;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1606: FILE: drivers/block/bd/bd_fd.c:161:
+       ^Istruct bd_fd_private *p = f->priv;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1606: FILE: drivers/block/bd/bd_fd.c:161:
+       ^Istruct bd_fd_private *p = f->priv;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1613: FILE: drivers/block/bd/bd_fd.c:168:
+static int file_bd_transfer(struct bd_transfer *t,
+	       struct page *rpage, unsigned roffs,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1613: FILE: drivers/block/bd/bd_fd.c:168:
+	       struct page *rpage, unsigned roffs,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1614: FILE: drivers/block/bd/bd_fd.c:169:
+	       struct page *lpage, unsigned loffs,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1621: FILE: drivers/block/bd/bd_fd.c:176:
+	dprintk("%s: cmd=%d, rpage=%p, roff=%u, lpage=%p, loff=%u, size=%d.\n",
+			__func__, t->cmd, rpage, roffs, lpage, loffs, size);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1639: FILE: drivers/block/bd/bd_fd.c:194:
+	unsigned bv_offs = t->src.off;

WARNING:CONST_STRUCT: struct address_space_operations should normally be const
#1644: FILE: drivers/block/bd/bd_fd.c:199:
+	struct address_space_operations *aops = mapping->a_ops;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1647: FILE: drivers/block/bd/bd_fd.c:202:
+	unsigned size, offset;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1662: FILE: drivers/block/bd/bd_fd.c:217:
+		if (aops->prepare_write(p->file, page, offset, offset+size))
 		                                                     ^

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#1668: FILE: drivers/block/bd/bd_fd.c:223:
+			printk(KERN_ERR "%s: transfer error block %llu\n", dev->name, (unsigned long long)index);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1668: FILE: drivers/block/bd/bd_fd.c:223:
+			printk(KERN_ERR "%s: transfer error block %llu\n", dev->name, (unsigned long long)index);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1674: FILE: drivers/block/bd/bd_fd.c:229:
+		if (aops->commit_write(p->file, page, offset, offset+size))
 		                                                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1687: FILE: drivers/block/bd/bd_fd.c:242:
+^I$

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#1699: FILE: drivers/block/bd/bd_fd.c:254:
+static int bd_actor(read_descriptor_t *desc, struct page *page, unsigned long offset, unsigned long size)

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#1704: FILE: drivers/block/bd/bd_fd.c:259:
+	dprintk("%s: dev=%s, page=%p, off=%lu, size=%lu.\n", __func__, t->dev->name, page, offset, size);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1711: FILE: drivers/block/bd/bd_fd.c:266:
+		printk(KERN_ERR "Failed to transfer block %ld\n", page->index);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1717: FILE: drivers/block/bd/bd_fd.c:272:
+^I$

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1738: FILE: drivers/block/bd/bd_fd.c:293:
+	dprintk("%s: TRANSFER: t=%p, dev=%s, filter=%s.\n", __func__, t, t->dev->name, t->f->mf->name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1739: FILE: drivers/block/bd/bd_fd.c:294:
+^I$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1753: FILE: drivers/block/bd/bd_fd.c:308:
+int __devinit bd_fd_init_dev(void)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1764: FILE: drivers/block/bd/bd_fd.c:319:
+void __devexit bd_fd_fini_dev(void)

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1779: FILE: drivers/block/bd/bd_fd.h:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1780: FILE: drivers/block/bd/bd_fd.h:2:
+ * ^Ibd_fd.h$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1783: FILE: drivers/block/bd/bd_fd.h:5:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1796: FILE: drivers/block/bd/bd_fd.h:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1797: FILE: drivers/block/bd/bd_fd.h:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1804: FILE: drivers/block/bd/bd_fd.h:26:
+struct bd_fd_user
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1811: FILE: drivers/block/bd/bd_fd.h:33:
+struct bd_fd_private
+{

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1823: FILE: drivers/block/bd/bd_filter.c:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1824: FILE: drivers/block/bd/bd_filter.c:2:
+ * ^Ibd_filter.c$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1827: FILE: drivers/block/bd/bd_filter.c:5:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1840: FILE: drivers/block/bd/bd_filter.c:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1841: FILE: drivers/block/bd/bd_filter.c:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1861: FILE: drivers/block/bd/bd_filter.c:39:
+	dprintk("%s: t=%p, dev=%s, filter=%s, bio_refcnt=%d [%08x].\n",
+			__func__, t, t->dev->name, t->f->mf->name,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1866: FILE: drivers/block/bd/bd_filter.c:44:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1867: FILE: drivers/block/bd/bd_filter.c:45:
+	if (atomic_dec_and_test(&t->priv->bio_refcnt))
+	{

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#1882: FILE: drivers/block/bd/bd_filter.c:60:
+	dprintk("%s: dev=%s, transfer=%p, filter=%s, status=%08x.\n", __func__, t->dev->name, t, f->mf->name, t->status);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1892: FILE: drivers/block/bd/bd_filter.c:70:
+	if (!t)
+	{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1913: FILE: drivers/block/bd/bd_filter.c:91:
+^I$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*f)...) over kmalloc(sizeof(struct bd_filter)...)
#1914: FILE: drivers/block/bd/bd_filter.c:92:
+	f = kmalloc(sizeof(struct bd_filter), flags);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1929: FILE: drivers/block/bd/bd_filter.c:107:
+	if (atomic_read(&f->refcnt) == 0)
+	{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1942: FILE: drivers/block/bd/bd_filter.c:120:
+	if (is_backend(f->flags) && bd_is_bound(dev))
+	{

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1951: FILE: drivers/block/bd/bd_filter.c:129:
+	if (!ft) {
+		goto err_out_exit;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1957: FILE: drivers/block/bd/bd_filter.c:135:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1958: FILE: drivers/block/bd/bd_filter.c:136:
+	
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1974: FILE: drivers/block/bd/bd_filter.c:152:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1976: FILE: drivers/block/bd/bd_filter.c:154:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1985: FILE: drivers/block/bd/bd_filter.c:163:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1989: FILE: drivers/block/bd/bd_filter.c:167:
+	list_for_each_entry_safe(ft, n, &dev->filter_list, filter_entry)
+	{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1991: FILE: drivers/block/bd/bd_filter.c:169:
+		if (!strncmp(f->name, ft->mf->name, sizeof(f->name)))
+		{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1995: FILE: drivers/block/bd/bd_filter.c:173:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1996: FILE: drivers/block/bd/bd_filter.c:174:
+^I^I^If->fini(dev, ft);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2012: FILE: drivers/block/bd/bd_filter.c:190:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2014: FILE: drivers/block/bd/bd_filter.c:192:
+	list_for_each_entry(f, &main_filter_list, main_filter_entry)
+	{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2016: FILE: drivers/block/bd/bd_filter.c:194:
+		if (!strncmp(f->name, name, sizeof(f->name)))
+		{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2023: FILE: drivers/block/bd/bd_filter.c:201:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2025: FILE: drivers/block/bd/bd_filter.c:203:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2034: FILE: drivers/block/bd/bd_filter.c:212:
+	if (!f->transfer)
+	{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2039: FILE: drivers/block/bd/bd_filter.c:217:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2040: FILE: drivers/block/bd/bd_filter.c:218:
+	if (!f->init)
+	{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2045: FILE: drivers/block/bd/bd_filter.c:223:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2046: FILE: drivers/block/bd/bd_filter.c:224:
+	if (!f->fini)
+	{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2063: FILE: drivers/block/bd/bd_filter.c:241:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2066: FILE: drivers/block/bd/bd_filter.c:244:
+	list_for_each_entry(ft, &main_filter_list, main_filter_entry)
+	{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2068: FILE: drivers/block/bd/bd_filter.c:246:
+		if (!strncmp(f->name, ft->name, sizeof(f->name)))
+		{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2076: FILE: drivers/block/bd/bd_filter.c:254:
+	if (!err)
+	{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2081: FILE: drivers/block/bd/bd_filter.c:259:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2090: FILE: drivers/block/bd/bd_filter.c:268:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2095: FILE: drivers/block/bd/bd_filter.c:273:
+	while (atomic_read(&f->refcnt))
+	{

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#2097: FILE: drivers/block/bd/bd_filter.c:275:
+		dprintk("Waiting for filter %s to become free: refcnt=%d.\n", f->name, atomic_read(&f->refcnt));

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2108: FILE: drivers/block/bd/bd_filter.c:286:
+	list_for_each_entry(f, &main_filter_list, main_filter_entry)
+	{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2111: FILE: drivers/block/bd/bd_filter.c:289:
+^I^I$

WARNING:LONG_LINE_STRING: line length of 104 exceeds 100 columns
#2113: FILE: drivers/block/bd/bd_filter.c:291:
+			dprintk("Something wrong with filter processing in device %s: filter_num=%d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2114: FILE: drivers/block/bd/bd_filter.c:292:
+			dprintk("Something wrong with filter processing in device %s: filter_num=%d.\n",
+					dev->name, dev->filter_num);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2118: FILE: drivers/block/bd/bd_filter.c:296:
+}
+#if 0

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#2118: FILE: drivers/block/bd/bd_filter.c:296:
+#if 0

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2127: FILE: drivers/block/bd/bd_filter.c:305:
+^Iclone->cmd ^I= t->cmd;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2133: FILE: drivers/block/bd/bd_filter.c:311:
+^I^I$

WARNING:TYPO_SPELLING: 'Transer' may be misspelled - perhaps 'Transfer'?
#2136: FILE: drivers/block/bd/bd_filter.c:314:
+	dprintk("Transer has been cloned: filter=%s, dev=%s.\n",
 	         ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2137: FILE: drivers/block/bd/bd_filter.c:315:
+	dprintk("Transer has been cloned: filter=%s, dev=%s.\n",
+			t->f->mf->name, t->dev->name);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2143: FILE: drivers/block/bd/bd_filter.c:321:
+EXPORT_SYMBOL_GPL(bd_register_main_filter);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2144: FILE: drivers/block/bd/bd_filter.c:322:
+EXPORT_SYMBOL_GPL(bd_unregister_main_filter);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2149: FILE: drivers/block/bd/bd_filter.h:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2150: FILE: drivers/block/bd/bd_filter.h:2:
+ * ^Ibd_filter.h$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2153: FILE: drivers/block/bd/bd_filter.h:5:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2166: FILE: drivers/block/bd/bd_filter.h:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2167: FILE: drivers/block/bd/bd_filter.h:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2177: FILE: drivers/block/bd/bd_filter.h:29:
+#define BD_MAIN_FILTER_FLAG_WAIT^I(1<<0) ^I/* bd core must wait until every callback is completed $

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#2177: FILE: drivers/block/bd/bd_filter.h:29:
+#define BD_MAIN_FILTER_FLAG_WAIT	(1<<0) 	/* bd core must wait until every callback is completed 

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2177: FILE: drivers/block/bd/bd_filter.h:29:
+#define BD_MAIN_FILTER_FLAG_WAIT^I(1<<0) ^I/* bd core must wait until every callback is completed $

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2177: FILE: drivers/block/bd/bd_filter.h:29:
+#define BD_MAIN_FILTER_FLAG_WAIT	(1<<0) 	/* bd core must wait until every callback is completed 
                                 	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#2177: FILE: drivers/block/bd/bd_filter.h:29:
+#define BD_MAIN_FILTER_FLAG_WAIT	(1<<0) 	/* bd core must wait until every callback is completed 

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2178: FILE: drivers/block/bd/bd_filter.h:30:
+^I^I^I^I^I^I * and do not send data to another filters $

WARNING:LONG_LINE_COMMENT: line length of 127 exceeds 100 columns
#2180: FILE: drivers/block/bd/bd_filter.h:32:
+#define BD_MAIN_FILTER_BACKEND		(1<<1)	/* This is a backend filter, i.e. one which contacts with the storage itself */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2180: FILE: drivers/block/bd/bd_filter.h:32:
+#define BD_MAIN_FILTER_BACKEND		(1<<1)	/* This is a backend filter, i.e. one which contacts with the storage itself */
                               		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#2180: FILE: drivers/block/bd/bd_filter.h:32:
+#define BD_MAIN_FILTER_BACKEND		(1<<1)	/* This is a backend filter, i.e. one which contacts with the storage itself */

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2182: FILE: drivers/block/bd/bd_filter.h:34:
+#define need_wait(flags)		!!(flags & BD_MAIN_FILTER_FLAG_WAIT)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'flags' may be better as '(flags)' to avoid precedence issues
#2182: FILE: drivers/block/bd/bd_filter.h:34:
+#define need_wait(flags)		!!(flags & BD_MAIN_FILTER_FLAG_WAIT)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2183: FILE: drivers/block/bd/bd_filter.h:35:
+#define is_backend(flags)		!!(flags & BD_MAIN_FILTER_BACKEND)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'flags' may be better as '(flags)' to avoid precedence issues
#2183: FILE: drivers/block/bd/bd_filter.h:35:
+#define is_backend(flags)		!!(flags & BD_MAIN_FILTER_BACKEND)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2185: FILE: drivers/block/bd/bd_filter.h:37:
+
+

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#2195: FILE: drivers/block/bd/bd_filter.h:47:
+struct bd_main_filter
+{

WARNING:SPACING: Unnecessary space before function pointer name
#2200: FILE: drivers/block/bd/bd_filter.h:52:
+	int				(* transfer)(struct bd_transfer *);

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#2200: FILE: drivers/block/bd/bd_filter.h:52:
+	int				(* transfer)(struct bd_transfer *);
 	   				 ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bd_transfer *' should also have an identifier name
#2200: FILE: drivers/block/bd/bd_filter.h:52:
+	int				(* transfer)(struct bd_transfer *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: Unnecessary space before function pointer name
#2201: FILE: drivers/block/bd/bd_filter.h:53:
+	int				(* init)(struct bd_device *, struct bd_filter *);

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#2201: FILE: drivers/block/bd/bd_filter.h:53:
+	int				(* init)(struct bd_device *, struct bd_filter *);
 	   				 ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bd_device *' should also have an identifier name
#2201: FILE: drivers/block/bd/bd_filter.h:53:
+	int				(* init)(struct bd_device *, struct bd_filter *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bd_filter *' should also have an identifier name
#2201: FILE: drivers/block/bd/bd_filter.h:53:
+	int				(* init)(struct bd_device *, struct bd_filter *);

WARNING:SPACING: Unnecessary space before function pointer name
#2202: FILE: drivers/block/bd/bd_filter.h:54:
+	void				(* fini)(struct bd_device *, struct bd_filter *);

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#2202: FILE: drivers/block/bd/bd_filter.h:54:
+	void				(* fini)(struct bd_device *, struct bd_filter *);
 	    				 ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bd_device *' should also have an identifier name
#2202: FILE: drivers/block/bd/bd_filter.h:54:
+	void				(* fini)(struct bd_device *, struct bd_filter *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bd_filter *' should also have an identifier name
#2202: FILE: drivers/block/bd/bd_filter.h:54:
+	void				(* fini)(struct bd_device *, struct bd_filter *);

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#2209: FILE: drivers/block/bd/bd_filter.h:61:
+struct bd_filter
+{

WARNING:SPACING: Unnecessary space before function pointer name
#2212: FILE: drivers/block/bd/bd_filter.h:64:
+	void				(* complete)(struct bd_transfer *);

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#2212: FILE: drivers/block/bd/bd_filter.h:64:
+	void				(* complete)(struct bd_transfer *);
 	    				 ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bd_transfer *' should also have an identifier name
#2212: FILE: drivers/block/bd/bd_filter.h:64:
+	void				(* complete)(struct bd_transfer *);

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#2230: FILE: drivers/block/bd/bd_filter.h:82:
+struct bd_transfer_private
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#2238: FILE: drivers/block/bd/bd_filter.h:90:
+struct bd_filter_transfer
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#2245: FILE: drivers/block/bd/bd_filter.h:97:
+struct bd_transfer
+{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2253: FILE: drivers/block/bd/bd_filter.h:105:
+^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2256: FILE: drivers/block/bd/bd_filter.h:108:
+^Istruct work_struct ^I^Iwork;$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#2261: FILE: drivers/block/bd/bd_filter.h:113:
+void bd_filter_queue_wrapper(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bd_transfer *' should also have an identifier name
#2262: FILE: drivers/block/bd/bd_filter.h:114:
+void bd_transfer_wait(struct bd_transfer *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bd_transfer *' should also have an identifier name
#2265: FILE: drivers/block/bd/bd_filter.h:117:
+void bd_transfer_free(struct bd_transfer *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#2272: FILE: drivers/block/bd/bd_filter.h:124:
+struct bd_main_filter *bd_find_main_filter_by_name(char *);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#2278: FILE: drivers/block/bd/bd_filter.h:130:
+static __inline__ struct bd_filter *next_filter(struct bd_filter *cur, struct bd_device *dev, int dir)

WARNING:INLINE: plain inline is preferred over __inline__
#2278: FILE: drivers/block/bd/bd_filter.h:130:
+static __inline__ struct bd_filter *next_filter(struct bd_filter *cur, struct bd_device *dev, int dir)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2281: FILE: drivers/block/bd/bd_filter.h:133:
+^In = list_entry((dir == BD_FILTER_DIR_DIRECT)?cur->filter_entry.next:cur->filter_entry.prev, $

WARNING:LINE_SPACING: Missing a blank line after declarations
#2281: FILE: drivers/block/bd/bd_filter.h:133:
+	struct bd_filter *n;
+	n = list_entry((dir == BD_FILTER_DIR_DIRECT)?cur->filter_entry.next:cur->filter_entry.prev, 

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#2281: FILE: drivers/block/bd/bd_filter.h:133:
+	n = list_entry((dir == BD_FILTER_DIR_DIRECT)?cur->filter_entry.next:cur->filter_entry.prev, 
 	                                            ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2281: FILE: drivers/block/bd/bd_filter.h:133:
+	n = list_entry((dir == BD_FILTER_DIR_DIRECT)?cur->filter_entry.next:cur->filter_entry.prev, 
 	                                                                   ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2282: FILE: drivers/block/bd/bd_filter.h:134:
+	n = list_entry((dir == BD_FILTER_DIR_DIRECT)?cur->filter_entry.next:cur->filter_entry.prev, 
+			struct bd_filter, filter_entry);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2285: FILE: drivers/block/bd/bd_filter.h:137:
+^I^I^I__func__, cur->mf->name, dir, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2285: FILE: drivers/block/bd/bd_filter.h:137:
+	dprintk("%s: cur=%s, dir=%d, ptr=[%p.%p], devp=%p.\n",
+			__func__, cur->mf->name, dir, 

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2300: FILE: drivers/block/bd/bd_filter.h:152:
+
+

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2306: FILE: drivers/block/bd/bd_xor.c:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2307: FILE: drivers/block/bd/bd_xor.c:2:
+ * ^Ibd_xor.c$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2310: FILE: drivers/block/bd/bd_xor.c:5:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2323: FILE: drivers/block/bd/bd_xor.c:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2324: FILE: drivers/block/bd/bd_xor.c:19:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2346: FILE: drivers/block/bd/bd_xor.c:41:
+static struct bd_main_filter bd_xor_main_filter =
+{

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2367: FILE: drivers/block/bd/bd_xor.c:62:
+	printk("%lu: %s: ", jiffies, prefix);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2368: FILE: drivers/block/bd/bd_xor.c:63:
+	for (i=0; i<size; ++i)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#2368: FILE: drivers/block/bd/bd_xor.c:63:
+	for (i=0; i<size; ++i)
 	           ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2369: FILE: drivers/block/bd/bd_xor.c:64:
+		printk("%02x ", ptr[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2370: FILE: drivers/block/bd/bd_xor.c:65:
+	printk("\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'bd_xor_transfer', this function's name, in a string
#2381: FILE: drivers/block/bd/bd_xor.c:76:
+	dump_data("bd_xor_transfer before", src, 32);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2382: FILE: drivers/block/bd/bd_xor.c:77:
+	for (i=0; i<t->src.size; ++i)
+	{

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2382: FILE: drivers/block/bd/bd_xor.c:77:
+	for (i=0; i<t->src.size; ++i)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#2382: FILE: drivers/block/bd/bd_xor.c:77:
+	for (i=0; i<t->src.size; ++i)
 	           ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'bd_xor_transfer', this function's name, in a string
#2386: FILE: drivers/block/bd/bd_xor.c:81:
+	dump_data("bd_xor_transfer after ", dst, 32);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2391: FILE: drivers/block/bd/bd_xor.c:86:
+^It->src.page ^I= t->dst.page;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2392: FILE: drivers/block/bd/bd_xor.c:87:
+^It->src.size ^I= t->dst.size;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2393: FILE: drivers/block/bd/bd_xor.c:88:
+^It->src.off ^I= t->dst.off;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2394: FILE: drivers/block/bd/bd_xor.c:89:
+^I$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2400: FILE: drivers/block/bd/bd_xor.c:95:
+int __devinit bd_xor_init_dev(void)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#2405: FILE: drivers/block/bd/bd_xor.c:100:
+void __devexit bd_xor_fini_dev(void)

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000201320.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 211 errors, 149 warnings, 59 checks, 2298 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000201320.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
