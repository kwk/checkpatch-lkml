WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
    master.kernel.org:/pub/scm/linux/kernel/git/roland/infiniband.git for-linus

WARNING:SIZEOF_PARENTHESIS: sizeof *device->cache.gid_cache should be sizeof(*device->cache.gid_cache)
#105: FILE: drivers/infiniband/core/cache.c:305:
+		kmalloc(sizeof *device->cache.gid_cache *

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: drivers/infiniband/hw/mthca/mthca_av.c:46:
+      MTHCA_RATE_TAVOR_FULL   = 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: drivers/infiniband/hw/mthca/mthca_av.c:47:
+      MTHCA_RATE_TAVOR_1X     = 1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: drivers/infiniband/hw/mthca/mthca_av.c:48:
+      MTHCA_RATE_TAVOR_4X     = 2,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: drivers/infiniband/hw/mthca/mthca_av.c:49:
+      MTHCA_RATE_TAVOR_1X_DDR = 3$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: drivers/infiniband/hw/mthca/mthca_av.c:53:
+      MTHCA_RATE_MEMFREE_FULL    = 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: drivers/infiniband/hw/mthca/mthca_av.c:54:
+      MTHCA_RATE_MEMFREE_QUARTER = 1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: drivers/infiniband/hw/mthca/mthca_av.c:55:
+      MTHCA_RATE_MEMFREE_EIGHTH  = 2,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: drivers/infiniband/hw/mthca/mthca_av.c:56:
+      MTHCA_RATE_MEMFREE_HALF    = 3$

CHECK:BRACES: braces {} should be used on all arms of this statement
#263: FILE: drivers/infiniband/hw/mthca/mthca_av.c:99:
+	if (mthca_is_memfree(dev)) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#269: FILE: drivers/infiniband/hw/mthca/mthca_av.c:105:
+	} else

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#285: FILE: drivers/infiniband/hw/mthca/mthca_av.c:121:
+	case 2:	 /* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'mdev' may be better as '(mdev)' to avoid precedence issues
#405: FILE: drivers/infiniband/hw/mthca/mthca_dev.h:364:
+#define mthca_dbg(mdev, format, arg...)					\
+	do {								\
+		if (mthca_debug_level)					\
+			dev_printk(KERN_DEBUG, &mdev->pdev->dev, format, ## arg); \
+	} while (0)

WARNING:PREFER_DEV_LEVEL: Prefer dev_dbg(... to dev_printk(KERN_DEBUG, ...
#408: FILE: drivers/infiniband/hw/mthca/mthca_dev.h:367:
+			dev_printk(KERN_DEBUG, &mdev->pdev->dev, format, ## arg); \

CHECK:SPACING: No space is necessary after a cast
#413: FILE: drivers/infiniband/hw/mthca/mthca_dev.h:372:
+#define mthca_dbg(mdev, format, arg...) do { (void) mdev; } while (0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#413: FILE: drivers/infiniband/hw/mthca/mthca_dev.h:372:
+#define mthca_dbg(mdev, format, arg...) do { (void) mdev; } while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:SIZEOF_PARENTHESIS: sizeof *tprops should be sizeof(*tprops)
#450: FILE: drivers/infiniband/hw/mthca/mthca_mad.c:57:
+	tprops = kmalloc(sizeof *tprops, GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#456: FILE: drivers/infiniband/hw/mthca/mthca_mad.c:63:
+		printk(KERN_WARNING "ib_query_port failed (%d) for %s port %d\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#500: FILE: drivers/infiniband/hw/mthca/mthca_mad.c:291:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#505: FILE: drivers/infiniband/hw/mthca/mthca_mad.c:296:
+			mthca_err(dev, "Failed to obtain port %d rate."
+				  " aborting.\n", p);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#521: FILE: drivers/infiniband/hw/mthca/mthca_mad.c:312:
 void __devexit mthca_free_agents(struct mthca_dev *dev)

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#532: FILE: drivers/infiniband/hw/mthca/mthca_main.c:57:
+int mthca_debug_level = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#545: FILE: drivers/infiniband/hw/mthca/mthca_main.c:80:
+static int tune_pci = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#549: FILE: drivers/infiniband/hw/mthca/mthca_main.c:84:
 static const char mthca_version[] __devinitdata =

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#808: FILE: drivers/infiniband/hw/mthca/mthca_srq.c:684:
+		    sizeof (struct mthca_next_seg)) /

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#809: FILE: drivers/infiniband/hw/mthca/mthca_srq.c:685:
+		   sizeof (struct mthca_data_seg));

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#812: FILE: drivers/infiniband/hw/mthca/mthca_srq.c:688:
 int __devinit mthca_init_srq_table(struct mthca_dev *dev)

WARNING:SIZEOF_PARENTHESIS: sizeof *neigh should be sizeof(*neigh)
#1123: FILE: drivers/infiniband/ulp/ipoib/ipoib_main.c:779:
+	neigh = kmalloc(sizeof *neigh, GFP_ATOMIC);

WARNING:SIZEOF_PARENTHESIS: sizeof *priv->rx_ring should be sizeof(*priv->rx_ring)
#1148: FILE: drivers/infiniband/ulp/ipoib/ipoib_main.c:807:
+	priv->rx_ring =	kzalloc(ipoib_recvq_size * sizeof *priv->rx_ring,

WARNING:SIZEOF_PARENTHESIS: sizeof *priv->tx_ring should be sizeof(*priv->tx_ring)
#1158: FILE: drivers/infiniband/ulp/ipoib/ipoib_main.c:815:
+	priv->tx_ring = kzalloc(ipoib_sendq_size * sizeof *priv->tx_ring,

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1172: FILE: drivers/infiniband/ulp/ipoib/ipoib_main.c:887:
+^Idev->tx_queue_len ^I = ipoib_sendq_size * 2;$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1247: FILE: drivers/infiniband/ulp/ipoib/ipoib_multicast.c:624:
+	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000085877.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 25 warnings, 5 checks, 1141 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000085877.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
