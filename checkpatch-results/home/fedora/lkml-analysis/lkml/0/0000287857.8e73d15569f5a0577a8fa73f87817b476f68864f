CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#704: FILE: arch/ppc64/kernel/sys_ppc32.c:230:
+asmlinkage long ppc32_select(u32 n, compat_ulong_t __user *inp,
+		compat_ulong_t __user *outp, compat_ulong_t __user *exp,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#886: FILE: arch/s390/kernel/compat_wrapper.S:644:
+^I.globl  compat_sys_select_wrapper $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1266: FILE: fs/compat.c:1217:
+#define ROUND_UP(x,y) (((x)+(y)-1)/(y))
                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1266: FILE: fs/compat.c:1217:
+#define ROUND_UP(x,y) (((x)+(y)-1)/(y))
                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1266: FILE: fs/compat.c:1217:
+#define ROUND_UP(x,y) (((x)+(y)-1)/(y))
                                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1266: FILE: fs/compat.c:1217:
+#define ROUND_UP(x,y) (((x)+(y)-1)/(y))
                                   ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'y' - possible side-effects?
#1266: FILE: fs/compat.c:1217:
+#define ROUND_UP(x,y) (((x)+(y)-1)/(y))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1274: FILE: fs/compat.c:1225:
+int compat_get_fd_set(unsigned long nr, compat_ulong_t __user *ufdset,
+			unsigned long *fdset)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1280: FILE: fs/compat.c:1231:
+		if (verify_area(VERIFY_WRITE, ufdset, nr*sizeof(compat_ulong_t)))
 		                                        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1287: FILE: fs/compat.c:1238:
+			unsigned long h, l;
+			__get_user(l, ufdset);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1288: FILE: fs/compat.c:1239:
+			__get_user(h, ufdset+1);
 			                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1300: FILE: fs/compat.c:1251:
+		memset(fdset, 0, ((nr + 1) & ~1)*sizeof(compat_ulong_t));
 		                                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1307: FILE: fs/compat.c:1258:
+void compat_set_fd_set(unsigned long nr, compat_ulong_t __user *ufdset,
+			unsigned long *fdset)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1310: FILE: fs/compat.c:1261:
+	unsigned long odd;
+	nr = ROUND_UP(nr, __COMPAT_NFDBITS);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1319: FILE: fs/compat.c:1270:
+		unsigned long h, l;
+		l = *fdset++;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1322: FILE: fs/compat.c:1273:
+		__put_user(h, ufdset+1);
 		                    ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1330: FILE: fs/compat.c:1281:
+
+

CHECK:SPACING: No space is necessary after a cast
#1354: FILE: fs/compat.c:1305:
+	((unsigned long) (MAX_SCHEDULE_TIMEOUT / HZ)-1)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1354: FILE: fs/compat.c:1305:
+	((unsigned long) (MAX_SCHEDULE_TIMEOUT / HZ)-1)
 	                                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1358: FILE: fs/compat.c:1309:
+compat_sys_select(int n, compat_ulong_t __user *inp, compat_ulong_t __user *outp,
+		compat_ulong_t __user *exp, struct compat_timeval __user *tvp)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1369: FILE: fs/compat.c:1320:
+		if ((ret = verify_area(VERIFY_READ, tvp, sizeof(*tvp)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1370: FILE: fs/compat.c:1321:
+		if ((ret = verify_area(VERIFY_READ, tvp, sizeof(*tvp)))
+		    || (ret = __get_user(sec, &tvp->tv_sec))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1371: FILE: fs/compat.c:1322:
+		    || (ret = __get_user(sec, &tvp->tv_sec))
+		    || (ret = __get_user(usec, &tvp->tv_usec)))

CHECK:SPACING: No space is necessary after a cast
#1378: FILE: fs/compat.c:1329:
+		if ((unsigned long) sec < MAX_SELECT_SECONDS) {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1379: FILE: fs/compat.c:1330:
+			timeout = ROUND_UP(usec, 1000000/HZ);
 			                                ^

CHECK:SPACING: No space is necessary after a cast
#1380: FILE: fs/compat.c:1331:
+			timeout += sec * (unsigned long) HZ;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1396: FILE: fs/compat.c:1347:
+^I * long-words. $

CHECK:SPACING: No space is necessary after a cast
#1403: FILE: fs/compat.c:1354:
+	fds.in      = (unsigned long *)  bits;

CHECK:SPACING: No space is necessary after a cast
#1404: FILE: fs/compat.c:1355:
+	fds.out     = (unsigned long *) (bits +   size);

CHECK:SPACING: No space is necessary after a cast
#1405: FILE: fs/compat.c:1356:
+	fds.ex      = (unsigned long *) (bits + 2*size);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1405: FILE: fs/compat.c:1356:
+	fds.ex      = (unsigned long *) (bits + 2*size);
 	                                         ^

CHECK:SPACING: No space is necessary after a cast
#1406: FILE: fs/compat.c:1357:
+	fds.res_in  = (unsigned long *) (bits + 3*size);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1406: FILE: fs/compat.c:1357:
+	fds.res_in  = (unsigned long *) (bits + 3*size);
 	                                         ^

CHECK:SPACING: No space is necessary after a cast
#1407: FILE: fs/compat.c:1358:
+	fds.res_out = (unsigned long *) (bits + 4*size);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1407: FILE: fs/compat.c:1358:
+	fds.res_out = (unsigned long *) (bits + 4*size);
 	                                         ^

CHECK:SPACING: No space is necessary after a cast
#1408: FILE: fs/compat.c:1359:
+	fds.res_ex  = (unsigned long *) (bits + 5*size);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1408: FILE: fs/compat.c:1359:
+	fds.res_ex  = (unsigned long *) (bits + 5*size);
 	                                         ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1410: FILE: fs/compat.c:1361:
+	if ((ret = compat_get_fd_set(n, inp, fds.in)) ||

WARNING:LINE_SPACING: Missing a blank line after declarations
#1422: FILE: fs/compat.c:1373:
+		time_t sec = 0, usec = 0;
+		if (timeout) {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1425: FILE: fs/compat.c:1376:
+			usec *= (1000000/HZ);
 			                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1459: FILE: include/linux/compat.h:130:
+asmlinkage long compat_sys_select(int n, compat_ulong_t __user *inp,
+		compat_ulong_t __user *outp, compat_ulong_t __user *exp,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000287857.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 4 warnings, 32 checks, 1332 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000287857.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
