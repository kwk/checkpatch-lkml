WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: drivers/scsi/sim710.c:1126:
+    unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: drivers/scsi/sim710.c:1128:
+    spin_lock_irqsave(&io_request_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: drivers/scsi/sim710.c:1129:
+    sim710_intr_handle(irq, dev_id, regs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: drivers/scsi/sim710.c:1130:
+    spin_unlock_irqrestore(&io_request_lock, flags);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#234: FILE: drivers/scsi/sim710.c:1133:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: drivers/scsi/sim710.c:1139:
+    struct Scsi_Host * host = (struct Scsi_Host *)dev_id;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#240: FILE: drivers/scsi/sim710.c:1139:
+    struct Scsi_Host * host = (struct Scsi_Host *)dev_id;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#240: FILE: drivers/scsi/sim710.c:1139:
+    struct Scsi_Host * host = (struct Scsi_Host *)dev_id;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: drivers/scsi/sim710.c:1140:
+    struct sim710_hostdata *hostdata = (struct sim710_hostdata *)host->hostdata[0];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: drivers/scsi/sim710.c:1141:
+    Scsi_Cmnd * cmd;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#242: FILE: drivers/scsi/sim710.c:1141:
+    Scsi_Cmnd * cmd;

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Cmnd>
#242: FILE: drivers/scsi/sim710.c:1141:
+    Scsi_Cmnd * cmd;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: drivers/scsi/sim710.c:1142:
+    unsigned char istat, dstat;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: drivers/scsi/sim710.c:1143:
+    unsigned char sstat0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: drivers/scsi/sim710.c:1144:
+    u32 scratch, dsps, resume_offset = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: drivers/scsi/sim710.c:1146:
+    istat = NCR_read8(ISTAT_REG);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: drivers/scsi/sim710.c:1147:
+    if (!(istat & (ISTAT_SIP|ISTAT_DIP)))$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#248: FILE: drivers/scsi/sim710.c:1147:
+    if (!(istat & (ISTAT_SIP|ISTAT_DIP)))
                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#248: FILE: drivers/scsi/sim710.c:1147:
+    if (!(istat & (ISTAT_SIP|ISTAT_DIP)))
[...]
+    else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: drivers/scsi/sim710.c:1149:
+    else {$

CHECK:BRACES: Unbalanced braces around else statement
#250: FILE: drivers/scsi/sim710.c:1149:
+    else {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#254: FILE: drivers/scsi/sim710.c:1153:
+	sstat0 = dstat = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#256: FILE: drivers/scsi/sim710.c:1155:
+	if (istat & ISTAT_SIP) {
+	    sstat0 = NCR_read8(SSTAT0_REG);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#256: FILE: drivers/scsi/sim710.c:1155:
+	if (istat & ISTAT_SIP) {
+	    sstat0 = NCR_read8(SSTAT0_REG);
+	}

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#259: FILE: drivers/scsi/sim710.c:1158:
+	if (istat & ISTAT_DIP) {
+	    udelay(10);		/* Some comment somewhere about 10cycles

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#260: FILE: drivers/scsi/sim710.c:1159:
+	    udelay(10);		/* Some comment somewhere about 10cycles

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#261: FILE: drivers/scsi/sim710.c:1160:
+				 * between accesses to sstat0 and dstat ??? */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#264: FILE: drivers/scsi/sim710.c:1163:
+	DEB(DEB_INTS, printk("scsi%d: Int %d, istat %02x, sstat0 %02x "

WARNING:SPLIT_STRING: quoted string split across lines
#265: FILE: drivers/scsi/sim710.c:1164:
+	DEB(DEB_INTS, printk("scsi%d: Int %d, istat %02x, sstat0 %02x "
+		"dstat %02x, dsp [%04x], scratch %02x\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#269: FILE: drivers/scsi/sim710.c:1168:
+	if (scratch & 0x100) {
+	    u8 *p = hostdata->msgin_buf;

WARNING:TABSTOP: Statements should start on a tabstop
#270: FILE: drivers/scsi/sim710.c:1169:
+	    u8 *p = hostdata->msgin_buf;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#272: FILE: drivers/scsi/sim710.c:1171:
+	    DEB(DEB_INTS, printk("  msgin_buf: %02x %02x %02x %02x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#273: FILE: drivers/scsi/sim710.c:1172:
+	    DEB(DEB_INTS, printk("  msgin_buf: %02x %02x %02x %02x\n",
+			p[0], p[1], p[2], p[3]));

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#275: FILE: drivers/scsi/sim710.c:1174:
+	if ((dstat & DSTAT_SIR) && dsps == A_int_reselected) {
[...]
+	    unsigned char lcrc = NCR_read8(LCRC_REG_10);

CHECK:BRACES: braces {} should be used on all arms of this statement
#275: FILE: drivers/scsi/sim710.c:1174:
+	if ((dstat & DSTAT_SIR) && dsps == A_int_reselected) {
[...]
+	else
[...]

WARNING:TABSTOP: Statements should start on a tabstop
#281: FILE: drivers/scsi/sim710.c:1180:
+	    unsigned char lcrc = NCR_read8(LCRC_REG_10);

WARNING:TABSTOP: Statements should start on a tabstop
#282: FILE: drivers/scsi/sim710.c:1181:
+	    int id = 0;

WARNING:TABSTOP: Statements should start on a tabstop
#284: FILE: drivers/scsi/sim710.c:1183:
+	    if (!(lcrc & 0x7f)) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#285: FILE: drivers/scsi/sim710.c:1184:
+		printk("scsi%d: Reselected with LCRC = %02x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#286: FILE: drivers/scsi/sim710.c:1185:
+		printk("scsi%d: Reselected with LCRC = %02x\n",
+			host->host_no, lcrc);

WARNING:TABSTOP: Statements should start on a tabstop
#288: FILE: drivers/scsi/sim710.c:1187:
+	    }

WARNING:TABSTOP: Statements should start on a tabstop
#289: FILE: drivers/scsi/sim710.c:1188:
+	    else {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#289: FILE: drivers/scsi/sim710.c:1188:
+	    }
+	    else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#289: FILE: drivers/scsi/sim710.c:1188:
+	    else {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#290: FILE: drivers/scsi/sim710.c:1189:
+		while (!(lcrc & 1)) {
+		    id++;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#294: FILE: drivers/scsi/sim710.c:1193:
+		DEB(DEB_DISC, printk("scsi%d: Reselected by ID %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#295: FILE: drivers/scsi/sim710.c:1194:
+		DEB(DEB_DISC, printk("scsi%d: Reselected by ID %d\n",
+			host->host_no, id));

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#296: FILE: drivers/scsi/sim710.c:1195:
+		if (hostdata->running) {
[...]
+		    (void)NCR_read8(CTEST2_REG_700);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#300: FILE: drivers/scsi/sim710.c:1199:
+		    DEB(DEB_DISC, printk("scsi%d: Select of %d interrupted "

WARNING:SPLIT_STRING: quoted string split across lines
#301: FILE: drivers/scsi/sim710.c:1200:
+		    DEB(DEB_DISC, printk("scsi%d: Select of %d interrupted "
+				"by reselect from %d (%p)\n",

CHECK:SPACING: No space is necessary after a cast
#306: FILE: drivers/scsi/sim710.c:1205:
+		    cmd->SCp.ptr = (unsigned char *) hostdata->issue_queue;

CHECK:CAMELCASE: Avoid CamelCase: <SCp>
#306: FILE: drivers/scsi/sim710.c:1205:
+		    cmd->SCp.ptr = (unsigned char *) hostdata->issue_queue;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#309: FILE: drivers/scsi/sim710.c:1208:
+		cmd = hostdata->running = hostdata->target[id].cur_cmd;

WARNING:TABSTOP: Statements should start on a tabstop
#310: FILE: drivers/scsi/sim710.c:1209:
+	    }

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#312: FILE: drivers/scsi/sim710.c:1211:
+	else
+	    cmd = hostdata->running;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#312: FILE: drivers/scsi/sim710.c:1211:
+	}
+	else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#315: FILE: drivers/scsi/sim710.c:1214:
+	if (!cmd) {
+	    printk("scsi%d: No active command!\n", host->host_no);

CHECK:BRACES: braces {} should be used on all arms of this statement
#315: FILE: drivers/scsi/sim710.c:1214:
+	if (!cmd) {
[...]
+	else if (sstat0 & SSTAT0_700_STO) {
[...]
+	else if (sstat0 & (SSTAT0_SGE|SSTAT0_UDC|SSTAT0_RST|SSTAT0_PAR)) {
[...]
+	else if (dstat & (DSTAT_BF|DSTAT_ABRT|DSTAT_SSI|DSTAT_WTD)) {
[...]
+	else if (dstat & DSTAT_SIR)
[...]
+	else if (sstat0 & SSTAT0_MA)
[...]
+	else if (dstat & DSTAT_IID) {
[...]
+	else {
[...]

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#316: FILE: drivers/scsi/sim710.c:1215:
+	    printk("scsi%d: No active command!\n", host->host_no);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#317: FILE: drivers/scsi/sim710.c:1216:
+	    printk("scsi%d: Int %d, istat %02x, sstat0 %02x "

WARNING:SPLIT_STRING: quoted string split across lines
#318: FILE: drivers/scsi/sim710.c:1217:
+	    printk("scsi%d: Int %d, istat %02x, sstat0 %02x "
+		"dstat %02x, dsp [%04x], scratch %02x, dsps %08x\n",

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#324: FILE: drivers/scsi/sim710.c:1223:
+	else if (sstat0 & SSTAT0_700_STO) {
+	    DEB(DEB_TOUT, printk("scsi%d: Selection timeout\n", host->host_no));

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#324: FILE: drivers/scsi/sim710.c:1223:
+	}
+	else if (sstat0 & SSTAT0_700_STO) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#325: FILE: drivers/scsi/sim710.c:1224:
+	    DEB(DEB_TOUT, printk("scsi%d: Selection timeout\n", host->host_no));

CHECK:CAMELCASE: Avoid CamelCase: <Ent_reselect>
#329: FILE: drivers/scsi/sim710.c:1228:
+	    resume_offset = Ent_reselect;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#331: FILE: drivers/scsi/sim710.c:1230:
+	else if (sstat0 & (SSTAT0_SGE|SSTAT0_UDC|SSTAT0_RST|SSTAT0_PAR)) {
+	    printk("scsi%d: Serious error, sstat0 = %02x\n", host->host_no,

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#331: FILE: drivers/scsi/sim710.c:1230:
+	else if (sstat0 & (SSTAT0_SGE|SSTAT0_UDC|SSTAT0_RST|SSTAT0_PAR)) {
 	                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#331: FILE: drivers/scsi/sim710.c:1230:
+	else if (sstat0 & (SSTAT0_SGE|SSTAT0_UDC|SSTAT0_RST|SSTAT0_PAR)) {
 	                                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#331: FILE: drivers/scsi/sim710.c:1230:
+	else if (sstat0 & (SSTAT0_SGE|SSTAT0_UDC|SSTAT0_RST|SSTAT0_PAR)) {
 	                                                   ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#331: FILE: drivers/scsi/sim710.c:1230:
+	}
+	else if (sstat0 & (SSTAT0_SGE|SSTAT0_UDC|SSTAT0_RST|SSTAT0_PAR)) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#332: FILE: drivers/scsi/sim710.c:1231:
+	    printk("scsi%d: Serious error, sstat0 = %02x\n", host->host_no,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#333: FILE: drivers/scsi/sim710.c:1232:
+	    printk("scsi%d: Serious error, sstat0 = %02x\n", host->host_no,
+			    sstat0);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#337: FILE: drivers/scsi/sim710.c:1236:
+	else if (dstat & (DSTAT_BF|DSTAT_ABRT|DSTAT_SSI|DSTAT_WTD)) {
+	    printk("scsi%d: Serious error, dstat = %02x\n", host->host_no,

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#337: FILE: drivers/scsi/sim710.c:1236:
+	else if (dstat & (DSTAT_BF|DSTAT_ABRT|DSTAT_SSI|DSTAT_WTD)) {
 	                          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#337: FILE: drivers/scsi/sim710.c:1236:
+	else if (dstat & (DSTAT_BF|DSTAT_ABRT|DSTAT_SSI|DSTAT_WTD)) {
 	                                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#337: FILE: drivers/scsi/sim710.c:1236:
+	else if (dstat & (DSTAT_BF|DSTAT_ABRT|DSTAT_SSI|DSTAT_WTD)) {
 	                                               ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#337: FILE: drivers/scsi/sim710.c:1236:
+	}
+	else if (dstat & (DSTAT_BF|DSTAT_ABRT|DSTAT_SSI|DSTAT_WTD)) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#338: FILE: drivers/scsi/sim710.c:1237:
+	    printk("scsi%d: Serious error, dstat = %02x\n", host->host_no,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#339: FILE: drivers/scsi/sim710.c:1238:
+	    printk("scsi%d: Serious error, dstat = %02x\n", host->host_no,
+			    dstat);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#343: FILE: drivers/scsi/sim710.c:1242:
+	else if (dstat & DSTAT_SIR)
+	    resume_offset = handle_script_int(host, cmd);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#343: FILE: drivers/scsi/sim710.c:1242:
+	}
+	else if (dstat & DSTAT_SIR)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#345: FILE: drivers/scsi/sim710.c:1244:
+	else if (sstat0 & SSTAT0_MA)
+	    resume_offset = handle_phase_mismatch(host, cmd);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#347: FILE: drivers/scsi/sim710.c:1246:
+	else if (dstat & DSTAT_IID) {
[...]
+	    resume_offset = handle_idd(host, cmd);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#353: FILE: drivers/scsi/sim710.c:1252:
+	else {
+	    sim710_errors++;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#353: FILE: drivers/scsi/sim710.c:1252:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#353: FILE: drivers/scsi/sim710.c:1252:
+	else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#355: FILE: drivers/scsi/sim710.c:1254:
+	    printk("scsi%d: Spurious interrupt!\n", host->host_no);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#358: FILE: drivers/scsi/sim710.c:1257:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#360: FILE: drivers/scsi/sim710.c:1259:
+    if (resume_offset) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#361: FILE: drivers/scsi/sim710.c:1260:
+	if (resume_offset == Ent_reselect) {
+	    hostdata->running = NULL;

CHECK:BRACES: braces {} should be used on all arms of this statement
#361: FILE: drivers/scsi/sim710.c:1260:
+	if (resume_offset == Ent_reselect) {
[...]
+	else
[...]

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#365: FILE: drivers/scsi/sim710.c:1264:
+	else
+	    hostdata->state = STATE_BUSY;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#365: FILE: drivers/scsi/sim710.c:1264:
+	}
+	else

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#367: FILE: drivers/scsi/sim710.c:1266:
+	DEB(DEB_RESUME, printk("scsi%d: Resuming at script[0x%x]\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#368: FILE: drivers/scsi/sim710.c:1267:
+	DEB(DEB_RESUME, printk("scsi%d: Resuming at script[0x%x]\n",
+		host->host_no, resume_offset/4));

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#368: FILE: drivers/scsi/sim710.c:1267:
+		host->host_no, resume_offset/4));
 		                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#374: FILE: drivers/scsi/sim710.c:1273:
+	    NCR_write32(DSP_REG, virt_to_bus(hostdata->script+resume_offset/4));
 	                                                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#374: FILE: drivers/scsi/sim710.c:1273:
+	    NCR_write32(DSP_REG, virt_to_bus(hostdata->script+resume_offset/4));
 	                                                                   ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#376: FILE: drivers/scsi/sim710.c:1275:
+	if (resume_offset == Ent_reselect)
+	    run_process_issue_queue(hostdata);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: drivers/scsi/sim710.c:1277:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: drivers/scsi/sim710.c:1278:
+    else {$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#379: FILE: drivers/scsi/sim710.c:1278:
+    }
+    else {

CHECK:BRACES: Unbalanced braces around else statement
#379: FILE: drivers/scsi/sim710.c:1278:
+    else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#380: FILE: drivers/scsi/sim710.c:1279:
+	printk("scsi%d: Failed to handle interrupt.  Failing commands "

WARNING:SPLIT_STRING: quoted string split across lines
#381: FILE: drivers/scsi/sim710.c:1280:
+	printk("scsi%d: Failed to handle interrupt.  Failing commands "
+		"and resetting SCSI bus and chip\n", host->host_no);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#384: FILE: drivers/scsi/sim710.c:1283:
+    }$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#387: FILE: drivers/scsi/sim710.c:1286:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#407: FILE: drivers/scsi/ips.c:815:
+ips_removeq_copp_head(ips_copp_queue_t * queue)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#415: FILE: drivers/scsi/ips.c:823:
+	if (!item) {
+		return (NULL);
+	}

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#416: FILE: drivers/scsi/ips.c:824:
+		return (NULL);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#427: FILE: drivers/scsi/ips.c:835:
+	return (item);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#442: FILE: drivers/scsi/ips.c:850:
+ips_removeq_copp(ips_copp_queue_t * queue, ips_copp_wait_item_t * item)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#442: FILE: drivers/scsi/ips.c:850:
+ips_removeq_copp(ips_copp_queue_t * queue, ips_copp_wait_item_t * item)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#451: FILE: drivers/scsi/ips.c:859:
+	if (item == queue->head) {
+		return (ips_removeq_copp_head(queue));
+	}

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#452: FILE: drivers/scsi/ips.c:860:
+		return (ips_removeq_copp_head(queue));

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#470: FILE: drivers/scsi/ips.c:878:
+		return (item);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#488: FILE: drivers/scsi/ips.c:896:
+ips_removeq_wait_head(ips_wait_queue_t * queue)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#496: FILE: drivers/scsi/ips.c:904:
+	if (!item) {
+		return (NULL);
+	}

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#497: FILE: drivers/scsi/ips.c:905:
+		return (NULL);

CHECK:SPACING: No space is necessary after a cast
#500: FILE: drivers/scsi/ips.c:908:
+	queue->head = (Scsi_Cmnd *) item->host_scribble;

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#508: FILE: drivers/scsi/ips.c:916:
+	return (item);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#523: FILE: drivers/scsi/ips.c:931:
+ips_removeq_wait(ips_wait_queue_t * queue, Scsi_Cmnd * item)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#523: FILE: drivers/scsi/ips.c:931:
+ips_removeq_wait(ips_wait_queue_t * queue, Scsi_Cmnd * item)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#532: FILE: drivers/scsi/ips.c:940:
+	if (item == queue->head) {
+		return (ips_removeq_wait_head(queue));
+	}

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#533: FILE: drivers/scsi/ips.c:941:
+		return (ips_removeq_wait_head(queue));

CHECK:SPACING: No space is necessary after a cast
#538: FILE: drivers/scsi/ips.c:946:
+	while ((p) && (item != (Scsi_Cmnd *) p->host_scribble))

CHECK:SPACING: No space is necessary after a cast
#539: FILE: drivers/scsi/ips.c:947:
+		p = (Scsi_Cmnd *) p->host_scribble;

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#551: FILE: drivers/scsi/ips.c:959:
+		return (item);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#576: FILE: drivers/scsi/ips.c:1034:
+ips_removeq_scb_head(ips_scb_queue_t * queue)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#584: FILE: drivers/scsi/ips.c:1042:
+	if (!item) {
+		return (NULL);
+	}

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#585: FILE: drivers/scsi/ips.c:1043:
+		return (NULL);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#596: FILE: drivers/scsi/ips.c:1054:
+	return (item);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#611: FILE: drivers/scsi/ips.c:1069:
+ips_removeq_scb(ips_scb_queue_t * queue, ips_scb_t * item)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#611: FILE: drivers/scsi/ips.c:1069:
+ips_removeq_scb(ips_scb_queue_t * queue, ips_scb_t * item)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#620: FILE: drivers/scsi/ips.c:1078:
+	if (item == queue->head) {
+		return (ips_removeq_scb_head(queue));
+	}

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#621: FILE: drivers/scsi/ips.c:1079:
+		return (ips_removeq_scb_head(queue));

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#639: FILE: drivers/scsi/ips.c:1097:
+		return (item);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#670: FILE: drivers/scsi/ips.c:1314:
+ips_putq_copp_tail(ips_copp_queue_t * queue, ips_copp_wait_item_t * item)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#670: FILE: drivers/scsi/ips.c:1314:
+ips_putq_copp_tail(ips_copp_queue_t * queue, ips_copp_wait_item_t * item)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#704: FILE: drivers/scsi/ips.c:1346:
+ips_putq_wait_tail(ips_wait_queue_t * queue, Scsi_Cmnd * item)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#704: FILE: drivers/scsi/ips.c:1346:
+ips_putq_wait_tail(ips_wait_queue_t * queue, Scsi_Cmnd * item)

CHECK:SPACING: No space is necessary after a cast
#714: FILE: drivers/scsi/ips.c:1356:
+		queue->tail->host_scribble = (char *) item;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#737: FILE: drivers/scsi/ips.c:1379:
+ips_queue(Scsi_Cmnd * SC, void (*done) (Scsi_Cmnd *))

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#758: FILE: drivers/scsi/ips.c:3013:
+ips_putq_scb_head(ips_scb_queue_t * queue, ips_scb_t * item)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#758: FILE: drivers/scsi/ips.c:3013:
+ips_putq_scb_head(ips_scb_queue_t * queue, ips_scb_t * item)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#786: FILE: drivers/scsi/ips.c:3041:
+ips_putq_scb_tail(ips_scb_queue_t * queue, ips_scb_t * item)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#786: FILE: drivers/scsi/ips.c:3041:
+ips_putq_scb_tail(ips_scb_queue_t * queue, ips_scb_t * item)

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1206: FILE: drivers/scsi/qla1280.c:879:
+ /*
+    * qla2100_enable_intrs

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1214: FILE: drivers/scsi/qla1280.c:887:
+    *      None
+  */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1239: FILE: drivers/scsi/qla1280.c:912:
+
+

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#1290: FILE: drivers/scsi/scsiiom.c:214:
+static void __inline__

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

WARNING:INLINE: plain inline is preferred over __inline__
#1290: FILE: drivers/scsi/scsiiom.c:214:
+static void __inline__

ERROR:SPACING: space prohibited after that open parenthesis '('
#1291: FILE: drivers/scsi/scsiiom.c:215:
+dc390_InvalidCmd( PACB pACB )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1291: FILE: drivers/scsi/scsiiom.c:215:
+dc390_InvalidCmd( PACB pACB )

CHECK:CAMELCASE: Avoid CamelCase: <dc390_InvalidCmd>
#1291: FILE: drivers/scsi/scsiiom.c:215:
+dc390_InvalidCmd( PACB pACB )

CHECK:CAMELCASE: Avoid CamelCase: <pACB>
#1291: FILE: drivers/scsi/scsiiom.c:215:
+dc390_InvalidCmd( PACB pACB )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1293: FILE: drivers/scsi/scsiiom.c:217:
+    if( pACB->pActiveDCB->pActiveSRB->SRBState & (SRB_START_+SRB_MSGOUT) )$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1293: FILE: drivers/scsi/scsiiom.c:217:
+    if( pACB->pActiveDCB->pActiveSRB->SRBState & (SRB_START_+SRB_MSGOUT) )
                                                             ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1293: FILE: drivers/scsi/scsiiom.c:217:
+    if( pACB->pActiveDCB->pActiveSRB->SRBState & (SRB_START_+SRB_MSGOUT) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1293: FILE: drivers/scsi/scsiiom.c:217:
+    if( pACB->pActiveDCB->pActiveSRB->SRBState & (SRB_START_+SRB_MSGOUT) )

ERROR:SPACING: space required before the open parenthesis '('
#1293: FILE: drivers/scsi/scsiiom.c:217:
+    if( pACB->pActiveDCB->pActiveSRB->SRBState & (SRB_START_+SRB_MSGOUT) )

CHECK:CAMELCASE: Avoid CamelCase: <pActiveDCB>
#1293: FILE: drivers/scsi/scsiiom.c:217:
+    if( pACB->pActiveDCB->pActiveSRB->SRBState & (SRB_START_+SRB_MSGOUT) )

CHECK:CAMELCASE: Avoid CamelCase: <pActiveSRB>
#1293: FILE: drivers/scsi/scsiiom.c:217:
+    if( pACB->pActiveDCB->pActiveSRB->SRBState & (SRB_START_+SRB_MSGOUT) )

CHECK:CAMELCASE: Avoid CamelCase: <SRBState>
#1293: FILE: drivers/scsi/scsiiom.c:217:
+    if( pACB->pActiveDCB->pActiveSRB->SRBState & (SRB_START_+SRB_MSGOUT) )

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1294: FILE: drivers/scsi/scsiiom.c:218:
+	DC390_write8 (ScsiCmd, CLEAR_FIFO_CMD);

CHECK:CAMELCASE: Avoid CamelCase: <ScsiCmd>
#1294: FILE: drivers/scsi/scsiiom.c:218:
+	DC390_write8 (ScsiCmd, CLEAR_FIFO_CMD);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1297: FILE: drivers/scsi/scsiiom.c:221:
+#define DC390_ENABLE_MSGOUT DC390_write8 (ScsiCmd, SET_ATN_CMD)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1297: FILE: drivers/scsi/scsiiom.c:221:
+#define DC390_ENABLE_MSGOUT DC390_write8 (ScsiCmd, SET_ATN_CMD)

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#1300: FILE: drivers/scsi/scsiiom.c:224:
+static void __inline__

WARNING:INLINE: plain inline is preferred over __inline__
#1300: FILE: drivers/scsi/scsiiom.c:224:
+static void __inline__

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1301: FILE: drivers/scsi/scsiiom.c:225:
+dc390_EnableMsgOut_Abort ( PACB pACB, PSRB pSRB )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1301: FILE: drivers/scsi/scsiiom.c:225:
+dc390_EnableMsgOut_Abort ( PACB pACB, PSRB pSRB )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1301: FILE: drivers/scsi/scsiiom.c:225:
+dc390_EnableMsgOut_Abort ( PACB pACB, PSRB pSRB )

CHECK:CAMELCASE: Avoid CamelCase: <dc390_EnableMsgOut_Abort>
#1301: FILE: drivers/scsi/scsiiom.c:225:
+dc390_EnableMsgOut_Abort ( PACB pACB, PSRB pSRB )

CHECK:CAMELCASE: Avoid CamelCase: <pSRB>
#1301: FILE: drivers/scsi/scsiiom.c:225:
+dc390_EnableMsgOut_Abort ( PACB pACB, PSRB pSRB )

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1303: FILE: drivers/scsi/scsiiom.c:227:
+    pSRB->MsgOutBuf[0] = ABORT; $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1303: FILE: drivers/scsi/scsiiom.c:227:
+    pSRB->MsgOutBuf[0] = ABORT; $

CHECK:CAMELCASE: Avoid CamelCase: <MsgOutBuf>
#1303: FILE: drivers/scsi/scsiiom.c:227:
+    pSRB->MsgOutBuf[0] = ABORT; 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1304: FILE: drivers/scsi/scsiiom.c:228:
+    pSRB->MsgCnt = 1; DC390_ENABLE_MSGOUT;$

CHECK:CAMELCASE: Avoid CamelCase: <MsgCnt>
#1304: FILE: drivers/scsi/scsiiom.c:228:
+    pSRB->MsgCnt = 1; DC390_ENABLE_MSGOUT;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1305: FILE: drivers/scsi/scsiiom.c:229:
+    pSRB->pSRBDCB->DCBFlag &= ~ABORT_DEV_;$

CHECK:CAMELCASE: Avoid CamelCase: <pSRBDCB>
#1305: FILE: drivers/scsi/scsiiom.c:229:
+    pSRB->pSRBDCB->DCBFlag &= ~ABORT_DEV_;

CHECK:CAMELCASE: Avoid CamelCase: <DCBFlag>
#1305: FILE: drivers/scsi/scsiiom.c:229:
+    pSRB->pSRBDCB->DCBFlag &= ~ABORT_DEV_;

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#1340: FILE: drivers/scsi/scsiiom.c:1365:
+static void __inline__

WARNING:INLINE: plain inline is preferred over __inline__
#1340: FILE: drivers/scsi/scsiiom.c:1365:
+static void __inline__

ERROR:SPACING: space prohibited after that open parenthesis '('
#1341: FILE: drivers/scsi/scsiiom.c:1366:
+dc390_RequestSense( PACB pACB, PDCB pDCB, PSRB pSRB )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1341: FILE: drivers/scsi/scsiiom.c:1366:
+dc390_RequestSense( PACB pACB, PDCB pDCB, PSRB pSRB )

CHECK:CAMELCASE: Avoid CamelCase: <dc390_RequestSense>
#1341: FILE: drivers/scsi/scsiiom.c:1366:
+dc390_RequestSense( PACB pACB, PDCB pDCB, PSRB pSRB )

CHECK:CAMELCASE: Avoid CamelCase: <pDCB>
#1341: FILE: drivers/scsi/scsiiom.c:1366:
+dc390_RequestSense( PACB pACB, PDCB pDCB, PSRB pSRB )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1343: FILE: drivers/scsi/scsiiom.c:1368:
+    PSCSICMD  pcmd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1345: FILE: drivers/scsi/scsiiom.c:1370:
+    REMOVABLEDEBUG(printk (KERN_INFO "DC390: RequestSense (Cmd %02x, Id %02x, LUN %02x)\n",\$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1345: FILE: drivers/scsi/scsiiom.c:1370:
+    REMOVABLEDEBUG(printk (KERN_INFO "DC390: RequestSense (Cmd %02x, Id %02x, LUN %02x)\n",\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1345: FILE: drivers/scsi/scsiiom.c:1370:
+    REMOVABLEDEBUG(printk (KERN_INFO "DC390: RequestSense (Cmd %02x, Id %02x, LUN %02x)\n",\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#1345: FILE: drivers/scsi/scsiiom.c:1370:
+    REMOVABLEDEBUG(printk (KERN_INFO "DC390: RequestSense (Cmd %02x, Id %02x, LUN %02x)\n",\

CHECK:CAMELCASE: Avoid CamelCase: <TargetID>
#1346: FILE: drivers/scsi/scsiiom.c:1371:
+	    pSRB->pcmd->cmnd[0], pDCB->TargetID, pDCB->TargetLUN);)

CHECK:CAMELCASE: Avoid CamelCase: <TargetLUN>
#1346: FILE: drivers/scsi/scsiiom.c:1371:
+	    pSRB->pcmd->cmnd[0], pDCB->TargetID, pDCB->TargetLUN);)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1348: FILE: drivers/scsi/scsiiom.c:1373:
+    pSRB->SRBFlag |= AUTO_REQSENSE;$

CHECK:CAMELCASE: Avoid CamelCase: <SRBFlag>
#1348: FILE: drivers/scsi/scsiiom.c:1373:
+    pSRB->SRBFlag |= AUTO_REQSENSE;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1353: FILE: drivers/scsi/scsiiom.c:1378:
+    pSRB->SavedSGCount = pSRB->SGcount;$

CHECK:CAMELCASE: Avoid CamelCase: <SavedSGCount>
#1353: FILE: drivers/scsi/scsiiom.c:1378:
+    pSRB->SavedSGCount = pSRB->SGcount;

CHECK:CAMELCASE: Avoid CamelCase: <SGcount>
#1353: FILE: drivers/scsi/scsiiom.c:1378:
+    pSRB->SavedSGCount = pSRB->SGcount;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1354: FILE: drivers/scsi/scsiiom.c:1379:
+    pSRB->SavedTotXLen = pSRB->TotalXferredLen;$

CHECK:CAMELCASE: Avoid CamelCase: <SavedTotXLen>
#1354: FILE: drivers/scsi/scsiiom.c:1379:
+    pSRB->SavedTotXLen = pSRB->TotalXferredLen;

CHECK:CAMELCASE: Avoid CamelCase: <TotalXferredLen>
#1354: FILE: drivers/scsi/scsiiom.c:1379:
+    pSRB->SavedTotXLen = pSRB->TotalXferredLen;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1355: FILE: drivers/scsi/scsiiom.c:1380:
+    pSRB->AdaptStatus = 0;$

CHECK:CAMELCASE: Avoid CamelCase: <AdaptStatus>
#1355: FILE: drivers/scsi/scsiiom.c:1380:
+    pSRB->AdaptStatus = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1356: FILE: drivers/scsi/scsiiom.c:1381:
+    pSRB->TargetStatus = 0; /* CHECK_CONDITION<<1; */$

CHECK:CAMELCASE: Avoid CamelCase: <TargetStatus>
#1356: FILE: drivers/scsi/scsiiom.c:1381:
+    pSRB->TargetStatus = 0; /* CHECK_CONDITION<<1; */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1358: FILE: drivers/scsi/scsiiom.c:1383:
+    pcmd = pSRB->pcmd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1360: FILE: drivers/scsi/scsiiom.c:1385:
+    pSRB->Segmentx.address = (PUCHAR) &(pcmd->sense_buffer);$

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#1360: FILE: drivers/scsi/scsiiom.c:1385:
+    pSRB->Segmentx.address = (PUCHAR) &(pcmd->sense_buffer);
                                       ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pcmd->sense_buffer
#1360: FILE: drivers/scsi/scsiiom.c:1385:
+    pSRB->Segmentx.address = (PUCHAR) &(pcmd->sense_buffer);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:CAMELCASE: Avoid CamelCase: <Segmentx>
#1360: FILE: drivers/scsi/scsiiom.c:1385:
+    pSRB->Segmentx.address = (PUCHAR) &(pcmd->sense_buffer);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1361: FILE: drivers/scsi/scsiiom.c:1386:
+    pSRB->Segmentx.length = sizeof(pcmd->sense_buffer);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1362: FILE: drivers/scsi/scsiiom.c:1387:
+    pSRB->pSegmentList = &pSRB->Segmentx;$

CHECK:CAMELCASE: Avoid CamelCase: <pSegmentList>
#1362: FILE: drivers/scsi/scsiiom.c:1387:
+    pSRB->pSegmentList = &pSRB->Segmentx;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1363: FILE: drivers/scsi/scsiiom.c:1388:
+    pSRB->SGcount = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1364: FILE: drivers/scsi/scsiiom.c:1389:
+    pSRB->SGIndex = 0;$

CHECK:CAMELCASE: Avoid CamelCase: <SGIndex>
#1364: FILE: drivers/scsi/scsiiom.c:1389:
+    pSRB->SGIndex = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1372: FILE: drivers/scsi/scsiiom.c:1397:
+    pSRB->TotalXferredLen = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1373: FILE: drivers/scsi/scsiiom.c:1398:
+    pSRB->SGToBeXferLen = 0;$

CHECK:CAMELCASE: Avoid CamelCase: <SGToBeXferLen>
#1373: FILE: drivers/scsi/scsiiom.c:1398:
+    pSRB->SGToBeXferLen = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1374: FILE: drivers/scsi/scsiiom.c:1399:
+    if( dc390_StartSCSI( pACB, pDCB, pSRB ) ) {$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1374: FILE: drivers/scsi/scsiiom.c:1399:
+    if( dc390_StartSCSI( pACB, pDCB, pSRB ) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1374: FILE: drivers/scsi/scsiiom.c:1399:
+    if( dc390_StartSCSI( pACB, pDCB, pSRB ) ) {

ERROR:SPACING: space required before the open parenthesis '('
#1374: FILE: drivers/scsi/scsiiom.c:1399:
+    if( dc390_StartSCSI( pACB, pDCB, pSRB ) ) {

CHECK:CAMELCASE: Avoid CamelCase: <dc390_StartSCSI>
#1374: FILE: drivers/scsi/scsiiom.c:1399:
+    if( dc390_StartSCSI( pACB, pDCB, pSRB ) ) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1375: FILE: drivers/scsi/scsiiom.c:1400:
+	dc390_Going_to_Waiting ( pDCB, pSRB );

ERROR:SPACING: space prohibited after that open parenthesis '('
#1375: FILE: drivers/scsi/scsiiom.c:1400:
+	dc390_Going_to_Waiting ( pDCB, pSRB );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1375: FILE: drivers/scsi/scsiiom.c:1400:
+	dc390_Going_to_Waiting ( pDCB, pSRB );

CHECK:CAMELCASE: Avoid CamelCase: <dc390_Going_to_Waiting>
#1375: FILE: drivers/scsi/scsiiom.c:1400:
+	dc390_Going_to_Waiting ( pDCB, pSRB );

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1376: FILE: drivers/scsi/scsiiom.c:1401:
+	dc390_waiting_timer (pACB, HZ/5);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1376: FILE: drivers/scsi/scsiiom.c:1401:
+	dc390_waiting_timer (pACB, HZ/5);
 	                             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1377: FILE: drivers/scsi/scsiiom.c:1402:
+    }$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1380: FILE: drivers/scsi/scsiiom.c:1405:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1444: FILE: drivers/scsi/AM53C974.c:1030:
+/************************************************************************** $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1445: FILE: drivers/scsi/AM53C974.c:1031:
+/************************************************************************** 
+* Function : AM53C974_set_async(struct Scsi_Host *instance, int target)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1451: FILE: drivers/scsi/AM53C974.c:1037:
+* $

WARNING:INLINE: plain inline is preferred over __inline__
#1454: FILE: drivers/scsi/AM53C974.c:1040:
+static __inline__ void AM53C974_set_async(struct Scsi_Host *instance, int target)

CHECK:SPACING: No space is necessary after a cast
#1457: FILE: drivers/scsi/AM53C974.c:1043:
+	struct AM53C974_hostdata *hostdata = (struct AM53C974_hostdata *) instance->hostdata;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1458: FILE: drivers/scsi/AM53C974.c:1044:
+	struct AM53C974_hostdata *hostdata = (struct AM53C974_hostdata *) instance->hostdata;
+	AM53C974_setio(instance);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1464: FILE: drivers/scsi/AM53C974.c:1050:
+/************************************************************************** $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1465: FILE: drivers/scsi/AM53C974.c:1051:
+/************************************************************************** 
+* Function : AM53C974_set_sync(struct Scsi_Host *instance, int target)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1471: FILE: drivers/scsi/AM53C974.c:1057:
+* $

WARNING:INLINE: plain inline is preferred over __inline__
#1474: FILE: drivers/scsi/AM53C974.c:1060:
+static __inline__ void AM53C974_set_sync(struct Scsi_Host *instance, int target)

CHECK:SPACING: No space is necessary after a cast
#1477: FILE: drivers/scsi/AM53C974.c:1063:
+	struct AM53C974_hostdata *hostdata = (struct AM53C974_hostdata *) instance->hostdata;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1478: FILE: drivers/scsi/AM53C974.c:1064:
+	struct AM53C974_hostdata *hostdata = (struct AM53C974_hostdata *) instance->hostdata;
+	AM53C974_setio(instance);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1485: FILE: drivers/scsi/AM53C974.c:1071:
+/************************************************************************** $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1486: FILE: drivers/scsi/AM53C974.c:1072:
+/************************************************************************** 
+* Function : AM53C974_transfer_dma(struct Scsi_Host *instance, short dir,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1492: FILE: drivers/scsi/AM53C974.c:1078:
+*          dir -- direction flag, 0: write to device, read from memory; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1496: FILE: drivers/scsi/AM53C974.c:1082:
+* $

WARNING:INLINE: plain inline is preferred over __inline__
#1499: FILE: drivers/scsi/AM53C974.c:1085:
+static __inline__ void AM53C974_transfer_dma(struct Scsi_Host *instance, short dir,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1500: FILE: drivers/scsi/AM53C974.c:1086:
+static __inline__ void AM53C974_transfer_dma(struct Scsi_Host *instance, short dir,
+					unsigned long length, char *data)

CHECK:SPACING: No space is necessary after a cast
#1507: FILE: drivers/scsi/AM53C974.c:1093:
+	AM53C974_write_8(STCLREG, (unsigned char) (length & 0xff));

CHECK:SPACING: No space is necessary after a cast
#1508: FILE: drivers/scsi/AM53C974.c:1094:
+	AM53C974_write_8(STCMREG, (unsigned char) ((length & 0xff00) >> 8));

CHECK:SPACING: No space is necessary after a cast
#1509: FILE: drivers/scsi/AM53C974.c:1095:
+	AM53C974_write_8(STCHREG, (unsigned char) ((length & 0xff0000) >> 16));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1611: FILE: drivers/scsi/megaraid.c:3474:
+static inline void mega_freeSgList (mega_host_config * megaCfg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1611: FILE: drivers/scsi/megaraid.c:3474:
+static inline void mega_freeSgList (mega_host_config * megaCfg)

CHECK:CAMELCASE: Avoid CamelCase: <mega_freeSgList>
#1611: FILE: drivers/scsi/megaraid.c:3474:
+static inline void mega_freeSgList (mega_host_config * megaCfg)

CHECK:CAMELCASE: Avoid CamelCase: <megaCfg>
#1611: FILE: drivers/scsi/megaraid.c:3474:
+static inline void mega_freeSgList (mega_host_config * megaCfg)

CHECK:CAMELCASE: Avoid CamelCase: <scbList>
#1616: FILE: drivers/scsi/megaraid.c:3479:
+		if (megaCfg->scbList[i].sgList)

CHECK:CAMELCASE: Avoid CamelCase: <sgList>
#1616: FILE: drivers/scsi/megaraid.c:3479:
+		if (megaCfg->scbList[i].sgList)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1617: FILE: drivers/scsi/megaraid.c:3480:
+			pci_free_consistent (megaCfg->dev,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1618: FILE: drivers/scsi/megaraid.c:3481:
+					     sizeof (mega_64sglist) *

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'megaCfg->scbList[i].dma_sghandle64'
#1622: FILE: drivers/scsi/megaraid.c:3485:
+					     megaCfg->scbList[i].
+					     dma_sghandle64);

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#1623: FILE: drivers/scsi/megaraid.c:3486:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,4,0)	/* 0x020400 */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1623: FILE: drivers/scsi/megaraid.c:3486:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,4,0)	/* 0x020400 */
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1623: FILE: drivers/scsi/megaraid.c:3486:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,4,0)	/* 0x020400 */
                                            ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1623: FILE: drivers/scsi/megaraid.c:3486:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,4,0)	/* 0x020400 */

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1624: FILE: drivers/scsi/megaraid.c:3487:
+			kfree (megaCfg->scbList[i].sgList);	/* free sgList */

ERROR:SPACING: space required before the open parenthesis '('
#1672: FILE: drivers/scsi/megaraid2.c:948:
+	if(!list_empty(&adapter->pending_list))

ERROR:SPACING: space prohibited after that open parenthesis '('
#1697: FILE: drivers/scsi/megaraid2.c:1016:
+	if( !list_empty(head) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1697: FILE: drivers/scsi/megaraid2.c:1016:
+	if( !list_empty(head) ) {

ERROR:SPACING: space required before the open parenthesis '('
#1697: FILE: drivers/scsi/megaraid2.c:1016:
+	if( !list_empty(head) ) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1698: FILE: drivers/scsi/megaraid2.c:1017:
+	if( !list_empty(head) ) {
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1713: FILE: drivers/scsi/megaraid2.c:1032:
+
+

ERROR:SPACING: space prohibited after that open parenthesis '('
#1731: FILE: drivers/scsi/megaraid2.c:1050:
+	if ( tgt > adapter->this_id )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1731: FILE: drivers/scsi/megaraid2.c:1050:
+	if ( tgt > adapter->this_id )

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1736: FILE: drivers/scsi/megaraid2.c:1055:
+
+

ERROR:SPACING: space prohibited after that open parenthesis '('
#1740: FILE: drivers/scsi/megaraid2.c:1059:
+	if( adapter->boot_ldrv_enabled ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1740: FILE: drivers/scsi/megaraid2.c:1059:
+	if( adapter->boot_ldrv_enabled ) {

ERROR:SPACING: space required before the open parenthesis '('
#1740: FILE: drivers/scsi/megaraid2.c:1059:
+	if( adapter->boot_ldrv_enabled ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#1741: FILE: drivers/scsi/megaraid2.c:1060:
+		if( ldrv_num == 0 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1741: FILE: drivers/scsi/megaraid2.c:1060:
+		if( ldrv_num == 0 ) {

ERROR:SPACING: space required before the open parenthesis '('
#1741: FILE: drivers/scsi/megaraid2.c:1060:
+		if( ldrv_num == 0 ) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1744: FILE: drivers/scsi/megaraid2.c:1063:
+		}
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#1744: FILE: drivers/scsi/megaraid2.c:1063:
+		else {

ERROR:SPACING: space prohibited after that open parenthesis '('
#1745: FILE: drivers/scsi/megaraid2.c:1064:
+			if( ldrv_num <= adapter->boot_ldrv ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1745: FILE: drivers/scsi/megaraid2.c:1064:
+			if( ldrv_num <= adapter->boot_ldrv ) {

ERROR:SPACING: space required before the open parenthesis '('
#1745: FILE: drivers/scsi/megaraid2.c:1064:
+			if( ldrv_num <= adapter->boot_ldrv ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1745: FILE: drivers/scsi/megaraid2.c:1064:
+			if( ldrv_num <= adapter->boot_ldrv ) {
+				ldrv_num--;
+			}

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1761: FILE: drivers/scsi/megaraid2.c:1080:
+	if (adapter->support_random_del && adapter->read_ldidmap )

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1763: FILE: drivers/scsi/megaraid2.c:1082:
+		case READ_6:	/* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1764: FILE: drivers/scsi/megaraid2.c:1083:
+		case WRITE_6:	/* fall through */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1765: FILE: drivers/scsi/megaraid2.c:1084:
+		case READ_10:	/* fall through */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1773: FILE: drivers/scsi/megaraid2.c:1092:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1847: FILE: drivers/scsi/megaraid2.c:1772:
+mega_busywait_mbox (adapter_t *adapter)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1954: FILE: drivers/scsi/megaraid2.c:2025:
+
+

ERROR:SPACING: space prohibited after that open parenthesis '('
#1960: FILE: drivers/scsi/megaraid2.c:2031:
+	if( atomic_read(&adapter->quiescent ) == 0) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1960: FILE: drivers/scsi/megaraid2.c:2031:
+	if( atomic_read(&adapter->quiescent ) == 0) {

ERROR:SPACING: space required before the open parenthesis '('
#1960: FILE: drivers/scsi/megaraid2.c:2031:
+	if( atomic_read(&adapter->quiescent ) == 0) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1960: FILE: drivers/scsi/megaraid2.c:2031:
+	if( atomic_read(&adapter->quiescent ) == 0) {
+		mega_runpendq(adapter);
+	}

WARNING:RETURN_VOID: void function return statements are not generally useful
#1967: FILE: drivers/scsi/megaraid2.c:2038:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1969: FILE: drivers/scsi/megaraid2.c:2040:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1986: FILE: drivers/scsi/megaraid2.c:2057:
+
+

ERROR:SPACING: space required before the open parenthesis '('
#1992: FILE: drivers/scsi/megaraid2.c:2063:
+	if(atomic_read(&adapter->quiescent) == 0) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1992: FILE: drivers/scsi/megaraid2.c:2063:
+	if(atomic_read(&adapter->quiescent) == 0) {
+		mega_runpendq(adapter);
+	}

WARNING:RETURN_VOID: void function return statements are not generally useful
#1999: FILE: drivers/scsi/megaraid2.c:2070:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2001: FILE: drivers/scsi/megaraid2.c:2072:
+
+

ERROR:SPACING: space required before the open parenthesis '('
#2043: FILE: drivers/scsi/megaraid2.c:2545:
+	for(i = 0; i < adapter->max_cmds; i++) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2044: FILE: drivers/scsi/megaraid2.c:2546:
+	for(i = 0; i < adapter->max_cmds; i++) {
+

ERROR:SPACING: space prohibited after that open parenthesis '('
#2047: FILE: drivers/scsi/megaraid2.c:2549:
+		if( scb->sgl64 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2047: FILE: drivers/scsi/megaraid2.c:2549:
+		if( scb->sgl64 ) {

ERROR:SPACING: space required before the open parenthesis '('
#2047: FILE: drivers/scsi/megaraid2.c:2549:
+		if( scb->sgl64 ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2049: FILE: drivers/scsi/megaraid2.c:2551:
+			pci_free_consistent(adapter->dev,
+				sizeof(mega_sgl64) * adapter->sglen,

ERROR:SPACING: space prohibited after that open parenthesis '('
#2056: FILE: drivers/scsi/megaraid2.c:2558:
+		if( scb->pthru ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2056: FILE: drivers/scsi/megaraid2.c:2558:
+		if( scb->pthru ) {

ERROR:SPACING: space required before the open parenthesis '('
#2056: FILE: drivers/scsi/megaraid2.c:2558:
+		if( scb->pthru ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2058: FILE: drivers/scsi/megaraid2.c:2560:
+			pci_free_consistent(adapter->dev, sizeof(mega_passthru),
+				scb->pthru, scb->pthru_dma_addr);

ERROR:SPACING: space prohibited after that open parenthesis '('
#2063: FILE: drivers/scsi/megaraid2.c:2565:
+		if( scb->epthru ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2063: FILE: drivers/scsi/megaraid2.c:2565:
+		if( scb->epthru ) {

ERROR:SPACING: space required before the open parenthesis '('
#2063: FILE: drivers/scsi/megaraid2.c:2565:
+		if( scb->epthru ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2065: FILE: drivers/scsi/megaraid2.c:2567:
+			pci_free_consistent(adapter->dev,
+				sizeof(mega_ext_passthru),

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2071: FILE: drivers/scsi/megaraid2.c:2573:
+
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2074: FILE: drivers/scsi/megaraid2.c:2576:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2140: FILE: drivers/scsi/megaraid2.c:2936:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2147: FILE: drivers/scsi/megaraid2.c:2943:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <BaseAddress>
#2300: FILE: drivers/scsi/nsp32.c:3370:
+	unsigned int base = data->BaseAddress;

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#2305: FILE: drivers/scsi/nsp32.c:3375:
+	if (val == 0) {
[...]
+	} else {
[...]

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#2313: FILE: drivers/scsi/nsp32.c:3383:
+	udelay(10);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2326: FILE: drivers/scsi/nsp32.c:3396:
+
+

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#2329: FILE: drivers/scsi/nsp32.c:3399:
+	if (tmp == 0) {
[...]
+	} else {
[...]

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#2335: FILE: drivers/scsi/nsp32.c:3405:
+	udelay(10);

WARNING:INLINE: plain inline is preferred over __inline
#2399: FILE: drivers/scsi/aic7xxx/aic79xx_osm.c:2874:
+static __inline int

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#2409: FILE: drivers/scsi/aic7xxx/aic79xx_osm.c:2884:
+	return (retval);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000259428.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 102 errors, 129 warnings, 104 checks, 2278 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000259428.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
