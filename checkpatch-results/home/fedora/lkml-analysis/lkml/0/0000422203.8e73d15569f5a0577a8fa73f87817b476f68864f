WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#108: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#109: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#110: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#110: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#111: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#112: 
#	           ChangeSet	1.791   -> 1.792  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#113: 
#	   fs/nfsd/nfs3xdr.c	1.16    -> 1.17   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#114: 
#	      fs/ufs/super.c	1.29    -> 1.30   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#115: 
#	     fs/adfs/super.c	1.20    -> 1.21   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#116: 
#	          fs/libfs.c	1.8     -> 1.9    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#117: 
#	     fs/sysv/inode.c	1.23    -> 1.24   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#118: 
#	fs/xfs/linux/xfs_vfs.h	1.2     -> 1.3    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#119: 
#	    fs/nfsd/nfsxdr.c	1.13    -> 1.14   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#120: 
#	include/linux/fat_cvf.h	1.1     -> 1.2    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#121: 
#	   fs/cramfs/inode.c	1.24    -> 1.25   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#122: 
#	           fs/open.c	1.28    -> 1.29   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#123: 
#	include/asm-ia64/unistd.h	1.15    -> 1.16   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#124: 
#	    fs/smbfs/inode.c	1.33    -> 1.34   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#125: 
#	     fs/ntfs/super.c	1.121   -> 1.122  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#126: 
#	 fs/xfs/xfs_vfsops.c	1.10    -> 1.11   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#127: 
#	  include/linux/fs.h	1.172   -> 1.173  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#128: 
#	arch/i386/kernel/entry.S	1.38    -> 1.39   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#129: 
#	   fs/nfsd/nfs4xdr.c	1.2     -> 1.3    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#130: 
#	include/linux/nfsd/xdr3.h	1.2     -> 1.3    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#131: 
#	     fs/qnx4/inode.c	1.24    -> 1.25   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#132: 
#	      fs/hfs/super.c	1.19    -> 1.20   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#133: 
#	       fs/nfsd/vfs.c	1.44    -> 1.45   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#134: 
#	      fs/bfs/inode.c	1.21    -> 1.22   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#135: 
#	include/linux/efs_fs.h	1.7     -> 1.8    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#136: 
#	          mm/shmem.c	1.87    -> 1.88   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#137: 
#	include/linux/nfsd/nfsd.h	1.11    -> 1.12   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#138: 
#	      fs/fat/inode.c	1.51    -> 1.52   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#139: 
#	          fs/super.c	1.83    -> 1.84   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#140: 
#	 fs/reiserfs/super.c	1.54    -> 1.55   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#141: 
#	      fs/jfs/super.c	1.27    -> 1.28   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#142: 
#	     fs/coda/inode.c	1.22    -> 1.23   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#143: 
#	include/linux/coda_psdev.h	1.4     -> 1.5    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#144: 
#	    fs/ncpfs/inode.c	1.33    -> 1.34   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#145: 
#	    fs/minix/inode.c	1.29    -> 1.30   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#146: 
#	include/asm-ia64/statfs.h	1.1     -> 1.2    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#147: 
#	    fs/cifs/cifsfs.c	1.1     -> 1.2    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#148: 
#	     fs/hpfs/super.c	1.20    -> 1.21   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#149: 
#	include/linux/ext3_fs.h	1.11    -> 1.12   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#150: 
#	   fs/hpfs/hpfs_fn.h	1.10    -> 1.11   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#151: 
#	include/asm-i386/unistd.h	1.17    -> 1.18   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#152: 
#	      fs/udf/super.c	1.27    -> 1.28   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#153: 
#	     fs/ext2/super.c	1.31    -> 1.32   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#154: 
#	    fs/romfs/inode.c	1.25    -> 1.26   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#155: 
#	     fs/affs/super.c	1.28    -> 1.29   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#156: 
#	include/linux/nfsd/xdr.h	1.3     -> 1.4    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#157: 
#	      fs/nfs/inode.c	1.60    -> 1.61   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#158: 
#	include/linux/msdos_fs.h	1.18    -> 1.19   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#159: 
#	      fs/efs/super.c	1.14    -> 1.15   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#160: 
#	    fs/coda/upcall.c	1.11    -> 1.12   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#161: 
#	include/asm-i386/statfs.h	1.1     -> 1.2    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#162: 
#	fs/freevxfs/vxfs_super.c	1.12    -> 1.13   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#163: 
#	     fs/ext3/super.c	1.33    -> 1.34   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#164: 
#	fs/xfs/linux/xfs_super.c	1.8     -> 1.9    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#165: 
#	    fs/isofs/inode.c	1.28    -> 1.29   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#166: 
#	               (new)	        -> 1.1     include/linux/statfs.h

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#167: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#168: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#169: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#170: 
# 02/10/18	peterc@gelato.unsw.edu.au	1.792

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#171: 
# Implement statfs64 and fstatfs64 for IA64 and I386. (Other architectures later, if this

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#172: 
# passes peer review).

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#173: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#174: 
# -- Add a new type struct kstatfs that is variable sized depending on CONFIG_LBD.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#175: 
#    This type is used for all in-kernel communication between filesystems and the system

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#176: 
#    calls.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#177: 
# -- Convert to the user-expected form in the system call code.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#178: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#179: 
# Todo:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#180: 
# 	-- Add support for new field, f_frsize in each filesystem

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#181: 
# 	-- Add support for other architectures.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#182: 
# 	-- (Maybe) move struct statfs to asm-generic

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#183: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#184: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#186: 
--- a/arch/i386/kernel/entry.S	Fri Oct 18 10:07:29 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#292: FILE: fs/coda/upcall.c:587:
+int venus_statfs(struct super_block *sb, struct kstatfs *sfs) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#316: FILE: fs/efs/super.c:280:
+int efs_statfs(struct super_block *s, struct kstatfs *buf) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#328: FILE: fs/ext2/super.c:35:
+static int ext2_statfs (struct super_block * sb, struct kstatfs * buf);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#328: FILE: fs/ext2/super.c:35:
+static int ext2_statfs (struct super_block * sb, struct kstatfs * buf);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#328: FILE: fs/ext2/super.c:35:
+static int ext2_statfs (struct super_block * sb, struct kstatfs * buf);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#337: FILE: fs/ext2/super.c:821:
+static int ext2_statfs (struct super_block * sb, struct kstatfs * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#337: FILE: fs/ext2/super.c:821:
+static int ext2_statfs (struct super_block * sb, struct kstatfs * buf)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#337: FILE: fs/ext2/super.c:821:
+static int ext2_statfs (struct super_block * sb, struct kstatfs * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#349: FILE: fs/ext3/super.c:1758:
+int ext3_statfs (struct super_block * sb, struct kstatfs * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#349: FILE: fs/ext3/super.c:1758:
+int ext3_statfs (struct super_block * sb, struct kstatfs * buf)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#349: FILE: fs/ext3/super.c:1758:
+int ext3_statfs (struct super_block * sb, struct kstatfs * buf)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#423: FILE: fs/hpfs/hpfs_fn.h:309:
+int hpfs_statfs(struct super_block *, struct kstatfs *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kstatfs *' should also have an identifier name
#423: FILE: fs/hpfs/hpfs_fn.h:309:
+int hpfs_statfs(struct super_block *, struct kstatfs *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#447: FILE: fs/isofs/inode.c:77:
+static int isofs_statfs (struct super_block *, struct kstatfs *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#456: FILE: fs/isofs/inode.c:887:
+static int isofs_statfs (struct super_block *sb, struct kstatfs *buf)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#631: FILE: fs/open.c:43:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#641: FILE: fs/open.c:53:
+	if (sizeof(*buf) == sizeof(st))
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#643: FILE: fs/open.c:55:
+	else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#668: FILE: fs/open.c:80:
+	if (sizeof(*buf) == sizeof(st))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#670: FILE: fs/open.c:82:
+	else {

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#697: FILE: fs/open.c:106:
+		error = vfs_statfs_native(nd.dentry->d_inode->i_sb, &tmp);
 		                          ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#700: FILE: fs/open.c:109:
+		path_release(&nd);
 		              ^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#705: FILE: fs/open.c:114:
+asmlinkage long sys_statfs64(const char * path, struct statfs64 * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#705: FILE: fs/open.c:114:
+asmlinkage long sys_statfs64(const char * path, struct statfs64 * buf)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#707: FILE: fs/open.c:116:
+	struct nameidata nd;
 	                 ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#710: FILE: fs/open.c:119:
+	error = user_path_walk(path, &nd);
 	                              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#713: FILE: fs/open.c:122:
+		error = vfs_statfs64(nd.dentry->d_inode->i_sb, &tmp);
 		                     ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#713: FILE: fs/open.c:122:
+		struct statfs64 tmp;
+		error = vfs_statfs64(nd.dentry->d_inode->i_sb, &tmp);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#732: FILE: fs/open.c:148:
+asmlinkage long sys_fstatfs64(unsigned int fd, struct statfs64 * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#734: FILE: fs/open.c:150:
+	struct file * file;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#776: FILE: fs/reiserfs/super.c:67:
+static int reiserfs_statfs (struct super_block * s, struct kstatfs * buf);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#776: FILE: fs/reiserfs/super.c:67:
+static int reiserfs_statfs (struct super_block * s, struct kstatfs * buf);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#776: FILE: fs/reiserfs/super.c:67:
+static int reiserfs_statfs (struct super_block * s, struct kstatfs * buf);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#785: FILE: fs/reiserfs/super.c:1343:
+static int reiserfs_statfs (struct super_block * s, struct kstatfs * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#785: FILE: fs/reiserfs/super.c:1343:
+static int reiserfs_statfs (struct super_block * s, struct kstatfs * buf)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#785: FILE: fs/reiserfs/super.c:1343:
+static int reiserfs_statfs (struct super_block * s, struct kstatfs * buf)

ERROR:CODE_INDENT: code indent should use tabs where possible
#830: FILE: fs/super.c:356:
+        struct kstatfs sbuf;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#830: FILE: fs/super.c:356:
+        struct kstatfs sbuf;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#875: FILE: fs/ufs/super.c:975:
+int ufs_statfs (struct super_block * sb, struct kstatfs * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#875: FILE: fs/ufs/super.c:975:
+int ufs_statfs (struct super_block * sb, struct kstatfs * buf)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#875: FILE: fs/ufs/super.c:975:
+int ufs_statfs (struct super_block * sb, struct kstatfs * buf)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'bhv_desc_t *' should also have an identifier name
#928: FILE: fs/xfs/linux/xfs_vfs.h:85:
+	int	(*vfs_statvfs)(bhv_desc_t *, struct kstatfs *, struct vnode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kstatfs *' should also have an identifier name
#928: FILE: fs/xfs/linux/xfs_vfs.h:85:
+	int	(*vfs_statvfs)(bhv_desc_t *, struct kstatfs *, struct vnode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vnode *' should also have an identifier name
#928: FILE: fs/xfs/linux/xfs_vfs.h:85:
+	int	(*vfs_statvfs)(bhv_desc_t *, struct kstatfs *, struct vnode *);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1003: FILE: include/asm-i386/unistd.h:262:
+#define __NR_fstatfs64^I^I255  $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1030: FILE: include/asm-ia64/statfs.h:25:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1044: FILE: include/asm-ia64/statfs.h:39:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1080: FILE: include/linux/efs_fs.h:57:
+extern int efs_statfs(struct super_block *, struct kstatfs *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#1080: FILE: include/linux/efs_fs.h:57:
+extern int efs_statfs(struct super_block *, struct kstatfs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kstatfs *' should also have an identifier name
#1080: FILE: include/linux/efs_fs.h:57:
+extern int efs_statfs(struct super_block *, struct kstatfs *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1092: FILE: include/linux/ext3_fs.h:758:
+extern int ext3_statfs (struct super_block *, struct kstatfs *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1092: FILE: include/linux/ext3_fs.h:758:
+extern int ext3_statfs (struct super_block *, struct kstatfs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#1092: FILE: include/linux/ext3_fs.h:758:
+extern int ext3_statfs (struct super_block *, struct kstatfs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kstatfs *' should also have an identifier name
#1092: FILE: include/linux/ext3_fs.h:758:
+extern int ext3_statfs (struct super_block *, struct kstatfs *);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1104: FILE: include/linux/fat_cvf.h:27:
+  int (*cvf_statfs) (struct super_block *sb,struct kstatfs *buf, int bufsiz);$

WARNING:SPACING: Unnecessary space before function pointer arguments
#1104: FILE: include/linux/fat_cvf.h:27:
+  int (*cvf_statfs) (struct super_block *sb,struct kstatfs *buf, int bufsiz);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1104: FILE: include/linux/fat_cvf.h:27:
+  int (*cvf_statfs) (struct super_block *sb,struct kstatfs *buf, int bufsiz);
                                            ^

WARNING:SPACING: Unnecessary space before function pointer arguments
#1124: FILE: include/linux/fs.h:817:
+	int (*statfs) (struct super_block *, struct kstatfs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#1124: FILE: include/linux/fs.h:817:
+	int (*statfs) (struct super_block *, struct kstatfs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kstatfs *' should also have an identifier name
#1124: FILE: include/linux/fs.h:817:
+	int (*statfs) (struct super_block *, struct kstatfs *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1133: FILE: include/linux/fs.h:1003:
+extern int vfs_statfs(struct super_block *, struct kstatfs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#1133: FILE: include/linux/fs.h:1003:
+extern int vfs_statfs(struct super_block *, struct kstatfs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kstatfs *' should also have an identifier name
#1133: FILE: include/linux/fs.h:1003:
+extern int vfs_statfs(struct super_block *, struct kstatfs *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1142: FILE: include/linux/fs.h:1298:
+extern int simple_statfs(struct super_block *, struct kstatfs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#1142: FILE: include/linux/fs.h:1298:
+extern int simple_statfs(struct super_block *, struct kstatfs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kstatfs *' should also have an identifier name
#1142: FILE: include/linux/fs.h:1298:
+extern int simple_statfs(struct super_block *, struct kstatfs *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1154: FILE: include/linux/msdos_fs.h:296:
+extern int fat_statfs(struct super_block *sb, struct kstatfs *buf);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1198: FILE: include/linux/statfs.h:1:
+#ifndef _LINUX_STATFS_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1204: FILE: include/linux/statfs.h:7:
+typedef __kernel_fsid_t	fsid_t;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000422203.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 22 errors, 114 warnings, 12 checks, 810 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000422203.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
