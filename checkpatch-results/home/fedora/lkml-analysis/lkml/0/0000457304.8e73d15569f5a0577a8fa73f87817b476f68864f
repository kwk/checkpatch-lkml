ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#84: FILE: arch/alpha/kernel/srm_env.c:30:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#90: FILE: arch/alpha/kernel/srm_env.c:36:
+ * ^I- Fix typo on comment (SRC -> SRM)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#91: FILE: arch/alpha/kernel/srm_env.c:37:
+ * ^I- Call this "Version 0.0.4"$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#94: FILE: arch/alpha/kernel/srm_env.c:40:
+ * ^I- Implement access by variable name and additionally$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#95: FILE: arch/alpha/kernel/srm_env.c:41:
+ * ^I  by number. This is done by creating two subdirectories$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#96: FILE: arch/alpha/kernel/srm_env.c:42:
+ * ^I  where one holds all names (like the old directory$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#97: FILE: arch/alpha/kernel/srm_env.c:43:
+ * ^I  did) and the other holding 256 files named like "0",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#98: FILE: arch/alpha/kernel/srm_env.c:44:
+ * ^I  "1" and so on.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#99: FILE: arch/alpha/kernel/srm_env.c:45:
+ * ^I- Call this "Version 0.0.3"$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#134: FILE: arch/alpha/kernel/srm_env.c:80:
+static srm_env_t	srm_named_entries[] =3D {
                 	                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#142: FILE: arch/alpha/kernel/srm_env.c:99:
 };
+static srm_env_t	srm_numbered_entries[256];

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#147: FILE: arch/alpha/kernel/srm_env.c:100:
+static int
+srm_env_read(char *page, char **start, off_t off, int count, int *eof,
+		void *data) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#149: FILE: arch/alpha/kernel/srm_env.c:102:
+srm_env_read(char *page, char **start, off_t off, int count, int *eof,
+		void *data) {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#161: FILE: arch/alpha/kernel/srm_env.c:127:
 }
+static int

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#161: FILE: arch/alpha/kernel/srm_env.c:127:
+static int
+srm_env_write(struct file *file, const char *buffer, unsigned long count,
+		void *data) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#163: FILE: arch/alpha/kernel/srm_env.c:129:
+srm_env_write(struct file *file, const char *buffer, unsigned long count,
+		void *data) {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#184: FILE: arch/alpha/kernel/srm_env.c:168:
 }
+static void

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#184: FILE: arch/alpha/kernel/srm_env.c:168:
+static void
+srm_env_cleanup(void) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#195: FILE: arch/alpha/kernel/srm_env.c:172:
+	unsigned long	var_num;
+	if(base_dir) {

ERROR:SPACING: space required before the open parenthesis '('
#195: FILE: arch/alpha/kernel/srm_env.c:172:
+	if(base_dir) {

ERROR:SPACING: space required before the open parenthesis '('
#199: FILE: arch/alpha/kernel/srm_env.c:176:
+		if(named_dir) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#200: FILE: arch/alpha/kernel/srm_env.c:177:
+			entry =3D srm_named_entries;
 			      ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#201: FILE: arch/alpha/kernel/srm_env.c:178:
+			while(entry->name !=3D NULL && entry->id !=3D 0) {
 			                  ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#201: FILE: arch/alpha/kernel/srm_env.c:178:
+			while(entry->name !=3D NULL && entry->id !=3D 0) {
 			                                         ^

ERROR:SPACING: space required before the open parenthesis '('
#201: FILE: arch/alpha/kernel/srm_env.c:178:
+			while(entry->name !=3D NULL && entry->id !=3D 0) {

ERROR:SPACING: space required before the open parenthesis '('
#202: FILE: arch/alpha/kernel/srm_env.c:179:
+				if(entry->proc_entry) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#204: FILE: arch/alpha/kernel/srm_env.c:181:
+					remove_proc_entry(entry->name,
+							named_dir);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#205: FILE: arch/alpha/kernel/srm_env.c:182:
+					entry->proc_entry =3D NULL;
 					                  ^

ERROR:SPACING: space required before the open parenthesis '('
#217: FILE: arch/alpha/kernel/srm_env.c:192:
+		if(numbered_dir) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#218: FILE: arch/alpha/kernel/srm_env.c:193:
+			for(var_num =3D 0; var_num <=3D 255; var_num++) {
 			            ^

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#218: FILE: arch/alpha/kernel/srm_env.c:193:
+			for(var_num =3D 0; var_num <=3D 255; var_num++) {
 			                           ^

ERROR:SPACING: space required before the open parenthesis '('
#218: FILE: arch/alpha/kernel/srm_env.c:193:
+			for(var_num =3D 0; var_num <=3D 255; var_num++) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#219: FILE: arch/alpha/kernel/srm_env.c:194:
+				entry =3D	&srm_numbered_entries[var_num];
 				      ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#219: FILE: arch/alpha/kernel/srm_env.c:194:
+				entry =3D	&srm_numbered_entries[var_num];
 				         	^

ERROR:SPACING: space required before the open parenthesis '('
#221: FILE: arch/alpha/kernel/srm_env.c:196:
+				if(entry->proc_entry) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#223: FILE: arch/alpha/kernel/srm_env.c:198:
+					remove_proc_entry(entry->name,
+							numbered_dir);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#224: FILE: arch/alpha/kernel/srm_env.c:199:
+					entry->proc_entry	=3D NULL;
 					                 	^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#225: FILE: arch/alpha/kernel/srm_env.c:200:
+					entry->name		=3D NULL;
 					           		^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#239: FILE: arch/alpha/kernel/srm_env.c:210:
 }
+static int __init

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#239: FILE: arch/alpha/kernel/srm_env.c:210:
+static int __init
+srm_env_init(void) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#265: FILE: arch/alpha/kernel/srm_env.c:226:
+	for(var_num =3D 0; var_num <=3D 255; var_num++)
 	            ^

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#265: FILE: arch/alpha/kernel/srm_env.c:226:
+	for(var_num =3D 0; var_num <=3D 255; var_num++)
 	                           ^

ERROR:SPACING: space required before the open parenthesis '('
#265: FILE: arch/alpha/kernel/srm_env.c:226:
+	for(var_num =3D 0; var_num <=3D 255; var_num++)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#271: FILE: arch/alpha/kernel/srm_env.c:232:
+	base_dir =3D proc_mkdir(BASE_DIR, NULL);
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#272: FILE: arch/alpha/kernel/srm_env.c:233:
+	if(base_dir =3D=3D NULL) {
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#272: FILE: arch/alpha/kernel/srm_env.c:233:
+	if(base_dir =3D=3D NULL) {
 	               ^

ERROR:SPACING: space required before the open parenthesis '('
#272: FILE: arch/alpha/kernel/srm_env.c:233:
+	if(base_dir =3D=3D NULL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#272: FILE: arch/alpha/kernel/srm_env.c:233:
+	if(base_dir =3D=3D NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#273: FILE: arch/alpha/kernel/srm_env.c:234:
+		printk(KERN_ERR "Couldn't create base dir /proc/%s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#274: FILE: arch/alpha/kernel/srm_env.c:235:
+		printk(KERN_ERR "Couldn't create base dir /proc/%s\n",
+				BASE_DIR);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#277: FILE: arch/alpha/kernel/srm_env.c:238:
+	base_dir->owner =3D THIS_MODULE;
 	                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#282: FILE: arch/alpha/kernel/srm_env.c:243:
+	named_dir =3D proc_mkdir(NAMED_DIR, base_dir);
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#283: FILE: arch/alpha/kernel/srm_env.c:244:
+	if(named_dir =3D=3D NULL) {
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#283: FILE: arch/alpha/kernel/srm_env.c:244:
+	if(named_dir =3D=3D NULL) {
 	                ^

ERROR:SPACING: space required before the open parenthesis '('
#283: FILE: arch/alpha/kernel/srm_env.c:244:
+	if(named_dir =3D=3D NULL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#283: FILE: arch/alpha/kernel/srm_env.c:244:
+	if(named_dir =3D=3D NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#284: FILE: arch/alpha/kernel/srm_env.c:245:
+		printk(KERN_ERR "Couldn't create dir /proc/%s/%s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#285: FILE: arch/alpha/kernel/srm_env.c:246:
+		printk(KERN_ERR "Couldn't create dir /proc/%s/%s\n",
+				BASE_DIR, NAMED_DIR);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#288: FILE: arch/alpha/kernel/srm_env.c:249:
+	named_dir->owner =3D THIS_MODULE;
 	                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#293: FILE: arch/alpha/kernel/srm_env.c:254:
+	numbered_dir =3D proc_mkdir(NUMBERED_DIR, base_dir);
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#294: FILE: arch/alpha/kernel/srm_env.c:255:
+	if(numbered_dir =3D=3D NULL) {
 	                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#294: FILE: arch/alpha/kernel/srm_env.c:255:
+	if(numbered_dir =3D=3D NULL) {
 	                   ^

ERROR:SPACING: space required before the open parenthesis '('
#294: FILE: arch/alpha/kernel/srm_env.c:255:
+	if(numbered_dir =3D=3D NULL) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#294: FILE: arch/alpha/kernel/srm_env.c:255:
+	if(numbered_dir =3D=3D NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#295: FILE: arch/alpha/kernel/srm_env.c:256:
+		printk(KERN_ERR "Couldn't create dir /proc/%s/%s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#296: FILE: arch/alpha/kernel/srm_env.c:257:
+		printk(KERN_ERR "Couldn't create dir /proc/%s/%s\n",
+				BASE_DIR, NUMBERED_DIR);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#299: FILE: arch/alpha/kernel/srm_env.c:260:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#300: FILE: arch/alpha/kernel/srm_env.c:261:
+	numbered_dir->owner =3D THIS_MODULE;
 	                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#305: FILE: arch/alpha/kernel/srm_env.c:266:
+	entry =3D srm_named_entries;
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#309: FILE: arch/alpha/kernel/srm_env.c:268:
+		entry->proc_entry =3D create_proc_entry(entry->name,
 		                  ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#315: FILE: arch/alpha/kernel/srm_env.c:273:
+		entry->proc_entry->data		=3D (void *)entry;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#315: FILE: arch/alpha/kernel/srm_env.c:273:
+		entry->proc_entry->data		=3D (void *)entry;
 		                       		^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#316: FILE: arch/alpha/kernel/srm_env.c:274:
+		entry->proc_entry->owner	=3D THIS_MODULE;
 		                        	^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#328: FILE: arch/alpha/kernel/srm_env.c:284:
+	for(var_num =3D 0; var_num <=3D 255; var_num++) {
 	            ^

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#328: FILE: arch/alpha/kernel/srm_env.c:284:
+	for(var_num =3D 0; var_num <=3D 255; var_num++) {
 	                           ^

ERROR:SPACING: space required before the open parenthesis '('
#328: FILE: arch/alpha/kernel/srm_env.c:284:
+	for(var_num =3D 0; var_num <=3D 255; var_num++) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#329: FILE: arch/alpha/kernel/srm_env.c:285:
+		entry =3D &srm_numbered_entries[var_num];
 		      ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#329: FILE: arch/alpha/kernel/srm_env.c:285:
+		entry =3D &srm_numbered_entries[var_num];
 		          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#330: FILE: arch/alpha/kernel/srm_env.c:286:
+		entry->name =3D number[var_num];
 		            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#332: FILE: arch/alpha/kernel/srm_env.c:288:
+		entry->proc_entry =3D create_proc_entry(entry->name,
 		                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#334: FILE: arch/alpha/kernel/srm_env.c:290:
+		if(entry->proc_entry =3D=3D NULL)
 		                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#334: FILE: arch/alpha/kernel/srm_env.c:290:
+		if(entry->proc_entry =3D=3D NULL)
 		                        ^

ERROR:SPACING: space required before the open parenthesis '('
#334: FILE: arch/alpha/kernel/srm_env.c:290:
+		if(entry->proc_entry =3D=3D NULL)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#334: FILE: arch/alpha/kernel/srm_env.c:290:
+		if(entry->proc_entry =3D=3D NULL)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#337: FILE: arch/alpha/kernel/srm_env.c:293:
+		entry->id			=3D var_num;
 		         			^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#338: FILE: arch/alpha/kernel/srm_env.c:294:
+		entry->proc_entry->data		=3D (void *)entry;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#338: FILE: arch/alpha/kernel/srm_env.c:294:
+		entry->proc_entry->data		=3D (void *)entry;
 		                       		^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#339: FILE: arch/alpha/kernel/srm_env.c:295:
+		entry->proc_entry->owner	=3D THIS_MODULE;
 		                        	^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#340: FILE: arch/alpha/kernel/srm_env.c:296:
+		entry->proc_entry->read_proc	=3D srm_env_read;
 		                            	^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#341: FILE: arch/alpha/kernel/srm_env.c:297:
+		entry->proc_entry->write_proc	=3D srm_env_write;
 		                             	^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#354: FILE: arch/alpha/kernel/srm_env.c:313:
 }
+static void __exit

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000457304.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 62 errors, 14 warnings, 15 checks, 306 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000457304.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
