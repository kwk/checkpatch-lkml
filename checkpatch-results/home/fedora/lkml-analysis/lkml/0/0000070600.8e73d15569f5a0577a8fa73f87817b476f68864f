WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#39: 
Signed-Off-By: Pavel Emelianiov <xemul@openvz.org>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#40: 
Signed-Off-By: Kirill Korotaev <dev@openvz.org>

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#99: FILE: ipc/msg.c:75:
+#define msg_lock(ns, id)	((struct msg_queue*)ipc_lock(&msg_ids(ns), id))

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#101: FILE: ipc/msg.c:77:
+#define msg_rmid(ns, id)	((struct msg_queue*)ipc_rmid(&msg_ids(ns),id))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#101: FILE: ipc/msg.c:77:
+#define msg_rmid(ns, id)	((struct msg_queue*)ipc_rmid(&msg_ids(ns),id))
                         	                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'msq' may be better as '(msq)' to avoid precedence issues
#102: FILE: ipc/msg.c:78:
+#define msg_checkid(ns, msq, msgid)	\
+	ipc_checkid(&msg_ids(ns),&msq->q_perm,msgid)

ERROR:SPACING: space required after that ',' (ctx:VxO)
#103: FILE: ipc/msg.c:79:
+	ipc_checkid(&msg_ids(ns),&msq->q_perm,msgid)
 	                        ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#103: FILE: ipc/msg.c:79:
+	ipc_checkid(&msg_ids(ns),&msq->q_perm,msgid)
 	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#103: FILE: ipc/msg.c:79:
+	ipc_checkid(&msg_ids(ns),&msq->q_perm,msgid)
 	                                     ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#107: FILE: ipc/msg.c:83:
+static void freeque (struct ipc_namespace *ns, struct msg_queue *msq, int id);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#108: FILE: ipc/msg.c:84:
+static int newque (struct ipc_namespace *ns, key_t key, int msgflg);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ids)...) over kmalloc(sizeof(struct ipc_ids)...)
#127: FILE: ipc/msg.c:103:
+	ids = kmalloc(sizeof(struct ipc_ids), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ids"
#128: FILE: ipc/msg.c:104:
+	if (ids == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!msq"
#143: FILE: ipc/msg.c:119:
+		if (msq == NULL)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#167: FILE: ipc/msg.c:139:
+static int newque (struct ipc_namespace *ns, key_t key, int msgflg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#198: FILE: ipc/msg.c:233:
+static void freeque (struct ipc_namespace *ns, struct msg_queue *msq, int id)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#223: FILE: ipc/msg.c:265:
+	else if ((id = ipc_findkey(&msg_ids(ns), key)) == -1) { /* key not used */

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space required before the open parenthesis '('
#301: FILE: ipc/msg.c:440:
+		if(cmd == MSG_STAT && msqid >= msg_ids(ns).entries->size)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#317: FILE: ipc/msg.c:453:
+			if (msg_checkid(ns, msq,msqid))
 			                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#335: FILE: ipc/msg.c:498:
+	if (msg_checkid(ns, msq,msqid))
 	                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#353: FILE: ipc/msg.c:547:
+^I^Ifreeque (ns, msq, msqid); $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#353: FILE: ipc/msg.c:547:
+		freeque (ns, msq, msqid); 

CHECK:SPACING: No space is necessary after a cast
#372: FILE: ipc/msg.c:625:
+	if (msgsz > ns->msg_ctlmax || (long) msgsz < 0 || msqid < 0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#388: FILE: ipc/msg.c:645:
+	if (msg_checkid(ns, msq,msqid))
 	                       ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000070600.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 8 warnings, 5 checks, 346 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000070600.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
