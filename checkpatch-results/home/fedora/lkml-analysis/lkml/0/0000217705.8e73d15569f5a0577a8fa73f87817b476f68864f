ERROR:TRAILING_WHITESPACE: trailing whitespace
#117: FILE: Documentation/aoe/aoe.txt:60:
+  root@makki linux# sh Documentation/aoe/status.sh $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 2
#138: FILE: Documentation/aoe/autoload.sh:2:
+# set aoe to autoload by installing the

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 2
#159: FILE: Documentation/aoe/mkdevs.sh:2:
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 2
#196: FILE: Documentation/aoe/mkshelf.sh:2:
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#222: FILE: Documentation/aoe/status.sh:1:
+# collate and present sysfs information about AoE storage

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#246: FILE: MAINTAINERS:333:
+P:	Ed L. Cashin
+M:	ecashin@coraid.com

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'S:' before 'W:'
#248: FILE: MAINTAINERS:335:
+W:	http://www.coraid.com/support/linux
+S:	Supported

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#271: FILE: drivers/block/Kconfig:432:
+config ATA_OVER_ETH
+	tristate "ATA over Ethernet support"
+	depends on NET
+	default m
+	help
+	This driver provides Support for ATA over Ethernet block
+	devices like the Coraid EtherDrive (R) Storage Blade.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#294: FILE: drivers/block/aoe/aoe.h:1:
+/* Copyright (c) 2004 Coraid, Inc.  See COPYING for GPL terms. */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#307: FILE: drivers/block/aoe/aoe.h:14:
+	AOEFL_RSP = (1<<3),
 	              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#308: FILE: drivers/block/aoe/aoe.h:15:
+	AOEFL_ERR = (1<<2),
 	              ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#310: FILE: drivers/block/aoe/aoe.h:17:
+	AOEAFL_EXT = (1<<6),
 	               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#311: FILE: drivers/block/aoe/aoe.h:18:
+	AOEAFL_DEV = (1<<4),
 	               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#312: FILE: drivers/block/aoe/aoe.h:19:
+	AOEAFL_ASYNC = (1<<1),
 	                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#313: FILE: drivers/block/aoe/aoe.h:20:
+	AOEAFL_WRITE = (1<<0),
 	                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#361: FILE: drivers/block/aoe/aoe.h:68:
+	DEVFL_TKILL = (1<<1),	/* flag for timer to know when to kill self */
 	                ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#362: FILE: drivers/block/aoe/aoe.h:69:
+	DEVFL_EXT = (1<<2),	/* device accepts lba48 commands */
 	              ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#363: FILE: drivers/block/aoe/aoe.h:70:
+	DEVFL_CLOSEWAIT = (1<<3), /* device is waiting for all closes to revalidate */
 	                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#364: FILE: drivers/block/aoe/aoe.h:71:
+	DEVFL_WC_UPDATE = (1<<4), /* this device needs to update write cache status */
 	                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#365: FILE: drivers/block/aoe/aoe.h:72:
+	DEVFL_WORKON = (1<<4),
 	                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#413: FILE: drivers/block/aoe/aoe.h:120:
+^Istruct hd_geometry geo; $

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#416: FILE: drivers/block/aoe/aoe.h:123:
+	spinlock_t lock;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#427: FILE: drivers/block/aoe/aoe.h:134:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#430: FILE: drivers/block/aoe/aoe.h:137:
+void aoeblk_gdalloc(void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#435: FILE: drivers/block/aoe/aoe.h:142:
+void aoechr_error(char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#436: FILE: drivers/block/aoe/aoe.h:143:
+void aoechr_hdump(char *, int len);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ushort' should also have an identifier name
#439: FILE: drivers/block/aoe/aoe.h:146:
+void aoecmd_cfg(ushort, unsigned char);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char' should also have an identifier name
#439: FILE: drivers/block/aoe/aoe.h:146:
+void aoecmd_cfg(ushort, unsigned char);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sk_buff *' should also have an identifier name
#440: FILE: drivers/block/aoe/aoe.h:147:
+void aoecmd_ata_rsp(struct sk_buff *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sk_buff *' should also have an identifier name
#441: FILE: drivers/block/aoe/aoe.h:148:
+void aoecmd_cfg_rsp(struct sk_buff *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char *' should also have an identifier name
#445: FILE: drivers/block/aoe/aoe.h:152:
+struct aoedev *aoedev_bymac(unsigned char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ulong' should also have an identifier name
#447: FILE: drivers/block/aoe/aoe.h:154:
+struct aoedev *aoedev_set(ulong, unsigned char *, struct net_device *, ulong);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char *' should also have an identifier name
#447: FILE: drivers/block/aoe/aoe.h:154:
+struct aoedev *aoedev_set(ulong, unsigned char *, struct net_device *, ulong);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct net_device *' should also have an identifier name
#447: FILE: drivers/block/aoe/aoe.h:154:
+struct aoedev *aoedev_set(ulong, unsigned char *, struct net_device *, ulong);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ulong' should also have an identifier name
#447: FILE: drivers/block/aoe/aoe.h:154:
+struct aoedev *aoedev_set(ulong, unsigned char *, struct net_device *, ulong);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct sk_buff *' should also have an identifier name
#452: FILE: drivers/block/aoe/aoe.h:159:
+void aoenet_xmit(struct sk_buff *);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#461: FILE: drivers/block/aoe/aoeblk.c:1:
+/* Copyright (c) 2004 Coraid, Inc.  See COPYING for GPL terms. */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct gendisk *' should also have an identifier name
#480: FILE: drivers/block/aoe/aoeblk.c:20:
+	ssize_t (*show)(struct gendisk *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#480: FILE: drivers/block/aoe/aoeblk.c:20:
+	ssize_t (*show)(struct gendisk *, char *);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#483: FILE: drivers/block/aoe/aoeblk.c:23:
+static ssize_t aoedisk_show_state(struct gendisk * disk, char *page)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#492: FILE: drivers/block/aoe/aoeblk.c:32:
+}
+static ssize_t aoedisk_show_mac(struct gendisk * disk, char *page)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#492: FILE: drivers/block/aoe/aoeblk.c:32:
+static ssize_t aoedisk_show_mac(struct gendisk * disk, char *page)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#498: FILE: drivers/block/aoe/aoeblk.c:38:
+}
+static ssize_t aoedisk_show_netif(struct gendisk * disk, char *page)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#498: FILE: drivers/block/aoe/aoeblk.c:38:
+static ssize_t aoedisk_show_netif(struct gendisk * disk, char *page)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#506: FILE: drivers/block/aoe/aoeblk.c:46:
+	.attr = {.name = "state", .mode = S_IRUGO },

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#509: FILE: drivers/block/aoe/aoeblk.c:49:
+};
+static struct disk_attribute disk_attr_mac = {

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#510: FILE: drivers/block/aoe/aoeblk.c:50:
+	.attr = {.name = "mac", .mode = S_IRUGO },

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#513: FILE: drivers/block/aoe/aoeblk.c:53:
+};
+static struct disk_attribute disk_attr_netif = {

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#514: FILE: drivers/block/aoe/aoeblk.c:54:
+	.attr = {.name = "netif", .mode = S_IRUGO },

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#525: FILE: drivers/block/aoe/aoeblk.c:65:
+}
+void

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#534: FILE: drivers/block/aoe/aoeblk.c:74:
+aoeblk_open(struct inode *inode, struct file *filp)
                                               ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#543: FILE: drivers/block/aoe/aoeblk.c:83:
+aoeblk_release(struct inode *inode, struct file *filp)
                                                  ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buf"
#575: FILE: drivers/block/aoe/aoeblk.c:115:
+	if (buf == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#576: FILE: drivers/block/aoe/aoeblk.c:116:
+		printk(KERN_INFO "aoe: aoeblk_make_request: buf allocation "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoeblk_make_request', this function's name, in a string
#576: FILE: drivers/block/aoe/aoeblk.c:116:
+		printk(KERN_INFO "aoe: aoeblk_make_request: buf allocation "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#577: FILE: drivers/block/aoe/aoeblk.c:117:
+		printk(KERN_INFO "aoe: aoeblk_make_request: buf allocation "
+			"failure\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#593: FILE: drivers/block/aoe/aoeblk.c:133:
+		printk(KERN_INFO "aoe: aoeblk_make_request: device %ld.%ld is not up\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoeblk_make_request', this function's name, in a string
#593: FILE: drivers/block/aoe/aoeblk.c:133:
+		printk(KERN_INFO "aoe: aoeblk_make_request: device %ld.%ld is not up\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#594: FILE: drivers/block/aoe/aoeblk.c:134:
+		printk(KERN_INFO "aoe: aoeblk_make_request: device %ld.%ld is not up\n",
+			d->aoemajor, d->aoeminor);

WARNING:TYPO_SPELLING: 'priviledged' may be misspelled - perhaps 'privileged'?
#614: FILE: drivers/block/aoe/aoeblk.c:154:
+ * permissions set so that only priviledged users can open an aoe
                                 ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#618: FILE: drivers/block/aoe/aoeblk.c:158:
+aoeblk_ioctl(struct inode *inode, struct file *filp, uint cmd, ulong arg)
                                                ^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#627: FILE: drivers/block/aoe/aoeblk.c:167:
+		printk(KERN_ERR "aoe: aoeblk_ioctl: disk not up\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoeblk_ioctl', this function's name, in a string
#627: FILE: drivers/block/aoe/aoeblk.c:167:
+		printk(KERN_ERR "aoe: aoeblk_ioctl: disk not up\n");

CHECK:SPACING: No space is necessary after a cast
#633: FILE: drivers/block/aoe/aoeblk.c:173:
+		if (!copy_to_user((void *) arg, &d->geo, sizeof d->geo))

WARNING:SIZEOF_PARENTHESIS: sizeof d->geo should be sizeof(d->geo)
#633: FILE: drivers/block/aoe/aoeblk.c:173:
+		if (!copy_to_user((void *) arg, &d->geo, sizeof d->geo))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#637: FILE: drivers/block/aoe/aoeblk.c:177:
+	printk(KERN_INFO "aoe: aoeblk_ioctl: unknown ioctl %d\n", cmd);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoeblk_ioctl', this function's name, in a string
#637: FILE: drivers/block/aoe/aoeblk.c:177:
+	printk(KERN_INFO "aoe: aoeblk_ioctl: unknown ioctl %d\n", cmd);

WARNING:CONST_STRUCT: struct block_device_operations should normally be const
#641: FILE: drivers/block/aoe/aoeblk.c:181:
+static struct block_device_operations aoe_bdops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!gd"
#661: FILE: drivers/block/aoe/aoeblk.c:201:
+	if (gd == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#662: FILE: drivers/block/aoe/aoeblk.c:202:
+		printk(KERN_CRIT "aoe: aoeblk_gdalloc: cannot allocate disk "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoeblk_gdalloc', this function's name, in a string
#662: FILE: drivers/block/aoe/aoeblk.c:202:
+		printk(KERN_CRIT "aoe: aoeblk_gdalloc: cannot allocate disk "

WARNING:SPLIT_STRING: quoted string split across lines
#663: FILE: drivers/block/aoe/aoeblk.c:203:
+		printk(KERN_CRIT "aoe: aoeblk_gdalloc: cannot allocate disk "
+			"structure for %ld.%ld\n", d->aoemajor, d->aoeminor);

WARNING:SIZEOF_PARENTHESIS: sizeof gd->disk_name should be sizeof(gd->disk_name)
#675: FILE: drivers/block/aoe/aoeblk.c:215:
+	snprintf(gd->disk_name, sizeof gd->disk_name, "etherd/e%ld.%ld",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#676: FILE: drivers/block/aoe/aoeblk.c:216:
+	snprintf(gd->disk_name, sizeof gd->disk_name, "etherd/e%ld.%ld",
+		d->aoemajor, d->aoeminor);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#687: FILE: drivers/block/aoe/aoeblk.c:227:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#688: FILE: drivers/block/aoe/aoeblk.c:228:
+	printk(KERN_INFO "aoe: %012llx e%lu.%lu v%04x has %llu "

WARNING:SPLIT_STRING: quoted string split across lines
#689: FILE: drivers/block/aoe/aoeblk.c:229:
+	printk(KERN_INFO "aoe: %012llx e%lu.%lu v%04x has %llu "
+		"sectors\n", mac_addr(d->addr), d->aoemajor, d->aoeminor,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#706: FILE: drivers/block/aoe/aoeblk.c:246:
+		printk(KERN_ERR "aoe: aoeblk_init: can't register major\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoeblk_init', this function's name, in a string
#706: FILE: drivers/block/aoe/aoeblk.c:246:
+		printk(KERN_ERR "aoe: aoeblk_init: can't register major\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#716: FILE: drivers/block/aoe/aoechr.c:1:
+/* Copyright (c) 2004 Coraid, Inc.  See COPYING for GPL terms. */

CHECK:CAMELCASE: Avoid CamelCase: <ErrMsg>
#743: FILE: drivers/block/aoe/aoechr.c:28:
+struct ErrMsg {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#772: FILE: drivers/block/aoe/aoechr.c:57:
+		printk(KERN_CRIT

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'interfaces', this function's name, in a string
#774: FILE: drivers/block/aoe/aoechr.c:59:
+		       __FUNCTION__, "too many interfaces");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#774: FILE: drivers/block/aoe/aoechr.c:59:
+		       __FUNCTION__, "too many interfaces");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mp"
#798: FILE: drivers/block/aoe/aoechr.c:83:
+	if (mp == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#799: FILE: drivers/block/aoe/aoechr.c:84:
+		printk(KERN_CRIT "aoe: aoechr_error: allocation failure, len=%ld\n", n);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoechr_error', this function's name, in a string
#799: FILE: drivers/block/aoe/aoechr.c:84:
+		printk(KERN_CRIT "aoe: aoechr_error: allocation failure, len=%ld\n", n);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#799: FILE: drivers/block/aoe/aoechr.c:84:
+	if (mp == NULL) {
+		printk(KERN_CRIT "aoe: aoechr_error: allocation failure, len=%ld\n", n);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#832: FILE: drivers/block/aoe/aoechr.c:117:
+		printk(KERN_INFO

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#832: FILE: drivers/block/aoe/aoechr.c:117:
+	if (!fbuf) {
+		printk(KERN_INFO

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#834: FILE: drivers/block/aoe/aoechr.c:119:
+		       __FUNCTION__);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#837: FILE: drivers/block/aoe/aoechr.c:122:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#843: FILE: drivers/block/aoe/aoechr.c:128:
+		for (e=p+linelen; p<e; p++)
 		      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#843: FILE: drivers/block/aoe/aoechr.c:128:
+		for (e=p+linelen; p<e; p++)
 		        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#843: FILE: drivers/block/aoe/aoechr.c:128:
+		for (e=p+linelen; p<e; p++)
 		                   ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#853: FILE: drivers/block/aoe/aoechr.c:138:
+aoechr_write(struct file *filp, const char *buf, size_t cnt, loff_t *offp)
                           ^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#855: FILE: drivers/block/aoe/aoechr.c:140:
+	char *str = kcalloc(1, cnt+1, GFP_KERNEL);
 	                          ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#859: FILE: drivers/block/aoe/aoechr.c:144:
+		printk(KERN_CRIT "aoe: aoechr_write: cannot allocate memory\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoechr_write', this function's name, in a string
#859: FILE: drivers/block/aoe/aoechr.c:144:
+		printk(KERN_CRIT "aoe: aoechr_write: cannot allocate memory\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#865: FILE: drivers/block/aoe/aoechr.c:150:
+		printk(KERN_INFO "aoe: aoechr_write: copy from user failed\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoechr_write', this function's name, in a string
#865: FILE: drivers/block/aoe/aoechr.c:150:
+		printk(KERN_INFO "aoe: aoechr_write: copy from user failed\n");

CHECK:SPACING: No space is necessary after a cast
#871: FILE: drivers/block/aoe/aoechr.c:156:
+	switch ((unsigned long) filp->private_data) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#873: FILE: drivers/block/aoe/aoechr.c:158:
+		printk(KERN_INFO "aoe: aoechr_write: can't write to that file.\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoechr_write', this function's name, in a string
#873: FILE: drivers/block/aoe/aoechr.c:158:
+		printk(KERN_INFO "aoe: aoechr_write: can't write to that file.\n");

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#890: FILE: drivers/block/aoe/aoechr.c:175:
+aoechr_open(struct inode *inode, struct file *filp)
                                               ^^^^

CHECK:SPACING: No space is necessary after a cast
#895: FILE: drivers/block/aoe/aoechr.c:180:
+	filp->private_data = (void *) (unsigned long) n;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#904: FILE: drivers/block/aoe/aoechr.c:189:
+aoechr_rel(struct inode *inode, struct file *filp)
                                              ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#910: FILE: drivers/block/aoe/aoechr.c:195:
+aoechr_read(struct file *filp, char *buf, size_t cnt, loff_t *off)
                          ^^^^

CHECK:SPACING: No space is necessary after a cast
#918: FILE: drivers/block/aoe/aoechr.c:203:
+	n = (int) filp->private_data;

WARNING:CONST_STRUCT: struct file_operations should normally be const
#967: FILE: drivers/block/aoe/aoechr.c:252:
+struct file_operations aoe_fops = {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#981: FILE: drivers/block/aoe/aoechr.c:266:
+^Iif (n < 0) { $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#982: FILE: drivers/block/aoe/aoechr.c:267:
+		printk(KERN_ERR "aoe: aoechr_init: can't register char device\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoechr_init', this function's name, in a string
#982: FILE: drivers/block/aoe/aoechr.c:267:
+		printk(KERN_ERR "aoe: aoechr_init: can't register char device\n");

WARNING:CONSIDER_COMPLETION: consider using a completion
#985: FILE: drivers/block/aoe/aoechr.c:270:
+	sema_init(&emsgs_sema, 0);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1015: FILE: drivers/block/aoe/aoecmd.c:1:
+/* Copyright (c) 2004 Coraid, Inc.  See COPYING for GPL terms. */

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1039: FILE: drivers/block/aoe/aoecmd.c:25:
+		skb->nh.raw = skb->mac.raw = skb->data;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#1041: FILE: drivers/block/aoe/aoecmd.c:27:
+		skb->protocol = __constant_htons(ETH_P_AOE);

Use of __constant_<foo> form is discouraged for the following functions::

  __constant_cpu_to_be[x]
  __constant_cpu_to_le[x]
  __constant_be[x]_to_cpu
  __constant_le[x]_to_cpu
  __constant_htons
  __constant_ntohs

Using any of these outside of include/uapi/ is not preferred as using the
function without __constant_ is identical when the argument is a
constant.

In big endian systems, the macros like __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to the same expression::

  #define __constant_cpu_to_be32(x) ((__force __be32)(__u32)(x))
  #define __cpu_to_be32(x)          ((__force __be32)(__u32)(x))

In little endian systems, the macros __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to __constant_swab32 and __swab32.  __swab32
has a __builtin_constant_p check::

  #define __swab32(x)				\
    (__builtin_constant_p((__u32)(x)) ?	\
    ___constant_swab32(x) :			\
    __fswab32(x))

So ultimately they have a special case for constants.
Similar is the case with all of the macros in the list.  Thus
using the __constant_... forms are unnecessarily verbose and
not preferred outside of include/uapi.

See: https://lore.kernel.org/lkml/1400106425.12666.6.camel@joe-AO725/

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1044: FILE: drivers/block/aoe/aoecmd.c:30:
+		skb->next = skb->prev = NULL;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1062: FILE: drivers/block/aoe/aoecmd.c:48:
+		printk(KERN_INFO "aoe: skb_prepare: failure to allocate skb\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'skb_prepare', this function's name, in a string
#1062: FILE: drivers/block/aoe/aoecmd.c:48:
+		printk(KERN_INFO "aoe: skb_prepare: failure to allocate skb\n");

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1084: FILE: drivers/block/aoe/aoecmd.c:70:
+	for (; f<e; f++)
 	        ^

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_be16 should be cpu_to_be16
#1107: FILE: drivers/block/aoe/aoecmd.c:93:
+	u16 type = __constant_cpu_to_be16(ETH_P_AOE);

WARNING:SIZEOF_PARENTHESIS: sizeof h->src should be sizeof(h->src)
#1112: FILE: drivers/block/aoe/aoecmd.c:98:
+	memcpy(h->src, d->ifp->dev_addr, sizeof h->src);

WARNING:SIZEOF_PARENTHESIS: sizeof h->dst should be sizeof(h->dst)
#1113: FILE: drivers/block/aoe/aoecmd.c:99:
+	memcpy(h->dst, d->addr, sizeof h->dst);

WARNING:SIZEOF_PARENTHESIS: sizeof type should be sizeof(type)
#1114: FILE: drivers/block/aoe/aoecmd.c:100:
+	memcpy(h->type, &type, sizeof type);

WARNING:SIZEOF_PARENTHESIS: sizeof aoemajor should be sizeof(aoemajor)
#1116: FILE: drivers/block/aoe/aoecmd.c:102:
+	memcpy(h->major, &aoemajor, sizeof aoemajor);

WARNING:SIZEOF_PARENTHESIS: sizeof tag should be sizeof(tag)
#1119: FILE: drivers/block/aoe/aoecmd.c:105:
+	memcpy(h->tag, &tag, sizeof tag);

CHECK:SPACING: No space is necessary after a cast
#1146: FILE: drivers/block/aoe/aoecmd.c:132:
+	h = (struct aoe_hdr *) f->data;

CHECK:SPACING: No space is necessary after a cast
#1147: FILE: drivers/block/aoe/aoecmd.c:133:
+	ah = (struct aoe_atahdr *) (h+1);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1147: FILE: drivers/block/aoe/aoecmd.c:133:
+	ah = (struct aoe_atahdr *) (h+1);
 	                             ^

WARNING:SIZEOF_PARENTHESIS: sizeof *h should be sizeof(*h)
#1148: FILE: drivers/block/aoe/aoecmd.c:134:
+	f->ndata = sizeof *h + sizeof *ah;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!f"
#1211: FILE: drivers/block/aoe/aoecmd.c:197:
+	if (f == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!d->inprocess"
#1213: FILE: drivers/block/aoe/aoecmd.c:199:
+	if (d->inprocess == NULL) {

WARNING:SIZEOF_PARENTHESIS: sizeof buf should be sizeof(buf)
#1236: FILE: drivers/block/aoe/aoecmd.c:222:
+	snprintf(buf, sizeof buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1237: FILE: drivers/block/aoe/aoecmd.c:223:
+	snprintf(buf, sizeof buf,
+		"%15s e%ld.%ld oldtag=%08x@%08lx newtag=%08x\n",

CHECK:SPACING: No space is necessary after a cast
#1242: FILE: drivers/block/aoe/aoecmd.c:228:
+	h = (struct aoe_hdr *) f->data;

WARNING:SIZEOF_PARENTHESIS: sizeof net_tag should be sizeof(net_tag)
#1245: FILE: drivers/block/aoe/aoecmd.c:231:
+	memcpy(h->tag, &net_tag, sizeof net_tag);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1262: FILE: drivers/block/aoe/aoecmd.c:248:
+		n += 1<<16;
 		      ^

CHECK:SPACING: No space is necessary after a cast
#1275: FILE: drivers/block/aoe/aoecmd.c:261:
+	d = (struct aoedev *) vp;

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1290: FILE: drivers/block/aoe/aoecmd.c:276:
+	for (; f<e; f++) {
 	        ^

CHECK:SPACING: No space is necessary after a cast
#1325: FILE: drivers/block/aoe/aoecmd.c:311:
+	n = __le16_to_cpu(*((u16 *) &id[83<<1]));

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1325: FILE: drivers/block/aoe/aoecmd.c:311:
+	n = __le16_to_cpu(*((u16 *) &id[83<<1]));
 	                                  ^

CHECK:SPACING: No space is necessary after a cast
#1328: FILE: drivers/block/aoe/aoecmd.c:314:
+	n |= __le16_to_cpu(*((u16 *) &id[86<<1]));

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1328: FILE: drivers/block/aoe/aoecmd.c:314:
+	n |= __le16_to_cpu(*((u16 *) &id[86<<1]));
 	                                   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1330: FILE: drivers/block/aoe/aoecmd.c:316:
+	if (n & (1<<10)) {	/* bit 10: LBA 48 */
 	          ^

CHECK:SPACING: No space is necessary after a cast
#1334: FILE: drivers/block/aoe/aoecmd.c:320:
+		ssize = __le64_to_cpu(*((u64 *) &id[100<<1]));

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1334: FILE: drivers/block/aoe/aoecmd.c:320:
+		ssize = __le64_to_cpu(*((u64 *) &id[100<<1]));
 		                                       ^

CHECK:SPACING: No space is necessary after a cast
#1345: FILE: drivers/block/aoe/aoecmd.c:331:
+		ssize = __le32_to_cpu(*((u32 *) &id[60<<1]));

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1345: FILE: drivers/block/aoe/aoecmd.c:331:
+		ssize = __le32_to_cpu(*((u32 *) &id[60<<1]));
 		                                      ^

CHECK:SPACING: No space is necessary after a cast
#1348: FILE: drivers/block/aoe/aoecmd.c:334:
+		d->geo.cylinders = __le16_to_cpu(*((u16 *) &id[54<<1]));

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1348: FILE: drivers/block/aoe/aoecmd.c:334:
+		d->geo.cylinders = __le16_to_cpu(*((u16 *) &id[54<<1]));
 		                                                 ^

CHECK:SPACING: No space is necessary after a cast
#1349: FILE: drivers/block/aoe/aoecmd.c:335:
+		d->geo.heads = __le16_to_cpu(*((u16 *) &id[55<<1]));

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1349: FILE: drivers/block/aoe/aoecmd.c:335:
+		d->geo.heads = __le16_to_cpu(*((u16 *) &id[55<<1]));
 		                                             ^

CHECK:SPACING: No space is necessary after a cast
#1350: FILE: drivers/block/aoe/aoecmd.c:336:
+		d->geo.sectors = __le16_to_cpu(*((u16 *) &id[56<<1]));

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1350: FILE: drivers/block/aoe/aoecmd.c:336:
+		d->geo.sectors = __le16_to_cpu(*((u16 *) &id[56<<1]));
 		                                               ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "d->gd"
#1354: FILE: drivers/block/aoe/aoecmd.c:340:
+	if (d->gd != NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1360: FILE: drivers/block/aoe/aoecmd.c:346:
+		printk(KERN_INFO "aoe: ataid_complete: can't schedule work, it's already on!  "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ataid_complete', this function's name, in a string
#1360: FILE: drivers/block/aoe/aoecmd.c:346:
+		printk(KERN_INFO "aoe: ataid_complete: can't schedule work, it's already on!  "

WARNING:SPLIT_STRING: quoted string split across lines
#1361: FILE: drivers/block/aoe/aoecmd.c:347:
+		printk(KERN_INFO "aoe: ataid_complete: can't schedule work, it's already on!  "
+			"(This really shouldn't happen).\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1397: FILE: drivers/block/aoe/aoecmd.c:383:
+^I$

CHECK:SPACING: No space is necessary after a cast
#1398: FILE: drivers/block/aoe/aoecmd.c:384:
+	hin = (struct aoe_hdr *) skb->mac.raw;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!d"
#1400: FILE: drivers/block/aoe/aoecmd.c:386:
+	if (d == NULL) {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoecmd_ata_rsp', this function's name, in a string
#1401: FILE: drivers/block/aoe/aoecmd.c:387:
+		snprintf(ebuf, sizeof ebuf, "aoecmd_ata_rsp: ata response "

WARNING:SIZEOF_PARENTHESIS: sizeof ebuf should be sizeof(ebuf)
#1401: FILE: drivers/block/aoe/aoecmd.c:387:
+		snprintf(ebuf, sizeof ebuf, "aoecmd_ata_rsp: ata response "

WARNING:SPLIT_STRING: quoted string split across lines
#1402: FILE: drivers/block/aoe/aoecmd.c:388:
+		snprintf(ebuf, sizeof ebuf, "aoecmd_ata_rsp: ata response "
+			"for unknown device %d.%d\n",

CHECK:SPACING: No space is necessary after a cast
#1403: FILE: drivers/block/aoe/aoecmd.c:389:
+			 __be16_to_cpu(*((u16 *) hin->major)),

CHECK:SPACING: No space is necessary after a cast
#1411: FILE: drivers/block/aoe/aoecmd.c:397:
+	f = getframe(d, __be32_to_cpu(*((u32 *) hin->tag)));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!f"
#1412: FILE: drivers/block/aoe/aoecmd.c:398:
+	if (f == NULL) {

WARNING:SIZEOF_PARENTHESIS: sizeof ebuf should be sizeof(ebuf)
#1414: FILE: drivers/block/aoe/aoecmd.c:400:
+		snprintf(ebuf, sizeof ebuf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1415: FILE: drivers/block/aoe/aoecmd.c:401:
+		snprintf(ebuf, sizeof ebuf,
+			"%15s e%d.%d    tag=%08x@%08lx\n",

CHECK:SPACING: No space is necessary after a cast
#1417: FILE: drivers/block/aoe/aoecmd.c:403:
+			__be16_to_cpu(*((u16 *) hin->major)),

CHECK:SPACING: No space is necessary after a cast
#1419: FILE: drivers/block/aoe/aoecmd.c:405:
+			__be32_to_cpu(*((u32 *) hin->tag)),

CHECK:SPACING: No space is necessary after a cast
#1427: FILE: drivers/block/aoe/aoecmd.c:413:
+	ahin = (struct aoe_atahdr *) (hin+1);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1427: FILE: drivers/block/aoe/aoecmd.c:413:
+	ahin = (struct aoe_atahdr *) (hin+1);
 	                                 ^

CHECK:SPACING: No space is necessary after a cast
#1428: FILE: drivers/block/aoe/aoecmd.c:414:
+	ahout = (struct aoe_atahdr *) (f->data + sizeof(struct aoe_hdr));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#1432: FILE: drivers/block/aoe/aoecmd.c:418:
+		printk(KERN_CRIT "aoe: aoecmd_ata_rsp: ata error cmd=%2.2Xh "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoecmd_ata_rsp', this function's name, in a string
#1432: FILE: drivers/block/aoe/aoecmd.c:418:
+		printk(KERN_CRIT "aoe: aoecmd_ata_rsp: ata error cmd=%2.2Xh "

WARNING:SPLIT_STRING: quoted string split across lines
#1433: FILE: drivers/block/aoe/aoecmd.c:419:
+		printk(KERN_CRIT "aoe: aoecmd_ata_rsp: ata error cmd=%2.2Xh "
+			"stat=%2.2Xh\n", ahout->cmdstat, ahin->cmdstat);

WARNING:SIZEOF_PARENTHESIS: sizeof *hin should be sizeof(*hin)
#1441: FILE: drivers/block/aoe/aoecmd.c:427:
+			if (skb->len - sizeof *hin - sizeof *ahin < n) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#1442: FILE: drivers/block/aoe/aoecmd.c:428:
+				printk(KERN_CRIT "aoe: aoecmd_ata_rsp: runt "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoecmd_ata_rsp', this function's name, in a string
#1442: FILE: drivers/block/aoe/aoecmd.c:428:
+				printk(KERN_CRIT "aoe: aoecmd_ata_rsp: runt "

WARNING:SPLIT_STRING: quoted string split across lines
#1443: FILE: drivers/block/aoe/aoecmd.c:429:
+				printk(KERN_CRIT "aoe: aoecmd_ata_rsp: runt "
+					"ata data size in read.  skb->len=%d\n",

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1449: FILE: drivers/block/aoe/aoecmd.c:435:
+			memcpy(f->bufaddr, ahin+1, n);
 			                       ^

WARNING:SIZEOF_PARENTHESIS: sizeof *hin should be sizeof(*hin)
#1454: FILE: drivers/block/aoe/aoecmd.c:440:
+			if (skb->len - sizeof *hin - sizeof *ahin < 512) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1455: FILE: drivers/block/aoe/aoecmd.c:441:
+				printk(KERN_INFO "aoe: aoecmd_ata_rsp: runt data size "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoecmd_ata_rsp', this function's name, in a string
#1455: FILE: drivers/block/aoe/aoecmd.c:441:
+				printk(KERN_INFO "aoe: aoecmd_ata_rsp: runt data size "

WARNING:SPLIT_STRING: quoted string split across lines
#1456: FILE: drivers/block/aoe/aoecmd.c:442:
+				printk(KERN_INFO "aoe: aoecmd_ata_rsp: runt data size "
+					"in ataid.  skb->len=%d\n", skb->len);

CHECK:SPACING: No space is necessary after a cast
#1460: FILE: drivers/block/aoe/aoecmd.c:446:
+			ataid_complete(d, (char *) (ahin+1));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1460: FILE: drivers/block/aoe/aoecmd.c:446:
+			ataid_complete(d, (char *) (ahin+1));
 			                                ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1464: FILE: drivers/block/aoe/aoecmd.c:450:
+			printk(KERN_INFO "aoe: aoecmd_ata_rsp: unrecognized "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoecmd_ata_rsp', this function's name, in a string
#1464: FILE: drivers/block/aoe/aoecmd.c:450:
+			printk(KERN_INFO "aoe: aoecmd_ata_rsp: unrecognized "

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1465: FILE: drivers/block/aoe/aoecmd.c:451:
+^I^I^I       "outbound ata command %2.2Xh for %d.%d\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#1465: FILE: drivers/block/aoe/aoecmd.c:451:
+			printk(KERN_INFO "aoe: aoecmd_ata_rsp: unrecognized "
+			       "outbound ata command %2.2Xh for %d.%d\n", 

CHECK:SPACING: No space is necessary after a cast
#1467: FILE: drivers/block/aoe/aoecmd.c:453:
+			       __be16_to_cpu(*((u16 *) hin->major)),

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_be16 should be cpu_to_be16
#1501: FILE: drivers/block/aoe/aoecmd.c:487:
+	u16 aoe_type = __constant_cpu_to_be16(ETH_P_AOE);

WARNING:SIZEOF_PARENTHESIS: sizeof *h should be sizeof(*h)
#1512: FILE: drivers/block/aoe/aoecmd.c:498:
+		skb = new_skb(ifp, sizeof *h + sizeof *ch);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#1513: FILE: drivers/block/aoe/aoecmd.c:499:
+		if (skb == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1514: FILE: drivers/block/aoe/aoecmd.c:500:
+			printk(KERN_INFO "aoe: aoecmd_cfg: skb alloc failure\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoecmd_cfg', this function's name, in a string
#1514: FILE: drivers/block/aoe/aoecmd.c:500:
+			printk(KERN_INFO "aoe: aoecmd_cfg: skb alloc failure\n");

CHECK:SPACING: No space is necessary after a cast
#1517: FILE: drivers/block/aoe/aoecmd.c:503:
+		h = (struct aoe_hdr *) skb->mac.raw;

WARNING:SIZEOF_PARENTHESIS: sizeof *h should be sizeof(*h)
#1518: FILE: drivers/block/aoe/aoecmd.c:504:
+		memset(h, 0, sizeof *h + sizeof *ch);

WARNING:SIZEOF_PARENTHESIS: sizeof h->dst should be sizeof(h->dst)
#1520: FILE: drivers/block/aoe/aoecmd.c:506:
+		memset(h->dst, 0xff, sizeof h->dst);

WARNING:SIZEOF_PARENTHESIS: sizeof h->src should be sizeof(h->src)
#1521: FILE: drivers/block/aoe/aoecmd.c:507:
+		memcpy(h->src, ifp->dev_addr, sizeof h->src);

WARNING:SIZEOF_PARENTHESIS: sizeof aoe_type should be sizeof(aoe_type)
#1522: FILE: drivers/block/aoe/aoecmd.c:508:
+		memcpy(h->type, &aoe_type, sizeof aoe_type);

WARNING:SIZEOF_PARENTHESIS: sizeof net_aoemajor should be sizeof(net_aoemajor)
#1524: FILE: drivers/block/aoe/aoecmd.c:510:
+		memcpy(h->major, &net_aoemajor, sizeof net_aoemajor);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1535: FILE: drivers/block/aoe/aoecmd.c:521:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1535: FILE: drivers/block/aoe/aoecmd.c:521:
+ $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!f"
#1549: FILE: drivers/block/aoe/aoecmd.c:535:
+	if (f == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#1550: FILE: drivers/block/aoe/aoecmd.c:536:
+		printk(KERN_CRIT "aoe: aoecmd_ata_id: can't get a frame.  "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoecmd_ata_id', this function's name, in a string
#1550: FILE: drivers/block/aoe/aoecmd.c:536:
+		printk(KERN_CRIT "aoe: aoecmd_ata_id: can't get a frame.  "

WARNING:SPLIT_STRING: quoted string split across lines
#1551: FILE: drivers/block/aoe/aoecmd.c:537:
+		printk(KERN_CRIT "aoe: aoecmd_ata_id: can't get a frame.  "
+			"This shouldn't happen.\n");

CHECK:SPACING: No space is necessary after a cast
#1556: FILE: drivers/block/aoe/aoecmd.c:542:
+	h = (struct aoe_hdr *) f->data;

CHECK:SPACING: No space is necessary after a cast
#1557: FILE: drivers/block/aoe/aoecmd.c:543:
+	ah = (struct aoe_atahdr *) (h+1);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1557: FILE: drivers/block/aoe/aoecmd.c:543:
+	ah = (struct aoe_atahdr *) (h+1);
 	                             ^

WARNING:SIZEOF_PARENTHESIS: sizeof *h should be sizeof(*h)
#1558: FILE: drivers/block/aoe/aoecmd.c:544:
+	f->ndata = sizeof *h + sizeof *ah;

CHECK:SPACING: No space is necessary after a cast
#1576: FILE: drivers/block/aoe/aoecmd.c:562:
+	d->timer.data = (ulong) d;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1583: FILE: drivers/block/aoe/aoecmd.c:569:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1583: FILE: drivers/block/aoe/aoecmd.c:569:
+ $

CHECK:SPACING: No space is necessary after a cast
#1594: FILE: drivers/block/aoe/aoecmd.c:580:
+	h = (struct aoe_hdr *) skb->mac.raw;

CHECK:SPACING: No space is necessary after a cast
#1595: FILE: drivers/block/aoe/aoecmd.c:581:
+	ch = (struct aoe_cfghdr *) (h+1);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1595: FILE: drivers/block/aoe/aoecmd.c:581:
+	ch = (struct aoe_cfghdr *) (h+1);
 	                             ^

CHECK:SPACING: No space is necessary after a cast
#1601: FILE: drivers/block/aoe/aoecmd.c:587:
+	aoemajor = __be16_to_cpu(*((u16 *) h->major));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#1603: FILE: drivers/block/aoe/aoecmd.c:589:
+		printk(KERN_CRIT "aoe: aoecmd_cfg_rsp: Warning: shelf "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoecmd_cfg_rsp', this function's name, in a string
#1603: FILE: drivers/block/aoe/aoecmd.c:589:
+		printk(KERN_CRIT "aoe: aoecmd_cfg_rsp: Warning: shelf "

WARNING:SPLIT_STRING: quoted string split across lines
#1604: FILE: drivers/block/aoe/aoecmd.c:590:
+		printk(KERN_CRIT "aoe: aoecmd_cfg_rsp: Warning: shelf "
+			"address is all ones.  Check shelf dip switches\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1610: FILE: drivers/block/aoe/aoecmd.c:596:
+		printk(KERN_INFO "aoe: aoecmd_cfg_rsp: sysminor %ld too "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoecmd_cfg_rsp', this function's name, in a string
#1610: FILE: drivers/block/aoe/aoecmd.c:596:
+		printk(KERN_INFO "aoe: aoecmd_cfg_rsp: sysminor %ld too "

WARNING:SPLIT_STRING: quoted string split across lines
#1611: FILE: drivers/block/aoe/aoecmd.c:597:
+		printk(KERN_INFO "aoe: aoecmd_cfg_rsp: sysminor %ld too "
+			"large\n", sysminor);

CHECK:SPACING: No space is necessary after a cast
#1615: FILE: drivers/block/aoe/aoecmd.c:601:
+	bufcnt = __be16_to_cpu(*((u16 *) ch->bufcnt));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!d"
#1620: FILE: drivers/block/aoe/aoecmd.c:606:
+	if (d == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1621: FILE: drivers/block/aoe/aoecmd.c:607:
+		printk(KERN_INFO "aoe: aoecmd_cfg_rsp: device set failure\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoecmd_cfg_rsp', this function's name, in a string
#1621: FILE: drivers/block/aoe/aoecmd.c:607:
+		printk(KERN_INFO "aoe: aoecmd_cfg_rsp: device set failure\n");

CHECK:SPACING: No space is necessary after a cast
#1632: FILE: drivers/block/aoe/aoecmd.c:618:
+	d->fw_ver = __be16_to_cpu(*((u16 *) ch->fwver));

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1646: FILE: drivers/block/aoe/aoedev.c:1:
+/* Copyright (c) 2004 Coraid, Inc.  See COPYING for GPL terms. */

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1669: FILE: drivers/block/aoe/aoedev.c:24:
+	for (d=devlist; d; d=d->next)
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1669: FILE: drivers/block/aoe/aoedev.c:24:
+	for (d=devlist; d; d=d->next)
 	                    ^

WARNING:SIZEOF_PARENTHESIS: sizeof *d should be sizeof(*d)
#1684: FILE: drivers/block/aoe/aoedev.c:39:
+	d = kcalloc(1, sizeof *d, GFP_ATOMIC);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!d"
#1685: FILE: drivers/block/aoe/aoedev.c:40:
+	if (d == NULL)

WARNING:SIZEOF_PARENTHESIS: sizeof *f should be sizeof(*f)
#1687: FILE: drivers/block/aoe/aoedev.c:42:
+	f = kcalloc(nframes, sizeof *f, GFP_ATOMIC);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!f"
#1688: FILE: drivers/block/aoe/aoedev.c:43:
+	if (f == NULL) {

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1696: FILE: drivers/block/aoe/aoedev.c:51:
+	for (; f<e; f++)
 	        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1723: FILE: drivers/block/aoe/aoedev.c:78:
+	for (; f<e; f->tag = FREETAG, f->buf = NULL, f++) {
 	        ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!f->buf"
#1724: FILE: drivers/block/aoe/aoedev.c:79:
+		if (f->tag == FREETAG || f->buf == NULL)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1745: FILE: drivers/block/aoe/aoedev.c:100:
+		struct block_device *bdev = bdget_disk(d->gd, 0);
+		if (bdev) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1764: FILE: drivers/block/aoe/aoedev.c:119:
+	for (d=devlist; d; d=d->next)
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1764: FILE: drivers/block/aoe/aoedev.c:119:
+	for (d=devlist; d; d=d->next)
 	                    ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1766: FILE: drivers/block/aoe/aoedev.c:121:
+		if (d->sysminor == sysminor
+		|| memcmp(d->addr, addr, sizeof d->addr) == 0)

WARNING:SIZEOF_PARENTHESIS: sizeof d->addr should be sizeof(d->addr)
#1766: FILE: drivers/block/aoe/aoedev.c:121:
+		|| memcmp(d->addr, addr, sizeof d->addr) == 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1769: FILE: drivers/block/aoe/aoedev.c:124:
+	if (d == NULL && (d = aoedev_newdev(bufcnt)) == NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!d"
#1769: FILE: drivers/block/aoe/aoedev.c:124:
+	if (d == NULL && (d = aoedev_newdev(bufcnt)) == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1771: FILE: drivers/block/aoe/aoedev.c:126:
+		printk(KERN_INFO "aoe: aoedev_set: aoedev_newdev failure.\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoedev_set', this function's name, in a string
#1771: FILE: drivers/block/aoe/aoedev.c:126:
+		printk(KERN_INFO "aoe: aoedev_set: aoedev_newdev failure.\n");

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1781: FILE: drivers/block/aoe/aoedev.c:136:
+	if (d->sysminor != sysminor
+	|| memcmp(d->addr, addr, sizeof d->addr)

WARNING:SIZEOF_PARENTHESIS: sizeof d->addr should be sizeof(d->addr)
#1781: FILE: drivers/block/aoe/aoedev.c:136:
+	|| memcmp(d->addr, addr, sizeof d->addr)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1782: FILE: drivers/block/aoe/aoedev.c:137:
+	|| memcmp(d->addr, addr, sizeof d->addr)
+	|| (d->flags & DEVFL_UP) == 0) {

WARNING:SIZEOF_PARENTHESIS: sizeof d->addr should be sizeof(d->addr)
#1784: FILE: drivers/block/aoe/aoedev.c:139:
+		memcpy(d->addr, addr, sizeof d->addr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1831: FILE: drivers/block/aoe/aoedev.c:186:
+^Ibuf_pool_cache = kmem_cache_create("aoe_bufs", $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buf_pool_cache"
#1834: FILE: drivers/block/aoe/aoedev.c:189:
+	if (buf_pool_cache == NULL)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1844: FILE: drivers/block/aoe/aoemain.c:1:
+/* Copyright (c) 2004 Coraid, Inc.  See COPYING for GPL terms. */

WARNING:TYPO_SPELLING: 'TRUN' may be misspelled - perhaps 'TURN'?
#1860: FILE: drivers/block/aoe/aoemain.c:17:
+enum { TINIT, TRUN, TKILL };
               ^^^^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1866: FILE: drivers/block/aoe/aoemain.c:23:
+	static volatile ulong die;

WARNING:TYPO_SPELLING: 'TRUN' may be misspelled - perhaps 'TURN'?
#1875: FILE: drivers/block/aoe/aoemain.c:32:
+		t.data = TRUN;
 		         ^^^^

WARNING:TYPO_SPELLING: 'TRUN' may be misspelled - perhaps 'TURN'?
#1878: FILE: drivers/block/aoe/aoemain.c:35:
+	case TRUN:
 	     ^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1914: FILE: drivers/block/aoe/aoemain.c:71:
+	int n, (**p)(void);
+	int (*fns[])(void) = {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1918: FILE: drivers/block/aoe/aoemain.c:75:
+	for (p=fns; *p != NULL; p++) {
 	      ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "p"
#1918: FILE: drivers/block/aoe/aoemain.c:75:
+	for (p=fns; *p != NULL; p++) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1922: FILE: drivers/block/aoe/aoemain.c:79:
+			printk(KERN_INFO "aoe: aoe_init: initialisation failure.\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoe_init', this function's name, in a string
#1922: FILE: drivers/block/aoe/aoemain.c:79:
+			printk(KERN_INFO "aoe: aoe_init: initialisation failure.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1926: FILE: drivers/block/aoe/aoemain.c:83:
+	printk(KERN_INFO

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoe_init', this function's name, in a string
#1927: FILE: drivers/block/aoe/aoemain.c:84:
+	       "aoe: aoe_init: AoE v2.6-%s initialised.\n",

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1941: FILE: drivers/block/aoe/aoenet.c:1:
+/* Copyright (c) 2004 Coraid, Inc.  See COPYING for GPL terms. */

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1955: FILE: drivers/block/aoe/aoenet.c:15:
+static char *aoe_errlist[] =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#2011: FILE: drivers/block/aoe/aoenet.c:71:
+	char *p = (char *) &n;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#2021: FILE: drivers/block/aoe/aoenet.c:81:
+	if (skb_is_nonlinear(skb))
+	if ((skb = skb_share_check(skb, GFP_ATOMIC)))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#2022: FILE: drivers/block/aoe/aoenet.c:82:
+	if ((skb = skb_share_check(skb, GFP_ATOMIC)))
+	if (skb_linearize(skb, GFP_ATOMIC) < 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#2022: FILE: drivers/block/aoe/aoenet.c:82:
+	if ((skb = skb_share_check(skb, GFP_ATOMIC)))

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2037: FILE: drivers/block/aoe/aoenet.c:97:
+		skb->next = skb->prev = NULL;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2042: FILE: drivers/block/aoe/aoenet.c:102:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2046: FILE: drivers/block/aoe/aoenet.c:106:
+ * (2) len doesn't include the header by default.  I want this. $

CHECK:SPACING: No space is necessary after a cast
#2065: FILE: drivers/block/aoe/aoenet.c:125:
+	h = (struct aoe_hdr *) skb->mac.raw;

CHECK:SPACING: No space is necessary after a cast
#2066: FILE: drivers/block/aoe/aoenet.c:126:
+	n = __be32_to_cpu(*((u32 *) h->tag));

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2067: FILE: drivers/block/aoe/aoenet.c:127:
+	if ((h->verfl & AOEFL_RSP) == 0 || (n & 1<<31))
 	                                         ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#2074: FILE: drivers/block/aoe/aoenet.c:134:
+		printk(KERN_CRIT "aoe: aoenet_rcv: error packet from %d.%d; "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoenet_rcv', this function's name, in a string
#2074: FILE: drivers/block/aoe/aoenet.c:134:
+		printk(KERN_CRIT "aoe: aoenet_rcv: error packet from %d.%d; "

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2076: FILE: drivers/block/aoe/aoenet.c:136:
+^I^I       __be16_to_cpu(*((u16 *) h->major)), h->minor, $

CHECK:SPACING: No space is necessary after a cast
#2076: FILE: drivers/block/aoe/aoenet.c:136:
+		       __be16_to_cpu(*((u16 *) h->major)), h->minor, 

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2089: FILE: drivers/block/aoe/aoenet.c:149:
+		printk(KERN_INFO "aoe: aoenet_rcv: unknown cmd %d\n", h->cmd);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'aoenet_rcv', this function's name, in a string
#2089: FILE: drivers/block/aoe/aoenet.c:149:
+		printk(KERN_INFO "aoe: aoenet_rcv: unknown cmd %d\n", h->cmd);

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#2097: FILE: drivers/block/aoe/aoenet.c:157:
+	.type = __constant_htons(ETH_P_AOE),

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000217705.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 30 errors, 158 warnings, 101 checks, 1996 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000217705.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
