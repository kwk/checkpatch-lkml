WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#35: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#73: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:39:
+#define IB_SMP_UNSUP_VERSION	__constant_htons(0x0004)

Use of __constant_<foo> form is discouraged for the following functions::

  __constant_cpu_to_be[x]
  __constant_cpu_to_le[x]
  __constant_be[x]_to_cpu
  __constant_le[x]_to_cpu
  __constant_htons
  __constant_ntohs

Using any of these outside of include/uapi/ is not preferred as using the
function without __constant_ is identical when the argument is a
constant.

In big endian systems, the macros like __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to the same expression::

  #define __constant_cpu_to_be32(x) ((__force __be32)(__u32)(x))
  #define __cpu_to_be32(x)          ((__force __be32)(__u32)(x))

In little endian systems, the macros __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to __constant_swab32 and __swab32.  __swab32
has a __builtin_constant_p check::

  #define __swab32(x)				\
    (__builtin_constant_p((__u32)(x)) ?	\
    ___constant_swab32(x) :			\
    __fswab32(x))

So ultimately they have a special case for constants.
Similar is the case with all of the macros in the list.  Thus
using the __constant_... forms are unnecessarily verbose and
not preferred outside of include/uapi.

See: https://lore.kernel.org/lkml/1400106425.12666.6.camel@joe-AO725/

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#74: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:40:
+#define IB_SMP_UNSUP_METHOD	__constant_htons(0x0008)

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#75: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:41:
+#define IB_SMP_UNSUP_METH_ATTR	__constant_htons(0x000C)

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#76: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:42:
+#define IB_SMP_INVALID_FIELD	__constant_htons(0x001C)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#114: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:80:
+} __attribute__ ((packed));

CHECK:SPACING: No space is necessary after a cast
#155: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:121:
+	u64 *p = (u64 *) smp->data;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#208: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:174:
+} __attribute__ ((packed));

CHECK:SPACING: No space is necessary after a cast
#306: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:272:
+	u16 *p = (u16 *) smp->data;

CHECK:BRACES: braces {} should be used on all arms of this statement
#311: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:277:
+	if (startpx == 0) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#313: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:279:
+		unsigned i, n = ipath_layer_get_npkeys(dev->dd);

CHECK:BRACES: Unbalanced braces around else statement
#319: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:285:
+	} else

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#461: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:427:
+	if (ipath_layer_set_phyerrthreshold(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#466: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:432:
+	if (ipath_layer_set_overrunthreshold(

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#499: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:465:
+		/* FALLTHROUGH */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

CHECK:SPACING: No space is necessary after a cast
#557: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:523:
+	u16 *p = (u16 *) smp->data;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#559: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:525:
+	unsigned i, n = ipath_layer_get_npkeys(dev->dd);

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#571: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:537:
+#define IB_PMA_CLASS_PORT_INFO		__constant_htons(0x0001)

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#572: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:538:
+#define IB_PMA_PORT_SAMPLES_CONTROL	__constant_htons(0x0010)

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#573: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:539:
+#define IB_PMA_PORT_SAMPLES_RESULT	__constant_htons(0x0011)

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#574: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:540:
+#define IB_PMA_PORT_COUNTERS		__constant_htons(0x0012)

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#575: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:541:
+#define IB_PMA_PORT_COUNTERS_EXT	__constant_htons(0x001D)

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#576: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:542:
+#define IB_PMA_PORT_SAMPLES_RESULT_EXT	__constant_htons(0x001E)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#591: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:557:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#611: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:577:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#628: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:594:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#634: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:600:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#641: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:607:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#664: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:630:
+} __attribute__ ((packed));

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#666: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:632:
+#define IB_PMA_SEL_SYMBOL_ERROR			__constant_htons(0x0001)

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#667: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:633:
+#define IB_PMA_SEL_LINK_ERROR_RECOVERY		__constant_htons(0x0002)

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#668: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:634:
+#define IB_PMA_SEL_LINK_DOWNED			__constant_htons(0x0004)

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#669: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:635:
+#define IB_PMA_SEL_PORT_RCV_ERRORS		__constant_htons(0x0008)

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#670: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:636:
+#define IB_PMA_SEL_PORT_RCV_REMPHYS_ERRORS	__constant_htons(0x0010)

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#671: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:637:
+#define IB_PMA_SEL_PORT_XMIT_DISCARDS		__constant_htons(0x0040)

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#672: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:638:
+#define IB_PMA_SEL_PORT_XMIT_DATA		__constant_htons(0x1000)

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#673: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:639:
+#define IB_PMA_SEL_PORT_RCV_DATA		__constant_htons(0x2000)

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#674: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:640:
+#define IB_PMA_SEL_PORT_XMIT_PACKETS		__constant_htons(0x4000)

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#675: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:641:
+#define IB_PMA_SEL_PORT_RCV_PACKETS		__constant_htons(0x8000)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#690: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:656:
+} __attribute__ ((packed));

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#692: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:658:
+#define IB_PMA_SELX_PORT_XMIT_DATA		__constant_htons(0x0001)

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#693: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:659:
+#define IB_PMA_SELX_PORT_RCV_DATA		__constant_htons(0x0002)

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#694: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:660:
+#define IB_PMA_SELX_PORT_XMIT_PACKETS		__constant_htons(0x0004)

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#695: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:661:
+#define IB_PMA_SELX_PORT_RCV_PACKETS		__constant_htons(0x0008)

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#696: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:662:
+#define IB_PMA_SELX_PORT_UNI_XMIT_PACKETS	__constant_htons(0x0010)

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#697: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:663:
+#define IB_PMA_SELX_PORT_UNI_RCV_PACKETS	__constant_htons(0x0020)

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#698: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:664:
+#define IB_PMA_SELX_PORT_MULTI_XMIT_PACKETS	__constant_htons(0x0040)

WARNING:CONSTANT_CONVERSION: __constant_htons should be htons
#699: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:665:
+#define IB_PMA_SELX_PORT_MULTI_RCV_PACKETS	__constant_htons(0x0080)

CHECK:SPACING: No space is necessary after a cast
#721: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:687:
+	return reply((struct ib_smp *) pmp);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'q' may be better as '(q)' to avoid precedence issues
#729: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:695:
+#define COUNTER_MASK(q, n) (q << ((9 - n) * 3))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'n' may be better as '(n)' to avoid precedence issues
#729: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:695:
+#define COUNTER_MASK(q, n) (q << ((9 - n) * 3))

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_be32 should be cpu_to_be32
#731: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:697:
+	__constant_cpu_to_be32(COUNTER_MASK(1, 0) | \

CHECK:SPACING: No space is necessary after a cast
#775: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:741:
+	return reply((struct ib_smp *) pmp);

CHECK:SPACING: No space is necessary after a cast
#790: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:756:
+		return reply((struct ib_smp *) pmp);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#853: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:819:
+		p->counter[i] = cpu_to_be32(

CHECK:SPACING: No space is necessary after a cast
#856: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:822:
+	return reply((struct ib_smp *) pmp);

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_be32 should be cpu_to_be32
#871: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:837:
+	p->extended_width = __constant_cpu_to_be32(0x80000000);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#873: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:839:
+		p->counter[i] = cpu_to_be64(

CHECK:SPACING: No space is necessary after a cast
#876: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:842:
+	return reply((struct ib_smp *) pmp);

CHECK:SPACING: No space is necessary after a cast
#929: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:895:
+			cpu_to_be16((u16) cntrs.port_rcv_errors);

CHECK:SPACING: No space is necessary after a cast
#957: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:923:
+			cpu_to_be32((u32) cntrs.port_rcv_packets);

CHECK:SPACING: No space is necessary after a cast
#959: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:925:
+	return reply((struct ib_smp *) pmp);

CHECK:SPACING: No space is necessary after a cast
#996: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:962:
+	return reply((struct ib_smp *) pmp);

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#1101: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:1067:
+	if (dev->mkey_lease_timeout && jiffies >= dev->mkey_lease_timeout) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1111: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:1077:
+	if ((mad_flags & IB_MAD_IGNORE_MKEY) == 0 && dev->mkey != 0 &&
[...]
+	} else if (dev->mkey_lease_timeout)
[...]

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1152: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:1118:
+			/* FALLTHROUGH */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1175: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:1141:
+			/* FALLTHROUGH */

CHECK:SPACING: No space is necessary after a cast
#1204: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:1170:
+		return reply((struct ib_smp *) pmp);

CHECK:SPACING: No space is necessary after a cast
#1234: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:1200:
+			return reply((struct ib_smp *) pmp);

CHECK:SPACING: No space is necessary after a cast
#1253: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:1219:
+			return reply((struct ib_smp *) pmp);

CHECK:SPACING: No space is necessary after a cast
#1266: FILE: drivers/infiniband/hw/ipath/ipath_mad.c:1232:
+		return reply((struct ib_smp *) pmp);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1334: FILE: drivers/infiniband/hw/ipath/ipath_qp.c:1:
+/*

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1372: FILE: drivers/infiniband/hw/ipath/ipath_qp.c:39:
+#define BITS_PER_PAGE		(PAGE_SIZE*BITS_PER_BYTE)
                      		          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1373: FILE: drivers/infiniband/hw/ipath/ipath_qp.c:40:
+#define BITS_PER_PAGE_MASK	(BITS_PER_PAGE-1)
                           	              ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'map' - possible side-effects?
#1374: FILE: drivers/infiniband/hw/ipath/ipath_qp.c:41:
+#define mk_qpn(qpt, map, off)	(((map) - (qpt)->map) * BITS_PER_PAGE + \
+				 (off))

CHECK:BRACES: braces {} should be used on all arms of this statement
#1524: FILE: drivers/infiniband/hw/ipath/ipath_qp.c:191:
+	if (type == IB_QPT_SMI)
[...]
+	else if (type == IB_QPT_GSI)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1528: FILE: drivers/infiniband/hw/ipath/ipath_qp.c:195:
+	else {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1719: FILE: drivers/infiniband/hw/ipath/ipath_qp.c:386:
+
+	}

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1754: FILE: drivers/infiniband/hw/ipath/ipath_qp.c:421:
+		qp->s_retry = qp->s_retry_cnt = attr->retry_cnt;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:CODE_INDENT: code indent should use tabs where possible
#1798: FILE: drivers/infiniband/hw/ipath/ipath_qp.c:465:
+                   struct ib_qp_init_attr *init_attr)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1798: FILE: drivers/infiniband/hw/ipath/ipath_qp.c:465:
+                   struct ib_qp_init_attr *init_attr)$

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1891: FILE: drivers/infiniband/hw/ipath/ipath_qp.c:558:
+				break;
+			else

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!swq"
#1930: FILE: drivers/infiniband/hw/ipath/ipath_qp.c:597:
+		if (swq == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1932: FILE: drivers/infiniband/hw/ipath/ipath_qp.c:599:
+		/* FALLTHROUGH */

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1991: FILE: drivers/infiniband/hw/ipath/ipath_qp.c:658:
+		return ERR_PTR(-ENOSYS);

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#2063: FILE: drivers/infiniband/hw/ipath/ipath_qp.c:730:
+	idev->qp_table.table = kzalloc(size * sizeof(*idev->qp_table.table),
+				       GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!idev->qp_table.table"
#2065: FILE: drivers/infiniband/hw/ipath/ipath_qp.c:732:
+	if (idev->qp_table.table == NULL)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2115: FILE: drivers/infiniband/hw/ipath/ipath_qp.c:782:
+	qp->s_cur = qp->s_tail = qp->s_head;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2165: FILE: drivers/infiniband/hw/ipath/ipath_qp.c:832:
+	qp->s_cur = qp->s_tail = qp->s_head;

CHECK:SPACING: No space is necessary after a cast
#2195: FILE: drivers/infiniband/hw/ipath/ipath_qp.c:862:
+		qp->s_lsn = (u32) -1;

CHECK:SPACING: No space is necessary after a cast
#2196: FILE: drivers/infiniband/hw/ipath/ipath_qp.c:863:
+	} else if (qp->s_lsn != (u32) -1) {

CHECK:SPACING: No space is necessary after a cast
#2205: FILE: drivers/infiniband/hw/ipath/ipath_qp.c:872:
+	    (qp->s_lsn == (u32) -1 ||

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2214: FILE: drivers/infiniband/hw/ipath/ipath_ruc.c:1:
+/*

CHECK:BRACES: braces {} should be used on all arms of this statement
#2300: FILE: drivers/infiniband/hw/ipath/ipath_ruc.c:87:
+	if (list_empty(&dev->rnrwait))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2302: FILE: drivers/infiniband/hw/ipath/ipath_ruc.c:89:
+	else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#2369: FILE: drivers/infiniband/hw/ipath/ipath_ruc.c:156:
+	if (srq->ibsrq.event_handler) {
[...]
+	} else
[...]

CHECK:BRACES: braces {} should be used on all arms of this statement
#2377: FILE: drivers/infiniband/hw/ipath/ipath_ruc.c:164:
+		if (n < srq->limit) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2385: FILE: drivers/infiniband/hw/ipath/ipath_ruc.c:172:
+		} else

CHECK:BRACES: Unbalanced braces around else statement
#2387: FILE: drivers/infiniband/hw/ipath/ipath_ruc.c:174:
+	} else

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#2452: FILE: drivers/infiniband/hw/ipath/ipath_ruc.c:239:
+		/* FALLTHROUGH */

WARNING:INDENTED_LABEL: labels should not be indented
#2456: FILE: drivers/infiniband/hw/ipath/ipath_ruc.c:243:
+		rnr_nak:

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#2483: FILE: drivers/infiniband/hw/ipath/ipath_ruc.c:270:
+		/* FALLTHROUGH */

WARNING:INDENTED_LABEL: labels should not be indented
#2491: FILE: drivers/infiniband/hw/ipath/ipath_ruc.c:278:
+		acc_err:

WARNING:INDENTED_LABEL: labels should not be indented
#2493: FILE: drivers/infiniband/hw/ipath/ipath_ruc.c:280:
+		err:

CHECK:SPACING: No space is necessary after a cast
#2534: FILE: drivers/infiniband/hw/ipath/ipath_ruc.c:321:
+		qp->r_atomic_data = *(u64 *) qp->r_sge.sge.vaddr;

CHECK:SPACING: No space is necessary after a cast
#2536: FILE: drivers/infiniband/hw/ipath/ipath_ruc.c:323:
+			*(u64 *) qp->r_sge.sge.vaddr =

CHECK:SPACING: No space is necessary after a cast
#2539: FILE: drivers/infiniband/hw/ipath/ipath_ruc.c:326:
+			*(u64 *) qp->r_sge.sge.vaddr = sdata;

CHECK:SPACING: No space is necessary after a cast
#2541: FILE: drivers/infiniband/hw/ipath/ipath_ruc.c:328:
+		*(u64 *) sqp->s_sge.sge.vaddr = qp->r_atomic_data;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2554: FILE: drivers/infiniband/hw/ipath/ipath_ruc.c:341:
+		BUG_ON(len == 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sge->mr"
#2562: FILE: drivers/infiniband/hw/ipath/ipath_ruc.c:349:
+		} else if (sge->length == 0 && sge->mr != NULL) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#2679: FILE: drivers/infiniband/hw/ipath/ipath_ruc.c:466:
+	if (qp->ibqp.qp_type == IB_QPT_UC) {
[...]
+	} else if ((unsigned) wr->opcode > IB_WR_ATOMIC_FETCH_AND_ADD)
[...]
+	else if (wr->opcode >= IB_WR_ATOMIC_CMP_AND_SWP &&
[...]

CHECK:SPACING: No space is necessary after a cast
#2680: FILE: drivers/infiniband/hw/ipath/ipath_ruc.c:467:
+		if ((unsigned) wr->opcode >= IB_WR_RDMA_READ)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2680: FILE: drivers/infiniband/hw/ipath/ipath_ruc.c:467:
+		if ((unsigned) wr->opcode >= IB_WR_RDMA_READ)

CHECK:SPACING: No space is necessary after a cast
#2682: FILE: drivers/infiniband/hw/ipath/ipath_ruc.c:469:
+	} else if ((unsigned) wr->opcode > IB_WR_ATOMIC_FETCH_AND_ADD)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2682: FILE: drivers/infiniband/hw/ipath/ipath_ruc.c:469:
+	} else if ((unsigned) wr->opcode > IB_WR_ATOMIC_FETCH_AND_ADD)

CHECK:SPACING: No space is necessary after a cast
#2738: FILE: drivers/infiniband/hw/ipath/ipath_ruc.c:525:
+			ipath_do_uc_send((unsigned long) qp);

CHECK:SPACING: No space is necessary after a cast
#2740: FILE: drivers/infiniband/hw/ipath/ipath_ruc.c:527:
+			ipath_do_rc_send((unsigned long) qp);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000096247.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 61 warnings, 55 checks, 2701 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000096247.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
