CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*info)...) over kzalloc(sizeof(struct async_struct)...)
#57: FILE: drivers/char/amiserial.c:1759:
+	info = kzalloc(sizeof(struct async_struct), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#76: FILE: drivers/char/consolemap.c:196:
+		q = p->inverse_translations[i] = kzalloc(MAX_GLYPH, GFP_KERNEL);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#106: FILE: drivers/char/epca.c:1642:
+		ch->tmp_buf = kzalloc(ch->txbufsize,GFP_KERNEL);
 		                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*info)...) over kzalloc(sizeof(struct esp_struct)...)
#128: FILE: drivers/char/esp.c:2498:
+	info = kzalloc(sizeof(struct esp_struct), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*info)...) over kzalloc(sizeof(struct esp_struct)...)
#145: FILE: drivers/char/esp.c:2565:
+		info = kzalloc(sizeof(struct esp_struct), GFP_KERNEL);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#204: FILE: drivers/char/keyboard.c:1191:
+	if (!(handle = kzalloc(sizeof(struct input_handle), GFP_KERNEL)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*handle)...) over kzalloc(sizeof(struct input_handle)...)
#204: FILE: drivers/char/keyboard.c:1191:
+	if (!(handle = kzalloc(sizeof(struct input_handle), GFP_KERNEL)))

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*state)...) over kzalloc(sizeof(struct timer_rand_state)...)
#257: FILE: drivers/char/random.c:915:
+	state = kzalloc(sizeof(struct timer_rand_state), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*state)...) over kzalloc(sizeof(struct timer_rand_state)...)
#268: FILE: drivers/char/random.c:929:
+	state = kzalloc(sizeof(struct timer_rand_state), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#283: FILE: drivers/char/rocket.c:656:
+	info = kzalloc(sizeof (struct r_port), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*info)...) over kzalloc(sizeof (struct r_port)...)
#283: FILE: drivers/char/rocket.c:656:
+	info = kzalloc(sizeof (struct r_port), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#301: FILE: drivers/char/snsc.c:80:
+	sd = kzalloc(sizeof (struct subch_data_s), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*sd)...) over kzalloc(sizeof (struct subch_data_s)...)
#301: FILE: drivers/char/snsc.c:80:
+	sd = kzalloc(sizeof (struct subch_data_s), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#318: FILE: drivers/char/snsc.c:396:
+			scd = kzalloc(sizeof (struct sysctl_data_s),

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*scd)...) over kzalloc(sizeof (struct sysctl_data_s)...)
#318: FILE: drivers/char/snsc.c:396:
+			scd = kzalloc(sizeof (struct sysctl_data_s),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#339: FILE: drivers/char/snsc_event.c:274:
+	event_sd = kzalloc(sizeof (struct subch_data_s), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*event_sd)...) over kzalloc(sizeof (struct subch_data_s)...)
#339: FILE: drivers/char/snsc_event.c:274:
+	event_sd = kzalloc(sizeof (struct subch_data_s), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*info)...) over kzalloc(sizeof(struct mgsl_struct)...)
#361: FILE: drivers/char/synclink.c:4367:
+	info = kzalloc(sizeof(struct mgsl_struct), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*tty)...) over kzalloc(sizeof(struct tty_struct)...)
#401: FILE: drivers/char/tty_io.c:163:
+	tty = kzalloc(sizeof(struct tty_struct), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ltp)...) over kzalloc(sizeof(struct termios)...)
#411: FILE: drivers/char/tty_io.c:1277:
+		ltp = kzalloc(sizeof(struct termios), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*o_ltp)...) over kzalloc(sizeof(struct termios)...)
#424: FILE: drivers/char/tty_io.c:1308:
+			o_ltp = kzalloc(sizeof(struct termios), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*driver)...) over kzalloc(sizeof(struct tty_driver)...)
#436: FILE: drivers/char/tty_io.c:2746:
+	driver = kzalloc(sizeof(struct tty_driver), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*vc)...) over kzalloc(sizeof(struct vc_data)...)
#463: FILE: drivers/char/vt.c:712:
+	    vc = kzalloc(sizeof(struct vc_data), GFP_KERNEL);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000136610.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 4 warnings, 17 checks, 324 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000136610.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
