WARNING:TYPO_SPELLING: 'guarentee' may be misspelled - perhaps 'guarantee'?
#28: 
> amount of bounce buffers to guarentee progress while submitting io.  The
                              ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
> Some of these cleanups are 2.5 fodder, but we really need something in 2.4

CHECK:BRACES: braces {} should be used on all arms of this statement
#81: FILE: mm/highmem.c:228:
+	if (nr_emergency_pages >= POOL_SIZE)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#83: FILE: mm/highmem.c:230:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#91: FILE: mm/highmem.c:238:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#115: FILE: mm/highmem.c:259:
+		struct page * page = alloc_page(GFP_ATOMIC);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#116: FILE: mm/highmem.c:260:
+		struct page * page = alloc_page(GFP_ATOMIC);
+		if (!page) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#117: FILE: mm/highmem.c:261:
+			printk("couldn't refill highmem emergency pages");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#124: FILE: mm/highmem.c:268:
+		struct buffer_head * bh = kmem_cache_alloc(bh_cachep, SLAB_ATOMIC);

WARNING:LINE_SPACING: Missing a blank line after declarations
#125: FILE: mm/highmem.c:269:
+		struct buffer_head * bh = kmem_cache_alloc(bh_cachep, SLAB_ATOMIC);
+		if (!bh) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#126: FILE: mm/highmem.c:270:
+			printk("couldn't refill highmem emergency bhs");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#133: FILE: mm/highmem.c:277:
+	printk("allocated %d pages and %d bhs reserved for the highmem bounces\n",

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#139: FILE: mm/highmem.c:283:
+__initcall(init_emergency_pool);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#148: FILE: mm/highmem.c:299:
+struct page *alloc_bounce_page (void)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'doesnt' may be misspelled - perhaps 'doesn't'?
#158: FILE: mm/highmem.c:309:
+	 * No luck. First, kick the VM so it doesnt idle around while
 	                                     ^^^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#186: FILE: mm/highmem.c:337:
+struct buffer_head *alloc_bounce_bh (void)

WARNING:TYPO_SPELLING: 'doesnt' may be misspelled - perhaps 'doesn't'?
#196: FILE: mm/highmem.c:347:
+	 * No luck. First, kick the VM so it doesnt idle around while
 	                                     ^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#297: FILE: fs/buffer.c:1035:
+    1 -> sync flush (wait for I/O completion) */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000532388.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 13 warnings, 2 checks, 259 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000532388.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
