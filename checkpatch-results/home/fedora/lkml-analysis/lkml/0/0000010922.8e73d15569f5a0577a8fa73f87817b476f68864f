WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#54: 
a seperate board-specific patch.  (And an IRQ handler, handing off
  ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#89: FILE: drivers/rtc/rtc-rs5c372.c:24:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#123: FILE: drivers/rtc/rtc-rs5c372.c:51:
+#	define RS5C_CTRL1_AALE		(1 << 7)	/* or WALE */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#124: FILE: drivers/rtc/rtc-rs5c372.c:52:
+#	define RS5C_CTRL1_BALE		(1 << 6)	/* or DALE */

CHECK:BIT_MACRO: Prefer using the BIT macro
#125: FILE: drivers/rtc/rtc-rs5c372.c:53:
+#	define RV5C387_CTRL1_24		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#126: FILE: drivers/rtc/rtc-rs5c372.c:54:
+#	define RS5C372A_CTRL1_SL1	(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#131: FILE: drivers/rtc/rtc-rs5c372.c:59:
+#	define RS5C372_CTRL2_24		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#132: FILE: drivers/rtc/rtc-rs5c372.c:60:
+#	define RS5C_CTRL2_XSTP		(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#133: FILE: drivers/rtc/rtc-rs5c372.c:61:
+#	define RS5C_CTRL2_CTFG		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#134: FILE: drivers/rtc/rtc-rs5c372.c:62:
+#	define RS5C_CTRL2_AAFG		(1 << 1)	/* or WAFG */

CHECK:BIT_MACRO: Prefer using the BIT macro
#135: FILE: drivers/rtc/rtc-rs5c372.c:63:
+#	define RS5C_CTRL2_BAFG		(1 << 0)	/* or DAFG */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#137: FILE: drivers/rtc/rtc-rs5c372.c:65:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#141: FILE: drivers/rtc/rtc-rs5c372.c:69:
+
+

WARNING:SIZEOF_PARENTHESIS: sizeof rs5c->regs should be sizeof(rs5c->regs)
#186: FILE: drivers/rtc/rtc-rs5c372.c:101:
+		{ client->addr, I2C_M_RD, sizeof rs5c->regs, rs5c->regs },

WARNING:SPLIT_STRING: quoted string split across lines
#214: FILE: drivers/rtc/rtc-rs5c372.c:115:
+		"%02x %02x %02x (%02x) %02x %02x %02x (%02x), "
+		"%02x %02x %02x, %02x %02x %02x; %02x %02x\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#223: FILE: drivers/rtc/rtc-rs5c372.c:124:
+static unsigned rs5c_reg2hr(struct rs5c372 *rs5c, unsigned reg)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#223: FILE: drivers/rtc/rtc-rs5c372.c:124:
+static unsigned rs5c_reg2hr(struct rs5c372 *rs5c, unsigned reg)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#225: FILE: drivers/rtc/rtc-rs5c372.c:126:
+	unsigned	hour;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#238: FILE: drivers/rtc/rtc-rs5c372.c:139:
+static unsigned rs5c_hr2reg(struct rs5c372 *rs5c, unsigned hour)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#238: FILE: drivers/rtc/rtc-rs5c372.c:139:
+static unsigned rs5c_hr2reg(struct rs5c372 *rs5c, unsigned hour)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#297: FILE: drivers/rtc/rtc-rs5c372.c:191:
+		__FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#320: FILE: drivers/rtc/rtc-rs5c372.c:221:
+		dev_dbg(&client->dev, "%s: raw trim=%x\n", __FUNCTION__, tmp);

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#330: FILE: drivers/rtc/rtc-rs5c372.c:238:
+#if defined(CONFIG_RTC_INTF_DEV) || defined(CONFIG_RTC_INTF_DEV_MODULE)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#346: FILE: drivers/rtc/rtc-rs5c372.c:254:
+		if (rs5c->type == rtc_rs5c372a
+				&& (buf[1] & RS5C372A_CTRL1_SL1))

CHECK:BRACES: braces {} should be used on all arms of this statement
#380: FILE: drivers/rtc/rtc-rs5c372.c:288:
+	if ((i2c_master_send(client, buf, 2)) != 2) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#381: FILE: drivers/rtc/rtc-rs5c372.c:289:
+		printk(KERN_WARNING "%s: can't update alarm\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#382: FILE: drivers/rtc/rtc-rs5c372.c:290:
+		printk(KERN_WARNING "%s: can't update alarm\n",
+			rs5c->rtc->name);

CHECK:BRACES: Unbalanced braces around else statement
#384: FILE: drivers/rtc/rtc-rs5c372.c:292:
+	} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#393: FILE: drivers/rtc/rtc-rs5c372.c:301:
+
+

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#440: FILE: drivers/rtc/rtc-rs5c372.c:348:
+	if (t->time.tm_mday != -1
+			|| t->time.tm_mon != -1

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#441: FILE: drivers/rtc/rtc-rs5c372.c:349:
+			|| t->time.tm_mon != -1
+			|| t->time.tm_year != -1)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#473: FILE: drivers/rtc/rtc-rs5c372.c:381:
+			printk(KERN_WARNING "%s: can't enable alarm\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#474: FILE: drivers/rtc/rtc-rs5c372.c:382:
+			printk(KERN_WARNING "%s: can't enable alarm\n",
+				rs5c->rtc->name);

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#481: FILE: drivers/rtc/rtc-rs5c372.c:389:
+#if defined(CONFIG_RTC_INTF_PROC) || defined(CONFIG_RTC_INTF_PROC_MODULE)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#492: FILE: drivers/rtc/rtc-rs5c372.c:398:
+		seq_printf(seq, "crystal\t\t: %d.%03d KHz\n",
+				osc / 1000, osc % 1000);

CHECK:BRACES: braces {} should be used on all arms of this statement
#493: FILE: drivers/rtc/rtc-rs5c372.c:399:
+		if (trim & 0x3e) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#502: FILE: drivers/rtc/rtc-rs5c372.c:408:
+		} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#641: FILE: drivers/rtc/rtc-rs5c372.c:571:
+	dev_info(&client->dev, "%s found, driver version " DRV_VERSION "\n",
+			({ char *s; switch (rs5c372->type) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#642: FILE: drivers/rtc/rtc-rs5c372.c:572:
+			case rtc_rs5c372a:	s = "rs5c372a"; break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#643: FILE: drivers/rtc/rtc-rs5c372.c:573:
+			case rtc_rs5c372b:	s = "rs5c372b"; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#644: FILE: drivers/rtc/rtc-rs5c372.c:574:
+			case rtc_rv5c386:	s = "rv5c386"; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#645: FILE: drivers/rtc/rtc-rs5c372.c:575:
+			case rtc_rv5c387:	s = "rv5c387"; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#646: FILE: drivers/rtc/rtc-rs5c372.c:576:
+			default:		s = "chip"; break;

ERROR:SPACING: space required after that ';' (ctx:VxV)
#647: FILE: drivers/rtc/rtc-rs5c372.c:577:
+			}; s;})
 			    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000010922.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 14 warnings, 24 checks, 613 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000010922.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
