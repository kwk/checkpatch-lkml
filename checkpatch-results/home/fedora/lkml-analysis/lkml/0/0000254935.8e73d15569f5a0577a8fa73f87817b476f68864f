WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
> > atomic_inc_return() is not defined for arm,arm26,i386,x86_64 and um archtectures.

WARNING:TYPO_SPELLING: 'archtectures' may be misspelled - perhaps 'architectures'?
#39: 
> > atomic_inc_return() is not defined for arm,arm26,i386,x86_64 and um archtectures.
                                                                        ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#87: FILE: include/asm-arm/atomic.h:198:
+#define atomic_inc_return(v)    (atomic_add_return(1, v))=0A=
                                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#87: FILE: include/asm-arm/atomic.h:198:
+#define atomic_inc_return(v)    (atomic_add_return(1, v))=0A=
                                                             ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#87: FILE: include/asm-arm/atomic.h:198:
+#define atomic_inc_return(v)    (atomic_add_return(1, v))=0A=

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#88: FILE: include/asm-arm/atomic.h:199:
+#define atomic_dec_return(v)    (atomic_sub_return(1, v))=0A=
                                                          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#88: FILE: include/asm-arm/atomic.h:199:
+#define atomic_dec_return(v)    (atomic_sub_return(1, v))=0A=
                                                             ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#88: FILE: include/asm-arm/atomic.h:199:
+#define atomic_dec_return(v)    (atomic_sub_return(1, v))=0A=

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#118: FILE: include/asm-i386/atomic.h:186:
+ * Atomically adds @i to @v and returns @i + @v=0A=
+ */=0A=

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

ERROR:SPACING: spaces required around that '=' (ctx:CxV)
#118: FILE: include/asm-i386/atomic.h:186:
+ */=0A=
    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#118: FILE: include/asm-i386/atomic.h:186:
+ */=0A=
       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#119: FILE: include/asm-i386/atomic.h:187:
+static __inline__ int atomic_add_return(int i, atomic_t *v)=0A=
                                                            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#119: FILE: include/asm-i386/atomic.h:187:
+static __inline__ int atomic_add_return(int i, atomic_t *v)=0A=
                                                               ^

WARNING:INLINE: plain inline is preferred over __inline__
#119: FILE: include/asm-i386/atomic.h:187:
+static __inline__ int atomic_add_return(int i, atomic_t *v)=0A=

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#120: FILE: include/asm-i386/atomic.h:188:
+static __inline__ int atomic_add_return(int i, atomic_t *v)=0A=
+{=0A=

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#120: FILE: include/asm-i386/atomic.h:188:
+{=0A=
  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#120: FILE: include/asm-i386/atomic.h:188:
+{=0A=
     ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#121: FILE: include/asm-i386/atomic.h:189:
+	int __i;=0A=
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#121: FILE: include/asm-i386/atomic.h:189:
+	int __i;=0A=
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#121: FILE: include/asm-i386/atomic.h:189:
+	int __i;=0A=
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#122: FILE: include/asm-i386/atomic.h:190:
+#ifdef CONFIG_M386=0A=
                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#122: FILE: include/asm-i386/atomic.h:190:
+#ifdef CONFIG_M386=0A=
                      ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#123: FILE: include/asm-i386/atomic.h:191:
+	local_irq_disable();=0A=
 	                   ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#123: FILE: include/asm-i386/atomic.h:191:
+	local_irq_disable();=0A=
 	                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#123: FILE: include/asm-i386/atomic.h:191:
+	local_irq_disable();=0A=
 	                       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#124: FILE: include/asm-i386/atomic.h:192:
+	__i =3D atomic_read(v);=0A=
 	    ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#124: FILE: include/asm-i386/atomic.h:192:
+	__i =3D atomic_read(v);=0A=
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#124: FILE: include/asm-i386/atomic.h:192:
+	__i =3D atomic_read(v);=0A=
 	                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#124: FILE: include/asm-i386/atomic.h:192:
+	__i =3D atomic_read(v);=0A=
 	                          ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#125: FILE: include/asm-i386/atomic.h:193:
+	atomic_set(v, i + __i);=0A=
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#125: FILE: include/asm-i386/atomic.h:193:
+	atomic_set(v, i + __i);=0A=
 	                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#125: FILE: include/asm-i386/atomic.h:193:
+	atomic_set(v, i + __i);=0A=
 	                          ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#126: FILE: include/asm-i386/atomic.h:194:
+	local_irq_enable();=0A=
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#126: FILE: include/asm-i386/atomic.h:194:
+	local_irq_enable();=0A=
 	                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#126: FILE: include/asm-i386/atomic.h:194:
+	local_irq_enable();=0A=
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#127: FILE: include/asm-i386/atomic.h:195:
+#else=0A=
      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#127: FILE: include/asm-i386/atomic.h:195:
+#else=0A=
         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#128: FILE: include/asm-i386/atomic.h:196:
+	__i =3D i;=0A=
 	    ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#128: FILE: include/asm-i386/atomic.h:196:
+	__i =3D i;=0A=
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#128: FILE: include/asm-i386/atomic.h:196:
+	__i =3D i;=0A=
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#128: FILE: include/asm-i386/atomic.h:196:
+	__i =3D i;=0A=
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:BxV)
#129: FILE: include/asm-i386/atomic.h:197:
+	__asm__ __volatile__(=0A=
 	                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#129: FILE: include/asm-i386/atomic.h:197:
+	__asm__ __volatile__(=0A=
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#130: FILE: include/asm-i386/atomic.h:198:
+		LOCK "xaddl %0, %1;"=0A=
 		                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#130: FILE: include/asm-i386/atomic.h:198:
+		LOCK "xaddl %0, %1;"=0A=
 		                       ^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#131: FILE: include/asm-i386/atomic.h:199:
+		:"=3Dr"(i)=0A=
 		^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#131: FILE: include/asm-i386/atomic.h:199:
+		:"=3Dr"(i)=0A=
 		          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#131: FILE: include/asm-i386/atomic.h:199:
+		:"=3Dr"(i)=0A=
 		             ^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#132: FILE: include/asm-i386/atomic.h:200:
+		:"m"(v->counter), "0"(i));=0A=
 		^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#132: FILE: include/asm-i386/atomic.h:200:
+		:"m"(v->counter), "0"(i));=0A=
 		                         ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#132: FILE: include/asm-i386/atomic.h:200:
+		:"m"(v->counter), "0"(i));=0A=
 		                          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#132: FILE: include/asm-i386/atomic.h:200:
+		:"m"(v->counter), "0"(i));=0A=
 		                             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#133: FILE: include/asm-i386/atomic.h:201:
+#endif=0A=
       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#133: FILE: include/asm-i386/atomic.h:201:
+#endif=0A=
          ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#134: FILE: include/asm-i386/atomic.h:202:
+	return i + __i;=0A=
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#134: FILE: include/asm-i386/atomic.h:202:
+	return i + __i;=0A=
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#134: FILE: include/asm-i386/atomic.h:202:
+	return i + __i;=0A=
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#135: FILE: include/asm-i386/atomic.h:203:
+}=0A=
  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#135: FILE: include/asm-i386/atomic.h:203:
+}=0A=
     ^

ERROR:SPACING: space required after that close brace '}'
#135: FILE: include/asm-i386/atomic.h:203:
+}=0A=

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#136: FILE: include/asm-i386/atomic.h:204:
+=0A=
 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#136: FILE: include/asm-i386/atomic.h:204:
+=0A=
    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#137: FILE: include/asm-i386/atomic.h:205:
+static __inline__ int atomic_sub_return(int i, atomic_t *v)=0A=
                                                            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#137: FILE: include/asm-i386/atomic.h:205:
+static __inline__ int atomic_sub_return(int i, atomic_t *v)=0A=
                                                               ^

WARNING:INLINE: plain inline is preferred over __inline__
#137: FILE: include/asm-i386/atomic.h:205:
+static __inline__ int atomic_sub_return(int i, atomic_t *v)=0A=

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#138: FILE: include/asm-i386/atomic.h:206:
+static __inline__ int atomic_sub_return(int i, atomic_t *v)=0A=
+{=0A=

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#138: FILE: include/asm-i386/atomic.h:206:
+{=0A=
  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#138: FILE: include/asm-i386/atomic.h:206:
+{=0A=
     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#139: FILE: include/asm-i386/atomic.h:207:
+	return atomic_add_return(-i,v);=0A=
 	                           ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#139: FILE: include/asm-i386/atomic.h:207:
+	return atomic_add_return(-i,v);=0A=
 	                              ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#139: FILE: include/asm-i386/atomic.h:207:
+	return atomic_add_return(-i,v);=0A=
 	                               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#139: FILE: include/asm-i386/atomic.h:207:
+	return atomic_add_return(-i,v);=0A=
 	                                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#140: FILE: include/asm-i386/atomic.h:208:
+}=0A=
  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#140: FILE: include/asm-i386/atomic.h:208:
+}=0A=
     ^

ERROR:SPACING: space required after that close brace '}'
#140: FILE: include/asm-i386/atomic.h:208:
+}=0A=

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#141: FILE: include/asm-i386/atomic.h:209:
+=0A=
 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#141: FILE: include/asm-i386/atomic.h:209:
+=0A=
    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#142: FILE: include/asm-i386/atomic.h:210:
+#define atomic_inc_return(v)  (atomic_add_return(1,v))=0A=
                                                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#142: FILE: include/asm-i386/atomic.h:210:
+#define atomic_inc_return(v)  (atomic_add_return(1,v))=0A=
                                                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#142: FILE: include/asm-i386/atomic.h:210:
+#define atomic_inc_return(v)  (atomic_add_return(1,v))=0A=
                                                          ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#142: FILE: include/asm-i386/atomic.h:210:
+#define atomic_inc_return(v)  (atomic_add_return(1,v))=0A=

ERROR:SPACING: space required after that ',' (ctx:VxV)
#143: FILE: include/asm-i386/atomic.h:211:
+#define atomic_dec_return(v)  (atomic_sub_return(1,v))=0A=
                                                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#143: FILE: include/asm-i386/atomic.h:211:
+#define atomic_dec_return(v)  (atomic_sub_return(1,v))=0A=
                                                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#143: FILE: include/asm-i386/atomic.h:211:
+#define atomic_dec_return(v)  (atomic_sub_return(1,v))=0A=
                                                          ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#143: FILE: include/asm-i386/atomic.h:211:
+#define atomic_dec_return(v)  (atomic_sub_return(1,v))=0A=

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#144: FILE: include/asm-i386/atomic.h:212:
+=0A=
 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#144: FILE: include/asm-i386/atomic.h:212:
+=0A=
    ^

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#164: FILE: include/asm-x86_64/atomic.h:187:
+ * Atomically adds @i to @v and returns @i + @v=0A=
+ */=0A=

ERROR:SPACING: spaces required around that '=' (ctx:CxV)
#164: FILE: include/asm-x86_64/atomic.h:187:
+ */=0A=
    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#164: FILE: include/asm-x86_64/atomic.h:187:
+ */=0A=
       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#165: FILE: include/asm-x86_64/atomic.h:188:
+static __inline__ int atomic_add_return(int i, atomic_t *v)=0A=
                                                            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#165: FILE: include/asm-x86_64/atomic.h:188:
+static __inline__ int atomic_add_return(int i, atomic_t *v)=0A=
                                                               ^

WARNING:INLINE: plain inline is preferred over __inline__
#165: FILE: include/asm-x86_64/atomic.h:188:
+static __inline__ int atomic_add_return(int i, atomic_t *v)=0A=

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#166: FILE: include/asm-x86_64/atomic.h:189:
+static __inline__ int atomic_add_return(int i, atomic_t *v)=0A=
+{=0A=

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#166: FILE: include/asm-x86_64/atomic.h:189:
+{=0A=
  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#166: FILE: include/asm-x86_64/atomic.h:189:
+{=0A=
     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#167: FILE: include/asm-x86_64/atomic.h:190:
+	int __i =3D i;=0A=
 	        ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#167: FILE: include/asm-x86_64/atomic.h:190:
+	int __i =3D i;=0A=
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#167: FILE: include/asm-x86_64/atomic.h:190:
+	int __i =3D i;=0A=
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#167: FILE: include/asm-x86_64/atomic.h:190:
+	int __i =3D i;=0A=
 	                 ^

ERROR:SPACING: spaces required around that '=' (ctx:BxV)
#168: FILE: include/asm-x86_64/atomic.h:191:
+	__asm__ __volatile__(=0A=
 	                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#168: FILE: include/asm-x86_64/atomic.h:191:
+	__asm__ __volatile__(=0A=
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#169: FILE: include/asm-x86_64/atomic.h:192:
+		LOCK "xaddl %0, %1;"=0A=
 		                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#169: FILE: include/asm-x86_64/atomic.h:192:
+		LOCK "xaddl %0, %1;"=0A=
 		                       ^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#170: FILE: include/asm-x86_64/atomic.h:193:
+		:"=3Dr"(i)=0A=
 		^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#170: FILE: include/asm-x86_64/atomic.h:193:
+		:"=3Dr"(i)=0A=
 		          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#170: FILE: include/asm-x86_64/atomic.h:193:
+		:"=3Dr"(i)=0A=
 		             ^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#171: FILE: include/asm-x86_64/atomic.h:194:
+		:"m"(v->counter), "0"(i));=0A=
 		^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#171: FILE: include/asm-x86_64/atomic.h:194:
+		:"m"(v->counter), "0"(i));=0A=
 		                         ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#171: FILE: include/asm-x86_64/atomic.h:194:
+		:"m"(v->counter), "0"(i));=0A=
 		                          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#171: FILE: include/asm-x86_64/atomic.h:194:
+		:"m"(v->counter), "0"(i));=0A=
 		                             ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#172: FILE: include/asm-x86_64/atomic.h:195:
+	return i + __i;=0A=
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#172: FILE: include/asm-x86_64/atomic.h:195:
+	return i + __i;=0A=
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#172: FILE: include/asm-x86_64/atomic.h:195:
+	return i + __i;=0A=
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#173: FILE: include/asm-x86_64/atomic.h:196:
+}=0A=
  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#173: FILE: include/asm-x86_64/atomic.h:196:
+}=0A=
     ^

ERROR:SPACING: space required after that close brace '}'
#173: FILE: include/asm-x86_64/atomic.h:196:
+}=0A=

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#174: FILE: include/asm-x86_64/atomic.h:197:
+=0A=
 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#174: FILE: include/asm-x86_64/atomic.h:197:
+=0A=
    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#175: FILE: include/asm-x86_64/atomic.h:198:
+static __inline__ int atomic_sub_return(int i, atomic_t *v)=0A=
                                                            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#175: FILE: include/asm-x86_64/atomic.h:198:
+static __inline__ int atomic_sub_return(int i, atomic_t *v)=0A=
                                                               ^

WARNING:INLINE: plain inline is preferred over __inline__
#175: FILE: include/asm-x86_64/atomic.h:198:
+static __inline__ int atomic_sub_return(int i, atomic_t *v)=0A=

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#176: FILE: include/asm-x86_64/atomic.h:199:
+static __inline__ int atomic_sub_return(int i, atomic_t *v)=0A=
+{=0A=

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#176: FILE: include/asm-x86_64/atomic.h:199:
+{=0A=
  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#176: FILE: include/asm-x86_64/atomic.h:199:
+{=0A=
     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#177: FILE: include/asm-x86_64/atomic.h:200:
+	return atomic_add_return(-i,v);=0A=
 	                           ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#177: FILE: include/asm-x86_64/atomic.h:200:
+	return atomic_add_return(-i,v);=0A=
 	                              ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#177: FILE: include/asm-x86_64/atomic.h:200:
+	return atomic_add_return(-i,v);=0A=
 	                               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#177: FILE: include/asm-x86_64/atomic.h:200:
+	return atomic_add_return(-i,v);=0A=
 	                                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#178: FILE: include/asm-x86_64/atomic.h:201:
+}=0A=
  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#178: FILE: include/asm-x86_64/atomic.h:201:
+}=0A=
     ^

ERROR:SPACING: space required after that close brace '}'
#178: FILE: include/asm-x86_64/atomic.h:201:
+}=0A=

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#179: FILE: include/asm-x86_64/atomic.h:202:
+=0A=
 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#179: FILE: include/asm-x86_64/atomic.h:202:
+=0A=
    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#180: FILE: include/asm-x86_64/atomic.h:203:
+#define atomic_inc_return(v)  (atomic_add_return(1,v))=0A=
                                                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#180: FILE: include/asm-x86_64/atomic.h:203:
+#define atomic_inc_return(v)  (atomic_add_return(1,v))=0A=
                                                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#180: FILE: include/asm-x86_64/atomic.h:203:
+#define atomic_inc_return(v)  (atomic_add_return(1,v))=0A=
                                                          ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#180: FILE: include/asm-x86_64/atomic.h:203:
+#define atomic_inc_return(v)  (atomic_add_return(1,v))=0A=

ERROR:SPACING: space required after that ',' (ctx:VxV)
#181: FILE: include/asm-x86_64/atomic.h:204:
+#define atomic_dec_return(v)  (atomic_sub_return(1,v))=0A=
                                                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#181: FILE: include/asm-x86_64/atomic.h:204:
+#define atomic_dec_return(v)  (atomic_sub_return(1,v))=0A=
                                                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#181: FILE: include/asm-x86_64/atomic.h:204:
+#define atomic_dec_return(v)  (atomic_sub_return(1,v))=0A=
                                                          ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#181: FILE: include/asm-x86_64/atomic.h:204:
+#define atomic_dec_return(v)  (atomic_sub_return(1,v))=0A=

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#182: FILE: include/asm-x86_64/atomic.h:205:
+=0A=
 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#182: FILE: include/asm-x86_64/atomic.h:205:
+=0A=
    ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000254935.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 136 errors, 6 warnings, 2 checks, 93 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000254935.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
