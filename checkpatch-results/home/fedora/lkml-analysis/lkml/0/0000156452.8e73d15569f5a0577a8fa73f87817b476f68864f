WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
--- util-linux-2.13-pre2/mount/lomount.c.all	2005-08-29 16:59:06.000000000 +0200

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(a)
#45: FILE: mount/lomount.c:31:
+#define SIZE(a) (sizeof(a)/sizeof(a[0]))

The ARRAY_SIZE(foo) macro should be preferred over
sizeof(foo)/sizeof(foo[0]) for finding number of elements in an
array.

The macro is defined in include/linux/kernel.h::

  #define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#45: FILE: mount/lomount.c:31:
+#define SIZE(a) (sizeof(a)/sizeof(a[0]))
                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#55: FILE: mount/lomount.c:134:
+static int
+show_used_loop_devices (void) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#56: FILE: mount/lomount.c:135:
+show_used_loop_devices (void) {

WARNING:STATIC_CONST_CHAR_ARRAY: char * array declaration might be better as static const
#58: FILE: mount/lomount.c:137:
+	char *loop_formats[] = { "/dev/loop%d", "/dev/loop/%d" };

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#63: FILE: mount/lomount.c:142:
+	for (j = 0; j < SIZE(loop_formats); j++) {
+	    for(i = 0; i < 256; i++) {

WARNING:TABSTOP: Statements should start on a tabstop
#64: FILE: mount/lomount.c:143:
+	    for(i = 0; i < 256; i++) {

ERROR:SPACING: space required before the open parenthesis '('
#64: FILE: mount/lomount.c:143:
+	    for(i = 0; i < 256; i++) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#66: FILE: mount/lomount.c:145:
+		if (stat (dev, &statbuf) == 0 && S_ISBLK(statbuf.st_mode)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#68: FILE: mount/lomount.c:147:
+			fd = open (dev, O_RDONLY);

CHECK:BRACES: braces {} should be used on all arms of this statement
#69: FILE: mount/lomount.c:148:
+			if (fd >= 0) {
[...]
+			} else if (errno == EACCES)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#70: FILE: mount/lomount.c:149:
+				if(ioctl (fd, LOOP_GET_STATUS, &loopinfo) == 0)

ERROR:SPACING: space required before the open parenthesis '('
#70: FILE: mount/lomount.c:149:
+				if(ioctl (fd, LOOP_GET_STATUS, &loopinfo) == 0)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#72: FILE: mount/lomount.c:151:
+				close (fd);

WARNING:TABSTOP: Statements should start on a tabstop
#79: FILE: mount/lomount.c:158:
+	    }

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#82: FILE: mount/lomount.c:161:
+	if (somedev==0 && permission) {
 	           ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#89: FILE: mount/lomount.c:168:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: mount/lomount.c:443:
+  "  %1$s loop_device                                       # give info\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: mount/lomount.c:444:
+  "  %1$s -d loop_device                                    # delete\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: mount/lomount.c:445:
+  "  %1$s -f                                                # find unused\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: mount/lomount.c:446:
+  "  %1$s -a                                                # list all used\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: mount/lomount.c:447:
+  "  %1$s [-e encryption] [-o offset] {-f|loop_device} file # setup\n"),$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#136: FILE: mount/lomount.c:492:
+	delete = find = all = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:TYPO_SPELLING: 'fo' may be misspelled - perhaps 'of'?
#145: FILE: mount/lomount.c:500:
+	while ((c = getopt(argc, argv, "ade:E:fo:p:v")) != -1) {
 	                                      ^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#158: FILE: mount/lomount.c:532:
+		if (argc != optind+1 || encryption || offset || find || all)
 		                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#162: FILE: mount/lomount.c:535:
+		if (all || argc < optind || argc > optind+1)
 		                                         ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000156452.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 17 warnings, 6 checks, 130 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000156452.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
