WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
 include/asm-s390/bitops.h       |   70 ++++++++++++++++++++++++----------------

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#58: FILE: include/asm-s390/bitops.h:56:
+static inline void set_bit_cs(int nr, volatile unsigned long *ptr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#67: FILE: include/asm-s390/bitops.h:81:
+static inline void clear_bit_cs(int nr, volatile unsigned long *ptr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#76: FILE: include/asm-s390/bitops.h:106:
+static inline void change_bit_cs(int nr, volatile unsigned long *ptr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#86: FILE: include/asm-s390/bitops.h:132:
+test_and_set_bit_cs(int nr, volatile unsigned long *ptr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#96: FILE: include/asm-s390/bitops.h:159:
+test_and_clear_bit_cs(int nr, volatile unsigned long *ptr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#106: FILE: include/asm-s390/bitops.h:186:
+test_and_change_bit_cs(int nr, volatile unsigned long *ptr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#115: FILE: include/asm-s390/bitops.h:213:
+static inline void __set_bit(int nr, volatile unsigned long *ptr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#124: FILE: include/asm-s390/bitops.h:225:
+__constant_set_bit(const int nr, volatile unsigned long *ptr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#133: FILE: include/asm-s390/bitops.h:275:
+__clear_bit(int nr, volatile unsigned long *ptr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#142: FILE: include/asm-s390/bitops.h:287:
+__constant_clear_bit(const int nr, volatile unsigned long *ptr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#151: FILE: include/asm-s390/bitops.h:336:
+static inline void __change_bit(int nr, volatile unsigned long *ptr)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#160: FILE: include/asm-s390/bitops.h:348:
+__constant_change_bit(const int nr, volatile unsigned long *ptr) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#160: FILE: include/asm-s390/bitops.h:348:
+__constant_change_bit(const int nr, volatile unsigned long *ptr) 

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#170: FILE: include/asm-s390/bitops.h:398:
+test_and_set_bit_simple(int nr, volatile unsigned long *ptr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#180: FILE: include/asm-s390/bitops.h:417:
+test_and_clear_bit_simple(int nr, volatile unsigned long *ptr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#190: FILE: include/asm-s390/bitops.h:436:
+test_and_change_bit_simple(int nr, volatile unsigned long *ptr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#199: FILE: include/asm-s390/bitops.h:472:
+static inline int __test_bit(int nr, volatile unsigned long *ptr)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#208: FILE: include/asm-s390/bitops.h:482:
+static inline int $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#209: FILE: include/asm-s390/bitops.h:483:
+__constant_test_bit(int nr, volatile unsigned long * addr) {

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#209: FILE: include/asm-s390/bitops.h:483:
+__constant_test_bit(int nr, volatile unsigned long * addr) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#219: FILE: include/asm-s390/bitops.h:496:
+find_first_zero_bit(unsigned long * addr, unsigned size)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#219: FILE: include/asm-s390/bitops.h:496:
+find_first_zero_bit(unsigned long * addr, unsigned size)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#229: FILE: include/asm-s390/bitops.h:535:
+find_first_bit(unsigned long * addr, unsigned size)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#229: FILE: include/asm-s390/bitops.h:535:
+find_first_bit(unsigned long * addr, unsigned size)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#239: FILE: include/asm-s390/bitops.h:574:
+find_next_zero_bit (unsigned long * addr, int size, int offset)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#239: FILE: include/asm-s390/bitops.h:574:
+find_next_zero_bit (unsigned long * addr, int size, int offset)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#249: FILE: include/asm-s390/bitops.h:613:
+find_next_bit (unsigned long * addr, int size, int offset)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#249: FILE: include/asm-s390/bitops.h:613:
+find_next_bit (unsigned long * addr, int size, int offset)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#258: FILE: include/asm-s390/bitops.h:682:
+static inline unsigned long __ffs (unsigned long word)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#267: FILE: include/asm-s390/bitops.h:721:
+extern inline int ffs (int x)

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#280: FILE: include/asm-s390/bitops.h:807:
+	test_and_set_bit((nr)^24, (unsigned long *)addr)
 	                     ^

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#282: FILE: include/asm-s390/bitops.h:809:
+	test_and_clear_bit((nr)^24, (unsigned long *)addr)
 	                       ^

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#284: FILE: include/asm-s390/bitops.h:811:
+	test_bit((nr)^24, (unsigned long *)addr)
 	             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#286: FILE: include/asm-s390/bitops.h:813:
+static inline int $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#287: FILE: include/asm-s390/bitops.h:814:
+ext2_find_first_zero_bit(void *vaddr, unsigned size)

ERROR:CODE_INDENT: code indent should use tabs where possible
#299: FILE: include/asm-s390/page.h:67:
+        __asm__ __volatile__(".long 0"); \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: include/asm-s390/page.h:67:
+        __asm__ __volatile__(".long 0"); \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#311: FILE: include/asm-s390/posix_types.h:63:
+#define __FD_SET(fd,fdsetp)  set_bit(fd,fdsetp->fds_bits)
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#311: FILE: include/asm-s390/posix_types.h:63:
+#define __FD_SET(fd,fdsetp)  set_bit(fd,fdsetp->fds_bits)
                                        ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'fdsetp' may be better as '(fdsetp)' to avoid precedence issues
#311: FILE: include/asm-s390/posix_types.h:63:
+#define __FD_SET(fd,fdsetp)  set_bit(fd,fdsetp->fds_bits)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#315: FILE: include/asm-s390/posix_types.h:66:
+#define __FD_CLR(fd,fdsetp)  clear_bit(fd,fdsetp->fds_bits)
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#315: FILE: include/asm-s390/posix_types.h:66:
+#define __FD_CLR(fd,fdsetp)  clear_bit(fd,fdsetp->fds_bits)
                                          ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'fdsetp' may be better as '(fdsetp)' to avoid precedence issues
#315: FILE: include/asm-s390/posix_types.h:66:
+#define __FD_CLR(fd,fdsetp)  clear_bit(fd,fdsetp->fds_bits)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#319: FILE: include/asm-s390/posix_types.h:69:
+#define __FD_ISSET(fd,fdsetp)  test_bit(fd,fdsetp->fds_bits)
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#319: FILE: include/asm-s390/posix_types.h:69:
+#define __FD_ISSET(fd,fdsetp)  test_bit(fd,fdsetp->fds_bits)
                                           ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'fdsetp' may be better as '(fdsetp)' to avoid precedence issues
#319: FILE: include/asm-s390/posix_types.h:69:
+#define __FD_ISSET(fd,fdsetp)  test_bit(fd,fdsetp->fds_bits)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#362: FILE: include/asm-s390x/bitops.h:1:
+#ifndef _S390_BITOPS_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#392: FILE: include/asm-s390x/bitops.h:60:
+static inline void set_bit_cs(unsigned long nr, volatile unsigned long *ptr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#401: FILE: include/asm-s390x/bitops.h:85:
+static inline void clear_bit_cs(unsigned long nr, volatile unsigned long *ptr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#410: FILE: include/asm-s390x/bitops.h:110:
+static inline void change_bit_cs(unsigned long nr, volatile unsigned long *ptr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#421: FILE: include/asm-s390x/bitops.h:136:
+test_and_set_bit_cs(unsigned long nr, volatile unsigned long *ptr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#430: FILE: include/asm-s390x/bitops.h:163:
+test_and_clear_bit_cs(unsigned long nr, volatile unsigned long *ptr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#439: FILE: include/asm-s390x/bitops.h:190:
+test_and_change_bit_cs(unsigned long nr, volatile unsigned long *ptr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#448: FILE: include/asm-s390x/bitops.h:217:
+static inline void __set_bit(unsigned long nr, volatile unsigned long *ptr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#457: FILE: include/asm-s390x/bitops.h:229:
+__constant_set_bit(const unsigned long nr, volatile unsigned long *ptr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#466: FILE: include/asm-s390x/bitops.h:279:
+__clear_bit(unsigned long nr, volatile unsigned long *ptr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#475: FILE: include/asm-s390x/bitops.h:291:
+__constant_clear_bit(const unsigned long nr, volatile unsigned long *ptr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#484: FILE: include/asm-s390x/bitops.h:340:
+static inline void __change_bit(unsigned long nr, volatile unsigned long *ptr)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#493: FILE: include/asm-s390x/bitops.h:352:
+__constant_change_bit(const unsigned long nr, volatile unsigned long *ptr) $

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#493: FILE: include/asm-s390x/bitops.h:352:
+__constant_change_bit(const unsigned long nr, volatile unsigned long *ptr) 

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#502: FILE: include/asm-s390x/bitops.h:402:
+test_and_set_bit_simple(unsigned long nr, volatile unsigned long *ptr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#511: FILE: include/asm-s390x/bitops.h:421:
+test_and_clear_bit_simple(unsigned long nr, volatile unsigned long *ptr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#520: FILE: include/asm-s390x/bitops.h:440:
+test_and_change_bit_simple(unsigned long nr, volatile unsigned long *ptr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#529: FILE: include/asm-s390x/bitops.h:476:
+static inline int __test_bit(unsigned long nr, volatile unsigned long *ptr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#538: FILE: include/asm-s390x/bitops.h:487:
+__constant_test_bit(unsigned long nr, volatile unsigned long *addr) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#547: FILE: include/asm-s390x/bitops.h:500:
+find_first_zero_bit(unsigned long * addr, unsigned long size)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#556: FILE: include/asm-s390x/bitops.h:542:
+find_first_bit(unsigned long * addr, unsigned long size)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#565: FILE: include/asm-s390x/bitops.h:584:
+find_next_zero_bit (unsigned long * addr, unsigned long size, unsigned long offset)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#565: FILE: include/asm-s390x/bitops.h:584:
+find_next_zero_bit (unsigned long * addr, unsigned long size, unsigned long offset)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#574: FILE: include/asm-s390x/bitops.h:628:
+find_next_bit (unsigned long * addr, unsigned long size, unsigned long offset)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#574: FILE: include/asm-s390x/bitops.h:628:
+find_next_bit (unsigned long * addr, unsigned long size, unsigned long offset)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#583: FILE: include/asm-s390x/bitops.h:747:
+extern inline int ffs (int x)

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#595: FILE: include/asm-s390x/bitops.h:840:
+	test_and_set_bit((nr)^56, (unsigned long *)addr)
 	                     ^

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#597: FILE: include/asm-s390x/bitops.h:842:
+	test_and_clear_bit((nr)^56, (unsigned long *)addr)
 	                       ^

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#599: FILE: include/asm-s390x/bitops.h:844:
+	test_bit((nr)^56, (unsigned long *)addr)
 	             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#612: FILE: include/asm-s390x/posix_types.h:61:
+#define __FD_SET(fd,fdsetp)  set_bit(fd,fdsetp->fds_bits)
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#612: FILE: include/asm-s390x/posix_types.h:61:
+#define __FD_SET(fd,fdsetp)  set_bit(fd,fdsetp->fds_bits)
                                        ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'fdsetp' may be better as '(fdsetp)' to avoid precedence issues
#612: FILE: include/asm-s390x/posix_types.h:61:
+#define __FD_SET(fd,fdsetp)  set_bit(fd,fdsetp->fds_bits)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#616: FILE: include/asm-s390x/posix_types.h:64:
+#define __FD_CLR(fd,fdsetp)  clear_bit(fd,fdsetp->fds_bits)
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#616: FILE: include/asm-s390x/posix_types.h:64:
+#define __FD_CLR(fd,fdsetp)  clear_bit(fd,fdsetp->fds_bits)
                                          ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'fdsetp' may be better as '(fdsetp)' to avoid precedence issues
#616: FILE: include/asm-s390x/posix_types.h:64:
+#define __FD_CLR(fd,fdsetp)  clear_bit(fd,fdsetp->fds_bits)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#620: FILE: include/asm-s390x/posix_types.h:67:
+#define __FD_ISSET(fd,fdsetp)  test_bit(fd,fdsetp->fds_bits)
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#620: FILE: include/asm-s390x/posix_types.h:67:
+#define __FD_ISSET(fd,fdsetp)  test_bit(fd,fdsetp->fds_bits)
                                           ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'fdsetp' may be better as '(fdsetp)' to avoid precedence issues
#620: FILE: include/asm-s390x/posix_types.h:67:
+#define __FD_ISSET(fd,fdsetp)  test_bit(fd,fdsetp->fds_bits)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000407380.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 26 errors, 47 warnings, 12 checks, 513 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000407380.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
