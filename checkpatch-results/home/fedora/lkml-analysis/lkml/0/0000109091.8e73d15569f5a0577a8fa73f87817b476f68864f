WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
the correct bus.  If no pci devices are found, but there is still a _DCK method

CHECK:LINE_SPACING: Please don't use multiple blank lines
#91: FILE: drivers/pci/hotplug/acpiphp.h:163:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#99: FILE: drivers/pci/hotplug/acpiphp.h:171:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#109: FILE: drivers/pci/hotplug/acpiphp.h:181:
+
+

WARNING:FUNCTION_ARGUMENTS: function definition argument 'acpi_handle' should also have an identifier name
#130: FILE: drivers/pci/hotplug/acpiphp.h:238:
+void handle_hotplug_event_func(acpi_handle, u32, void*);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#130: FILE: drivers/pci/hotplug/acpiphp.h:238:
+void handle_hotplug_event_func(acpi_handle, u32, void*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void*' should also have an identifier name
#130: FILE: drivers/pci/hotplug/acpiphp.h:238:
+void handle_hotplug_event_func(acpi_handle, u32, void*);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#139: FILE: drivers/pci/hotplug/acpiphp.h:249:
+extern int find_dock_station(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#140: FILE: drivers/pci/hotplug/acpiphp.h:250:
+extern void remove_dock_station(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#141: FILE: drivers/pci/hotplug/acpiphp.h:251:
+extern void add_dependent_device(struct dependent_device *new_dd);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#142: FILE: drivers/pci/hotplug/acpiphp.h:252:
+extern void add_pci_dependent_device(struct dependent_device *new_dd);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#143: FILE: drivers/pci/hotplug/acpiphp.h:253:
+extern struct dependent_device *get_dependent_device(acpi_handle handle);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#144: FILE: drivers/pci/hotplug/acpiphp.h:254:
+extern int is_dependent_device(acpi_handle handle);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#145: FILE: drivers/pci/hotplug/acpiphp.h:255:
+extern int detect_dependent_devices(acpi_handle *bridge_handle);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#146: FILE: drivers/pci/hotplug/acpiphp.h:256:
+extern struct dependent_device *alloc_dependent_device(acpi_handle handle);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#188: FILE: drivers/pci/hotplug/acpiphp_dock.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#208: FILE: drivers/pci/hotplug/acpiphp_dock.c:21:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#209: FILE: drivers/pci/hotplug/acpiphp_dock.c:22:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#229: FILE: drivers/pci/hotplug/acpiphp_dock.c:42:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#244: FILE: drivers/pci/hotplug/acpiphp_dock.c:57:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#258: FILE: drivers/pci/hotplug/acpiphp_dock.c:71:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#260: FILE: drivers/pci/hotplug/acpiphp_dock.c:73:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#266: FILE: drivers/pci/hotplug/acpiphp_dock.c:79:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#272: FILE: drivers/pci/hotplug/acpiphp_dock.c:85:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#274: FILE: drivers/pci/hotplug/acpiphp_dock.c:87:
+struct dependent_device * get_dependent_device(acpi_handle handle)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#285: FILE: drivers/pci/hotplug/acpiphp_dock.c:98:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#300: FILE: drivers/pci/hotplug/acpiphp_dock.c:113:
+
+

WARNING:BRACES: braces {} are not necessary for single statement blocks
#308: FILE: drivers/pci/hotplug/acpiphp_dock.c:121:
+	if (ACPI_FAILURE(status)) {
+		return 0;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#314: FILE: drivers/pci/hotplug/acpiphp_dock.c:127:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#329: FILE: drivers/pci/hotplug/acpiphp_dock.c:142:
+	status = acpi_evaluate_object(handle, "_DCK",
+					&arg_list, &buffer);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#331: FILE: drivers/pci/hotplug/acpiphp_dock.c:144:
+		err("%s: failed to dock!!\n", __FUNCTION__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#337: FILE: drivers/pci/hotplug/acpiphp_dock.c:150:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#352: FILE: drivers/pci/hotplug/acpiphp_dock.c:165:
+	pci_read_config_dword(bus->self,
+				PCI_PRIMARY_BUS,

ERROR:CODE_INDENT: code indent should use tabs where possible
#357: FILE: drivers/pci/hotplug/acpiphp_dock.c:170:
+^I     ^I^I| ((unsigned int)(bus->primary)     <<  0)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#357: FILE: drivers/pci/hotplug/acpiphp_dock.c:170:
+^I     ^I^I| ((unsigned int)(bus->primary)     <<  0)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#358: FILE: drivers/pci/hotplug/acpiphp_dock.c:171:
+^I     ^I^I| ((unsigned int)(bus->secondary)   <<  8)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#358: FILE: drivers/pci/hotplug/acpiphp_dock.c:171:
+^I     ^I^I| ((unsigned int)(bus->secondary)   <<  8)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#359: FILE: drivers/pci/hotplug/acpiphp_dock.c:172:
+^I     ^I^I| ((unsigned int)(bus->subordinate) << 16);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#359: FILE: drivers/pci/hotplug/acpiphp_dock.c:172:
+^I     ^I^I| ((unsigned int)(bus->subordinate) << 16);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#361: FILE: drivers/pci/hotplug/acpiphp_dock.c:174:
+		pci_write_config_dword(bus->self,
+					PCI_PRIMARY_BUS,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#366: FILE: drivers/pci/hotplug/acpiphp_dock.c:179:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#368: FILE: drivers/pci/hotplug/acpiphp_dock.c:181:
+
+

CHECK:SPACING: No space is necessary after a cast
#373: FILE: drivers/pci/hotplug/acpiphp_dock.c:186:
+				(struct acpiphp_dock_station *) context;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#376: FILE: drivers/pci/hotplug/acpiphp_dock.c:189:
+	switch (type) {
+		case ACPI_NOTIFY_BUS_CHECK:
[...]
+		case ACPI_NOTIFY_EJECT_REQUEST:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#385: FILE: drivers/pci/hotplug/acpiphp_dock.c:198:
+			list_for_each_entry(dd, &ds->pci_dependent_devices,
+						pci_list)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#389: FILE: drivers/pci/hotplug/acpiphp_dock.c:202:
+			list_for_each_entry(dd, &ds->pci_dependent_devices,
+					pci_list)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#391: FILE: drivers/pci/hotplug/acpiphp_dock.c:204:
+				handle_hotplug_event_func(dd->handle,
+						type, dd->func);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#397: FILE: drivers/pci/hotplug/acpiphp_dock.c:210:
+			if (station->flags & DOCK_DOCKING ||
+				station->last_dock_time == jiffies) {

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#397: FILE: drivers/pci/hotplug/acpiphp_dock.c:210:
+				station->last_dock_time == jiffies) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#401: FILE: drivers/pci/hotplug/acpiphp_dock.c:214:
+				list_for_each_entry(dd,
+					&ds->pci_dependent_devices, pci_list)

ERROR:CODE_INDENT: code indent should use tabs where possible
#403: FILE: drivers/pci/hotplug/acpiphp_dock.c:216:
+ ^I^I^I^I^Ihandle_hotplug_event_func(dd->handle,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#403: FILE: drivers/pci/hotplug/acpiphp_dock.c:216:
+ ^I^I^I^I^Ihandle_hotplug_event_func(dd->handle,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#403: FILE: drivers/pci/hotplug/acpiphp_dock.c:216:
+ ^I^I^I^I^Ihandle_hotplug_event_func(dd->handle,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#404: FILE: drivers/pci/hotplug/acpiphp_dock.c:217:
+ 					handle_hotplug_event_func(dd->handle,
+						type, dd->func);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#410: FILE: drivers/pci/hotplug/acpiphp_dock.c:223:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#412: FILE: drivers/pci/hotplug/acpiphp_dock.c:225:
+
+

CHECK:SPACING: No space is necessary after a cast
#418: FILE: drivers/pci/hotplug/acpiphp_dock.c:231:
+	acpi_handle dck_handle = (acpi_handle) context;

WARNING:LINE_SPACING: Missing a blank line after declarations
#456: FILE: drivers/pci/hotplug/acpiphp_dock.c:269:
+		struct dependent_device *dd;
+		dbg("%s: found device dependent on dock\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#456: FILE: drivers/pci/hotplug/acpiphp_dock.c:269:
+		dbg("%s: found device dependent on dock\n", __FUNCTION__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#470: FILE: drivers/pci/hotplug/acpiphp_dock.c:283:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#480: FILE: drivers/pci/hotplug/acpiphp_dock.c:293:
+	status = acpi_walk_namespace(ACPI_TYPE_DEVICE, bridge_handle,
+					(u32)1, find_dependent_device,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#486: FILE: drivers/pci/hotplug/acpiphp_dock.c:299:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#488: FILE: drivers/pci/hotplug/acpiphp_dock.c:301:
+
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#496: FILE: drivers/pci/hotplug/acpiphp_dock.c:309:
+		dbg("%s: found dock\n", __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#504: FILE: drivers/pci/hotplug/acpiphp_dock.c:317:
+		acpi_walk_namespace(ACPI_TYPE_DEVICE, ACPI_ROOT_OBJECT,
+			ACPI_UINT32_MAX, find_dock_ejd, handle, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#507: FILE: drivers/pci/hotplug/acpiphp_dock.c:320:
+		acpi_install_notify_handler(handle, ACPI_SYSTEM_NOTIFY,
+			handle_hotplug_event_dock, ds);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#514: FILE: drivers/pci/hotplug/acpiphp_dock.c:327:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#516: FILE: drivers/pci/hotplug/acpiphp_dock.c:329:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#527: FILE: drivers/pci/hotplug/acpiphp_dock.c:340:
+	acpi_walk_namespace(ACPI_TYPE_DEVICE, ACPI_ROOT_OBJECT,
+			ACPI_UINT32_MAX, find_dock, &num, NULL);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#532: FILE: drivers/pci/hotplug/acpiphp_dock.c:345:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#537: FILE: drivers/pci/hotplug/acpiphp_dock.c:350:
+	struct dependent_device *dd;
+	if (ds) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#539: FILE: drivers/pci/hotplug/acpiphp_dock.c:352:
+		if (ACPI_FAILURE(acpi_remove_notify_handler(ds->handle,
+			ACPI_SYSTEM_NOTIFY, handle_hotplug_event_dock)))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#555: FILE: drivers/pci/hotplug/acpiphp_dock.c:368:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#605: FILE: drivers/pci/hotplug/acpiphp_glue.c:173:
+                if (!dd)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#605: FILE: drivers/pci/hotplug/acpiphp_glue.c:173:
+                if (!dd)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#606: FILE: drivers/pci/hotplug/acpiphp_glue.c:174:
+                        err("Can't allocate memory for "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#606: FILE: drivers/pci/hotplug/acpiphp_glue.c:174:
+                        err("Can't allocate memory for "$

WARNING:SPLIT_STRING: quoted string split across lines
#607: FILE: drivers/pci/hotplug/acpiphp_glue.c:175:
+                        err("Can't allocate memory for "
+				"new dependent device!\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:CODE_INDENT: code indent should use tabs where possible
#621: FILE: drivers/pci/hotplug/acpiphp_glue.c:229:
+ ^I * struct.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#621: FILE: drivers/pci/hotplug/acpiphp_glue.c:229:
+ ^I * struct.$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#623: FILE: drivers/pci/hotplug/acpiphp_glue.c:231:
+	if ((dd = get_dependent_device(handle))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#633: FILE: drivers/pci/hotplug/acpiphp_glue.c:240:
+		status = acpi_install_notify_handler(handle,
 					     ACPI_SYSTEM_NOTIFY,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#655: FILE: drivers/pci/hotplug/acpiphp_glue.c:438:
+	if ((detect_ejectable_slots(handle) > 0) ||
+		(detect_dependent_devices(handle) > 0)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#666: FILE: drivers/pci/hotplug/acpiphp_glue.c:542:
+				status = acpi_remove_notify_handler(func->handle,
 						ACPI_SYSTEM_NOTIFY,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000109091.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 21 warnings, 51 checks, 579 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000109091.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
