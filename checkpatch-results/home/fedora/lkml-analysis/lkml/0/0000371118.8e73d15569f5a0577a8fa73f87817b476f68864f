WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#31: FILE: arch/m68k/mac/baboon.c:28:
+irqreturn_t baboon_irq(int, void *, struct pt_regs *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#31: FILE: arch/m68k/mac/baboon.c:28:
+irqreturn_t baboon_irq(int, void *, struct pt_regs *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#31: FILE: arch/m68k/mac/baboon.c:28:
+irqreturn_t baboon_irq(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#31: FILE: arch/m68k/mac/baboon.c:28:
+irqreturn_t baboon_irq(int, void *, struct pt_regs *);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#49: FILE: arch/m68k/mac/baboon.c:78:
+	if (!(events = baboon->mb_ifr & 0x07))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#69: FILE: arch/m68k/mac/config.c:75:
+extern void via_init_clock(irqreturn_t (*func)(int, void *, struct pt_regs *));

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#90: FILE: arch/m68k/mac/config.c:111:
+irqreturn_t (*mac_handlers[8])(int, void *, struct pt_regs *)=
                                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#101: FILE: arch/m68k/mac/iop.c:156:
+irqreturn_t iop_ism_irq(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#101: FILE: arch/m68k/mac/iop.c:156:
+irqreturn_t iop_ism_irq(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#101: FILE: arch/m68k/mac/iop.c:156:
+irqreturn_t iop_ism_irq(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#101: FILE: arch/m68k/mac/iop.c:156:
+irqreturn_t iop_ism_irq(int, void *, struct pt_regs *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#133: FILE: arch/m68k/mac/macints.c:220:
+extern irqreturn_t mac_bang(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#133: FILE: arch/m68k/mac/macints.c:220:
+extern irqreturn_t mac_bang(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#133: FILE: arch/m68k/mac/macints.c:220:
+extern irqreturn_t mac_bang(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#133: FILE: arch/m68k/mac/macints.c:220:
+extern irqreturn_t mac_bang(int, void *, struct pt_regs *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#134: FILE: arch/m68k/mac/macints.c:221:
+irqreturn_t mac_nmi_handler(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#134: FILE: arch/m68k/mac/macints.c:221:
+irqreturn_t mac_nmi_handler(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#134: FILE: arch/m68k/mac/macints.c:221:
+irqreturn_t mac_nmi_handler(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#134: FILE: arch/m68k/mac/macints.c:221:
+irqreturn_t mac_nmi_handler(int, void *, struct pt_regs *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#135: FILE: arch/m68k/mac/macints.c:222:
+irqreturn_t mac_debug_handler(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#135: FILE: arch/m68k/mac/macints.c:222:
+irqreturn_t mac_debug_handler(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#135: FILE: arch/m68k/mac/macints.c:222:
+irqreturn_t mac_debug_handler(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#135: FILE: arch/m68k/mac/macints.c:222:
+irqreturn_t mac_debug_handler(int, void *, struct pt_regs *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#186: FILE: arch/m68k/mac/oss.c:33:
+irqreturn_t oss_irq(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#186: FILE: arch/m68k/mac/oss.c:33:
+irqreturn_t oss_irq(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#186: FILE: arch/m68k/mac/oss.c:33:
+irqreturn_t oss_irq(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#186: FILE: arch/m68k/mac/oss.c:33:
+irqreturn_t oss_irq(int, void *, struct pt_regs *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#187: FILE: arch/m68k/mac/oss.c:34:
+irqreturn_t oss_nubus_irq(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#187: FILE: arch/m68k/mac/oss.c:34:
+irqreturn_t oss_nubus_irq(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#187: FILE: arch/m68k/mac/oss.c:34:
+irqreturn_t oss_nubus_irq(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#187: FILE: arch/m68k/mac/oss.c:34:
+irqreturn_t oss_nubus_irq(int, void *, struct pt_regs *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#191: FILE: arch/m68k/mac/oss.c:36:
+extern irqreturn_t via1_irq(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#191: FILE: arch/m68k/mac/oss.c:36:
+extern irqreturn_t via1_irq(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#191: FILE: arch/m68k/mac/oss.c:36:
+extern irqreturn_t via1_irq(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#191: FILE: arch/m68k/mac/oss.c:36:
+extern irqreturn_t via1_irq(int, void *, struct pt_regs *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#192: FILE: arch/m68k/mac/oss.c:37:
+extern irqreturn_t mac_scc_dispatch(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#192: FILE: arch/m68k/mac/oss.c:37:
+extern irqreturn_t mac_scc_dispatch(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#192: FILE: arch/m68k/mac/oss.c:37:
+extern irqreturn_t mac_scc_dispatch(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#192: FILE: arch/m68k/mac/oss.c:37:
+extern irqreturn_t mac_scc_dispatch(int, void *, struct pt_regs *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#251: FILE: arch/m68k/mac/psc.c:33:
+irqreturn_t psc_irq(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#251: FILE: arch/m68k/mac/psc.c:33:
+irqreturn_t psc_irq(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#251: FILE: arch/m68k/mac/psc.c:33:
+irqreturn_t psc_irq(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#251: FILE: arch/m68k/mac/psc.c:33:
+irqreturn_t psc_irq(int, void *, struct pt_regs *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#291: FILE: arch/m68k/mac/via.c:68:
+irqreturn_t via1_irq(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#291: FILE: arch/m68k/mac/via.c:68:
+irqreturn_t via1_irq(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#291: FILE: arch/m68k/mac/via.c:68:
+irqreturn_t via1_irq(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#291: FILE: arch/m68k/mac/via.c:68:
+irqreturn_t via1_irq(int, void *, struct pt_regs *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#292: FILE: arch/m68k/mac/via.c:69:
+irqreturn_t via2_irq(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#292: FILE: arch/m68k/mac/via.c:69:
+irqreturn_t via2_irq(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#292: FILE: arch/m68k/mac/via.c:69:
+irqreturn_t via2_irq(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#292: FILE: arch/m68k/mac/via.c:69:
+irqreturn_t via2_irq(int, void *, struct pt_regs *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#293: FILE: arch/m68k/mac/via.c:70:
+irqreturn_t via_nubus_irq(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#293: FILE: arch/m68k/mac/via.c:70:
+irqreturn_t via_nubus_irq(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#293: FILE: arch/m68k/mac/via.c:70:
+irqreturn_t via_nubus_irq(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#293: FILE: arch/m68k/mac/via.c:70:
+irqreturn_t via_nubus_irq(int, void *, struct pt_regs *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#300: FILE: arch/m68k/mac/via.c:75:
+extern irqreturn_t mac_bang(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#300: FILE: arch/m68k/mac/via.c:75:
+extern irqreturn_t mac_bang(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#300: FILE: arch/m68k/mac/via.c:75:
+extern irqreturn_t mac_bang(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#300: FILE: arch/m68k/mac/via.c:75:
+extern irqreturn_t mac_bang(int, void *, struct pt_regs *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#301: FILE: arch/m68k/mac/via.c:76:
+extern irqreturn_t mac_scc_dispatch(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#301: FILE: arch/m68k/mac/via.c:76:
+extern irqreturn_t mac_scc_dispatch(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#301: FILE: arch/m68k/mac/via.c:76:
+extern irqreturn_t mac_scc_dispatch(int, void *, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#301: FILE: arch/m68k/mac/via.c:76:
+extern irqreturn_t mac_scc_dispatch(int, void *, struct pt_regs *);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#326: FILE: arch/m68k/mac/via.c:432:
+	if (!(events = via1[vIFR] & mask))

CHECK:CAMELCASE: Avoid CamelCase: <vIFR>
#326: FILE: arch/m68k/mac/via.c:432:
+	if (!(events = via1[vIFR] & mask))

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#346: FILE: arch/m68k/mac/via.c:466:
+	if (!(events = via2[gIFR] & mask))

CHECK:CAMELCASE: Avoid CamelCase: <gIFR>
#346: FILE: arch/m68k/mac/via.c:466:
+	if (!(events = via2[gIFR] & mask))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#370: FILE: arch/m68k/mac/via.c:489:
+	if (!(events = ~via2[gBufA] & nubus_active))

CHECK:CAMELCASE: Avoid CamelCase: <gBufA>
#370: FILE: arch/m68k/mac/via.c:489:
+	if (!(events = ~via2[gBufA] & nubus_active))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#398: FILE: include/asm-m68k/macintosh.h:14:
+extern int mac_request_irq (unsigned int, irqreturn_t (*)(int, void *, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#398: FILE: include/asm-m68k/macintosh.h:14:
+extern int mac_request_irq (unsigned int, irqreturn_t (*)(int, void *, 

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#398: FILE: include/asm-m68k/macintosh.h:14:
+extern int mac_request_irq (unsigned int, irqreturn_t (*)(int, void *, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#398: FILE: include/asm-m68k/macintosh.h:14:
+extern int mac_request_irq (unsigned int, irqreturn_t (*)(int, void *, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#398: FILE: include/asm-m68k/macintosh.h:14:
+extern int mac_request_irq (unsigned int, irqreturn_t (*)(int, void *, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#398: FILE: include/asm-m68k/macintosh.h:14:
+extern int mac_request_irq (unsigned int, irqreturn_t (*)(int, void *, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#398: FILE: include/asm-m68k/macintosh.h:14:
+extern int mac_request_irq (unsigned int, irqreturn_t (*)(int, void *, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#399: FILE: include/asm-m68k/macintosh.h:15:
+extern int mac_request_irq (unsigned int, irqreturn_t (*)(int, void *, 
 				struct pt_regs *),

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000371118.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 66 warnings, 5 checks, 330 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000371118.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
