ERROR:TRAILING_WHITESPACE: trailing whitespace
#59: FILE: Documentation/pci-error-recovery.txt:9:
+well as SERR and PERR errors.  These chipsets are then able to disable $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#60: FILE: Documentation/pci-error-recovery.txt:10:
+I/O to/from the affected device, so that, for example, a bad DMA $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#63: FILE: Documentation/pci-error-recovery.txt:13:
+working condition.  This document describes a generic API form $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#68: FILE: Documentation/pci-error-recovery.txt:18:
+so that the pci card can be made operational again, possibly after $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#70: FILE: Documentation/pci-error-recovery.txt:20:
+provides a generic API for device drivers to be notified of PCI $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#73: FILE: Documentation/pci-error-recovery.txt:23:
+Preliminary sketch of API, cut-n-pasted-n-modified email from $

WARNING:TYPO_SPELLING: 'dependant' may be misspelled - perhaps 'dependent'?
#79: FILE: Documentation/pci-error-recovery.txt:29:
+"non-aware" driver, behaviour on these is platform dependant. 
                                                    ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#79: FILE: Documentation/pci-error-recovery.txt:29:
+"non-aware" driver, behaviour on these is platform dependant. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#98: FILE: Documentation/pci-error-recovery.txt:48:
+A driver doesn't have to implement all of these callbacks. The $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#99: FILE: Documentation/pci-error-recovery.txt:49:
+only mandatory one is error_detected(). If a callback is not $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#100: FILE: Documentation/pci-error-recovery.txt:50:
+implemented, the corresponding feature is considered unsupported. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#101: FILE: Documentation/pci-error-recovery.txt:51:
+For example, if mmio_enabled() and resume() aren't there, then the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#102: FILE: Documentation/pci-error-recovery.txt:52:
+driver is assumed as not doing any direct recovery and requires $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#104: FILE: Documentation/pci-error-recovery.txt:54:
+not caring about link resets, in which case, if recover is supported, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#105: FILE: Documentation/pci-error-recovery.txt:55:
+the core can try recover (but not slot_reset() unless it really did $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#106: FILE: Documentation/pci-error-recovery.txt:56:
+reset the slot). If slot_reset() is not supported, link_reset() can $

WARNING:TYPO_SPELLING: 'informations' may be misspelled - perhaps 'information'?
#128: FILE: Documentation/pci-error-recovery.txt:78:
+		  a chance to extract some diagnostic informations (see
 		                                      ^^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#147: FILE: Documentation/pci-error-recovery.txt:97:
+>>> Current ppc64 implementation assumes that a device driver will $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#149: FILE: Documentation/pci-error-recovery.txt:99:
+>>> implementation uses one kernel thread to notify all devices; $

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#161: FILE: Documentation/pci-error-recovery.txt:111:
+>>> it will panic the the kernel.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#171: FILE: Documentation/pci-error-recovery.txt:121:
+agree that they can try to recover and no automatic link reset was $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#172: FILE: Documentation/pci-error-recovery.txt:122:
+performed by the HW. If the platform can't just re-enable IOs without $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#173: FILE: Documentation/pci-error-recovery.txt:123:
+a slot reset or a link reset, it doesn't call this callback and goes $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#174: FILE: Documentation/pci-error-recovery.txt:124:
+directly to 3) or 4). All IOs should be done _synchronously_ from $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#175: FILE: Documentation/pci-error-recovery.txt:125:
+within this callback, errors triggered by them will be returned via $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#176: FILE: Documentation/pci-error-recovery.txt:126:
+the normal pci_check_whatever() api, no new error_detected() callback $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#177: FILE: Documentation/pci-error-recovery.txt:127:
+will be issued due to an error happening here. However, such an error $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#179: FILE: Documentation/pci-error-recovery.txt:129:
+invalidate the recovery that other devices on the same segment might $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#180: FILE: Documentation/pci-error-recovery.txt:130:
+have done, forcing the whole segment into one of the next states, $

WARNING:TYPO_SPELLING: 'functionnal' may be misspelled - perhaps 'functional'?
#186: FILE: Documentation/pci-error-recovery.txt:136:
+		  functionnal and thinks it is ready to start
 		  ^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#206: FILE: Documentation/pci-error-recovery.txt:156:
+^IThis is called after the link has been reset. This is typically $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#207: FILE: Documentation/pci-error-recovery.txt:157:
+a PCI Express specific state at this point and is done whenever a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#208: FILE: Documentation/pci-error-recovery.txt:158:
+non-fatal error has been detected that can be "solved" by resetting $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#209: FILE: Documentation/pci-error-recovery.txt:159:
+the link. This call informs the driver of the reset and the driver $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#210: FILE: Documentation/pci-error-recovery.txt:160:
+should check if the device appears to be in working condition. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#213: FILE: Documentation/pci-error-recovery.txt:163:
+Instead, it should just "probe" the device to check it's recoverability $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#214: FILE: Documentation/pci-error-recovery.txt:164:
+status. If all is right, then the core will call resume() once all $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#224: FILE: Documentation/pci-error-recovery.txt:174:
+^IThis is called after the slot has been soft or hard reset by the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#225: FILE: Documentation/pci-error-recovery.txt:175:
+platform.  A soft reset consists of asserting the adapter #RST line $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#226: FILE: Documentation/pci-error-recovery.txt:176:
+and then restoring the PCI BARs and PCI configuration header. If the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#228: FILE: Documentation/pci-error-recovery.txt:178:
+reset by toggling power on the slot off/on. This call gives drivers $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#229: FILE: Documentation/pci-error-recovery.txt:179:
+the chance to re-initialize the hardware (re-download firmware, etc.), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#230: FILE: Documentation/pci-error-recovery.txt:180:
+but drivers shouldn't restart normal I/O processing operations at $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#231: FILE: Documentation/pci-error-recovery.txt:181:
+this point.  (See note about interrupts; interrupts aren't guaranteed $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#232: FILE: Documentation/pci-error-recovery.txt:182:
+to be delivered until the resume() callback has been called). If all $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#233: FILE: Documentation/pci-error-recovery.txt:183:
+device drivers report success on this callback, the patform will call $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#234: FILE: Documentation/pci-error-recovery.txt:184:
+resume() to complete the error handling and let the driver restart $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#237: FILE: Documentation/pci-error-recovery.txt:187:
+A driver can still return a critical failure for this function if $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#241: FILE: Documentation/pci-error-recovery.txt:191:
+be recovered, there is nothing more that can be done;  the platform $

WARNING:TYPO_SPELLING: 'prevous' may be misspelled - perhaps 'previous'?
#255: FILE: Documentation/pci-error-recovery.txt:205:
+PCIERR_RESULT_RECOVERED from one of the 3 prevous callbacks. 
                                           ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#255: FILE: Documentation/pci-error-recovery.txt:205:
+PCIERR_RESULT_RECOVERED from one of the 3 prevous callbacks. $

WARNING:TYPO_SPELLING: 'tht' may be misspelled - perhaps 'the'?
#256: FILE: Documentation/pci-error-recovery.txt:206:
+That basically tells the driver to restart activity, tht everything 
                                                      ^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#256: FILE: Documentation/pci-error-recovery.txt:206:
+That basically tells the driver to restart activity, tht everything $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#257: FILE: Documentation/pci-error-recovery.txt:207:
+is back and running. No result code is taken into account here. If $

WARNING:TYPO_SPELLING: 'taht' may be misspelled - perhaps 'that'?
#282: FILE: Documentation/pci-error-recovery.txt:232:
+return IRQ_NOTHANDLED. It's up to the platform to deal with taht
                                                             ^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000172053.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 48 errors, 7 warnings, 0 checks, 242 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000172053.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
