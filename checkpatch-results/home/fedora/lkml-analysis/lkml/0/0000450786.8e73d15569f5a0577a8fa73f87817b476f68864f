WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
- Don't call put_device inside idedisk_cleanup(). This is apparently triggering

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#106: FILE: drivers/ide/device.c:133:
+int ata_status_poll(struct ata_device *drive, u8 good, u8 bad,
+		unsigned long timeout,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'drive->failures > drive->max_failures'
#112: FILE: drivers/ide/device.c:139:
+	if (drive->max_failures && (drive->failures > drive->max_failures)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#140: FILE: drivers/ide/device.c:167:
+EXPORT_SYMBOL(ata_status_poll);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#168: FILE: drivers/ide/ide.c:114:
+int __ata_end_request(struct ata_device *drive, struct request *rq, int uptodate, unsigned int nr_secs)
                                                                         ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#168: FILE: drivers/ide/ide.c:114:
+int __ata_end_request(struct ata_device *drive, struct request *rq, int uptodate, unsigned int nr_secs)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#207: FILE: drivers/ide/ide.c:153:
+int ata_end_request(struct ata_device *drive, struct request *rq, int uptodate)
                                                                       ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#215: FILE: drivers/ide/ide.c:160:
+	ret = __ata_end_request(drive, rq, uptodate, 0);
 	                                   ^^^^^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#272: FILE: drivers/ide/ide.c:312:
+			printk("%s: reset timed out, status=0x%02x\n", ch->name, drive->status);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#319: FILE: drivers/ide/ide.c:389:
+			ata_set_handler(drive, atapi_reset_pollfunc, HZ/20, NULL);
 			                                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#422: FILE: drivers/ide/ide.c:677:
+		if (ata_status_poll(drive, drive->ready_stat, BUSY_STAT | DRQ_STAT,
+					WAIT_READY, rq, &res)) {

CHECK:SPACING: No space is necessary after a cast
#502: FILE: drivers/ide/ide.c:983:
+	struct ata_channel *ch = (struct ata_channel *) data;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#510: FILE: drivers/ide/ide.c:989:
+		printk(KERN_ERR "%s: IRQ handler was NULL\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#510: FILE: drivers/ide/ide.c:989:
+		printk(KERN_ERR "%s: IRQ handler was NULL\n", __FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#539: FILE: drivers/ide/ide.c:1009:
+			printk(KERN_ERR "%s: %s: IRQ handler was not busy?!\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#540: FILE: drivers/ide/ide.c:1010:
+			printk(KERN_ERR "%s: %s: IRQ handler was not busy?!\n",
+					drive->name, __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#540: FILE: drivers/ide/ide.c:1010:
+					drive->name, __FUNCTION__);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#546: FILE: drivers/ide/ide.c:1016:
+			if ((wait = ch->expiry(drive, drive->rq)) != 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#602: FILE: drivers/ide/ide.c:1044:
+		if (ch->poll_timeout) {
[...]
+		} else if (drive_is_ready(drive)) {
[...]
+		} else if (drive->waiting_for_dma) {
[...]
+			ret = ide_stopped;
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#607: FILE: drivers/ide/ide.c:1049:
+			(void) ide_ack_intr(ch);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#608: FILE: drivers/ide/ide.c:1050:
+			printk("%s: lost interrupt\n", drive->name);

WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#623: FILE: drivers/ide/ide.c:1065:
+			 * because of a timeout -- we'll reenable after we
 			                                 ^^^^^^^^

CHECK:BRACES: Unbalanced braces around else statement
#646: FILE: drivers/ide/ide.c:1087:
+		} else

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#691: FILE: drivers/ide/ide-cd.c:559:
+	ata_end_request(drive, rq, uptodate);
 	                           ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#710: FILE: drivers/ide/ide-cd.c:802:
+		if (ata_status_poll(drive, DRQ_STAT, BUSY_STAT,
+					WAIT_READY, rq, &startstop))

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#767: FILE: drivers/ide/ide-disk.c:105:
+		if (drive->status & (ERR_STAT|DRQ_STAT)) {
 		                             ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#862: FILE: drivers/ide/ide-disk.c:162:
+		return ata_error(drive, rq, __FUNCTION__);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rq->nr_sectors == 1'
#873: FILE: drivers/ide/ide-disk.c:168:
+		if ((rq->nr_sectors == 1) != (drive->status & DRQ_STAT)) {

WARNING:LONG_LINE_COMMENT: line length of 109 exceeds 100 columns
#882: FILE: drivers/ide/ide-disk.c:172:
+//			printk("write: %p, rq->current_nr_sectors: %d\n", buf, (int) rq->current_nr_sectors);

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#919: FILE: drivers/ide/ide-disk.c:200:
+		if (drive->status & (ERR_STAT|DRQ_STAT)) {
 		                             ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#925: FILE: drivers/ide/ide-disk.c:203:
+			return ata_error(drive, rq, __FUNCTION__);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#959: FILE: drivers/ide/ide-disk.c:224:
+			printk("Multiread: %p, nsect: %d , rq->current_nr_sectors: %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#960: FILE: drivers/ide/ide-disk.c:225:
+			printk("Multiread: %p, nsect: %d , rq->current_nr_sectors: %d\n",
+					buf, nsect, rq->current_nr_sectors);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1035: FILE: drivers/ide/ide-disk.c:282:
+			return ata_error(drive, rq, __FUNCTION__);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1168: FILE: drivers/ide/ide-disk.c:566:
+	 * FIXME: this check doesn't make sense go! */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1241: FILE: drivers/ide/ide-disk.c:625:
+static int idedisk_open(struct inode *inode, struct file *filp, struct ata_device *drive)
                                                           ^^^^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1299: FILE: drivers/ide/ide-disk.c:1259:
+#if 0

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1324: FILE: drivers/ide/ide-floppy.c:635:
+		ata_end_request(drive, rq, uptodate);
 		                           ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1336: FILE: drivers/ide/ide-floppy.c:962:
+	if (ata_status_poll(drive, DRQ_STAT, BUSY_STAT,
+				WAIT_READY, rq, &startstop)) {

WARNING:LONG_LINE_COMMENT: line length of 119 exceeds 100 columns
#1354: FILE: drivers/ide/ide-floppy.c:979:
+		ata_set_handler (drive, idefloppy_pc_intr, IDEFLOPPY_WAIT_CMD, NULL);	/* Set the interrupt routine */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1376: FILE: drivers/ide/ide-floppy.c:1019:
+	if (ata_status_poll(drive, DRQ_STAT, BUSY_STAT,
+				WAIT_READY, rq, &startstop)) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1388: FILE: drivers/ide/ide-floppy.c:1030:
+	ireason.all=IN_BYTE(IDE_IREASON_REG);
 	           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1442: FILE: drivers/ide/ide-tape.c:2202:
+	if (ata_status_poll(drive, DRQ_STAT, BUSY_STAT,
+				WAIT_READY, rq, &startstop)) {

WARNING:LONG_LINE_COMMENT: line length of 119 exceeds 100 columns
#1458: FILE: drivers/ide/ide-tape.c:2229:
+		ata_set_handler(drive, idetape_pc_intr, IDETAPE_WAIT_CMD, NULL);	/* Set the interrupt routine */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1459: FILE: drivers/ide/ide-tape.c:2230:
+		atapi_write(drive,pc->c,12);	/* Send the actual packet */
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1459: FILE: drivers/ide/ide-tape.c:2230:
+		atapi_write(drive,pc->c,12);	/* Send the actual packet */
 		                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1490: FILE: drivers/ide/ide-taskfile.c:237:
+			if (ata_status_poll(drive, DATA_READY, drive->bad_wstat,
+						WAIT_DRQ, rq, &startstop)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1511: FILE: drivers/ide/main.c:1249:
+	printk(KERN_INFO "flushing ATA/ATAPI devices: ");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1568: FILE: drivers/ide/pdc4030.c:251:
+	if (ata_status_poll(drive, DATA_READY, BAD_W_STAT,
+				WAIT_DRQ, NULL, &startstop)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1627: FILE: drivers/ide/pdc4030.c:731:
+		if (ata_status_poll(drive, DATA_READY, drive->bad_wstat,
+					WAIT_DRQ, rq, &startstop )) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1627: FILE: drivers/ide/pdc4030.c:731:
+					WAIT_DRQ, rq, &startstop )) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1673: FILE: drivers/ide/probe.c:326:
+         *$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1735: FILE: drivers/scsi/ide-scsi.c:247:
+		ata_end_request(drive, rq, uptodate);
 		                           ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1750: FILE: drivers/scsi/ide-scsi.c:407:
+	if (ata_status_poll(drive, DRQ_STAT, BUSY_STAT,
+				WAIT_READY, rq, &startstop)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1769: FILE: drivers/scsi/ide-scsi.c:419:
+		printk (KERN_ERR "ide-scsi: (IO,CoD) != (0,1) while issuing a packet command\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1769: FILE: drivers/scsi/ide-scsi.c:419:
+		printk (KERN_ERR "ide-scsi: (IO,CoD) != (0,1) while issuing a packet command\n");

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1794: FILE: include/linux/ide.h:605:
+extern int __ata_end_request(struct ata_device *, struct request *, int, unsigned int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_device *' should also have an identifier name
#1794: FILE: include/linux/ide.h:605:
+extern int __ata_end_request(struct ata_device *, struct request *, int, unsigned int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#1794: FILE: include/linux/ide.h:605:
+extern int __ata_end_request(struct ata_device *, struct request *, int, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1794: FILE: include/linux/ide.h:605:
+extern int __ata_end_request(struct ata_device *, struct request *, int, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#1794: FILE: include/linux/ide.h:605:
+extern int __ata_end_request(struct ata_device *, struct request *, int, unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1795: FILE: include/linux/ide.h:606:
+extern int ata_end_request(struct ata_device *drive, struct request *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#1795: FILE: include/linux/ide.h:606:
+extern int ata_end_request(struct ata_device *drive, struct request *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1795: FILE: include/linux/ide.h:606:
+extern int ata_end_request(struct ata_device *drive, struct request *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1815: FILE: include/linux/ide.h:830:
+extern int ata_busy_poll(struct ata_device *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_device *' should also have an identifier name
#1815: FILE: include/linux/ide.h:830:
+extern int ata_busy_poll(struct ata_device *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#1815: FILE: include/linux/ide.h:830:
+extern int ata_busy_poll(struct ata_device *, unsigned long);

ERROR:SPACING: space prohibited after that open parenthesis '('
#1817: FILE: include/linux/ide.h:832:
+extern int ata_status_poll( struct ata_device *, u8, u8,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1817: FILE: include/linux/ide.h:832:
+extern int ata_status_poll( struct ata_device *, u8, u8,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_device *' should also have an identifier name
#1817: FILE: include/linux/ide.h:832:
+extern int ata_status_poll( struct ata_device *, u8, u8,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#1817: FILE: include/linux/ide.h:832:
+extern int ata_status_poll( struct ata_device *, u8, u8,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#1817: FILE: include/linux/ide.h:832:
+extern int ata_status_poll( struct ata_device *, u8, u8,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#1817: FILE: include/linux/ide.h:832:
+extern int ata_status_poll( struct ata_device *, u8, u8,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_startstop_t *' should also have an identifier name
#1817: FILE: include/linux/ide.h:832:
+extern int ata_status_poll( struct ata_device *, u8, u8,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1818: FILE: include/linux/ide.h:833:
+extern int ata_status_poll( struct ata_device *, u8, u8,
+		unsigned long, struct request *rq, ide_startstop_t *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000450786.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 42 warnings, 26 checks, 1659 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000450786.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
