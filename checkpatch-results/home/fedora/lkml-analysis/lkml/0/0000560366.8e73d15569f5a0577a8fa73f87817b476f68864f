WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
> > It contains the TIOCTTYGSTRUCT syscall which returns a struct. Of course,

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#83: FILE: proc/proc_tty.c:27:
+static int real_tty_read_proc(char *page, char **start, off_t off,
+				int count, int *eof, void *data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#95: FILE: proc/proc_tty.c:137:
+static int real_tty_read_proc(char *page, char **start, off_t off,
+				int count, int *eof, void *data)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#97: FILE: proc/proc_tty.c:139:
+	struct	file * zero = fcheck(0); /* of current task */

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#98: FILE: proc/proc_tty.c:140:
+	struct	tty_struct * tty = NULL;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#108: FILE: proc/proc_tty.c:150:
+	len += sprintf(page+len, "%u\n", dev);
 	                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#110: FILE: proc/proc_tty.c:152:
+	if (off >= len+begin)
 	              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#112: FILE: proc/proc_tty.c:154:
+	*start = page + (off-begin);
 	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#113: FILE: proc/proc_tty.c:155:
+	return ((count < begin+len-off) ? count : begin+len-off);
 	                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#113: FILE: proc/proc_tty.c:155:
+	return ((count < begin+len-off) ? count : begin+len-off);
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#113: FILE: proc/proc_tty.c:155:
+	return ((count < begin+len-off) ? count : begin+len-off);
 	                                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#113: FILE: proc/proc_tty.c:155:
+	return ((count < begin+len-off) ? count : begin+len-off);
 	                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#125: FILE: proc/proc_tty.c:209:
+	create_proc_read_entry("tty/tty", 0, 0, real_tty_read_proc,NULL);
 	                                                          ^

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#148: FILE: proc/proc_tty.c:27:
+static int real_tty_read_proc(char *page, char **start, off_t off,
+				 int count, int *eof, void *data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#160: FILE: proc/proc_tty.c:137:
+static int real_tty_read_proc(char *page, char **start, off_t off,
+				 int count, int *eof, void *data)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#162: FILE: proc/proc_tty.c:139:
+	struct	file * zero = fcheck_task(current, 0);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#163: FILE: proc/proc_tty.c:140:
+	struct	tty_struct * tty = NULL;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#173: FILE: proc/proc_tty.c:150:
+	len += sprintf(page+len, "%u\n", dev);
 	                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#175: FILE: proc/proc_tty.c:152:
+	if (off >= len+begin)
 	              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#177: FILE: proc/proc_tty.c:154:
+	*start = page + (off-begin);
 	                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#178: FILE: proc/proc_tty.c:155:
+	return ((count < begin+len-off) ? count : begin+len-off);
 	                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#178: FILE: proc/proc_tty.c:155:
+	return ((count < begin+len-off) ? count : begin+len-off);
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#178: FILE: proc/proc_tty.c:155:
+	return ((count < begin+len-off) ? count : begin+len-off);
 	                                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#178: FILE: proc/proc_tty.c:155:
+	return ((count < begin+len-off) ? count : begin+len-off);
 	                                                   ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000560366.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 3 warnings, 18 checks, 109 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000560366.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
