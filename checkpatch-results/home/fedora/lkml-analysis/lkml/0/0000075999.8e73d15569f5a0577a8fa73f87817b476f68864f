WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
The attached patch makes it possible for the NFS filesystem to make use of the

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#37: 
Signed-Off-By: David Howells <dhowells@redhat.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#69: FILE: fs/Kconfig:1427:
+config NFS_FSCACHE
+	bool "Provide NFS client caching support (EXPERIMENTAL)"
+	depends on NFS_FS && FSCACHE && EXPERIMENTAL
+	help
+	  Say Y here if you want NFS data to be cached locally on disc through
+	  the general filesystem cache manager
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%4hx' is unnecessary
#170: FILE: fs/nfs/client.c:1245:
+	seq_printf(m, "v%d %02x%02x%02x%02x %4hx %3d %s %s %s\n",
 		   clp->nfsversion,
 		   NIPQUAD(clp->addr.sin_addr),
 		   ntohs(clp->addr.sin_port),
 		   atomic_read(&clp->usage),
 		   auth,
+#ifdef CONFIG_NFS_FSCACHE
+		   clp->fscache ? "yes" : "no ",
+#else
+		   "no ",
+#endif
 		   clp->hostname);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#210: FILE: fs/nfs/file.c:264:
+}
+static struct vm_operations_struct nfs_fs_vm_operations = {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct vm_operations_struct should normally be const
#210: FILE: fs/nfs/file.c:264:
+static struct vm_operations_struct nfs_fs_vm_operations = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "fscache"
#226: FILE: fs/nfs/file.c:286:
+	if (NFS_I(inode)->fscache != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#398: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#403: FILE: fs/nfs/nfs-fscache.c:1:
+/* nfs-fscache.c: NFS filesystem cache interface

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#414: FILE: fs/nfs/nfs-fscache.c:12:
+
+

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#446: FILE: fs/nfs/nfs-fscache.c:44:
+static const uint8_t nfs_cache_ipv6_wrapper_for_ipv4[12] = {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#452: FILE: fs/nfs/nfs-fscache.c:50:
+	uint16_t nfsversion;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#453: FILE: fs/nfs/nfs-fscache.c:51:
+	uint16_t port;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#456: FILE: fs/nfs/nfs-fscache.c:54:
+			uint8_t		ipv6wrapper[12];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#468: FILE: fs/nfs/nfs-fscache.c:66:
+	uint16_t len = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#475: FILE: fs/nfs/nfs-fscache.c:73:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#496: FILE: fs/nfs/nfs-fscache.c:94:
+		printk(KERN_WARNING "NFS: Unknown network family '%d'\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#497: FILE: fs/nfs/nfs-fscache.c:95:
+		printk(KERN_WARNING "NFS: Unknown network family '%d'\n",
+			clp->addr.sin_family);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#509: FILE: fs/nfs/nfs-fscache.c:107:
+^I.type ^I^I= FSCACHE_COOKIE_TYPE_INDEX,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#514: FILE: fs/nfs/nfs-fscache.c:112:
+static uint16_t nfs_fh_get_key(const void *cookie_netfs_data,
+		void *buffer, uint16_t bufmax)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#517: FILE: fs/nfs/nfs-fscache.c:115:
+	uint16_t nsize;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'nfs_fh_mark_pages_cached', this function's name, in a string
#537: FILE: fs/nfs/nfs-fscache.c:135:
+	dprintk("NFS: nfs_fh_mark_pages_cached: nfs_inode 0x%p pages %ld\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'nfs_fh_now_uncached', this function's name, in a string
#561: FILE: fs/nfs/nfs-fscache.c:159:
+	dprintk("NFS: nfs_fh_now_uncached: nfs_inode 0x%p\n", nfsi);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#600: FILE: fs/nfs/nfs-fscache.h:1:
+/* nfs-fscache.h: NFS filesystem cache interface definitions

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#625: FILE: fs/nfs/nfs-fscache.h:26:
+extern void nfs_invalidatepage(struct page *, unsigned long);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#625: FILE: fs/nfs/nfs-fscache.h:26:
+extern void nfs_invalidatepage(struct page *, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#625: FILE: fs/nfs/nfs-fscache.h:26:
+extern void nfs_invalidatepage(struct page *, unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#626: FILE: fs/nfs/nfs-fscache.h:27:
+extern int nfs_releasepage(struct page *, gfp_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#626: FILE: fs/nfs/nfs-fscache.h:27:
+extern int nfs_releasepage(struct page *, gfp_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gfp_t' should also have an identifier name
#626: FILE: fs/nfs/nfs-fscache.h:27:
+extern int nfs_releasepage(struct page *, gfp_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#627: FILE: fs/nfs/nfs-fscache.h:28:
+extern int nfs_mkwrite(struct page *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#627: FILE: fs/nfs/nfs-fscache.h:28:
+extern int nfs_mkwrite(struct page *);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#645: FILE: fs/nfs/nfs-fscache.h:46:
+	clp->fscache = fscache_acquire_cookie(nfs_cache_netfs.primary_index,
+			       &nfs_cache_server_index_def, clp);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#648: FILE: fs/nfs/nfs-fscache.h:49:
+		printk(KERN_WARNING

ERROR:SPACING: space required after that ',' (ctx:VxV)
#651: FILE: fs/nfs/nfs-fscache.h:52:
+		dfprintk(FSCACHE,"NFS: nfs4 cookie (0x%p/0x%p)\n",
 		                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#666: FILE: fs/nfs/nfs-fscache.h:67:
+			printk(KERN_WARNING "NFS: No Fscache cookie. Turning "

WARNING:SPLIT_STRING: quoted string split across lines
#667: FILE: fs/nfs/nfs-fscache.h:68:
+			printk(KERN_WARNING "NFS: No Fscache cookie. Turning "
+			       "Fscache off!\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#670: FILE: fs/nfs/nfs-fscache.h:71:
+^I^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#671: FILE: fs/nfs/nfs-fscache.h:72:
+	dfprintk(FSCACHE,"NFS: cookie (0x%p/0x%p)\n", clp, clp->fscache);
 	                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#680: FILE: fs/nfs/nfs-fscache.h:81:
+	nfsi->fscache = fscache_acquire_cookie(clp->fscache,
+		&nfs_cache_fh_index_def, nfsi);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#684: FILE: fs/nfs/nfs-fscache.h:85:
+	dfprintk(FSCACHE, "NFS: fhget new cookie (0x%p/0x%p/0x%p)\n",
+		sb, nfsi, nfsi->fscache);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#690: FILE: fs/nfs/nfs-fscache.h:91:
+	dfprintk(FSCACHE,"NFS: killing cookie (0x%p/0x%p)\n",
 	                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#691: FILE: fs/nfs/nfs-fscache.h:92:
+	dfprintk(FSCACHE,"NFS: killing cookie (0x%p/0x%p)\n",
+		clp, clp->fscache);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#712: FILE: fs/nfs/nfs-fscache.h:113:
+		nfsi->fscache = fscache_acquire_cookie(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#728: FILE: fs/nfs/nfs-fscache.h:129:
+	dfprintk(FSCACHE, "NFS: clear cookie (0x%p/0x%p)\n",
+			nfsi, nfsi->fscache);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#737: FILE: fs/nfs/nfs-fscache.h:138:
+	dfprintk(FSCACHE,"NFS: zapping cookie (0x%p/0x%p)\n",
 	                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#738: FILE: fs/nfs/nfs-fscache.h:139:
+	dfprintk(FSCACHE,"NFS: zapping cookie (0x%p/0x%p)\n",
+		nfsi, nfsi->fscache);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#758: FILE: fs/nfs/nfs-fscache.h:159:
+static inline void nfs_set_fscsize(struct nfs_server *server, struct nfs_inode *nfsi, loff_t i_size) {}

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#786: FILE: fs/nfs/pagelist.c:89:
+	BUG_ON(PageNfsWriting(page));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#821: FILE: fs/nfs/read.c:115:
+^Idfprintk(FSCACHE, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#822: FILE: fs/nfs/read.c:116:
+^I^I"NFS:     readpage_to_fscache_complete (p:%p(i:%lx f:%lx)/%d)\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#822: FILE: fs/nfs/read.c:116:
+	dfprintk(FSCACHE, 
+		"NFS:     readpage_to_fscache_complete (p:%p(i:%lx f:%lx)/%d)\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#834: FILE: fs/nfs/read.c:128:
+	dfprintk(FSCACHE, "NFS: readpage_to_fscache(fsc:%p/p:%p(i:%lx f:%lx)/%d)\n",
+		NFS_I(inode)->fscache, page, page->index, page->flags, sync);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#837: FILE: fs/nfs/read.c:131:
+		BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#839: FILE: fs/nfs/read.c:133:
+	ret = fscache_write_page(NFS_I(inode)->fscache, page,
+		nfs_readpage_to_fscache_complete, NULL, GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#840: FILE: fs/nfs/read.c:134:
+^Idfprintk(FSCACHE, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#841: FILE: fs/nfs/read.c:135:
+^I^I"NFS:     readpage_to_fscache: p:%p(i:%lu f:%lx) ret %d\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#841: FILE: fs/nfs/read.c:135:
+	dfprintk(FSCACHE, 
+		"NFS:     readpage_to_fscache: p:%p(i:%lu f:%lx) ret %d\n", 

CHECK:BRACES: braces {} should be used on all arms of this statement
#843: FILE: fs/nfs/read.c:137:
+	if (ret != 0) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#849: FILE: fs/nfs/read.c:143:
+	} else

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#856: FILE: fs/nfs/read.c:150:
+	BUG();

CHECK:LINE_SPACING: Please don't use multiple blank lines
#860: FILE: fs/nfs/read.c:154:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#896: FILE: fs/nfs/read.c:603:
 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#904: FILE: fs/nfs/read.c:611:
+^Idfprintk(FSCACHE, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#905: FILE: fs/nfs/read.c:612:
+	dfprintk(FSCACHE, 
+		"NFS: readpage_from_fscache_complete (0x%p/0x%p/%d)\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#924: FILE: fs/nfs/read.c:631:
+^Idfprintk(FSCACHE, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#925: FILE: fs/nfs/read.c:632:
+	dfprintk(FSCACHE, 
+		"NFS: readpage_from_fscache(fsc:%p/p:%p(i:%lx f:%lx)/0x%p)\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#936: FILE: fs/nfs/read.c:643:
+^I^Idfprintk(FSCACHE, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#937: FILE: fs/nfs/read.c:644:
+		dfprintk(FSCACHE, 
+			"NFS:    readpage_from_fscache: BIO submitted\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#943: FILE: fs/nfs/read.c:650:
+^I^Idfprintk(FSCACHE, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#944: FILE: fs/nfs/read.c:651:
+		dfprintk(FSCACHE, 
+			"NFS:    readpage_from_fscache error %d\n", ret);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#951: FILE: fs/nfs/read.c:658:
+    return ret;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#956: FILE: fs/nfs/read.c:663:
+int nfs_getpages_from_fscache(struct inode *inode,
+	struct address_space *mapping,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#958: FILE: fs/nfs/read.c:665:
+	unsigned *nr_pages)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#965: FILE: fs/nfs/read.c:672:
+^Idfprintk(FSCACHE, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#966: FILE: fs/nfs/read.c:673:
+	dfprintk(FSCACHE, 
+		"NFS: nfs_getpages_from_fscache (0x%p/%u/0x%p)\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'nfs_getpages_from_fscache', this function's name, in a string
#966: FILE: fs/nfs/read.c:673:
+		"NFS: nfs_getpages_from_fscache (0x%p/%u/0x%p)\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#970: FILE: fs/nfs/read.c:677:
+^I  ^Imapping, pages, nr_pages, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#970: FILE: fs/nfs/read.c:677:
+^I  ^Imapping, pages, nr_pages, $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#970: FILE: fs/nfs/read.c:677:
+^I  ^Imapping, pages, nr_pages, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#970: FILE: fs/nfs/read.c:677:
+	ret = fscache_read_or_alloc_pages(NFS_I(inode)->fscache,
+	  	mapping, pages, nr_pages, 

ERROR:CODE_INDENT: code indent should use tabs where possible
#971: FILE: fs/nfs/read.c:678:
+^I  ^Infs_readpage_from_fscache_complete,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#971: FILE: fs/nfs/read.c:678:
+^I  ^Infs_readpage_from_fscache_complete,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#972: FILE: fs/nfs/read.c:679:
+^I  ^INULL, mapping_gfp_mask(mapping));$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#972: FILE: fs/nfs/read.c:679:
+^I  ^INULL, mapping_gfp_mask(mapping));$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#974: FILE: fs/nfs/read.c:681:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#977: FILE: fs/nfs/read.c:684:
+		BUG_ON(!list_empty(pages));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#978: FILE: fs/nfs/read.c:685:
+		BUG_ON(*nr_pages != 0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#979: FILE: fs/nfs/read.c:686:
+^I^Idfprintk(FSCACHE, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#980: FILE: fs/nfs/read.c:687:
+		dfprintk(FSCACHE, 
+			"NFS: nfs_getpages_from_fscache: BIO submitted\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'nfs_getpages_from_fscache', this function's name, in a string
#980: FILE: fs/nfs/read.c:687:
+			"NFS: nfs_getpages_from_fscache: BIO submitted\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#987: FILE: fs/nfs/read.c:694:
+^I^Idfprintk(FSCACHE, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#988: FILE: fs/nfs/read.c:695:
+		dfprintk(FSCACHE, 
+			"NFS: nfs_getpages_from_fscache: no page: %d\n", ret);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'nfs_getpages_from_fscache', this function's name, in a string
#988: FILE: fs/nfs/read.c:695:
+			"NFS: nfs_getpages_from_fscache: no page: %d\n", ret);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#992: FILE: fs/nfs/read.c:699:
+^I^Idfprintk(FSCACHE, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#993: FILE: fs/nfs/read.c:700:
+		dfprintk(FSCACHE, 
+			"NFS: nfs_getpages_from_fscache: ret  %d\n", ret);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'nfs_getpages_from_fscache', this function's name, in a string
#993: FILE: fs/nfs/read.c:700:
+			"NFS: nfs_getpages_from_fscache: ret  %d\n", ret);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1002: FILE: fs/nfs/read.c:709:
+int nfs_getpages_from_fscache(struct inode *inode,
+	struct address_space *mapping,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#1004: FILE: fs/nfs/read.c:711:
+	unsigned *nr_pages)

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1017: FILE: fs/nfs/read.c:753:
+#if 0

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1059: FILE: fs/nfs/read.c:877:
+	BUG_ON(!PageLocked(page));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1064: FILE: fs/nfs/read.c:882:
+		BUG_ON(nfsi->fscache == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!nfsi->fscache"
#1064: FILE: fs/nfs/read.c:882:
+		BUG_ON(nfsi->fscache == NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1067: FILE: fs/nfs/read.c:885:
+		dfprintk(FSCACHE,
+			"NFS: fscache invalidatepage (0x%p/0x%p/0x%p)\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1071: FILE: fs/nfs/read.c:889:
+			BUG_ON(!PageLocked(page));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1082: FILE: fs/nfs/read.c:900:
+	BUG_ON(nfsi->fscache == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!nfsi->fscache"
#1082: FILE: fs/nfs/read.c:900:
+	BUG_ON(nfsi->fscache == NULL);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1117: FILE: fs/nfs/super.c:517:
+	 * invalid */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1120: FILE: fs/nfs/super.c:520:
+		printk(KERN_WARNING

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1134: FILE: fs/nfs/super.c:836:
+	 * invalid */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1137: FILE: fs/nfs/super.c:839:
+		printk(KERN_WARNING

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1243: FILE: fs/nfs/write.c:313:
+}
+static inline void

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1246: FILE: fs/nfs/write.c:316:
+^Iint ret; $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1253: FILE: fs/nfs/write.c:323:
+		dfprintk(FSCACHE,
+			"NFS: writepage_to_fscache (0x%p/0x%p/0x%p)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1261: FILE: fs/nfs/write.c:331:
+			dfprintk(FSCACHE,
+				"NFS:    fscache_write_page error %d\n", ret);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1262: FILE: fs/nfs/write.c:332:
+^I^I^I^Ifscache_uncache_page(NFS_I(inode)->fscache, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1263: FILE: fs/nfs/write.c:333:
+				fscache_uncache_page(NFS_I(inode)->fscache, 
+				page);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1271: FILE: fs/nfs/write.c:341:
+	BUG_ON(PageNfsCached(page));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000075999.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 24 errors, 46 warnings, 48 checks, 1186 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000075999.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
