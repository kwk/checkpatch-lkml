WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#82: 
diff -uNr -Xdontdiff ../master/linux-2.5.3/include/linux/kthread.h linux/include/linux/kthread.h

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#86: FILE: include/linux/kthread.h:1:
+#ifndef _LINUX_KTHREAD_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kthread *' should also have an identifier name
#99: FILE: include/linux/kthread.h:14:
+	int (*init)(struct kthread *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kthread *' should also have an identifier name
#100: FILE: include/linux/kthread.h:15:
+	void (*cleanup)(struct kthread *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kthread *' should also have an identifier name
#101: FILE: include/linux/kthread.h:16:
+	void (*main)(struct kthread *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#104: FILE: include/linux/kthread.h:19:
+extern int kthread_start(struct kthread *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kthread *' should also have an identifier name
#104: FILE: include/linux/kthread.h:19:
+extern int kthread_start(struct kthread *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#105: FILE: include/linux/kthread.h:20:
+extern void kthread_stop(struct kthread *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kthread *' should also have an identifier name
#105: FILE: include/linux/kthread.h:20:
+extern void kthread_stop(struct kthread *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#106: FILE: include/linux/kthread.h:21:
+extern int kthread_running(struct kthread *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kthread *' should also have an identifier name
#106: FILE: include/linux/kthread.h:21:
+extern int kthread_running(struct kthread *);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#131: FILE: kernel/kthread.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#146: FILE: kernel/kthread.c:16:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#147: FILE: kernel/kthread.c:17:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:INCLUDE_LINUX: Use #include <linux/bitops.h> instead of <asm/bitops.h>
#159: FILE: kernel/kthread.c:29:
+#include <asm/bitops.h>

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#162: FILE: kernel/kthread.c:32:
+	(CLONE_FS|CLONE_FILES|CLONE_SIGHAND)
 	         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#162: FILE: kernel/kthread.c:32:
+	(CLONE_FS|CLONE_FILES|CLONE_SIGHAND)
 	                     ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#164: FILE: kernel/kthread.c:34:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#194: FILE: kernel/kthread.c:64:
+	siginitsetinv(&current->blocked,
+			sigmask(SIGHUP) | sigmask(SIGKILL) |

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#229: FILE: kernel/kthread.c:99:
+	if ((pid = kernel_thread(kthread_main, kth, KTHREAD_FLAGS)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#265: FILE: kernel/kthread.c:135:
+EXPORT_SYMBOL(kthread_start);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#266: FILE: kernel/kthread.c:136:
+EXPORT_SYMBOL(kthread_stop);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#267: FILE: kernel/kthread.c:137:
+EXPORT_SYMBOL(kthread_running);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000479835.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 13 warnings, 7 checks, 174 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000479835.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
