WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#124: FILE: arch/i386/pci/fixup.c:240:
+static void __devinit pci_fixup_video(struct pci_dev *pdev)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#129: FILE: arch/i386/pci/fixup.c:245:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#132: FILE: arch/i386/pci/fixup.c:248:
+^I       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#191: FILE: drivers/pci/pci-sysfs.c:181:
+^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#208: FILE: drivers/pci/pci-sysfs.c:198:
+	u32 rom_addr;
+	pci_read_config_dword(dev, dev->rom_base_reg, &rom_addr);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#220: FILE: drivers/pci/pci-sysfs.c:210:
+ * the shadow BIOS copy will be returned instead of the $

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#223: FILE: drivers/pci/pci-sysfs.c:213:
+unsigned char *
+pci_map_rom(struct pci_dev *dev, size_t *size) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#228: FILE: drivers/pci/pci-sysfs.c:218:
+^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#230: FILE: drivers/pci/pci-sysfs.c:220:
+^I^Istart = (loff_t)0xC0000; ^I/* primary video rom always starts here */$

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#235: FILE: drivers/pci/pci-sysfs.c:225:
+		return (unsigned char *)pci_resource_start(dev, PCI_ROM_RESOURCE);
+	} else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#240: FILE: drivers/pci/pci-sysfs.c:230:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#244: FILE: drivers/pci/pci-sysfs.c:234:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#251: FILE: drivers/pci/pci-sysfs.c:241:
+^I}^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#255: FILE: drivers/pci/pci-sysfs.c:245:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#266: FILE: drivers/pci/pci-sysfs.c:256:
+ * the shadow BIOS copy will be returned instead of the $

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#269: FILE: drivers/pci/pci-sysfs.c:259:
+unsigned char *
+pci_map_rom_copy(struct pci_dev *dev, size_t *size) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#273: FILE: drivers/pci/pci-sysfs.c:263:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#277: FILE: drivers/pci/pci-sysfs.c:267:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#280: FILE: drivers/pci/pci-sysfs.c:270:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#282: FILE: drivers/pci/pci-sysfs.c:272:
+^Iif (!res->start) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#285: FILE: drivers/pci/pci-sysfs.c:275:
+^Ires->end = res->start + *size; $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#286: FILE: drivers/pci/pci-sysfs.c:276:
+	memcpy((void*)res->start, rom, *size);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#289: FILE: drivers/pci/pci-sysfs.c:279:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#300: FILE: drivers/pci/pci-sysfs.c:290:
+void $

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#300: FILE: drivers/pci/pci-sysfs.c:290:
+void 
+pci_unmap_rom(struct pci_dev *dev, unsigned char *rom) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#306: FILE: drivers/pci/pci-sysfs.c:296:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#308: FILE: drivers/pci/pci-sysfs.c:298:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#321: FILE: drivers/pci/pci-sysfs.c:311:
+void $

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#321: FILE: drivers/pci/pci-sysfs.c:311:
+void 
+pci_remove_rom(struct pci_dev *dev) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#324: FILE: drivers/pci/pci-sysfs.c:314:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#344: FILE: drivers/pci/pci-sysfs.c:334:
+	struct pci_dev *dev = to_pci_dev(container_of(kobj,struct device,kobj));
 	                                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#344: FILE: drivers/pci/pci-sysfs.c:334:
+	struct pci_dev *dev = to_pci_dev(container_of(kobj,struct device,kobj));
 	                                                                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#347: FILE: drivers/pci/pci-sysfs.c:337:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#351: FILE: drivers/pci/pci-sysfs.c:341:
+^I^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#352: FILE: drivers/pci/pci-sysfs.c:342:
+	if (off >= size)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#354: FILE: drivers/pci/pci-sysfs.c:344:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#357: FILE: drivers/pci/pci-sysfs.c:347:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#361: FILE: drivers/pci/pci-sysfs.c:351:
+^I^I$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#376: FILE: drivers/pci/pci-sysfs.c:380:
+		.mode = S_IRUSR,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:LINE_SPACING: Missing a blank line after declarations
#393: FILE: drivers/pci/pci-sysfs.c:397:
+		unsigned char *rom;
+		rom = pci_map_rom(pdev, &rom_attr.size);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#420: FILE: drivers/pci/pci-sysfs.c:424:
+EXPORT_SYMBOL(pci_map_rom);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#421: FILE: drivers/pci/pci-sysfs.c:425:
+EXPORT_SYMBOL(pci_map_rom_copy);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#422: FILE: drivers/pci/pci-sysfs.c:426:
+EXPORT_SYMBOL(pci_unmap_rom);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#430: FILE: drivers/pci/pci.h:6:
+extern void pci_remove_sysfs_dev_files(struct pci_dev *pdev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#449: FILE: drivers/pci/remove.c:23:
+			kfree((void*)res->start);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000261219.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 33 errors, 9 warnings, 3 checks, 352 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000261219.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
