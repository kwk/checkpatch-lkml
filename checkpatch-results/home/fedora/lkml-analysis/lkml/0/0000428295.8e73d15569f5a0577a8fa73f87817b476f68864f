WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#23: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#24: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#25: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#26: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#27: 
#	           ChangeSet	1.660.1.3 -> 1.660.1.4

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#28: 
#	drivers/usb/core/usb.c	1.88    -> 1.89   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#29: 
#	drivers/usb/core/Makefile	1.11    -> 1.12   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#30: 
#	               (new)	        -> 1.1     drivers/usb/core/usb.h

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#31: 
#	               (new)	        -> 1.1     drivers/usb/core/driverfs.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#32: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#33: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#34: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#35: 
# 02/09/30	greg@kroah.com	1.660.1.4

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#36: 
# USB: add a lot more driverfs files for all usb devices.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#37: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#38: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#40: 
--- a/drivers/usb/core/Makefile	Mon Sep 30 17:25:40 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#55: FILE: drivers/usb/core/driverfs.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#56: FILE: drivers/usb/core/driverfs.c:2:
+ * drivers/usb/core/driverfs.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#66: FILE: drivers/usb/core/driverfs.c:12:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'field' - possible side-effects?
#80: FILE: drivers/usb/core/driverfs.c:26:
+#define usb_actconfig_attr(field, format_string)			\
+static ssize_t								\
+show_##field (struct device *dev, char *buf, size_t count, loff_t off)	\
+{									\
+	struct usb_device *udev;					\
+									\
+	if (off)							\
+		return 0;						\
+									\
+	udev = to_usb_device (dev);					\
+	return sprintf (buf, format_string, udev->actconfig->field);	\
+}									\
+static DEVICE_ATTR(field, S_IRUGO, show_##field, NULL);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'field' may be better as '(field)' to avoid precedence issues
#80: FILE: drivers/usb/core/driverfs.c:26:
+#define usb_actconfig_attr(field, format_string)			\
+static ssize_t								\
+show_##field (struct device *dev, char *buf, size_t count, loff_t off)	\
+{									\
+	struct usb_device *udev;					\
+									\
+	if (off)							\
+		return 0;						\
+									\
+	udev = to_usb_device (dev);					\
+	return sprintf (buf, format_string, udev->actconfig->field);	\
+}									\
+static DEVICE_ATTR(field, S_IRUGO, show_##field, NULL);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#80: FILE: drivers/usb/core/driverfs.c:26:
+#define usb_actconfig_attr(field, format_string)			\
+static ssize_t								\
+show_##field (struct device *dev, char *buf, size_t count, loff_t off)	\
+{									\
+	struct usb_device *udev;					\
+									\
+	if (off)							\
+		return 0;						\
+									\
+	udev = to_usb_device (dev);					\
+	return sprintf (buf, format_string, udev->actconfig->field);	\
+}									\
+static DEVICE_ATTR(field, S_IRUGO, show_##field, NULL);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#82: FILE: drivers/usb/core/driverfs.c:28:
+show_##field (struct device *dev, char *buf, size_t count, loff_t off)	\

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#89: FILE: drivers/usb/core/driverfs.c:35:
+	udev = to_usb_device (dev);					\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#90: FILE: drivers/usb/core/driverfs.c:36:
+	return sprintf (buf, format_string, udev->actconfig->field);	\

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#92: FILE: drivers/usb/core/driverfs.c:38:
+static DEVICE_ATTR(field, S_IRUGO, show_##field, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#94: FILE: drivers/usb/core/driverfs.c:40:
+usb_actconfig_attr (bNumInterfaces, "%2d\n")

CHECK:CAMELCASE: Avoid CamelCase: <bNumInterfaces>
#94: FILE: drivers/usb/core/driverfs.c:40:
+usb_actconfig_attr (bNumInterfaces, "%2d\n")

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#95: FILE: drivers/usb/core/driverfs.c:41:
+usb_actconfig_attr (bConfigurationValue, "%2d\n")

CHECK:CAMELCASE: Avoid CamelCase: <bConfigurationValue>
#95: FILE: drivers/usb/core/driverfs.c:41:
+usb_actconfig_attr (bConfigurationValue, "%2d\n")

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#96: FILE: drivers/usb/core/driverfs.c:42:
+usb_actconfig_attr (bmAttributes, "%2x\n")

CHECK:CAMELCASE: Avoid CamelCase: <bmAttributes>
#96: FILE: drivers/usb/core/driverfs.c:42:
+usb_actconfig_attr (bmAttributes, "%2x\n")

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#97: FILE: drivers/usb/core/driverfs.c:43:
+usb_actconfig_attr (MaxPower, "%3dmA\n")

CHECK:CAMELCASE: Avoid CamelCase: <MaxPower>
#97: FILE: drivers/usb/core/driverfs.c:43:
+usb_actconfig_attr (MaxPower, "%3dmA\n")

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#100: FILE: drivers/usb/core/driverfs.c:46:
+static ssize_t show_product (struct device *dev, char *buf, size_t count, loff_t off)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#107: FILE: drivers/usb/core/driverfs.c:53:
+	udev = to_usb_device (dev);

CHECK:CAMELCASE: Avoid CamelCase: <iProduct>
#109: FILE: drivers/usb/core/driverfs.c:55:
+	len = usb_string(udev, udev->descriptor.iProduct, buf, PAGE_SIZE);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#113: FILE: drivers/usb/core/driverfs.c:59:
+	buf[len+1] = 0;
 	       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#114: FILE: drivers/usb/core/driverfs.c:60:
+	return len+1;
 	          ^

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_product' to 'product_show'
#115: FILE: drivers/usb/core/driverfs.c:61:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

ERROR:SPACING: space required after that ',' (ctx:VxV)
#116: FILE: drivers/usb/core/driverfs.c:62:
+static DEVICE_ATTR(product,S_IRUGO,show_product,NULL);
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#116: FILE: drivers/usb/core/driverfs.c:62:
+static DEVICE_ATTR(product,S_IRUGO,show_product,NULL);
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#116: FILE: drivers/usb/core/driverfs.c:62:
+static DEVICE_ATTR(product,S_IRUGO,show_product,NULL);
                                                ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#116: FILE: drivers/usb/core/driverfs.c:62:
+static DEVICE_ATTR(product,S_IRUGO,show_product,NULL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#119: FILE: drivers/usb/core/driverfs.c:65:
+show_manufacturer (struct device *dev, char *buf, size_t count, loff_t off)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#126: FILE: drivers/usb/core/driverfs.c:72:
+	udev = to_usb_device (dev);

CHECK:CAMELCASE: Avoid CamelCase: <iManufacturer>
#128: FILE: drivers/usb/core/driverfs.c:74:
+	len = usb_string(udev, udev->descriptor.iManufacturer, buf, PAGE_SIZE);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#132: FILE: drivers/usb/core/driverfs.c:78:
+	buf[len+1] = 0;
 	       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#133: FILE: drivers/usb/core/driverfs.c:79:
+	return len+1;
 	          ^

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_manufacturer' to 'manufacturer_show'
#134: FILE: drivers/usb/core/driverfs.c:80:
+}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#135: FILE: drivers/usb/core/driverfs.c:81:
+static DEVICE_ATTR(manufacturer,S_IRUGO,show_manufacturer,NULL);
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#135: FILE: drivers/usb/core/driverfs.c:81:
+static DEVICE_ATTR(manufacturer,S_IRUGO,show_manufacturer,NULL);
                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#135: FILE: drivers/usb/core/driverfs.c:81:
+static DEVICE_ATTR(manufacturer,S_IRUGO,show_manufacturer,NULL);
                                                          ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#135: FILE: drivers/usb/core/driverfs.c:81:
+static DEVICE_ATTR(manufacturer,S_IRUGO,show_manufacturer,NULL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#138: FILE: drivers/usb/core/driverfs.c:84:
+show_serial (struct device *dev, char *buf, size_t count, loff_t off)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#145: FILE: drivers/usb/core/driverfs.c:91:
+	udev = to_usb_device (dev);

CHECK:CAMELCASE: Avoid CamelCase: <iSerialNumber>
#147: FILE: drivers/usb/core/driverfs.c:93:
+	len = usb_string(udev, udev->descriptor.iSerialNumber, buf, PAGE_SIZE);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#151: FILE: drivers/usb/core/driverfs.c:97:
+	buf[len+1] = 0;
 	       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#152: FILE: drivers/usb/core/driverfs.c:98:
+	return len+1;
 	          ^

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_serial' to 'serial_show'
#153: FILE: drivers/usb/core/driverfs.c:99:
+}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#154: FILE: drivers/usb/core/driverfs.c:100:
+static DEVICE_ATTR(serial,S_IRUGO,show_serial,NULL);
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#154: FILE: drivers/usb/core/driverfs.c:100:
+static DEVICE_ATTR(serial,S_IRUGO,show_serial,NULL);
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#154: FILE: drivers/usb/core/driverfs.c:100:
+static DEVICE_ATTR(serial,S_IRUGO,show_serial,NULL);
                                              ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#154: FILE: drivers/usb/core/driverfs.c:100:
+static DEVICE_ATTR(serial,S_IRUGO,show_serial,NULL);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'field' - possible side-effects?
#157: FILE: drivers/usb/core/driverfs.c:103:
+#define usb_descriptor_attr(field, format_string)			\
+static ssize_t								\
+show_##field (struct device *dev, char *buf, size_t count, loff_t off)	\
+{									\
+	struct usb_device *udev;					\
+									\
+	if (off)							\
+		return 0;						\
+									\
+	udev = to_usb_device (dev);					\
+	return sprintf (buf, format_string, udev->descriptor.field);	\
+}									\
+static DEVICE_ATTR(field, S_IRUGO, show_##field, NULL);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#157: FILE: drivers/usb/core/driverfs.c:103:
+#define usb_descriptor_attr(field, format_string)			\
+static ssize_t								\
+show_##field (struct device *dev, char *buf, size_t count, loff_t off)	\
+{									\
+	struct usb_device *udev;					\
+									\
+	if (off)							\
+		return 0;						\
+									\
+	udev = to_usb_device (dev);					\
+	return sprintf (buf, format_string, udev->descriptor.field);	\
+}									\
+static DEVICE_ATTR(field, S_IRUGO, show_##field, NULL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#159: FILE: drivers/usb/core/driverfs.c:105:
+show_##field (struct device *dev, char *buf, size_t count, loff_t off)	\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#166: FILE: drivers/usb/core/driverfs.c:112:
+	udev = to_usb_device (dev);					\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#167: FILE: drivers/usb/core/driverfs.c:113:
+	return sprintf (buf, format_string, udev->descriptor.field);	\

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#169: FILE: drivers/usb/core/driverfs.c:115:
+static DEVICE_ATTR(field, S_IRUGO, show_##field, NULL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#171: FILE: drivers/usb/core/driverfs.c:117:
+usb_descriptor_attr (idVendor, "%04x\n")

CHECK:CAMELCASE: Avoid CamelCase: <idVendor>
#171: FILE: drivers/usb/core/driverfs.c:117:
+usb_descriptor_attr (idVendor, "%04x\n")

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#172: FILE: drivers/usb/core/driverfs.c:118:
+usb_descriptor_attr (idProduct, "%04x\n")

CHECK:CAMELCASE: Avoid CamelCase: <idProduct>
#172: FILE: drivers/usb/core/driverfs.c:118:
+usb_descriptor_attr (idProduct, "%04x\n")

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#173: FILE: drivers/usb/core/driverfs.c:119:
+usb_descriptor_attr (bcdDevice, "%04x\n")

CHECK:CAMELCASE: Avoid CamelCase: <bcdDevice>
#173: FILE: drivers/usb/core/driverfs.c:119:
+usb_descriptor_attr (bcdDevice, "%04x\n")

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#174: FILE: drivers/usb/core/driverfs.c:120:
+usb_descriptor_attr (bDeviceClass, "%02x\n")

CHECK:CAMELCASE: Avoid CamelCase: <bDeviceClass>
#174: FILE: drivers/usb/core/driverfs.c:120:
+usb_descriptor_attr (bDeviceClass, "%02x\n")

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#175: FILE: drivers/usb/core/driverfs.c:121:
+usb_descriptor_attr (bDeviceSubClass, "%02x\n")

CHECK:CAMELCASE: Avoid CamelCase: <bDeviceSubClass>
#175: FILE: drivers/usb/core/driverfs.c:121:
+usb_descriptor_attr (bDeviceSubClass, "%02x\n")

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#176: FILE: drivers/usb/core/driverfs.c:122:
+usb_descriptor_attr (bDeviceProtocol, "%02x\n")

CHECK:CAMELCASE: Avoid CamelCase: <bDeviceProtocol>
#176: FILE: drivers/usb/core/driverfs.c:122:
+usb_descriptor_attr (bDeviceProtocol, "%02x\n")

CHECK:LINE_SPACING: Please don't use multiple blank lines
#178: FILE: drivers/usb/core/driverfs.c:124:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#179: FILE: drivers/usb/core/driverfs.c:125:
+void usb_create_driverfs_dev_files (struct usb_device *udev)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#183: FILE: drivers/usb/core/driverfs.c:129:
+	device_create_file (dev, &dev_attr_bNumInterfaces);

CHECK:CAMELCASE: Avoid CamelCase: <dev_attr_bNumInterfaces>
#183: FILE: drivers/usb/core/driverfs.c:129:
+	device_create_file (dev, &dev_attr_bNumInterfaces);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#184: FILE: drivers/usb/core/driverfs.c:130:
+	device_create_file (dev, &dev_attr_bConfigurationValue);

CHECK:CAMELCASE: Avoid CamelCase: <dev_attr_bConfigurationValue>
#184: FILE: drivers/usb/core/driverfs.c:130:
+	device_create_file (dev, &dev_attr_bConfigurationValue);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#185: FILE: drivers/usb/core/driverfs.c:131:
+	device_create_file (dev, &dev_attr_bmAttributes);

CHECK:CAMELCASE: Avoid CamelCase: <dev_attr_bmAttributes>
#185: FILE: drivers/usb/core/driverfs.c:131:
+	device_create_file (dev, &dev_attr_bmAttributes);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#186: FILE: drivers/usb/core/driverfs.c:132:
+	device_create_file (dev, &dev_attr_MaxPower);

CHECK:CAMELCASE: Avoid CamelCase: <dev_attr_MaxPower>
#186: FILE: drivers/usb/core/driverfs.c:132:
+	device_create_file (dev, &dev_attr_MaxPower);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#187: FILE: drivers/usb/core/driverfs.c:133:
+	device_create_file (dev, &dev_attr_idVendor);

CHECK:CAMELCASE: Avoid CamelCase: <dev_attr_idVendor>
#187: FILE: drivers/usb/core/driverfs.c:133:
+	device_create_file (dev, &dev_attr_idVendor);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#188: FILE: drivers/usb/core/driverfs.c:134:
+	device_create_file (dev, &dev_attr_idProduct);

CHECK:CAMELCASE: Avoid CamelCase: <dev_attr_idProduct>
#188: FILE: drivers/usb/core/driverfs.c:134:
+	device_create_file (dev, &dev_attr_idProduct);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#189: FILE: drivers/usb/core/driverfs.c:135:
+	device_create_file (dev, &dev_attr_bcdDevice);

CHECK:CAMELCASE: Avoid CamelCase: <dev_attr_bcdDevice>
#189: FILE: drivers/usb/core/driverfs.c:135:
+	device_create_file (dev, &dev_attr_bcdDevice);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#190: FILE: drivers/usb/core/driverfs.c:136:
+	device_create_file (dev, &dev_attr_bDeviceClass);

CHECK:CAMELCASE: Avoid CamelCase: <dev_attr_bDeviceClass>
#190: FILE: drivers/usb/core/driverfs.c:136:
+	device_create_file (dev, &dev_attr_bDeviceClass);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#191: FILE: drivers/usb/core/driverfs.c:137:
+	device_create_file (dev, &dev_attr_bDeviceSubClass);

CHECK:CAMELCASE: Avoid CamelCase: <dev_attr_bDeviceSubClass>
#191: FILE: drivers/usb/core/driverfs.c:137:
+	device_create_file (dev, &dev_attr_bDeviceSubClass);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#192: FILE: drivers/usb/core/driverfs.c:138:
+	device_create_file (dev, &dev_attr_bDeviceProtocol);

CHECK:CAMELCASE: Avoid CamelCase: <dev_attr_bDeviceProtocol>
#192: FILE: drivers/usb/core/driverfs.c:138:
+	device_create_file (dev, &dev_attr_bDeviceProtocol);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#195: FILE: drivers/usb/core/driverfs.c:141:
+		device_create_file (dev, &dev_attr_manufacturer);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#197: FILE: drivers/usb/core/driverfs.c:143:
+		device_create_file (dev, &dev_attr_product);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#199: FILE: drivers/usb/core/driverfs.c:145:
+		device_create_file (dev, &dev_attr_serial);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'field' - possible side-effects?
#203: FILE: drivers/usb/core/driverfs.c:149:
+#define usb_intf_attr(field, format_string)				\
+static ssize_t								\
+show_##field (struct device *dev, char *buf, size_t count, loff_t off)	\
+{									\
+	struct usb_interface *intf;					\
+	int alt;							\
+									\
+	if (off)							\
+		return 0;						\
+									\
+	intf = to_usb_interface (dev);					\
+	alt = intf->act_altsetting;					\
+									\
+	return sprintf (buf, format_string, intf->altsetting[alt].field);	\
+}									\
+static DEVICE_ATTR(field, S_IRUGO, show_##field, NULL);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#203: FILE: drivers/usb/core/driverfs.c:149:
+#define usb_intf_attr(field, format_string)				\
+static ssize_t								\
+show_##field (struct device *dev, char *buf, size_t count, loff_t off)	\
+{									\
+	struct usb_interface *intf;					\
+	int alt;							\
+									\
+	if (off)							\
+		return 0;						\
+									\
+	intf = to_usb_interface (dev);					\
+	alt = intf->act_altsetting;					\
+									\
+	return sprintf (buf, format_string, intf->altsetting[alt].field);	\
+}									\
+static DEVICE_ATTR(field, S_IRUGO, show_##field, NULL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#205: FILE: drivers/usb/core/driverfs.c:151:
+show_##field (struct device *dev, char *buf, size_t count, loff_t off)	\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#213: FILE: drivers/usb/core/driverfs.c:159:
+	intf = to_usb_interface (dev);					\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#216: FILE: drivers/usb/core/driverfs.c:162:
+	return sprintf (buf, format_string, intf->altsetting[alt].field);	\

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#218: FILE: drivers/usb/core/driverfs.c:164:
+static DEVICE_ATTR(field, S_IRUGO, show_##field, NULL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#220: FILE: drivers/usb/core/driverfs.c:166:
+usb_intf_attr (bAlternateSetting, "%2d\n")

CHECK:CAMELCASE: Avoid CamelCase: <bAlternateSetting>
#220: FILE: drivers/usb/core/driverfs.c:166:
+usb_intf_attr (bAlternateSetting, "%2d\n")

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#221: FILE: drivers/usb/core/driverfs.c:167:
+usb_intf_attr (bInterfaceClass, "%02x\n")

CHECK:CAMELCASE: Avoid CamelCase: <bInterfaceClass>
#221: FILE: drivers/usb/core/driverfs.c:167:
+usb_intf_attr (bInterfaceClass, "%02x\n")

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#222: FILE: drivers/usb/core/driverfs.c:168:
+usb_intf_attr (bInterfaceSubClass, "%02x\n")

CHECK:CAMELCASE: Avoid CamelCase: <bInterfaceSubClass>
#222: FILE: drivers/usb/core/driverfs.c:168:
+usb_intf_attr (bInterfaceSubClass, "%02x\n")

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#223: FILE: drivers/usb/core/driverfs.c:169:
+usb_intf_attr (bInterfaceProtocol, "%02x\n")

CHECK:CAMELCASE: Avoid CamelCase: <bInterfaceProtocol>
#223: FILE: drivers/usb/core/driverfs.c:169:
+usb_intf_attr (bInterfaceProtocol, "%02x\n")

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#225: FILE: drivers/usb/core/driverfs.c:171:
+void usb_create_driverfs_intf_files (struct usb_interface *intf)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#227: FILE: drivers/usb/core/driverfs.c:173:
+	device_create_file (&intf->dev, &dev_attr_bAlternateSetting);

CHECK:CAMELCASE: Avoid CamelCase: <dev_attr_bAlternateSetting>
#227: FILE: drivers/usb/core/driverfs.c:173:
+	device_create_file (&intf->dev, &dev_attr_bAlternateSetting);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#228: FILE: drivers/usb/core/driverfs.c:174:
+	device_create_file (&intf->dev, &dev_attr_bInterfaceClass);

CHECK:CAMELCASE: Avoid CamelCase: <dev_attr_bInterfaceClass>
#228: FILE: drivers/usb/core/driverfs.c:174:
+	device_create_file (&intf->dev, &dev_attr_bInterfaceClass);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#229: FILE: drivers/usb/core/driverfs.c:175:
+	device_create_file (&intf->dev, &dev_attr_bInterfaceSubClass);

CHECK:CAMELCASE: Avoid CamelCase: <dev_attr_bInterfaceSubClass>
#229: FILE: drivers/usb/core/driverfs.c:175:
+	device_create_file (&intf->dev, &dev_attr_bInterfaceSubClass);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#230: FILE: drivers/usb/core/driverfs.c:176:
+	device_create_file (&intf->dev, &dev_attr_bInterfaceProtocol);

CHECK:CAMELCASE: Avoid CamelCase: <dev_attr_bInterfaceProtocol>
#230: FILE: drivers/usb/core/driverfs.c:176:
+	device_create_file (&intf->dev, &dev_attr_bInterfaceProtocol);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#353: FILE: drivers/usb/core/usb.c:1045:
+	usb_create_driverfs_dev_files (dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#362: FILE: drivers/usb/core/usb.c:1075:
+		usb_create_driverfs_intf_files (interface);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#370: FILE: drivers/usb/core/usb.h:1:
+/* Functions local to drivers/usb/core/ */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#372: FILE: drivers/usb/core/usb.h:3:
+extern void usb_create_driverfs_dev_files (struct usb_device *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#372: FILE: drivers/usb/core/usb.h:3:
+extern void usb_create_driverfs_dev_files (struct usb_device *dev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#373: FILE: drivers/usb/core/usb.h:4:
+extern void usb_create_driverfs_intf_files (struct usb_interface *intf);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#373: FILE: drivers/usb/core/usb.h:4:
+extern void usb_create_driverfs_intf_files (struct usb_interface *intf);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000428295.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 84 warnings, 45 checks, 317 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000428295.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
