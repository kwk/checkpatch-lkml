WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
This patch changes network devices to run hotplug out of the kobject/class_device

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#56: 
--- a/include/linux/netdevice.h	Fri Jun 13 16:29:18 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#68: FILE: include/linux/netdevice.h:362:
+	enum { NETREG_UNINITIALIZED=0,
 	                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#209: FILE: net/core/dev.c:2762:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#212: FILE: net/core/dev.c:2765:
+		struct net_device *dev
+			= list_entry(list.next, struct net_device, todo_list);

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

ERROR:SPACING: space required before the open parenthesis '('
#215: FILE: net/core/dev.c:2768:
+		switch(dev->reg_state) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#227: FILE: net/core/dev.c:2779:
+			BUG_ON(atomic_read(&dev->refcnt));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#228: FILE: net/core/dev.c:2780:
+^I^I^I^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#234: FILE: net/core/dev.c:2785:
+			printk(KERN_ERR "network todo '%s' but state %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#250: FILE: net/core/dev.c:2823:
+		printk(KERN_DEBUG "unregister_netdevice: device %s/%p never "

WARNING:SPLIT_STRING: quoted string split across lines
#251: FILE: net/core/dev.c:2824:
+		printk(KERN_DEBUG "unregister_netdevice: device %s/%p never "
+				  "was registered\n", dev->name, dev);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#255: FILE: net/core/dev.c:2828:
+	BUG_ON(dev->reg_state != NETREG_REGISTERED);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#273: FILE: net/core/dev.c:2844:
+		printk(KERN_ERR "unregister net_device: '%s' not found\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#430: FILE: net/core/net-sysfs.c:18:
+static inline int dev_isalive(const struct net_device *dev) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#463: FILE: net/core/net-sysfs.c:105:
+	if (dev_isalive(net))
+	    return format_addr(buf, net->dev_addr, net->addr_len);

WARNING:TABSTOP: Statements should start on a tabstop
#464: FILE: net/core/net-sysfs.c:106:
+	    return format_addr(buf, net->dev_addr, net->addr_len);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#503: FILE: net/core/net-sysfs.c:267:
+	if (dev_isalive(dev) && entry->show && dev->get_stats &&

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'size <= 0'
#527: FILE: net/core/net-sysfs.c:297:
+	if ((size <= 0) || (i >= num_envp))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i >= num_envp'
#527: FILE: net/core/net-sysfs.c:297:
+	if ((size <= 0) || (i >= num_envp))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000362553.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 9 warnings, 3 checks, 364 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000362553.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
