WARNING:TYPO_SPELLING: 'taht' may be misspelled - perhaps 'that'?
#88: FILE: Documentation/IPMI.txt:44:
+support KCS, so you need taht.
                          ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "req->msg.data"
#225: FILE: drivers/char/ipmi/ipmi_devintf.c:188:
+	if (req->msg.data != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around req->msg
#241: FILE: drivers/char/ipmi/ipmi_devintf.c:204:
+				    &(req->msg),

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: No space is necessary after a cast
#282: FILE: drivers/char/ipmi/ipmi_devintf.c:241:
+		if (copy_from_user(&req, (void *) data, sizeof(req))) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#328: FILE: drivers/char/ipmi/ipmi_devintf.c:450:
+		struct ipmi_timing_parms parms;
 		                         ^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#330: FILE: drivers/char/ipmi/ipmi_devintf.c:452:
+		if (copy_from_user(&parms, (void *) data, sizeof(parms))) {
 		                    ^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#330: FILE: drivers/char/ipmi/ipmi_devintf.c:452:
+		if (copy_from_user(&parms, (void *) data, sizeof(parms))) {
 		                                                 ^^^^^

CHECK:SPACING: No space is necessary after a cast
#330: FILE: drivers/char/ipmi/ipmi_devintf.c:452:
+		if (copy_from_user(&parms, (void *) data, sizeof(parms))) {

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#335: FILE: drivers/char/ipmi/ipmi_devintf.c:457:
+		priv->default_retries = parms.retries;
 		                        ^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#336: FILE: drivers/char/ipmi/ipmi_devintf.c:458:
+		priv->default_retry_time_ms = parms.retry_time_ms;
 		                              ^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#343: FILE: drivers/char/ipmi/ipmi_devintf.c:465:
+		struct ipmi_timing_parms parms;
 		                         ^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#345: FILE: drivers/char/ipmi/ipmi_devintf.c:467:
+		parms.retries = priv->default_retries;
 		^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#346: FILE: drivers/char/ipmi/ipmi_devintf.c:468:
+		parms.retry_time_ms = priv->default_retry_time_ms;
 		^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#348: FILE: drivers/char/ipmi/ipmi_devintf.c:470:
+		if (copy_to_user((void *) data, &parms, sizeof(parms))) {
 		                                 ^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#348: FILE: drivers/char/ipmi/ipmi_devintf.c:470:
+		if (copy_to_user((void *) data, &parms, sizeof(parms))) {
 		                                               ^^^^^

CHECK:SPACING: No space is necessary after a cast
#348: FILE: drivers/char/ipmi/ipmi_devintf.c:470:
+		if (copy_to_user((void *) data, &parms, sizeof(parms))) {

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#373: FILE: drivers/char/ipmi/ipmi_devintf.c:501:
+		      S_IFCHR | S_IRUSR | S_IWUSR,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#398: FILE: drivers/char/ipmi/ipmi_devintf.c:524:
+	printk(KERN_INFO "ipmi device interface version "

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#409: FILE: drivers/char/ipmi/ipmi_devintf.c:542:
+		printk(KERN_WARNING "ipmi: can't register smi watcher\n");

WARNING:SPLIT_STRING: quoted string split across lines
#440: FILE: drivers/char/ipmi/ipmi_watchdog.c:163:
+MODULE_PARM_DESC(action, "Timeout action. One of: "
+		 "reset, none, power_cycle, power_off.");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#443: FILE: drivers/char/ipmi/ipmi_watchdog.c:166:
+MODULE_PARM_DESC(preaction, "Pretimeout action.  One of: "
+		 "pre_none, pre_smi, pre_nmi, pre_int.");

WARNING:SPLIT_STRING: quoted string split across lines
#446: FILE: drivers/char/ipmi/ipmi_watchdog.c:169:
+MODULE_PARM_DESC(preop, "Pretimeout driver operation.  One of: "
+		 "preop_none, preop_panic, preop_give_data.");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#486: FILE: drivers/char/ipmi/ipmi_watchdog.c:928:
+	printk(KERN_INFO "IPMI watchdog driver version "

WARNING:TYPO_SPELLING: 'concious' may be misspelled - perhaps 'conscious'?
#521: FILE: include/linux/ipmi.h:116:
+ * A concious decision was made here to deviate slightly from the IPMI
      ^^^^^^^^

WARNING:TYPO_SPELLING: 'wierd' may be misspelled - perhaps 'weird'?
#532: FILE: include/linux/ipmi.h:127:
+ * message is a little wierd, but this is required.
                        ^^^^^

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#536: FILE: include/linux/ipmi.h:131:
+struct ipmi_lan_addr
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#562: FILE: include/linux/ipmi.h:186:
+#define IPMI_RESPONSE_RESPONSE_TYPE	4 /* The response for
+					      a sent response, giving any

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#566: FILE: include/linux/ipmi.h:190:
+					      be returned. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#583: FILE: include/linux/ipmi.h:229:
+	/* The user_msg_data is the data supplied when a message was
+	   sent, if this is a response to a sent message.  If this is

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#585: FILE: include/linux/ipmi.h:231:
+	   be NULL. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#597: FILE: include/linux/ipmi.h:256:
+	   variable supplied when the receive handler was registered. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#610: FILE: include/linux/ipmi.h:272:
+/* Destroy the given user of the IPMI layer.  Note that after this
+   function returns, the system is guaranteed to not call any

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#614: FILE: include/linux/ipmi.h:276:
+   safe, too. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#683: FILE: include/linux/ipmi.h:419:
+	/* You must set the owner to the current module, if you are in
+	   a module (generally just set it to "THIS_MODULE"). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#683: FILE: include/linux/ipmi.h:419:
+	   a module (generally just set it to "THIS_MODULE"). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#694: FILE: include/linux/ipmi.h:514:
+/* Messages sent to the interface with timing parameters are this
+   format. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#694: FILE: include/linux/ipmi.h:514:
+   format. */

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#696: FILE: include/linux/ipmi.h:516:
+struct ipmi_req_settime
+{

ERROR:CODE_INDENT: code indent should use tabs where possible
#700: FILE: include/linux/ipmi.h:520:
+           values. */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#700: FILE: include/linux/ipmi.h:520:
+	/* See ipmi_request_settime() above for details on these
+           values. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#700: FILE: include/linux/ipmi.h:520:
+           values. */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#704: FILE: include/linux/ipmi.h:524:
+};
+/*

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#728: FILE: include/linux/ipmi.h:632:
+struct ipmi_timing_parms
+{

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#732: FILE: include/linux/ipmi.h:636:
+};
+#define IPMICTL_SET_TIMING_PARMS_CMD	_IOR(IPMI_IOC_MAGIC, 22, \

WARNING:TYPO_SPELLING: 'propogate' may be misspelled - perhaps 'propagate'?
#758: FILE: include/linux/ipmi_msgdefs.h:69:
+ * but that's too hard to propogate to the rest of the driver. */
                           ^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#758: FILE: include/linux/ipmi_msgdefs.h:69:
+ * but that's too hard to propogate to the rest of the driver. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#827: FILE: include/linux/ipmi_smi.h:137:
+/* Allow the lower layer to add things to the proc filesystem
+   directory for this interface.  Note that the entry will

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#828: FILE: include/linux/ipmi_smi.h:138:
+   automatically be dstroyed when the interface is destroyed. */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000301246.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 37 warnings, 7 checks, 714 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000301246.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
