WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
diff -Nurp linux-2.6.5/fs/hugetlbfs/inode.c linux-2.6.5.htlb/fs/hugetlbfs/inode.c

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#83: FILE: fs/hugetlbfs/inode.c:282:
+	hugetlb_acct_commit(inode, VMACCTPG(vma->vm_pgoff),
 			VMACCTPG(vma->vm_pgoff + (vma_len >> PAGE_SHIFT)));

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#97: FILE: include/linux/hugetlb.h:16:
*, int);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#101: FILE: include/linux/hugetlb.h:19:
+pte_t *huge_pte_alloc(struct mm_struct *, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#101: FILE: include/linux/hugetlb.h:19:
+pte_t *huge_pte_alloc(struct mm_struct *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#102: FILE: include/linux/hugetlb.h:20:
+void set_huge_pte(struct mm_struct *, struct vm_area_struct *, struct page *, pte_t *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vm_area_struct *' should also have an identifier name
#102: FILE: include/linux/hugetlb.h:20:
+void set_huge_pte(struct mm_struct *, struct vm_area_struct *, struct page *, pte_t *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#102: FILE: include/linux/hugetlb.h:20:
+void set_huge_pte(struct mm_struct *, struct vm_area_struct *, struct page *, pte_t *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pte_t *' should also have an identifier name
#102: FILE: include/linux/hugetlb.h:20:
+void set_huge_pte(struct mm_struct *, struct vm_area_struct *, struct page *, pte_t *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#102: FILE: include/linux/hugetlb.h:20:
+void set_huge_pte(struct mm_struct *, struct vm_area_struct *, struct page *, pte_t *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#103: FILE: include/linux/hugetlb.h:21:
+int handle_hugetlb_mm_fault(struct mm_struct *, struct vm_area_struct *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vm_area_struct *' should also have an identifier name
#103: FILE: include/linux/hugetlb.h:21:
+int handle_hugetlb_mm_fault(struct mm_struct *, struct vm_area_struct *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#103: FILE: include/linux/hugetlb.h:21:
+int handle_hugetlb_mm_fault(struct mm_struct *, struct vm_area_struct *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#103: FILE: include/linux/hugetlb.h:21:
+int handle_hugetlb_mm_fault(struct mm_struct *, struct vm_area_struct *,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#116: FILE: include/linux/hugetlb.h:73:
+#define handle_hugetlb_mm_fault(mm, vma, addr, write)	BUG()

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#135: FILE: mm/hugetlb.c:221:
+int handle_hugetlb_mm_fault(struct mm_struct *mm, struct vm_area_struct * vma,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#136: FILE: mm/hugetlb.c:222:
+int handle_hugetlb_mm_fault(struct mm_struct *mm, struct vm_area_struct * vma,
+	unsigned long addr, int write_access)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000288861.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 13 warnings, 2 checks, 153 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000288861.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
