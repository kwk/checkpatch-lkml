WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#23: 
I'm resending this patch because it apparently went to /dev/null last time I

WARNING:REPEATED_WORD: Possible repeated word: 'of'
#58: 
page. It concludes victory when it manages to make a whole scan of of the

WARNING:TYPO_SPELLING: 'refrence' may be misspelled - perhaps 'reference'?
#76: FILE: mm/swapfile.c:335:
+ * and we _don't_ clear the refrence count if for
                             ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: mm/swapfile.c:341:
+ struct task_struct *p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: mm/swapfile.c:342:
+ struct page *page;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: mm/swapfile.c:343:
+ swp_entry_t entry;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: mm/swapfile.c:345:
+ entry = SWP_ENTRY(type, i);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: mm/swapfile.c:352:
+ page = read_swap_cache_async(entry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: mm/swapfile.c:353:
+ if (!page) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#94: FILE: mm/swapfile.c:353:
+ if (!page) {
+  swap_free(entry);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: mm/swapfile.c:354:
+  swap_free(entry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: mm/swapfile.c:355:
+  return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: mm/swapfile.c:356:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: mm/swapfile.c:357:
+ lock_page(page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: mm/swapfile.c:358:
+ if (PageSwapCache(page))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#99: FILE: mm/swapfile.c:358:
+ if (PageSwapCache(page))
+  delete_from_swap_cache_nolock(page);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: mm/swapfile.c:359:
+  delete_from_swap_cache_nolock(page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: mm/swapfile.c:360:
+ UnlockPage(page);$

CHECK:CAMELCASE: Avoid CamelCase: <UnlockPage>
#101: FILE: mm/swapfile.c:360:
+ UnlockPage(page);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: mm/swapfile.c:361:
+ read_lock(&tasklist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: mm/swapfile.c:362:
+ for_each_task(p)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#103: FILE: mm/swapfile.c:362:
+ for_each_task(p)
+  unuse_process(p->mm, entry, page);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: mm/swapfile.c:363:
+  unuse_process(p->mm, entry, page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: mm/swapfile.c:364:
+ read_unlock(&tasklist_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: mm/swapfile.c:365:
+ shmem_unuse(entry, page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: mm/swapfile.c:370:
+ page_cache_release(page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: mm/swapfile.c:374:
+ swap_free(entry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: mm/swapfile.c:375:
+ return 0;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#119: FILE: mm/swapfile.c:378:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: mm/swapfile.c:388:
+ int ret,foundpage=1;$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#132: FILE: mm/swapfile.c:388:
+ int ret,foundpage=1;
         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#132: FILE: mm/swapfile.c:388:
+ int ret,foundpage=1;
                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: mm/swapfile.c:390:
+ while (foundpage) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#135: FILE: mm/swapfile.c:390:
+ while (foundpage) {
[...]
+  foundpage=0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: mm/swapfile.c:396:
+  foundpage=0;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#149: FILE: mm/swapfile.c:396:
+  foundpage=0;
            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: mm/swapfile.c:406:
+    foundpage=1;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#157: FILE: mm/swapfile.c:406:
+    foundpage=1;
              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: mm/swapfile.c:410:
+    ret=free_found_swap_entry(type,i);$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#169: FILE: mm/swapfile.c:410:
+    ret=free_found_swap_entry(type,i);
        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#169: FILE: mm/swapfile.c:410:
+    ret=free_found_swap_entry(type,i);
                                   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: mm/swapfile.c:411:
+    if (ret) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#170: FILE: mm/swapfile.c:411:
+    if (ret) {
+      return ret;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#170: FILE: mm/swapfile.c:411:
+    if (ret) {
+      return ret;
+    }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: mm/swapfile.c:412:
+      return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: mm/swapfile.c:413:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: mm/swapfile.c:426:
+    swap_list_lock();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: mm/swapfile.c:427:
+    swap_device_lock(si);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: mm/swapfile.c:428:
+    if (si->swap_map[i] > 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 5)
#187: FILE: mm/swapfile.c:428:
+    if (si->swap_map[i] > 0) {
[...]
+     if (si->swap_map[i] != SWAP_MAP_MAX) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: mm/swapfile.c:433:
+     if (si->swap_map[i] != SWAP_MAP_MAX) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 6)
#192: FILE: mm/swapfile.c:433:
+     if (si->swap_map[i] != SWAP_MAP_MAX) {
+      printk("VM: Undead swap entry %08lx\n",

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: mm/swapfile.c:434:
+      printk("VM: Undead swap entry %08lx\n",$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#193: FILE: mm/swapfile.c:434:
+      printk("VM: Undead swap entry %08lx\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#194: FILE: mm/swapfile.c:435:
+             SWP_ENTRY(type, i).val);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: mm/swapfile.c:435:
+             SWP_ENTRY(type, i).val);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: mm/swapfile.c:436:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: mm/swapfile.c:437:
+     else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 6)
#196: FILE: mm/swapfile.c:437:
+     else {
+      nr_swap_pages++;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#196: FILE: mm/swapfile.c:437:
+     }
+     else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#196: FILE: mm/swapfile.c:437:
+     else {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: mm/swapfile.c:438:
+      nr_swap_pages++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: mm/swapfile.c:439:
+      si->swap_map[i] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: mm/swapfile.c:440:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: mm/swapfile.c:441:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: mm/swapfile.c:442:
+    swap_device_unlock(si);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: mm/swapfile.c:443:
+    swap_list_unlock();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: mm/swapfile.c:450:
+    if (current->need_resched)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 5)
#241: FILE: mm/swapfile.c:450:
+    if (current->need_resched)
+     schedule();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: mm/swapfile.c:451:
+     schedule();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: mm/swapfile.c:452:
+    swap_device_lock(si);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: mm/swapfile.c:453:
+   }$

WARNING:TYPO_SPELLING: 'happend' may be misspelled - perhaps 'happened'?
#259: FILE: mm/memory.c:1110:
+    * swap_off, check to see if that is what happend before we
                                              ^^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: mm/memory.c:1115:
+   if (pte_present(*page_table)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 4)
#264: FILE: mm/memory.c:1115:
+   if (pte_present(*page_table)) {
+    return 1;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#264: FILE: mm/memory.c:1115:
+   if (pte_present(*page_table)) {
+    return 1;
+   }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: mm/memory.c:1116:
+    return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: mm/memory.c:1117:
+   }$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000519747.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 67 warnings, 3 checks, 195 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000519747.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
