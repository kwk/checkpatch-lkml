WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
diff -uNr linux-2.5.8.boot.proto/arch/i386/Config.help linux-2.5.8.boot.linuxbios/arch/i386/Config.help

ERROR:TRAILING_WHITESPACE: trailing whitespace
#49: FILE: arch/i386/Config.help:818:
+  it's table) and memory size detection. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#93: FILE: arch/i386/kernel/linuxbios.c:1:
+#include <linux/kernel.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#94: FILE: arch/i386/kernel/linuxbios.c:2:
+#include <asm/io.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/uaccess.h> instead of <asm/uaccess.h>
#95: FILE: arch/i386/kernel/linuxbios.c:3:
+#include <asm/uaccess.h>

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'head' - possible side-effects?
#101: FILE: arch/i386/kernel/linuxbios.c:9:
+#define for_each_lbrec(head, rec) \
+	for(rec = (struct lb_record *)(((char *)head) + sizeof(*head)); \
+		(((char *)rec) < (((char *)head) + sizeof(*head) + head->table_bytes))  && \
+		(rec->size >= 1) && \
+		((((char *)rec) + rec->size) <= (((char *)head) + sizeof(*head) + head->table_bytes)); \
+		rec = (struct lb_record *)(((char *)rec) + rec->size)) 

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'rec' - possible side-effects?
#101: FILE: arch/i386/kernel/linuxbios.c:9:
+#define for_each_lbrec(head, rec) \
+	for(rec = (struct lb_record *)(((char *)head) + sizeof(*head)); \
+		(((char *)rec) < (((char *)head) + sizeof(*head) + head->table_bytes))  && \
+		(rec->size >= 1) && \
+		((((char *)rec) + rec->size) <= (((char *)head) + sizeof(*head) + head->table_bytes)); \
+		rec = (struct lb_record *)(((char *)rec) + rec->size)) 

ERROR:SPACING: space required before the open parenthesis '('
#102: FILE: arch/i386/kernel/linuxbios.c:10:
+	for(rec = (struct lb_record *)(((char *)head) + sizeof(*head)); \

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#105: FILE: arch/i386/kernel/linuxbios.c:13:
+		((((char *)rec) + rec->size) <= (((char *)head) + sizeof(*head) + head->table_bytes)); \

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#106: FILE: arch/i386/kernel/linuxbios.c:14:
+^I^Irec = (struct lb_record *)(((char *)rec) + rec->size)) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#107: FILE: arch/i386/kernel/linuxbios.c:15:
+^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#108: FILE: arch/i386/kernel/linuxbios.c:16:
+		
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#113: FILE: arch/i386/kernel/linuxbios.c:21:
+	int count;
+	count = 0;

ERROR:SPACING: space required before the open parenthesis '('
#124: FILE: arch/i386/kernel/linuxbios.c:32:
+	for(addr = start; addr < end; addr += 16) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#127: FILE: arch/i386/kernel/linuxbios.c:35:
+		struct lb_record *recs = phys_to_virt(addr + sizeof(*head));
+		if (memcmp(head->signature, "LBIO", 4) != 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#133: FILE: arch/i386/kernel/linuxbios.c:41:
+^I^Iif (ip_compute_csum((unsigned char *)recs, head->table_bytes) $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#138: FILE: arch/i386/kernel/linuxbios.c:46:
+		printk(KERN_DEBUG "Found LinuxBIOS table at: %p\n", head);

WARNING:LINE_SPACING: Missing a blank line after declarations
#147: FILE: arch/i386/kernel/linuxbios.c:55:
+	struct lb_header *head;
+	head = 0;

WARNING:LINE_SPACING: Missing a blank line after declarations
#165: FILE: arch/i386/kernel/linuxbios.c:73:
+	int i, entries;
+	head = find_lb_table();

WARNING:BRACES: braces {} are not necessary for single statement blocks
#166: FILE: arch/i386/kernel/linuxbios.c:74:
+	if (!head) {
+		return;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#176: FILE: arch/i386/kernel/linuxbios.c:84:
+	if (!mem) {
+		return;
+	}

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#179: FILE: arch/i386/kernel/linuxbios.c:87:
+	entries = (mem->size - sizeof(*mem))/sizeof(mem->map[0]);
 	                                    ^

ERROR:SPACING: space required before the open parenthesis '('
#183: FILE: arch/i386/kernel/linuxbios.c:91:
+	for(i = 0; i < entries; i++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#187: FILE: arch/i386/kernel/linuxbios.c:95:
+		unsigned long type;
+		start = mem->map[i].start;

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#189: FILE: arch/i386/kernel/linuxbios.c:97:
+		type = (mem->map[i].type == LB_MEM_RAM)?E820_RAM: E820_RESERVED;
 		                                       ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#189: FILE: arch/i386/kernel/linuxbios.c:97:
+		type = (mem->map[i].type == LB_MEM_RAM)?E820_RAM: E820_RESERVED;
 		                                                ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#194: FILE: arch/i386/kernel/linuxbios.c:102:
+	return;
+}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#200: FILE: arch/i386/kernel/linuxbios_tables.h:1:
+#ifndef LINUXBIOS_TABLES_H

WARNING:TYPO_SPELLING: 'quering' may be misspelled - perhaps 'querying'?
#208: FILE: arch/i386/kernel/linuxbios_tables.h:9:
+ * other means, such as quering the hardware directly.
                         ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#210: FILE: arch/i386/kernel/linuxbios_tables.h:11:
+ * All of the information should be Position Independent Data.  $

WARNING:TYPO_SPELLING: 'correctnes' may be misspelled - perhaps 'correctness'?
#212: FILE: arch/i386/kernel/linuxbios_tables.h:13:
+ * without it's meaning/correctnes changing.   For table that
                         ^^^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#233: FILE: arch/i386/kernel/linuxbios_tables.h:34:
+
+

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#235: FILE: arch/i386/kernel/linuxbios_tables.h:36:
+struct lb_header
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#236: FILE: arch/i386/kernel/linuxbios_tables.h:37:
+	uint8_t  signature[4]; /* LBIO */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#237: FILE: arch/i386/kernel/linuxbios_tables.h:38:
+	uint32_t header_bytes;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#238: FILE: arch/i386/kernel/linuxbios_tables.h:39:
+	uint32_t header_checksum;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#239: FILE: arch/i386/kernel/linuxbios_tables.h:40:
+	uint32_t table_bytes;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#240: FILE: arch/i386/kernel/linuxbios_tables.h:41:
+	uint32_t table_checksum;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#241: FILE: arch/i386/kernel/linuxbios_tables.h:42:
+	uint32_t table_entries;

WARNING:TYPO_SPELLING: 'enviroment' may be misspelled - perhaps 'environment'?
#244: FILE: arch/i386/kernel/linuxbios_tables.h:45:
+/* Every entry in the boot enviroment list will correspond to a boot
                            ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'enviroment' may be misspelled - perhaps 'environment'?
#247: FILE: arch/i386/kernel/linuxbios_tables.h:48:
+ * boot enviroment record if you don't know what it easy.  This allows
         ^^^^^^^^^^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#251: FILE: arch/i386/kernel/linuxbios_tables.h:52:
+	uint32_t tag;		/* tag ID */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#252: FILE: arch/i386/kernel/linuxbios_tables.h:53:
+	uint32_t size;		/* size of record (in bytes) */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#260: FILE: arch/i386/kernel/linuxbios_tables.h:61:
+	uint64_t start;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#261: FILE: arch/i386/kernel/linuxbios_tables.h:62:
+	uint64_t size;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#262: FILE: arch/i386/kernel/linuxbios_tables.h:63:
+	uint32_t type;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#265: FILE: arch/i386/kernel/linuxbios_tables.h:66:
+^I$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#269: FILE: arch/i386/kernel/linuxbios_tables.h:70:
+	uint32_t tag;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#270: FILE: arch/i386/kernel/linuxbios_tables.h:71:
+	uint32_t size;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#276: FILE: arch/i386/kernel/linuxbios_tables.h:77:
+	uint32_t tag;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#277: FILE: arch/i386/kernel/linuxbios_tables.h:78:
+	uint32_t size;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#278: FILE: arch/i386/kernel/linuxbios_tables.h:79:
+	uint64_t hwrpb;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#299: FILE: arch/i386/kernel/setup.c:270:
+void __init add_memory_region(unsigned long long start,
                                   unsigned long long size, int type)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#328: FILE: include/asm-i386/e820.h:39:
+extern void  add_memory_region(unsigned long long start,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#329: FILE: include/asm-i386/e820.h:40:
+extern void  add_memory_region(unsigned long long start,
+	unsigned long long size, int type);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#330: FILE: include/asm-i386/e820.h:41:
+extern void print_memory_map(char *who);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#338: FILE: include/asm-i386/linuxbios.h:1:
+#ifndef __ASMi386_LINUXBIOS_H

CHECK:CAMELCASE: Avoid CamelCase: <__ASMi386_LINUXBIOS_H>
#338: FILE: include/asm-i386/linuxbios.h:1:
+#ifndef __ASMi386_LINUXBIOS_H

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000463784.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 18 warnings, 29 checks, 279 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000463784.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
