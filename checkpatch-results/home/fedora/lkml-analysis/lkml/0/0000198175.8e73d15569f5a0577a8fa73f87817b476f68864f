WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#22: 
 systems can export information (configuration options, performance counters,

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#30: 
 Signed-off-by: Chuck Lever <cel@netapp.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:SPACING: spaces required around that '==' (ctx:VxO)
#65: FILE: fs/namespace.c:287:
+	return p==&n->list ? NULL : list_entry(p, struct vfsmount, mnt_list);
 	        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before that '&' (ctx:OxV)
#65: FILE: fs/namespace.c:287:
+	return p==&n->list ? NULL : list_entry(p, struct vfsmount, mnt_list);
 	          ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#71: FILE: fs/namespace.c:293:
+	struct namespace *n = m->private;
+	up_read(&n->sem);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#80: FILE: fs/namespace.c:302:
+	if (mnt->mnt_devname) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#83: FILE: fs/namespace.c:305:
+	} else

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#105: FILE: fs/namespace.c:327:
+struct seq_operations mountstats_op = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#138: FILE: fs/proc/base.c:139:
+	E(PROC_TGID_MOUNTSTATS, "mountstats", S_IFREG|S_IRUGO),
 	                                             ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#138: FILE: fs/proc/base.c:139:
+	E(PROC_TGID_MOUNTSTATS, "mountstats", S_IFREG|S_IRUGO),

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#146: FILE: fs/proc/base.c:170:
+	E(PROC_TID_MOUNTSTATS, "mountstats", S_IFREG|S_IRUGO),
 	                                            ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#146: FILE: fs/proc/base.c:170:
+	E(PROC_TID_MOUNTSTATS, "mountstats", S_IFREG|S_IRUGO),

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#154: FILE: fs/proc/base.c:535:
+extern struct seq_operations mountstats_op;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#154: FILE: fs/proc/base.c:535:
+extern struct seq_operations mountstats_op;

WARNING:LINE_SPACING: Missing a blank line after declarations
#163: FILE: fs/proc/base.c:544:
+		struct namespace *namespace;
+		task_lock(task);

CHECK:BRACES: braces {} should be used on all arms of this statement
#169: FILE: fs/proc/base.c:550:
+		if (namespace)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#171: FILE: fs/proc/base.c:552:
+		else {

WARNING:CONST_STRUCT: struct file_operations should normally be const
#179: FILE: fs/proc/base.c:560:
+static struct file_operations proc_mountstats_operations = {

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct seq_file *' should also have an identifier name
#207: FILE: include/linux/fs.h:1011:
+	int (*show_stats)(struct seq_file *, struct vfsmount *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsmount *' should also have an identifier name
#207: FILE: include/linux/fs.h:1011:
+	int (*show_stats)(struct seq_file *, struct vfsmount *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000198175.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 12 warnings, 6 checks, 155 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000198175.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
