ERROR:TRAILING_WHITESPACE: trailing whitespace
#58: FILE: drivers/i2c/chips/Kconfig:71:
+^I  DS1337 real-time clock chips. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#81: FILE: drivers/i2c/chips/ds1337.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#82: FILE: drivers/i2c/chips/ds1337.c:2:
+ *  linux/drivers/i2c/chips/ds1337.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#117: FILE: drivers/i2c/chips/ds1337.c:37:
+static int debug = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#118: FILE: drivers/i2c/chips/ds1337.c:38:
+module_param(debug, int, S_IRUGO | S_IWUSR);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#159: FILE: drivers/i2c/chips/ds1337.c:79:
+static int ds1337_id = 0;

CHECK:SPACING: No space is necessary after a cast
#169: FILE: drivers/i2c/chips/ds1337.c:89:
+	*value = (u8) (tmp & 0xff);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#186: FILE: drivers/i2c/chips/ds1337.c:106:
+		pr_debug("%s: client=%p, dt=%p\n", __FUNCTION__, client, dt);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#209: FILE: drivers/i2c/chips/ds1337.c:129:
+			 __FUNCTION__, result, buf[0], buf[1], buf[2], buf[3],

WARNING:SPLIT_STRING: quoted string split across lines
#227: FILE: drivers/i2c/chips/ds1337.c:147:
+			pr_debug("%s: secs=%d, mins=%d, "
+				 "hours=%d, mday=%d, "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#228: FILE: drivers/i2c/chips/ds1337.c:148:
+				 "hours=%d, mday=%d, "
+				 "mon=%d, year=%d, wday=%d\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#229: FILE: drivers/i2c/chips/ds1337.c:149:
+				 __FUNCTION__,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#234: FILE: drivers/i2c/chips/ds1337.c:154:
+		printk(KERN_ERR "ds1337[%d]: error reading data! %d\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#250: FILE: drivers/i2c/chips/ds1337.c:170:
+		pr_debug("%s: client=%p, dt=%p\n", __FUNCTION__, client, dt);

WARNING:SPLIT_STRING: quoted string split across lines
#257: FILE: drivers/i2c/chips/ds1337.c:177:
+		pr_debug("%s: secs=%d, mins=%d, hours=%d, "
+			 "mday=%d, mon=%d, year=%d, wday=%d\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#258: FILE: drivers/i2c/chips/ds1337.c:178:
+			 __FUNCTION__,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#285: FILE: drivers/i2c/chips/ds1337.c:205:
+		printk(KERN_ERR "ds1337[%d]: error writing data! %d\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#299: FILE: drivers/i2c/chips/ds1337.c:219:
+		pr_debug("%s: cmd=%d\n", __FUNCTION__, cmd);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#324: FILE: drivers/i2c/chips/ds1337.c:244:
+		if (data->id == id) {
+			return ds1337_command(&data->client, cmd, arg);
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#353: FILE: drivers/i2c/chips/ds1337.c:273:
+	if (!(data = kmalloc(sizeof(struct ds1337_data), GFP_KERNEL))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*data)...) over kmalloc(sizeof(struct ds1337_data)...)
#353: FILE: drivers/i2c/chips/ds1337.c:273:
+	if (!(data = kmalloc(sizeof(struct ds1337_data), GFP_KERNEL))) {

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#363: FILE: drivers/i2c/chips/ds1337.c:283:
+	/* The common I2C client data is placed right before the
+	   DS1337-specific data. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#363: FILE: drivers/i2c/chips/ds1337.c:283:
+	   DS1337-specific data. */

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#412: FILE: drivers/i2c/chips/ds1337.c:332:
+	strlcpy(new_client->name, name, I2C_NAME_SIZE);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#416: FILE: drivers/i2c/chips/ds1337.c:336:
+	if ((err = i2c_attach_client(new_client)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#448: FILE: drivers/i2c/chips/ds1337.c:368:
+	if ((err = i2c_detach_client(client))) {

WARNING:SPLIT_STRING: quoted string split across lines
#450: FILE: drivers/i2c/chips/ds1337.c:370:
+		dev_err(&client->dev, "Client deregistration failed, "
+			"client not detached.\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000203993.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 19 warnings, 2 checks, 418 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000203993.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
