WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
sorry about the previous patch, it was my test code, which will not work....

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#94: FILE: drivers/net/irda/smc-ircc.c:31:
  *     Foundation, Inc., 59 Temple Place, Suite 330, Boston, $

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#101: FILE: drivers/net/irda/smc-ircc.c:36:
+ *     ^I^I^I^IDell Inspiron 8000$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#115: FILE: drivers/net/irda/smc-ircc.c:73:
+};
+typedef struct smc_chip smc_chip_t;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NEW_TYPEDEFS: do not add new typedefs
#115: FILE: drivers/net/irda/smc-ircc.c:73:
+typedef struct smc_chip smc_chip_t;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#120: FILE: drivers/net/irda/smc-ircc.c:77:
+#define	DIM(x)	(sizeof(x)/(sizeof(*(x))))
        	      	          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <NoIRDA>
#148: FILE: drivers/net/irda/smc-ircc.c:104:
+#define	NoIRDA	2	// SuperIO Chip has no IRDA Port

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <SERx4>
#151: FILE: drivers/net/irda/smc-ircc.c:107:
+#define	SERx4	8	// SuperIO Chip supports 115,2 KBaud * 4=460,8 KBaud

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#154: FILE: drivers/net/irda/smc-ircc.c:110:
+static smc_chip_t fdc_chips_flat[]=
                                   ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#155: FILE: drivers/net/irda/smc-ircc.c:111:
+static smc_chip_t fdc_chips_flat[]=
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#157: FILE: drivers/net/irda/smc-ircc.c:113:
+	{ "37C44",	KEY55_1|NoIRDA,		0x00, 0x00 }, /* This chip can not detected */
 	          	       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#158: FILE: drivers/net/irda/smc-ircc.c:114:
+	{ "37C665GT",	KEY55_2|NoIRDA,		0x65, 0x01 },
 	             	       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#159: FILE: drivers/net/irda/smc-ircc.c:115:
+	{ "37C665GT",	KEY55_2|NoIRDA,		0x66, 0x01 },
 	             	       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#160: FILE: drivers/net/irda/smc-ircc.c:116:
+	{ "37C669",	KEY55_2|SIR|SERx4,	0x03, 0x02 },
 	           	       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#160: FILE: drivers/net/irda/smc-ircc.c:116:
+	{ "37C669",	KEY55_2|SIR|SERx4,	0x03, 0x02 },
 	           	           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#161: FILE: drivers/net/irda/smc-ircc.c:117:
+	{ "37C669",	KEY55_2|SIR|SERx4,	0x04, 0x02 }, /* ID? */
 	           	       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#161: FILE: drivers/net/irda/smc-ircc.c:117:
+	{ "37C669",	KEY55_2|SIR|SERx4,	0x04, 0x02 }, /* ID? */
 	           	           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#162: FILE: drivers/net/irda/smc-ircc.c:118:
+	{ "37C78",	KEY55_2|NoIRDA,		0x78, 0x00 },
 	          	       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#163: FILE: drivers/net/irda/smc-ircc.c:119:
+	{ "37N769",	KEY55_1|FIR|SERx4,	0x28, 0x00 },
 	           	       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#163: FILE: drivers/net/irda/smc-ircc.c:119:
+	{ "37N769",	KEY55_1|FIR|SERx4,	0x28, 0x00 },
 	           	           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#164: FILE: drivers/net/irda/smc-ircc.c:120:
+	{ "37N869",	KEY55_1|FIR|SERx4,	0x29, 0x00 },
 	           	       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#164: FILE: drivers/net/irda/smc-ircc.c:120:
+	{ "37N869",	KEY55_1|FIR|SERx4,	0x29, 0x00 },
 	           	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#168: FILE: drivers/net/irda/smc-ircc.c:124:
+static smc_chip_t fdc_chips_paged[]=
                                    ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#169: FILE: drivers/net/irda/smc-ircc.c:125:
+static smc_chip_t fdc_chips_paged[]=
+{

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#170: FILE: drivers/net/irda/smc-ircc.c:126:
+	{ "37B72X",	KEY55_1|SIR|SERx4,	0x4c, 0x00 },
 	           	       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#170: FILE: drivers/net/irda/smc-ircc.c:126:
+	{ "37B72X",	KEY55_1|SIR|SERx4,	0x4c, 0x00 },
 	           	           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#171: FILE: drivers/net/irda/smc-ircc.c:127:
+	{ "37B77X",	KEY55_1|SIR|SERx4,	0x43, 0x00 },
 	           	       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#171: FILE: drivers/net/irda/smc-ircc.c:127:
+	{ "37B77X",	KEY55_1|SIR|SERx4,	0x43, 0x00 },
 	           	           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#172: FILE: drivers/net/irda/smc-ircc.c:128:
+	{ "37B78X",	KEY55_1|SIR|SERx4,	0x44, 0x00 },
 	           	       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#172: FILE: drivers/net/irda/smc-ircc.c:128:
+	{ "37B78X",	KEY55_1|SIR|SERx4,	0x44, 0x00 },
 	           	           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#173: FILE: drivers/net/irda/smc-ircc.c:129:
+	{ "37B80X",	KEY55_1|SIR|SERx4,	0x42, 0x00 },
 	           	       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#173: FILE: drivers/net/irda/smc-ircc.c:129:
+	{ "37B80X",	KEY55_1|SIR|SERx4,	0x42, 0x00 },
 	           	           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#174: FILE: drivers/net/irda/smc-ircc.c:130:
+	{ "37C67X",	KEY55_1|FIR|SERx4,	0x40, 0x00 },
 	           	       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#174: FILE: drivers/net/irda/smc-ircc.c:130:
+	{ "37C67X",	KEY55_1|FIR|SERx4,	0x40, 0x00 },
 	           	           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#175: FILE: drivers/net/irda/smc-ircc.c:131:
+	{ "37C93X",	KEY55_2|SIR|SERx4,	0x02, 0x01 },
 	           	       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#175: FILE: drivers/net/irda/smc-ircc.c:131:
+	{ "37C93X",	KEY55_2|SIR|SERx4,	0x02, 0x01 },
 	           	           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#176: FILE: drivers/net/irda/smc-ircc.c:132:
+	{ "37C93XAPM",	KEY55_1|SIR|SERx4,	0x30, 0x01 },
 	              	       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#176: FILE: drivers/net/irda/smc-ircc.c:132:
+	{ "37C93XAPM",	KEY55_1|SIR|SERx4,	0x30, 0x01 },
 	              	           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#177: FILE: drivers/net/irda/smc-ircc.c:133:
+	{ "37C93XFR",	KEY55_2|FIR|SERx4,	0x03, 0x01 },
 	             	       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#177: FILE: drivers/net/irda/smc-ircc.c:133:
+	{ "37C93XFR",	KEY55_2|FIR|SERx4,	0x03, 0x01 },
 	             	           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#178: FILE: drivers/net/irda/smc-ircc.c:134:
+	{ "37M707",	KEY55_1|SIR|SERx4,	0x42, 0x00 },
 	           	       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#178: FILE: drivers/net/irda/smc-ircc.c:134:
+	{ "37M707",	KEY55_1|SIR|SERx4,	0x42, 0x00 },
 	           	           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#179: FILE: drivers/net/irda/smc-ircc.c:135:
+	{ "37M81X",	KEY55_1|SIR|SERx4,	0x4d, 0x00 },
 	           	       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#179: FILE: drivers/net/irda/smc-ircc.c:135:
+	{ "37M81X",	KEY55_1|SIR|SERx4,	0x4d, 0x00 },
 	           	           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#180: FILE: drivers/net/irda/smc-ircc.c:136:
+	{ "37N958FR",	KEY55_1|FIR|SERx4,	0x09, 0x04 },
 	             	       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#180: FILE: drivers/net/irda/smc-ircc.c:136:
+	{ "37N958FR",	KEY55_1|FIR|SERx4,	0x09, 0x04 },
 	             	           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#181: FILE: drivers/net/irda/smc-ircc.c:137:
+	{ "37N972",	KEY55_1|FIR|SERx4,	0x0a, 0x00 },
 	           	       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#181: FILE: drivers/net/irda/smc-ircc.c:137:
+	{ "37N972",	KEY55_1|FIR|SERx4,	0x0a, 0x00 },
 	           	           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#182: FILE: drivers/net/irda/smc-ircc.c:138:
+	{ "37N972",	KEY55_1|FIR|SERx4,	0x0b, 0x00 },
 	           	       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#182: FILE: drivers/net/irda/smc-ircc.c:138:
+	{ "37N972",	KEY55_1|FIR|SERx4,	0x0b, 0x00 },
 	           	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#186: FILE: drivers/net/irda/smc-ircc.c:142:
+static smc_chip_t lpc_chips_flat[]=
                                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#195: FILE: drivers/net/irda/smc-ircc.c:145:
+	{ "47N227",	KEY55_1|FIR|SERx4,	0x5a, 0x00 },
 	           	       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#195: FILE: drivers/net/irda/smc-ircc.c:145:
+	{ "47N227",	KEY55_1|FIR|SERx4,	0x5a, 0x00 },
 	           	           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#196: FILE: drivers/net/irda/smc-ircc.c:146:
+	{ "47N267",	KEY55_1|FIR|SERx4,	0x5e, 0x00 },
 	           	       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#196: FILE: drivers/net/irda/smc-ircc.c:146:
+	{ "47N267",	KEY55_1|FIR|SERx4,	0x5e, 0x00 },
 	           	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#200: FILE: drivers/net/irda/smc-ircc.c:150:
+static smc_chip_t lpc_chips_paged[]=
                                    ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#201: FILE: drivers/net/irda/smc-ircc.c:151:
+static smc_chip_t lpc_chips_paged[]=
+{

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#202: FILE: drivers/net/irda/smc-ircc.c:152:
+	{ "47B27X",	KEY55_1|SIR|SERx4,	0x51, 0x00 },
 	           	       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#202: FILE: drivers/net/irda/smc-ircc.c:152:
+	{ "47B27X",	KEY55_1|SIR|SERx4,	0x51, 0x00 },
 	           	           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#203: FILE: drivers/net/irda/smc-ircc.c:153:
+	{ "47B37X",	KEY55_1|SIR|SERx4,	0x52, 0x00 },
 	           	       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#203: FILE: drivers/net/irda/smc-ircc.c:153:
+	{ "47B37X",	KEY55_1|SIR|SERx4,	0x52, 0x00 },
 	           	           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#204: FILE: drivers/net/irda/smc-ircc.c:154:
+	{ "47M10X",	KEY55_1|SIR|SERx4,	0x59, 0x00 },
 	           	       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#204: FILE: drivers/net/irda/smc-ircc.c:154:
+	{ "47M10X",	KEY55_1|SIR|SERx4,	0x59, 0x00 },
 	           	           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#205: FILE: drivers/net/irda/smc-ircc.c:155:
+	{ "47M120",	KEY55_1|NoIRDA|SERx4,	0x5c, 0x00 },
 	           	       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#205: FILE: drivers/net/irda/smc-ircc.c:155:
+	{ "47M120",	KEY55_1|NoIRDA|SERx4,	0x5c, 0x00 },
 	           	              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#206: FILE: drivers/net/irda/smc-ircc.c:156:
+	{ "47M13X",	KEY55_1|SIR|SERx4,	0x59, 0x00 },
 	           	       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#206: FILE: drivers/net/irda/smc-ircc.c:156:
+	{ "47M13X",	KEY55_1|SIR|SERx4,	0x59, 0x00 },
 	           	           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#207: FILE: drivers/net/irda/smc-ircc.c:157:
+	{ "47M14X",	KEY55_1|SIR|SERx4,	0x5f, 0x00 },
 	           	       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#207: FILE: drivers/net/irda/smc-ircc.c:157:
+	{ "47M14X",	KEY55_1|SIR|SERx4,	0x5f, 0x00 },
 	           	           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#208: FILE: drivers/net/irda/smc-ircc.c:158:
+	{ "47N252",	KEY55_1|FIR|SERx4,	0x0e, 0x00 },
 	           	       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#208: FILE: drivers/net/irda/smc-ircc.c:158:
+	{ "47N252",	KEY55_1|FIR|SERx4,	0x0e, 0x00 },
 	           	           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#209: FILE: drivers/net/irda/smc-ircc.c:159:
+	{ "47S42X",	KEY55_1|SIR|SERx4,	0x57, 0x00 },
 	           	       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#209: FILE: drivers/net/irda/smc-ircc.c:159:
+	{ "47S42X",	KEY55_1|SIR|SERx4,	0x57, 0x00 },
 	           	           ^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#215: FILE: drivers/net/irda/smc-ircc.c:165:
+static int ircc_fir=0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#215: FILE: drivers/net/irda/smc-ircc.c:165:
+static int ircc_fir=0;
                    ^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#216: FILE: drivers/net/irda/smc-ircc.c:166:
+static int ircc_sir=0;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#216: FILE: drivers/net/irda/smc-ircc.c:166:
+static int ircc_sir=0;
                    ^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#218: FILE: drivers/net/irda/smc-ircc.c:168:
+static unsigned short	dev_count=0;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#218: FILE: drivers/net/irda/smc-ircc.c:168:
+static unsigned short	dev_count=0;
                      	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#226: FILE: drivers/net/irda/smc-ircc.c:176:
+static int smc_access(unsigned short cfg_base,unsigned char reg)
                                              ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#228: FILE: drivers/net/irda/smc-ircc.c:178:
+	IRDA_DEBUG(0, __FUNCTION__ "()\n");

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#232: FILE: drivers/net/irda/smc-ircc.c:182:
+	if (inb(cfg_base)!=reg)
 	                 ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#238: FILE: drivers/net/irda/smc-ircc.c:188:
+static smc_chip_t * smc_probe(unsigned short cfg_base,u8 reg,smc_chip_t *chip,char *type)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#238: FILE: drivers/net/irda/smc-ircc.c:188:
+static smc_chip_t * smc_probe(unsigned short cfg_base,u8 reg,smc_chip_t *chip,char *type)
                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#238: FILE: drivers/net/irda/smc-ircc.c:188:
+static smc_chip_t * smc_probe(unsigned short cfg_base,u8 reg,smc_chip_t *chip,char *type)
                                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#238: FILE: drivers/net/irda/smc-ircc.c:188:
+static smc_chip_t * smc_probe(unsigned short cfg_base,u8 reg,smc_chip_t *chip,char *type)
                                                                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#240: FILE: drivers/net/irda/smc-ircc.c:190:
+^Iu8^Idevid,xdevid; $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#240: FILE: drivers/net/irda/smc-ircc.c:190:
+	u8	devid,xdevid; 
 	  	     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#241: FILE: drivers/net/irda/smc-ircc.c:191:
+^Iu8^Irev; $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#243: FILE: drivers/net/irda/smc-ircc.c:193:
+	IRDA_DEBUG(0, __FUNCTION__ "()\n");

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#249: FILE: drivers/net/irda/smc-ircc.c:199:
+	if (inb(cfg_base)==0xaa)	/* not a smc superio chip */
 	                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#254: FILE: drivers/net/irda/smc-ircc.c:204:
+	xdevid=inb(cfg_base+1);
 	      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#254: FILE: drivers/net/irda/smc-ircc.c:204:
+	xdevid=inb(cfg_base+1);
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#260: FILE: drivers/net/irda/smc-ircc.c:210:
+	if (smc_access(cfg_base,0x55))	/* send second key and check */
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#265: FILE: drivers/net/irda/smc-ircc.c:215:
+	if (smc_access(cfg_base,reg))
 	                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#268: FILE: drivers/net/irda/smc-ircc.c:218:
+	devid=inb(cfg_base+1);
 	     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#268: FILE: drivers/net/irda/smc-ircc.c:218:
+	devid=inb(cfg_base+1);
 	                  ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#270: FILE: drivers/net/irda/smc-ircc.c:220:
+	if (devid==0)			/* typical value for unused port */
 	         ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#273: FILE: drivers/net/irda/smc-ircc.c:223:
+	if (devid==0xff)		/* typical value for unused port */
 	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#278: FILE: drivers/net/irda/smc-ircc.c:228:
+	if (smc_access(cfg_base,reg+1))
 	                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#278: FILE: drivers/net/irda/smc-ircc.c:228:
+	if (smc_access(cfg_base,reg+1))
 	                           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#281: FILE: drivers/net/irda/smc-ircc.c:231:
+	rev=inb(cfg_base+1);
 	   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#281: FILE: drivers/net/irda/smc-ircc.c:231:
+	rev=inb(cfg_base+1);
 	                ^

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#283: FILE: drivers/net/irda/smc-ircc.c:233:
+	if (rev>=128)			/* i think this will make no sense */
 	       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#286: FILE: drivers/net/irda/smc-ircc.c:236:
+^Iif (devid==xdevid)^I^I/* protection against false positives */        $

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#286: FILE: drivers/net/irda/smc-ircc.c:236:
+	if (devid==xdevid)		/* protection against false positives */        
 	         ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#291: FILE: drivers/net/irda/smc-ircc.c:241:
+	while(chip->devid!=devid) {
 	                 ^

ERROR:SPACING: space required before the open parenthesis '('
#291: FILE: drivers/net/irda/smc-ircc.c:241:
+	while(chip->devid!=devid) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#292: FILE: drivers/net/irda/smc-ircc.c:242:
+	while(chip->devid!=devid) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#295: FILE: drivers/net/irda/smc-ircc.c:245:
+		if (chip->name==NULL)
 		              ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chip->name"
#295: FILE: drivers/net/irda/smc-ircc.c:245:
+		if (chip->name==NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#298: FILE: drivers/net/irda/smc-ircc.c:248:
+	if (chip->rev>rev)
 	             ^

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#301: FILE: drivers/net/irda/smc-ircc.c:251:
+	MESSAGE("found SMC SuperIO Chip (devid=0x%02x rev=%02X base=0x%04x): %s%s\n",devid,rev,cfg_base,type,chip->name);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxV)
#301: FILE: drivers/net/irda/smc-ircc.c:251:
+	MESSAGE("found SMC SuperIO Chip (devid=0x%02x rev=%02X base=0x%04x): %s%s\n",devid,rev,cfg_base,type,chip->name);
 	                                                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#301: FILE: drivers/net/irda/smc-ircc.c:251:
+	MESSAGE("found SMC SuperIO Chip (devid=0x%02x rev=%02X base=0x%04x): %s%s\n",devid,rev,cfg_base,type,chip->name);
 	                                                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#301: FILE: drivers/net/irda/smc-ircc.c:251:
+	MESSAGE("found SMC SuperIO Chip (devid=0x%02x rev=%02X base=0x%04x): %s%s\n",devid,rev,cfg_base,type,chip->name);
 	                                                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#301: FILE: drivers/net/irda/smc-ircc.c:251:
+	MESSAGE("found SMC SuperIO Chip (devid=0x%02x rev=%02X base=0x%04x): %s%s\n",devid,rev,cfg_base,type,chip->name);
 	                                                                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#301: FILE: drivers/net/irda/smc-ircc.c:251:
+	MESSAGE("found SMC SuperIO Chip (devid=0x%02x rev=%02X base=0x%04x): %s%s\n",devid,rev,cfg_base,type,chip->name);
 	                                                                                                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#302: FILE: drivers/net/irda/smc-ircc.c:252:
+^I$

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#303: FILE: drivers/net/irda/smc-ircc.c:253:
+	if (chip->flags&NoIRDA)
 	               ^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#310: FILE: drivers/net/irda/smc-ircc.c:260:
+/*
+ * Function smc_superio_flat (chip, base, type)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#322: FILE: drivers/net/irda/smc-ircc.c:272:
+	IRDA_DEBUG(0, __FUNCTION__ "()\n");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#324: FILE: drivers/net/irda/smc-ircc.c:274:
+	if (smc_probe(cfg_base,0xD,chips,type)==NULL)
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#324: FILE: drivers/net/irda/smc-ircc.c:274:
+	if (smc_probe(cfg_base,0xD,chips,type)==NULL)
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#324: FILE: drivers/net/irda/smc-ircc.c:274:
+	if (smc_probe(cfg_base,0xD,chips,type)==NULL)
 	                                ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#324: FILE: drivers/net/irda/smc-ircc.c:274:
+	if (smc_probe(cfg_base,0xD,chips,type)==NULL)
 	                                      ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!smc_probe"
#324: FILE: drivers/net/irda/smc-ircc.c:274:
+	if (smc_probe(cfg_base,0xD,chips,type)==NULL)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#329: FILE: drivers/net/irda/smc-ircc.c:279:
+	mode = inb(cfg_base+1);
 	                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#331: FILE: drivers/net/irda/smc-ircc.c:281:
+^I^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#336: FILE: drivers/net/irda/smc-ircc.c:286:
+		sir_io = inb(cfg_base+1) << 2;
 		                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#338: FILE: drivers/net/irda/smc-ircc.c:288:
+^I       ^I/* FIR iobase */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#338: FILE: drivers/net/irda/smc-ircc.c:288:
+^I       ^I/* FIR iobase */$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#340: FILE: drivers/net/irda/smc-ircc.c:290:
+		fir_io = inb(cfg_base+1) << 3;
 		                     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#344: FILE: drivers/net/irda/smc-ircc.c:294:
+^I^I^I^Iret=0; $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#344: FILE: drivers/net/irda/smc-ircc.c:294:
+				ret=0; 
 				   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#347: FILE: drivers/net/irda/smc-ircc.c:297:
+^I$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#355: FILE: drivers/net/irda/smc-ircc.c:305:
+/*
+ * Function smc_superio_paged (chip, base, type)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#365: FILE: drivers/net/irda/smc-ircc.c:315:
+^I$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#366: FILE: drivers/net/irda/smc-ircc.c:316:
+	IRDA_DEBUG(0, __FUNCTION__ "()\n");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#368: FILE: drivers/net/irda/smc-ircc.c:318:
+	if (smc_probe(cfg_base,0x20,chips,type)==NULL)
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#368: FILE: drivers/net/irda/smc-ircc.c:318:
+	if (smc_probe(cfg_base,0x20,chips,type)==NULL)
 	                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#368: FILE: drivers/net/irda/smc-ircc.c:318:
+	if (smc_probe(cfg_base,0x20,chips,type)==NULL)
 	                                 ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#368: FILE: drivers/net/irda/smc-ircc.c:318:
+	if (smc_probe(cfg_base,0x20,chips,type)==NULL)
 	                                       ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!smc_probe"
#368: FILE: drivers/net/irda/smc-ircc.c:318:
+	if (smc_probe(cfg_base,0x20,chips,type)==NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#370: FILE: drivers/net/irda/smc-ircc.c:320:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#374: FILE: drivers/net/irda/smc-ircc.c:324:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#380: FILE: drivers/net/irda/smc-ircc.c:330:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#390: FILE: drivers/net/irda/smc-ircc.c:340:
+^I^I^Iret=0; $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#390: FILE: drivers/net/irda/smc-ircc.c:340:
+			ret=0; 
 			   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#392: FILE: drivers/net/irda/smc-ircc.c:342:
+^I$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#402: FILE: drivers/net/irda/smc-ircc.c:352:
+		IRDA_DEBUG(0, __FUNCTION__ ": can't get cfg_base of 0x%03x\n",

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#407: FILE: drivers/net/irda/smc-ircc.c:357:
+	if (!smc_superio_flat(fdc_chips_flat,cfg_base,"FDC")||!smc_superio_paged(fdc_chips_paged,cfg_base,"FDC"))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#407: FILE: drivers/net/irda/smc-ircc.c:357:
+	if (!smc_superio_flat(fdc_chips_flat,cfg_base,"FDC")||!smc_superio_paged(fdc_chips_paged,cfg_base,"FDC"))
 	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#407: FILE: drivers/net/irda/smc-ircc.c:357:
+	if (!smc_superio_flat(fdc_chips_flat,cfg_base,"FDC")||!smc_superio_paged(fdc_chips_paged,cfg_base,"FDC"))
 	                                             ^

ERROR:SPACING: spaces required around that '||' (ctx:VxO)
#407: FILE: drivers/net/irda/smc-ircc.c:357:
+	if (!smc_superio_flat(fdc_chips_flat,cfg_base,"FDC")||!smc_superio_paged(fdc_chips_paged,cfg_base,"FDC"))
 	                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#407: FILE: drivers/net/irda/smc-ircc.c:357:
+	if (!smc_superio_flat(fdc_chips_flat,cfg_base,"FDC")||!smc_superio_paged(fdc_chips_paged,cfg_base,"FDC"))
 	                                                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#407: FILE: drivers/net/irda/smc-ircc.c:357:
+	if (!smc_superio_flat(fdc_chips_flat,cfg_base,"FDC")||!smc_superio_paged(fdc_chips_paged,cfg_base,"FDC"))
 	                                                                                                 ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#415: FILE: drivers/net/irda/smc-ircc.c:365:
+#if 0

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#417: FILE: drivers/net/irda/smc-ircc.c:367:
+		IRDA_DEBUG(0, __FUNCTION__ ": can't get cfg_base of 0x%03x\n",

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#423: FILE: drivers/net/irda/smc-ircc.c:373:
+	if (!smc_superio_flat(lpc_chips_flat,cfg_base,"LPC")||!smc_superio_paged(lpc_chips_paged,cfg_base,"LPC"))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#423: FILE: drivers/net/irda/smc-ircc.c:373:
+	if (!smc_superio_flat(lpc_chips_flat,cfg_base,"LPC")||!smc_superio_paged(lpc_chips_paged,cfg_base,"LPC"))
 	                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#423: FILE: drivers/net/irda/smc-ircc.c:373:
+	if (!smc_superio_flat(lpc_chips_flat,cfg_base,"LPC")||!smc_superio_paged(lpc_chips_paged,cfg_base,"LPC"))
 	                                             ^

ERROR:SPACING: spaces required around that '||' (ctx:VxO)
#423: FILE: drivers/net/irda/smc-ircc.c:373:
+	if (!smc_superio_flat(lpc_chips_flat,cfg_base,"LPC")||!smc_superio_paged(lpc_chips_paged,cfg_base,"LPC"))
 	                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#423: FILE: drivers/net/irda/smc-ircc.c:373:
+	if (!smc_superio_flat(lpc_chips_flat,cfg_base,"LPC")||!smc_superio_paged(lpc_chips_paged,cfg_base,"LPC"))
 	                                                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#423: FILE: drivers/net/irda/smc-ircc.c:373:
+	if (!smc_superio_flat(lpc_chips_flat,cfg_base,"LPC")||!smc_superio_paged(lpc_chips_paged,cfg_base,"LPC"))
 	                                                                                                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#441: FILE: drivers/net/irda/smc-ircc.c:387:
+	int ret=-ENODEV;
 	       ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#441: FILE: drivers/net/irda/smc-ircc.c:387:
+	int ret=-ENODEV;
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#467: FILE: drivers/net/irda/smc-ircc.c:391:
+	dev_count=0;
 	         ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#469: FILE: drivers/net/irda/smc-ircc.c:393:
+	if ((ircc_fir>0)&&(ircc_sir>0)) {
 	             ^

ERROR:SPACING: spaces required around that '&&' (ctx:VxV)
#469: FILE: drivers/net/irda/smc-ircc.c:393:
+	if ((ircc_fir>0)&&(ircc_sir>0)) {
 	                ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#469: FILE: drivers/net/irda/smc-ircc.c:393:
+	if ((ircc_fir>0)&&(ircc_sir>0)) {
 	                           ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ircc_fir>0'
#469: FILE: drivers/net/irda/smc-ircc.c:393:
+	if ((ircc_fir>0)&&(ircc_sir>0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:CODE_INDENT: code indent should use tabs where possible
#470: FILE: drivers/net/irda/smc-ircc.c:394:
+^I        MESSAGE(" Overriding FIR address 0x%04x\n", ircc_fir);$

WARNING:TYPO_SPELLING: 'Trys' may be misspelled - perhaps 'Tries'?
#479: FILE: drivers/net/irda/smc-ircc.c:403:
+	/* Trys to open for all the SMC chipsets we know about */
 	   ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#481: FILE: drivers/net/irda/smc-ircc.c:405:
+^IIRDA_DEBUG(0, __FUNCTION__ $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#481: FILE: drivers/net/irda/smc-ircc.c:405:
+	IRDA_DEBUG(0, __FUNCTION__ 

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#485: FILE: drivers/net/irda/smc-ircc.c:409:
+		ret=0;
 		   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#487: FILE: drivers/net/irda/smc-ircc.c:411:
+		ret=0;
 		   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#489: FILE: drivers/net/irda/smc-ircc.c:413:
+		ret=0;
 		   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#491: FILE: drivers/net/irda/smc-ircc.c:415:
+		ret=0;
 		   ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#518: FILE: drivers/net/irda/smc-ircc.c:456:
+		IRDA_DEBUG(0, __FUNCTION__ ": can't get fir_base of 0x%03x\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#524: FILE: drivers/net/irda/smc-ircc.c:462:
+		IRDA_DEBUG(0, __FUNCTION__ ": can't get sir_base of 0x%03x\n",

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#532: FILE: drivers/net/irda/smc-ircc.c:470:
+	high    = inb(fir_base+IRCC_ID_HIGH);
 	                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#533: FILE: drivers/net/irda/smc-ircc.c:471:
+	low     = inb(fir_base+IRCC_ID_LOW);
 	                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#534: FILE: drivers/net/irda/smc-ircc.c:472:
+	chip    = inb(fir_base+IRCC_CHIP_ID);
 	                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#535: FILE: drivers/net/irda/smc-ircc.c:473:
+	version = inb(fir_base+IRCC_VERSION);
 	                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#536: FILE: drivers/net/irda/smc-ircc.c:474:
+	config  = inb(fir_base+IRCC_INTERFACE);
 	                      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#541: FILE: drivers/net/irda/smc-ircc.c:479:
+        if (high != 0x10 || low != 0xb8 || (chip != 0xf1 && chip != 0xf2)) { $

ERROR:CODE_INDENT: code indent should use tabs where possible
#541: FILE: drivers/net/irda/smc-ircc.c:479:
+        if (high != 0x10 || low != 0xb8 || (chip != 0xf1 && chip != 0xf2)) { $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#541: FILE: drivers/net/irda/smc-ircc.c:479:
+        if (high != 0x10 || low != 0xb8 || (chip != 0xf1 && chip != 0xf2)) { $

WARNING:SPLIT_STRING: quoted string split across lines
#549: FILE: drivers/net/irda/smc-ircc.c:485:
+	MESSAGE("SMC IrDA Controller found\n IrCC version %d.%d, "
+		"firport 0x%03x, sirport 0x%03x dma=%d, irq=%d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#552: FILE: drivers/net/irda/smc-ircc.c:488:
+	if (dev_count>DIM(dev_self)) {
 	             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#553: FILE: drivers/net/irda/smc-ircc.c:489:
+^I        IRDA_DEBUG(0, __FUNCTION__ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#553: FILE: drivers/net/irda/smc-ircc.c:489:
+^I        IRDA_DEBUG(0, __FUNCTION__ $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#553: FILE: drivers/net/irda/smc-ircc.c:489:
+	        IRDA_DEBUG(0, __FUNCTION__ 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#572: FILE: drivers/net/irda/smc-ircc.c:507:
+^Iself->rx_buff.truesize = 4000; $

CHECK:SPACING: No space is necessary after a cast
#575: FILE: drivers/net/irda/smc-ircc.c:510:
+	self->rx_buff.head = (__u8 *) kmalloc(self->rx_buff.truesize,

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#575: FILE: drivers/net/irda/smc-ircc.c:510:
+	self->rx_buff.head = (__u8 *) kmalloc(self->rx_buff.truesize,

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#576: FILE: drivers/net/irda/smc-ircc.c:511:
+					      GFP_KERNEL|GFP_DMA);
 					                ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!self->rx_buff.head"
#577: FILE: drivers/net/irda/smc-ircc.c:512:
+	if (self->rx_buff.head == NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#579: FILE: drivers/net/irda/smc-ircc.c:514:
+                      driver_name);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#579: FILE: drivers/net/irda/smc-ircc.c:514:
+		ERROR("%s, Can't allocate memory for receive buffer!\n",
+                      driver_name);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#579: FILE: drivers/net/irda/smc-ircc.c:514:
+                      driver_name);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#584: FILE: drivers/net/irda/smc-ircc.c:519:
+^Iself->tx_buff.head = (__u8 *) kmalloc(self->tx_buff.truesize, $

CHECK:SPACING: No space is necessary after a cast
#584: FILE: drivers/net/irda/smc-ircc.c:519:
+	self->tx_buff.head = (__u8 *) kmalloc(self->tx_buff.truesize, 

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#584: FILE: drivers/net/irda/smc-ircc.c:519:
+	self->tx_buff.head = (__u8 *) kmalloc(self->tx_buff.truesize, 

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#585: FILE: drivers/net/irda/smc-ircc.c:520:
+					      GFP_KERNEL|GFP_DMA);
 					                ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!self->tx_buff.head"
#586: FILE: drivers/net/irda/smc-ircc.c:521:
+	if (self->tx_buff.head == NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#588: FILE: drivers/net/irda/smc-ircc.c:523:
+                      driver_name);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#588: FILE: drivers/net/irda/smc-ircc.c:523:
+		ERROR("%s, Can't allocate memory for transmit buffer!\n",
+                      driver_name);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#588: FILE: drivers/net/irda/smc-ircc.c:523:
+                      driver_name);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#604: FILE: drivers/net/irda/smc-ircc.c:539:
+   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#604: FILE: drivers/net/irda/smc-ircc.c:539:
+   $

ERROR:CODE_INDENT: code indent should use tabs where possible
#618: FILE: drivers/net/irda/smc-ircc.c:552:
+        self->io.fir_ext   = CHIP_IO_EXTENT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#618: FILE: drivers/net/irda/smc-ircc.c:552:
+        self->io.fir_ext   = CHIP_IO_EXTENT;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#619: FILE: drivers/net/irda/smc-ircc.c:553:
+        self->io.sir_ext   = 8;       /* Used by irport */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#619: FILE: drivers/net/irda/smc-ircc.c:553:
+        self->io.sir_ext   = 8;       /* Used by irport */$

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#624: FILE: drivers/net/irda/smc-ircc.c:556:
+		if (ircc_irq!=irq)
 		            ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#632: FILE: drivers/net/irda/smc-ircc.c:561:
 	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#637: FILE: drivers/net/irda/smc-ircc.c:564:
+		if (ircc_dma!=dma)
 		            ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#642: FILE: drivers/net/irda/smc-ircc.c:569:
 	}
+	else

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#688: FILE: drivers/net/irda/smc-ircc.c:607:
+	outb(0x00, fir_base+IRCC_MASTER);
 	                   ^

WARNING:TYPO_SPELLING: 'Adress' may be misspelled - perhaps 'Address'?
#845: FILE: drivers/net/irda/smc-ircc.c:1230:
+MODULE_PARM_DESC(ircc_fir, "FIR Base Adress");
                                      ^^^^^^

WARNING:TYPO_SPELLING: 'Adress' may be misspelled - perhaps 'Address'?
#847: FILE: drivers/net/irda/smc-ircc.c:1232:
+MODULE_PARM_DESC(ircc_sir, "SIR Base Adress");
                                      ^^^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000523553.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 103 errors, 32 warnings, 89 checks, 773 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000523553.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
