ERROR:TRAILING_WHITESPACE: trailing whitespace
#51: FILE: fs/9p/9p.c:335:
+v9fs_t_create(struct v9fs_session_info *v9ses, u32 fid, char *name, u32 perm, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#52: FILE: fs/9p/9p.c:336:
+v9fs_t_create(struct v9fs_session_info *v9ses, u32 fid, char *name, u32 perm, 
+	u8 mode, char *extension, struct v9fs_fcall **rcp)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#61: FILE: fs/9p/9p.c:344:
+^Itc = v9fs_create_tcreate(fid, name, perm, mode, extension, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#62: FILE: fs/9p/9p.c:345:
+	tc = v9fs_create_tcreate(fid, name, perm, mode, extension, 
+		v9ses->extended);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#85: FILE: fs/9p/9p.h:369:
+int v9fs_t_create(struct v9fs_session_info *v9ses, u32 fid, char *name, $

WARNING:TYPO_SPELLING: 'rcall' may be misspelled - perhaps 'recall'?
#86: FILE: fs/9p/9p.h:370:
+	u32 perm, u8 mode, char *extension, struct v9fs_fcall **rcall);
 	                                                        ^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#86: FILE: fs/9p/9p.h:370:
+int v9fs_t_create(struct v9fs_session_info *v9ses, u32 fid, char *name, 
+	u32 perm, u8 mode, char *extension, struct v9fs_fcall **rcall);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#99: FILE: fs/9p/conv.c:667:
+struct v9fs_fcall *v9fs_create_tcreate(u32 fid, char *name, u32 perm, u8 mode, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#100: FILE: fs/9p/conv.c:668:
+struct v9fs_fcall *v9fs_create_tcreate(u32 fid, char *name, u32 perm, u8 mode, 
+	char *extension, int extended)

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#108: FILE: fs/9p/conv.c:676:
+	if (extended && extension!=NULL)
 	                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "extension"
#108: FILE: fs/9p/conv.c:676:
+	if (extended && extension!=NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#133: FILE: fs/9p/conv.h:44:
+struct v9fs_fcall *v9fs_create_tcreate(u32 fid, char *name, u32 perm, u8 mode,
+	char *extension, int extended);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*vfid)...) over kmalloc(sizeof(struct v9fs_fid)...)
#177: FILE: fs/9p/vfs_file.c:91:
+	vfid = kmalloc(sizeof(struct v9fs_fid), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vfid"
#178: FILE: fs/9p/vfs_file.c:92:
+	if (vfid == NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#212: FILE: fs/9p/vfs_inode.c:258:
+v9fs_create(struct v9fs_session_info *v9ses, u32 pfid, char *name, u32 perm, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#213: FILE: fs/9p/vfs_inode.c:259:
+v9fs_create(struct v9fs_session_info *v9ses, u32 pfid, char *name, u32 perm, 
+	u8 mode, char *extension, u32 *fidp, struct v9fs_qid *qid, u32 *iounit)

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#277: FILE: fs/9p/vfs_inode.c:1020:
+	dprintk(DEBUG_ERROR, "%s -> %.*s (%s)\n", dentry->d_name.name, fcall->params.rstat.stat.extension.len,

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#307: FILE: fs/9p/vfs_inode.c:1131:
+		perm, V9FS_OREAD, (char *) extension, &fid, NULL, NULL);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000093713.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 2 warnings, 10 checks, 258 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000093713.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
