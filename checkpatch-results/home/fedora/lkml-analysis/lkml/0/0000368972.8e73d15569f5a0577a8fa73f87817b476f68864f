WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#84: 
diff -Nur --exclude=SCCS --exclude=BitKeeper --exclude=ChangeSet ./fs/Makefile ../linux-aiopoll/fs/Makefile

WARNING:PATCH_PREFIX: patch prefix '..' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '..' exists, appears to be a -p0 patch

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#106: FILE: linux-aiopoll/fs/aio.c:989:
+	unsigned events = iocb->aio_buf;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#108: FILE: linux-aiopoll/fs/aio.c:991:
+^I/* Did the user set any bits they weren't supposed to? (The $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#113: FILE: linux-aiopoll/fs/aio.c:996:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#124: FILE: linux-aiopoll/fs/aio.c:1086:
+ ^Icase IOCB_CMD_POLL:$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#124: FILE: linux-aiopoll/fs/aio.c:1086:
+ ^Icase IOCB_CMD_POLL:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: linux-aiopoll/fs/aio.c:1086:
+ ^Icase IOCB_CMD_POLL:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#125: FILE: linux-aiopoll/fs/aio.c:1087:
+ ^I^Iret = generic_aio_poll(file, req, iocb);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#125: FILE: linux-aiopoll/fs/aio.c:1087:
+ ^I^Iret = generic_aio_poll(file, req, iocb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: linux-aiopoll/fs/aio.c:1087:
+ ^I^Iret = generic_aio_poll(file, req, iocb);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#126: FILE: linux-aiopoll/fs/aio.c:1088:
+ ^I^Ibreak;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#126: FILE: linux-aiopoll/fs/aio.c:1088:
+ ^I^Ibreak;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: linux-aiopoll/fs/aio.c:1088:
+ ^I^Ibreak;$

WARNING:PATCH_PREFIX: patch prefix '..' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#134: FILE: linux-aiopoll/fs/aiopoll.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#165: FILE: linux-aiopoll/fs/aiopoll.c:32:
+	BUG_ON(sizeof(struct async_poll_iocb) > KIOCB_PRIVATE_SIZE);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#180: FILE: linux-aiopoll/fs/aiopoll.c:47:
+		if (wait != &entry->wait) {
[...]
+		} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#187: FILE: linux-aiopoll/fs/aiopoll.c:54:
+		if (old != &apiocb->entry[0] && old != &apiocb->entry[1]) {
+			kmem_cache_free(async_poll_entry_cache, old);
+		}

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#193: FILE: linux-aiopoll/fs/aiopoll.c:60:
+static int async_poll_waiter(wait_queue_t *wait, unsigned mode, int sync)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#204: FILE: linux-aiopoll/fs/aiopoll.c:71:
+^I^I^Iasync_poll_freewait(apiocb, wait); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#220: FILE: linux-aiopoll/fs/aiopoll.c:87:
+^I^Iasync_poll_freewait(apiocb, NULL); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: linux-aiopoll/fs/aiopoll.c:88:
+ ^I^I/*$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#221: FILE: linux-aiopoll/fs/aiopoll.c:88:
+ ^I^I/*$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: linux-aiopoll/fs/aiopoll.c:88:
+ ^I^I/*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#222: FILE: linux-aiopoll/fs/aiopoll.c:89:
+ ^I^I * Since async_poll_freewait() locks the wait queue, we$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#222: FILE: linux-aiopoll/fs/aiopoll.c:89:
+ ^I^I * Since async_poll_freewait() locks the wait queue, we$

ERROR:CODE_INDENT: code indent should use tabs where possible
#225: FILE: linux-aiopoll/fs/aiopoll.c:92:
+ ^I^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#225: FILE: linux-aiopoll/fs/aiopoll.c:92:
+ ^I^I */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#226: FILE: linux-aiopoll/fs/aiopoll.c:93:
+  ^I^Iaio_put_req(iocb);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#226: FILE: linux-aiopoll/fs/aiopoll.c:93:
+  ^I^Iaio_put_req(iocb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: linux-aiopoll/fs/aiopoll.c:93:
+  ^I^Iaio_put_req(iocb);$

WARNING:TYPO_SPELLING: 'preceeding' may be misspelled - perhaps 'preceding'?
#277: FILE: linux-aiopoll/fs/aiopoll.c:144:
+	 * Flush the preceeding before letting the complete
 	             ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#286: FILE: linux-aiopoll/fs/aiopoll.c:153:
+ ^Iif (mask && xchg(&apiocb->armed, NULL)) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#286: FILE: linux-aiopoll/fs/aiopoll.c:153:
+ ^Iif (mask && xchg(&apiocb->armed, NULL)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: linux-aiopoll/fs/aiopoll.c:153:
+ ^Iif (mask && xchg(&apiocb->armed, NULL)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#304: FILE: linux-aiopoll/fs/aiopoll.c:171:
+                        sizeof(struct async_poll_entry), 0, 0, NULL, NULL);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#304: FILE: linux-aiopoll/fs/aiopoll.c:171:
+	async_poll_entry_cache = kmem_cache_create("async poll entry",
+                        sizeof(struct async_poll_entry), 0, 0, NULL, NULL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: linux-aiopoll/fs/aiopoll.c:171:
+                        sizeof(struct async_poll_entry), 0, 0, NULL, NULL);$

WARNING:PATCH_PREFIX: patch prefix '..' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '..' exists, appears to be a -p0 patch

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#330: FILE: linux-aiopoll/include/linux/aio.h:169:
+extern int async_poll(struct kiocb *iocb, int events);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:PATCH_PREFIX: patch prefix '..' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '..' exists, appears to be a -p0 patch

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000368972.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 30 warnings, 2 checks, 245 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000368972.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
