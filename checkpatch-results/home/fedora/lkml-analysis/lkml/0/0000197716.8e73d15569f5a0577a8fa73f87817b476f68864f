WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
NOTE: This update fixes a remote security issue on PPP servers which is also

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#135: FILE: Makefile:4:
+EXTRAVERSION = -hf5
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#153: FILE: arch/i386/kernel/i387.c:137:
+#define FPREG_ADDR(f, n)	((void *)&(f)->st_space + (n) * 16);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:SPACING: space prohibited after that open parenthesis '('
#158: FILE: arch/i386/kernel/i387.c:141:
+			st = FPREG_ADDR( fxsave, (i - tos) & 7 );

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#158: FILE: arch/i386/kernel/i387.c:141:
+			st = FPREG_ADDR( fxsave, (i - tos) & 7 );

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#210: FILE: arch/x86_64/ia32/fpu32.c:37:
+#define FPREG_ADDR(f, n)	((void *)&(f)->st_space + (n) * 16);

ERROR:SPACING: space prohibited after that open parenthesis '('
#215: FILE: arch/x86_64/ia32/fpu32.c:41:
+			st = FPREG_ADDR( fxsave, (i - tos) & 7 );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#215: FILE: arch/x86_64/ia32/fpu32.c:41:
+			st = FPREG_ADDR( fxsave, (i - tos) & 7 );

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct tty_struct *' should also have an identifier name
#226: FILE: drivers/char/pty.c:221:
+	ssize_t (*chars_in_buffer)(struct tty_struct *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#231: FILE: drivers/char/pty.c:225:
+	if (!to || !(chars_in_buffer = to->ldisc.chars_in_buffer))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#285: FILE: mm/memory.c:502:
+				if (!pages[i] || PageReserved(pages[i])) {
[...]
+				} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#288: FILE: mm/memory.c:505:
+				} else

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000197716.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 5 warnings, 2 checks, 134 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000197716.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
