WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
diff -ruN -X dontdiff linux-2.6.6/arch/mips/kernel/irixioctl.c files_struct-2.6.6/arch/mips/kernel/irixioctl.c

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#58: FILE: arch/mips/kernel/irixioctl.c:38:
+	filp = fcheck_rcu(fd);
 	^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#107: FILE: arch/sparc64/solaris/timod.c:146:
+	struct file *filp; 
 	             ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#107: FILE: arch/sparc64/solaris/timod.c:146:
+^Istruct file *filp; $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#111: FILE: arch/sparc64/solaris/timod.c:149:
+	if (!( filp = fcheck(fd))) {
 	       ^^^^

ERROR:SPACING: space prohibited after that open parenthesis '('
#111: FILE: arch/sparc64/solaris/timod.c:149:
+	if (!( filp = fcheck(fd))) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#111: FILE: arch/sparc64/solaris/timod.c:149:
+	if (!( filp = fcheck(fd))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#123: FILE: arch/sparc64/solaris/timod.c:165:
+	struct file *filp; 
 	             ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#123: FILE: arch/sparc64/solaris/timod.c:165:
+^Istruct file *filp; $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#127: FILE: arch/sparc64/solaris/timod.c:168:
+	if (!( filp = fcheck(fd))) {
 	       ^^^^

ERROR:SPACING: space prohibited after that open parenthesis '('
#127: FILE: arch/sparc64/solaris/timod.c:168:
+	if (!( filp = fcheck(fd))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#127: FILE: arch/sparc64/solaris/timod.c:168:
+	if (!( filp = fcheck(fd))) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#139: FILE: arch/sparc64/solaris/timod.c:184:
+	struct file *filp; 
 	             ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#139: FILE: arch/sparc64/solaris/timod.c:184:
+^Istruct file *filp; $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#143: FILE: arch/sparc64/solaris/timod.c:187:
+	if (!( filp = fcheck(fd))) {
 	       ^^^^

ERROR:SPACING: space prohibited after that open parenthesis '('
#143: FILE: arch/sparc64/solaris/timod.c:187:
+	if (!( filp = fcheck(fd))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#143: FILE: arch/sparc64/solaris/timod.c:187:
+	if (!( filp = fcheck(fd))) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#157: FILE: arch/sparc64/solaris/timod.c:370:
+	if (!(filp = fcheck(fd)))
 	      ^^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#157: FILE: arch/sparc64/solaris/timod.c:370:
+	if (!(filp = fcheck(fd)))

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#169: FILE: arch/sparc64/solaris/timod.c:654:
+	if (!(filp = fcheck(fd)))
 	      ^^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#169: FILE: arch/sparc64/solaris/timod.c:654:
+	if (!(filp = fcheck(fd)))

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#180: FILE: arch/sparc64/solaris/timod.c:872:
+	filp = fcheck(fd);
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#189: FILE: arch/sparc64/solaris/timod.c:939:
+	filp = fcheck(fd);
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#204: FILE: drivers/char/tty_io.c:1941:
+				filp = fcheck_files_rcu(p->files, i);
 				^^^^

WARNING:MEMORY_BARRIER: memory barrier without comment
#313: FILE: fs/fcntl.c:186:
+	wmb();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#328: FILE: fs/file.c:21:
+^Istruct file **array;   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#345: FILE: fs/file.c:65:
+static void fd_array_callback(struct rcu_head *rcu) $

WARNING:LINE_SPACING: Missing a blank line after declarations
#348: FILE: fs/file.c:68:
+	struct rcu_fd_array *a = container_of(rcu, struct rcu_fd_array, rh);
+	free_fd_array(a->array, a->nfds);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#349: FILE: fs/file.c:69:
+^Ikfree(a); $

CHECK:SPACING: No space is necessary after a cast
#371: FILE: fs/file.c:113:
+	arg = (struct rcu_fd_array *) kmalloc(sizeof(*arg), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#371: FILE: fs/file.c:113:
+	arg = (struct rcu_fd_array *) kmalloc(sizeof(*arg), GFP_KERNEL);

WARNING:MEMORY_BARRIER: memory barrier without comment
#401: FILE: fs/file.c:134:
+		smp_wmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#403: FILE: fs/file.c:136:
+		smp_wmb();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#405: FILE: fs/file.c:138:
+^I^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#406: FILE: fs/file.c:139:
+		if (i) {
[...]
+		} else 
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#411: FILE: fs/file.c:144:
+^I^I} else $

CHECK:BRACES: Unbalanced braces around else statement
#411: FILE: fs/file.c:144:
+		} else 

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#427: FILE: fs/file.c:159:
+	if (arg)
+		kfree(arg);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#436: FILE: fs/file.c:192:
+static void fd_set_callback (struct rcu_head *rcu)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#438: FILE: fs/file.c:194:
+^Istruct rcu_fd_set *a = container_of(rcu, struct rcu_fd_set, rh); $

WARNING:LINE_SPACING: Missing a blank line after declarations
#439: FILE: fs/file.c:195:
+	struct rcu_fd_set *a = container_of(rcu, struct rcu_fd_set, rh); 
+	free_fdset(a->openset, a->nfds);

CHECK:SPACING: No space is necessary after a cast
#459: FILE: fs/file.c:231:
+	arg = (struct rcu_fd_set *) kmalloc(sizeof(*arg), GFP_ATOMIC);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#459: FILE: fs/file.c:231:
+	arg = (struct rcu_fd_set *) kmalloc(sizeof(*arg), GFP_ATOMIC);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#484: FILE: fs/file.c:251:
+			memcpy (new_openset, old_openset, old_nfds/8);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#484: FILE: fs/file.c:251:
+			memcpy (new_openset, old_openset, old_nfds/8);
 			                                          ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#485: FILE: fs/file.c:252:
+			memcpy (new_execset, old_execset, old_nfds/8);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#485: FILE: fs/file.c:252:
+			memcpy (new_execset, old_execset, old_nfds/8);
 			                                          ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#497: FILE: fs/file.c:257:
+		smp_wmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#500: FILE: fs/file.c:260:
+		smp_wmb();

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#516: FILE: fs/file.c:279:
+	if (arg)
+		kfree(arg);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#639: FILE: fs/open.c:1031:
+^Ifiles->fd[fd] = NULL;^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#787: FILE: fs/select.c:144:
+	open_fds = open_fdset->fds_bits+n;
 	                               ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#819: FILE: include/linux/file.h:74:
+static inline struct file * fcheck_files_rcu(struct files_struct *files, unsigned int fd)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#821: FILE: include/linux/file.h:76:
+	struct file * file = NULL;

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#824: FILE: include/linux/file.h:79:
+		struct file ** fd_array;

WARNING:LINE_SPACING: Missing a blank line after declarations
#825: FILE: include/linux/file.h:80:
+		struct file ** fd_array;
+		smp_rmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#825: FILE: include/linux/file.h:80:
+		smp_rmb();

ERROR:CODE_INDENT: code indent should use tabs where possible
#826: FILE: include/linux/file.h:81:
+^I       ^Ifd_array = files->fd;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#826: FILE: include/linux/file.h:81:
+^I       ^Ifd_array = files->fd;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#907: FILE: kernel/fork.c:666:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#908: FILE: kernel/fork.c:667:
+^I/* $

WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#910: FILE: kernel/fork.c:669:
+	 * grown now, we'll only copy upto "size" fds 
 	                              ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#910: FILE: kernel/fork.c:669:
+^I * grown now, we'll only copy upto "size" fds $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#912: FILE: kernel/fork.c:671:
+^Isize = oldf->max_fdset;^I$

WARNING:MEMORY_BARRIER: memory barrier without comment
#913: FILE: kernel/fork.c:672:
+	smp_rmb();

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000268018.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 26 errors, 32 warnings, 7 checks, 927 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000268018.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
