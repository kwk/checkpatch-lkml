WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#41: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1887:
+static void ipath_disarm_piobufs(const ipath_type t, unsigned first,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#42: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1888:
+				 unsigned cnt)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#44: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1890:
+	unsigned i, last = first + cnt;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#45: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1891:
+	uint64_t sendctrl;

WARNING:LINE_SPACING: Missing a blank line after declarations
#46: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1892:
+	uint64_t sendctrl;
+	for (i = first; i < last; i++) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#53: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1899:
+static void ipath_clean_partkey(struct ipath_portdata * pd,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#54: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1900:
+				struct ipath_devdata * dd)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#57: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1903:
+	uint64_t oldpkey;

CHECK:SPACING: No space is necessary after a cast
#61: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1907:
+	    (uint64_t) dd->ipath_pkeys[0] | ((uint64_t) dd->

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'dd->ipath_pkeys[1]'
#62: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1908:
+	    (uint64_t) dd->ipath_pkeys[0] | ((uint64_t) dd->
+					     ipath_pkeys[1] << 16)

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

CHECK:SPACING: No space is necessary after a cast
#63: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1909:
+	    | ((uint64_t) dd->ipath_pkeys[2] << 32)

CHECK:SPACING: No space is necessary after a cast
#64: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1910:
+	    | ((uint64_t) dd->ipath_pkeys[3] << 48);

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(pd->port_pkeys)
#66: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1912:
+	for (i = 0; i < (sizeof(pd->port_pkeys) / sizeof(pd->port_pkeys[0]));

The ARRAY_SIZE(foo) macro should be preferred over
sizeof(foo)/sizeof(foo[0]) for finding number of elements in an
array.

The macro is defined in include/linux/kernel.h::

  #define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(dd->ipath_pkeys)
#73: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1919:
+		     j < (sizeof(dd->ipath_pkeys) / sizeof(dd->ipath_pkeys[0]));

CHECK:BRACES: Unbalanced braces around else statement
#86: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1932:
+				} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'dd->ipath_pkeyrefs[j]'
#92: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1938:
+					     atomic_read(&dd->
+							 ipath_pkeyrefs[j]));

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#99: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1945:
+		uint64_t pkey;

WARNING:LINE_SPACING: Missing a blank line after declarations
#100: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1946:
+		uint64_t pkey;
+		pkey =

CHECK:SPACING: No space is necessary after a cast
#101: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1947:
+		    (uint64_t) dd->ipath_pkeys[0] | ((uint64_t) dd->

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'dd->ipath_pkeys[1]'
#102: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1948:
+		    (uint64_t) dd->ipath_pkeys[0] | ((uint64_t) dd->
+						     ipath_pkeys[1] << 16)

CHECK:SPACING: No space is necessary after a cast
#103: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1949:
+		    | ((uint64_t) dd->ipath_pkeys[2] << 32)

CHECK:SPACING: No space is necessary after a cast
#104: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:1950:
+		    | ((uint64_t) dd->ipath_pkeys[3] << 48);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#154: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2000:
+	unsigned unit = (arg >> 16) & 0xffff;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#157: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2003:
+	if (unit >= infinipath_max
+	    || !(devdata[unit].ipath_flags & IPATH_INITTED)) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#171: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2017:
+	unsigned unit = (arg >> 16) & 0xffff;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#174: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2020:
+	if (unit >= infinipath_max
+	    || !(devdata[unit].ipath_flags & IPATH_INITTED)) {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#182: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2028:
+	ipath_stats.sps_mlid[unit] = devdata[unit].ipath_mlid = arg;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#193: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2039:
+	uint64_t unit64;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#194: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2040:
+	uint32_t unit;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#195: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2041:
+	uint64_t devstatus;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#197: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2043:
+	if ((ret = copy_from_user(&unit64, a, sizeof unit64))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:SIZEOF_PARENTHESIS: sizeof unit64 should be sizeof(unit64)
#197: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2043:
+	if ((ret = copy_from_user(&unit64, a, sizeof unit64))) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#203: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2049:
+	if (unit >= infinipath_max
+	    || !(devdata[unit].ipath_flags & IPATH_INITTED)) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#210: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2056:
+	if ((ret = copy_to_user(a, &devstatus, sizeof devstatus))) {

WARNING:SIZEOF_PARENTHESIS: sizeof devstatus should be sizeof(devstatus)
#210: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2056:
+	if ((ret = copy_to_user(a, &devstatus, sizeof devstatus))) {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#222: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2068:
+	uint32_t unit;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#223: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2069:
+	uint32_t mlid;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#225: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2071:
+	if ((ret = copy_from_user(&unit, a, sizeof unit))) {

WARNING:SIZEOF_PARENTHESIS: sizeof unit should be sizeof(unit)
#225: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2071:
+	if ((ret = copy_from_user(&unit, a, sizeof unit))) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#230: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2076:
+	if (unit >= infinipath_max
+	    || !(devdata[unit].ipath_flags & IPATH_INITTED)) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#237: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2083:
+	if ((ret = copy_to_user(a, &mlid, sizeof mlid))) {

WARNING:SIZEOF_PARENTHESIS: sizeof mlid should be sizeof(mlid)
#237: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2083:
+	if ((ret = copy_to_user(a, &mlid, sizeof mlid))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#249: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2095:
+	if ((ret = copy_from_user(&setguid, a, sizeof setguid))) {

WARNING:SIZEOF_PARENTHESIS: sizeof setguid should be sizeof(setguid)
#249: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2095:
+	if ((ret = copy_from_user(&setguid, a, sizeof setguid))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#290: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2136:
+	if ((ret = copy_from_user(&rpkt, p, sizeof rpkt))) {

WARNING:SIZEOF_PARENTHESIS: sizeof rpkt should be sizeof(rpkt)
#290: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2136:
+	if ((ret = copy_from_user(&rpkt, p, sizeof rpkt))) {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#313: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2159:
+		uint32_t slen;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#314: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2160:
+		uint8_t *sdata;

CHECK:SPACING: No space is necessary after a cast
#341: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2187:
+		len = min((uint32_t) rpkt.sps_iov[0].iov_len, slen);

WARNING:MINMAX: min() should probably be min_t(uint32_t, rpkt.sps_iov[0].iov_len, slen)
#341: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2187:
+		len = min((uint32_t) rpkt.sps_iov[0].iov_len, slen);

CHECK:SPACING: No space is necessary after a cast
#342: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2188:
+		ret = copy_to_user((void __user *) rpkt.sps_iov[0].iov_base,

WARNING:SPLIT_STRING: quoted string split across lines
#345: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2191:
+		_IPATH_VDBG("SMA packet (index=%d), len %d (actual %d) "
+			    "buf %p, ubuf %llx\n", ipath_sma_first, slen,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#351: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2197:
+			if ((ret = copy_to_user(p, &rpkt, sizeof rpkt))) {

WARNING:SIZEOF_PARENTHESIS: sizeof rpkt should be sizeof(rpkt)
#351: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2197:
+			if ((ret = copy_to_user(p, &rpkt, sizeof rpkt))) {

WARNING:SPLIT_STRING: quoted string split across lines
#353: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2199:
+				_IPATH_DBG("Failed to copy out pkt struct "
+					   "(%d)\n", ret);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#373: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2219:
+	uint32_t unit, tmp, tmp2;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#375: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2221:
+	uint32_t portinfo[13];	/* just the data for Portinfo, in host horder */

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#377: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2223:
+	if ((ret = copy_from_user(&unit, a, sizeof unit))) {

WARNING:SIZEOF_PARENTHESIS: sizeof unit should be sizeof(unit)
#377: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2223:
+	if ((ret = copy_from_user(&unit, a, sizeof unit))) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#382: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2228:
+	if (unit >= infinipath_max
+	    || !(devdata[unit].ipath_flags & IPATH_INITTED)) {

WARNING:SIZEOF_PARENTHESIS: sizeof portinfo should be sizeof(portinfo)
#388: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2234:
+	memset(portinfo, 0, sizeof portinfo);

CHECK:SPACING: spaces preferred around that '|' (ctx:ExV)
#408: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2254:
+	    |(2 << 16)
 	    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:ExV)
#410: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2256:
+	    |(3 << 8)
 	    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:ExV)
#412: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2258:
+	    |(2 << 0);
 	    ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#415: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2261:
+	if (tmp == 0x11)
[...]
+	else if (tmp == 0x21)
[...]
+	else if (tmp == 0x31)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#421: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2267:
+	else {

CHECK:SPACING: spaces preferred around that '|' (ctx:ExV)
#426: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2272:
+	    |(tmp << 24)	/* PortState */
 	    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:ExV)
#427: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2273:
+	    |(tmp2 << 20)	/* PortPhysicalState */
 	    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:ExV)
#428: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2274:
+	    |(2 << 16)
 	    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:ExV)
#433: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2279:
+	    |(1 << 4)		/* LinkSpeedActive */
 	    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:ExV)
#434: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2280:
+	    |(1 << 0);		/* LinkSpeedEnabled */
 	    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:ExV)
#461: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2307:
+	    |(1 << 20)
 	    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:ExV)
#470: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2316:
+	    |(7 << 13)		/* VLStallCount */
 	    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:ExV)
#471: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2317:
+	    |(0x1f << 8)	/* HOQLife */
 	    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:ExV)
#472: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2318:
+	    |(1 << 4)		/* OperationalVLs 0 */
 	    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:ExV)
#492: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2338:
+	    |(0xf << 16)	/* OverRunErrors are programmed to max */
 	    ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#495: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2341:
+	if ((ret = copy_to_user(a, portinfo, sizeof portinfo))) {

WARNING:SIZEOF_PARENTHESIS: sizeof portinfo should be sizeof(portinfo)
#495: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2341:
+	if ((ret = copy_to_user(a, portinfo, sizeof portinfo))) {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#506: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2352:
+	uint32_t unit;		/*, tmp, tmp2; */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#508: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2354:
+	uint32_t nodeinfo[10];	/* just the data for Nodeinfo, in host horder */

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#510: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2356:
+	if ((ret = copy_from_user(&unit, a, sizeof unit))) {

WARNING:SIZEOF_PARENTHESIS: sizeof unit should be sizeof(unit)
#510: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2356:
+	if ((ret = copy_from_user(&unit, a, sizeof unit))) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#515: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2361:
+	if (unit >= infinipath_max
+	    || !(devdata[unit].ipath_flags & IPATH_INITTED)) {

WARNING:SIZEOF_PARENTHESIS: sizeof nodeinfo should be sizeof(nodeinfo)
#523: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2369:
+	memset(nodeinfo, 0, sizeof nodeinfo);

CHECK:SPACING: spaces preferred around that '|' (ctx:ExV)
#528: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2374:
+	    |(1 << 0);		/* NumPorts */
 	    ^

CHECK:SPACING: No space is necessary after a cast
#529: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2375:
+	nodeinfo[1] = (uint32_t) (dd->ipath_guid >> 32);

CHECK:SPACING: No space is necessary after a cast
#530: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2376:
+	nodeinfo[2] = (uint32_t) (dd->ipath_guid & 0xffffffff);

CHECK:SPACING: spaces preferred around that '|' (ctx:ExV)
#536: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2382:
+	    |(dd->ipath_deviceid << 0);
 	    ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#541: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2387:
+	if ((ret = copy_to_user(a, nodeinfo, sizeof nodeinfo))) {

WARNING:SIZEOF_PARENTHESIS: sizeof nodeinfo should be sizeof(nodeinfo)
#541: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2387:
+	if ((ret = copy_to_user(a, nodeinfo, sizeof nodeinfo))) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#551: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2397:
+	int ret = 0;
+	switch (cmd) {

CHECK:SPACING: No space is necessary after a cast
#553: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2399:
+		if (!(ret = ipath_send_smapkt((struct ipath_sendpkt __user *) a)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#553: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2399:
+		if (!(ret = ipath_send_smapkt((struct ipath_sendpkt __user *) a)))

WARNING:TYPO_SPELLING: 'recieve' may be misspelled - perhaps 'receive'?
#557: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2403:
+	case IPATH_RCV_SMA_PKT:	/* recieve an SMA or MAD packet */
 	                       	   ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: No space is necessary after a cast
#558: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2404:
+		ret = ipath_rcvsma_pkt((struct ipath_sendpkt __user *) a);

CHECK:SPACING: No space is necessary after a cast
#561: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2407:
+		ret = ipath_kset_lid((uint32_t) a);

CHECK:SPACING: No space is necessary after a cast
#564: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2410:
+		ret = ipath_kset_mtu((uint32_t) a);

CHECK:SPACING: No space is necessary after a cast
#568: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2414:
+		ret = ipath_kset_linkstate((uint32_t) a);

CHECK:SPACING: No space is necessary after a cast
#571: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2417:
+		ret = ipath_get_portinfo((uint32_t __user *) a);

CHECK:SPACING: No space is necessary after a cast
#574: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2420:
+		ret = ipath_get_nodeinfo((uint32_t __user *) a);

CHECK:SPACING: No space is necessary after a cast
#582: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2428:
+		ret = ipath_kset_guid((struct ipath_setguid __user *) a);

CHECK:SPACING: No space is necessary after a cast
#585: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2431:
+		ret = ipath_kset_mlid((uint32_t) a);

CHECK:SPACING: No space is necessary after a cast
#588: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2434:
+		ret = ipath_get_mlid((uint32_t __user *) a);

CHECK:SPACING: No space is necessary after a cast
#591: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2437:
+		ret = ipath_get_devstatus((uint64_t __user *) a);

WARNING:SIZEOF_PARENTHESIS: sizeof c should be sizeof(c)
#605: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2451:
+	if (copy_from_user(&c, a, sizeof c))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#609: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2455:
+	if (c.unit >= infinipath_max ||
+	   !(devdata[c.unit].ipath_flags & IPATH_PRESENT))

CHECK:SPACING: No space is necessary after a cast
#613: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2459:
+				  (struct infinipath_counters __user *) c.data);

CHECK:SPACING: No space is necessary after a cast
#627: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2473:
+		ret = ipath_get_stats((struct infinipath_stats __user *) a);

CHECK:SPACING: No space is necessary after a cast
#630: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2476:
+		ret = ipath_get_unit_counters((struct infinipath_getunitcounters __user *) a);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#646: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2492:
+	uint32_t tmp, i, nactive = 0;

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#671: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2517:
+			return (long)ipath_ctrl_ioctl(fp, cmd, a);
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#671: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2517:
+		else {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#680: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2526:
+	if ((devdata[unit].ipath_flags & IPATH_PRESENT)
+	    && (cmd == IPATH_GETCOUNTERS || cmd == IPATH_GETSTATS

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#681: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2527:
+	    && (cmd == IPATH_GETCOUNTERS || cmd == IPATH_GETSTATS
+		|| cmd == IPATH_READ_EEPROM || cmd == IPATH_WRITE_EEPROM)) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#689: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2535:
+	} else
+	    if ((devdata[unit].

CHECK:BRACES: Unbalanced braces around else statement
#689: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2535:
+	} else

WARNING:TABSTOP: Statements should start on a tabstop
#690: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2536:
+	    if ((devdata[unit].

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'devdata[unit].ipath_flags'
#691: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2537:
+	    if ((devdata[unit].
+		 ipath_flags & (IPATH_LINKDOWN | IPATH_LINKUNK))) {

CHECK:SPACING: No space is necessary after a cast
#703: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2549:
+		ret = ipath_do_user_init(pd, (struct ipath_user_info __user *) a);

CHECK:SPACING: No space is necessary after a cast
#707: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2553:
+		ret = ipath_get_baseinfo(pd, (struct ipath_base_info __user *) a);

WARNING:REPEATED_WORD: Possible repeated word: 'is'
#712: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2558:
+		 * and the number of active chips.  This is is used for

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#717: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2563:
+			if ((devdata[i].ipath_flags & IPATH_PRESENT)
+			    && devdata[i].ipath_kregbase

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#718: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2564:
+			    && devdata[i].ipath_kregbase
+			    && devdata[i].ipath_lid

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#719: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2565:
+			    && devdata[i].ipath_lid
+			    && !(devdata[i].ipath_flags &

CHECK:SPACING: No space is necessary after a cast
#723: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2569:
+		if (copy_to_user((void __user *) a, &tmp, sizeof(tmp)))

CHECK:SPACING: No space is necessary after a cast
#731: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2577:
+		ret = ipath_tid_update(pd, (struct _tidupd __user *) a);

CHECK:SPACING: No space is necessary after a cast
#734: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2580:
+		ret = ipath_tid_free(pd, (struct _tidupd __user *) a);

CHECK:SPACING: No space is necessary after a cast
#737: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2583:
+		ret = ipath_get_counters(unit, (struct infinipath_counters __user *) a);

CHECK:SPACING: No space is necessary after a cast
#740: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2586:
+		ret = ipath_get_stats((struct infinipath_stats __user *) a);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#743: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2589:
+		ret = ipath_get_unit_counters(

CHECK:SPACING: No space is necessary after a cast
#744: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2590:
+			(struct infinipath_getunitcounters __user *) a);

CHECK:SPACING: No space is necessary after a cast
#747: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2593:
+		ret = ipath_set_partkey(pd, (uint16_t) a);

CHECK:SPACING: No space is necessary after a cast
#750: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2596:
+		ret = ipath_manage_rcvq(pd, (uint16_t) a);

CHECK:SPACING: No space is necessary after a cast
#755: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2601:
+				      (struct ipath_eeprom_req __user *) a);

CHECK:SPACING: No space is necessary after a cast
#759: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2605:
+				      (struct ipath_eeprom_req __user *) a);

CHECK:SPACING: No space is necessary after a cast
#765: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2611:
+		ret = ipath_wait_intr(pd, (uint32_t) a);

CHECK:BRACES: braces {} should be used on all arms of this statement
#784: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2630:
+	if (!whence)
[...]
+	else if (whence == 1) {
[...]
+	} else
[...]

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#785: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2631:
+		ret = fp->f_pos = off;

CHECK:BRACES: Unbalanced braces around else statement
#789: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2635:
+	} else

WARNING:CONST_STRUCT: struct vm_operations_struct should normally be const
#805: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2651:
+static struct vm_operations_struct ipath_vmops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#824: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2670:
+			uint64_t pgaddr, ureg;

WARNING:LINE_SPACING: Missing a blank line after declarations
#846: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2692:
+				unsigned long phys;
+				if ((vm->vm_end - vm->vm_start) > PAGE_SIZE) {

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'devdata[pd->port_unit].ipath_physaddr'
#854: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2700:
+					    devdata[pd->port_unit].
+					    ipath_physaddr + ureg;

WARNING:LINE_SPACING: Missing a blank line after declarations
#875: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2721:
+				unsigned long phys;
+				if ((vm->vm_end - vm->vm_start) >

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'devdata[pd->port_unit].ipath_physaddr'
#885: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2731:
+					    devdata[pd->port_unit].
+					    ipath_physaddr + pd->port_piobufs;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#895: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2741:
+#if defined (pgprot_writecombine) && defined(_PAGE_MA_WC)

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'vm->vm_page_prot'
#899: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2745:
+					    pgprot_writecombine(vm->
+								vm_page_prot);

CHECK:SPACING: No space is necessary after a cast
#926: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2772:
+			} else if (pgaddr == (uint64_t) pd->port_rcvegr_phys) {

CHECK:SPACING: No space is necessary after a cast
#955: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2801:
+					    (void *)(3 | (uint64_t) pd);

WARNING:LONG_LINE_STRING: line length of 105 exceeds 100 columns
#958: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2804:
+						    ("Can't map eager buffers as writable (flags=%lx)\n",

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#976: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2822:
+			} else if (pgaddr == (uint64_t) pd->port_rcvhdrq_phys) {

WARNING:LONG_LINE: line length of 162 exceeds 100 columns
#986: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2832:
+				setlen = ALIGN(devdata[pd->port_unit].ipath_rcvhdrcnt * devdata[pd->port_unit].ipath_rcvhdrentsize * sizeof(uint32_t), PAGE_SIZE);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:BRACES: Unbalanced braces around else statement
#1047: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2893:
+	} else			/* something very wrong */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1066: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2912:
+	uint32_t which, chunk;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1071: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2917:
+	if (!(avirt = (unsigned long)vma->vm_private_data)) {

CHECK:SPACING: No space is necessary after a cast
#1109: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2955:
+		pd = (struct ipath_portdata *) avirt;

CHECK:BRACES: Unbalanced braces around else statement
#1147: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:2993:
+	} else

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1156: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3002:
+static void ipath_bad_intr(const ipath_type t, uint32_t * unexpectp)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1220: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3066:
+				printk(".");

CHECK:BRACES: Unbalanced braces around else statement
#1221: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3067:
+		} else

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1231: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3077:
+	uint32_t istat = ipath_kget_kreg32(t, kr_intstatus);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#1232: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3078:
+	uint64_t estat = 0;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1233: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3079:
+	static unsigned unexpected = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1233: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3079:
+	static unsigned unexpected = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:SPACING: No space is necessary after a cast
#1265: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3111:
+				  istat & (uint32_t) ~ infinipath_i_bitsextant);

ERROR:SPACING: space prohibited after that '~' (ctx:WxW)
#1265: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3111:
+				  istat & (uint32_t) ~ infinipath_i_bitsextant);
 				                     ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1314: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3160:
+			uint32_t i;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1323: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3169:
+				if (dd->ipath_pd[i]
+				    && dd->ipath_portpiowait & (1U << i)) {

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'dd->ipath_portpiowait'
#1326: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3172:
+							  &dd->
+							  ipath_portpiowait);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1327: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3173:
+					if (dd->ipath_pd[i]->
+					    port_flag & IPATH_PORT_WAITING_PIO)
+					{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'dd->ipath_pd[i]->port_flag'
#1328: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3174:
+					if (dd->ipath_pd[i]->
+					    port_flag & IPATH_PORT_WAITING_PIO)

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'dd->ipath_pd'
#1333: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3179:
+						wake_up_interruptible(&dd->
+								      ipath_pd

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1343: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3189:
+			if (dd->ipath_layer.l_intr(t,
+				IPATH_LAYER_INT_SEND_CONTINUE)) {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#1368: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3214:
+		uint64_t portr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1370: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3216:
+		uint32_t rcvdint = 0;

CHECK:BRACES: braces {} should be used on all arms of this statement
#1378: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3224:
+				if (i == 0)
[...]
+				else if (dd->ipath_pd[i]->
[...]

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'dd->ipath_pd[i]->port_flag'
#1381: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3227:
+				else if (dd->ipath_pd[i]->
+					 port_flag & IPATH_PORT_WAITING_RCV) {

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'dd->ipath_pd[i]->port_wait'
#1386: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3232:
+					wake_up_interruptible(&dd->ipath_pd[i]->
+							      port_wait);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1475: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3321:
+static void get_rhf_errstring(uint32_t err, char *msg, size_t len)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1509: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3355:
+	uint32_t piobcnt;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#1510: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3356:
+	uint64_t sbuf[4], ignore_this_time = 0;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1515: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3361:
+	static unsigned nmsgs, supp_msgs;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1519: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3365:
+     | INFINIPATH_E_RBADVERSION \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1520: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3366:
+     | INFINIPATH_E_RHDR | INFINIPATH_E_RLONGPKTLEN | INFINIPATH_E_RSHORTPKTLEN \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1521: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3367:
+     | INFINIPATH_E_RMAXPKTLEN | INFINIPATH_E_RMINPKTLEN \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1522: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3368:
+     | INFINIPATH_E_RFORMATERR | INFINIPATH_E_RUNSUPVL | INFINIPATH_E_RUNEXPCHAR \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1523: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3369:
+     | INFINIPATH_E_REBP)$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1525: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3371:
+#define E_SUM_ERRS ( INFINIPATH_E_SPIOARMLAUNCH \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1526: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3372:
+    | INFINIPATH_E_SUNEXPERRPKTNUM | INFINIPATH_E_SDROPPEDDATAPKT \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1527: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3373:
+    | INFINIPATH_E_SDROPPEDSMPPKT | INFINIPATH_E_SMAXPKTLEN \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1528: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3374:
+    | INFINIPATH_E_SUNSUPVL | INFINIPATH_E_SMINPKTLEN | INFINIPATH_E_SPKTLEN \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1529: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3375:
+    | INFINIPATH_E_INVALIDADDR)$

WARNING:SIZEOF_PARENTHESIS: sizeof msg should be sizeof(msg)
#1550: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3396:
+				ipath_decode_err(msg, sizeof msg,

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'dd->ipath_lasterror'
#1552: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3398:
+						 dd->
+						 ipath_lasterror &

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'dd->ipath_lasterror'
#1555: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3401:
+				if (dd->
+				    ipath_lasterror & ~(INFINIPATH_E_RRCVEGRFULL

CHECK:SPACING: space preferred before that '|' (ctx:ExE)
#1556: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3402:
+							|
 							^

CHECK:BRACES: Unbalanced braces around else statement
#1562: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3408:
+				else {

WARNING:SIZEOF_PARENTHESIS: sizeof msg should be sizeof(msg)
#1592: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3438:
+		ipath_handle_hwerrors(t, msg, sizeof msg);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1612: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3458:
+		if (sbuf[0] || sbuf[1]
+		    || (piobcnt > 128 && (sbuf[2] || sbuf[3]))) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1615: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3461:
+				printk("%llx %llx ", sbuf[2], sbuf[3]);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1618: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3464:
+					uint32_t sendctrl;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1619: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3465:
+					uint32_t sendctrl;
+					if (infinipath_debug & __IPATH_PKTDBG)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1620: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3466:
+						printk("%u ", i);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'dd->ipath_sendctrl'
#1623: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3469:
+					    dd->
+					    ipath_sendctrl | INFINIPATH_S_DISARM

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1631: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3477:
+				printk("\n");

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1636: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3482:
+		      | INFINIPATH_E_SMINPKTLEN))
+		    && !(dd->ipath_flags & IPATH_LINKACTIVE)) {

WARNING:SIZEOF_PARENTHESIS: sizeof msg should be sizeof(msg)
#1664: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3510:
+		ipath_decode_err(msg, sizeof msg,

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'dd->ipath_ignorederrs'
#1666: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3512:
+				 (dd->ipath_maskederrs & ~dd->
+				  ipath_ignorederrs));

WARNING:TYPO_SPELLING: 'occuring' may be misspelled - perhaps 'occurring'?
#1671: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3517:
+					  "Disabling error(s) %llx because occuring too frequently (%s)\n",
 					                                   ^^^^^^^^

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'dd->ipath_ignorederrs'
#1673: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3519:
+					  (dd->ipath_maskederrs & ~dd->
+					   ipath_ignorederrs), msg);

CHECK:BRACES: Unbalanced braces around else statement
#1674: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3520:
+		else {

WARNING:SIZEOF_PARENTHESIS: sizeof msg should be sizeof(msg)
#1710: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3556:
+		ipath_decode_err(msg, sizeof msg,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1739: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3585:
+		uint32_t hd, tl;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1740: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3586:
+		uint32_t hd, tl;
+		ipath_stats.sps_hdrqfull++;

CHECK:BRACES: braces {} should be used on all arms of this statement
#1742: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3588:
+			if (i == 0) {
[...]
+			} else if (dd->ipath_pd[i] &&
[...]
+			} else
[...]

CHECK:SPACING: No space is necessary after a cast
#1751: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3597:
+				tl = (uint32_t) *

CHECK:BRACES: Unbalanced braces around else statement
#1756: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3602:
+			} else

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!ipath_diags_enabled'
#1797: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3643:
+	if ((errs & INFINIPATH_E_IBSTATUSCHANGED) && (!ipath_diags_enabled)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#1798: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3644:
+		uint64_t val;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1799: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3645:
+		uint32_t ltstate;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1805: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3651:
+			_IPATH_DBG("Link state changed unit %u to 0x%x, last was 0x%llx\n",
+				t, ltstate, dd->ipath_lastibcstat);

CHECK:BRACES: Unbalanced braces around else statement
#1806: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3652:
+		else {

WARNING:LONG_LINE_STRING: line length of 112 exceeds 100 columns
#1809: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3655:
+				_IPATH_DBG("Link state unit %u changed to down state 0x%llx, last was 0x%llx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1810: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3656:
+				_IPATH_DBG("Link state unit %u changed to down state 0x%llx, last was 0x%llx\n",
+					t, val, dd->ipath_lastibcstat);

WARNING:LONG_LINE_STRING: line length of 109 exceeds 100 columns
#1812: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3658:
+				_IPATH_VDBG("Link state unit %u changed to 0x%llx from one of down states\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1813: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3659:
+				_IPATH_VDBG("Link state unit %u changed to 0x%llx from one of down states\n",
+					t, val);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1819: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3665:
+			uint32_t last_ltstate;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#1836: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3682:
+					uint64_t ibc;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1837: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3683:
+					uint64_t ibc;
+					dd->ipath_flags |=

CHECK:SPACING: space preferred before that '<<' (ctx:ExE)
#1845: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3691:
+					    <<
 					    ^

CHECK:BRACES: Unbalanced braces around else statement
#1899: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3745:
+			} else	/* not up at all, so turn the leds off */

CHECK:SPACING: No space is necessary after a cast
#1904: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3750:
+					(uint64_t) dd->ipath_extctrl);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1906: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3752:
+			if (ltstate == 1
+			    && (dd->

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'dd->ipath_flags'
#1907: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3753:
+			    && (dd->
+				ipath_flags & (IPATH_LINK_TOARMED |

CHECK:SPACING: No space is necessary after a cast
#1927: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3773:
+					(uint64_t) dd->ipath_extctrl);

WARNING:REPEATED_WORD: Possible repeated word: 'set'
#1943: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3789:
+			 * set set INIT and DOWN.  Down is checked by

CHECK:SPACING: No space is necessary after a cast
#1959: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3805:
+					(uint64_t) dd->ipath_extctrl);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'dd->ipath_flags'
#1961: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3807:
+			if (dd->
+			    ipath_flags & (IPATH_LINK_TOARMED |

CHECK:SPACING: No space is necessary after a cast
#1988: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3834:
+					(uint64_t) dd->ipath_extctrl);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'dd->ipath_flags'
#2000: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3846:
+			if (dd->
+			    ipath_flags & (IPATH_LINK_TOARMED |

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2006: FILE: drivers/infiniband/hw/ipath/ipath_driver.c:3852:
+				_IPATH_DBG("IBstatuschange unit %u: %s\n",
+					  t, ipath_ibcstatus_str[ltstate]);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000121930.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 20 errors, 85 warnings, 137 checks, 2004 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000121930.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
