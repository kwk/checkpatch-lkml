WARNING:TYPO_SPELLING: 'wont' may be misspelled - perhaps 'won't'?
#22: 
This is a first attempt at a change that lets kernel's chroot's and wont
                                                                    ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#52: FILE: fs/open.c:483:
+	write_unlock(&current>fs->lock);
 	                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#71: FILE: include/linux/sched.h:515:
+    cp:			NULL,						\
       ^

WARNING:INDENTED_LABEL: labels should not be indented
#71: FILE: include/linux/sched.h:515:
+    cp:			NULL,						\

ERROR:TRAILING_WHITESPACE: trailing whitespace
#91: FILE: kernel/exit.c:298:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#92: FILE: kernel/exit.c:299:
+	while (cur)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#138: FILE: kernel/fork.c:735:
+		cp_c = (struct chroot_point *) kmalloc(sizeof(struct chroot_point), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#138: FILE: kernel/fork.c:735:
+		cp_c = (struct chroot_point *) kmalloc(sizeof(struct chroot_point), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*cp_c)...) over kmalloc(sizeof(struct chroot_point)...)
#138: FILE: kernel/fork.c:735:
+		cp_c = (struct chroot_point *) kmalloc(sizeof(struct chroot_point), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:TRAILING_WHITESPACE: trailing whitespace
#139: FILE: kernel/fork.c:736:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#142: FILE: kernel/fork.c:739:
+	while (cp_p)
+	{

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#149: FILE: kernel/fork.c:746:
+			cp_c->next = (struct chroot_point *) kmalloc(sizeof(struct chroot_point), GFP_KERNEL);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#149: FILE: kernel/fork.c:746:
+			cp_c->next = (struct chroot_point *) kmalloc(sizeof(struct chroot_point), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#149: FILE: kernel/fork.c:746:
+			cp_c->next = (struct chroot_point *) kmalloc(sizeof(struct chroot_point), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*cp_c->next)...) over kmalloc(sizeof(struct chroot_point)...)
#149: FILE: kernel/fork.c:746:
+			cp_c->next = (struct chroot_point *) kmalloc(sizeof(struct chroot_point), GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#154: FILE: kernel/fork.c:751:
+^I^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000420663.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 5 warnings, 4 checks, 99 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000420663.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
