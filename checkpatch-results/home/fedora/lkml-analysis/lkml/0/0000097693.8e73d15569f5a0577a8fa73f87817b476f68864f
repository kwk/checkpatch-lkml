WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#47: FILE: drivers/infiniband/core/cma.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#141: FILE: drivers/infiniband/core/cma.c:95:
+	spinlock_t		lock;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id_priv->state == comp'
#211: FILE: drivers/infiniband/core/cma.c:165:
+	if ((ret = (id_priv->state == comp)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#211: FILE: drivers/infiniband/core/cma.c:165:
+	if ((ret = (id_priv->state == comp)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#310: FILE: drivers/infiniband/core/cma.c:264:
+struct rdma_cm_id* rdma_create_id(rdma_cm_event_handler event_handler,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SIZEOF_PARENTHESIS: sizeof *id_priv should be sizeof(*id_priv)
#315: FILE: drivers/infiniband/core/cma.c:269:
+	id_priv = kzalloc(sizeof *id_priv, GFP_KERNEL);

WARNING:SIZEOF_PARENTHESIS: sizeof id_priv->seq_num should be sizeof(id_priv->seq_num)
#329: FILE: drivers/infiniband/core/cma.c:283:
+	get_random_bytes(&id_priv->seq_num, sizeof id_priv->seq_num);

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#375: FILE: drivers/infiniband/core/cma.c:329:
+		ret = -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "qp->srq"
#385: FILE: drivers/infiniband/core/cma.c:339:
+	id_priv->srq = (qp->srq != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#453: FILE: drivers/infiniband/core/cma.c:407:
+int rdma_init_qp_attr(struct rdma_cm_id *id, struct ib_qp_attr *qp_attr,
+		       int *qp_attr_mask)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#467: FILE: drivers/infiniband/core/cma.c:421:
+		ret = -ENOSYS;

CHECK:SPACING: No space is necessary after a cast
#480: FILE: drivers/infiniband/core/cma.c:434:
+		return ((struct sockaddr_in *) addr)->sin_addr.s_addr ==

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#482: FILE: drivers/infiniband/core/cma.c:436:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#483: FILE: drivers/infiniband/core/cma.c:437:
+		ip6 = &((struct sockaddr_in6 *) addr)->sin6_addr;

CHECK:SPACING: No space is necessary after a cast
#491: FILE: drivers/infiniband/core/cma.c:445:
+	return ((struct sockaddr_in *) addr)->sin_addr.s_addr ==

CHECK:SPACING: No space is necessary after a cast
#501: FILE: drivers/infiniband/core/cma.c:455:
+		if (((struct sdp_hh *) hdr)->sdp_version != SDP_VERSION)

CHECK:SPACING: No space is necessary after a cast
#505: FILE: drivers/infiniband/core/cma.c:459:
+		*port	= ((struct sdp_hh *) hdr)->port;

CHECK:SPACING: No space is necessary after a cast
#506: FILE: drivers/infiniband/core/cma.c:460:
+		*src	= &((struct sdp_hh *) hdr)->src_addr;

CHECK:SPACING: No space is necessary after a cast
#507: FILE: drivers/infiniband/core/cma.c:461:
+		*dst	= &((struct sdp_hh *) hdr)->dst_addr;

CHECK:SPACING: No space is necessary after a cast
#510: FILE: drivers/infiniband/core/cma.c:464:
+		if (((struct cma_hdr *) hdr)->cma_version != CMA_VERSION)

CHECK:SPACING: No space is necessary after a cast
#514: FILE: drivers/infiniband/core/cma.c:468:
+		*port	= ((struct cma_hdr *) hdr)->port;

CHECK:SPACING: No space is necessary after a cast
#515: FILE: drivers/infiniband/core/cma.c:469:
+		*src	= &((struct cma_hdr *) hdr)->src_addr;

CHECK:SPACING: No space is necessary after a cast
#516: FILE: drivers/infiniband/core/cma.c:470:
+		*dst	= &((struct cma_hdr *) hdr)->dst_addr;

CHECK:SPACING: No space is necessary after a cast
#532: FILE: drivers/infiniband/core/cma.c:486:
+		listen4 = (struct sockaddr_in *) &listen_addr->src_addr;

CHECK:SPACING: No space is necessary after a cast
#533: FILE: drivers/infiniband/core/cma.c:487:
+		ip4 = (struct sockaddr_in *) &addr->src_addr;

CHECK:SPACING: No space is necessary after a cast
#538: FILE: drivers/infiniband/core/cma.c:492:
+		ip4 = (struct sockaddr_in *) &addr->dst_addr;

CHECK:SPACING: No space is necessary after a cast
#544: FILE: drivers/infiniband/core/cma.c:498:
+		listen6 = (struct sockaddr_in6 *) &listen_addr->src_addr;

CHECK:SPACING: No space is necessary after a cast
#545: FILE: drivers/infiniband/core/cma.c:499:
+		ip6 = (struct sockaddr_in6 *) &addr->src_addr;

CHECK:SPACING: No space is necessary after a cast
#550: FILE: drivers/infiniband/core/cma.c:504:
+		ip6 = (struct sockaddr_in6 *) &addr->dst_addr;

ERROR:CODE_INDENT: code indent should use tabs where possible
#616: FILE: drivers/infiniband/core/cma.c:570:
+ ^Iif (id_priv->cm_id && !IS_ERR(id_priv->cm_id))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#616: FILE: drivers/infiniband/core/cma.c:570:
+ ^Iif (id_priv->cm_id && !IS_ERR(id_priv->cm_id))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#616: FILE: drivers/infiniband/core/cma.c:570:
+ ^Iif (id_priv->cm_id && !IS_ERR(id_priv->cm_id))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#673: FILE: drivers/infiniband/core/cma.c:627:
+ ^Iif (id_priv->cm_id && !IS_ERR(id_priv->cm_id))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#673: FILE: drivers/infiniband/core/cma.c:627:
+ ^Iif (id_priv->cm_id && !IS_ERR(id_priv->cm_id))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#673: FILE: drivers/infiniband/core/cma.c:627:
+ ^Iif (id_priv->cm_id && !IS_ERR(id_priv->cm_id))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#677: FILE: drivers/infiniband/core/cma.c:631:
+^I  ^Idown(&mutex);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#677: FILE: drivers/infiniband/core/cma.c:631:
+^I  ^Idown(&mutex);$

CHECK:BRACES: braces {} should be used on all arms of this statement
#748: FILE: drivers/infiniband/core/cma.c:702:
+		if (id_priv->id.qp) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#752: FILE: drivers/infiniband/core/cma.c:706:
+		} else

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#762: FILE: drivers/infiniband/core/cma.c:716:
+		status = -ETIMEDOUT; /* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#777: FILE: drivers/infiniband/core/cma.c:731:
+		printk(KERN_ERR "RDMA CMA: unexpected IB CM event: %d",

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#797: FILE: drivers/infiniband/core/cma.c:751:
+static struct rdma_id_private* cma_new_id(struct rdma_cm_id *listen_id,

WARNING:SIZEOF_PARENTHESIS: sizeof *rt->path_rec should be sizeof(*rt->path_rec)
#814: FILE: drivers/infiniband/core/cma.c:768:
+	rt->path_rec = kmalloc(sizeof *rt->path_rec * rt->num_paths, GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#891: FILE: drivers/infiniband/core/cma.c:845:
+	       ((struct sockaddr_in *) addr)->sin_port);

WARNING:SIZEOF_PARENTHESIS: sizeof *compare should be sizeof(*compare)
#899: FILE: drivers/infiniband/core/cma.c:853:
+	memset(compare, 0, sizeof *compare);

CHECK:SPACING: No space is necessary after a cast
#900: FILE: drivers/infiniband/core/cma.c:854:
+	data = (void *) compare->data;

CHECK:SPACING: No space is necessary after a cast
#901: FILE: drivers/infiniband/core/cma.c:855:
+	mask = (void *) compare->mask;

CHECK:SPACING: No space is necessary after a cast
#907: FILE: drivers/infiniband/core/cma.c:861:
+		data->dst_addr.ip4.addr = ((struct sockaddr_in *) addr)->

CHECK:SPACING: No space is necessary after a cast
#914: FILE: drivers/infiniband/core/cma.c:868:
+		data->dst_addr.ip6 = ((struct sockaddr_in6 *) addr)->

WARNING:SIZEOF_PARENTHESIS: sizeof mask->dst_addr.ip6 should be sizeof(mask->dst_addr.ip6)
#916: FILE: drivers/infiniband/core/cma.c:870:
+		memset(&mask->dst_addr.ip6, 1, sizeof mask->dst_addr.ip6);

CHECK:BRACES: braces {} should be used on all arms of this statement
#937: FILE: drivers/infiniband/core/cma.c:891:
+	if (cma_any_addr(addr))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#939: FILE: drivers/infiniband/core/cma.c:893:
+	else {

CHECK:SPACING: No space is necessary after a cast
#957: FILE: drivers/infiniband/core/cma.c:911:
+	new_addr = (struct sockaddr_in *) &id_priv->id.route.addr.src_addr;

CHECK:BRACES: braces {} should be used on all arms of this statement
#1032: FILE: drivers/infiniband/core/cma.c:986:
+	if (id->device) {
[...]
+	} else
[...]

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1038: FILE: drivers/infiniband/core/cma.c:992:
+			ret = -ENOSYS;

CHECK:BRACES: Unbalanced braces around else statement
#1041: FILE: drivers/infiniband/core/cma.c:995:
+	} else

WARNING:SIZEOF_PARENTHESIS: sizeof *route->path_rec should be sizeof(*route->path_rec)
#1064: FILE: drivers/infiniband/core/cma.c:1018:
+		route->path_rec = kmalloc(sizeof *route->path_rec, GFP_KERNEL);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1065: FILE: drivers/infiniband/core/cma.c:1019:
+		if (route->path_rec) {
[...]
+		} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1069: FILE: drivers/infiniband/core/cma.c:1023:
+			if (!cma_comp_exch(id_priv, CMA_ROUTE_QUERY,
+						    CMA_ROUTE_RESOLVED)) {

CHECK:BRACES: Unbalanced braces around else statement
#1073: FILE: drivers/infiniband/core/cma.c:1027:
+		} else

WARNING:SIZEOF_PARENTHESIS: sizeof path_rec should be sizeof(path_rec)
#1100: FILE: drivers/infiniband/core/cma.c:1054:
+	memset(&path_rec, 0, sizeof path_rec);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1107: FILE: drivers/infiniband/core/cma.c:1061:
+	id_priv->query_id = ib_sa_path_rec_get(id_priv->id.device,
+				id_priv->id.port_num, &path_rec,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1112: FILE: drivers/infiniband/core/cma.c:1066:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1131: FILE: drivers/infiniband/core/cma.c:1085:
+		ret = -ENOSYS;

CHECK:BRACES: braces {} should be used on all arms of this statement
#1184: FILE: drivers/infiniband/core/cma.c:1138:
+	if (!id_priv->cma_dev) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1188: FILE: drivers/infiniband/core/cma.c:1142:
+	} else

WARNING:SIZEOF_PARENTHESIS: sizeof *work should be sizeof(*work)
#1245: FILE: drivers/infiniband/core/cma.c:1199:
+	work = kmalloc(sizeof *work, GFP_KERNEL);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1278: FILE: drivers/infiniband/core/cma.c:1232:
+	if (id_priv->cma_dev) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1281: FILE: drivers/infiniband/core/cma.c:1235:
+	} else

CHECK:SPACING: No space is necessary after a cast
#1348: FILE: drivers/infiniband/core/cma.c:1302:
+	src4 = (struct sockaddr_in *) &route->addr.src_addr;

CHECK:SPACING: No space is necessary after a cast
#1349: FILE: drivers/infiniband/core/cma.c:1303:
+	dst4 = (struct sockaddr_in *) &route->addr.dst_addr;

WARNING:SIZEOF_PARENTHESIS: sizeof req should be sizeof(req)
#1379: FILE: drivers/infiniband/core/cma.c:1333:
+	memset(&req, 0, sizeof req);

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1446: FILE: drivers/infiniband/core/cma.c:1400:
+		ret = -ENOSYS;

WARNING:SIZEOF_PARENTHESIS: sizeof rep should be sizeof(rep)
#1469: FILE: drivers/infiniband/core/cma.c:1423:
+	memset(&rep, 0, sizeof rep);

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1508: FILE: drivers/infiniband/core/cma.c:1462:
+		ret = -ENOSYS;

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1539: FILE: drivers/infiniband/core/cma.c:1493:
+		ret = -ENOSYS;

WARNING:SIZEOF_PARENTHESIS: sizeof *cma_dev should be sizeof(*cma_dev)
#1578: FILE: drivers/infiniband/core/cma.c:1532:
+	cma_dev = kmalloc(sizeof *cma_dev, GFP_KERNEL);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1713: FILE: include/rdma/rdma_cm.h:1:
+/*

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1829: FILE: include/rdma/rdma_cm.h:117:
+struct rdma_cm_id* rdma_create_id(rdma_cm_event_handler event_handler,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1909: FILE: include/rdma/rdma_cm.h:197:
+int rdma_init_qp_attr(struct rdma_cm_id *id, struct ib_qp_attr *qp_attr,
+		       int *qp_attr_mask);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000097693.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 27 warnings, 45 checks, 1908 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000097693.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
