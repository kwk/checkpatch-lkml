ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#47: 
--- a/drivers/i2c/chips/Kconfig	Wed Apr 14 15:13:16 2004

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#57: FILE: drivers/i2c/chips/Kconfig:223:
+config SENSORS_PCF8591
+	tristate "Philips PCF8591"
+	depends on I2C && EXPERIMENTAL
+	select I2C_SENSOR
+	help
+	  If you say yes here you get support for Philips PCF8591 chips.
+
+	  This driver can also be built as a module.  If so, the module
+	  will be called pcf8591.
 

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#83: FILE: drivers/i2c/chips/pcf8591.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#84: FILE: drivers/i2c/chips/pcf8591.c:2:
+/*
+    pcf8591.c - Part of lm_sensors, Linux kernel modules for hardware

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#85: FILE: drivers/i2c/chips/pcf8591.c:3:
+                monitoring$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_WHITESPACE: trailing whitespace
#87: FILE: drivers/i2c/chips/pcf8591.c:5:
+    Ported to Linux 2.6 by Aurelien Jarno <aurelien@aurel32.net> with $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#101: FILE: drivers/i2c/chips/pcf8591.c:19:
+    along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#102: FILE: drivers/i2c/chips/pcf8591.c:20:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#123: FILE: drivers/i2c/chips/pcf8591.c:41:
+MODULE_PARM_DESC(input_mode,
+	"Analog input mode:\n"

ERROR:TRAILING_WHITESPACE: trailing whitespace
#130: FILE: drivers/i2c/chips/pcf8591.c:48:
+      7    6    5    4    3    2    1    0  $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#130: FILE: drivers/i2c/chips/pcf8591.c:48:
+/* The PCF8591 control byte
+      7    6    5    4    3    2    1    0  

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#131: FILE: drivers/i2c/chips/pcf8591.c:49:
+   |  0 |AOEF|   AIP   |  0 |AINC|  AICH   | */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#135: FILE: drivers/i2c/chips/pcf8591.c:53:
+^I^I^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#136: FILE: drivers/i2c/chips/pcf8591.c:54:
+/* Analog Input Programming $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#137: FILE: drivers/i2c/chips/pcf8591.c:55:
+/* Analog Input Programming 
+   0x00 = four single ended inputs

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#140: FILE: drivers/i2c/chips/pcf8591.c:58:
+   0x30 = two differential inputs */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#147: FILE: drivers/i2c/chips/pcf8591.c:65:
+   0x00 = channel 0 $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#147: FILE: drivers/i2c/chips/pcf8591.c:65:
+/* Channel selection
+   0x00 = channel 0 

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#150: FILE: drivers/i2c/chips/pcf8591.c:68:
+   0x03 = channel 3 */

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#158: FILE: drivers/i2c/chips/pcf8591.c:76:
+#define REG_TO_SIGNED(reg)	(((reg) & 0x80)?((reg) - 256):(reg))
                           	               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#158: FILE: drivers/i2c/chips/pcf8591.c:76:
+#define REG_TO_SIGNED(reg)	(((reg) & 0x80)?((reg) - 256):(reg))
                           	                             ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'reg' - possible side-effects?
#158: FILE: drivers/i2c/chips/pcf8591.c:76:
+#define REG_TO_SIGNED(reg)	(((reg) & 0x80)?((reg) - 256):(reg))

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#183: FILE: drivers/i2c/chips/pcf8591.c:101:
+static int pcf8591_id = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#186: FILE: drivers/i2c/chips/pcf8591.c:104:
+#define show_in_channel(channel)					\
+static ssize_t show_in##channel##_input(struct device *dev, char *buf)	\
+{									\
+	return sprintf(buf, "%d\n", pcf8591_read_channel(dev, channel));\
+}									\
+static DEVICE_ATTR(in##channel##_input, S_IRUGO,			\
+		   show_in##channel##_input, NULL);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#191: FILE: drivers/i2c/chips/pcf8591.c:109:
+static DEVICE_ATTR(in##channel##_input, S_IRUGO,			\

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:LINE_SPACING: Missing a blank line after declarations
#202: FILE: drivers/i2c/chips/pcf8591.c:120:
+	struct pcf8591_data *data = i2c_get_clientdata(to_i2c_client(dev));
+	return sprintf(buf, "%d\n", data->aout * 10);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#210: FILE: drivers/i2c/chips/pcf8591.c:128:
+	struct pcf8591_data *data = i2c_get_clientdata(client);
+	if ((value = (simple_strtoul(buf, NULL, 10) + 5) / 10) <= 255);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#210: FILE: drivers/i2c/chips/pcf8591.c:128:
+	if ((value = (simple_strtoul(buf, NULL, 10) + 5) / 10) <= 255);
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#210: FILE: drivers/i2c/chips/pcf8591.c:128:
+	if ((value = (simple_strtoul(buf, NULL, 10) + 5) / 10) <= 255);

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#210: FILE: drivers/i2c/chips/pcf8591.c:128:
+	if ((value = (simple_strtoul(buf, NULL, 10) + 5) / 10) <= 255);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#210: FILE: drivers/i2c/chips/pcf8591.c:128:
+	if ((value = (simple_strtoul(buf, NULL, 10) + 5) / 10) <= 255);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_out0_ouput' to 'out0_output_show' 'set_out0_output' to 'out0_output_store'
#216: FILE: drivers/i2c/chips/pcf8591.c:134:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

ERROR:TRAILING_WHITESPACE: trailing whitespace
#218: FILE: drivers/i2c/chips/pcf8591.c:136:
+static DEVICE_ATTR(out0_output, S_IWUSR | S_IRUGO, $

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#218: FILE: drivers/i2c/chips/pcf8591.c:136:
+static DEVICE_ATTR(out0_output, S_IWUSR | S_IRUGO, 

WARNING:LINE_SPACING: Missing a blank line after declarations
#224: FILE: drivers/i2c/chips/pcf8591.c:142:
+	struct pcf8591_data *data = i2c_get_clientdata(to_i2c_client(dev));
+	return sprintf(buf, "%u\n", !(!(data->control & PCF8591_CONTROL_AOEF)));

WARNING:LINE_SPACING: Missing a blank line after declarations
#231: FILE: drivers/i2c/chips/pcf8591.c:149:
+	struct pcf8591_data *data = i2c_get_clientdata(client);
+	if (simple_strtoul(buf, NULL, 10))

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#231: FILE: drivers/i2c/chips/pcf8591.c:149:
+	if (simple_strtoul(buf, NULL, 10))

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_out0_enable' to 'out0_enable_show' 'set_out0_enable' to 'out0_enable_store'
#237: FILE: drivers/i2c/chips/pcf8591.c:155:
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#239: FILE: drivers/i2c/chips/pcf8591.c:157:
+static DEVICE_ATTR(out0_enable, S_IWUSR | S_IRUGO, $

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#239: FILE: drivers/i2c/chips/pcf8591.c:157:
+static DEVICE_ATTR(out0_enable, S_IWUSR | S_IRUGO, 

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#262: FILE: drivers/i2c/chips/pcf8591.c:180:
+	/* OK. For now, we presume we have a valid client. We now create the
+	   client structure, even though we cannot fill it completely yet. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#262: FILE: drivers/i2c/chips/pcf8591.c:180:
+	   client structure, even though we cannot fill it completely yet. */

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#263: FILE: drivers/i2c/chips/pcf8591.c:181:
+	if (!(new_client = kmalloc(sizeof(struct i2c_client) +

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*new_client)...) over kmalloc(sizeof(struct i2c_client)...)
#263: FILE: drivers/i2c/chips/pcf8591.c:181:
+	if (!(new_client = kmalloc(sizeof(struct i2c_client) +

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:TRAILING_WHITESPACE: trailing whitespace
#272: FILE: drivers/i2c/chips/pcf8591.c:190:
+^I$

CHECK:SPACING: No space is necessary after a cast
#273: FILE: drivers/i2c/chips/pcf8591.c:191:
+	data = (struct pcf8591_data *) (new_client + 1);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#281: FILE: drivers/i2c/chips/pcf8591.c:199:
+	/* Now, we would do the remaining detection. But the PCF8591 is plainly
+	   impossible to detect! Stupid chip. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#281: FILE: drivers/i2c/chips/pcf8591.c:199:
+	   impossible to detect! Stupid chip. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#287: FILE: drivers/i2c/chips/pcf8591.c:205:
+^I/* Fill in the remaining client fields and put it into the global $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#288: FILE: drivers/i2c/chips/pcf8591.c:206:
+	/* Fill in the remaining client fields and put it into the global 
+	   list */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#288: FILE: drivers/i2c/chips/pcf8591.c:206:
+	   list */

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#289: FILE: drivers/i2c/chips/pcf8591.c:207:
+	strlcpy(new_client->name, "pcf8591", I2C_NAME_SIZE);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#295: FILE: drivers/i2c/chips/pcf8591.c:213:
+	if ((err = i2c_attach_client(new_client)))

ERROR:SPACING: space prohibited before that close parenthesis ')'
#308: FILE: drivers/i2c/chips/pcf8591.c:226:
+	if (input_mode != 3 )

ERROR:TRAILING_WHITESPACE: trailing whitespace
#310: FILE: drivers/i2c/chips/pcf8591.c:228:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#314: FILE: drivers/i2c/chips/pcf8591.c:232:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#316: FILE: drivers/i2c/chips/pcf8591.c:234:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#318: FILE: drivers/i2c/chips/pcf8591.c:236:
+	/* OK, this is not exactly good programming practice, usually. But it is
+	   very code-efficient in this case. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#318: FILE: drivers/i2c/chips/pcf8591.c:236:
+	   very code-efficient in this case. */

WARNING:INDENTED_LABEL: labels should not be indented
#320: FILE: drivers/i2c/chips/pcf8591.c:238:
+      exit_kfree:

WARNING:INDENTED_LABEL: labels should not be indented
#322: FILE: drivers/i2c/chips/pcf8591.c:240:
+      exit:

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#330: FILE: drivers/i2c/chips/pcf8591.c:248:
+	if ((err = i2c_detach_client(client))) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#344: FILE: drivers/i2c/chips/pcf8591.c:262:
+	struct pcf8591_data *data = i2c_get_clientdata(client);
+	data->control = PCF8591_INIT_CONTROL;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#348: FILE: drivers/i2c/chips/pcf8591.c:266:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#349: FILE: drivers/i2c/chips/pcf8591.c:267:
+^I/* The first byte transmitted contains the conversion code of the $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#350: FILE: drivers/i2c/chips/pcf8591.c:268:
+	/* The first byte transmitted contains the conversion code of the 
+	   previous read cycle. FLUSH IT! */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#350: FILE: drivers/i2c/chips/pcf8591.c:268:
+	   previous read cycle. FLUSH IT! */

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#362: FILE: drivers/i2c/chips/pcf8591.c:280:
+	if ((data->control & PCF8591_CONTROL_AICH_MASK) != channel)
+	{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#367: FILE: drivers/i2c/chips/pcf8591.c:285:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#368: FILE: drivers/i2c/chips/pcf8591.c:286:
+^I^I/* The first byte transmitted contains the conversion code of $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#369: FILE: drivers/i2c/chips/pcf8591.c:287:
+		/* The first byte transmitted contains the conversion code of 
+		   the previous read cycle. FLUSH IT! */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#369: FILE: drivers/i2c/chips/pcf8591.c:287:
+		   the previous read cycle. FLUSH IT! */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#386: FILE: drivers/i2c/chips/pcf8591.c:304:
+		printk(KERN_WARNING "pcf8591: invalid input_mode (%d)\n",

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000288577.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 29 errors, 38 warnings, 6 checks, 346 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000288577.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
