CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#104: FILE: linux-2.6.14/kernel/futex.c:149:
+static int get_futex_key(unsigned long uaddr, union futex_key *key,
+			struct list_head **list, struct semaphore **sem)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vma->vm_file"
#112: FILE: linux-2.6.14/kernel/futex.c:172:
+	if (vma->vm_file == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vma->vm_file->f_mapping"
#117: FILE: linux-2.6.14/kernel/futex.c:177:
+	} else if (vma->vm_file->f_mapping == NULL) {

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#119: FILE: linux-2.6.14/kernel/futex.c:179:
+		return -EINVAL;
+	} else {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!head"
#140: FILE: linux-2.6.14/kernel/futex.c:330:
+	if (head == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!head"
#379: FILE: linux-2.6.14/kernel/futex.c:940:
+	if (head == NULL) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#410: FILE: linux-2.6.14/kernel/futex.c:973:
+			if (match_futex (&this->key, &key)) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#410: FILE: linux-2.6.14/kernel/futex.c:973:
+			if (match_futex (&this->key, &key)) {
+				up_futex(&this->futex_mutex);
 			}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#420: FILE: linux-2.6.14/kernel/futex.c:981:
+		if (match_futex (&this->key, &key)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!head"
#471: FILE: linux-2.6.14/kernel/futex.c:1041:
+	if (head == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#577: FILE: linux-2.6.14/kernel/futex.c:1234:
+static void find_owned_futex(struct vm_area_struct *vma, struct list_head *head,
+				struct semaphore *sem)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vma->vm_file"
#630: FILE: linux-2.6.14/kernel/futex.c:1297:
+		if (vma->vm_file == NULL) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#631: FILE: linux-2.6.14/kernel/futex.c:1298:
+			if (vma->robust_init) {
[...]
+			} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#634: FILE: linux-2.6.14/kernel/futex.c:1301:
+			} else

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vma->vm_file->f_mapping"
#640: FILE: linux-2.6.14/kernel/futex.c:1305:
+			if (vma->vm_file->f_mapping == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!vma->vm_file"
#696: FILE: linux-2.6.14/kernel/futex.c:1372:
+	if (vma->vm_file == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!head"
#753: FILE: linux-2.6.14/kernel/futex.c:1420:
+	if (head == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!head"
#798: FILE: linux-2.6.14/kernel/futex.c:1474:
+	if (head == NULL) {

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#807: FILE: linux-2.6.14/kernel/futex.c:1483:
+			/*
+			* can't recover a futex we don't own

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#815: FILE: linux-2.6.14/kernel/futex.c:1491:
+        }$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#815: FILE: linux-2.6.14/kernel/futex.c:1491:
+        }$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#817: FILE: linux-2.6.14/kernel/futex.c:1493:
+	if ((value = futex_get_user(uaddr)) == -EFAULT) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#861: FILE: linux-2.6.14/kernel/rt.c:2949:
+		if (old_owner) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#865: FILE: linux-2.6.14/kernel/rt.c:2953:
+		} else

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#972: FILE: linux-2.6.14/include/linux/rt_lock.h:386:
+extern int FASTCALL(down_futex(struct rt_mutex *lock, unsigned long time, pid_t owner_pid, struct semaphore *sem));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#972: FILE: linux-2.6.14/include/linux/rt_lock.h:386:
+extern int FASTCALL(down_futex(struct rt_mutex *lock, unsigned long time, pid_t owner_pid, struct semaphore *sem));

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000132509.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 7 warnings, 17 checks, 838 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000132509.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
