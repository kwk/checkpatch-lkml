WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#125: FILE: drivers/char/istallion.c:626:
+static int	stli_rawopen(struct stlibrd *brdp, struct stliport *portp, unsigned long arg, int wait);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#126: FILE: drivers/char/istallion.c:627:
+static int	stli_rawclose(struct stlibrd *brdp, struct stliport *portp, unsigned long arg, int wait);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#127: FILE: drivers/char/istallion.c:628:
+static int	stli_waitcarrier(struct stlibrd *brdp, struct stliport *portp, struct file *filp);
           	                                                                            ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LONG_LINE: line length of 129 exceeds 100 columns
#136: FILE: drivers/char/istallion.c:631:
+static int	stli_cmdwait(struct stlibrd *brdp, struct stliport *portp, unsigned long cmd, void *arg, int size, int copyback);

WARNING:LONG_LINE: line length of 129 exceeds 100 columns
#137: FILE: drivers/char/istallion.c:632:
+static void	stli_sendcmd(struct stlibrd *brdp, struct stliport *portp, unsigned long cmd, void *arg, int size, int copyback);

WARNING:LONG_LINE: line length of 131 exceeds 100 columns
#138: FILE: drivers/char/istallion.c:633:
+static void	__stli_sendcmd(struct stlibrd *brdp, struct stliport *portp, unsigned long cmd, void *arg, int size, int copyback);

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#335: FILE: drivers/char/istallion.c:1200:
+static int stli_cmdwait(struct stlibrd *brdp, struct stliport *portp, unsigned long cmd, void *arg, int size, int copyback)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#356: FILE: drivers/char/istallion.c:1252:
+static int stli_waitcarrier(struct stlibrd *brdp, struct stliport *portp, struct file *filp)
                                                                                        ^^^^

CHECK:SPACING: No space is necessary after a cast
#493: FILE: drivers/char/istallion.c:1900:
+	struct stliport *portp = (struct stliport *) arg;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 126 exceeds 100 columns
#575: FILE: drivers/char/istallion.c:2224:
+static void __stli_sendcmd(struct stlibrd *brdp, struct stliport *portp, unsigned long cmd, void *arg, int size, int copyback)

WARNING:LONG_LINE: line length of 124 exceeds 100 columns
#584: FILE: drivers/char/istallion.c:2260:
+static void stli_sendcmd(struct stlibrd *brdp, struct stliport *portp, unsigned long cmd, void *arg, int size, int copyback)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*portp)...) over kzalloc(sizeof(struct stliport)...)
#658: FILE: drivers/char/istallion.c:2793:
+		portp = kzalloc(sizeof(struct stliport), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#997: FILE: drivers/char/istallion.c:3674:
+static int __devinit stli_brdinit(struct stlibrd *brdp)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1020: FILE: drivers/char/istallion.c:3910:
 static int __devinit stli_pciprobe(struct pci_dev *pdev,

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*brdp)...) over kzalloc(sizeof(struct stlibrd)...)
#1048: FILE: drivers/char/istallion.c:3980:
+	brdp = kzalloc(sizeof(struct stlibrd), GFP_KERNEL);

WARNING:SPLIT_STRING: quoted string split across lines
#1052: FILE: drivers/char/istallion.c:3983:
 		printk(KERN_ERR "STALLION: failed to allocate memory "
+				"(size=%Zd)\n", sizeof(struct stlibrd));

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTF_Z: %Zd is non-standard C, use %zd
#1052: FILE: drivers/char/istallion.c:3983:
+				"(size=%Zd)\n", sizeof(struct stlibrd));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000021444.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 14 warnings, 3 checks, 1107 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000021444.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
