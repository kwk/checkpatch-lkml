WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
--- mm3-2.6.9-rc2.orig/include/linux/mm.h	2004-09-24 17:37:11.000000000 -0700

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#51: FILE: include/linux/mm.h:114:
+	struct vm_area_struct * mmap;		/* list of VMAs */

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#53: FILE: include/linux/mm.h:116:
+	struct vm_area_struct * mmap_cache;	/* last find_vma result */

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#54: FILE: include/linux/mm.h:117:
+	unsigned long (*get_unmapped_area) (struct file *filp,
 	                                                 ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACING: Unnecessary space before function pointer arguments
#54: FILE: include/linux/mm.h:117:
+	unsigned long (*get_unmapped_area) (struct file *filp,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#55: FILE: include/linux/mm.h:118:
+	unsigned long (*get_unmapped_area) (struct file *filp,
+				unsigned long addr, unsigned long len,

WARNING:SPACING: Unnecessary space before function pointer arguments
#57: FILE: include/linux/mm.h:120:
+	void (*unmap_area) (struct vm_area_struct *area);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#60: FILE: include/linux/mm.h:123:
+	pgd_t * pgd;

WARNING:LONG_LINE_COMMENT: line length of 114 exceeds 100 columns
#62: FILE: include/linux/mm.h:125:
+	atomic_t mm_count;			/* How many references to "struct mm_struct" (users count as 1) */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#67: FILE: include/linux/mm.h:130:
+	struct list_head mmlist;		/* List of maybe swapped mm's.  These are globally strung

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#108: FILE: include/linux/mm.h:171:
+void mmput(struct mm_struct *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#110: FILE: include/linux/mm.h:173:
+struct mm_struct *get_task_mm(struct task_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#112: FILE: include/linux/mm.h:175:
+void mm_release(struct task_struct *, struct mm_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#112: FILE: include/linux/mm.h:175:
+void mm_release(struct task_struct *, struct mm_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#114: FILE: include/linux/mm.h:177:
+void FASTCALL(__mmdrop(struct mm_struct *));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#128: FILE: include/linux/mm.h:637:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#129: FILE: include/linux/mm.h:638:
+unsigned long arch_get_unmapped_area(struct file *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#129: FILE: include/linux/mm.h:638:
+unsigned long arch_get_unmapped_area(struct file *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#129: FILE: include/linux/mm.h:638:
+unsigned long arch_get_unmapped_area(struct file *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#129: FILE: include/linux/mm.h:638:
+unsigned long arch_get_unmapped_area(struct file *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#129: FILE: include/linux/mm.h:638:
+unsigned long arch_get_unmapped_area(struct file *, unsigned long,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#130: FILE: include/linux/mm.h:639:
+unsigned long arch_get_unmapped_area(struct file *, unsigned long,
+				unsigned long, unsigned long, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#131: FILE: include/linux/mm.h:640:
+unsigned long arch_get_unmapped_area_topdown(struct file *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#131: FILE: include/linux/mm.h:640:
+unsigned long arch_get_unmapped_area_topdown(struct file *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#131: FILE: include/linux/mm.h:640:
+unsigned long arch_get_unmapped_area_topdown(struct file *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#131: FILE: include/linux/mm.h:640:
+unsigned long arch_get_unmapped_area_topdown(struct file *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#131: FILE: include/linux/mm.h:640:
+unsigned long arch_get_unmapped_area_topdown(struct file *, unsigned long,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#132: FILE: include/linux/mm.h:641:
+unsigned long arch_get_unmapped_area_topdown(struct file *, unsigned long,
+				unsigned long, unsigned long, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vm_area_struct *' should also have an identifier name
#133: FILE: include/linux/mm.h:642:
+void arch_unmap_area(struct vm_area_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vm_area_struct *' should also have an identifier name
#134: FILE: include/linux/mm.h:643:
+void arch_unmap_area_topdown(struct vm_area_struct *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000246870.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 23 warnings, 4 checks, 235 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000246870.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
