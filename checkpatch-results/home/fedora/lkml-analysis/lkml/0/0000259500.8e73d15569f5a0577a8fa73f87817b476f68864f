ERROR:CODE_INDENT: code indent should use tabs where possible
#73: FILE: arch/i386/mm/highmem.c:82:
+        enum fixed_addresses idx;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#73: FILE: arch/i386/mm/highmem.c:82:
+        enum fixed_addresses idx;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#74: FILE: arch/i386/mm/highmem.c:83:
+        unsigned long vaddr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: arch/i386/mm/highmem.c:83:
+        unsigned long vaddr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#76: FILE: arch/i386/mm/highmem.c:85:
+        inc_preempt_count();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: arch/i386/mm/highmem.c:85:
+        inc_preempt_count();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#78: FILE: arch/i386/mm/highmem.c:87:
+        idx = type + KM_TYPE_NR*smp_processor_id();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: arch/i386/mm/highmem.c:87:
+        idx = type + KM_TYPE_NR*smp_processor_id();$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#78: FILE: arch/i386/mm/highmem.c:87:
+        idx = type + KM_TYPE_NR*smp_processor_id();
                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#79: FILE: arch/i386/mm/highmem.c:88:
+        vaddr = __fix_to_virt(FIX_KMAP_BEGIN + idx);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: arch/i386/mm/highmem.c:88:
+        vaddr = __fix_to_virt(FIX_KMAP_BEGIN + idx);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#80: FILE: arch/i386/mm/highmem.c:89:
+        set_pte(kmap_pte-idx, pfn_pte(pfn, kmap_prot));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: arch/i386/mm/highmem.c:89:
+        set_pte(kmap_pte-idx, pfn_pte(pfn, kmap_prot));$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#80: FILE: arch/i386/mm/highmem.c:89:
+        set_pte(kmap_pte-idx, pfn_pte(pfn, kmap_prot));
                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#81: FILE: arch/i386/mm/highmem.c:90:
+        __flush_tlb_one(vaddr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: arch/i386/mm/highmem.c:90:
+        __flush_tlb_one(vaddr);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#83: FILE: arch/i386/mm/highmem.c:92:
+        return (void*) vaddr;$

CHECK:SPACING: No space is necessary after a cast
#83: FILE: arch/i386/mm/highmem.c:92:
+        return (void*) vaddr;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: arch/i386/mm/highmem.c:92:
+        return (void*) vaddr;$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#83: FILE: arch/i386/mm/highmem.c:92:
+        return (void*) vaddr;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#132: FILE: drivers/char/mem.c:241:
+		if (userbuf) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#135: FILE: drivers/char/mem.c:244:
+		} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#144: FILE: drivers/char/mem.c:253:
+		if (userbuf) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#149: FILE: drivers/char/mem.c:258:
+		} else

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000259500.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 8 warnings, 7 checks, 103 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000259500.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
