WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct zone *' should also have an identifier name
#35: FILE: include/linux/hugetlb.h:34:
+int remap_hugetlb_pages(struct zone *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 17)
#82: FILE: arch/i386/mm/hugetlbpage.c:478:
+	if (page->mapping == NULL) {
+		 BUG_ON(! PageAgain(page));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!page->mapping"
#82: FILE: arch/i386/mm/hugetlbpage.c:478:
+	if (page->mapping == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#83: FILE: arch/i386/mm/hugetlbpage.c:479:
+		 BUG_ON(! PageAgain(page));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#83: FILE: arch/i386/mm/hugetlbpage.c:479:
+		 BUG_ON(! PageAgain(page));
 		        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!zone"
#116: FILE: arch/i386/mm/hugetlbpage.c:651:
+		if ((zone == NULL && !PageHighMem(page)) ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#117: FILE: arch/i386/mm/hugetlbpage.c:652:
+		if ((zone == NULL && !PageHighMem(page)) ||
+					(page_zone(page) == zone))

WARNING:LINE_SPACING: Missing a blank line after declarations
#142: FILE: arch/i386/mm/hugetlbpage.c:715:
+	int size;
+	for (size = 0; size < HPAGE_SIZE; size += PAGE_SIZE) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#157: FILE: arch/i386/mm/hugetlbpage.c:730:
+^I/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#166: FILE: arch/i386/mm/hugetlbpage.c:739:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!page"
#167: FILE: arch/i386/mm/hugetlbpage.c:740:
+	if (page == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#168: FILE: arch/i386/mm/hugetlbpage.c:741:
+		printk(KERN_WARNING "remap: Failed to allocate new hugepage\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#188: FILE: arch/i386/mm/hugetlbpage.c:761:
+        BUG_ON(page_count(page) != 1);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: arch/i386/mm/hugetlbpage.c:761:
+        BUG_ON(page_count(page) != 1);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#188: FILE: arch/i386/mm/hugetlbpage.c:761:
+        BUG_ON(page_count(page) != 1);

ERROR:CODE_INDENT: code indent should use tabs where possible
#189: FILE: arch/i386/mm/hugetlbpage.c:762:
+        BUG_ON(page->mapping);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: arch/i386/mm/hugetlbpage.c:762:
+        BUG_ON(page->mapping);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#189: FILE: arch/i386/mm/hugetlbpage.c:762:
+        BUG_ON(page->mapping);

ERROR:CODE_INDENT: code indent should use tabs where possible
#194: FILE: arch/i386/mm/hugetlbpage.c:767:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: arch/i386/mm/hugetlbpage.c:767:
+        return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#203: FILE: arch/i386/mm/hugetlbpage.c:776:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: arch/i386/mm/hugetlbpage.c:776:
+        return 0;$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#209: FILE: arch/i386/mm/hugetlbpage.c:782:
+	BUG();

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#232: FILE: arch/i386/mm/hugetlbpage.c:805:
+/* ^Ihtlbpage_max = set_hugetlb_mem_size(htlbpage_max); */$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#239: FILE: arch/i386/mm/hugetlbpage.c:812:
+			page_cache_get(map-1);
 			                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#240: FILE: arch/i386/mm/hugetlbpage.c:813:
+			unregister_huge_page(map-1);
 			                        ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#244: FILE: arch/i386/mm/hugetlbpage.c:817:
+		if (page_zone(page) == zone) {
+			map = page;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#249: FILE: arch/i386/mm/hugetlbpage.c:822:
+		page_cache_get(map-1);
 		                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#250: FILE: arch/i386/mm/hugetlbpage.c:823:
+		unregister_huge_page(map-1);
 		                        ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!page->mapping"
#262: FILE: arch/i386/mm/hugetlbpage.c:835:
+		if (page_count(page) <= 1 || page->mapping == NULL ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#263: FILE: arch/i386/mm/hugetlbpage.c:836:
+		if (page_count(page) <= 1 || page->mapping == NULL ||
+				remap_onepage(page, REMAP_ANYNODE, 0, &hugepage_remap_ops)) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000290285.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 14 warnings, 10 checks, 251 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000290285.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
