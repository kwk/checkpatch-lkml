WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#46: FILE: MAINTAINERS:2479:
+P:	Pierre Ossman
+M:	drzeus-sdhci@drzeus.cx

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'S:' before 'W:'
#49: FILE: MAINTAINERS:2482:
+W:	http://mmc.drzeus.cx/wiki/Linux/Drivers/sdhci
+S:	Maintained

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#94: FILE: drivers/mmc/sdhci.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#95: FILE: drivers/mmc/sdhci.c:2:
+ *  linux/drivers/mmc/sdhci.c - Secure Digital Host Controller Interface driver

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#128: FILE: drivers/mmc/sdhci.c:35:
+	printk(KERN_DEBUG DRIVER_NAME " [%s()]: " f, __func__,## x)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#128: FILE: drivers/mmc/sdhci.c:35:
+	printk(KERN_DEBUG DRIVER_NAME " [%s()]: " f, __func__,## x)
 	                                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#133: FILE: drivers/mmc/sdhci.c:40:
+static const struct pci_device_id pci_ids[] __devinitdata = {

ERROR:INIT_ATTRIBUTE: Use of const init definition must use __devinitconst
#133: FILE: drivers/mmc/sdhci.c:40:
+static const struct pci_device_id pci_ids[] __devinitdata = {

Const init definitions should use __initconst instead of
__initdata.

Similarly init definitions without const require a separate
use of const.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#149: FILE: drivers/mmc/sdhci.c:56:
+	printk(KERN_DEBUG DRIVER_NAME ": ============== REGISTER DUMP ==============\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#151: FILE: drivers/mmc/sdhci.c:58:
+	printk(KERN_DEBUG DRIVER_NAME ": Sys addr: 0x%08x | Version:  0x%08x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#152: FILE: drivers/mmc/sdhci.c:59:
+	printk(KERN_DEBUG DRIVER_NAME ": Sys addr: 0x%08x | Version:  0x%08x\n",
+		readl(host->ioaddr + SDHCI_DMA_ADDRESS),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#154: FILE: drivers/mmc/sdhci.c:61:
+	printk(KERN_DEBUG DRIVER_NAME ": Blk size: 0x%08x | Blk cnt:  0x%08x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#155: FILE: drivers/mmc/sdhci.c:62:
+	printk(KERN_DEBUG DRIVER_NAME ": Blk size: 0x%08x | Blk cnt:  0x%08x\n",
+		readw(host->ioaddr + SDHCI_BLOCK_SIZE),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#157: FILE: drivers/mmc/sdhci.c:64:
+	printk(KERN_DEBUG DRIVER_NAME ": Argument: 0x%08x | Trn mode: 0x%08x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#158: FILE: drivers/mmc/sdhci.c:65:
+	printk(KERN_DEBUG DRIVER_NAME ": Argument: 0x%08x | Trn mode: 0x%08x\n",
+		readl(host->ioaddr + SDHCI_ARGUMENT),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#160: FILE: drivers/mmc/sdhci.c:67:
+	printk(KERN_DEBUG DRIVER_NAME ": Present:  0x%08x | Host ctl: 0x%08x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#161: FILE: drivers/mmc/sdhci.c:68:
+	printk(KERN_DEBUG DRIVER_NAME ": Present:  0x%08x | Host ctl: 0x%08x\n",
+		readl(host->ioaddr + SDHCI_PRESENT_STATE),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#163: FILE: drivers/mmc/sdhci.c:70:
+	printk(KERN_DEBUG DRIVER_NAME ": Power:    0x%08x | Blk gap:  0x%08x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#164: FILE: drivers/mmc/sdhci.c:71:
+	printk(KERN_DEBUG DRIVER_NAME ": Power:    0x%08x | Blk gap:  0x%08x\n",
+		readb(host->ioaddr + SDHCI_POWER_CONTROL),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#166: FILE: drivers/mmc/sdhci.c:73:
+	printk(KERN_DEBUG DRIVER_NAME ": Wake-up:  0x%08x | Clock:    0x%08x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#167: FILE: drivers/mmc/sdhci.c:74:
+	printk(KERN_DEBUG DRIVER_NAME ": Wake-up:  0x%08x | Clock:    0x%08x\n",
+		readb(host->ioaddr + SDHCI_WALK_UP_CONTROL),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#169: FILE: drivers/mmc/sdhci.c:76:
+	printk(KERN_DEBUG DRIVER_NAME ": Timeout:  0x%08x | Int stat: 0x%08x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#170: FILE: drivers/mmc/sdhci.c:77:
+	printk(KERN_DEBUG DRIVER_NAME ": Timeout:  0x%08x | Int stat: 0x%08x\n",
+		readb(host->ioaddr + SDHCI_TIMEOUT_CONTROL),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#172: FILE: drivers/mmc/sdhci.c:79:
+	printk(KERN_DEBUG DRIVER_NAME ": Int enab: 0x%08x | Sig enab: 0x%08x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#173: FILE: drivers/mmc/sdhci.c:80:
+	printk(KERN_DEBUG DRIVER_NAME ": Int enab: 0x%08x | Sig enab: 0x%08x\n",
+		readl(host->ioaddr + SDHCI_INT_ENABLE),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#175: FILE: drivers/mmc/sdhci.c:82:
+	printk(KERN_DEBUG DRIVER_NAME ": AC12 err: 0x%08x | Slot int: 0x%08x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#176: FILE: drivers/mmc/sdhci.c:83:
+	printk(KERN_DEBUG DRIVER_NAME ": AC12 err: 0x%08x | Slot int: 0x%08x\n",
+		readw(host->ioaddr + SDHCI_ACMD12_ERR),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#178: FILE: drivers/mmc/sdhci.c:85:
+	printk(KERN_DEBUG DRIVER_NAME ": Caps:     0x%08x | Max curr: 0x%08x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#179: FILE: drivers/mmc/sdhci.c:86:
+	printk(KERN_DEBUG DRIVER_NAME ": Caps:     0x%08x | Max curr: 0x%08x\n",
+		readl(host->ioaddr + SDHCI_CAPABILITIES),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#182: FILE: drivers/mmc/sdhci.c:89:
+	printk(KERN_DEBUG DRIVER_NAME ": ===========================================\n");

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#241: FILE: drivers/mmc/sdhci.c:148:
+static inline char* sdhci_kmap_sg(struct sdhci_host* host)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#241: FILE: drivers/mmc/sdhci.c:148:
+static inline char* sdhci_kmap_sg(struct sdhci_host* host)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#247: FILE: drivers/mmc/sdhci.c:154:
+static inline void sdhci_kunmap_sg(struct sdhci_host* host)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#252: FILE: drivers/mmc/sdhci.c:159:
+static inline int sdhci_next_sg(struct sdhci_host* host)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#278: FILE: drivers/mmc/sdhci.c:185:
+	BUG_ON(!host->data);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#296: FILE: drivers/mmc/sdhci.c:203:
+			printk(KERN_ERR "%s: PIO transfer stalled. "

WARNING:SPLIT_STRING: quoted string split across lines
#297: FILE: drivers/mmc/sdhci.c:204:
+			printk(KERN_ERR "%s: PIO transfer stalled. "
+				"Please report this to "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#312: FILE: drivers/mmc/sdhci.c:219:
+				*(u32*)buffer = readl(host->ioaddr + SDHCI_BUFFER);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#314: FILE: drivers/mmc/sdhci.c:221:
+				writel(*(u32*)buffer, host->ioaddr + SDHCI_BUFFER);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#318: FILE: drivers/mmc/sdhci.c:225:
+				*(u16*)buffer = readw(host->ioaddr + SDHCI_BUFFER);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#320: FILE: drivers/mmc/sdhci.c:227:
+				writew(*(u16*)buffer, host->ioaddr + SDHCI_BUFFER);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#324: FILE: drivers/mmc/sdhci.c:231:
+				*(u8*)buffer = readb(host->ioaddr + SDHCI_BUFFER);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#326: FILE: drivers/mmc/sdhci.c:233:
+				writeb(*(u8*)buffer, host->ioaddr + SDHCI_BUFFER);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
#358: FILE: drivers/mmc/sdhci.c:265:
+	if (data == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#364: FILE: drivers/mmc/sdhci.c:271:
+	DBG("blksz %04x blks %04x flags %08x\n",
+		1 << data->blksz_bits, data->blocks, data->flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#366: FILE: drivers/mmc/sdhci.c:273:
+	DBG("tsac %d ms nsac %d clk\n",
+		data->timeout_ns / 1000000, data->timeout_clks);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#385: FILE: drivers/mmc/sdhci.c:292:
+		count = pci_map_sg(host->chip->pdev, data->sg, data->sg_len,
+			(data->flags & MMC_DATA_READ)?PCI_DMA_FROMDEVICE:PCI_DMA_TODEVICE);

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#385: FILE: drivers/mmc/sdhci.c:292:
+			(data->flags & MMC_DATA_READ)?PCI_DMA_FROMDEVICE:PCI_DMA_TODEVICE);
 			                             ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#385: FILE: drivers/mmc/sdhci.c:292:
+			(data->flags & MMC_DATA_READ)?PCI_DMA_FROMDEVICE:PCI_DMA_TODEVICE);
 			                                                ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#386: FILE: drivers/mmc/sdhci.c:293:
+		BUG_ON(count != 1);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#406: FILE: drivers/mmc/sdhci.c:313:
+	BUG_ON(!host->data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#413: FILE: drivers/mmc/sdhci.c:320:
+		pci_unmap_sg(host->chip->pdev, data->sg, data->sg_len,
+			(data->flags & MMC_DATA_READ)?PCI_DMA_FROMDEVICE:PCI_DMA_TODEVICE);

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#413: FILE: drivers/mmc/sdhci.c:320:
+			(data->flags & MMC_DATA_READ)?PCI_DMA_FROMDEVICE:PCI_DMA_TODEVICE);
 			                             ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#413: FILE: drivers/mmc/sdhci.c:320:
+			(data->flags & MMC_DATA_READ)?PCI_DMA_FROMDEVICE:PCI_DMA_TODEVICE);
 			                                                ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->blocks == 1'
#427: FILE: drivers/mmc/sdhci.c:334:
+	if ((data->blocks == 1) && (data->error == MMC_ERR_NONE))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->error == MMC_ERR_NONE'
#427: FILE: drivers/mmc/sdhci.c:334:
+	if ((data->blocks == 1) && (data->error == MMC_ERR_NONE))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data->error == MMC_ERR_NONE'
#433: FILE: drivers/mmc/sdhci.c:340:
+	if ((data->error == MMC_ERR_NONE) && blocks) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#434: FILE: drivers/mmc/sdhci.c:341:
+		printk(KERN_ERR "%s: Controller signalled completion even "

WARNING:SPLIT_STRING: quoted string split across lines
#435: FILE: drivers/mmc/sdhci.c:342:
+		printk(KERN_ERR "%s: Controller signalled completion even "
+			"though there were blocks left. Please report this "

WARNING:SPLIT_STRING: quoted string split across lines
#436: FILE: drivers/mmc/sdhci.c:343:
+			"though there were blocks left. Please report this "
+			"to " BUGMAIL ".\n", mmc_hostname(host->mmc));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#441: FILE: drivers/mmc/sdhci.c:348:
+		printk(KERN_ERR "%s: %d bytes were left untransferred. "

WARNING:SPLIT_STRING: quoted string split across lines
#442: FILE: drivers/mmc/sdhci.c:349:
+		printk(KERN_ERR "%s: %d bytes were left untransferred. "
+			"Please report this to " BUGMAIL ".\n",

CHECK:BRACES: braces {} should be used on all arms of this statement
#449: FILE: drivers/mmc/sdhci.c:356:
+	if (data->stop) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#460: FILE: drivers/mmc/sdhci.c:367:
+	} else

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#475: FILE: drivers/mmc/sdhci.c:382:
+	max_jiffies = jiffies + (HZ + 99)/100;
 	                                 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#478: FILE: drivers/mmc/sdhci.c:385:
+			printk(KERN_ERR "%s: Controller never released "

WARNING:SPLIT_STRING: quoted string split across lines
#479: FILE: drivers/mmc/sdhci.c:386:
+			printk(KERN_ERR "%s: Controller never released "
+				"inhibit bits. Please report this to "

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#498: FILE: drivers/mmc/sdhci.c:405:
+		printk(KERN_ERR "%s: Unsupported response type! "

WARNING:SPLIT_STRING: quoted string split across lines
#499: FILE: drivers/mmc/sdhci.c:406:
+		printk(KERN_ERR "%s: Unsupported response type! "
+			"Please report this to " BUGMAIL ".\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#523: FILE: drivers/mmc/sdhci.c:430:
+	writel(SDHCI_MAKE_CMD(cmd->opcode, flags),
+		host->ioaddr + SDHCI_COMMAND);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#530: FILE: drivers/mmc/sdhci.c:437:
+	BUG_ON(host->cmd == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!host->cmd"
#530: FILE: drivers/mmc/sdhci.c:437:
+	BUG_ON(host->cmd == NULL);

ERROR:SPACING: space required after that ';' (ctx:VxV)
#535: FILE: drivers/mmc/sdhci.c:442:
+			for (i = 0;i < 4;i++) {
 			          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#535: FILE: drivers/mmc/sdhci.c:442:
+			for (i = 0;i < 4;i++) {
 			                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#537: FILE: drivers/mmc/sdhci.c:444:
+					SDHCI_RESPONSE + (3-i)*4) << 8;
 					                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#537: FILE: drivers/mmc/sdhci.c:444:
+					SDHCI_RESPONSE + (3-i)*4) << 8;
 					                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#541: FILE: drivers/mmc/sdhci.c:448:
+						SDHCI_RESPONSE + (3-i)*4-1);
 						                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#541: FILE: drivers/mmc/sdhci.c:448:
+						SDHCI_RESPONSE + (3-i)*4-1);
 						                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#541: FILE: drivers/mmc/sdhci.c:448:
+						SDHCI_RESPONSE + (3-i)*4-1);
 						                        ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#552: FILE: drivers/mmc/sdhci.c:459:
+	if (host->cmd->data) {
[...]
+	} else
[...]

WARNING:TYPO_SPELLING: 'immediatly' may be misspelled - perhaps 'immediately'?
#572: FILE: drivers/mmc/sdhci.c:479:
+			 * start the transfer immediatly.
 			                      ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: Unbalanced braces around else statement
#576: FILE: drivers/mmc/sdhci.c:483:
+	} else

ERROR:SPACING: space required after that ';' (ctx:VxV)
#596: FILE: drivers/mmc/sdhci.c:503:
+	for (div = 1;div < 256;div *= 2) {
 	            ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#596: FILE: drivers/mmc/sdhci.c:503:
+	for (div = 1;div < 256;div *= 2) {
 	                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#607: FILE: drivers/mmc/sdhci.c:514:
+	max_jiffies = jiffies + (HZ + 99)/100;
 	                                 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#610: FILE: drivers/mmc/sdhci.c:517:
+			printk(KERN_ERR "%s: Internal clock never stabilised. "

WARNING:SPLIT_STRING: quoted string split across lines
#611: FILE: drivers/mmc/sdhci.c:518:
+			printk(KERN_ERR "%s: Internal clock never stabilised. "
+				"Please report this to " BUGMAIL ".\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "host->mrq"
#641: FILE: drivers/mmc/sdhci.c:548:
+	WARN_ON(host->mrq != NULL);

CHECK:BRACES: braces {} should be used on all arms of this statement
#647: FILE: drivers/mmc/sdhci.c:554:
+	if (!(readl(host->ioaddr + SDHCI_PRESENT_STATE) & SDHCI_CARD_PRESENT)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#650: FILE: drivers/mmc/sdhci.c:557:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#667: FILE: drivers/mmc/sdhci.c:574:
+	DBG("clock %uHz busmode %u powermode %u cs %u Vdd %u width %u\n",
+	     ios->clock, ios->bus_mode, ios->power_mode, ios->chip_select,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#728: FILE: drivers/mmc/sdhci.c:635:
+	host = (struct sdhci_host*)param;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#734: FILE: drivers/mmc/sdhci.c:641:
+			printk(KERN_ERR "%s: Card removed during transfer!\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#735: FILE: drivers/mmc/sdhci.c:642:
+			printk(KERN_ERR "%s: Card removed during transfer!\n",
+				mmc_hostname(host->mmc));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#736: FILE: drivers/mmc/sdhci.c:643:
+			printk(KERN_ERR "%s: Resetting controller.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#737: FILE: drivers/mmc/sdhci.c:644:
+			printk(KERN_ERR "%s: Resetting controller.\n",
+				mmc_hostname(host->mmc));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#758: FILE: drivers/mmc/sdhci.c:665:
+	host = (struct sdhci_host*)param;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mrq->cmd->error != MMC_ERR_NONE'
#772: FILE: drivers/mmc/sdhci.c:679:
+	if ((mrq->cmd->error != MMC_ERR_NONE) ||
+		(mrq->data && ((mrq->data->error != MMC_ERR_NONE) ||
+		(mrq->data->stop && (mrq->data->stop->error != MMC_ERR_NONE))))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mrq->data->error != MMC_ERR_NONE'
#772: FILE: drivers/mmc/sdhci.c:679:
+	if ((mrq->cmd->error != MMC_ERR_NONE) ||
+		(mrq->data && ((mrq->data->error != MMC_ERR_NONE) ||
+		(mrq->data->stop && (mrq->data->stop->error != MMC_ERR_NONE))))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mrq->data->stop->error != MMC_ERR_NONE'
#772: FILE: drivers/mmc/sdhci.c:679:
+	if ((mrq->cmd->error != MMC_ERR_NONE) ||
+		(mrq->data && ((mrq->data->error != MMC_ERR_NONE) ||
+		(mrq->data->stop && (mrq->data->stop->error != MMC_ERR_NONE))))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#773: FILE: drivers/mmc/sdhci.c:680:
+	if ((mrq->cmd->error != MMC_ERR_NONE) ||
+		(mrq->data && ((mrq->data->error != MMC_ERR_NONE) ||

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#795: FILE: drivers/mmc/sdhci.c:702:
+	host = (struct sdhci_host*)data;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#800: FILE: drivers/mmc/sdhci.c:707:
+		printk(KERN_ERR "%s: Timeout waiting for hardware interrupt. "

WARNING:SPLIT_STRING: quoted string split across lines
#801: FILE: drivers/mmc/sdhci.c:708:
+		printk(KERN_ERR "%s: Timeout waiting for hardware interrupt. "
+			"Please report this to " BUGMAIL ".\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#829: FILE: drivers/mmc/sdhci.c:736:
+	BUG_ON(intmask == 0);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#832: FILE: drivers/mmc/sdhci.c:739:
+		printk(KERN_ERR "%s: Got command interrupt even though no "

WARNING:SPLIT_STRING: quoted string split across lines
#833: FILE: drivers/mmc/sdhci.c:740:
+		printk(KERN_ERR "%s: Got command interrupt even though no "
+			"command operation was in progress.\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#835: FILE: drivers/mmc/sdhci.c:742:
+		printk(KERN_ERR "%s: Please report this to " BUGMAIL ".\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#836: FILE: drivers/mmc/sdhci.c:743:
+		printk(KERN_ERR "%s: Please report this to " BUGMAIL ".\n",
+			mmc_hostname(host->mmc));

CHECK:BRACES: braces {} should be used on all arms of this statement
#841: FILE: drivers/mmc/sdhci.c:748:
+	if (intmask & SDHCI_INT_RESPONSE)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#843: FILE: drivers/mmc/sdhci.c:750:
+	else {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#859: FILE: drivers/mmc/sdhci.c:766:
+	BUG_ON(intmask == 0);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#869: FILE: drivers/mmc/sdhci.c:776:
+		printk(KERN_ERR "%s: Got data interrupt even though no "

WARNING:SPLIT_STRING: quoted string split across lines
#870: FILE: drivers/mmc/sdhci.c:777:
+		printk(KERN_ERR "%s: Got data interrupt even though no "
+			"data operation was in progress.\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#872: FILE: drivers/mmc/sdhci.c:779:
+		printk(KERN_ERR "%s: Please report this to " BUGMAIL ".\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#873: FILE: drivers/mmc/sdhci.c:780:
+		printk(KERN_ERR "%s: Please report this to " BUGMAIL ".\n",
+			mmc_hostname(host->mmc));

CHECK:BRACES: braces {} should be used on all arms of this statement
#886: FILE: drivers/mmc/sdhci.c:793:
+	if (host->data->error != MMC_ERR_NONE)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#888: FILE: drivers/mmc/sdhci.c:795:
+	else {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#900: FILE: drivers/mmc/sdhci.c:807:
+	struct sdhci_host* host = dev_id;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#921: FILE: drivers/mmc/sdhci.c:828:
+		writel(intmask & SDHCI_INT_CMD_MASK,
+			host->ioaddr + SDHCI_INT_STATUS);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#928: FILE: drivers/mmc/sdhci.c:835:
+		writel(intmask & SDHCI_INT_DATA_MASK,
+			host->ioaddr + SDHCI_INT_STATUS);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#934: FILE: drivers/mmc/sdhci.c:841:
+		printk(KERN_ERR "%s: Unexpected card interrupt. Please "

WARNING:SPLIT_STRING: quoted string split across lines
#935: FILE: drivers/mmc/sdhci.c:842:
+		printk(KERN_ERR "%s: Unexpected card interrupt. Please "
+			"report this to " BUGMAIL ".\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#941: FILE: drivers/mmc/sdhci.c:848:
+		printk(KERN_ERR "%s: Unexpected bus power interrupt. Please "

WARNING:SPLIT_STRING: quoted string split across lines
#942: FILE: drivers/mmc/sdhci.c:849:
+		printk(KERN_ERR "%s: Unexpected bus power interrupt. Please "
+			"report this to " BUGMAIL ".\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#948: FILE: drivers/mmc/sdhci.c:855:
+		printk(KERN_ERR "%s: Unexpected auto CMD12 error. Please "

WARNING:SPLIT_STRING: quoted string split across lines
#949: FILE: drivers/mmc/sdhci.c:856:
+		printk(KERN_ERR "%s: Unexpected auto CMD12 error. Please "
+			"report this to " BUGMAIL ".\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#975: FILE: drivers/mmc/sdhci.c:882:
+static int sdhci_suspend (struct pci_dev *pdev, pm_message_t state)

ERROR:SPACING: space required after that ';' (ctx:VxV)
#986: FILE: drivers/mmc/sdhci.c:893:
+	for (i = 0;i < chip->num_slots;i++) {
 	          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#986: FILE: drivers/mmc/sdhci.c:893:
+	for (i = 0;i < chip->num_slots;i++) {
 	                              ^

ERROR:SPACING: space required after that ';' (ctx:OxV)
#991: FILE: drivers/mmc/sdhci.c:898:
+			for (i--;i >= 0;i--)
 			        ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#991: FILE: drivers/mmc/sdhci.c:898:
+			for (i--;i >= 0;i--)
 			               ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1005: FILE: drivers/mmc/sdhci.c:912:
+static int sdhci_resume (struct pci_dev *pdev)

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1020: FILE: drivers/mmc/sdhci.c:927:
+	for (i = 0;i < chip->num_slots;i++) {
 	          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1020: FILE: drivers/mmc/sdhci.c:927:
+	for (i = 0;i < chip->num_slots;i++) {
 	                              ^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1047: FILE: drivers/mmc/sdhci.c:954:
+static int __devinit sdhci_probe_slot(struct pci_dev *pdev, int slot)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1058: FILE: drivers/mmc/sdhci.c:965:
+	BUG_ON(!chip);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1080: FILE: drivers/mmc/sdhci.c:987:
+	BUG_ON(!(pci_resource_flags(pdev, first_bar + slot) & IORESOURCE_MEM));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1089: FILE: drivers/mmc/sdhci.c:996:
+	host->ioaddr = ioremap_nocache(host->addr,
+		pci_resource_len(pdev, host->bar));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1096: FILE: drivers/mmc/sdhci.c:1003:
+	ret = request_irq(host->irq, sdhci_irq, SA_SHIRQ,
+		host->slot_descr, host);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1107: FILE: drivers/mmc/sdhci.c:1014:
+			printk(KERN_WARNING "%s: No suitable DMA available. "

WARNING:SPLIT_STRING: quoted string split across lines
#1108: FILE: drivers/mmc/sdhci.c:1015:
+			printk(KERN_WARNING "%s: No suitable DMA available. "
+				"Falling back to PIO.\n", host->slot_descr);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1127: FILE: drivers/mmc/sdhci.c:1034:
+	mmc->ocr_avail = MMC_VDD_32_33|MMC_VDD_33_34;
 	                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1157: FILE: drivers/mmc/sdhci.c:1064:
+	tasklet_init(&host->card_tasklet,
+		sdhci_tasklet_card, (unsigned long)host);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1159: FILE: drivers/mmc/sdhci.c:1066:
+	tasklet_init(&host->finish_tasklet,
+		sdhci_tasklet_finish, (unsigned long)host);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1176: FILE: drivers/mmc/sdhci.c:1083:
+	printk(KERN_INFO "%s: SDHCI at 0x%08lx irq %d %s\n", mmc_hostname(mmc),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1177: FILE: drivers/mmc/sdhci.c:1084:
+	printk(KERN_INFO "%s: SDHCI at 0x%08lx irq %d %s\n", mmc_hostname(mmc),
+		host->addr, host->irq,

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#1178: FILE: drivers/mmc/sdhci.c:1085:
+		(host->flags & SDHCI_USE_DMA)?"DMA":"PIO");
 		                             ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1178: FILE: drivers/mmc/sdhci.c:1085:
+		(host->flags & SDHCI_USE_DMA)?"DMA":"PIO");
 		                                   ^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1222: FILE: drivers/mmc/sdhci.c:1129:
+static int __devinit sdhci_probe(struct pci_dev *pdev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1223: FILE: drivers/mmc/sdhci.c:1130:
+static int __devinit sdhci_probe(struct pci_dev *pdev,
+	const struct pci_device_id *ent)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1229: FILE: drivers/mmc/sdhci.c:1136:
+	BUG_ON(pdev == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pdev"
#1229: FILE: drivers/mmc/sdhci.c:1136:
+	BUG_ON(pdev == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1230: FILE: drivers/mmc/sdhci.c:1137:
+	BUG_ON(ent == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ent"
#1230: FILE: drivers/mmc/sdhci.c:1137:
+	BUG_ON(ent == NULL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*chip)...) over kzalloc(sizeof(struct sdhci_chip)...)
#1247: FILE: drivers/mmc/sdhci.c:1154:
+	chip = kzalloc(sizeof(struct sdhci_chip) +

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1259: FILE: drivers/mmc/sdhci.c:1166:
+	for (i = 0;i < slots;i++) {
 	          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1259: FILE: drivers/mmc/sdhci.c:1166:
+	for (i = 0;i < slots;i++) {
 	                    ^

ERROR:SPACING: space required after that ';' (ctx:OxV)
#1262: FILE: drivers/mmc/sdhci.c:1169:
+			for (i--;i >= 0;i--)
 			        ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1262: FILE: drivers/mmc/sdhci.c:1169:
+			for (i--;i >= 0;i--)
 			               ^

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1279: FILE: drivers/mmc/sdhci.c:1186:
+static void __devexit sdhci_remove(struct pci_dev *pdev)

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1287: FILE: drivers/mmc/sdhci.c:1194:
+		for (i = 0;i < chip->num_slots;i++)
 		          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1287: FILE: drivers/mmc/sdhci.c:1194:
+		for (i = 0;i < chip->num_slots;i++)
 		                              ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1299: FILE: drivers/mmc/sdhci.c:1206:
+^I.name = ^IDRIVER_NAME,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1301: FILE: drivers/mmc/sdhci.c:1208:
+^I.probe = ^Isdhci_probe,$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1315: FILE: drivers/mmc/sdhci.c:1222:
+	printk(KERN_INFO DRIVER_NAME

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1318: FILE: drivers/mmc/sdhci.c:1225:
+	printk(KERN_INFO DRIVER_NAME ": Copyright(c) Pierre Ossman\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1343: FILE: drivers/mmc/sdhci.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1344: FILE: drivers/mmc/sdhci.h:2:
+ *  linux/drivers/mmc/sdhci.h - Secure Digital Host Controller Interface driver

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'c' may be better as '(c)' to avoid precedence issues
#1383: FILE: drivers/mmc/sdhci.h:41:
+#define SDHCI_MAKE_CMD(c, f) (((c & 0xff) << 8) | (f & 0xff))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'f' may be better as '(f)' to avoid precedence issues
#1383: FILE: drivers/mmc/sdhci.h:41:
+#define SDHCI_MAKE_CMD(c, f) (((c & 0xff) << 8) | (f & 0xff))

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1399: FILE: drivers/mmc/sdhci.h:57:
+#define SDHCI_HOST_CONTROL ^I0x28$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1483: FILE: drivers/mmc/sdhci.h:141:
+#define SDHCI_USE_DMA		(1<<0)
                      		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#1483: FILE: drivers/mmc/sdhci.h:141:
+#define SDHCI_USE_DMA		(1<<0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

ERROR:POINTER_LOCATION: "foo *		bar" should be "foo *bar"
#1506: FILE: drivers/mmc/sdhci.h:164:
+	void __iomem *		ioaddr;		/* Mapped address */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1514: FILE: drivers/mmc/sdhci.h:172:
+typedef struct sdhci_host *sdhci_host_p;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000105678.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 33 errors, 74 warnings, 69 checks, 1459 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000105678.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
