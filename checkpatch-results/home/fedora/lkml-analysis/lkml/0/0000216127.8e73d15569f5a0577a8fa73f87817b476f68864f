CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#156: FILE: drivers/char/consolemap.c:299:
+	if (!access_ok(VERIFY_READ, arg, E_TABSZ*sizeof(unsigned short)))
 	                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#168: FILE: drivers/char/consolemap.c:317:
+	if (!access_ok(VERIFY_WRITE, arg, E_TABSZ*sizeof(unsigned short)))
 	                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#190: FILE: drivers/char/mem.c:364:
+	if (!access_ok(VERIFY_READ,buf,count))
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#190: FILE: drivers/char/mem.c:364:
+	if (!access_ok(VERIFY_READ,buf,count))
 	                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#203: FILE: fs/compat_ioctl.c:2339:
+        if ((ret = access_ok(VERIFY_WRITE, d32,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: fs/compat_ioctl.c:2339:
+        if ((ret = access_ok(VERIFY_WRITE, d32,$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#203: FILE: fs/compat_ioctl.c:2339:
+        if ((ret = access_ok(VERIFY_WRITE, d32,

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#204: FILE: fs/compat_ioctl.c:2340:
+                               sizeof(struct compat_dirent)) ? 0 : -EFAULT))$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#204: FILE: fs/compat_ioctl.c:2340:
+        if ((ret = access_ok(VERIFY_WRITE, d32,
+                               sizeof(struct compat_dirent)) ? 0 : -EFAULT))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: fs/compat_ioctl.c:2340:
+                               sizeof(struct compat_dirent)) ? 0 : -EFAULT))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#214: FILE: fs/compat_ioctl.c:2398:
+        if ((ret = access_ok(VERIFY_READ, user_req,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: fs/compat_ioctl.c:2398:
+        if ((ret = access_ok(VERIFY_READ, user_req,$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#214: FILE: fs/compat_ioctl.c:2398:
+        if ((ret = access_ok(VERIFY_READ, user_req,

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: fs/compat_ioctl.c:2399:
+                               sizeof(struct raw32_config_request)) ? 0 : -EFAULT))$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#215: FILE: fs/compat_ioctl.c:2399:
+        if ((ret = access_ok(VERIFY_READ, user_req,
+                               sizeof(struct raw32_config_request)) ? 0 : -EFAULT))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: fs/compat_ioctl.c:2399:
+                               sizeof(struct raw32_config_request)) ? 0 : -EFAULT))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#225: FILE: fs/compat_ioctl.c:2413:
+        if ((ret = access_ok(VERIFY_WRITE, user_req,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: fs/compat_ioctl.c:2413:
+        if ((ret = access_ok(VERIFY_WRITE, user_req,$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#225: FILE: fs/compat_ioctl.c:2413:
+        if ((ret = access_ok(VERIFY_WRITE, user_req,

ERROR:CODE_INDENT: code indent should use tabs where possible
#226: FILE: fs/compat_ioctl.c:2414:
+                               sizeof(struct raw32_config_request)) ? 0 : -EFAULT))$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#226: FILE: fs/compat_ioctl.c:2414:
+        if ((ret = access_ok(VERIFY_WRITE, user_req,
+                               sizeof(struct raw32_config_request)) ? 0 : -EFAULT))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: fs/compat_ioctl.c:2414:
+                               sizeof(struct raw32_config_request)) ? 0 : -EFAULT))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#235: FILE: fs/compat_ioctl.c:2487:
+                if (!access_ok(VERIFY_READ, ss32, sizeof(SS32)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: fs/compat_ioctl.c:2487:
+                if (!access_ok(VERIFY_READ, ss32, sizeof(SS32)))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#244: FILE: fs/compat_ioctl.c:2500:
+                if (!access_ok(VERIFY_WRITE, ss32, sizeof(SS32)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: fs/compat_ioctl.c:2500:
+                if (!access_ok(VERIFY_WRITE, ss32, sizeof(SS32)))$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#351: FILE: kernel/compat.c:30:
+	return (!access_ok(VERIFY_READ, cts, sizeof(*cts)) ||
 			__get_user(ts->tv_sec, &cts->tv_sec) ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#359: FILE: kernel/compat.c:37:
+	return (!access_ok(VERIFY_WRITE, cts, sizeof(*cts)) ||
 			__put_user(ts->tv_sec, &cts->tv_sec) ||

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000216127.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 8 warnings, 7 checks, 307 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000216127.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
