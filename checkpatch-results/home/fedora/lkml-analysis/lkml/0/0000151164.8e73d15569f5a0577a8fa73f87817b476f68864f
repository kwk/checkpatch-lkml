WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: arch/um/drivers/mconsole_kern.c:280:
+    stack <pid> - returns the stack of the specified pid\n\$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#77: FILE: arch/um/drivers/mconsole_kern.c:487:
+ *  Usage stack <pid>.  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#81: FILE: arch/um/drivers/mconsole_kern.c:491:
+        char *ptr = req->request.data; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#81: FILE: arch/um/drivers/mconsole_kern.c:491:
+        char *ptr = req->request.data; $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: arch/um/drivers/mconsole_kern.c:491:
+        char *ptr = req->request.data; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#82: FILE: arch/um/drivers/mconsole_kern.c:492:
+        int pid_requested= -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: arch/um/drivers/mconsole_kern.c:492:
+        int pid_requested= -1;$

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#82: FILE: arch/um/drivers/mconsole_kern.c:492:
+        int pid_requested= -1;
                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#83: FILE: arch/um/drivers/mconsole_kern.c:493:
+        struct task_struct *from = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: arch/um/drivers/mconsole_kern.c:493:
+        struct task_struct *from = NULL;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#85: FILE: arch/um/drivers/mconsole_kern.c:495:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: arch/um/drivers/mconsole_kern.c:495:
+       $

ERROR:CODE_INDENT: code indent should use tabs where possible
#86: FILE: arch/um/drivers/mconsole_kern.c:496:
+        /* Would be nice:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#87: FILE: arch/um/drivers/mconsole_kern.c:497:
+         * 1) Send showregs output to mconsole.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#91: FILE: arch/um/drivers/mconsole_kern.c:501:
+        ptr += strlen("stack");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: arch/um/drivers/mconsole_kern.c:501:
+        ptr += strlen("stack");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#92: FILE: arch/um/drivers/mconsole_kern.c:502:
+        while(isspace(*ptr)) ptr++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: arch/um/drivers/mconsole_kern.c:502:
+        while(isspace(*ptr)) ptr++;$

ERROR:SPACING: space required before the open parenthesis '('
#92: FILE: arch/um/drivers/mconsole_kern.c:502:
+        while(isspace(*ptr)) ptr++;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#92: FILE: arch/um/drivers/mconsole_kern.c:502:
+        while(isspace(*ptr)) ptr++;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#94: FILE: arch/um/drivers/mconsole_kern.c:504:
+        /* Should really check for multiple pids or reject bad args here */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#95: FILE: arch/um/drivers/mconsole_kern.c:505:
+        /* What do the arguments in mconsole_reply mean? */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#96: FILE: arch/um/drivers/mconsole_kern.c:506:
+        if(sscanf(ptr, "%d", &pid_requested) == 0){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: arch/um/drivers/mconsole_kern.c:506:
+        if(sscanf(ptr, "%d", &pid_requested) == 0){$

ERROR:SPACING: space required before the open brace '{'
#96: FILE: arch/um/drivers/mconsole_kern.c:506:
+        if(sscanf(ptr, "%d", &pid_requested) == 0){

ERROR:SPACING: space required before the open parenthesis '('
#96: FILE: arch/um/drivers/mconsole_kern.c:506:
+        if(sscanf(ptr, "%d", &pid_requested) == 0){

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#96: FILE: arch/um/drivers/mconsole_kern.c:506:
+        if(sscanf(ptr, "%d", &pid_requested) == 0){
+                mconsole_reply(req, "Please specify a pid", 1, 0);
+                return;
+        }

ERROR:CODE_INDENT: code indent should use tabs where possible
#97: FILE: arch/um/drivers/mconsole_kern.c:507:
+                mconsole_reply(req, "Please specify a pid", 1, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: arch/um/drivers/mconsole_kern.c:507:
+                mconsole_reply(req, "Please specify a pid", 1, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#98: FILE: arch/um/drivers/mconsole_kern.c:508:
+                return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: arch/um/drivers/mconsole_kern.c:508:
+                return;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: arch/um/drivers/mconsole_kern.c:509:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: arch/um/drivers/mconsole_kern.c:509:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#101: FILE: arch/um/drivers/mconsole_kern.c:511:
+        from = current;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: arch/um/drivers/mconsole_kern.c:511:
+        from = current;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: arch/um/drivers/mconsole_kern.c:512:
+        to = find_task_by_pid(pid_requested);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: arch/um/drivers/mconsole_kern.c:512:
+        to = find_task_by_pid(pid_requested);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#104: FILE: arch/um/drivers/mconsole_kern.c:514:
+        if((to == NULL) || (pid_requested == 0)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: arch/um/drivers/mconsole_kern.c:514:
+        if((to == NULL) || (pid_requested == 0)) {$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'to == NULL'
#104: FILE: arch/um/drivers/mconsole_kern.c:514:
+        if((to == NULL) || (pid_requested == 0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pid_requested == 0'
#104: FILE: arch/um/drivers/mconsole_kern.c:514:
+        if((to == NULL) || (pid_requested == 0)) {

ERROR:SPACING: space required before the open parenthesis '('
#104: FILE: arch/um/drivers/mconsole_kern.c:514:
+        if((to == NULL) || (pid_requested == 0)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!to"
#104: FILE: arch/um/drivers/mconsole_kern.c:514:
+        if((to == NULL) || (pid_requested == 0)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: arch/um/drivers/mconsole_kern.c:515:
+                mconsole_reply(req, "Couldn't find that pid", 1, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: arch/um/drivers/mconsole_kern.c:515:
+                mconsole_reply(req, "Couldn't find that pid", 1, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#106: FILE: arch/um/drivers/mconsole_kern.c:516:
+                return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: arch/um/drivers/mconsole_kern.c:516:
+                return;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#107: FILE: arch/um/drivers/mconsole_kern.c:517:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: arch/um/drivers/mconsole_kern.c:517:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#108: FILE: arch/um/drivers/mconsole_kern.c:518:
+        to->thread.saved_task = current;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: arch/um/drivers/mconsole_kern.c:518:
+        to->thread.saved_task = current;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#110: FILE: arch/um/drivers/mconsole_kern.c:520:
+        switch_to(from, to, from);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: arch/um/drivers/mconsole_kern.c:520:
+        switch_to(from, to, from);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: arch/um/drivers/mconsole_kern.c:521:
+        mconsole_reply(req, "Stack Dumped to console and message log", 0, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: arch/um/drivers/mconsole_kern.c:521:
+        mconsole_reply(req, "Stack Dumped to console and message log", 0, 0);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#116: FILE: arch/um/drivers/mconsole_kern.c:526:
+^I/* This command doesn't work in TT mode, so let's check and then $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#117: FILE: arch/um/drivers/mconsole_kern.c:527:
+^I * get out of here $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#119: FILE: arch/um/drivers/mconsole_kern.c:529:
+^ICHOOSE_MODE(mconsole_reply(req, "Sorry, this doesn't work in TT mode", $

ERROR:CODE_INDENT: code indent should use tabs where possible
#135: FILE: arch/um/drivers/mconsole_user.c:33:
+        { "stack", mconsole_stack, MCONSOLE_INTR },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: arch/um/drivers/mconsole_user.c:33:
+        { "stack", mconsole_stack, MCONSOLE_INTR },$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#147: FILE: arch/um/include/mconsole.h:84:
+extern void mconsole_stack(struct mc_request *req);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#160: FILE: arch/um/kernel/process_kern.c:122:
+^Ido { $

WARNING:SPACING: space prohibited before semicolon
#161: FILE: arch/um/kernel/process_kern.c:123:
+		current->thread.saved_task = NULL ;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#163: FILE: arch/um/kernel/process_kern.c:125:
+^I^Iif(current->thread.saved_task) $

ERROR:SPACING: space required before the open parenthesis '('
#163: FILE: arch/um/kernel/process_kern.c:125:
+		if(current->thread.saved_task) 

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around current->thread.regs
#164: FILE: arch/um/kernel/process_kern.c:126:
+			show_regs(&(current->thread.regs));

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#165: FILE: arch/um/kernel/process_kern.c:127:
+		next= current->thread.saved_task;
 		    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#166: FILE: arch/um/kernel/process_kern.c:128:
+		prev= current;
 		    ^

ERROR:SPACING: space required before the open parenthesis '('
#167: FILE: arch/um/kernel/process_kern.c:129:
+	} while(current->thread.saved_task);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000151164.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 41 errors, 23 warnings, 5 checks, 106 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000151164.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
