CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#295: FILE: drivers/media/dvb/dvb-core/dvb_demux.c:250:
+		if (seclen <= 0 || seclen > DMX_MAX_SECFEED_SIZE
+		    || seclen + sec->secbufp > limit)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#344: FILE: drivers/media/dvb/dvb-core/dvb_demux.c:294:
+		printk("dvb_demux.c discontinuity detected %d bytes lost\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#389: FILE: drivers/media/dvb/dvb-core/dvb_demux.c:327:
+			printk("dvb_demux.c PUSI=1 but %d bytes lost\n", count);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#429: FILE: drivers/media/dvb/dvb-core/dvb_demux.c:360:
+			feed->feed.sec.seclen = feed->feed.sec.secbufp = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#465: FILE: drivers/media/dvb/dvb-core/dvb_demux.c:416:
+EXPORT_SYMBOL(dvb_dmx_swfilter_packets);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'demux->tsbuf[0] == 0x47'
#528: FILE: drivers/media/dvb/dvb-core/dvb_demux.c:476:
+		if ((demux->tsbuf[0] == 0x47) | (demux->tsbuf[0] == 0xB8)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'demux->tsbuf[0] == 0xB8'
#528: FILE: drivers/media/dvb/dvb-core/dvb_demux.c:476:
+		if ((demux->tsbuf[0] == 0x47) | (demux->tsbuf[0] == 0xB8)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'buf[p] == 0x47'
#544: FILE: drivers/media/dvb/dvb-core/dvb_demux.c:487:
+		if ((buf[p] == 0x47) | (buf[p] == 0xB8)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'buf[p] == 0xB8'
#544: FILE: drivers/media/dvb/dvb-core/dvb_demux.c:487:
+		if ((buf[p] == 0x47) | (buf[p] == 0xB8)) {

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#567: FILE: drivers/media/dvb/dvb-core/dvb_demux.c:509:
+EXPORT_SYMBOL(dvb_dmx_swfilter_204);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#598: FILE: drivers/media/dvb/dvb-core/dvb_demux.c:559:
+		       __FUNCTION__, feed->type, feed->state, feed->pid);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#607: FILE: drivers/media/dvb/dvb-core/dvb_demux.c:573:
+		       __FUNCTION__, feed->type, feed->state, feed->pid);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#804: FILE: drivers/media/dvb/dvb-core/dvb_demux.c:853:
+	if (!(f = dvbdmxfeed->filter))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1060: FILE: drivers/media/dvb/dvb-core/dvb_demux.c:1149:
+static int dvbdmx_get_pes_pids(struct dmx_demux *demux, u16 * pids)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1128: FILE: drivers/media/dvb/dvb-core/dvb_demux.c:1224:
+EXPORT_SYMBOL(dvb_dmx_init);

WARNING:LONG_LINE_COMMENT: line length of 109 exceeds 100 columns
#1231: FILE: drivers/media/dvb/dvb-core/dvb_demux.h:94:
+	unsigned int index;	/* a unique index for each feed (can be used as hardware pid filter index) */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1249: FILE: drivers/media/dvb/dvb-core/dvb_demux.h:105:
+	int (*write_to_decoder)(struct dvb_demux_feed *feed,
 				 const u8 *buf, size_t len);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1252: FILE: drivers/media/dvb/dvb-core/dvb_demux.h:107:
+	u32 (*check_crc32)(struct dvb_demux_feed *feed,
 			    const u8 *buf, size_t len);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1255: FILE: drivers/media/dvb/dvb-core/dvb_demux.h:109:
+	void (*memcopy)(struct dvb_demux_feed *feed, u8 *dst,
 			 const u8 *src, size_t len);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000154501.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 8 warnings, 9 checks, 1209 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000154501.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
