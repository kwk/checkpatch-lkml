WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#42: FILE: drivers/net/vioc/vioc_transmit.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#57: FILE: drivers/net/vioc/vioc_transmit.c:16:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#58: FILE: drivers/net/vioc/vioc_transmit.c:17:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307$

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#100: FILE: drivers/net/vioc/vioc_transmit.c:59:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#103: FILE: drivers/net/vioc/vioc_transmit.c:62:
+#include <asm/io.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#160: FILE: drivers/net/vioc/vioc_transmit.c:119:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#164: FILE: drivers/net/vioc/vioc_transmit.c:123:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <tx_pktBufDesc_Phys_w>
#165: FILE: drivers/net/vioc/vioc_transmit.c:124:
+	struct tx_pktBufDesc_Phys_w *txd;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:MEMORY_BARRIER: memory barrier without comment
#176: FILE: drivers/net/vioc/vioc_transmit.c:135:
+	wmb();

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#178: FILE: drivers/net/vioc/vioc_transmit.c:137:
+	/*
+	 * Clean-up all Tx Descriptors, take ownership of all

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'txq->vbuf[i].skb'
#199: FILE: drivers/net/vioc/vioc_transmit.c:158:
+				dev_kfree_skb_any((struct sk_buff *)txq->
+						  vbuf[i].skb);

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

WARNING:MEMORY_BARRIER: memory barrier without comment
#207: FILE: drivers/net/vioc/vioc_transmit.c:166:
+	wmb();

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#224: FILE: drivers/net/vioc/vioc_transmit.c:183:
+	/*
+	 * Clean-up all Tx Descriptors, whose buffers where

WARNING:TYPO_SPELLING: 'descrptor' may be misspelled - perhaps 'descriptor'?
#227: FILE: drivers/net/vioc/vioc_transmit.c:186:
+	 * by the VIOC HW, stating that descrptor was processed by HW.
 	                                ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#229: FILE: drivers/net/vioc/vioc_transmit.c:188:
+	for (clean_idx = txq->next_to_clean;;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#231: FILE: drivers/net/vioc/vioc_transmit.c:190:
+	     clean_idx = VNIC_NEXT_IDX(clean_idx, txq->count)) {
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#242: FILE: drivers/net/vioc/vioc_transmit.c:201:
+^I^I^I^I       "vioc%d-vnic%d-txd%d ERROR (back-to-back SOP) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#242: FILE: drivers/net/vioc/vioc_transmit.c:201:
+				dev_err(&vnicdev->viocdev->pdev->dev,
+				       "vioc%d-vnic%d-txd%d ERROR (back-to-back SOP) 

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#243: FILE: drivers/net/vioc/vioc_transmit.c:201:
(txd->word_1=%08x).\n",

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#243: FILE: drivers/net/vioc/vioc_transmit.c:201:
+				dev_err(&vnicdev->viocdev->pdev->dev,
(txd->word_1=%08x).\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#260: FILE: drivers/net/vioc/vioc_transmit.c:218:
+^I^I^I^I       "vioc%d-vnic%d-txd%d ERROR (EOP without SOP)  $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#260: FILE: drivers/net/vioc/vioc_transmit.c:218:
+				       "vioc%d-vnic%d-txd%d ERROR (EOP without SOP)  

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#260: FILE: drivers/net/vioc/vioc_transmit.c:218:
+				       "vioc%d-vnic%d-txd%d ERROR (EOP without SOP)  
 				            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#260: FILE: drivers/net/vioc/vioc_transmit.c:218:
+				       "vioc%d-vnic%d-txd%d ERROR (EOP without SOP)  
 				              ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#260: FILE: drivers/net/vioc/vioc_transmit.c:218:
+				       "vioc%d-vnic%d-txd%d ERROR (EOP without SOP)  
 				                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#260: FILE: drivers/net/vioc/vioc_transmit.c:218:
+				       "vioc%d-vnic%d-txd%d ERROR (EOP without SOP)  
 				                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#260: FILE: drivers/net/vioc/vioc_transmit.c:218:
+				       "vioc%d-vnic%d-txd%d ERROR (EOP without SOP)  
 				                         ^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#276: FILE: drivers/net/vioc/vioc_transmit.c:233:
+		/*
+		 * Check for errors: regardless of whether an error detected

WARNING:TYPO_SPELLING: 'descritptor' may be misspelled - perhaps 'descriptor'?
#277: FILE: drivers/net/vioc/vioc_transmit.c:234:
+		 * on SOP, MOP or EOP descritptor, reset the ring.
 		                      ^^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#281: FILE: drivers/net/vioc/vioc_transmit.c:238:
+			dev_err(&vnicdev->viocdev->pdev->dev,
+			       "vioc%d-vnic%d TxD ERROR (txd->word_1=%08x).\n",

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#293: FILE: drivers/net/vioc/vioc_transmit.c:250:
+			for (clean_idx = sop_idx;;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#295: FILE: drivers/net/vioc/vioc_transmit.c:252:
+			     clean_idx = VNIC_NEXT_IDX(clean_idx, txq->count)) {
+

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'txq->vbuf[clean_idx].length'
#308: FILE: drivers/net/vioc/vioc_transmit.c:265:
+						       txq->vbuf[clean_idx].
+						       length,

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'txq->vbuf[clean_idx].skb'
#317: FILE: drivers/net/vioc/vioc_transmit.c:274:
+							  txq->vbuf[clean_idx].
+							  skb);

WARNING:INDENTED_LABEL: labels should not be indented
#327: FILE: drivers/net/vioc/vioc_transmit.c:284:
+		      set_pkt_stats:

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#329: FILE: drivers/net/vioc/vioc_transmit.c:286:
+			/*
+			 * Since this Tx Descriptor was already

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#335: FILE: drivers/net/vioc/vioc_transmit.c:292:
+			/*
+			 * This is the ONLY place, where txq->next_to_clean is

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#341: FILE: drivers/net/vioc/vioc_transmit.c:298:
+			/*
+			 * Reset sop_idx and eop_idx: start looking for next pkt

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#343: FILE: drivers/net/vioc/vioc_transmit.c:300:
+			sop_idx = eop_idx = NOT_SET;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#345: FILE: drivers/net/vioc/vioc_transmit.c:302:
+			/*
+			 * At this point clean_idx == eop_idx, it will be advanced

WARNING:BRACES: braces {} are not necessary for single statement blocks
#351: FILE: drivers/net/vioc/vioc_transmit.c:308:
+	if (reset_flag) {
+		/* For DEBUGGING */
+	}

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#356: FILE: drivers/net/vioc/vioc_transmit.c:313:
+	/*
+	 * If the queue was stopped, and if we have now enough room -

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#368: FILE: drivers/net/vioc/vioc_transmit.c:325:
+/*
+ * Only called from interrupt context.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#399: FILE: drivers/net/vioc/vioc_transmit.c:356:
+		dev_err(&viocdev->pdev->dev,
+		       "vioc%d-vnic%d TxD Ctl=%08x, ERROR %s %s. Reset Tx Ring!\n",

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#419: FILE: drivers/net/vioc/vioc_transmit.c:376:
+/*
+ * Must only be called from interrupt context.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#439: FILE: drivers/net/vioc/vioc_transmit.c:396:
+}
+void vnic_enqueue_tx_pkt(struct vnic_device *vnicdev, struct txq *txq,

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#446: FILE: drivers/net/vioc/vioc_transmit.c:403:
+	/*
+	 * Map Tx buffers vbuf queue.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#484: FILE: drivers/net/vioc/vioc_transmit.c:441:
+^I * We are going backwards (from EOP to SOP) in setting up Tx Descriptors. $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#484: FILE: drivers/net/vioc/vioc_transmit.c:441:
+	/*
+	 * We are going backwards (from EOP to SOP) in setting up Tx Descriptors. 

CHECK:SPACING: No space is necessary after a cast
#498: FILE: drivers/net/vioc/vioc_transmit.c:455:
+		*((dma_addr_t *) txd) = txq->vbuf[idx].dma;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#501: FILE: drivers/net/vioc/vioc_transmit.c:458:
+		/*
+		 * Force memory writes to complete (FENCE), before letting VIOC know,

WARNING:MEMORY_BARRIER: memory barrier without comment
#509: FILE: drivers/net/vioc/vioc_transmit.c:466:
+			wmb();

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#535: FILE: drivers/net/vioc/vioc_transmit.c:492:
+			break;
+		else

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#541: FILE: drivers/net/vioc/vioc_transmit.c:498:
+	/*
+	 *  Ring bell here, before checking, if vnic_clean_txq() needs to

WARNING:BRACES: braces {} are not necessary for single statement blocks
#549: FILE: drivers/net/vioc/vioc_transmit.c:506:
+		if (txq->next_to_use == txq->next_to_clean) {
+			txq->full++;
+		}

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#554: FILE: drivers/net/vioc/vioc_transmit.c:511:
+
+}

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#572: FILE: drivers/net/vioc/vioc_transmit.c:529:
+	/*
+	 * We are going backwards in setting up Tx Descriptors.  So,

WARNING:TYPO_SPELLING: 'trun' may be misspelled - perhaps 'turn'?
#573: FILE: drivers/net/vioc/vioc_transmit.c:530:
+	 * by the time we will trun the Tx Descriptor with the first
 	                       ^^^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#580: FILE: drivers/net/vioc/vioc_transmit.c:537:
+	/*
+	 * Force memory writes to complete, before letting VIOC know,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#582: FILE: drivers/net/vioc/vioc_transmit.c:539:
+^I * very first descriptor (in case there were frags). No point   $

CHECK:SPACING: No space is necessary after a cast
#587: FILE: drivers/net/vioc/vioc_transmit.c:544:
+	*((dma_addr_t *) txd) = txq->vbuf[idx].dma;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#613: FILE: drivers/net/vioc/vioc_transmit.c:570:
+	/*
+	 *  Ring bell here, before checking, if vnic_clean_txq() needs to

WARNING:BRACES: braces {} are not necessary for single statement blocks
#622: FILE: drivers/net/vioc/vioc_transmit.c:579:
+		if (idx == txq->next_to_clean) {
+			txq->full++;
+		}

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#636: FILE: drivers/net/vioc/vioc_transmit.c:593:
+	/*
+	 * Initialize F7 Header AFTER processing the skb + frags, because we

WARNING:BRACES: braces {} are not necessary for single statement blocks
#702: FILE: drivers/net/vioc/vioc_transmit.c:659:
+		if (viocdev->vnics_map & (1 << vnic_idx)) {
+			vnic_tx_interrupt(viocdev, vnic_idx, 1);
+		}		/* Process VNIC's TX interrupt */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#710: FILE: drivers/net/vioc/vioc_transmit.c:667:
+
+

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#712: FILE: drivers/net/vioc/vioc_transmit.c:669:
+/*
+ * hard_start_xmit() routine.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#757: FILE: drivers/net/vioc/vioc_transmit.c:714:
+	/*
+	 * Check if there is room on the queue.

WARNING:INDENTED_LABEL: labels should not be indented
#767: FILE: drivers/net/vioc/vioc_transmit.c:724:
+      end_start_xmit:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#773: FILE: drivers/net/vioc/vioc_transmit.c:730:
+ *      Create Ethernet header $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#773: FILE: drivers/net/vioc/vioc_transmit.c:730:
+/*
+ *      Create Ethernet header 

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#779: FILE: drivers/net/vioc/vioc_transmit.c:736:
+		    unsigned short type, void *daddr, void *saddr, unsigned len)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#786: FILE: drivers/net/vioc/vioc_transmit.c:743:
+	/*
+	 *      Set the protocol type. For a packet of type

CHECK:LINE_SPACING: Please don't use multiple blank lines
#814: FILE: drivers/net/vioc/vioc_transmit.c:771:
+
+

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#869: FILE: drivers/net/vioc/vioc_transmit.c:826:
+/*
+ * Set netdev->dev_addr to this interface's MAC Address

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#876: FILE: drivers/net/vioc/vioc_transmit.c:833:
+	/*
+	 * Get HW MAC address form VIOC egisters

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#887: FILE: drivers/net/vioc/vioc_transmit.c:844:
+	/*
+	 * ...and install it in nedev structure

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#896: FILE: drivers/net/vioc/vioc_transmit.c:853:
+/*
+ * Set netdev->mtu to this interface's MTU

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'max_frame < VNIC_MIN_MTU'
#903: FILE: drivers/net/vioc/vioc_transmit.c:860:
+	if ((max_frame < VNIC_MIN_MTU) || (max_frame > VNIC_MAX_MTU)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'max_frame > VNIC_MAX_MTU'
#903: FILE: drivers/net/vioc/vioc_transmit.c:860:
+	if ((max_frame < VNIC_MIN_MTU) || (max_frame > VNIC_MAX_MTU)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#923: FILE: drivers/net/vioc/vioc_transmit.c:880:
+	struct vnic_device *vnicdev = netdev->priv;
+	return &vnicdev->net_stats;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#954: FILE: drivers/net/vioc/vioc_transmit.c:911:
+		dev_err(&viocdev->pdev->dev, "%sError allocating Tx ring (size %d)\n",
+		       netdev->name, txq->count);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer vmalloc(sizeof(*txq->vbuf)...) over vmalloc(sizeof(struct vbuf)...)
#958: FILE: drivers/net/vioc/vioc_transmit.c:915:
+	txq->vbuf = vmalloc(sizeof(struct vbuf) * txq->count);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#960: FILE: drivers/net/vioc/vioc_transmit.c:917:
+	if (!txq->vbuf) {
+		dev_err(&viocdev->pdev->dev, "%sError allocating Tx resource (size %d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#961: FILE: drivers/net/vioc/vioc_transmit.c:918:
+		dev_err(&viocdev->pdev->dev, "%sError allocating Tx resource (size %d)\n",
+		       netdev->name, txq->count);

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#967: FILE: drivers/net/vioc/vioc_transmit.c:924:
+	    (&viocdev->ba)->virt +
 	               ^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#973: FILE: drivers/net/vioc/vioc_transmit.c:930:
+	/*
+	 * Tell VIOC where TxQ things are

CHECK:SPACING: No space is necessary after a cast
#991: FILE: drivers/net/vioc/vioc_transmit.c:948:
+	vnicdev->txq.dma = (dma_addr_t) NULL;

WARNING:CONST_STRUCT: struct ethtool_ops should normally be const
#1004: FILE: drivers/net/vioc/vioc_transmit.c:961:
+extern struct ethtool_ops vioc_ethtool_ops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:LINE_SPACING: Missing a blank line after declarations
#1015: FILE: drivers/net/vioc/vioc_transmit.c:972:
+	struct vnic_device *vnicdev = netdev->priv;
+	vnic_free_tx_resources(vnicdev);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1032: FILE: drivers/net/vioc/vioc_transmit.c:989:
+	/*
+	 * we're going to reset, so assume we have no link for now

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1053: FILE: drivers/net/vioc/vioc_transmit.c:1010:
+	if (viocdev->highdma) {
+		netdev->features |= NETIF_F_HIGHDMA;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1060: FILE: drivers/net/vioc/vioc_transmit.c:1017:
+^Idev_err(&viocdev->pdev->dev, "%s: HW IP checksum offload ENABLED\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1062: FILE: drivers/net/vioc/vioc_transmit.c:1018:
+	dev_err(&viocdev->pdev->dev, "%s: HW IP checksum offload ENABLED\n", 
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1064: FILE: drivers/net/vioc/vioc_transmit.c:1020:
+	if ((ret = vnic_alloc_tx_resources(vnicdev)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:INDENTED_LABEL: labels should not be indented
#1072: FILE: drivers/net/vioc/vioc_transmit.c:1028:
+      vnic_init_err:

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1074: FILE: drivers/net/vioc/vioc_transmit.c:1030:
+	dev_err(&viocdev->pdev->dev, "%s: Error initializing vnic resources\n",
+	       netdev->name);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000031186.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 58 warnings, 29 checks, 1035 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000031186.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
