WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
conflict.  It also contains many bug fixes and better error detection for device

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#35: 
--- a/drivers/pnp/manager.c	Thu Jan  1 00:00:00 1970

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#38: FILE: drivers/pnp/manager.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#60: FILE: drivers/pnp/manager.c:23:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#63: FILE: drivers/pnp/manager.c:26:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#64: FILE: drivers/pnp/manager.c:27:
+static int pnp_next_port(struct pnp_dev * dev, int idx)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#68: FILE: drivers/pnp/manager.c:31:
+	unsigned long *value1, *value2, *value3;
+	if (!dev || idx < 0 || idx >= PNP_MAX_PORT)

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#81: FILE: drivers/pnp/manager.c:44:
+		*value2 = *value1 + port->size -1;
 		                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#97: FILE: drivers/pnp/manager.c:60:
+static int pnp_next_mem(struct pnp_dev * dev, int idx)

WARNING:LINE_SPACING: Missing a blank line after declarations
#101: FILE: drivers/pnp/manager.c:64:
+	unsigned long *value1, *value2, *value3;
+	if (!dev || idx < 0 || idx >= PNP_MAX_MEM)

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#114: FILE: drivers/pnp/manager.c:77:
+		*value2 = *value1 + mem->size -1;
 		                              ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#138: FILE: drivers/pnp/manager.c:101:
+static int pnp_next_irq(struct pnp_dev * dev, int idx)

WARNING:LINE_SPACING: Missing a blank line after declarations
#143: FILE: drivers/pnp/manager.c:106:
+	int i, mask;
+	if (!dev || idx < 0 || idx >= PNP_MAX_IRQ)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#162: FILE: drivers/pnp/manager.c:125:
+	for (i = *value1 + 1; i < 16; i++)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#164: FILE: drivers/pnp/manager.c:127:
+		if(mask>>i & 0x01) {
 		       ^

ERROR:SPACING: space required before the open parenthesis '('
#164: FILE: drivers/pnp/manager.c:127:
+		if(mask>>i & 0x01) {

ERROR:SPACING: space required before the open parenthesis '('
#166: FILE: drivers/pnp/manager.c:129:
+			if(!pnp_check_irq(dev, idx))

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#173: FILE: drivers/pnp/manager.c:136:
+static int pnp_next_dma(struct pnp_dev * dev, int idx)

WARNING:LINE_SPACING: Missing a blank line after declarations
#179: FILE: drivers/pnp/manager.c:142:
+	int i, mask;
+	if (!dev || idx < 0 || idx >= PNP_MAX_DMA)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#200: FILE: drivers/pnp/manager.c:163:
+	for (i = *value1 + 1; i < 8; i++)
+	{

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#202: FILE: drivers/pnp/manager.c:165:
+		if(mask>>i & 0x01) {
 		       ^

ERROR:SPACING: space required before the open parenthesis '('
#202: FILE: drivers/pnp/manager.c:165:
+		if(mask>>i & 0x01) {

ERROR:SPACING: space required before the open parenthesis '('
#204: FILE: drivers/pnp/manager.c:167:
+			if(!pnp_check_dma(dev, idx))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#212: FILE: drivers/pnp/manager.c:175:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: drivers/pnp/manager.c:179:
+        int max = pnp_get_max_depnum(dev);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: drivers/pnp/manager.c:179:
+        int max = pnp_get_max_depnum(dev);$

ERROR:SPACING: space required before the open parenthesis '('
#219: FILE: drivers/pnp/manager.c:182:
+	if(depnum > 0) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#220: FILE: drivers/pnp/manager.c:183:
+		struct pnp_resources * res = pnp_find_resources(dev, depnum);

WARNING:LINE_SPACING: Missing a blank line after declarations
#221: FILE: drivers/pnp/manager.c:184:
+		struct pnp_resources * res = pnp_find_resources(dev, depnum);
+		priority = res->priority;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#224: FILE: drivers/pnp/manager.c:187:
+	for (; priority <= PNP_RES_PRIORITY_FUNCTIONAL; priority++, depnum=0) {
 	                                                                  ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#227: FILE: drivers/pnp/manager.c:190:
+			struct pnp_resources * res = pnp_find_resources(dev, depnum);

WARNING:LINE_SPACING: Missing a blank line after declarations
#228: FILE: drivers/pnp/manager.c:191:
+			struct pnp_resources * res = pnp_find_resources(dev, depnum);
+			if (res->priority == priority) {

ERROR:SPACING: space required before the open parenthesis '('
#229: FILE: drivers/pnp/manager.c:192:
+				if(pnp_generate_rule(dev, depnum, dev->rule)) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#244: FILE: drivers/pnp/manager.c:207:
+	struct pnp_dev * dev;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#247: FILE: drivers/pnp/manager.c:210:
+static void pnp_free_changes(struct pnp_change * parent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#249: FILE: drivers/pnp/manager.c:212:
+	struct list_head * pos, * temp;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#249: FILE: drivers/pnp/manager.c:212:
+	struct list_head * pos, * temp;
 	                        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#250: FILE: drivers/pnp/manager.c:213:
+	struct list_head * pos, * temp;
+	list_for_each_safe(pos, temp, &parent->changes) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#251: FILE: drivers/pnp/manager.c:214:
+		struct pnp_change * change = list_entry(pos, struct pnp_change, change_list);

WARNING:LINE_SPACING: Missing a blank line after declarations
#252: FILE: drivers/pnp/manager.c:215:
+		struct pnp_change * change = list_entry(pos, struct pnp_change, change_list);
+		list_del(&change->change_list);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#257: FILE: drivers/pnp/manager.c:220:
+static void pnp_undo_changes(struct pnp_change * parent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#259: FILE: drivers/pnp/manager.c:222:
+	struct list_head * pos, * temp;

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#259: FILE: drivers/pnp/manager.c:222:
+	struct list_head * pos, * temp;
 	                        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#260: FILE: drivers/pnp/manager.c:223:
+	struct list_head * pos, * temp;
+	list_for_each_safe(pos, temp, &parent->changes) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#261: FILE: drivers/pnp/manager.c:224:
+		struct pnp_change * change = list_entry(pos, struct pnp_change, change_list);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#269: FILE: drivers/pnp/manager.c:232:
+static struct pnp_change * pnp_add_change(struct pnp_change * parent, struct pnp_dev * dev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#269: FILE: drivers/pnp/manager.c:232:
+static struct pnp_change * pnp_add_change(struct pnp_change * parent, struct pnp_dev * dev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#269: FILE: drivers/pnp/manager.c:232:
+static struct pnp_change * pnp_add_change(struct pnp_change * parent, struct pnp_dev * dev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#271: FILE: drivers/pnp/manager.c:234:
+	struct pnp_change * change = pnp_alloc(sizeof(struct pnp_change));

WARNING:LINE_SPACING: Missing a blank line after declarations
#272: FILE: drivers/pnp/manager.c:235:
+	struct pnp_change * change = pnp_alloc(sizeof(struct pnp_change));
+	if (!change)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#283: FILE: drivers/pnp/manager.c:246:
+static void pnp_commit_changes(struct pnp_change * parent, struct pnp_change * change)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#283: FILE: drivers/pnp/manager.c:246:
+static void pnp_commit_changes(struct pnp_change * parent, struct pnp_change * change)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#291: FILE: drivers/pnp/manager.c:254:
+}
+static int pnp_next_config(struct pnp_dev * dev, int move, struct pnp_change * parent);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#291: FILE: drivers/pnp/manager.c:254:
+static int pnp_next_config(struct pnp_dev * dev, int move, struct pnp_change * parent);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#291: FILE: drivers/pnp/manager.c:254:
+static int pnp_next_config(struct pnp_dev * dev, int move, struct pnp_change * parent);

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#293: FILE: drivers/pnp/manager.c:256:
+static int pnp_next_request(struct pnp_dev * dev, int move, struct pnp_change * parent, struct pnp_change * change)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#293: FILE: drivers/pnp/manager.c:256:
+static int pnp_next_request(struct pnp_dev * dev, int move, struct pnp_change * parent, struct pnp_change * change)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#293: FILE: drivers/pnp/manager.c:256:
+static int pnp_next_request(struct pnp_dev * dev, int move, struct pnp_change * parent, struct pnp_change * change)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#293: FILE: drivers/pnp/manager.c:256:
+static int pnp_next_request(struct pnp_dev * dev, int move, struct pnp_change * parent, struct pnp_change * change)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#296: FILE: drivers/pnp/manager.c:259:
+	struct pnp_dev * cdev;

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#299: FILE: drivers/pnp/manager.c:262:
+		if (dev->res.port_resource[i].start == 0 || pnp_check_port_conflicts(dev,i,SEARCH_WARM)) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#299: FILE: drivers/pnp/manager.c:262:
+		if (dev->res.port_resource[i].start == 0 || pnp_check_port_conflicts(dev,i,SEARCH_WARM)) {
 		                                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#299: FILE: drivers/pnp/manager.c:262:
+		if (dev->res.port_resource[i].start == 0 || pnp_check_port_conflicts(dev,i,SEARCH_WARM)) {
 		                                                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#300: FILE: drivers/pnp/manager.c:263:
+			if (!pnp_next_port(dev,i))
 			                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#304: FILE: drivers/pnp/manager.c:267:
+			cdev = pnp_check_port_conflicts(dev,i,SEARCH_COLD);
 			                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#304: FILE: drivers/pnp/manager.c:267:
+			cdev = pnp_check_port_conflicts(dev,i,SEARCH_COLD);
 			                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#305: FILE: drivers/pnp/manager.c:268:
+			if (cdev && (!move || !pnp_next_config(cdev,move,change))) {
 			                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#305: FILE: drivers/pnp/manager.c:268:
+			if (cdev && (!move || !pnp_next_config(cdev,move,change))) {
 			                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#307: FILE: drivers/pnp/manager.c:270:
+				if (!pnp_next_port(dev,i))
 				                      ^

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#314: FILE: drivers/pnp/manager.c:277:
+		if (dev->res.mem_resource[i].start == 0 || pnp_check_mem_conflicts(dev,i,SEARCH_WARM)) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#314: FILE: drivers/pnp/manager.c:277:
+		if (dev->res.mem_resource[i].start == 0 || pnp_check_mem_conflicts(dev,i,SEARCH_WARM)) {
 		                                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#314: FILE: drivers/pnp/manager.c:277:
+		if (dev->res.mem_resource[i].start == 0 || pnp_check_mem_conflicts(dev,i,SEARCH_WARM)) {
 		                                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#315: FILE: drivers/pnp/manager.c:278:
+			if (!pnp_next_mem(dev,i))
 			                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#319: FILE: drivers/pnp/manager.c:282:
+			cdev = pnp_check_mem_conflicts(dev,i,SEARCH_COLD);
 			                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#319: FILE: drivers/pnp/manager.c:282:
+			cdev = pnp_check_mem_conflicts(dev,i,SEARCH_COLD);
 			                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#320: FILE: drivers/pnp/manager.c:283:
+			if (cdev && (!move || !pnp_next_config(cdev,move,change))) {
 			                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#320: FILE: drivers/pnp/manager.c:283:
+			if (cdev && (!move || !pnp_next_config(cdev,move,change))) {
 			                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#322: FILE: drivers/pnp/manager.c:285:
+				if (!pnp_next_mem(dev,i))
 				                     ^

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#329: FILE: drivers/pnp/manager.c:292:
+		if (dev->res.irq_resource[i].start == -1 || pnp_check_irq_conflicts(dev,i,SEARCH_WARM)) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#329: FILE: drivers/pnp/manager.c:292:
+		if (dev->res.irq_resource[i].start == -1 || pnp_check_irq_conflicts(dev,i,SEARCH_WARM)) {
 		                                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#329: FILE: drivers/pnp/manager.c:292:
+		if (dev->res.irq_resource[i].start == -1 || pnp_check_irq_conflicts(dev,i,SEARCH_WARM)) {
 		                                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#330: FILE: drivers/pnp/manager.c:293:
+			if (!pnp_next_irq(dev,i))
 			                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#334: FILE: drivers/pnp/manager.c:297:
+			cdev = pnp_check_irq_conflicts(dev,i,SEARCH_COLD);
 			                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#334: FILE: drivers/pnp/manager.c:297:
+			cdev = pnp_check_irq_conflicts(dev,i,SEARCH_COLD);
 			                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#335: FILE: drivers/pnp/manager.c:298:
+			if (cdev && (!move || !pnp_next_config(cdev,move,change))) {
 			                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#335: FILE: drivers/pnp/manager.c:298:
+			if (cdev && (!move || !pnp_next_config(cdev,move,change))) {
 			                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#337: FILE: drivers/pnp/manager.c:300:
+				if (!pnp_next_irq(dev,i))
 				                     ^

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#344: FILE: drivers/pnp/manager.c:307:
+		if (dev->res.dma_resource[i].start == -1 || pnp_check_dma_conflicts(dev,i,SEARCH_WARM)) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#344: FILE: drivers/pnp/manager.c:307:
+		if (dev->res.dma_resource[i].start == -1 || pnp_check_dma_conflicts(dev,i,SEARCH_WARM)) {
 		                                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#344: FILE: drivers/pnp/manager.c:307:
+		if (dev->res.dma_resource[i].start == -1 || pnp_check_dma_conflicts(dev,i,SEARCH_WARM)) {
 		                                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#345: FILE: drivers/pnp/manager.c:308:
+			if (!pnp_next_dma(dev,i))
 			                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#349: FILE: drivers/pnp/manager.c:312:
+			cdev = pnp_check_dma_conflicts(dev,i,SEARCH_COLD);
 			                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#349: FILE: drivers/pnp/manager.c:312:
+			cdev = pnp_check_dma_conflicts(dev,i,SEARCH_COLD);
 			                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#350: FILE: drivers/pnp/manager.c:313:
+			if (cdev && (!move || !pnp_next_config(cdev,move,change))) {
 			                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#350: FILE: drivers/pnp/manager.c:313:
+			if (cdev && (!move || !pnp_next_config(cdev,move,change))) {
 			                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#352: FILE: drivers/pnp/manager.c:315:
+				if (!pnp_next_dma(dev,i))
 				                     ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#361: FILE: drivers/pnp/manager.c:324:
+static int pnp_next_config(struct pnp_dev * dev, int move, struct pnp_change * parent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#361: FILE: drivers/pnp/manager.c:324:
+static int pnp_next_config(struct pnp_dev * dev, int move, struct pnp_change * parent)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#363: FILE: drivers/pnp/manager.c:326:
+	struct pnp_change * change = pnp_add_change(parent,dev);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#363: FILE: drivers/pnp/manager.c:326:
+	struct pnp_change * change = pnp_add_change(parent,dev);
 	                                                  ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#364: FILE: drivers/pnp/manager.c:327:
+	struct pnp_change * change = pnp_add_change(parent,dev);
+	move--;

ERROR:SPACING: space required before the open parenthesis '('
#376: FILE: drivers/pnp/manager.c:339:
+		if(!pnp_next_rule(dev))

WARNING:LONG_LINE_COMMENT: line length of 124 exceeds 100 columns
#392: FILE: drivers/pnp/manager.c:355:
+/* this advanced algorithm will shuffle other configs to make room and ensure that the most possible devices have configs */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#393: FILE: drivers/pnp/manager.c:356:
+static int pnp_advanced_config(struct pnp_dev * dev)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#409: FILE: drivers/pnp/manager.c:372:
+		if (pnp_next_config(dev,move,NULL)) {
 		                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#409: FILE: drivers/pnp/manager.c:372:
+		if (pnp_next_config(dev,move,NULL)) {
 		                            ^

WARNING:LONG_LINE: line length of 131 exceeds 100 columns
#418: FILE: drivers/pnp/manager.c:381:
+	pnp_err("res: Unable to resolve resource conflicts for the device '%s', some devices may not be usable.", dev->dev.bus_id);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#425: FILE: drivers/pnp/manager.c:388:
+	struct pnp_dev * cdev;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#427: FILE: drivers/pnp/manager.c:390:
+	for (i = 0; i < PNP_MAX_PORT; i++)
+	{

ERROR:SPACING: space required after that ',' (ctx:VxV)
#430: FILE: drivers/pnp/manager.c:393:
+			cdev = pnp_check_port_conflicts(dev,i,SEARCH_COLD);
 			                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#430: FILE: drivers/pnp/manager.c:393:
+			cdev = pnp_check_port_conflicts(dev,i,SEARCH_COLD);
 			                                     ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#435: FILE: drivers/pnp/manager.c:398:
+	for (i = 0; i < PNP_MAX_MEM; i++)
+	{

ERROR:SPACING: space required after that ',' (ctx:VxV)
#438: FILE: drivers/pnp/manager.c:401:
+			cdev = pnp_check_mem_conflicts(dev,i,SEARCH_COLD);
 			                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#438: FILE: drivers/pnp/manager.c:401:
+			cdev = pnp_check_mem_conflicts(dev,i,SEARCH_COLD);
 			                                    ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#443: FILE: drivers/pnp/manager.c:406:
+	for (i = 0; i < PNP_MAX_IRQ; i++)
+	{

ERROR:SPACING: space required after that ',' (ctx:VxV)
#446: FILE: drivers/pnp/manager.c:409:
+			cdev = pnp_check_irq_conflicts(dev,i,SEARCH_COLD);
 			                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#446: FILE: drivers/pnp/manager.c:409:
+			cdev = pnp_check_irq_conflicts(dev,i,SEARCH_COLD);
 			                                    ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#451: FILE: drivers/pnp/manager.c:414:
+	for (i = 0; i < PNP_MAX_DMA; i++)
+	{

ERROR:SPACING: space required after that ',' (ctx:VxV)
#454: FILE: drivers/pnp/manager.c:417:
+			cdev = pnp_check_dma_conflicts(dev,i,SEARCH_COLD);
 			                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#454: FILE: drivers/pnp/manager.c:417:
+			cdev = pnp_check_dma_conflicts(dev,i,SEARCH_COLD);
 			                                    ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#463: FILE: drivers/pnp/manager.c:426:
+static int pnp_simple_config(struct pnp_dev * dev)

WARNING:LINE_SPACING: Missing a blank line after declarations
#466: FILE: drivers/pnp/manager.c:429:
+	int i;
+	spin_lock(&pnp_lock);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#482: FILE: drivers/pnp/manager.c:445:
+			if (!pnp_next_port(dev,i))
 			                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#486: FILE: drivers/pnp/manager.c:449:
+			if (!pnp_next_mem(dev,i))
 			                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#490: FILE: drivers/pnp/manager.c:453:
+			if (!pnp_next_irq(dev,i))
 			                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#494: FILE: drivers/pnp/manager.c:457:
+			if (!pnp_next_dma(dev,i))
 			                     ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#509: FILE: drivers/pnp/manager.c:472:
+static int pnp_compare_resources(struct pnp_resource_table * resa, struct pnp_resource_table * resb)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#509: FILE: drivers/pnp/manager.c:472:
+static int pnp_compare_resources(struct pnp_resource_table * resa, struct pnp_resource_table * resb)

WARNING:LINE_SPACING: Missing a blank line after declarations
#512: FILE: drivers/pnp/manager.c:475:
+	int idx;
+	for (idx = 0; idx < PNP_MAX_IRQ; idx++) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#535: FILE: drivers/pnp/manager.c:498:
+
+

WARNING:LONG_LINE_COMMENT: line length of 107 exceeds 100 columns
#541: FILE: drivers/pnp/manager.c:504:
+ * pnp_auto_config_dev - determines the best possible resource configuration based on available information

WARNING:LINE_SPACING: Missing a blank line after declarations
#549: FILE: drivers/pnp/manager.c:512:
+	int error;
+	if(!dev)

ERROR:SPACING: space required before the open parenthesis '('
#549: FILE: drivers/pnp/manager.c:512:
+	if(!dev)

ERROR:SPACING: space required before the open parenthesis '('
#554: FILE: drivers/pnp/manager.c:517:
+	if(dev->active)

WARNING:TYPO_SPELLING: 'thier' may be misspelled - perhaps 'their'?
#566: FILE: drivers/pnp/manager.c:529:
+ * This function can be used by drivers that want to manually set thier resources.
                                                                   ^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#569: FILE: drivers/pnp/manager.c:532:
+int pnp_manual_config_dev(struct pnp_dev *dev, struct pnp_resource_table * res, int mode)

WARNING:LINE_SPACING: Missing a blank line after declarations
#573: FILE: drivers/pnp/manager.c:536:
+	struct pnp_resource_table bak = dev->res;
+	if (!dev || !res)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#582: FILE: drivers/pnp/manager.c:545:
+			if(pnp_check_port(dev,i))
 			                     ^

ERROR:SPACING: space required before the open parenthesis '('
#582: FILE: drivers/pnp/manager.c:545:
+			if(pnp_check_port(dev,i))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#586: FILE: drivers/pnp/manager.c:549:
+			if(pnp_check_mem(dev,i))
 			                    ^

ERROR:SPACING: space required before the open parenthesis '('
#586: FILE: drivers/pnp/manager.c:549:
+			if(pnp_check_mem(dev,i))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#590: FILE: drivers/pnp/manager.c:553:
+			if(pnp_check_irq(dev,i))
 			                    ^

ERROR:SPACING: space required before the open parenthesis '('
#590: FILE: drivers/pnp/manager.c:553:
+			if(pnp_check_irq(dev,i))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#594: FILE: drivers/pnp/manager.c:557:
+			if(pnp_check_dma(dev,i))
 			                    ^

ERROR:SPACING: space required before the open parenthesis '('
#594: FILE: drivers/pnp/manager.c:557:
+			if(pnp_check_dma(dev,i))

WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#625: FILE: drivers/pnp/manager.c:588:
+	spin_lock(&pnp_lock);	/* we lock just in case the device is being configured during this call */

WARNING:LONG_LINE_COMMENT: line length of 119 exceeds 100 columns
#627: FILE: drivers/pnp/manager.c:590:
+	spin_unlock(&pnp_lock); /* once the device is claimed active we know it won't be configured so we can unlock */

WARNING:LONG_LINE_COMMENT: line length of 110 exceeds 100 columns
#629: FILE: drivers/pnp/manager.c:592:
+	/* If this condition is true, advanced configuration failed, we need to get this device up and running

WARNING:LONG_LINE_COMMENT: line length of 118 exceeds 100 columns
#630: FILE: drivers/pnp/manager.c:593:
+	 * so we use the simple config engine which ignores cold conflicts, this of course may lead to new failures */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#630: FILE: drivers/pnp/manager.c:593:
+	 * so we use the simple config engine which ignores cold conflicts, this of course may lead to new failures */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#633: FILE: drivers/pnp/manager.c:596:
+			pnp_err("res: Unable to resolve resource conflicts for the device '%s'.", dev->dev.bus_id);

WARNING:LONG_LINE: line length of 136 exceeds 100 columns
#638: FILE: drivers/pnp/manager.c:601:
+		pnp_info("res: Unable to activate the PnP device '%s' because its resource configuration is invalid.", dev->dev.bus_id);

ERROR:SPACING: space required before the open brace '{'
#641: FILE: drivers/pnp/manager.c:604:
+	if (dev->status != PNP_READY && dev->status != PNP_ATTACHED){

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#642: FILE: drivers/pnp/manager.c:605:
+		pnp_err("res: Activation failed because the PnP device '%s' is busy.", dev->dev.bus_id);

WARNING:LONG_LINE: line length of 128 exceeds 100 columns
#646: FILE: drivers/pnp/manager.c:609:
+		pnp_info("res: Unable to activate the PnP device '%s' because this feature is not supported.", dev->dev.bus_id);

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#649: FILE: drivers/pnp/manager.c:612:
+	if (dev->protocol->set(dev, &dev->res)<0) {
 	                                      ^

WARNING:LONG_LINE: line length of 144 exceeds 100 columns
#650: FILE: drivers/pnp/manager.c:613:
+		pnp_err("res: The protocol '%s' reports that activating the PnP device '%s' has failed.", dev->protocol->name, dev->dev.bus_id);

CHECK:BRACES: braces {} should be used on all arms of this statement
#653: FILE: drivers/pnp/manager.c:616:
+	if (pnp_can_read(dev)) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#655: FILE: drivers/pnp/manager.c:618:
+		struct pnp_resource_table res;
+		dev->protocol->get(dev, &res);

WARNING:LONG_LINE_COMMENT: line length of 137 exceeds 100 columns
#656: FILE: drivers/pnp/manager.c:619:
+		if (pnp_compare_resources(&dev->res, &res)) /* if this happens we may be in big trouble but it's best just to continue */

WARNING:LONG_LINE: line length of 129 exceeds 100 columns
#657: FILE: drivers/pnp/manager.c:620:
+			pnp_err("res: The resources requested do not match those set for the PnP device '%s'.", dev->dev.bus_id);

CHECK:BRACES: Unbalanced braces around else statement
#658: FILE: drivers/pnp/manager.c:621:
+	} else

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#662: FILE: drivers/pnp/manager.c:625:
+	if (dev->rule) {
+		kfree(dev->rule);

ERROR:CODE_INDENT: code indent should use tabs where possible
#681: FILE: drivers/pnp/manager.c:644:
+        if (!dev)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#681: FILE: drivers/pnp/manager.c:644:
+        if (!dev)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#682: FILE: drivers/pnp/manager.c:645:
+                return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#682: FILE: drivers/pnp/manager.c:645:
+                return -EINVAL;$

ERROR:SPACING: space required before the open brace '{'
#687: FILE: drivers/pnp/manager.c:650:
+	if (dev->status != PNP_READY){

WARNING:TYPO_SPELLING: 'becuase' may be misspelled - perhaps 'because'?
#688: FILE: drivers/pnp/manager.c:651:
+		pnp_info("res: Disable failed becuase the PnP device '%s' is busy.", dev->dev.bus_id);
 		                              ^^^^^^^

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#688: FILE: drivers/pnp/manager.c:651:
+		pnp_info("res: Disable failed becuase the PnP device '%s' is busy.", dev->dev.bus_id);

WARNING:LONG_LINE: line length of 127 exceeds 100 columns
#692: FILE: drivers/pnp/manager.c:655:
+		pnp_info("res: Unable to disable the PnP device '%s' because this feature is not supported.", dev->dev.bus_id);

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#695: FILE: drivers/pnp/manager.c:658:
+	if (dev->protocol->disable(dev)<0) {
 	                               ^

WARNING:LONG_LINE: line length of 143 exceeds 100 columns
#696: FILE: drivers/pnp/manager.c:659:
+		pnp_err("res: The protocol '%s' reports that disabling the PnP device '%s' has failed.", dev->protocol->name, dev->dev.bus_id);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!resource"
#714: FILE: drivers/pnp/manager.c:677:
+	if (resource == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LINE_SPACING: Please don't use multiple blank lines
#721: FILE: drivers/pnp/manager.c:684:
+
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#722: FILE: drivers/pnp/manager.c:685:
+EXPORT_SYMBOL(pnp_auto_config_dev);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#723: FILE: drivers/pnp/manager.c:686:
+EXPORT_SYMBOL(pnp_manual_config_dev);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#724: FILE: drivers/pnp/manager.c:687:
+EXPORT_SYMBOL(pnp_activate_dev);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#725: FILE: drivers/pnp/manager.c:688:
+EXPORT_SYMBOL(pnp_disable_dev);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#726: FILE: drivers/pnp/manager.c:689:
+EXPORT_SYMBOL(pnp_resource_change);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#728: FILE: drivers/pnp/manager.c:691:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxO)
#733: FILE: drivers/pnp/manager.c:696:
+	get_option(&str,&pnp_max_moves);
 	               ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#733: FILE: drivers/pnp/manager.c:696:
+	get_option(&str,&pnp_max_moves);
 	                ^

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#737: FILE: drivers/pnp/manager.c:700:
+__setup("pnp_max_moves=", pnp_setup_max_moves);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000394855.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 117 errors, 52 warnings, 15 checks, 700 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000394855.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
