WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
	- add hook to call pfm_handle_switch_timeout() on timer tick for timeout based

ERROR:CODE_INDENT: code indent should use tabs where possible
#134: FILE: arch/x86_64/kernel/apic.c:892:
+  ^Ipfm_handle_switch_timeout();$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#134: FILE: arch/x86_64/kernel/apic.c:892:
+  ^Ipfm_handle_switch_timeout();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: arch/x86_64/kernel/apic.c:892:
+  ^Ipfm_handle_switch_timeout();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#223: FILE: arch/x86_64/kernel/nmi.c:274:
+^I ^Iif (wd->perfctr_msr == MSR_ARCH_PERFMON_PERFCTR1 &&$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#223: FILE: arch/x86_64/kernel/nmi.c:274:
+^I ^Iif (wd->perfctr_msr == MSR_ARCH_PERFMON_PERFCTR1 &&$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#224: FILE: arch/x86_64/kernel/nmi.c:275:
+	 	if (wd->perfctr_msr == MSR_ARCH_PERFMON_PERFCTR1 &&
 			((u64)cpu_khz * 1000) > 0x7fffffffULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#243: FILE: arch/x86_64/kernel/nmi.c:845:
+^I ^I^I} else if (wd->perfctr_msr == MSR_ARCH_PERFMON_PERFCTR1) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#243: FILE: arch/x86_64/kernel/nmi.c:845:
+^I ^I^I} else if (wd->perfctr_msr == MSR_ARCH_PERFMON_PERFCTR1) {$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#278: FILE: arch/x86_64/kernel/process.c:99:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#314: FILE: arch/x86_64/kernel/process.c:564:
+	if (test_tsk_thread_flag(next_p, TIF_PERFMON_CTXSW)
+	    || test_tsk_thread_flag(prev_p, TIF_PERFMON_CTXSW))

ERROR:CODE_INDENT: code indent should use tabs where possible
#324: FILE: arch/x86_64/kernel/process.c:670:
+  ^I    || (task_thread_info(prev_p)->flags & _TIF_WORK_CTXSW))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#324: FILE: arch/x86_64/kernel/process.c:670:
+  ^I    || (task_thread_info(prev_p)->flags & _TIF_WORK_CTXSW))$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#324: FILE: arch/x86_64/kernel/process.c:670:
 	if (unlikely((task_thread_info(next_p)->flags & _TIF_WORK_CTXSW))
+  	    || (task_thread_info(prev_p)->flags & _TIF_WORK_CTXSW))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: arch/x86_64/kernel/process.c:670:
+  ^I    || (task_thread_info(prev_p)->flags & _TIF_WORK_CTXSW))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#344: FILE: arch/x86_64/kernel/setup64.c:290:
+ ^Ipfm_init_percpu();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#344: FILE: arch/x86_64/kernel/setup64.c:290:
+ ^Ipfm_init_percpu();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: arch/x86_64/kernel/setup64.c:290:
+ ^Ipfm_init_percpu();$

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#431: FILE: include/asm-x86_64/thread_info.h:142:
+#define _TIF_PERFMON_WORK	(1<<TIF_PERFMON_WORK)
                          	  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#431: FILE: include/asm-x86_64/thread_info.h:142:
+#define _TIF_PERFMON_WORK	(1<<TIF_PERFMON_WORK)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#432: FILE: include/asm-x86_64/thread_info.h:143:
+#define _TIF_PERFMON_CTXSW	(1<<TIF_PERFMON_CTXSW)
                           	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#432: FILE: include/asm-x86_64/thread_info.h:143:
+#define _TIF_PERFMON_CTXSW	(1<<TIF_PERFMON_CTXSW)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#441: FILE: include/asm-x86_64/thread_info.h:152:
+#define _TIF_WORK_CTXSW (_TIF_DEBUG|_TIF_IO_BITMAP|_TIF_PERFMON_CTXSW)
                                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#441: FILE: include/asm-x86_64/thread_info.h:152:
+#define _TIF_WORK_CTXSW (_TIF_DEBUG|_TIF_IO_BITMAP|_TIF_PERFMON_CTXSW)
                                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#454: FILE: include/asm-x86_64/unistd.h:624:
+#define __NR_pfm_write_pmcs	(__NR_pfm_create_context+1)
                            	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#456: FILE: include/asm-x86_64/unistd.h:626:
+#define __NR_pfm_write_pmds	(__NR_pfm_create_context+2)
                            	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#458: FILE: include/asm-x86_64/unistd.h:628:
+#define __NR_pfm_read_pmds	(__NR_pfm_create_context+3)
                           	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#460: FILE: include/asm-x86_64/unistd.h:630:
+#define __NR_pfm_load_context	(__NR_pfm_create_context+4)
                              	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#462: FILE: include/asm-x86_64/unistd.h:632:
+#define __NR_pfm_start		(__NR_pfm_create_context+5)
                       		                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#464: FILE: include/asm-x86_64/unistd.h:634:
+#define __NR_pfm_stop		(__NR_pfm_create_context+6)
                      		                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#466: FILE: include/asm-x86_64/unistd.h:636:
+#define __NR_pfm_restart	(__NR_pfm_create_context+7)
                         	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#468: FILE: include/asm-x86_64/unistd.h:638:
+#define __NR_pfm_create_evtsets	(__NR_pfm_create_context+8)
                                	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#470: FILE: include/asm-x86_64/unistd.h:640:
+#define __NR_pfm_getinfo_evtsets (__NR_pfm_create_context+9)
                                                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#472: FILE: include/asm-x86_64/unistd.h:642:
+#define __NR_pfm_delete_evtsets (__NR_pfm_create_context+10)
                                                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#474: FILE: include/asm-x86_64/unistd.h:644:
+#define __NR_pfm_unload_context	(__NR_pfm_create_context+11)
                                	                        ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000012369.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 9 warnings, 21 checks, 324 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000012369.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
