WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
* if blkdev_open() fails it does bdput() (normal sequence is bd_acquire(inode);

WARNING:LINE_SPACING: Missing a blank line after declarations
#87: FILE: drivers/md/md.c:657:
+	struct block_device *bdev = rdev->bdev;
+	if (!bdev)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#118: FILE: fs/block_dev.c:475:
+		while ( (p = bdev->bd_inodes.next) != &bdev->bd_inodes ) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#118: FILE: fs/block_dev.c:475:
+		while ( (p = bdev->bd_inodes.next) != &bdev->bd_inodes ) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#120: FILE: fs/block_dev.c:477:
+			struct inode *inode;
+			inode = list_entry(p, struct inode, i_devices);

WARNING:LINE_SPACING: Missing a blank line after declarations
#132: FILE: fs/block_dev.c:489:
+	struct block_device *bdev;
+	spin_lock(&bdev_lock);

CHECK:BRACES: braces {} should be used on all arms of this statement
#143: FILE: fs/block_dev.c:500:
+	if (!inode->i_bdev) {
[...]
+	} else if (inode->i_bdev != bdev)
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#147: FILE: fs/block_dev.c:504:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LINE_SPACING: Missing a blank line after declarations
#181: FILE: fs/block_dev.c:700:
+	struct block_device *bdev;
+	bd_acquire(inode);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#210: FILE: fs/devfs/base.c:2250:
+static void devfs_clear_inode (struct inode *inode)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#225: FILE: fs/devfs/base.c:2287:
+	if (bd_acquire(inode) == 0)
 	{

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#233: FILE: fs/devfs/base.c:2391:
+    clear_inode:   devfs_clear_inode,
                ^

WARNING:INDENTED_LABEL: labels should not be indented
#233: FILE: fs/devfs/base.c:2391:
+    clear_inode:   devfs_clear_inode,

CHECK:BRACES: braces {} should be used on all arms of this statement
#260: FILE: fs/inode.c:519:
+	if (inode->i_bdev)
[...]
+	else if (inode->i_cdev) {
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#282: FILE: fs/partitions/ibm.c:50:
+        if ( rc == 0 ) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: fs/partitions/ibm.c:50:
+        if ( rc == 0 ) {$

ERROR:SPACING: space prohibited after that open parenthesis '('
#282: FILE: fs/partitions/ibm.c:50:
+        if ( rc == 0 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#282: FILE: fs/partitions/ibm.c:50:
+        if ( rc == 0 ) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#285: FILE: fs/partitions/ibm.c:52:
+		blkdev_put(bdev,BDEV_FILE);
 		               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#295: FILE: fs/partitions/ibm.c:62:
+        if ( rc == 0 ) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: fs/partitions/ibm.c:62:
+        if ( rc == 0 ) {$

ERROR:SPACING: space prohibited after that open parenthesis '('
#295: FILE: fs/partitions/ibm.c:62:
+        if ( rc == 0 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#295: FILE: fs/partitions/ibm.c:62:
+        if ( rc == 0 ) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#298: FILE: fs/partitions/ibm.c:64:
+		blkdev_put(bdev,BDEV_FILE);
 		               ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#384: FILE: include/linux/fs.h:1031:
+extern int bd_acquire(struct inode *inode);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#385: FILE: include/linux/fs.h:1032:
+extern void bd_forget(struct inode *inode);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000513289.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 11 warnings, 4 checks, 289 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000513289.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
