WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
int conversion functions. 2/3 of them in arch and the rest in drivers and fs.

WARNING:TYPO_SPELLING: 'orignial' may be misspelled - perhaps 'original'?
#37: 
My orignial plan was to replace some of them with this version, which (at
   ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#71: FILE: include/linux/hexint.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#72: FILE: include/linux/hexint.h:2:
+ *  include/linux/hexint.h - hex<->int conversions.

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#90: FILE: include/linux/hexint.h:20:
+extern int hexint_byte(const char *src);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:INLINE: plain inline is preferred over __inline__
#95: FILE: include/linux/hexint.h:25:
+static __inline__ int _hexint_byte(const char *src)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#101: FILE: include/linux/hexint.h:31:
+	if      ((y = src[0] - '0') <= '9'-'0') h = y;
 	                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#101: FILE: include/linux/hexint.h:31:
+	if      ((y = src[0] - '0') <= '9'-'0') h = y;

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#101: FILE: include/linux/hexint.h:31:
+	if      ((y = src[0] - '0') <= '9'-'0') h = y;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#102: FILE: include/linux/hexint.h:32:
+	else if ((y = src[0] - 'a') <= 'f'-'a') h = y+10;
 	                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#102: FILE: include/linux/hexint.h:32:
+	else if ((y = src[0] - 'a') <= 'f'-'a') h = y+10;
 	                                             ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#102: FILE: include/linux/hexint.h:32:
+	else if ((y = src[0] - 'a') <= 'f'-'a') h = y+10;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#102: FILE: include/linux/hexint.h:32:
+	else if ((y = src[0] - 'a') <= 'f'-'a') h = y+10;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#103: FILE: include/linux/hexint.h:33:
+	else if ((y = src[0] - 'A') <= 'F'-'A') h = y+10;
 	                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#103: FILE: include/linux/hexint.h:33:
+	else if ((y = src[0] - 'A') <= 'F'-'A') h = y+10;
 	                                             ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#103: FILE: include/linux/hexint.h:33:
+	else if ((y = src[0] - 'A') <= 'F'-'A') h = y+10;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#103: FILE: include/linux/hexint.h:33:
+	else if ((y = src[0] - 'A') <= 'F'-'A') h = y+10;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#104: FILE: include/linux/hexint.h:34:
+	else return -1;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#108: FILE: include/linux/hexint.h:38:
+	if ((y = src[1] - '0') <= '9'-'0') return h | y;
 	                             ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#108: FILE: include/linux/hexint.h:38:
+	if ((y = src[1] - '0') <= '9'-'0') return h | y;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#108: FILE: include/linux/hexint.h:38:
+	if ((y = src[1] - '0') <= '9'-'0') return h | y;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#109: FILE: include/linux/hexint.h:39:
+	if ((y = src[1] - 'a') <= 'f'-'a') return h | (y+10);
 	                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#109: FILE: include/linux/hexint.h:39:
+	if ((y = src[1] - 'a') <= 'f'-'a') return h | (y+10);
 	                                                ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#109: FILE: include/linux/hexint.h:39:
+	if ((y = src[1] - 'a') <= 'f'-'a') return h | (y+10);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#109: FILE: include/linux/hexint.h:39:
+	if ((y = src[1] - 'a') <= 'f'-'a') return h | (y+10);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#110: FILE: include/linux/hexint.h:40:
+	if ((y = src[1] - 'A') <= 'F'-'A') return h | (y+10);
 	                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#110: FILE: include/linux/hexint.h:40:
+	if ((y = src[1] - 'A') <= 'F'-'A') return h | (y+10);
 	                                                ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#110: FILE: include/linux/hexint.h:40:
+	if ((y = src[1] - 'A') <= 'F'-'A') return h | (y+10);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#110: FILE: include/linux/hexint.h:40:
+	if ((y = src[1] - 'A') <= 'F'-'A') return h | (y+10);

WARNING:INLINE: plain inline is preferred over __inline__
#122: FILE: include/linux/hexint.h:52:
+static __inline__ int hexint_nibble(char x)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#126: FILE: include/linux/hexint.h:56:
+	if ((y = x - '0') <= '9'-'0') return y;
 	                        ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#126: FILE: include/linux/hexint.h:56:
+	if ((y = x - '0') <= '9'-'0') return y;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#126: FILE: include/linux/hexint.h:56:
+	if ((y = x - '0') <= '9'-'0') return y;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#127: FILE: include/linux/hexint.h:57:
+	if ((y = x - 'a') <= 'f'-'a') return y+10;
 	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#127: FILE: include/linux/hexint.h:57:
+	if ((y = x - 'a') <= 'f'-'a') return y+10;
 	                                      ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#127: FILE: include/linux/hexint.h:57:
+	if ((y = x - 'a') <= 'f'-'a') return y+10;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#127: FILE: include/linux/hexint.h:57:
+	if ((y = x - 'a') <= 'f'-'a') return y+10;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#128: FILE: include/linux/hexint.h:58:
+	if ((y = x - 'A') <= 'F'-'A') return y+10;
 	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#128: FILE: include/linux/hexint.h:58:
+	if ((y = x - 'A') <= 'F'-'A') return y+10;
 	                                      ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#128: FILE: include/linux/hexint.h:58:
+	if ((y = x - 'A') <= 'F'-'A') return y+10;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#128: FILE: include/linux/hexint.h:58:
+	if ((y = x - 'A') <= 'F'-'A') return y+10;

WARNING:INLINE: plain inline is preferred over __inline__
#135: FILE: include/linux/hexint.h:65:
+static __inline__ char inthex_nibble(int x)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#137: FILE: include/linux/hexint.h:67:
+	const char* digits = "0123456789abcdef";

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#145: FILE: include/linux/hexint.h:75:
+static __inline__ void inthex_byte(int x, char* dest)

WARNING:INLINE: plain inline is preferred over __inline__
#145: FILE: include/linux/hexint.h:75:
+static __inline__ void inthex_byte(int x, char* dest)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#147: FILE: include/linux/hexint.h:77:
+	const char* digits = "0123456789abcdef";

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#172: FILE: lib/hexint.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#173: FILE: lib/hexint.c:2:
+ *  linux/lib/hexint.c - hex<->int conversions.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#178: FILE: lib/hexint.c:7:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#193: FILE: lib/hexint.c:22:
+	if      ((y = src[0] - '0') <= '9'-'0') h = y;
 	                                  ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#193: FILE: lib/hexint.c:22:
+	if      ((y = src[0] - '0') <= '9'-'0') h = y;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#193: FILE: lib/hexint.c:22:
+	if      ((y = src[0] - '0') <= '9'-'0') h = y;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#194: FILE: lib/hexint.c:23:
+	else if ((y = src[0] - 'a') <= 'f'-'a') h = y+10;
 	                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#194: FILE: lib/hexint.c:23:
+	else if ((y = src[0] - 'a') <= 'f'-'a') h = y+10;
 	                                             ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#194: FILE: lib/hexint.c:23:
+	else if ((y = src[0] - 'a') <= 'f'-'a') h = y+10;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#194: FILE: lib/hexint.c:23:
+	else if ((y = src[0] - 'a') <= 'f'-'a') h = y+10;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#195: FILE: lib/hexint.c:24:
+	else if ((y = src[0] - 'A') <= 'F'-'A') h = y+10;
 	                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#195: FILE: lib/hexint.c:24:
+	else if ((y = src[0] - 'A') <= 'F'-'A') h = y+10;
 	                                             ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#195: FILE: lib/hexint.c:24:
+	else if ((y = src[0] - 'A') <= 'F'-'A') h = y+10;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#195: FILE: lib/hexint.c:24:
+	else if ((y = src[0] - 'A') <= 'F'-'A') h = y+10;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#196: FILE: lib/hexint.c:25:
+	else return -1;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#200: FILE: lib/hexint.c:29:
+	if ((y = src[1] - '0') <= '9'-'0') return h | y;
 	                             ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#200: FILE: lib/hexint.c:29:
+	if ((y = src[1] - '0') <= '9'-'0') return h | y;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#200: FILE: lib/hexint.c:29:
+	if ((y = src[1] - '0') <= '9'-'0') return h | y;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#201: FILE: lib/hexint.c:30:
+	if ((y = src[1] - 'a') <= 'f'-'a') return h | (y+10);
 	                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#201: FILE: lib/hexint.c:30:
+	if ((y = src[1] - 'a') <= 'f'-'a') return h | (y+10);
 	                                                ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#201: FILE: lib/hexint.c:30:
+	if ((y = src[1] - 'a') <= 'f'-'a') return h | (y+10);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#201: FILE: lib/hexint.c:30:
+	if ((y = src[1] - 'a') <= 'f'-'a') return h | (y+10);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#202: FILE: lib/hexint.c:31:
+	if ((y = src[1] - 'A') <= 'F'-'A') return h | (y+10);
 	                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#202: FILE: lib/hexint.c:31:
+	if ((y = src[1] - 'A') <= 'F'-'A') return h | (y+10);
 	                                                ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#202: FILE: lib/hexint.c:31:
+	if ((y = src[1] - 'A') <= 'F'-'A') return h | (y+10);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#202: FILE: lib/hexint.c:31:
+	if ((y = src[1] - 'A') <= 'F'-'A') return h | (y+10);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000475739.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 35 errors, 10 warnings, 27 checks, 126 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000475739.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
