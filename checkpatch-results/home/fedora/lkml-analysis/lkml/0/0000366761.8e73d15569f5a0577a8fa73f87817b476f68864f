WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
diff -urN linux-2.5/include/asm-alpha/bug.h pmac-2.5/include/asm-alpha/bug.h

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#53: FILE: include/asm-alpha/bug.h:12:
+#define BUG_ON(condition) do { if (unlikely((condition)!=0)) BUG(); } while(0)

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#53: FILE: include/asm-alpha/bug.h:12:
+#define BUG_ON(condition) do { if (unlikely((condition)!=0)) BUG(); } while(0)
                                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#53: FILE: include/asm-alpha/bug.h:12:
+#define BUG_ON(condition) do { if (unlikely((condition)!=0)) BUG(); } while(0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#65: FILE: include/asm-arm/bug.h:21:
+#define BUG_ON(condition) do { if (unlikely((condition)!=0)) BUG(); } while(0)

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#65: FILE: include/asm-arm/bug.h:21:
+#define BUG_ON(condition) do { if (unlikely((condition)!=0)) BUG(); } while(0)
                                                        ^

ERROR:SPACING: space required before the open parenthesis '('
#65: FILE: include/asm-arm/bug.h:21:
+#define BUG_ON(condition) do { if (unlikely((condition)!=0)) BUG(); } while(0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#75: FILE: include/asm-cris/bug.h:12:
+#define BUG_ON(condition) do { if (unlikely((condition)!=0)) BUG(); } while(0)

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#75: FILE: include/asm-cris/bug.h:12:
+#define BUG_ON(condition) do { if (unlikely((condition)!=0)) BUG(); } while(0)
                                                        ^

ERROR:SPACING: space required before the open parenthesis '('
#75: FILE: include/asm-cris/bug.h:12:
+#define BUG_ON(condition) do { if (unlikely((condition)!=0)) BUG(); } while(0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#85: FILE: include/asm-h8300/bug.h:12:
+#define BUG_ON(condition) do { if (unlikely((condition)!=0)) BUG(); } while(0)

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#85: FILE: include/asm-h8300/bug.h:12:
+#define BUG_ON(condition) do { if (unlikely((condition)!=0)) BUG(); } while(0)
                                                        ^

ERROR:SPACING: space required before the open parenthesis '('
#85: FILE: include/asm-h8300/bug.h:12:
+#define BUG_ON(condition) do { if (unlikely((condition)!=0)) BUG(); } while(0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#95: FILE: include/asm-i386/bug.h:22:
+#define BUG_ON(condition) do { if (unlikely((condition)!=0)) BUG(); } while(0)

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#95: FILE: include/asm-i386/bug.h:22:
+#define BUG_ON(condition) do { if (unlikely((condition)!=0)) BUG(); } while(0)
                                                        ^

ERROR:SPACING: space required before the open parenthesis '('
#95: FILE: include/asm-i386/bug.h:22:
+#define BUG_ON(condition) do { if (unlikely((condition)!=0)) BUG(); } while(0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#107: FILE: include/asm-ia64/bug.h:10:
+#define BUG_ON(condition) do { if (unlikely((condition)!=0)) BUG(); } while(0)

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#107: FILE: include/asm-ia64/bug.h:10:
+#define BUG_ON(condition) do { if (unlikely((condition)!=0)) BUG(); } while(0)
                                                        ^

ERROR:SPACING: space required before the open parenthesis '('
#107: FILE: include/asm-ia64/bug.h:10:
+#define BUG_ON(condition) do { if (unlikely((condition)!=0)) BUG(); } while(0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#118: FILE: include/asm-m68k/bug.h:24:
+#define BUG_ON(condition) do { \

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#119: FILE: include/asm-m68k/bug.h:25:
+	if (unlikely((condition)!=0)) \
 	                        ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#120: FILE: include/asm-m68k/bug.h:26:
+		BUG(); \

ERROR:SPACING: space required before the open parenthesis '('
#121: FILE: include/asm-m68k/bug.h:27:
+} while(0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#133: FILE: include/asm-m68knommu/bug.h:8:
+#define BUG_ON(condition) do { \

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#134: FILE: include/asm-m68knommu/bug.h:9:
+	if (unlikely((condition)!=0)) \
 	                        ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#135: FILE: include/asm-m68knommu/bug.h:10:
+		BUG(); \

ERROR:SPACING: space required before the open parenthesis '('
#136: FILE: include/asm-m68knommu/bug.h:11:
+} while(0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#148: FILE: include/asm-mips/bug.h:6:
+#define BUG_ON(condition) do { if (unlikely((condition)!=0)) BUG(); } while(0)

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#148: FILE: include/asm-mips/bug.h:6:
+#define BUG_ON(condition) do { if (unlikely((condition)!=0)) BUG(); } while(0)
                                                        ^

ERROR:SPACING: space required before the open parenthesis '('
#148: FILE: include/asm-mips/bug.h:6:
+#define BUG_ON(condition) do { if (unlikely((condition)!=0)) BUG(); } while(0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#159: FILE: include/asm-mips64/bug.h:5:
+#define BUG_ON(condition) do { if (unlikely((condition)!=0)) BUG(); } while(0)

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#159: FILE: include/asm-mips64/bug.h:5:
+#define BUG_ON(condition) do { if (unlikely((condition)!=0)) BUG(); } while(0)
                                                        ^

ERROR:SPACING: space required before the open parenthesis '('
#159: FILE: include/asm-mips64/bug.h:5:
+#define BUG_ON(condition) do { if (unlikely((condition)!=0)) BUG(); } while(0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#170: FILE: include/asm-parisc/bug.h:13:
+#define BUG_ON(condition) do { \

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#171: FILE: include/asm-parisc/bug.h:14:
+	if (unlikely((condition)!=0)) \
 	                        ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#172: FILE: include/asm-parisc/bug.h:15:
+		BUG(); \

ERROR:SPACING: space required before the open parenthesis '('
#173: FILE: include/asm-parisc/bug.h:16:
+} while(0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#194: FILE: include/asm-ppc/bug.h:10:
+#define BUG() do {					\

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#194: FILE: include/asm-ppc/bug.h:10:
+#define BUG() do {					\
+	__asm__ __volatile__(				\
+		"1:	twi 31,0,0\n"			\
+		".section __bug_table,\"a\"\n\t"	\
+		"	.long 1b,%0,%1\n"		\
+		".previous"				\
+		: : "i" (__LINE__), "i" (__FILE__));	\
+} while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#203: FILE: include/asm-ppc/bug.h:19:
+#define BUG_ON(x) do {						\

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#203: FILE: include/asm-ppc/bug.h:19:
+#define BUG_ON(x) do {						\
+	__asm__ __volatile__(					\
+		"1:	twnei %0,0\n"				\
+		".section __bug_table,\"a\"\n\t"		\
+		"	.long 1b,%1,%2\n"			\
+		".previous"					\
+		: : "r" (x), "i" (__LINE__), "i" (__FILE__));	\
 } while (0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#220: FILE: include/asm-ppc64/bug.h:30:
+#define BUG_ON(condition) do { if (unlikely((condition)!=0)) BUG(); } while(0)

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#220: FILE: include/asm-ppc64/bug.h:30:
+#define BUG_ON(condition) do { if (unlikely((condition)!=0)) BUG(); } while(0)
                                                        ^

ERROR:SPACING: space required before the open parenthesis '('
#220: FILE: include/asm-ppc64/bug.h:30:
+#define BUG_ON(condition) do { if (unlikely((condition)!=0)) BUG(); } while(0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#232: FILE: include/asm-s390/bug.h:9:
+#define BUG_ON(condition) do { \

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#233: FILE: include/asm-s390/bug.h:10:
+	if (unlikely((condition)!=0)) \
 	                        ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#234: FILE: include/asm-s390/bug.h:11:
+		BUG(); \

ERROR:SPACING: space required before the open parenthesis '('
#235: FILE: include/asm-s390/bug.h:12:
+} while(0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#247: FILE: include/asm-sh/bug.h:12:
+#define BUG_ON(condition) do { \

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#248: FILE: include/asm-sh/bug.h:13:
+	if (unlikely((condition)!=0)) \
 	                        ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#249: FILE: include/asm-sh/bug.h:14:
+		BUG(); \

ERROR:SPACING: space required before the open parenthesis '('
#250: FILE: include/asm-sh/bug.h:15:
+} while(0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#262: FILE: include/asm-sparc/bug.h:15:
+#define BUG_ON(condition) do { \

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#263: FILE: include/asm-sparc/bug.h:16:
+	if (unlikely((condition)!=0)) \
 	                        ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#264: FILE: include/asm-sparc/bug.h:17:
+		BUG(); \

ERROR:SPACING: space required before the open parenthesis '('
#265: FILE: include/asm-sparc/bug.h:18:
+} while(0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#277: FILE: include/asm-sparc64/bug.h:16:
+#define BUG_ON(condition) do { \

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#278: FILE: include/asm-sparc64/bug.h:17:
+	if (unlikely((condition)!=0)) \
 	                        ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#279: FILE: include/asm-sparc64/bug.h:18:
+		BUG(); \

ERROR:SPACING: space required before the open parenthesis '('
#280: FILE: include/asm-sparc64/bug.h:19:
+} while(0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#292: FILE: include/asm-um/bug.h:10:
+#define BUG_ON(condition) do { \

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#293: FILE: include/asm-um/bug.h:11:
+	if (unlikely((condition)!=0)) \
 	                        ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#294: FILE: include/asm-um/bug.h:12:
+		BUG(); \

ERROR:SPACING: space required before the open parenthesis '('
#295: FILE: include/asm-um/bug.h:13:
+} while(0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#307: FILE: include/asm-v850/bug.h:21:
+#define BUG_ON(condition) do { if (unlikely((condition)!=0)) BUG(); } while(0)

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#307: FILE: include/asm-v850/bug.h:21:
+#define BUG_ON(condition) do { if (unlikely((condition)!=0)) BUG(); } while(0)
                                                        ^

ERROR:SPACING: space required before the open parenthesis '('
#307: FILE: include/asm-v850/bug.h:21:
+#define BUG_ON(condition) do { if (unlikely((condition)!=0)) BUG(); } while(0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#317: FILE: include/asm-x86_64/bug.h:21:
+#define BUG_ON(condition) do { if (unlikely((condition)!=0)) BUG(); } while(0)

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#317: FILE: include/asm-x86_64/bug.h:21:
+#define BUG_ON(condition) do { if (unlikely((condition)!=0)) BUG(); } while(0)
                                                        ^

ERROR:SPACING: space required before the open parenthesis '('
#317: FILE: include/asm-x86_64/bug.h:21:
+#define BUG_ON(condition) do { if (unlikely((condition)!=0)) BUG(); } while(0)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000366761.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 38 errors, 32 warnings, 0 checks, 202 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000366761.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
