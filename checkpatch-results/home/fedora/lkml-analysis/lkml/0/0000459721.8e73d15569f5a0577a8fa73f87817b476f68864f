WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
diff -urN -I \$.*\$ --exclude TAGS -X /home/rusty/current-dontdiff --minimal linux-2.5.9/arch/i386/kernel/apic.c working-2.5.9-nonlinear-cpu/arch/i386/kernel/apic.c

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#38: FILE: arch/i386/kernel/apic.c:806:
+	slice = clocks / (NR_CPUS+1);
 	                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#38: FILE: arch/i386/kernel/apic.c:806:
+	slice = clocks / (NR_CPUS+1);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#71: FILE: arch/i386/kernel/apm.c:1584:
+	if ((num_online_cpus() == 1) &&

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#125: FILE: arch/i386/kernel/bluesmoke.c:263:
+	for (i=0; i<NR_CPUS; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#125: FILE: arch/i386/kernel/bluesmoke.c:263:
+	for (i=0; i<NR_CPUS; i++) {
 	           ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#125: FILE: arch/i386/kernel/bluesmoke.c:263:
+	for (i=0; i<NR_CPUS; i++) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#150: FILE: arch/i386/kernel/io_apic.c:233:
+			if (cpu >= NR_CPUS)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#156: FILE: arch/i386/kernel/io_apic.c:238:
+				cpu = NR_CPUS-1;
 				             ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#156: FILE: arch/i386/kernel/io_apic.c:238:
+				cpu = NR_CPUS-1;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#159: FILE: arch/i386/kernel/io_apic.c:240:
+	} while (!cpu_online(cpu) || !IRQ_ALLOWED(cpu,allowed_mask) ||
 	                                             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#172: FILE: arch/i386/kernel/irq.c:141:
+	for (j=0; j<NR_CPUS; j++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#172: FILE: arch/i386/kernel/irq.c:141:
+	for (j=0; j<NR_CPUS; j++)
 	           ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#172: FILE: arch/i386/kernel/irq.c:141:
+	for (j=0; j<NR_CPUS; j++)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#174: FILE: arch/i386/kernel/irq.c:143:
+			p += sprintf(p, "CPU%d       ",j);
 			                              ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#185: FILE: arch/i386/kernel/irq.c:154:
+		for (j = 0; j < NR_CPUS; j++)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#198: FILE: arch/i386/kernel/irq.c:167:
+	for (j = 0; j < NR_CPUS; j++)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#206: FILE: arch/i386/kernel/irq.c:173:
+	for (j = 0; j < NR_CPUS; j++)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#217: FILE: arch/i386/kernel/irq.c:205:
+	for(i=0;i < NR_CPUS;i++)
 	     ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#217: FILE: arch/i386/kernel/irq.c:205:
+	for(i=0;i < NR_CPUS;i++)
 	       ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#217: FILE: arch/i386/kernel/irq.c:205:
+	for(i=0;i < NR_CPUS;i++)
 	                   ^

ERROR:SPACING: space required before the open parenthesis '('
#217: FILE: arch/i386/kernel/irq.c:205:
+	for(i=0;i < NR_CPUS;i++)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#217: FILE: arch/i386/kernel/irq.c:205:
+	for(i=0;i < NR_CPUS;i++)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#221: FILE: arch/i386/kernel/irq.c:208:
+	for(i=0;i < NR_CPUS;i++)
 	     ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#221: FILE: arch/i386/kernel/irq.c:208:
+	for(i=0;i < NR_CPUS;i++)
 	       ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#221: FILE: arch/i386/kernel/irq.c:208:
+	for(i=0;i < NR_CPUS;i++)
 	                   ^

ERROR:SPACING: space required before the open parenthesis '('
#221: FILE: arch/i386/kernel/irq.c:208:
+	for(i=0;i < NR_CPUS;i++)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#221: FILE: arch/i386/kernel/irq.c:208:
+	for(i=0;i < NR_CPUS;i++)

ERROR:SPACING: space required before the open parenthesis '('
#226: FILE: arch/i386/kernel/irq.c:212:
+	for(i = 0; i < NR_CPUS; i++) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#226: FILE: arch/i386/kernel/irq.c:212:
+	for(i = 0; i < NR_CPUS; i++) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#238: FILE: arch/i386/kernel/microcode.c:191:
+	for (i=0; i<NR_CPUS; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#238: FILE: arch/i386/kernel/microcode.c:191:
+	for (i=0; i<NR_CPUS; i++) {
 	           ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#238: FILE: arch/i386/kernel/microcode.c:191:
+	for (i=0; i<NR_CPUS; i++) {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#248: FILE: arch/i386/kernel/microcode.c:346:
+		mc_applied = kmalloc(NR_CPUS*sizeof(struct microcode),
 		                            ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#248: FILE: arch/i386/kernel/microcode.c:346:
+		mc_applied = kmalloc(NR_CPUS*sizeof(struct microcode),

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#258: FILE: arch/i386/kernel/microcode.c:371:
+		mc_fsize = NR_CPUS * sizeof(struct microcode);

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#267: FILE: arch/i386/kernel/microcode.c:389:
+				int bytes = NR_CPUS * sizeof(struct microcode);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: arch/i386/kernel/mtrr.c:1058:
+    atomic_set (&undone_count, num_online_cpus() - 1);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#279: FILE: arch/i386/kernel/mtrr.c:1058:
+    atomic_set (&undone_count, num_online_cpus() - 1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: arch/i386/kernel/mtrr.c:1067:
+    atomic_set (&undone_count, num_online_cpus() - 1);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#288: FILE: arch/i386/kernel/mtrr.c:1067:
+    atomic_set (&undone_count, num_online_cpus() - 1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: arch/i386/kernel/mtrr.c:1074:
+    atomic_set (&undone_count, num_online_cpus() - 1);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#296: FILE: arch/i386/kernel/mtrr.c:1074:
+    atomic_set (&undone_count, num_online_cpus() - 1);

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#309: FILE: arch/i386/kernel/nmi.c:84:
+	for (cpu = 0; cpu < NR_CPUS; cpu++) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#320: FILE: arch/i386/kernel/nmi.c:334:
+	for (i = 0; i < NR_CPUS; i++)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#344: FILE: arch/i386/kernel/smp.c:257:
+		for (cpu = 0; cpu < NR_CPUS; ++cpu) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#355: FILE: arch/i386/kernel/smp.c:273:
+		for (cpu = 0; cpu < NR_CPUS; ++cpu) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#366: FILE: arch/i386/kernel/smp.c:547:
+	int cpus = num_online_cpus()-1;
 	                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#396: FILE: arch/i386/kernel/smpboot.c:287:
+		while (atomic_read(&tsc_count_start) != num_online_cpus()-1)
 		                                                         ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#397: FILE: arch/i386/kernel/smpboot.c:288:
+			mb();

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#406: FILE: arch/i386/kernel/smpboot.c:306:
+		while (atomic_read(&tsc_count_stop) != num_online_cpus()-1)
 		                                                        ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#407: FILE: arch/i386/kernel/smpboot.c:307:
+			mb();

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#417: FILE: arch/i386/kernel/smpboot.c:314:
+	for (i = 0; i < NR_CPUS; i++) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#428: FILE: arch/i386/kernel/smpboot.c:323:
+	for (i = 0; i < NR_CPUS; i++) {

WARNING:MEMORY_BARRIER: memory barrier without comment
#449: FILE: arch/i386/kernel/smpboot.c:366:
+			mb();

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#457: FILE: arch/i386/kernel/smpboot.c:373:
+		while (atomic_read(&tsc_count_stop) != num_online_cpus()) mb();

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:MEMORY_BARRIER: memory barrier without comment
#457: FILE: arch/i386/kernel/smpboot.c:373:
+		while (atomic_read(&tsc_count_stop) != num_online_cpus()) mb();

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#498: FILE: arch/i386/kernel/smpboot.c:1214:
+		for (cpu = 0; cpu < NR_CPUS; cpu++) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#503: FILE: arch/i386/kernel/smpboot.c:1216:
+			if (!cpu_online(cpu)) continue;

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#505: FILE: arch/i386/kernel/smpboot.c:1218:
+			for (i = 0; i < NR_CPUS; i++) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#518: FILE: include/asm-i386/hardirq.h:54:
+	for (i = 0; i < NR_CPUS; i++)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#553: FILE: include/asm-i386/smp.h:95:
+#define cpu_online(cpu) (cpu_online_map & (1<<(cpu)))
                                             ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#581: FILE: include/asm-i386/smp.h:128:
+extern int __cpu_disable(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#582: FILE: include/asm-i386/smp.h:129:
+extern void __cpu_die(unsigned int cpu);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#583: FILE: include/asm-i386/smp.h:130:
+extern int __cpu_up(unsigned int cpu);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000459721.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 20 errors, 35 warnings, 10 checks, 481 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000459721.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
