ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#36: 
--- a/kernel/fork.c	Wed Aug  7 16:37:38 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#76: FILE: kernel/fork.c:157:
+	__set_bit(pid,pid_map);
 	             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#79: FILE: kernel/fork.c:160:
+static int get_pid_by_map(int lastpid) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#81: FILE: kernel/fork.c:162:
+	static int mark_and_sweep = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#89: FILE: kernel/fork.c:170:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#105: FILE: kernel/fork.c:186:
+^Imask = pid_map[i] | ((1 << ((lastpid & (BITS_PER_LONG-1)))) - 1);   $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#105: FILE: kernel/fork.c:186:
+	mask = pid_map[i] | ((1 << ((lastpid & (BITS_PER_LONG-1)))) - 1);   
 	                                                     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#107: FILE: kernel/fork.c:188:
+^Iwhile ((mask == ~0) && (++i < PID_MAP_SIZE)) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#110: FILE: kernel/fork.c:191:
+^Iif (i == PID_MAP_SIZE) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#117: FILE: kernel/fork.c:198:
+^I^Ireturn 0; $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#121: FILE: kernel/fork.c:202:
+	i &= (PID_MAX-1);
 	             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#127: FILE: kernel/fork.c:208:
+^Iwhile ((mask == 0) && (++i < PID_MAP_SIZE)) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#130: FILE: kernel/fork.c:211:
+^Iif (i==PID_MAP_SIZE) $

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#130: FILE: kernel/fork.c:211:
+	if (i==PID_MAP_SIZE) 
 	     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#132: FILE: kernel/fork.c:213:
+^Ielse $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#160: FILE: kernel/fork.c:235:
+^I^I^I^Igoto nomorepids; $

ERROR:SPACING: space required before the open parenthesis '('
#175: FILE: kernel/fork.c:250:
+				if(last_pid == beginpid)

ERROR:SPACING: space required before the open parenthesis '('
#183: FILE: kernel/fork.c:258:
+			if(p->tgid > last_pid && next_safe > p->tgid)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#197: FILE: kernel/fork.c:271:
+	next_safe = last_pid = PID_MAX;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:BRACES: braces {} should be used on all arms of this statement
#209: FILE: kernel/fork.c:768:
+	if (clone_flags & CLONE_IDLETASK)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#211: FILE: kernel/fork.c:770:
+	else {

WARNING:REPEATED_WORD: Possible repeated word: 'of'
#225: FILE: kernel/fork.c:900:
+	 * another CPU to get our same PID between the release of of the

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000441078.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 1 warnings, 6 checks, 204 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000441078.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
