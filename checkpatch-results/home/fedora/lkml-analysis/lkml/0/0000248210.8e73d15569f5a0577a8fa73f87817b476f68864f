WARNING:TYPO_SPELLING: 'overrideable' may be misspelled - perhaps 'overridable'?
#53: 
The default_pagecache_policy is overrideable on a per process basis, so
                                ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'correclty' may be misspelled - perhaps 'correctly'?
#103: 
to do that totally correclty with the current include file order (that I
                   ^^^^^^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#229: FILE: mm/mempolicy.c:615:
+static unsigned roundrobin_nodes(struct mempolicy *policy)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#231: FILE: mm/mempolicy.c:617:
+	unsigned nid, next;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#235: FILE: mm/mempolicy.c:621:
+	BUG_ON(nid >= MAX_NUMNODES);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#236: FILE: mm/mempolicy.c:622:
+	next = find_next_bit(policy->v.nodes, MAX_NUMNODES, 1+nid);
 	                                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#251: FILE: mm/mempolicy.c:681:
+/* Allocate a page in round-robin policy.
+   Own path because first fallback needs to round-robin. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#251: FILE: mm/mempolicy.c:681:
+   Own path because first fallback needs to round-robin. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#252: FILE: mm/mempolicy.c:682:
+static struct page *alloc_page_roundrobin(unsigned gfp, unsigned order, struct mempolicy* policy)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#252: FILE: mm/mempolicy.c:682:
+static struct page *alloc_page_roundrobin(unsigned gfp, unsigned order, struct mempolicy* policy)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#252: FILE: mm/mempolicy.c:682:
+static struct page *alloc_page_roundrobin(unsigned gfp, unsigned order, struct mempolicy* policy)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#256: FILE: mm/mempolicy.c:686:
+	unsigned nid;

CHECK:SPACING: No space is necessary after a cast
#261: FILE: mm/mempolicy.c:691:
+		BUG_ON(!test_bit(nid, (const volatile void *) &node_online_map));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#261: FILE: mm/mempolicy.c:691:
+		BUG_ON(!test_bit(nid, (const volatile void *) &node_online_map));

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#261: FILE: mm/mempolicy.c:691:
+		BUG_ON(!test_bit(nid, (const volatile void *) &node_online_map));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#278: FILE: mm/mempolicy.c:726:
+	unsigned nid;

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#297: FILE: mm/mempolicy.c:731:
+	switch (pol->policy) {
+		case MPOL_INTERLEAVE:
[...]
+		case MPOL_ROUNDROBIN:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LINE_SPACING: Missing a blank line after declarations
#301: FILE: mm/mempolicy.c:735:
+				unsigned long off;
+				BUG_ON(addr >= vma->vm_end);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#301: FILE: mm/mempolicy.c:735:
+				BUG_ON(addr >= vma->vm_end);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#302: FILE: mm/mempolicy.c:736:
+				BUG_ON(addr < vma->vm_start);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#325: FILE: mm/mempolicy.c:775:
+	if (pol->policy == MPOL_INTERLEAVE) {
[...]
+	} else if (pol->policy == MPOL_ROUNDROBIN) {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000248210.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 17 warnings, 2 checks, 204 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000248210.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
