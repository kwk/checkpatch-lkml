WARNING:TYPO_SPELLING: 'hda' may be misspelled - perhaps 'had'?
#56: 
	echo 1 > /sys/blocks/hda/hda1/make-it-fail
	                     ^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#94: FILE: block/ll_rw_blk.c:2983:
+__setup("fail_make_request=", setup_fail_make_request);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#143: FILE: lib/Kconfig.debug:433:
+config FAIL_MAKE_REQUEST
+	bool "Fault-injection capabilitiy for disk IO"
+	depends on DEBUG_KERNEL
+	select FAULT_INJECTION 
+	help
+	  This option provides fault-injection capabilitiy to disk IO.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:TYPO_SPELLING: 'capabilitiy' may be misspelled - perhaps 'capability'?
#144: FILE: lib/Kconfig.debug:434:
+	bool "Fault-injection capabilitiy for disk IO"
 	                      ^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#146: FILE: lib/Kconfig.debug:436:
+^Iselect FAULT_INJECTION $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'capabilitiy' may be misspelled - perhaps 'capability'?
#148: FILE: lib/Kconfig.debug:438:
+	  This option provides fault-injection capabilitiy to disk IO.
 	                                       ^^^^^^^^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#163: FILE: block/genhd.c:422:
+static ssize_t disk_fail_store(struct gendisk * disk,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#168: FILE: block/genhd.c:427:
+	if (count > 0 && sscanf(buf, "%d", &i) > 0) {
+		if (i == 0)
+			disk->flags &= ~GENHD_FL_FAIL;
+		else
+			disk->flags |= GENHD_FL_FAIL;
+	}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#177: FILE: block/genhd.c:436:
+}
+static ssize_t disk_fail_read(struct gendisk * disk, char *page)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#177: FILE: block/genhd.c:436:
+static ssize_t disk_fail_read(struct gendisk * disk, char *page)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#181: FILE: block/genhd.c:440:
+}
+static struct disk_attribute disk_attr_fail = {

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#182: FILE: block/genhd.c:441:
+	.attr = {.name = "make-it-fail", .mode = S_IRUGO | S_IWUSR },

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#234: FILE: fs/partitions/check.c:270:
+static ssize_t part_fail_store(struct hd_struct * p,

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#239: FILE: fs/partitions/check.c:275:
+	if (count > 0 && sscanf(buf, "%d", &i) > 0)
+		p->make_it_fail = (i == 0) ? 0 : 1;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#244: FILE: fs/partitions/check.c:280:
+}
+static ssize_t part_fail_read(struct hd_struct * p, char *page)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#244: FILE: fs/partitions/check.c:280:
+static ssize_t part_fail_read(struct hd_struct * p, char *page)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#248: FILE: fs/partitions/check.c:284:
+}
+static struct part_attribute part_attr_fail = {

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#249: FILE: fs/partitions/check.c:285:
+	.attr = {.name = "make-it-fail", .mode = S_IRUGO | S_IWUSR },

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000020280.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 8 warnings, 5 checks, 169 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000020280.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
