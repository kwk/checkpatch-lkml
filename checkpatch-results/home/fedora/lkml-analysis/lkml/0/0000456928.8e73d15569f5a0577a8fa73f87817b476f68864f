WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: arch/ppc/kernel/time.c:249:
+        return get_native_tbl();$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: arch/ppc/kernel/time.c:249:
+        return get_native_tbl();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: arch/ppc/kernel/time.c:254:
+        unsigned long val;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: arch/ppc/kernel/time.c:254:
+        unsigned long val;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: arch/ppc/kernel/time.c:258:
+^I        int delta = ts1 - ts2;$

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#180: FILE: arch/ppc/kernel/time.c:259:
+		val = delta<0 ? delta + 1000000000 : delta;
 		           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#182: FILE: arch/ppc/kernel/time.c:261:
+        ^Ival = ts1 - ts2;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#182: FILE: arch/ppc/kernel/time.c:261:
+        ^Ival = ts1 - ts2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: arch/ppc/kernel/time.c:261:
+        ^Ival = ts1 - ts2;$

WARNING:TYPO_SPELLING: 'wierd' may be misspelled - perhaps 'weird'?
#186: FILE: arch/ppc/kernel/time.c:265:
+		/* We had some wierd overflow due to the timebases being
 		               ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#187: FILE: arch/ppc/kernel/time.c:266:
+		/* We had some wierd overflow due to the timebases being
+		   changed, just ignore it. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#187: FILE: arch/ppc/kernel/time.c:266:
+		   changed, just ignore it. */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#188: FILE: arch/ppc/kernel/time.c:267:
+		printk("tb went backwards? ts1=%lu, ts2=%ld\n", ts1, ts2);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#294: FILE: arch/i386/kernel/entry.S:95:
+^Ipopl %eax; $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#299: FILE: arch/i386/kernel/entry.S:100:
+^Iaddl  $4,%esp; $

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:LINE_SPACING: Missing a blank line after declarations
#352: FILE: arch/i386/kernel/time.c:723:
+	register unsigned long eax, edx;
+	rdtsc(eax,edx);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#352: FILE: arch/i386/kernel/time.c:723:
+	rdtsc(eax,edx);
 	         ^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#364: FILE: arch/i386/kernel/time.c:735:
+		:"=a" (eax), "=d" (rv)
 		^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#365: FILE: arch/i386/kernel/time.c:736:
+		:"rm" (fast_gettimeoffset_quotient),
 		^

WARNING:TYPO_SPELLING: 'wierd' may be misspelled - perhaps 'weird'?
#369: FILE: arch/i386/kernel/time.c:740:
+		/* We had some wierd overflow due to the timebases being
 		               ^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#370: FILE: arch/i386/kernel/time.c:741:
+		/* We had some wierd overflow due to the timebases being
+		   changed, just ignore it. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#370: FILE: arch/i386/kernel/time.c:741:
+		   changed, just ignore it. */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#371: FILE: arch/i386/kernel/time.c:742:
+		printk("tb went backwards? ts1=%lu, ts2=%ld\n", ts1, ts2);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#409: FILE: kernel/timer.c:557:
+/* This spin lock protects the virtual itimer and tms structures while
+   we are messing with it. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#409: FILE: kernel/timer.c:557:
+   we are messing with it. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around p->it_virt_value
#427: FILE: kernel/timer.c:575:
+	struct timeval *it_virt = &(p->it_virt_value);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:CODE_INDENT: code indent should use tabs where possible
#431: FILE: kernel/timer.c:579:
+                   worry about large values of usecs.  It should be$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#431: FILE: kernel/timer.c:579:
+		/* This is called every tick, so we don't have to
+                   worry about large values of usecs.  It should be

ERROR:CODE_INDENT: code indent should use tabs where possible
#432: FILE: kernel/timer.c:580:
+                   less than 12ms or so, certainly less than a$

ERROR:CODE_INDENT: code indent should use tabs where possible
#433: FILE: kernel/timer.c:581:
+                   second. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#433: FILE: kernel/timer.c:581:
+                   second. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'it_virt->tv_sec == 0'
#434: FILE: kernel/timer.c:582:
+		if ((it_virt->tv_sec == 0) && (it_virt->tv_usec <= usecs)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'it_virt->tv_usec <= usecs'
#434: FILE: kernel/timer.c:582:
+		if ((it_virt->tv_sec == 0) && (it_virt->tv_usec <= usecs)) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#457: FILE: kernel/timer.c:605:
+	/* We have to be running in system code to call this.  But
+	   when called from a kernel thread, the nest count won't be

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#458: FILE: kernel/timer.c:606:
+	   correct, so fix it. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#512: FILE: kernel/timer.c:660:
+^I^I$

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#531: FILE: kernel/timer.c:679:
+	if (! p->system_code_nest) {
 	    ^

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#568: FILE: kernel/fork.c:629:
+	p->it_real_value = p->it_prof_value = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#569: FILE: kernel/fork.c:630:
+	p->it_real_incr = p->it_prof_incr = 0;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#571: FILE: kernel/fork.c:632:
+	p->it_virt_value = p->it_virt_incr = 0;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#573: FILE: kernel/fork.c:634:
+	p->it_virt_value.tv_sec = p->it_virt_value.tv_usec = 0;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#574: FILE: kernel/fork.c:635:
+	p->it_virt_incr.tv_sec = p->it_virt_incr.tv_usec = 0;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around p->times.tms_utime
#585: FILE: kernel/fork.c:644:
+	init_tms_time(&(p->times.tms_utime));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around p->times.tms_stime
#586: FILE: kernel/fork.c:645:
+	init_tms_time(&(p->times.tms_stime));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around p->times.tms_cutime
#587: FILE: kernel/fork.c:646:
+	init_tms_time(&(p->times.tms_cutime));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around p->times.tms_cstime
#588: FILE: kernel/fork.c:647:
+	init_tms_time(&(p->times.tms_cstime));

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:LINE_SPACING: Missing a blank line after declarations
#618: FILE: kernel/sys.c:811:
+		struct tms external;
+		tms_internal_to_tms(&current->times, &external);

ERROR:CODE_INDENT: code indent should use tabs where possible
#633: FILE: kernel/sys.c:1172:
+^I^I        r.ru_utime = tms_time_to_timeval(p->times.tms_utime);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#634: FILE: kernel/sys.c:1173:
+^I^I        r.ru_stime = tms_time_to_timeval(p->times.tms_stime);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#644: FILE: kernel/sys.c:1179:
+^I^I        r.ru_utime = tms_time_to_timeval(p->times.tms_cutime);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#645: FILE: kernel/sys.c:1180:
+^I^I        r.ru_stime = tms_time_to_timeval(p->times.tms_cstime);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#656: FILE: kernel/sys.c:1187:
+^I^I        tms_time tmsv;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#660: FILE: kernel/sys.c:1191:
+^I^I        r.ru_utime = tms_time_to_timeval(tmsv);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#663: FILE: kernel/sys.c:1194:
+^I^I        r.ru_stime = tms_time_to_timeval(tmsv);$

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#766: FILE: kernel/exit.c:539:
+				current->times.tms_cutime
+				    = add_tms_times(current->times.tms_utime,

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#769: FILE: kernel/exit.c:542:
+				current->times.tms_cutime
+				    = add_tms_times(current->times.tms_cutime,

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#772: FILE: kernel/exit.c:545:
+				current->times.tms_cstime
+				    = add_tms_times(current->times.tms_stime,

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#775: FILE: kernel/exit.c:548:
+				current->times.tms_cstime
+				    = add_tms_times(current->times.tms_cstime,

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:NEW_TYPEDEFS: do not add new typedefs
#834: FILE: include/linux/sched.h:282:
+typedef clock_t tms_time;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#836: FILE: include/linux/sched.h:284:
+typedef struct timeval tms_time;

ERROR:CODE_INDENT: code indent should use tabs where possible
#840: FILE: include/linux/sched.h:288:
+        tms_time tms_utime;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#840: FILE: include/linux/sched.h:288:
+        tms_time tms_utime;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#878: FILE: include/linux/sched.h:326:
+/* Called periodically in case a task is taking all the CPU to avoid
+   curr_usec_time() overflowing. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#878: FILE: include/linux/sched.h:326:
+   curr_usec_time() overflowing. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#884: FILE: include/linux/sched.h:332:
+/* This spin lock protects the virtual itimer structure while we are
+   messing with it. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#884: FILE: include/linux/sched.h:332:
+   messing with it. */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#923: FILE: include/linux/sched.h:371:
+extern unsigned long curr_timestamp(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#926: FILE: include/linux/sched.h:374:
+/* Return the difference in microseconds of ts1-ts2.  This is called
+   by the highres usage time code to get microsecond resolution from

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#927: FILE: include/linux/sched.h:375:
+   some highres clock. */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#928: FILE: include/linux/sched.h:376:
+extern unsigned long timestamp_usec_diff(unsigned long ts1, unsigned long ts2);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#939: FILE: include/linux/sched.h:387:
+/* Called periodically in case a task is taking all the CPU to avoid
+   curr_usec_time() overflowing. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#939: FILE: include/linux/sched.h:387:
+   curr_usec_time() overflowing. */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#950: FILE: include/linux/sched.h:398:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#962: FILE: include/linux/sched.h:478:
+        unsigned long it_virt_value;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#962: FILE: include/linux/sched.h:478:
+        unsigned long it_virt_value;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#964: FILE: include/linux/sched.h:480:
+        struct timeval it_virt_value;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#964: FILE: include/linux/sched.h:480:
+        struct timeval it_virt_value;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#965: FILE: include/linux/sched.h:481:
+        unsigned long last_timestamp;   /* The last usec time taken for the process. */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#965: FILE: include/linux/sched.h:481:
+        unsigned long last_timestamp;   /* The last usec time taken for the process. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#966: FILE: include/linux/sched.h:482:
+        unsigned long system_code_nest; /* How nested am I in system code? */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#966: FILE: include/linux/sched.h:482:
+        unsigned long system_code_nest; /* How nested am I in system code? */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#968: FILE: include/linux/sched.h:484:
+        unsigned long it_real_incr, it_prof_incr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#968: FILE: include/linux/sched.h:484:
+        unsigned long it_real_incr, it_prof_incr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#970: FILE: include/linux/sched.h:486:
+        unsigned long it_virt_incr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#970: FILE: include/linux/sched.h:486:
+        unsigned long it_virt_incr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#972: FILE: include/linux/sched.h:488:
+        struct timeval it_virt_incr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#972: FILE: include/linux/sched.h:488:
+        struct timeval it_virt_incr;$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#985: FILE: include/linux/sched.h:585:
+#define INIT_SYSTEM_CODE_NEST	system_code_nest:		1,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#997: FILE: include/linux/sched.h:640:
+    INIT_SYSTEM_CODE_NEST^I^I^I^I^I^I\$

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1018: FILE: include/asm-i386/hw_irq.h:109:
+^I"popl %eax\n\t" $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1032: FILE: include/asm-i386/hw_irq.h:128:
+        HIGHRES_START_CODE$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1032: FILE: include/asm-i386/hw_irq.h:128:
+        HIGHRES_START_CODE$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000456928.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 33 errors, 62 warnings, 19 checks, 902 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000456928.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
