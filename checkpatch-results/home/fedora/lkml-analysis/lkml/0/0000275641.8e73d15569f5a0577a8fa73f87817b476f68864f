ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#65: FILE: arch/s390/kernel/compat_signal.c:52:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#79: FILE: arch/s390/kernel/compat_signal.c:132:
+sys32_rt_sigsuspend(struct pt_regs * regs, compat_sigset_t __user *unewset,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#80: FILE: arch/s390/kernel/compat_signal.c:133:
+sys32_rt_sigsuspend(struct pt_regs * regs, compat_sigset_t __user *unewset,
+								size_t sigsetsize)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#95: FILE: arch/s390/kernel/compat_signal.c:169:
+sys32_sigaction(int sig, const struct old_sigaction32 __user *act,
+		 struct old_sigaction32 __user *oact)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#109: FILE: arch/s390/kernel/compat_signal.c:204:
+sys32_rt_sigaction(int sig, const struct sigaction32 __user *act,
+	   struct sigaction32 __user *oact,  size_t sigsetsize)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#120: FILE: arch/s390/kernel/compat_signal.c:262:
+sys32_sigaltstack(const stack_t32 __user *uss, stack_t32 __user *uoss,
+							struct pt_regs *regs)

CHECK:SPACING: No space is necessary after a cast
#130: FILE: arch/s390/kernel/compat_signal.c:279:
+	ret =3D do_sigaltstack((stack_t __user *) (uss ? &kss : NULL),

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#130: FILE: arch/s390/kernel/compat_signal.c:279:
+	ret =3D do_sigaltstack((stack_t __user *) (uss ? &kss : NULL),
 	    ^

CHECK:SPACING: No space is necessary after a cast
#131: FILE: arch/s390/kernel/compat_signal.c:280:
+			     (stack_t __user *) (uoss ? &koss : NULL),

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#141: FILE: arch/s390/kernel/compat_signal.c:296:
 }
+static int save_sigregs32(struct pt_regs *regs, _sigregs32 __user *sregs)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#150: FILE: arch/s390/kernel/compat_signal.c:317:
 }
+static int restore_sigregs32(struct pt_regs *regs,_sigregs32 __user *sregs)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#150: FILE: arch/s390/kernel/compat_signal.c:317:
+static int restore_sigregs32(struct pt_regs *regs,_sigregs32 __user *sregs)
                                                  ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#159: FILE: arch/s390/kernel/compat_signal.c:349:
+	sigframe32 __user *frame =3D (sigframe32 __user *)regs->gprs[15];

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#159: FILE: arch/s390/kernel/compat_signal.c:349:
+	sigframe32 __user *frame =3D (sigframe32 __user *)regs->gprs[15];
 	                         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#173: FILE: arch/s390/kernel/compat_signal.c:375:
+	rt_sigframe32 __user *frame =3D (rt_sigframe32 __user *)regs->gprs[15];

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#173: FILE: arch/s390/kernel/compat_signal.c:375:
+	rt_sigframe32 __user *frame =3D (rt_sigframe32 __user *)regs->gprs[15];
 	                            ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#183: FILE: arch/s390/kernel/compat_signal.c:405:
+	set_fs (KERNEL_DS);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#212: FILE: arch/s390/kernel/compat_signal.c:462:
+	sigframe32 __user *frame =3D get_sigframe(ka, regs, sizeof(sigframe32));
 	                         ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 31)
#219: FILE: arch/s390/kernel/compat_signal.c:480:
 		if (__put_user(S390_SYSCALL_OPCODE | __NR_sigreturn,
[...]
+		               (u16 __user *)(frame->retcode)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: arch/s390/kernel/compat_signal.c:481:
+^I^I               (u16 __user *)(frame->retcode)))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#226: FILE: arch/s390/kernel/compat_signal.c:484:
=2D	if (__put_user(regs->gprs[15], (unsigned int *) frame))
+	if (__put_user(regs->gprs[15], (unsigned int __user *) frame))

CHECK:SPACING: No space is necessary after a cast
#227: FILE: arch/s390/kernel/compat_signal.c:485:
+	if (__put_user(regs->gprs[15], (unsigned int __user *) frame))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#236: FILE: arch/s390/kernel/compat_signal.c:512:
+	rt_sigframe32 __user *frame =3D get_sigframe(ka, regs, sizeof(rt_sigframe=
 	                            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#236: FILE: arch/s390/kernel/compat_signal.c:512:
+	rt_sigframe32 __user *frame =3D get_sigframe(ka, regs, sizeof(rt_sigframe=
 	                                                                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#246: FILE: arch/s390/kernel/compat_signal.c:538:
+^I^I                  (u16 __user *)(frame->retcode));$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#250: FILE: arch/s390/kernel/compat_signal.c:540:
=2D	if (__put_user(regs->gprs[15], (unsigned int *) frame))
+	if (__put_user(regs->gprs[15], (unsigned int __user *) frame))

CHECK:SPACING: No space is necessary after a cast
#251: FILE: arch/s390/kernel/compat_signal.c:541:
+	if (__put_user(regs->gprs[15], (unsigned int __user *) frame))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#265: FILE: arch/s390/kernel/debug.c:65:
+static ssize_t debug_output(struct file *file, char __user *user_buf,
=2Dstatic ssize_t debug_input(struct file *file, const char *user_buf,

ERROR:CODE_INDENT: code indent should use tabs where possible
#279: FILE: arch/s390/kernel/debug.c:80:
+                                struct file *file, const char __user *user=$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: arch/s390/kernel/debug.c:80:
+                                struct file *file, const char __user *user=$

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#279: FILE: arch/s390/kernel/debug.c:80:
+                                struct file *file, const char __user *user=
                                                                           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#296: FILE: arch/s390/kernel/debug.c:421:
+			    size_t  len,		/* length of buffer */
+			    loff_t *offset)	      /* offset in the file */

ERROR:CODE_INDENT: code indent should use tabs where possible
#326: FILE: arch/s390/kernel/debug.c:1009:
+                                struct file *file, const char __user *user=$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: arch/s390/kernel/debug.c:1009:
+                                struct file *file, const char __user *user=$

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#326: FILE: arch/s390/kernel/debug.c:1009:
+                                struct file *file, const char __user *user=
                                                                           ^

CHECK:SPACING: No space is necessary after a cast
#353: FILE: arch/s390/kernel/process.c:299:
+	parent_tidptr =3D (int __user *) regs.gprs[4];

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#353: FILE: arch/s390/kernel/process.c:299:
+	parent_tidptr =3D (int __user *) regs.gprs[4];

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#353: FILE: arch/s390/kernel/process.c:299:
+	parent_tidptr =3D (int __user *) regs.gprs[4];
 	              ^

CHECK:SPACING: No space is necessary after a cast
#354: FILE: arch/s390/kernel/process.c:300:
+	child_tidptr =3D (int __user *) regs.gprs[5];

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#354: FILE: arch/s390/kernel/process.c:300:
+	child_tidptr =3D (int __user *) regs.gprs[5];

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#354: FILE: arch/s390/kernel/process.c:300:
+	child_tidptr =3D (int __user *) regs.gprs[5];
 	             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#363: FILE: arch/s390/kernel/process.c:331:
+        filename =3D getname((char __user *) regs.orig_gpr2);$

CHECK:SPACING: No space is necessary after a cast
#363: FILE: arch/s390/kernel/process.c:331:
+        filename =3D getname((char __user *) regs.orig_gpr2);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: arch/s390/kernel/process.c:331:
+        filename =3D getname((char __user *) regs.orig_gpr2);$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#363: FILE: arch/s390/kernel/process.c:331:
+        filename =3D getname((char __user *) regs.orig_gpr2);
                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#369: FILE: arch/s390/kernel/process.c:335:
+        error =3D do_execve(filename, (char __user * __user *) regs.gprs[3=$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: arch/s390/kernel/process.c:335:
+        error =3D do_execve(filename, (char __user * __user *) regs.gprs[3=$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#369: FILE: arch/s390/kernel/process.c:335:
+        error =3D do_execve(filename, (char __user * __user *) regs.gprs[3=
               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#369: FILE: arch/s390/kernel/process.c:335:
+        error =3D do_execve(filename, (char __user * __user *) regs.gprs[3=
                                                                           ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#384: FILE: arch/s390/kernel/profile.c:21:
 }
+static int prof_cpu_mask_write_proc (struct file *file,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#384: FILE: arch/s390/kernel/profile.c:21:
+static int prof_cpu_mask_write_proc (struct file *file,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#385: FILE: arch/s390/kernel/profile.c:22:
+static int prof_cpu_mask_write_proc (struct file *file,
+					const char __user *buffer,

CHECK:SPACING: No space is necessary after a cast
#397: FILE: arch/s390/kernel/ptrace.c:178:
+	return put_user(tmp, (addr_t __user *) data);

CHECK:SPACING: No space is necessary after a cast
#406: FILE: arch/s390/kernel/ptrace.c:272:
+		return put_user(tmp, (unsigned long __user *) data);

CHECK:SPACING: No space is necessary after a cast
#415: FILE: arch/s390/kernel/ptrace.c:293:
+		if (copy_from_user(&parea, (void __user *) addr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#416: FILE: arch/s390/kernel/ptrace.c:294:
+		if (copy_from_user(&parea, (void __user *) addr,
+							sizeof(parea)))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 32)
#424: FILE: arch/s390/kernel/ptrace.c:304:
=2D				if (get_user (tmp, (addr_t *) data))
+				if (get_user (tmp, (addr_t __user *) data))

CHECK:SPACING: No space is necessary after a cast
#425: FILE: arch/s390/kernel/ptrace.c:305:
+				if (get_user (tmp, (addr_t __user *) data))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#425: FILE: arch/s390/kernel/ptrace.c:305:
+				if (get_user (tmp, (addr_t __user *) data))

CHECK:SPACING: No space is necessary after a cast
#434: FILE: arch/s390/kernel/ptrace.c:405:
+	return put_user(tmp, (__u32 __user *) data);

CHECK:SPACING: No space is necessary after a cast
#443: FILE: arch/s390/kernel/ptrace.c:513:
+		return put_user(tmp, (unsigned int __user *) data);

CHECK:SPACING: No space is necessary after a cast
#452: FILE: arch/s390/kernel/ptrace.c:533:
+		if (copy_from_user(&parea, (void __user *) addr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#453: FILE: arch/s390/kernel/ptrace.c:534:
+		if (copy_from_user(&parea, (void __user *) addr,
+							sizeof(parea)))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 32)
#461: FILE: arch/s390/kernel/ptrace.c:544:
=2D				if (get_user (tmp, (__u32 *) data))
+				if (get_user (tmp, (__u32 __user *) data))

CHECK:SPACING: No space is necessary after a cast
#462: FILE: arch/s390/kernel/ptrace.c:545:
+				if (get_user (tmp, (__u32 __user *) data))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#462: FILE: arch/s390/kernel/ptrace.c:545:
+				if (get_user (tmp, (__u32 __user *) data))

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#476: FILE: arch/s390/kernel/signal.c:79:
 }
+asmlinkage long

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#478: FILE: arch/s390/kernel/signal.c:81:
+sys_rt_sigsuspend(struct pt_regs *regs, sigset_t __user *unewset,
+						size_t sigsetsize)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#489: FILE: arch/s390/kernel/signal.c:108:
 }
+asmlinkage long

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#501: FILE: arch/s390/kernel/signal.c:140:
 }
+asmlinkage long

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#503: FILE: arch/s390/kernel/signal.c:142:
+sys_sigaltstack(const stack_t __user *uss, stack_t __user *uoss,
+					struct pt_regs *regs)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#530: FILE: arch/s390/kernel/signal.c:212:
+	sigframe __user *frame =3D (sigframe __user *)regs->gprs[15];

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#530: FILE: arch/s390/kernel/signal.c:212:
+	sigframe __user *frame =3D (sigframe __user *)regs->gprs[15];
 	                       ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#539: FILE: arch/s390/kernel/signal.c:238:
+	rt_sigframe __user *frame =3D (rt_sigframe __user *)regs->gprs[15];

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#539: FILE: arch/s390/kernel/signal.c:238:
+	rt_sigframe __user *frame =3D (rt_sigframe __user *)regs->gprs[15];
 	                          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#569: FILE: arch/s390/kernel/signal.c:313:
+	frame =3D get_sigframe(ka, regs, sizeof(sigframe));
 	      ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 16)
#577: FILE: arch/s390/kernel/signal.c:332:
=2D		if (__put_user(S390_SYSCALL_OPCODE | __NR_sigreturn,=20
[...]
+		if (__put_user(S390_SYSCALL_OPCODE | __NR_sigreturn,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'frame->retcode'
#579: FILE: arch/s390/kernel/signal.c:333:
+		if (__put_user(S390_SYSCALL_OPCODE | __NR_sigreturn,
+	                       (u16 __user *)(frame->retcode)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:CODE_INDENT: code indent should use tabs where possible
#580: FILE: arch/s390/kernel/signal.c:334:
+^I                       (u16 __user *)(frame->retcode)))$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#580: FILE: arch/s390/kernel/signal.c:334:
+		if (__put_user(S390_SYSCALL_OPCODE | __NR_sigreturn,
+	                       (u16 __user *)(frame->retcode)))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#585: FILE: arch/s390/kernel/signal.c:337:
=2D	if (__put_user(regs->gprs[15], (addr_t *) frame))
+	if (__put_user(regs->gprs[15], (addr_t __user *) frame))

CHECK:SPACING: No space is necessary after a cast
#586: FILE: arch/s390/kernel/signal.c:338:
+	if (__put_user(regs->gprs[15], (addr_t __user *) frame))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#597: FILE: arch/s390/kernel/signal.c:367:
+	frame =3D get_sigframe(ka, regs, sizeof(rt_sigframe));
 	      ^

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#607: FILE: arch/s390/kernel/signal.c:394:
+		err |=3D __put_user(S390_SYSCALL_OPCODE | __NR_rt_sigreturn,
 		    ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#608: FILE: arch/s390/kernel/signal.c:395:
+^I                          (u16 __user *)(frame->retcode));$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#612: FILE: arch/s390/kernel/signal.c:397:
=2D	if (__put_user(regs->gprs[15], (addr_t *) frame))
+	if (__put_user(regs->gprs[15], (addr_t __user *) frame))

CHECK:SPACING: No space is necessary after a cast
#613: FILE: arch/s390/kernel/signal.c:398:
+	if (__put_user(regs->gprs[15], (addr_t __user *) frame))

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#634: FILE: arch/s390/kernel/sys_s390.c:94:
 };
+asmlinkage long sys_mmap2(struct mmap_arg_struct __user  *arg)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#643: FILE: arch/s390/kernel/sys_s390.c:106:
 }
+asmlinkage long old_mmap(struct mmap_arg_struct __user *arg)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#652: FILE: arch/s390/kernel/sys_s390.c:130:
 };
+asmlinkage long old_select(struct sel_arg_struct __user *arg)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#663: FILE: arch/s390/kernel/sys_s390.c:149:
+asmlinkage long sys_ipc(uint call, int first, int second,
+				  unsigned long third, void __user *ptr)

CHECK:SPACING: No space is necessary after a cast
#671: FILE: arch/s390/kernel/sys_s390.c:155:
+		return sys_semtimedop (first, (struct sembuf __user *) ptr, second,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#671: FILE: arch/s390/kernel/sys_s390.c:155:
+		return sys_semtimedop (first, (struct sembuf __user *) ptr, second,

CHECK:SPACING: No space is necessary after a cast
#676: FILE: arch/s390/kernel/sys_s390.c:158:
+		return sys_semtimedop (first, (struct sembuf __user *) ptr, second,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#676: FILE: arch/s390/kernel/sys_s390.c:158:
+		return sys_semtimedop (first, (struct sembuf __user *) ptr, second,

CHECK:SPACING: No space is necessary after a cast
#677: FILE: arch/s390/kernel/sys_s390.c:159:
+				       (const struct timespec __user *) third);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 16)
#684: FILE: arch/s390/kernel/sys_s390.c:165:
=2D                if (get_user(fourth.__pad, (void **) ptr))
+                if (get_user(fourth.__pad, (void __user * __user *) ptr))

ERROR:CODE_INDENT: code indent should use tabs where possible
#685: FILE: arch/s390/kernel/sys_s390.c:166:
+                if (get_user(fourth.__pad, (void __user * __user *) ptr))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#685: FILE: arch/s390/kernel/sys_s390.c:166:
+                if (get_user(fourth.__pad, (void __user * __user *) ptr))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#689: FILE: arch/s390/kernel/sys_s390.c:169:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#689: FILE: arch/s390/kernel/sys_s390.c:169:
+        }$

CHECK:SPACING: No space is necessary after a cast
#692: FILE: arch/s390/kernel/sys_s390.c:171:
+		return sys_msgsnd (first, (struct msgbuf __user *) ptr,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#692: FILE: arch/s390/kernel/sys_s390.c:171:
+		return sys_msgsnd (first, (struct msgbuf __user *) ptr,

ERROR:CODE_INDENT: code indent should use tabs where possible
#699: FILE: arch/s390/kernel/sys_s390.c:177:
+                if (copy_from_user (&tmp, (struct ipc_kludge __user *) ptr,$

CHECK:SPACING: No space is necessary after a cast
#699: FILE: arch/s390/kernel/sys_s390.c:177:
+                if (copy_from_user (&tmp, (struct ipc_kludge __user *) ptr,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#699: FILE: arch/s390/kernel/sys_s390.c:177:
+                if (copy_from_user (&tmp, (struct ipc_kludge __user *) ptr,$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#699: FILE: arch/s390/kernel/sys_s390.c:177:
+                if (copy_from_user (&tmp, (struct ipc_kludge __user *) ptr,

ERROR:CODE_INDENT: code indent should use tabs where possible
#710: FILE: arch/s390/kernel/sys_s390.c:186:
+                return sys_msgctl (first, second, (struct msqid_ds __user =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#710: FILE: arch/s390/kernel/sys_s390.c:186:
+                return sys_msgctl (first, second, (struct msqid_ds __user =$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#710: FILE: arch/s390/kernel/sys_s390.c:186:
+                return sys_msgctl (first, second, (struct msqid_ds __user =

CHECK:SPACING: No space is necessary after a cast
#716: FILE: arch/s390/kernel/sys_s390.c:190:
+		ret =3D do_shmat (first, (char __user *) ptr, second, &raddr);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#716: FILE: arch/s390/kernel/sys_s390.c:190:
+		ret =3D do_shmat (first, (char __user *) ptr, second, &raddr);
 		    ^

CHECK:SPACING: No space is necessary after a cast
#720: FILE: arch/s390/kernel/sys_s390.c:193:
+		return put_user (raddr, (ulong __user *) third);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#720: FILE: arch/s390/kernel/sys_s390.c:193:
+		return put_user (raddr, (ulong __user *) third);

ERROR:CODE_INDENT: code indent should use tabs where possible
#732: FILE: arch/s390/kernel/sys_s390.c:202:
+                                   (struct shmid_ds __user *) ptr);$

CHECK:SPACING: No space is necessary after a cast
#732: FILE: arch/s390/kernel/sys_s390.c:202:
+                                   (struct shmid_ds __user *) ptr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#732: FILE: arch/s390/kernel/sys_s390.c:202:
+                                   (struct shmid_ds __user *) ptr);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#764: FILE: arch/s390/kernel/traps.c:190:
=2D		if (__get_user(c, (char *)(regs->psw.addr + i))) {
+		if (__get_user(c, (char __user *)(regs->psw.addr + i))) {

CHECK:SPACING: No space is necessary after a cast
#774: FILE: arch/s390/kernel/traps.c:393:
+		get_user(*((__u16 *) opcode), (__u16 __user *)location);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#799: FILE: include/asm-s390/checksum.h:98:
+csum_partial_copy_from_user(const char __user *src, char *dst,
                                           int len, unsigned int sum,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#817: FILE: include/asm-s390/compat.h:129:
 }
+static inline void __user *compat_alloc_user_space(long len)

CHECK:SPACING: No space is necessary after a cast
#825: FILE: include/asm-s390/compat.h:135:
+	return (void __user *) (stack - len);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#837: FILE: include/asm-s390/debug.h:94:
+				  struct file* file,

CHECK:SPACING: No space is necessary after a cast
#886: FILE: include/asm-s390/idals.h:231:
+		to =3D (void __user *) to + IDA_BLOCK_SIZE;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#886: FILE: include/asm-s390/idals.h:231:
+		to =3D (void __user *) to + IDA_BLOCK_SIZE;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#886: FILE: include/asm-s390/idals.h:231:
+		to =3D (void __user *) to + IDA_BLOCK_SIZE;
 		   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#896: FILE: include/asm-s390/idals.h:241:
+idal_buffer_from_user(struct idal_buffer *ib, const void __user *from, siz=
                                                                           ^

CHECK:SPACING: No space is necessary after a cast
#906: FILE: include/asm-s390/idals.h:251:
+		from =3D (void __user *) from + IDA_BLOCK_SIZE;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#906: FILE: include/asm-s390/idals.h:251:
+		from =3D (void __user *) from + IDA_BLOCK_SIZE;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#906: FILE: include/asm-s390/idals.h:251:
+		from =3D (void __user *) from + IDA_BLOCK_SIZE;
 		     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#930: FILE: include/asm-s390/spinlock.h:51:
+        __asm__ __volatile__("    bras  %0,1f\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#930: FILE: include/asm-s390/spinlock.h:51:
+        __asm__ __volatile__("    bras  %0,1f\n"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#939: FILE: include/asm-s390/spinlock.h:61:
+        __asm__ __volatile__("    bras  %1,1f\n"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#939: FILE: include/asm-s390/spinlock.h:61:
+        __asm__ __volatile__("    bras  %1,1f\n"$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#971: FILE: include/asm-s390/uaccess.h:68:
+extern inline int verify_area(int type, const void __user *addr,
+						unsigned long size)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#994: FILE: include/asm-s390/uaccess.h:173:
+	p =3D (ptr);				\

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#994: FILE: include/asm-s390/uaccess.h:173:
+	p =3D (ptr);				\
 	  ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1017: FILE: include/asm-s390/uaccess.h:239:
+	p =3D (ptr);				\

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1017: FILE: include/asm-s390/uaccess.h:239:
+	p =3D (ptr);				\
 	  ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1030: FILE: include/asm-s390/uaccess.h:251:
+extern long __copy_to_user_asm(const void *from, long n, void __user *to);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1040: FILE: include/asm-s390/uaccess.h:296:
 }
+extern long __copy_from_user_asm(void *to, long n, const void __user *from=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#1040: FILE: include/asm-s390/uaccess.h:296:
+extern long __copy_from_user_asm(void *to, long n, const void __user *from=
                                                                           ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1040: FILE: include/asm-s390/uaccess.h:296:
+extern long __copy_from_user_asm(void *to, long n, const void __user *from=

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1052: FILE: include/asm-s390/uaccess.h:348:
 }
+extern unsigned long __copy_in_user_asm(const void __user *from, long n,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1052: FILE: include/asm-s390/uaccess.h:348:
+extern unsigned long __copy_in_user_asm(const void __user *from, long n,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1053: FILE: include/asm-s390/uaccess.h:349:
+extern unsigned long __copy_in_user_asm(const void __user *from, long n,
+							void __user *to);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1054: FILE: include/asm-s390/uaccess.h:349:
+extern unsigned long __copy_in_user_asm(const void __user *from, long n,
=20

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1063: FILE: include/asm-s390/uaccess.h:369:
+extern long __strncpy_from_user_asm(char *dst, const char __user *src,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1064: FILE: include/asm-s390/uaccess.h:370:
+extern long __strncpy_from_user_asm(char *dst, const char __user *src,
+								long count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1065: FILE: include/asm-s390/uaccess.h:370:
+extern long __strncpy_from_user_asm(char *dst, const char __user *src,
=20

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1077: FILE: include/asm-s390/uaccess.h:380:
 }
+extern long __strnlen_user_asm(const char __user *src, long count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1077: FILE: include/asm-s390/uaccess.h:380:
+extern long __strnlen_user_asm(const char __user *src, long count);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1081: FILE: include/asm-s390/uaccess.h:382:
+strnlen_user(const char __user * src, unsigned long n)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1090: FILE: include/asm-s390/uaccess.h:410:
+extern long __clear_user_asm(void __user *to, long n);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000275641.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 45 errors, 42 warnings, 67 checks, 942 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000275641.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
