WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#39: FILE: fs/proc/proc_misc.c:236:
+extern struct seq_operations nonresident_op;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#39: FILE: fs/proc/proc_misc.c:236:
+extern struct seq_operations nonresident_op;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#42: FILE: fs/proc/proc_misc.c:239:
+       (void)inode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#43: FILE: fs/proc/proc_misc.c:240:
+       return seq_open(file, &nonresident_op);$

WARNING:CONST_STRUCT: struct file_operations should normally be const
#46: FILE: fs/proc/proc_misc.c:243:
+static struct file_operations nonresident_file_operations = {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#47: FILE: fs/proc/proc_misc.c:244:
+       .open           = nonresident_open,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#48: FILE: fs/proc/proc_misc.c:245:
+       .read           = seq_read,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#49: FILE: fs/proc/proc_misc.c:246:
+       .llseek         = seq_lseek,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#50: FILE: fs/proc/proc_misc.c:247:
+       .release        = seq_release,$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#60: FILE: fs/proc/proc_misc.c:619:
+	create_seq_entry("nonresident",S_IRUGO, &nonresident_file_operations);
 	                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#60: FILE: fs/proc/proc_misc.c:619:
+	create_seq_entry("nonresident",S_IRUGO, &nonresident_file_operations);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#82: FILE: mm/nonresident.c:386:
+	m->private = (void*)(unsigned long)*pos;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#89: FILE: mm/nonresident.c:393:
+	if (*pos < (1 << nonres_shift)-1) {
 	                              ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#101: FILE: mm/nonresident.c:405:
+static void bucket_stats(struct nr_bucket * nr_bucket, int * b1, int * b2, int * free)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#101: FILE: mm/nonresident.c:405:
+static void bucket_stats(struct nr_bucket * nr_bucket, int * b1, int * b2, int * free)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#101: FILE: mm/nonresident.c:405:
+static void bucket_stats(struct nr_bucket * nr_bucket, int * b1, int * b2, int * free)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#101: FILE: mm/nonresident.c:405:
+static void bucket_stats(struct nr_bucket * nr_bucket, int * b1, int * b2, int * free)

WARNING:LINE_SPACING: Missing a blank line after declarations
#109: FILE: mm/nonresident.c:413:
+		unsigned int j = nr_bucket->hand[i];
+		do

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#109: FILE: mm/nonresident.c:413:
+		do
+		{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#112: FILE: mm/nonresident.c:416:
+			u32 *slot = &nr_bucket->slot[j];
+			if (GET_LISTID(*slot) != i)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#120: FILE: mm/nonresident.c:424:
+	*b1=b[0];
 	   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#121: FILE: mm/nonresident.c:425:
+	*b2=b[1];
 	   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#122: FILE: mm/nonresident.c:426:
+	*free=b[2];
 	     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#139: FILE: mm/nonresident.c:443:
+	seq_printf(m,"\n");
 	            ^

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#139: FILE: mm/nonresident.c:443:
+	seq_printf(m,"\n");

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#144: FILE: mm/nonresident.c:448:
+struct seq_operations nonresident_op = {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000147179.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 14 warnings, 1 checks, 110 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000147179.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
