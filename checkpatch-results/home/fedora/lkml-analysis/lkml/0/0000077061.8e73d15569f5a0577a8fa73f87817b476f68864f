WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
code, namely to entry.S (a patch for that had been submitted several times).

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#107: FILE: arch/i386/kernel/traps.c:178:
+		printk("\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#142: FILE: arch/i386/kernel/traps.c:225:
+void show_trace(struct task_struct *task, struct pt_regs *regs, unsigned long * stack)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#221: FILE: include/asm-i386/unwind.h:1:
+#ifndef _ASM_I386_UNWIND_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#234: FILE: include/asm-i386/unwind.h:14:
+#include <asm/uaccess.h>

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#241: FILE: include/asm-i386/unwind.h:21:
+#define UNW_PC(frame) (frame)->regs.eip

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#242: FILE: include/asm-i386/unwind.h:22:
+#define UNW_SP(frame) (frame)->regs.esp

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#244: FILE: include/asm-i386/unwind.h:24:
+#define UNW_FP(frame) (frame)->regs.ebp

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#251: FILE: include/asm-i386/unwind.h:31:
+#define UNW_REGISTER_INFO \
+	PTREGS_INFO(eax), \
+	PTREGS_INFO(ecx), \
+	PTREGS_INFO(edx), \
+	PTREGS_INFO(ebx), \
+	PTREGS_INFO(esp), \
+	PTREGS_INFO(ebp), \
+	PTREGS_INFO(esi), \
+	PTREGS_INFO(edi), \
+	PTREGS_INFO(eip)

CHECK:BRACES: braces {} should be used on all arms of this statement
#265: FILE: include/asm-i386/unwind.h:45:
+	if (user_mode_vm(regs))
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#267: FILE: include/asm-i386/unwind.h:47:
+	else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#289: FILE: include/asm-i386/unwind.h:69:
+                         asmlinkage void (*callback)(struct unwind_frame_info *, void *arg),$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: include/asm-i386/unwind.h:69:
+                         asmlinkage void (*callback)(struct unwind_frame_info *, void *arg),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#290: FILE: include/asm-i386/unwind.h:70:
+                         void *arg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: include/asm-i386/unwind.h:70:
+                         void *arg);$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#295: FILE: include/asm-i386/unwind.h:75:
+#if 0 /* This can only work when selector register and EFLAGS saves/restores

ERROR:CODE_INDENT: code indent should use tabs where possible
#296: FILE: include/asm-i386/unwind.h:76:
+         are properly annotated (and tracked in UNW_REGISTER_INFO). */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#296: FILE: include/asm-i386/unwind.h:76:
+#if 0 /* This can only work when selector register and EFLAGS saves/restores
+         are properly annotated (and tracked in UNW_REGISTER_INFO). */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#296: FILE: include/asm-i386/unwind.h:76:
+         are properly annotated (and tracked in UNW_REGISTER_INFO). */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000077061.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 9 warnings, 2 checks, 271 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000077061.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
