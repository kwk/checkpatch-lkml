WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#87: FILE: drivers/s390/cio/qdio.c:69:
+extern struct bus_type ccw_bus_type;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#90: FILE: drivers/s390/cio/qdio.c:71:
+static int qdio_performance_stats = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#175: FILE: drivers/s390/cio/qdio.c:1146:
+		if ((old_pcis==perf_stats.pcis)&&
 		             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '&&' (ctx:VxE)
#175: FILE: drivers/s390/cio/qdio.c:1146:
+		if ((old_pcis==perf_stats.pcis)&&
 		                               ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'old_pcis==perf_stats.pcis'
#175: FILE: drivers/s390/cio/qdio.c:1146:
+		if ((old_pcis==perf_stats.pcis)&&
+		    (old_thinints==perf_stats.thinints))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'old_thinints==perf_stats.thinints'
#175: FILE: drivers/s390/cio/qdio.c:1146:
+		if ((old_pcis==perf_stats.pcis)&&
+		    (old_thinints==perf_stats.thinints))

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#176: FILE: drivers/s390/cio/qdio.c:1147:
+		    (old_thinints==perf_stats.thinints))
 		                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#177: FILE: drivers/s390/cio/qdio.c:1148:
+			perf_stats.start_time_inbound=NOW;
 			                             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#179: FILE: drivers/s390/cio/qdio.c:1150:
+			old_pcis=perf_stats.pcis;
 			        ^

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#193: FILE: drivers/s390/cio/qdio.c:1342:
+		perf_stats.inbound_time+=NOW-perf_stats.start_time_inbound;
 		                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#193: FILE: drivers/s390/cio/qdio.c:1342:
+		perf_stats.inbound_time+=NOW-perf_stats.start_time_inbound;
 		                            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#300: FILE: drivers/s390/cio/qdio.c:1916:
+		perf_stats.start_time_inbound=NOW;
 		                             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#315: FILE: drivers/s390/cio/qdio.c:1974:
+		perf_stats.start_time_inbound=NOW;
 		                             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#352: FILE: drivers/s390/cio/qdio.c:3455:
+		perf_stats.start_time_outbound=NOW;
 		                              ^

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#364: FILE: drivers/s390/cio/qdio.c:3463:
+			perf_stats.outbound_time+=NOW-perf_stats.start_time_outbound;
 			                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#364: FILE: drivers/s390/cio/qdio.c:3463:
+			perf_stats.outbound_time+=NOW-perf_stats.start_time_outbound;
 			                             ^

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#391: FILE: drivers/s390/cio/qdio.c:3508:
+		perf_stats.outbound_time+=NOW-perf_stats.start_time_outbound;
 		                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#391: FILE: drivers/s390/cio/qdio.c:3508:
+		perf_stats.outbound_time+=NOW-perf_stats.start_time_outbound;
 		                             ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#493: FILE: drivers/s390/cio/qdio.c:3655:
+	i = simple_strtoul(buf, &tmp, 16);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i == 0'
#494: FILE: drivers/s390/cio/qdio.c:3656:
+	if ((i == 0) || (i == 1)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i == 1'
#494: FILE: drivers/s390/cio/qdio.c:3656:
+	if ((i == 0) || (i == 1)) {

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#498: FILE: drivers/s390/cio/qdio.c:3660:
+		if (i==0) {
 		     ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#525: FILE: drivers/s390/cio/qdio.c:3724:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#547: FILE: drivers/s390/cio/qdio.c:3841:
+	memset((void*)&perf_stats,0,sizeof(perf_stats));

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#547: FILE: drivers/s390/cio/qdio.c:3841:
+	memset((void*)&perf_stats,0,sizeof(perf_stats));
 	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#547: FILE: drivers/s390/cio/qdio.c:3841:
+	memset((void*)&perf_stats,0,sizeof(perf_stats));
 	                           ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000011479.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 2 warnings, 8 checks, 526 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000011479.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
