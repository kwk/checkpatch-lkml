CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#87: FILE: fs/aio.c:1074:
+			ret = aio_read_single(req, buf,
 					iocb->aio_nbytes, req->ki_pos);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#96: FILE: fs/aio.c:1086:
+			ret = aio_write_single(req, buf,
 					iocb->aio_nbytes, req->ki_pos);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#124: FILE: fs/read_write.c:344:
+ssize_t do_sync_writev(struct file *filp, const struct iovec *iov,
                                     ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#125: FILE: fs/read_write.c:345:
+ssize_t do_sync_writev(struct file *filp, const struct iovec *iov,
+		unsigned long nr_segs, loff_t *ppos)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#130: FILE: fs/read_write.c:350:
+	init_sync_kiocb(&kiocb, filp);
 	                        ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#139: FILE: fs/read_write.c:359:
+ssize_t do_sync_readv(struct file *filp, const struct iovec *iov,
                                    ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#140: FILE: fs/read_write.c:360:
+ssize_t do_sync_readv(struct file *filp, const struct iovec *iov,
+		unsigned long nr_segs, loff_t *ppos)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#145: FILE: fs/read_write.c:365:
+	init_sync_kiocb(&kiocb, filp);
 	                        ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#165: FILE: fs/ext3/file.c:65:
+ext3_file_aio_write(struct kiocb *iocb, const struct iovec *iov,
+		unsigned long nr_segs, loff_t pos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#197: FILE: fs/nfs/file.c:39:
+static ssize_t nfs_file_aio_read(struct kiocb *, const struct iovec *,
+		unsigned long, loff_t);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#199: FILE: fs/nfs/file.c:41:
+static ssize_t nfs_file_aio_write(struct kiocb *, const struct iovec *,
+		unsigned long, loff_t);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#220: FILE: fs/nfs/file.c:97:
+nfs_file_aio_read(struct kiocb *iocb, const struct iovec *iov,
+		unsigned long nr_segs, loff_t pos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#228: FILE: fs/nfs/file.c:104:
+	dfprintk(VFS, "nfs: read(%s/%s, %lu)\n",
 		dentry->d_parent->d_name.name, dentry->d_name.name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#253: FILE: fs/nfs/file.c:225:
+	dfprintk(VFS, "nfs: write(%s/%s(%ld), %lu)\n",
 		dentry->d_parent->d_name.name, dentry->d_name.name,

CHECK:SPACING: No space is necessary after a cast
#255: FILE: fs/nfs/file.c:226:
+		inode->i_ino, (unsigned long) pos);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#294: FILE: include/linux/aio.h:150:
+extern ssize_t aio_read_single(struct kiocb *iocb, char *buf,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#295: FILE: include/linux/aio.h:151:
+extern ssize_t aio_read_single(struct kiocb *iocb, char *buf,
+			size_t count, loff_t pos);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#296: FILE: include/linux/aio.h:152:
+extern ssize_t aio_write_single(struct kiocb *iocb, const char *buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#297: FILE: include/linux/aio.h:153:
+extern ssize_t aio_write_single(struct kiocb *iocb, const char *buf,
+			size_t count, loff_t pos);

WARNING:SPACING: Unnecessary space before function pointer arguments
#308: FILE: include/linux/fs.h:747:
+	ssize_t (*aio_read) (struct kiocb *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiocb *' should also have an identifier name
#308: FILE: include/linux/fs.h:747:
+	ssize_t (*aio_read) (struct kiocb *, const struct iovec *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iovec *' should also have an identifier name
#308: FILE: include/linux/fs.h:747:
+	ssize_t (*aio_read) (struct kiocb *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#308: FILE: include/linux/fs.h:747:
+	ssize_t (*aio_read) (struct kiocb *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#308: FILE: include/linux/fs.h:747:
+	ssize_t (*aio_read) (struct kiocb *, const struct iovec *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#309: FILE: include/linux/fs.h:748:
+	ssize_t (*aio_read) (struct kiocb *, const struct iovec *,
+			unsigned long, loff_t);

WARNING:SPACING: Unnecessary space before function pointer arguments
#312: FILE: include/linux/fs.h:750:
+	ssize_t (*aio_write) (struct kiocb *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiocb *' should also have an identifier name
#312: FILE: include/linux/fs.h:750:
+	ssize_t (*aio_write) (struct kiocb *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iovec *' should also have an identifier name
#312: FILE: include/linux/fs.h:750:
+	ssize_t (*aio_write) (struct kiocb *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#312: FILE: include/linux/fs.h:750:
+	ssize_t (*aio_write) (struct kiocb *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#312: FILE: include/linux/fs.h:750:
+	ssize_t (*aio_write) (struct kiocb *, const struct iovec *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#313: FILE: include/linux/fs.h:751:
+	ssize_t (*aio_write) (struct kiocb *, const struct iovec *,
+			unsigned long, loff_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#323: FILE: include/linux/fs.h:1247:
+extern ssize_t generic_file_aio_read(struct kiocb *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiocb *' should also have an identifier name
#323: FILE: include/linux/fs.h:1247:
+extern ssize_t generic_file_aio_read(struct kiocb *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iovec *' should also have an identifier name
#323: FILE: include/linux/fs.h:1247:
+extern ssize_t generic_file_aio_read(struct kiocb *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#323: FILE: include/linux/fs.h:1247:
+extern ssize_t generic_file_aio_read(struct kiocb *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#323: FILE: include/linux/fs.h:1247:
+extern ssize_t generic_file_aio_read(struct kiocb *, const struct iovec *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#324: FILE: include/linux/fs.h:1248:
+extern ssize_t generic_file_aio_read(struct kiocb *, const struct iovec *,
+				unsigned long, loff_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#325: FILE: include/linux/fs.h:1249:
+extern ssize_t generic_file_aio_write(struct kiocb *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiocb *' should also have an identifier name
#325: FILE: include/linux/fs.h:1249:
+extern ssize_t generic_file_aio_write(struct kiocb *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iovec *' should also have an identifier name
#325: FILE: include/linux/fs.h:1249:
+extern ssize_t generic_file_aio_write(struct kiocb *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#325: FILE: include/linux/fs.h:1249:
+extern ssize_t generic_file_aio_write(struct kiocb *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#325: FILE: include/linux/fs.h:1249:
+extern ssize_t generic_file_aio_write(struct kiocb *, const struct iovec *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#326: FILE: include/linux/fs.h:1250:
+extern ssize_t generic_file_aio_write(struct kiocb *, const struct iovec *,
+				unsigned long, loff_t);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#348: FILE: mm/filemap.c:888:
+generic_file_aio_read(struct kiocb *iocb, const struct iovec *iov,
+		unsigned long nr_segs, loff_t pos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#365: FILE: mm/filemap.c:1648:
+ssize_t generic_file_aio_write(struct kiocb *iocb, const struct iovec *iov,
+		unsigned long nr_segs, loff_t pos)

ERROR:CODE_INDENT: code indent should use tabs where possible
#424: FILE: net/socket.c:611:
+        for (i = 0 ; i < nr_segs ; i++)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#424: FILE: net/socket.c:611:
+        for (i = 0 ; i < nr_segs ; i++)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#425: FILE: net/socket.c:612:
+                tot_len += iov[i].iov_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#425: FILE: net/socket.c:612:
+                tot_len += iov[i].iov_len;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#466: FILE: net/socket.c:645:
+        for (i = 0 ; i < nr_segs ; i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#466: FILE: net/socket.c:645:
+        for (i = 0 ; i < nr_segs ; i++)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#467: FILE: net/socket.c:646:
+                tot_len += iov[i].iov_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#467: FILE: net/socket.c:646:
+                tot_len += iov[i].iov_len;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000423182.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 26 warnings, 23 checks, 380 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000423182.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
