WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#49: 
diff -Naur -X dontdiff linux-2.5.46/drivers/char/raw.c linux-2.5.46.aio/drivers/char/raw.c

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#57: FILE: drivers/char/raw.c:217:
+static ssize_t raw_file_aio_write(struct kiocb *iocb, const char *buf,
+					size_t count, loff_t pos)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#64: FILE: drivers/char/raw.c:224:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#67: FILE: drivers/char/raw.c:227:
+^I.aio_read = ^Igeneric_file_aio_read,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#69: FILE: drivers/char/raw.c:229:
+^I.aio_write = ^Iraw_file_aio_write,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#82: FILE: fs/block_dev.c:119:
+blkdev_direct_IO(int rw, struct kiocb *iocb, const struct iovec *iov,
 			loff_t offset, unsigned long nr_segs)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#102: FILE: fs/direct-io.c:845:
+blockdev_direct_IO(int rw, struct kiocb *iocb, struct inode *inode, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#103: FILE: fs/direct-io.c:846:
+^Istruct block_device *bdev, const struct iovec *iov, loff_t offset, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#103: FILE: fs/direct-io.c:846:
+blockdev_direct_IO(int rw, struct kiocb *iocb, struct inode *inode, 
+	struct block_device *bdev, const struct iovec *iov, loff_t offset, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#143: FILE: fs/ext2/inode.c:634:
+ext2_direct_IO(int rw, struct kiocb *iocb, const struct iovec *iov,
 			loff_t offset, unsigned long nr_segs)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#162: FILE: fs/ext3/inode.c:1415:
+static int ext3_direct_IO(int rw, struct kiocb *iocb,
 			const struct iovec *iov, loff_t offset,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#175: FILE: fs/ext3/inode.c:1447:
+^Iret = blockdev_direct_IO(rw, iocb, inode, inode->i_sb->s_bdev, iov, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#176: FILE: fs/ext3/inode.c:1448:
+	ret = blockdev_direct_IO(rw, iocb, inode, inode->i_sb->s_bdev, iov, 
+				offset, nr_segs, ext3_direct_io_get_blocks);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#189: FILE: fs/jfs/inode.c:314:
+static int jfs_direct_IO(int rw, struct kiocb *iocb, const struct iovec *iov,
 			loff_t offset, unsigned long nr_segs)

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: fs/xfs/linux/xfs_aops.c:611:
+        return blockdev_direct_IO(rw, iocb, inode, NULL,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: fs/xfs/linux/xfs_aops.c:611:
+        return blockdev_direct_IO(rw, iocb, inode, NULL,$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#236: FILE: include/linux/fs.h:314:
+	int (*direct_IO)(int, struct kiocb *, const struct iovec *iov,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiocb *' should also have an identifier name
#236: FILE: include/linux/fs.h:314:
+	int (*direct_IO)(int, struct kiocb *, const struct iovec *iov,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#237: FILE: include/linux/fs.h:315:
+	int (*direct_IO)(int, struct kiocb *, const struct iovec *iov,
 			loff_t offset, unsigned long nr_segs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#252: FILE: include/linux/fs.h:1253:
+extern ssize_t generic_file_aio_write_nolock(struct kiocb *, const struct iovec *,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiocb *' should also have an identifier name
#252: FILE: include/linux/fs.h:1253:
+extern ssize_t generic_file_aio_write_nolock(struct kiocb *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iovec *' should also have an identifier name
#252: FILE: include/linux/fs.h:1253:
+extern ssize_t generic_file_aio_write_nolock(struct kiocb *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#252: FILE: include/linux/fs.h:1253:
+extern ssize_t generic_file_aio_write_nolock(struct kiocb *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#252: FILE: include/linux/fs.h:1253:
+extern ssize_t generic_file_aio_write_nolock(struct kiocb *, const struct iovec *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#253: FILE: include/linux/fs.h:1254:
+extern ssize_t generic_file_aio_write_nolock(struct kiocb *, const struct iovec *,
+				unsigned long, loff_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#262: FILE: include/linux/fs.h:1264:
+extern ssize_t generic_file_direct_IO(int rw, struct kiocb *iocb,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#263: FILE: include/linux/fs.h:1265:
+extern ssize_t generic_file_direct_IO(int rw, struct kiocb *iocb,
 	const struct iovec *iov, loff_t offset, unsigned long nr_segs);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#266: FILE: include/linux/fs.h:1266:
+extern int blockdev_direct_IO(int rw, struct kiocb *iocb, struct inode *inode, $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#266: FILE: include/linux/fs.h:1266:
+extern int blockdev_direct_IO(int rw, struct kiocb *iocb, struct inode *inode, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#267: FILE: include/linux/fs.h:1267:
+^Istruct block_device *bdev, const struct iovec *iov, loff_t offset, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#267: FILE: include/linux/fs.h:1267:
+extern int blockdev_direct_IO(int rw, struct kiocb *iocb, struct inode *inode, 
+	struct block_device *bdev, const struct iovec *iov, loff_t offset, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#293: FILE: mm/filemap.c:816:
+			retval = generic_file_direct_IO(READ, iocb,
 					iov, pos, nr_segs);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#302: FILE: mm/filemap.c:1543:
+generic_file_aio_write_nolock(struct kiocb *iocb, const struct iovec *iov,
 				unsigned long nr_segs, loff_t *ppos)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#314: FILE: mm/filemap.c:1691:
+		written = generic_file_direct_IO(WRITE, iocb,
 					iov, pos, nr_segs);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#323: FILE: mm/filemap.c:1803:
+generic_file_write_nolock(struct file *file, const struct iovec *iov,
+				unsigned long nr_segs, loff_t *ppos)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#344: FILE: mm/filemap.c:1823:
+	BUG_ON(iocb->ki_pos != pos);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#347: FILE: mm/filemap.c:1826:
+^Ierr = generic_file_aio_write_nolock(iocb, &local_iov, 1, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#348: FILE: mm/filemap.c:1827:
+	err = generic_file_aio_write_nolock(iocb, &local_iov, 1, 
+						&iocb->ki_pos);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#365: FILE: mm/filemap.c:1876:
+generic_file_direct_IO(int rw, struct kiocb *iocb, const struct iovec *iov,
+	loff_t offset, unsigned long nr_segs)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000416048.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 11 warnings, 21 checks, 264 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000416048.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
