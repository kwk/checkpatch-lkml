WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#53: FILE: mm/random_policy.c:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#66: FILE: mm/random_policy.c:14:
+#include <linux/buffer_head.h>	/* for try_to_release_page(),
+					buffer_heads_over_limit */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#66: FILE: mm/random_policy.c:14:
+					buffer_heads_over_limit */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#71: FILE: mm/random_policy.c:19:
+	printk(KERN_ERR "Random page replacement policy init!\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#145: FILE: mm/random_policy.c:93:
+		struct zone *zone = page_zone(page);
+		spin_lock_irq(&zone->lru_lock);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#159: FILE: mm/random_policy.c:107:
+static inline void __page_release(struct zone *zone, struct page *page,
+				       struct pagevec *pvec)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#162: FILE: mm/random_policy.c:110:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LINE_SPACING: Missing a blank line after declarations
#183: FILE: mm/random_policy.c:131:
+		struct zone *pagezone = page_zone(page);
+		if (pagezone != zone) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#218: FILE: mm/random_policy.c:166:
+	unsigned long pfn;
+	do {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#228: FILE: mm/random_policy.c:176:
+static int isolate_pages(struct zone *zone, int nr_to_scan,
+		struct list_head *pages, int *nr_scanned)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#238: FILE: mm/random_policy.c:186:
+			BUG();

WARNING:LINE_SPACING: Missing a blank line after declarations
#260: FILE: mm/random_policy.c:208:
+	int nr_scan;
+	page_replace_add_drain();

WARNING:LINE_SPACING: Missing a blank line after declarations
#274: FILE: mm/random_policy.c:222:
+	struct pagevec pvec;
+	pagevec_init(&pvec, 1);

WARNING:LINE_SPACING: Missing a blank line after declarations
#278: FILE: mm/random_policy.c:226:
+		struct page *page = lru_to_page(pages);
+		list_del(&page->lru);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#285: FILE: mm/random_policy.c:233:
+#define K(x) ((x) << (PAGE_SHIFT-10))
                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#289: FILE: mm/random_policy.c:237:
+	printk("%s"

WARNING:SPLIT_STRING: quoted string split across lines
#290: FILE: mm/random_policy.c:238:
+	printk("%s"
+		" free:%lukB"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#291: FILE: mm/random_policy.c:239:
+		" free:%lukB"
+		" min:%lukB"

WARNING:SPLIT_STRING: quoted string split across lines
#292: FILE: mm/random_policy.c:240:
+		" min:%lukB"
+		" low:%lukB"

WARNING:SPLIT_STRING: quoted string split across lines
#293: FILE: mm/random_policy.c:241:
+		" low:%lukB"
+		" high:%lukB"

WARNING:SPLIT_STRING: quoted string split across lines
#294: FILE: mm/random_policy.c:242:
+		" high:%lukB"
+		" cached:%lukB"

WARNING:SPLIT_STRING: quoted string split across lines
#295: FILE: mm/random_policy.c:243:
+		" cached:%lukB"
+		" present:%lukB"

WARNING:SPLIT_STRING: quoted string split across lines
#296: FILE: mm/random_policy.c:244:
+		" present:%lukB"
+		" pages_scanned:%lu"

WARNING:SPLIT_STRING: quoted string split across lines
#297: FILE: mm/random_policy.c:245:
+		" pages_scanned:%lu"
+		" all_unreclaimable? %s"

WARNING:SPLIT_STRING: quoted string split across lines
#298: FILE: mm/random_policy.c:246:
+		" all_unreclaimable? %s"
+		"\n",

WARNING:SPLIT_STRING: quoted string split across lines
#315: FILE: mm/random_policy.c:263:
+		   "\n  pages free     %lu"
+		   "\n        min      %lu"

WARNING:SPLIT_STRING: quoted string split across lines
#316: FILE: mm/random_policy.c:264:
+		   "\n        min      %lu"
+		   "\n        low      %lu"

WARNING:SPLIT_STRING: quoted string split across lines
#317: FILE: mm/random_policy.c:265:
+		   "\n        low      %lu"
+		   "\n        high     %lu"

WARNING:SPLIT_STRING: quoted string split across lines
#318: FILE: mm/random_policy.c:266:
+		   "\n        high     %lu"
+		   "\n        cached   %lu"

WARNING:SPLIT_STRING: quoted string split across lines
#319: FILE: mm/random_policy.c:267:
+		   "\n        cached   %lu"
+		   "\n        scanned  %lu"

WARNING:SPLIT_STRING: quoted string split across lines
#320: FILE: mm/random_policy.c:268:
+		   "\n        scanned  %lu"
+		   "\n        spanned  %lu"

WARNING:SPLIT_STRING: quoted string split across lines
#321: FILE: mm/random_policy.c:269:
+		   "\n        spanned  %lu"
+		   "\n        present  %lu",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#333: FILE: mm/random_policy.c:281:
+void __page_replace_counts(unsigned long *active, unsigned long *inactive,
+			unsigned long *free, struct pglist_data *pgdat)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#341: FILE: mm/random_policy.c:289:
+	for (i = 0; i < MAX_NR_ZONES; i++) {
+		*free += zones[i].free_pages;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#353: FILE: mm/Kconfig:161:
+config MM_POLICY_RANDOM
+	bool "Random"
+	help
+	  This option selects the random replacement policy.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#392: FILE: include/linux/mm_random_policy.h:1:
+#ifndef _LINUX_MM_RANDOM_POLICY_H

CHECK:LINE_SPACING: Please don't use multiple blank lines
#399: FILE: include/linux/mm_random_policy.h:8:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#403: FILE: include/linux/mm_random_policy.h:12:
+extern void __page_replace_add(struct zone *, struct page *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct zone *' should also have an identifier name
#403: FILE: include/linux/mm_random_policy.h:12:
+extern void __page_replace_add(struct zone *, struct page *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#403: FILE: include/linux/mm_random_policy.h:12:
+extern void __page_replace_add(struct zone *, struct page *);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#444: FILE: include/linux/mm_random_data.h:1:
+#ifdef __KERNEL__

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000091650.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 35 warnings, 6 checks, 382 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000091650.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
