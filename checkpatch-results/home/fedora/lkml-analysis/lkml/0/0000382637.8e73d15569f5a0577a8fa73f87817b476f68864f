ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#64: FILE: mm/swapfile.c:394:
+static int unuse_pmd(struct vm_area_struct * vma, pmd_t *dir,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#65: FILE: mm/swapfile.c:395:
+static int unuse_pmd(struct vm_area_struct * vma, pmd_t *dir,
 	unsigned long address, unsigned long size, unsigned long offset,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#99: FILE: mm/swapfile.c:422:
+			unuse_pte(vma, offset + address, pte,
+					entry, page, pte_chainp);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#114: FILE: mm/swapfile.c:434:
+static int unuse_pgd(struct vm_area_struct * vma, pgd_t *dir,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#115: FILE: mm/swapfile.c:435:
+static int unuse_pgd(struct vm_area_struct * vma, pgd_t *dir,
 	unsigned long address, unsigned long size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#140: FILE: mm/swapfile.c:458:
+		if (unuse_pmd(vma, pmd, address, end - address,
+				offset, entry, page, pte_chainp))

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#152: FILE: mm/swapfile.c:467:
+static int unuse_vma(struct vm_area_struct * vma, pgd_t *pgdir,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#153: FILE: mm/swapfile.c:468:
+static int unuse_vma(struct vm_area_struct * vma, pgd_t *pgdir,
+	swp_entry_t entry, struct page *page, struct pte_chain **pte_chainp)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#162: FILE: mm/swapfile.c:476:
+		if (unuse_pgd(vma, pgdir, start, end - start,
+				entry, page, pte_chainp))

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#171: FILE: mm/swapfile.c:484:
+static int unuse_process(struct mm_struct * mm,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#172: FILE: mm/swapfile.c:485:
+static int unuse_process(struct mm_struct * mm,
 			swp_entry_t entry, struct page* page)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#217: FILE: mm/swapfile.c:662:
+			while (*swap_map > 1 && !retval &&
 					(p = p->next) != &start_mm->mmlist) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#228: FILE: mm/swapfile.c:672:
+				if (swcount <= 1)
[...]
+				else if (mm == &init_mm) {
[...]
 					shmem = shmem_unuse(entry, page);
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000382637.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 0 warnings, 9 checks, 237 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000382637.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
