ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#50: FILE: arch/alpha/kernel/traps.c:641:
+	if ((fixup = search_exception_table(pc)) != 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#316: FILE: arch/alpha/mm/extable.c:23:
+                if (mid_value == value)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: arch/alpha/mm/extable.c:23:
+                if (mid_value == value)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#319: FILE: arch/alpha/mm/extable.c:25:
+                else if (mid_value < value)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: arch/alpha/mm/extable.c:25:
+                else if (mid_value < value)$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#370: FILE: arch/alpha/mm/extable.c:39:
+	ret = search_one_table(__start___ex_table, __stop___ex_table-1, addr);
 	                                                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#410: FILE: arch/alpha/mm/fault.c:179:
+	if ((fixup = search_exception_table(regs->pc)) != 0) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#592: FILE: include/asm-alpha/uaccess.h:505:
+extern unsigned search_exception_table(unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#592: FILE: include/asm-alpha/uaccess.h:505:
+extern unsigned search_exception_table(unsigned long);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#592: FILE: include/asm-alpha/uaccess.h:505:
+extern unsigned search_exception_table(unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000406801.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 4 warnings, 2 checks, 476 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000406801.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
