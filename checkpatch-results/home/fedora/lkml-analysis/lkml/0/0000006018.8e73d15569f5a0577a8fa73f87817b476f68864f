WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
> understand the VM, I'm afraid. I'm gathering traces now that I have a good 

WARNING:TRAILING_SEMICOLON: trailing semicolon indicates no statements, indent implies otherwise
#99: FILE: mm/filemap.c:119:
+if (PageInteresting(page)) printk("Removing index %08x from page cache\n", page->index);
 	radix_tree_delete(&mapping->page_tree, page->index);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#99: FILE: mm/filemap.c:119:
+if (PageInteresting(page)) printk("Removing index %08x from page cache\n", page->index);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#99: FILE: mm/filemap.c:119:
+if (PageInteresting(page)) printk("Removing index %08x from page cache\n", page->index);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#146: FILE: mm/memory.c:671:
+	printk("Unmapped index %08x at %08x\n", page->index, addr);

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#154: FILE: mm/memory.c:1610:
+if (PageInteresting(new_page)) printk("do_wp_page: mapping index %08x at %08lx\n", new_page->index, address);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:TRAILING_SEMICOLON: trailing semicolon indicates no statements, indent implies otherwise
#154: FILE: mm/memory.c:1610:
+if (PageInteresting(new_page)) printk("do_wp_page: mapping index %08x at %08lx\n", new_page->index, address);
 		update_mmu_cache(vma, address, entry);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#154: FILE: mm/memory.c:1610:
+if (PageInteresting(new_page)) printk("do_wp_page: mapping index %08x at %08lx\n", new_page->index, address);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#154: FILE: mm/memory.c:1610:
+if (PageInteresting(new_page)) printk("do_wp_page: mapping index %08x at %08lx\n", new_page->index, address);

WARNING:LONG_LINE: line length of 147 exceeds 100 columns
#162: FILE: mm/memory.c:2255:
+if (PageInteresting(new_page)) printk("do_no_page: mapping index %08x at %08lx (%s)\n", new_page->index, address, write_access ? "write" : "read");

WARNING:TRAILING_SEMICOLON: trailing semicolon indicates no statements, indent implies otherwise
#162: FILE: mm/memory.c:2255:
+if (PageInteresting(new_page)) printk("do_no_page: mapping index %08x at %08lx (%s)\n", new_page->index, address, write_access ? "write" : "read");
 		set_pte_at(mm, address, page_table, entry);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#162: FILE: mm/memory.c:2255:
+if (PageInteresting(new_page)) printk("do_no_page: mapping index %08x at %08lx (%s)\n", new_page->index, address, write_access ? "write" : "read");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#162: FILE: mm/memory.c:2255:
+if (PageInteresting(new_page)) printk("do_no_page: mapping index %08x at %08lx (%s)\n", new_page->index, address, write_access ? "write" : "read");

WARNING:TRAILING_SEMICOLON: trailing semicolon indicates no statements, indent implies otherwise
#174: FILE: mm/page-writeback.c:816:
+if (PageInteresting(page)) printk("Setting page %08x dirty\n", page->index);
 		return (*spd)(page);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#174: FILE: mm/page-writeback.c:816:
+if (PageInteresting(page)) printk("Setting page %08x dirty\n", page->index);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#174: FILE: mm/page-writeback.c:816:
+if (PageInteresting(page)) printk("Setting page %08x dirty\n", page->index);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 0)
#181: FILE: mm/page-writeback.c:870:
 		if (mapping_cap_account_dirty(mapping)) {
+if (PageInteresting(page)) printk("cpd_for_io: index %08x\n", page->index);

WARNING:TRAILING_SEMICOLON: trailing semicolon indicates no statements, indent implies otherwise
#182: FILE: mm/page-writeback.c:871:
+if (PageInteresting(page)) printk("cpd_for_io: index %08x\n", page->index);
 			page_mkclean(page);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#182: FILE: mm/page-writeback.c:871:
+if (PageInteresting(page)) printk("cpd_for_io: index %08x\n", page->index);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#182: FILE: mm/page-writeback.c:871:
+if (PageInteresting(page)) printk("cpd_for_io: index %08x\n", page->index);

WARNING:TRAILING_SEMICOLON: trailing semicolon indicates no statements, indent implies otherwise
#194: FILE: mm/rmap.c:451:
+if (PageInteresting(page)) printk("cleaning index %08x at %08x\n", page->index, address);
 		flush_cache_page(vma, address, pte_pfn(*pte));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#194: FILE: mm/rmap.c:451:
+if (PageInteresting(page)) printk("cleaning index %08x at %08x\n", page->index, address);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#194: FILE: mm/rmap.c:451:
+if (PageInteresting(page)) printk("cleaning index %08x at %08x\n", page->index, address);

WARNING:TRAILING_SEMICOLON: trailing semicolon indicates no statements, indent implies otherwise
#202: FILE: mm/rmap.c:641:
+if (PageInteresting(page)) printk("unmapping index %08x from %08lx\n", page->index, address);
 	/* Nuke the page table entry. */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#202: FILE: mm/rmap.c:641:
+if (PageInteresting(page)) printk("unmapping index %08x from %08lx\n", page->index, address);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#202: FILE: mm/rmap.c:641:
+if (PageInteresting(page)) printk("unmapping index %08x from %08lx\n", page->index, address);

WARNING:TRAILING_SEMICOLON: trailing semicolon indicates no statements, indent implies otherwise
#210: FILE: mm/rmap.c:772:
+if (PageInteresting(page)) printk("Cluster-unmapping %08x from %08lx\n", page->index, address);
 		/* Nuke the page table entry. */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#210: FILE: mm/rmap.c:772:
+if (PageInteresting(page)) printk("Cluster-unmapping %08x from %08lx\n", page->index, address);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#210: FILE: mm/rmap.c:772:
+if (PageInteresting(page)) printk("Cluster-unmapping %08x from %08lx\n", page->index, address);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000006018.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 21 warnings, 0 checks, 112 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000006018.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
