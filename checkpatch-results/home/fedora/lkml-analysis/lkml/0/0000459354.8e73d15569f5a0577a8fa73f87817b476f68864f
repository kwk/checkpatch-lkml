CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#179: FILE: fs/inode.c:567:
+			inode->i_state = I_LOCK|I_NEW;
 			                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#210: FILE: fs/inode.c:640:
+	unsigned long tmp = hashval + ((unsigned long) sb / L1_CACHE_BYTES);

WARNING:LONG_LINE: line length of 158 exceeds 100 columns
#219: FILE: fs/inode.c:706:
+struct inode *iget5_locked(struct super_block *sb, unsigned long hashval, int (*test)(struct inode *, void *), int (*set)(struct inode *, void *), void *data)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#222: FILE: fs/inode.c:708:
+	struct list_head * head = inode_hashtable + hash(sb, hashval);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#240: FILE: fs/inode.c:737:
+	struct list_head * head = inode_hashtable + hash(sb, ino);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#318: FILE: fs/nfs/inode.c:656:
+	if (!(inode = iget5_locked(sb, hash, nfs_find_actor, nfs_init_locked, &desc)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#328: FILE: fs/nfs/inode.c:665:
+		 * such as stat(2) */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#371: FILE: fs/reiserfs/inode.c:1166:
+	reiserfs_warning ("vs-13070: reiserfs_read_locked_inode: "

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#377: FILE: fs/reiserfs/inode.c:1196:
     if( ( inode -> i_nlink == 0 ) && 
[...]
+	    reiserfs_warning( "vs-13075: reiserfs_read_locked_inode: "

ERROR:SPACING: space prohibited after that open parenthesis '('
#380: FILE: fs/reiserfs/inode.c:1198:
+	    reiserfs_warning( "vs-13075: reiserfs_read_locked_inode: "

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#404: FILE: include/linux/fs.h:1258:
+extern void __insert_inode_hash(struct inode *, unsigned long hashval);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#404: FILE: include/linux/fs.h:1258:
+extern void __insert_inode_hash(struct inode *, unsigned long hashval);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#406: FILE: include/linux/fs.h:1260:
+static inline void insert_inode_hash(struct inode *inode) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000459354.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 5 warnings, 3 checks, 340 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000459354.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
