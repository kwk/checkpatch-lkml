WARNING:TYPO_SPELLING: 'didnt' may be misspelled - perhaps 'didn't'?
#46: 
actually i've seen this bug long time ago, just didnt remember whether 
                                                ^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#117: FILE: include/linux/sysctl.h:96:
+	KERN_PRINT_FATAL=17,	/* int: print fatal signals (0/1) */
 	                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#129: FILE: kernel/signal.c:766:
+int print_fatal_signals = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#133: FILE: kernel/signal.c:770:
+	printk("%s/%d: potentially unexpected fatal signal %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#134: FILE: kernel/signal.c:771:
+	printk("%s/%d: potentially unexpected fatal signal %d.\n",
+		current->comm, current->pid, signr);

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#136: FILE: kernel/signal.c:773:
+#ifdef __i386__

Architecture specific defines should be avoided wherever
possible.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#137: FILE: kernel/signal.c:774:
+	printk("code at %08lx: ", regs->eip);

WARNING:LINE_SPACING: Missing a blank line after declarations
#140: FILE: kernel/signal.c:777:
+		int i;
+		for (i = 0; i < 16; i++) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#144: FILE: kernel/signal.c:781:
+			printk("%02x ", insn);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#148: FILE: kernel/signal.c:785:
+	printk("\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#154: FILE: kernel/signal.c:791:
+	get_option (&str, &print_fatal_signals);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#159: FILE: kernel/signal.c:796:
+__setup("print-fatal-signals=", setup_print_fatal_signals);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'signr == SIGSEGV'
#167: FILE: kernel/signal.c:1782:
+		if ((signr == SIGSEGV) && print_fatal_signals) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'signr != SIGKILL'
#179: FILE: kernel/signal.c:1882:
+		if ((signr != SIGKILL) && print_fatal_signals)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000075833.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 7 warnings, 5 checks, 96 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000075833.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
