WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
round-trips.  As long as the client doesn't retrieve any acls itself, only the

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'nfs_forget_cached_acls', this function's name, in a string
#87: FILE: fs/nfs/inode.c:1186:
+	dprintk("NFS: nfs_forget_cached_acls(%s/%ld)\n", inode->i_sb->s_id,

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#105: FILE: fs/nfs/inode.c:1204:
+	} else switch(type) {
+		case ACL_TYPE_ACCESS:
[...]
+		case ACL_TYPE_DEFAULT:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required before the open parenthesis '('
#105: FILE: fs/nfs/inode.c:1204:
+	} else switch(type) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#105: FILE: fs/nfs/inode.c:1204:
+	} else switch(type) {

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'nfs_get_cached_acl', this function's name, in a string
#122: FILE: fs/nfs/inode.c:1221:
+	dprintk("NFS: nfs_get_cached_acl(%s/%ld, %d) = %p\n", inode->i_sb->s_id,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'nfs_cache_acls', this function's name, in a string
#134: FILE: fs/nfs/inode.c:1233:
+	dprintk("nfs_cache_acls(%s/%ld, %p, %p)\n", inode->i_sb->s_id,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#153: FILE: fs/nfs/inode.c:1304:
 			|| inode->i_uid != fattr->uid
+			|| inode->i_gid != fattr->gid) {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#228: FILE: fs/nfs/nfs3proc.c:803:
+		args.mask |= NFS3_ACLCNT|NFS3_ACL;
 		                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#230: FILE: fs/nfs/nfs3proc.c:805:
+		args.mask |= NFS3_DFACLCNT|NFS3_DFACL;
 		                          ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#281: FILE: include/linux/nfs_fs.h:300:
+extern struct posix_acl *nfs_get_cached_acl(struct inode *, int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#281: FILE: include/linux/nfs_fs.h:300:
+extern struct posix_acl *nfs_get_cached_acl(struct inode *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#281: FILE: include/linux/nfs_fs.h:300:
+extern struct posix_acl *nfs_get_cached_acl(struct inode *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#282: FILE: include/linux/nfs_fs.h:301:
+extern void nfs_cache_acls(struct inode *, struct posix_acl *, struct posix_acl *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#282: FILE: include/linux/nfs_fs.h:301:
+extern void nfs_cache_acls(struct inode *, struct posix_acl *, struct posix_acl *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct posix_acl *' should also have an identifier name
#282: FILE: include/linux/nfs_fs.h:301:
+extern void nfs_cache_acls(struct inode *, struct posix_acl *, struct posix_acl *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct posix_acl *' should also have an identifier name
#282: FILE: include/linux/nfs_fs.h:301:
+extern void nfs_cache_acls(struct inode *, struct posix_acl *, struct posix_acl *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000204250.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 9 warnings, 5 checks, 227 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000204250.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
