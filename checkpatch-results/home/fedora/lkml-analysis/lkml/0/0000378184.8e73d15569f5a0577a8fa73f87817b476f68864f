WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#49: 
diff -ur -X /home/axboe/cdrom/exclude /opt/kernel/linux-2.4.21-pre7/drivers/block/ll_rw_blk.c linux-2.4.21-pre7/drivers/block/ll_rw_blk.c

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#79: FILE: drivers/block/ll_rw_blk.c:616:
+	BUG_ON(rw != READ && rw != WRITE);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#90: FILE: drivers/block/ll_rw_blk.c:627:
+		rq->bh = rq->bhtail = NULL;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#124: FILE: drivers/block/ll_rw_blk.c:861:
+		    waitqueue_active(rl->wait))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#155: FILE: drivers/ide/ide-cd.c:1613:
+		ide_init_drive_cmd (req);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#173: FILE: drivers/ide/ide-cd.c:2494:
+	ide_init_drive_cmd (req);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#194: FILE: drivers/ide/ide-disk.c:1422:
+	ide_init_drive_cmd (rq);

CHECK:SPACING: No space is necessary after a cast
#199: FILE: drivers/ide/ide-disk.c:1426:
+	(void) ide_do_drive_cmd (drive, rq, ide_wait);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#199: FILE: drivers/ide/ide-disk.c:1426:
+	(void) ide_do_drive_cmd (drive, rq, ide_wait);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#213: FILE: drivers/ide/ide-io.c:1286:
+	rq->special = rq->buffer = NULL;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#214: FILE: drivers/ide/ide-io.c:1287:
+	rq->bh = rq->bhtail = NULL;

WARNING:LONG_LINE: line length of 154 exceeds 100 columns
#252: FILE: drivers/ide/ide-taskfile.c:1333:
+			rq->current_nr_sectors = rq->nr_sectors = (args->hobRegister[IDE_NSECTOR_OFFSET_HOB] << 8) | args->tfRegister[IDE_NSECTOR_OFFSET];

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#252: FILE: drivers/ide/ide-taskfile.c:1333:
+			rq->current_nr_sectors = rq->nr_sectors = (args->hobRegister[IDE_NSECTOR_OFFSET_HOB] << 8) | args->tfRegister[IDE_NSECTOR_OFFSET];

CHECK:CAMELCASE: Avoid CamelCase: <hobRegister>
#252: FILE: drivers/ide/ide-taskfile.c:1333:
+			rq->current_nr_sectors = rq->nr_sectors = (args->hobRegister[IDE_NSECTOR_OFFSET_HOB] << 8) | args->tfRegister[IDE_NSECTOR_OFFSET];

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <tfRegister>
#252: FILE: drivers/ide/ide-taskfile.c:1333:
+			rq->current_nr_sectors = rq->nr_sectors = (args->hobRegister[IDE_NSECTOR_OFFSET_HOB] << 8) | args->tfRegister[IDE_NSECTOR_OFFSET];

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#257: FILE: drivers/ide/ide-taskfile.c:1336:
+			rq->current_nr_sectors = rq->nr_sectors = data_size / SECTOR_SIZE;

WARNING:LINE_SPACING: Missing a blank line after declarations
#305: FILE: drivers/ide/ide-taskfile.c:1683:
+		struct request *rq = blk_get_request(&drive->queue, WRITE, GFP_KERNEL);
+		ide_init_drive_cmd(rq);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#318: FILE: drivers/ide/ide-taskfile.c:1736:
+		struct request *rq = blk_get_request(&drive->queue, WRITE, GFP_KERNEL);
+		ide_init_drive_cmd(rq);

CHECK:SPACING: No space is necessary after a cast
#361: FILE: drivers/ide/ide.c:1372:
+	(void) ide_do_drive_cmd(drive, rq, ide_wait);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#421: FILE: include/linux/blkdev.h:222:
+extern struct request *blk_get_request(request_queue_t *, int, int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'request_queue_t *' should also have an identifier name
#421: FILE: include/linux/blkdev.h:222:
+extern struct request *blk_get_request(request_queue_t *, int, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#421: FILE: include/linux/blkdev.h:222:
+extern struct request *blk_get_request(request_queue_t *, int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#421: FILE: include/linux/blkdev.h:222:
+extern struct request *blk_get_request(request_queue_t *, int, int);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000378184.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 13 warnings, 10 checks, 330 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000378184.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
