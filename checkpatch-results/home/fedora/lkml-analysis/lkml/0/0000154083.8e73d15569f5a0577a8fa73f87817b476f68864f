WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#100: 
diff -X ../dontdiff -purN madinfo/drivers/scsi/ibmvscsi/ibmvscsi.c large-sg/drivers/scsi/ibmvscsi/ibmvscsi.c

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#131: FILE: drivers/scsi/ibmvscsi/ibmvscsi.c:171:
+			dma_free_coherent(hostdata->dev,
+				  SG_ALL * sizeof(struct memory_descriptor),

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#146: FILE: drivers/scsi/ibmvscsi/ibmvscsi.c:300:
+					numbuf: MAX_INDIRECT_BUFS;
 					      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#146: FILE: drivers/scsi/ibmvscsi/ibmvscsi.c:300:
+					numbuf: MAX_INDIRECT_BUFS;

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#152: FILE: drivers/scsi/ibmvscsi/ibmvscsi.c:305:
+					numbuf: MAX_INDIRECT_BUFS;
 					      ^

WARNING:INDENTED_LABEL: labels should not be indented
#152: FILE: drivers/scsi/ibmvscsi/ibmvscsi.c:305:
+					numbuf: MAX_INDIRECT_BUFS;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#157: FILE: drivers/scsi/ibmvscsi/ibmvscsi.c:310:
+static void unmap_sg_list(int num_entries, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#158: FILE: drivers/scsi/ibmvscsi/ibmvscsi.c:311:
+static void unmap_sg_list(int num_entries, 
+		struct device *dev,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#160: FILE: drivers/scsi/ibmvscsi/ibmvscsi.c:313:
+{ $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#165: FILE: drivers/scsi/ibmvscsi/ibmvscsi.c:318:
+		dma_unmap_single(dev,
+			md[i].virtual_address,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#205: FILE: drivers/scsi/ibmvscsi/ibmvscsi.c:357:
+static int map_sg_list(int num_entries, $

WARNING:LINE_SPACING: Missing a blank line after declarations
#215: FILE: drivers/scsi/ibmvscsi/ibmvscsi.c:367:
+		struct scatterlist *sg_entry = &sg[i];
+		descr->virtual_address = sg_dma_address(sg_entry);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: drivers/scsi/ibmvscsi/ibmvscsi.c:371:
+ ^I}$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#219: FILE: drivers/scsi/ibmvscsi/ibmvscsi.c:371:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: drivers/scsi/ibmvscsi/ibmvscsi.c:371:
+ ^I}$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#273: FILE: drivers/scsi/ibmvscsi/ibmvscsi.c:431:
+		evt_struct->ext_list =(struct memory_descriptor*)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#273: FILE: drivers/scsi/ibmvscsi/ibmvscsi.c:431:
+		evt_struct->ext_list =(struct memory_descriptor*)
 		                     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#274: FILE: drivers/scsi/ibmvscsi/ibmvscsi.c:432:
+^I^I^Idma_alloc_coherent(dev, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#275: FILE: drivers/scsi/ibmvscsi/ibmvscsi.c:433:
+			dma_alloc_coherent(dev, 
+				SG_ALL * sizeof(struct memory_descriptor),

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#277: FILE: drivers/scsi/ibmvscsi/ibmvscsi.c:435:
+		if (!evt_struct->ext_list) {
+		    printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#278: FILE: drivers/scsi/ibmvscsi/ibmvscsi.c:436:
+		    printk(KERN_ERR

ERROR:CODE_INDENT: code indent should use tabs where possible
#279: FILE: drivers/scsi/ibmvscsi/ibmvscsi.c:437:
+^I^I   ^I"ibmvscsi: Can't allocate memory for indirect table\n");$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#279: FILE: drivers/scsi/ibmvscsi/ibmvscsi.c:437:
+^I^I   ^I"ibmvscsi: Can't allocate memory for indirect table\n");$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#281: FILE: drivers/scsi/ibmvscsi/ibmvscsi.c:439:
+^I^I^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#282: FILE: drivers/scsi/ibmvscsi/ibmvscsi.c:440:
+			
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#285: FILE: drivers/scsi/ibmvscsi/ibmvscsi.c:443:
+^Itotal_length = map_sg_list(sg_mapped, sg, evt_struct->ext_list);^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#291: FILE: drivers/scsi/ibmvscsi/ibmvscsi.c:449:
+	memcpy(indirect->list, evt_struct->ext_list,
+		MAX_INDIRECT_BUFS * sizeof(struct memory_descriptor));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#292: FILE: drivers/scsi/ibmvscsi/ibmvscsi.c:450:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#293: FILE: drivers/scsi/ibmvscsi/ibmvscsi.c:451:
+ ^Ireturn 1;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#293: FILE: drivers/scsi/ibmvscsi/ibmvscsi.c:451:
+ ^Ireturn 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: drivers/scsi/ibmvscsi/ibmvscsi.c:451:
+ ^Ireturn 1;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#335: FILE: drivers/scsi/ibmvscsi/ibmvscsi.c:621:
+^I^I^I       evt_struct, $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'srp_cmd->data_out_format == SRP_INDIRECT_BUFFER'
#387: FILE: drivers/scsi/ibmvscsi/ibmvscsi.c:686:
+	if (((srp_cmd->data_out_format == SRP_INDIRECT_BUFFER) ||
+	    (srp_cmd->data_in_format == SRP_INDIRECT_BUFFER)) &&
+	    (indirect->head.virtual_address == 0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'srp_cmd->data_in_format == SRP_INDIRECT_BUFFER'
#387: FILE: drivers/scsi/ibmvscsi/ibmvscsi.c:686:
+	if (((srp_cmd->data_out_format == SRP_INDIRECT_BUFFER) ||
+	    (srp_cmd->data_in_format == SRP_INDIRECT_BUFFER)) &&
+	    (indirect->head.virtual_address == 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'indirect->head.virtual_address == 0'
#387: FILE: drivers/scsi/ibmvscsi/ibmvscsi.c:686:
+	if (((srp_cmd->data_out_format == SRP_INDIRECT_BUFFER) ||
+	    (srp_cmd->data_in_format == SRP_INDIRECT_BUFFER)) &&
+	    (indirect->head.virtual_address == 0)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#388: FILE: drivers/scsi/ibmvscsi/ibmvscsi.c:687:
+	if (((srp_cmd->data_out_format == SRP_INDIRECT_BUFFER) ||
+	    (srp_cmd->data_in_format == SRP_INDIRECT_BUFFER)) &&

ERROR:TRAILING_WHITESPACE: trailing whitespace
#417: FILE: drivers/scsi/ibmvscsi/ibmvscsi.c:1113:
+^I^I^I^I       tmp_evt,^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000154083.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 11 warnings, 10 checks, 316 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000154083.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
