WARNING:TYPO_SPELLING: 'entrys' may be misspelled - perhaps 'entries'?
#183: 
entrys by hash value and split somewhere in the middle of the sorted
^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'desireable' may be misspelled - perhaps 'desirable'?
#199: 
key collisions.  It is desireable to avoid splitting such sequences
                       ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'sucessor' may be misspelled - perhaps 'successor'?
#204: 
index entry that points at the sucessor block, which is naturally
                               ^^^^^^^^

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#385: FILE: fs/ext2/dir.c:75:
+	unsigned blockshift = EXT2_BLOCK_SIZE_BITS(sb);

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#387: FILE: fs/ext2/dir.c:77:
+	int dir_base = is_dx(inode)? dx_dir_base(sb): 0;
 	                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#387: FILE: fs/ext2/dir.c:77:
+	int dir_base = is_dx(inode)? dx_dir_base(sb): 0;
 	                                            ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#401: FILE: fs/ext2/dir.c:84:
+	while (!error && !stored && filp->f_pos < inode->i_size - (dir_base << blockshift))
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#404: FILE: fs/ext2/dir.c:87:
+		bh = ext2_bread (inode, dir_base + blk, 0, &err);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#415: FILE: fs/ext2/dir.c:100:
+			for (i = 16 >> (blockshift - 9), num = 0; i > 0; i--)
+			{

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#417: FILE: fs/ext2/dir.c:102:
+				tmp = ext2_getblk (inode, dir_base + ++blk, 0, &err);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'size' - possible side-effects?
#463: FILE: fs/ext2/namei.c:46:
+#define COMBSORT(size, i, j, COMPARE, EXCHANGE) { \
+	unsigned gap = size, more, i; \
+	do { \
+		if (gap > 1) gap = gap*10/13; \
+		if (gap - 9 < 2) gap = 11; \
+		for (i = size - 1, more = gap > 1; i >= gap; i--) { \
+			int j = i - gap; \
+			if (COMPARE) { EXCHANGE; more = 1; } } \
+	} while (more); }

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'i' - possible side-effects?
#463: FILE: fs/ext2/namei.c:46:
+#define COMBSORT(size, i, j, COMPARE, EXCHANGE) { \
+	unsigned gap = size, more, i; \
+	do { \
+		if (gap > 1) gap = gap*10/13; \
+		if (gap - 9 < 2) gap = 11; \
+		for (i = size - 1, more = gap > 1; i >= gap; i--) { \
+			int j = i - gap; \
+			if (COMPARE) { EXCHANGE; more = 1; } } \
+	} while (more); }

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#464: FILE: fs/ext2/namei.c:47:
+	unsigned gap = size, more, i; \

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#466: FILE: fs/ext2/namei.c:49:
+		if (gap > 1) gap = gap*10/13; \
 		                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#466: FILE: fs/ext2/namei.c:49:
+		if (gap > 1) gap = gap*10/13; \
 		                         ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#466: FILE: fs/ext2/namei.c:49:
+		if (gap > 1) gap = gap*10/13; \

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#467: FILE: fs/ext2/namei.c:50:
+		if (gap - 9 < 2) gap = 11; \

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#470: FILE: fs/ext2/namei.c:53:
+			if (COMPARE) { EXCHANGE; more = 1; } } \

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#475: FILE: fs/ext2/namei.c:58:
+#define exchange(x, y) do { typeof(x) z = x; x = y; y = z; } while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'y' - possible side-effects?
#475: FILE: fs/ext2/namei.c:58:
+#define exchange(x, y) do { typeof(x) z = x; x = y; y = z; } while (0)

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#483: FILE: fs/ext2/namei.c:66:
+struct dx_root
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#485: FILE: fs/ext2/namei.c:68:
+	struct dx_root_info
+	{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#491: FILE: fs/ext2/namei.c:74:
+	struct dx_entry
+	{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#494: FILE: fs/ext2/namei.c:77:
+^I} $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#503: FILE: fs/ext2/namei.c:86:
+struct dx_frame
+{

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#508: FILE: fs/ext2/namei.c:91:
+	unsigned count;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#509: FILE: fs/ext2/namei.c:92:
+	unsigned limit;

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#517: FILE: fs/ext2/namei.c:100:
+struct dx_map_entry
+{

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#522: FILE: fs/ext2/namei.c:105:
+#define MAX_DX_MAP (PAGE_SIZE/EXT2_DIR_REC_LEN(1) + 1)
                              ^

WARNING:IF_1: Consider removing the #if 1 and its #endif
#525: FILE: fs/ext2/namei.c:108:
+#if 1

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#526: FILE: fs/ext2/namei.c:109:
+unsigned dx_hash (const char *name, int namelen)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#526: FILE: fs/ext2/namei.c:109:
+unsigned dx_hash (const char *name, int namelen)

WARNING:LINE_SPACING: Missing a blank line after declarations
#529: FILE: fs/ext2/namei.c:112:
+	u32 hash0 = 0x12a3fe2d, hash1 = 0x37abe8f9;
+	if (!namelen) return 0;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#529: FILE: fs/ext2/namei.c:112:
+	if (!namelen) return 0;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#530: FILE: fs/ext2/namei.c:113:
+	while (namelen--)
+	{

WARNING:LINE_SPACING: Missing a blank line after declarations
#533: FILE: fs/ext2/namei.c:116:
+		u32 hash = hash1 + (hash0 ^ (*name++ * 71523));
+		if (hash < 0) hash -= 0x7fffffff;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#533: FILE: fs/ext2/namei.c:116:
+		if (hash < 0) hash -= 0x7fffffff;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#544: FILE: fs/ext2/namei.c:127:
+int dx_hash (const char *name, int namelen)

WARNING:LINE_SPACING: Missing a blank line after declarations
#547: FILE: fs/ext2/namei.c:130:
+	u32 hash = 0;
+	if (!namelen) BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#547: FILE: fs/ext2/namei.c:130:
+	if (!namelen) BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#547: FILE: fs/ext2/namei.c:130:
+	if (!namelen) BUG();

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#548: FILE: fs/ext2/namei.c:131:
+	while (namelen--) hash = *(name++) + (hash << 6);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#557: FILE: fs/ext2/namei.c:140:
+int dx_probe (struct inode *dir, u32 hash, struct dx_frame *dxframe)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#563: FILE: fs/ext2/namei.c:146:
+	dxtrace(printk("Look up %u.", hash));

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#564: FILE: fs/ext2/namei.c:147:
+	if (!(bh = ext2_bread (dir, 0, 0, &err)))
+	{

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#564: FILE: fs/ext2/namei.c:147:
+	if (!(bh = ext2_bread (dir, 0, 0, &err)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#564: FILE: fs/ext2/namei.c:147:
+	if (!(bh = ext2_bread (dir, 0, 0, &err)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: No space is necessary after a cast
#571: FILE: fs/ext2/namei.c:154:
+	at = at0 = ((struct dx_root *) (bh->b_data))->entries;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#571: FILE: fs/ext2/namei.c:154:
+	at = at0 = ((struct dx_root *) (bh->b_data))->entries;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: No space is necessary after a cast
#572: FILE: fs/ext2/namei.c:155:
+	if (!(count = *(u32 *) at)) BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#572: FILE: fs/ext2/namei.c:155:
+	if (!(count = *(u32 *) at)) BUG();

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#572: FILE: fs/ext2/namei.c:155:
+	if (!(count = *(u32 *) at)) BUG();

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#572: FILE: fs/ext2/namei.c:155:
+	if (!(count = *(u32 *) at)) BUG();

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#575: FILE: fs/ext2/namei.c:158:
+	while (search--)
+	{

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#577: FILE: fs/ext2/namei.c:160:
+		dxtrace(printk("."));

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#578: FILE: fs/ext2/namei.c:161:
+		if ((++at)->hash > hash)
+		{

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#584: FILE: fs/ext2/namei.c:167:
+	dxtrace(printk(" in %u:%u\n", at - at0, at->block));

CHECK:SPACING: No space is necessary after a cast
#585: FILE: fs/ext2/namei.c:168:
+	dxframe->info = (struct dx_root_info *) bh->b_data;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#598: FILE: fs/ext2/namei.c:181:
+static int dx_make_map (struct ext2_dir_entry_2 *de, int size, struct dx_map_entry map[])

CHECK:SPACING: No space is necessary after a cast
#601: FILE: fs/ext2/namei.c:184:
+	char *base = (char *) de;

CHECK:SPACING: No space is necessary after a cast
#602: FILE: fs/ext2/namei.c:185:
+	while ((char *) de < base + size)

WARNING:LINE_SPACING: Missing a blank line after declarations
#602: FILE: fs/ext2/namei.c:185:
+	char *base = (char *) de;
+	while ((char *) de < base + size)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#602: FILE: fs/ext2/namei.c:185:
+	while ((char *) de < base + size)
+	{

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#604: FILE: fs/ext2/namei.c:187:
+		map[count].hash = dx_hash (de->name, de->name_len);

CHECK:SPACING: No space is necessary after a cast
#605: FILE: fs/ext2/namei.c:188:
+		map[count].offs = (u32) ((char *) de - base);

CHECK:SPACING: No space is necessary after a cast
#606: FILE: fs/ext2/namei.c:189:
+		de = (struct ext2_dir_entry_2 *) ((char *) de + le16_to_cpu(de->rec_len));

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#616: FILE: fs/ext2/namei.c:199:
+struct ext2_dir_entry_2 *dx_copy (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#616: FILE: fs/ext2/namei.c:199:
+struct ext2_dir_entry_2 *dx_copy (

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#617: FILE: fs/ext2/namei.c:200:
+	char *from, char *to, unsigned size, // should pass from, to as de's (uli)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#622: FILE: fs/ext2/namei.c:205:
+	unsigned rec_len = 0;

WARNING:LINE_SPACING: Missing a blank line after declarations
#623: FILE: fs/ext2/namei.c:206:
+	unsigned rec_len = 0;
+	if (!count) BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#623: FILE: fs/ext2/namei.c:206:
+	if (!count) BUG();

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#623: FILE: fs/ext2/namei.c:206:
+	if (!count) BUG();

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#624: FILE: fs/ext2/namei.c:207:
+	while (count--)
+	{

CHECK:SPACING: No space is necessary after a cast
#626: FILE: fs/ext2/namei.c:209:
+		de = (struct ext2_dir_entry_2 *) (from + map[start++].offs);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#628: FILE: fs/ext2/namei.c:211:
+		if (to + rec_len > top) BUG();

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#628: FILE: fs/ext2/namei.c:211:
+		if (to + rec_len > top) BUG();

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#629: FILE: fs/ext2/namei.c:212:
+		memcpy (to, de, rec_len);

CHECK:SPACING: No space is necessary after a cast
#630: FILE: fs/ext2/namei.c:213:
+		((struct ext2_dir_entry_2 *) to)->rec_len = rec_len;

CHECK:SPACING: No space is necessary after a cast
#633: FILE: fs/ext2/namei.c:216:
+	return (struct ext2_dir_entry_2 *) (to - rec_len);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#636: FILE: fs/ext2/namei.c:219:
+void dx_adjust (struct ext2_dir_entry_2 *de, char *limit)

CHECK:SPACING: No space is necessary after a cast
#638: FILE: fs/ext2/namei.c:221:
+	de->rec_len = limit - (char *) de; // need to clear top?

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#645: FILE: fs/ext2/namei.c:228:
+void dx_show_index (struct dx_frame *dxframe)

WARNING:LINE_SPACING: Missing a blank line after declarations
#649: FILE: fs/ext2/namei.c:232:
+	int i = 0;
+	printk("Index: ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#649: FILE: fs/ext2/namei.c:232:
+	printk("Index: ");

CHECK:SPACING: No space is necessary after a cast
#650: FILE: fs/ext2/namei.c:233:
+	for (;i < *(u32 *) entries; i++)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#650: FILE: fs/ext2/namei.c:233:
+	for (;i < *(u32 *) entries; i++)
+	{

ERROR:SPACING: space required after that ';' (ctx:BxV)
#650: FILE: fs/ext2/namei.c:233:
+	for (;i < *(u32 *) entries; i++)
 	     ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#652: FILE: fs/ext2/namei.c:235:
+		printk("%u@%u ", entries[i].hash, entries[i].block);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#654: FILE: fs/ext2/namei.c:237:
+	printk("\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#657: FILE: fs/ext2/namei.c:240:
+void dx_show_leaf (struct ext2_dir_entry_2 *de, int size)

CHECK:SPACING: No space is necessary after a cast
#660: FILE: fs/ext2/namei.c:243:
+	char *base = (char *) de;

WARNING:LINE_SPACING: Missing a blank line after declarations
#661: FILE: fs/ext2/namei.c:244:
+	char *base = (char *) de;
+	printk("dirblock: ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#661: FILE: fs/ext2/namei.c:244:
+	printk("dirblock: ");

CHECK:SPACING: No space is necessary after a cast
#662: FILE: fs/ext2/namei.c:245:
+	while ((char *) de < base + size)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#662: FILE: fs/ext2/namei.c:245:
+	while ((char *) de < base + size)
+	{

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#664: FILE: fs/ext2/namei.c:247:
+		{ int n = de->name_len; char *s = de->name; while (n--) printk("%c", *s++); }

CHECK:SPACING: No space is necessary after a cast
#665: FILE: fs/ext2/namei.c:248:
+		printk(":%u.%u ", dx_hash (de->name, de->name_len), (u32) ((char *) de - base));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#665: FILE: fs/ext2/namei.c:248:
+		printk(":%u.%u ", dx_hash (de->name, de->name_len), (u32) ((char *) de - base));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#665: FILE: fs/ext2/namei.c:248:
+		printk(":%u.%u ", dx_hash (de->name, de->name_len), (u32) ((char *) de - base));

CHECK:SPACING: No space is necessary after a cast
#666: FILE: fs/ext2/namei.c:249:
+		de = (struct ext2_dir_entry_2 *) ((char *) de + le16_to_cpu(de->rec_len));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#669: FILE: fs/ext2/namei.c:252:
+	printk("(%i)\n", count);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#672: FILE: fs/ext2/namei.c:255:
+void dx_show_buckets (struct inode *dir)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#675: FILE: fs/ext2/namei.c:258:
+	int blockshift = EXT2_BLOCK_SIZE_BITS (sb), blocksize = 1 << blockshift;

WARNING:LINE_SPACING: Missing a blank line after declarations
#679: FILE: fs/ext2/namei.c:262:
+	struct buffer_head *bh, *dbh;
+	if (!(dbh = ext2_bread (dir, 0, 0, &err))) return;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#679: FILE: fs/ext2/namei.c:262:
+	if (!(dbh = ext2_bread (dir, 0, 0, &err))) return;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#679: FILE: fs/ext2/namei.c:262:
+	if (!(dbh = ext2_bread (dir, 0, 0, &err))) return;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#679: FILE: fs/ext2/namei.c:262:
+	if (!(dbh = ext2_bread (dir, 0, 0, &err))) return;

CHECK:SPACING: No space is necessary after a cast
#680: FILE: fs/ext2/namei.c:263:
+	at = ((struct dx_root *) (dbh->b_data))->entries;

CHECK:SPACING: No space is necessary after a cast
#681: FILE: fs/ext2/namei.c:264:
+	count = *(u32 *) at;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#682: FILE: fs/ext2/namei.c:265:
+	printk("%i indexed blocks...\n", count);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#683: FILE: fs/ext2/namei.c:266:
+	for (i = 0; i < count; i++, at++)
+	{

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#685: FILE: fs/ext2/namei.c:268:
+		u32 hash = i? at->hash: 0;
 		            ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#685: FILE: fs/ext2/namei.c:268:
+		u32 hash = i? at->hash: 0;
 		                      ^

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#686: FILE: fs/ext2/namei.c:269:
+		u32 range = i == count - 1? ~at->hash: ((at + 1)->hash - hash);
 		                          ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#686: FILE: fs/ext2/namei.c:269:
+		u32 range = i == count - 1? ~at->hash: ((at + 1)->hash - hash);
 		                                     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#687: FILE: fs/ext2/namei.c:270:
+		u32 range = i == count - 1? ~at->hash: ((at + 1)->hash - hash);
+		printk("%i:%u hash %u/%u", i, at->block, hash, range);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#687: FILE: fs/ext2/namei.c:270:
+		printk("%i:%u hash %u/%u", i, at->block, hash, range);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#688: FILE: fs/ext2/namei.c:271:
+		if (!(bh = ext2_bread (dir, at->block, 0, &err))) continue;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#688: FILE: fs/ext2/namei.c:271:
+		if (!(bh = ext2_bread (dir, at->block, 0, &err))) continue;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#688: FILE: fs/ext2/namei.c:271:
+		if (!(bh = ext2_bread (dir, at->block, 0, &err))) continue;

CHECK:SPACING: No space is necessary after a cast
#689: FILE: fs/ext2/namei.c:272:
+		dx_show_leaf ((struct ext2_dir_entry_2 *) bh->b_data, blocksize);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#689: FILE: fs/ext2/namei.c:272:
+		dx_show_leaf ((struct ext2_dir_entry_2 *) bh->b_data, blocksize);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#690: FILE: fs/ext2/namei.c:273:
+		brelse (bh);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#693: FILE: fs/ext2/namei.c:276:
+	printk("\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#704: FILE: fs/ext2/namei.c:296:
+struct ext2_dir_entry_2 *ext2_find_de (struct buffer_head *bh,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#705: FILE: fs/ext2/namei.c:297:
+struct ext2_dir_entry_2 *ext2_find_de (struct buffer_head *bh,
+	const char *const name, int namelen,

CHECK:SPACING: No space is necessary after a cast
#709: FILE: fs/ext2/namei.c:301:
+	struct ext2_dir_entry_2 *de = (struct ext2_dir_entry_2 *) bh->b_data;

CHECK:SPACING: No space is necessary after a cast
#710: FILE: fs/ext2/namei.c:302:
+	char *top = (char *) de + bh->b_size;

CHECK:SPACING: No space is necessary after a cast
#711: FILE: fs/ext2/namei.c:303:
+	while ((char *) de < top) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#711: FILE: fs/ext2/namei.c:303:
+	char *top = (char *) de + bh->b_size;
+	while ((char *) de < top) {

WARNING:LONG_LINE_COMMENT: line length of 124 exceeds 100 columns
#715: FILE: fs/ext2/namei.c:307:
+		if ((char *) de + namelen <= top && ext2_match (namelen, name, de)) // is the compare to top really needed??

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#715: FILE: fs/ext2/namei.c:307:
+		if ((char *) de + namelen <= top && ext2_match (namelen, name, de)) // is the compare to top really needed??

WARNING:LINE_SPACING: Missing a blank line after declarations
#715: FILE: fs/ext2/namei.c:307:
+		int de_len;
+		if ((char *) de + namelen <= top && ext2_match (namelen, name, de)) // is the compare to top really needed??

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#715: FILE: fs/ext2/namei.c:307:
+		if ((char *) de + namelen <= top && ext2_match (namelen, name, de)) // is the compare to top really needed??
+		{

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#715: FILE: fs/ext2/namei.c:307:
+		if ((char *) de + namelen <= top && ext2_match (namelen, name, de)) // is the compare to top really needed??

CHECK:SPACING: No space is necessary after a cast
#727: FILE: fs/ext2/namei.c:319:
+		de = (struct ext2_dir_entry_2 *) ((char *) de + de_len);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#752: FILE: fs/ext2/namei.c:330:
+ * Find an entry in the specified directory with the wanted name.  Return $

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#755: FILE: fs/ext2/namei.c:333:
+static struct buffer_head *ext2_find_entry (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#755: FILE: fs/ext2/namei.c:333:
+static struct buffer_head *ext2_find_entry (

ERROR:TRAILING_WHITESPACE: trailing whitespace
#756: FILE: fs/ext2/namei.c:334:
+^Istruct inode *dir, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#765: FILE: fs/ext2/namei.c:343:
+	int blockshift = EXT2_BLOCK_SIZE_BITS (sb);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#769: FILE: fs/ext2/namei.c:346:
+	if (namelen > EXT2_NAME_LEN) return NULL;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#771: FILE: fs/ext2/namei.c:348:
+	if (is_dx(dir))
+	{

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#773: FILE: fs/ext2/namei.c:350:
+		u32 hash = dx_hash (name, namelen);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#777: FILE: fs/ext2/namei.c:354:
+		int err = dx_probe (dir, hash, &dxframe); // don't ignore the error!!

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#779: FILE: fs/ext2/namei.c:356:
+		while (1)
+		{

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#781: FILE: fs/ext2/namei.c:358:
+			bh = ext2_bread (dir, dxframe.at->block, 0, &err); // don't ignore the error!!

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#781: FILE: fs/ext2/namei.c:358:
+			bh = ext2_bread (dir, dxframe.at->block, 0, &err); // don't ignore the error!!

WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#782: FILE: fs/ext2/namei.c:359:
+			de = ext2_find_de (bh, name, namelen, &err, dir, 666); // don't ignore the error!!

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#782: FILE: fs/ext2/namei.c:359:
+			de = ext2_find_de (bh, name, namelen, &err, dir, 666); // don't ignore the error!!

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#783: FILE: fs/ext2/namei.c:360:
+			if (de)
+			{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#785: FILE: fs/ext2/namei.c:362:
+^I^I^I^Idxtrace(printk("Found %s in %i:%i\n", name, $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#785: FILE: fs/ext2/namei.c:362:
+				dxtrace(printk("Found %s in %i:%i\n", name, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#786: FILE: fs/ext2/namei.c:363:
+				dxtrace(printk("Found %s in %i:%i\n", name, 
+					dxframe.at - dxframe.entries, dxframe.at->block));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dxframe.at'
#795: FILE: fs/ext2/namei.c:371:
+			if (++(dxframe.at) - dxframe.entries == dxframe.count) break;

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#795: FILE: fs/ext2/namei.c:371:
+			if (++(dxframe.at) - dxframe.entries == dxframe.count) break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#796: FILE: fs/ext2/namei.c:372:
+			if ((dxframe.at->hash & -2) != hash) break;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#797: FILE: fs/ext2/namei.c:373:
+			dxtrace(printk("Try next, block %i\n", dxframe.at->block));

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 24)
#810: FILE: fs/ext2/namei.c:383:
+			if ((block << blockshift) >= dir->i_size)
 			break;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#819: FILE: fs/ext2/namei.c:391:
+	for (block = 0, offset = 0; offset < dir->i_size; offset += sb->s_blocksize, block++)
+	{

WARNING:LINE_SPACING: Missing a blank line after declarations
#827: FILE: fs/ext2/namei.c:395:
+		struct ext2_dir_entry_2 *de;
+		if ((block % NAMEI_RA_BLOCKS) == 0 && toread)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#827: FILE: fs/ext2/namei.c:395:
+		if ((block % NAMEI_RA_BLOCKS) == 0 && toread)
+		{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#834: FILE: fs/ext2/namei.c:401:
+		if (!bh)
+		{

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#884: FILE: fs/ext2/namei.c:417:
+		de = ext2_find_de (bh, name, namelen, &err, dir, offset);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#885: FILE: fs/ext2/namei.c:418:
+		if (de)
+		{

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#889: FILE: fs/ext2/namei.c:422:
+					brelse (bh_use[i]);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#921: FILE: fs/ext2/namei.c:455:
+	if (bh)
+	{

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#947: FILE: fs/ext2/namei.c:496:
+	struct ext2_dir_entry_2 * de, * de2;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#947: FILE: fs/ext2/namei.c:496:
+	struct ext2_dir_entry_2 * de, * de2;
 	                              ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#948: FILE: fs/ext2/namei.c:497:
+	struct super_block * sb = dir->i_sb;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#949: FILE: fs/ext2/namei.c:498:
+	unsigned blockshift = EXT2_BLOCK_SIZE_BITS(sb);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#950: FILE: fs/ext2/namei.c:499:
+	unsigned blocksize = 1 << blockshift;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#963: FILE: fs/ext2/namei.c:506:
+	if (!namelen) return -EINVAL;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#965: FILE: fs/ext2/namei.c:508:
+	if (is_dx(dir))
+	{

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#967: FILE: fs/ext2/namei.c:510:
+		hash = dx_hash (name, namelen);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#968: FILE: fs/ext2/namei.c:511:
+		dx_probe (dir, hash, &dxframe); // don't ignore the error!!

WARNING:USE_NEGATIVE_ERRNO: return of an errno should typically be negative (ie: return -EINVAL)
#969: FILE: fs/ext2/namei.c:512:
+		if (!dxframe.bh) return EINVAL;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#969: FILE: fs/ext2/namei.c:512:
+		if (!dxframe.bh) return EINVAL;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#970: FILE: fs/ext2/namei.c:513:
+		if (!(bh = ext2_bread (dir, dxframe.at->block, 0, &err))) return err;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#970: FILE: fs/ext2/namei.c:513:
+		if (!(bh = ext2_bread (dir, dxframe.at->block, 0, &err))) return err;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#970: FILE: fs/ext2/namei.c:513:
+		if (!(bh = ext2_bread (dir, dxframe.at->block, 0, &err))) return err;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#972: FILE: fs/ext2/namei.c:515:
+	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#975: FILE: fs/ext2/namei.c:518:
+		if (!(bh = ext2_bread (dir, 0, 0, &err))) return err;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#975: FILE: fs/ext2/namei.c:518:
+		if (!(bh = ext2_bread (dir, 0, 0, &err))) return err;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#975: FILE: fs/ext2/namei.c:518:
+		if (!(bh = ext2_bread (dir, 0, 0, &err))) return err;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#981: FILE: fs/ext2/namei.c:522:
+^Iwhile (1) $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#981: FILE: fs/ext2/namei.c:522:
+	while (1) 
+	{

CHECK:SPACING: No space is necessary after a cast
#983: FILE: fs/ext2/namei.c:524:
+		if ((char *) de >= bh->b_data + blocksize)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#983: FILE: fs/ext2/namei.c:524:
+		if ((char *) de >= bh->b_data + blocksize)
+		{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#983: FILE: fs/ext2/namei.c:524:
+		if ((char *) de >= bh->b_data + blocksize)
[...]
+#ifdef CONFIG_EXT2_INDEX

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#986: FILE: fs/ext2/namei.c:527:
+		if (is_dx(dir))
+		{

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#994: FILE: fs/ext2/namei.c:535:
+			dxtrace_off(printk("entry count %i, limit %i\n", dxframe.count, dxframe.limit));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LINE_SPACING: Missing a blank line after declarations
#994: FILE: fs/ext2/namei.c:535:
+			u32 hash2;
+			dxtrace_off(printk("entry count %i, limit %i\n", dxframe.count, dxframe.limit));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#994: FILE: fs/ext2/namei.c:535:
+			dxtrace_off(printk("entry count %i, limit %i\n", dxframe.count, dxframe.limit));

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#996: FILE: fs/ext2/namei.c:537:
+			if (dxframe.count == dxframe.limit)
+			{

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#999: FILE: fs/ext2/namei.c:540:
+				brelse (dxframe.bh);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1003: FILE: fs/ext2/namei.c:544:
+			if (!(bh2 = ext2_getblk (dir, block2, 1, &err)))
+			{

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1003: FILE: fs/ext2/namei.c:544:
+			if (!(bh2 = ext2_getblk (dir, block2, 1, &err)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1003: FILE: fs/ext2/namei.c:544:
+			if (!(bh2 = ext2_getblk (dir, block2, 1, &err)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1006: FILE: fs/ext2/namei.c:547:
+				brelse (dxframe.bh);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1013: FILE: fs/ext2/namei.c:554:
+				count = dx_make_map ((struct ext2_dir_entry_2 *) b1, blocksize, map);

CHECK:SPACING: No space is necessary after a cast
#1013: FILE: fs/ext2/namei.c:554:
+				count = dx_make_map ((struct ext2_dir_entry_2 *) b1, blocksize, map);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1013: FILE: fs/ext2/namei.c:554:
+				struct dx_map_entry map[MAX_DX_MAP];
+				count = dx_make_map ((struct ext2_dir_entry_2 *) b1, blocksize, map);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1013: FILE: fs/ext2/namei.c:554:
+				count = dx_make_map ((struct ext2_dir_entry_2 *) b1, blocksize, map);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1014: FILE: fs/ext2/namei.c:555:
+				split = count/2; // need to adjust to actual middle
 				             ^

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#1015: FILE: fs/ext2/namei.c:556:
+				COMBSORT(count, i, j, map[i].hash < map[j].hash, exchange(map[i], map[j]));

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1019: FILE: fs/ext2/namei.c:560:
+					while (split && map[split].hash == map[split-1].hash)
 					                                            ^

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1022: FILE: fs/ext2/namei.c:563:
+					while (split < count && map[split].hash == map[split-1].hash)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1022: FILE: fs/ext2/namei.c:563:
+					while (split < count && map[split].hash == map[split-1].hash)
 					                                                    ^

WARNING:LONG_LINE: line length of 127 exceeds 100 columns
#1026: FILE: fs/ext2/namei.c:567:
+				dxtrace(printk("Split block %i at %u, %i/%i\n", dxframe.at->block, hash2, split, count-split));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1026: FILE: fs/ext2/namei.c:567:
+				dxtrace(printk("Split block %i at %u, %i/%i\n", dxframe.at->block, hash2, split, count-split));

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1026: FILE: fs/ext2/namei.c:567:
+				dxtrace(printk("Split block %i at %u, %i/%i\n", dxframe.at->block, hash2, split, count-split));
 				                                                                                      ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1031: FILE: fs/ext2/namei.c:572:
+				if (!split || split == count)
+				{

CHECK:SPACING: No space is necessary after a cast
#1034: FILE: fs/ext2/namei.c:575:
+					de2 = (struct ext2_dir_entry_2 *) b2;

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1039: FILE: fs/ext2/namei.c:580:
+					de2 = dx_copy (b1, b2, blocksize, map, split, count - split);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1039: FILE: fs/ext2/namei.c:580:
+					de2 = dx_copy (b1, b2, blocksize, map, split, count - split);

CHECK:SPACING: No space is necessary after a cast
#1040: FILE: fs/ext2/namei.c:581:
+					b3 = (char *) de2 + de2->rec_len;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1041: FILE: fs/ext2/namei.c:582:
+					de = dx_copy (b1, b3, blocksize - (b3 - b2), map, 0, split);

CHECK:SPACING: No space is necessary after a cast
#1042: FILE: fs/ext2/namei.c:583:
+					memcpy(b1, b3, (char *) de + de->rec_len - b3);

CHECK:SPACING: No space is necessary after a cast
#1043: FILE: fs/ext2/namei.c:584:
+					de = (struct ext2_dir_entry_2 *) ((char *) de - b3 + b1);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1044: FILE: fs/ext2/namei.c:585:
+					dx_adjust (de, b1 + blocksize);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1045: FILE: fs/ext2/namei.c:586:
+					dx_adjust (de2, b2 + blocksize);

CHECK:SPACING: No space is necessary after a cast
#1048: FILE: fs/ext2/namei.c:589:
+				dxtrace(dx_show_leaf ((struct ext2_dir_entry_2 *) b1, blocksize));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1048: FILE: fs/ext2/namei.c:589:
+				dxtrace(dx_show_leaf ((struct ext2_dir_entry_2 *) b1, blocksize));

CHECK:SPACING: No space is necessary after a cast
#1049: FILE: fs/ext2/namei.c:590:
+				dxtrace(dx_show_leaf ((struct ext2_dir_entry_2 *) b2, blocksize));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1049: FILE: fs/ext2/namei.c:590:
+				dxtrace(dx_show_leaf ((struct ext2_dir_entry_2 *) b2, blocksize));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1052: FILE: fs/ext2/namei.c:593:
+				dxtrace(printk("Insert %s/%u ", name, hash));

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1053: FILE: fs/ext2/namei.c:594:
+				if (hash >= hash2 || !split || split == count)
+				{

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1055: FILE: fs/ext2/namei.c:596:
+					dxtrace(printk("above"));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1059: FILE: fs/ext2/namei.c:600:
+				dxtrace(printk("\n"));

CHECK:SPACING: No space is necessary after a cast
#1062: FILE: fs/ext2/namei.c:603:
+			memmove (at + 1, at, (char *) (entries + dxframe.count) - (char *) (at));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1062: FILE: fs/ext2/namei.c:603:
+			memmove (at + 1, at, (char *) (entries + dxframe.count) - (char *) (at));

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1063: FILE: fs/ext2/namei.c:604:
+			if (continued && (!split || split == count))
+			{

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1066: FILE: fs/ext2/namei.c:607:
+				(at+1)->hash = hash + 1;
 				   ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1067: FILE: fs/ext2/namei.c:608:
+				if (at != dxframe.entries) at->hash = hash;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1078: FILE: fs/ext2/namei.c:619:
+			if (!continued) mark_buffer_dirty (bh2);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1078: FILE: fs/ext2/namei.c:619:
+			if (!continued) mark_buffer_dirty (bh2);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1079: FILE: fs/ext2/namei.c:620:
+			mark_buffer_dirty (dxframe.bh);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1080: FILE: fs/ext2/namei.c:621:
+			brelse (dxframe.bh);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1081: FILE: fs/ext2/namei.c:622:
+			brelse (bh2);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1083: FILE: fs/ext2/namei.c:624:
+			dxtrace(dx_show_index (&dxframe));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1089: FILE: fs/ext2/namei.c:629:
+			bh = ext2_bread (dir, offset >> EXT2_BLOCK_SIZE_BITS(sb), 1, &err);

CHECK:SPACING: No space is necessary after a cast
#1119: FILE: fs/ext2/namei.c:667:
+				de2 = (struct ext2_dir_entry_2 *) ((char *) de +

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1151: FILE: fs/ext2/namei.c:809:
+static int ext2_mkdir (struct inode *dir, struct dentry *dentry, int mode)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1162: FILE: fs/ext2/namei.c:817:
+	int make_dx = test_opt (sb, DXTREE);

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#1163: FILE: fs/ext2/namei.c:818:
+	int dir_blk = make_dx? dx_dir_base(sb): 0;
 	                     ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1163: FILE: fs/ext2/namei.c:818:
+	int dir_blk = make_dx? dx_dir_base(sb): 0;
 	                                      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1179: FILE: fs/ext2/namei.c:835:
+	bh = ext2_bread (inode, dir_blk, 1, &err);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1180: FILE: fs/ext2/namei.c:836:
+	if (!bh)
+	{

CHECK:SPACING: No space is necessary after a cast
#1188: FILE: fs/ext2/namei.c:843:
+	de = (struct ext2_dir_entry_2 *) bh->b_data;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1203: FILE: fs/ext2/namei.c:855:
+	ext2_set_de_type (sb, de, S_IFDIR);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1211: FILE: fs/ext2/namei.c:861:
+	brelse (bh);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1218: FILE: fs/ext2/namei.c:866:
+	err = ext2_add_entry (dir, dentry->d_name.name, dentry->d_name.len, inode);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1224: FILE: fs/ext2/namei.c:871:
+	if (make_dx)
+	{

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1226: FILE: fs/ext2/namei.c:873:
+		struct buffer_head *bh = ext2_bread (inode, 0, 1, &err);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1227: FILE: fs/ext2/namei.c:874:
+		struct buffer_head *bh = ext2_bread (inode, 0, 1, &err);
+		if (bh)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1227: FILE: fs/ext2/namei.c:874:
+		if (bh)
+		{

CHECK:SPACING: No space is necessary after a cast
#1229: FILE: fs/ext2/namei.c:876:
+			struct dx_entry *entries = ((struct dx_root *) bh->b_data)->entries;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1230: FILE: fs/ext2/namei.c:877:
+			struct dx_entry *entries = ((struct dx_root *) bh->b_data)->entries;
+			dxtrace_on(printk("Making dx indexed directory\n"));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1230: FILE: fs/ext2/namei.c:877:
+			dxtrace_on(printk("Making dx indexed directory\n"));

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1238: FILE: fs/ext2/namei.c:885:
+
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1249: FILE: fs/ext2/namei.c:902:
+static int ext2_is_empty_dir (struct inode *inode)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1255: FILE: fs/ext2/namei.c:907:
+	struct super_block * sb = inode->i_sb;

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#1260: FILE: fs/ext2/namei.c:910:
+	int start = is_dx(inode)? dx_dir_base(sb): 0;
 	                        ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1260: FILE: fs/ext2/namei.c:910:
+	int start = is_dx(inode)? dx_dir_base(sb): 0;
 	                                         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1266: FILE: fs/ext2/namei.c:915:
+	    !(bh = ext2_bread (inode, start, 0, &err))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1290: FILE: fs/ext2/namei.c:986:
+	if (!ext2_is_empty_dir (inode))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1315: FILE: fs/ext2/namei.c:1161:
+			if (!ext2_is_empty_dir (new_inode))

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1341: FILE: fs/ext2/super.c:191:
+		else if (!strcmp (this_char, "index"))

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1341: FILE: fs/ext2/super.c:191:
 		}
+		else if (!strcmp (this_char, "index"))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1343: FILE: fs/ext2/super.c:193:
+			set_opt (*mount_options, DXTREE);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1345: FILE: fs/ext2/super.c:195:
+			printk("EXT2 Index option not supported\n");

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dir' may be better as '(dir)' to avoid precedence issues
#1401: FILE: include/linux/ext2_fs.h:534:
+#define is_dx(dir) (dir->u.ext2_i.i_flags & EXT2_INDEX_FL)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000548862.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 87 errors, 135 warnings, 56 checks, 1001 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000548862.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
