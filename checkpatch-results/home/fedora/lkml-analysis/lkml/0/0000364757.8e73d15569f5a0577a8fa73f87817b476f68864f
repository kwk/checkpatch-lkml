CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#32: 
Jörn
 ^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
--- linux-2.5.70-bk9/include/linux/zconf.h~zlib_cleanup_ZEXTERN	2003-06-05 21:35:04.000000000 +0200

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - int ZEXPORT zlib_deflate_workspacesize() should probably be int ZEXPORT zlib_deflate_workspacesize(void)
#57: FILE: lib/zlib_deflate/deflate.c:1258:
+extern int ZEXPORT zlib_deflate_workspacesize ()

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#57: FILE: lib/zlib_deflate/deflate.c:1258:
+extern int ZEXPORT zlib_deflate_workspacesize ()

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <zlib_zlibVersion>
#68: FILE: include/linux/zlib.h:165:
+extern const char * ZEXPORT zlib_zlibVersion OF((void));

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#76: FILE: include/linux/zlib.h:172:
+extern void * __zlib_panic_workspace OF((void));

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#85: FILE: include/linux/zlib.h:184:
+extern int ZEXPORT zlib_deflate_workspacesize OF((void));

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#85: FILE: include/linux/zlib.h:184:
+extern int ZEXPORT zlib_deflate_workspacesize OF((void));

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#103: FILE: include/linux/zlib.h:214:
+extern int ZEXPORT zlib_deflate OF((z_streamp strm, int flush));

ERROR:POINTER_LOCATION: "fooEnd bar" should be "foo End bar"
#112: FILE: include/linux/zlib.h:292:
+extern int ZEXPORT zlib_deflateEnd OF((z_streamp strm));

CHECK:CAMELCASE: Avoid CamelCase: <zlib_deflateEnd>
#112: FILE: include/linux/zlib.h:292:
+extern int ZEXPORT zlib_deflateEnd OF((z_streamp strm));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#121: FILE: include/linux/zlib.h:306:
+extern int ZEXPORT zlib_inflate_workspacesize OF((void));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#121: FILE: include/linux/zlib.h:306:
+extern int ZEXPORT zlib_inflate_workspacesize OF((void));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#139: FILE: include/linux/zlib.h:334:
+extern int ZEXPORT zlib_inflate OF((z_streamp strm, int flush));

ERROR:POINTER_LOCATION: "fooEnd bar" should be "foo End bar"
#148: FILE: include/linux/zlib.h:403:
+extern int ZEXPORT zlib_inflateEnd OF((z_streamp strm));

CHECK:CAMELCASE: Avoid CamelCase: <zlib_inflateEnd>
#148: FILE: include/linux/zlib.h:403:
+extern int ZEXPORT zlib_inflateEnd OF((z_streamp strm));

ERROR:POINTER_LOCATION: "fooSetDictionary bar" should be "foo SetDictionary bar"
#166: FILE: include/linux/zlib.h:464:
+extern int ZEXPORT zlib_deflateSetDictionary OF((z_streamp strm,

CHECK:CAMELCASE: Avoid CamelCase: <zlib_deflateSetDictionary>
#166: FILE: include/linux/zlib.h:464:
+extern int ZEXPORT zlib_deflateSetDictionary OF((z_streamp strm,

ERROR:POINTER_LOCATION: "fooCopy bar" should be "foo Copy bar"
#175: FILE: include/linux/zlib.h:500:
+extern int ZEXPORT zlib_deflateCopy OF((z_streamp dest,

CHECK:CAMELCASE: Avoid CamelCase: <zlib_deflateCopy>
#175: FILE: include/linux/zlib.h:500:
+extern int ZEXPORT zlib_deflateCopy OF((z_streamp dest,

ERROR:POINTER_LOCATION: "fooReset bar" should be "foo Reset bar"
#184: FILE: include/linux/zlib.h:518:
+extern int ZEXPORT zlib_deflateReset OF((z_streamp strm));

CHECK:CAMELCASE: Avoid CamelCase: <zlib_deflateReset>
#184: FILE: include/linux/zlib.h:518:
+extern int ZEXPORT zlib_deflateReset OF((z_streamp strm));

ERROR:POINTER_LOCATION: "fooParams bar" should be "foo Params bar"
#193: FILE: include/linux/zlib.h:529:
+extern int ZEXPORT zlib_deflateParams OF((z_streamp strm,

CHECK:CAMELCASE: Avoid CamelCase: <zlib_deflateParams>
#193: FILE: include/linux/zlib.h:529:
+extern int ZEXPORT zlib_deflateParams OF((z_streamp strm,

ERROR:POINTER_LOCATION: "fooSetDictionary bar" should be "foo SetDictionary bar"
#211: FILE: include/linux/zlib.h:573:
+extern int ZEXPORT zlib_inflateSetDictionary OF((z_streamp strm,

CHECK:CAMELCASE: Avoid CamelCase: <zlib_inflateSetDictionary>
#211: FILE: include/linux/zlib.h:573:
+extern int ZEXPORT zlib_inflateSetDictionary OF((z_streamp strm,

ERROR:POINTER_LOCATION: "fooSync bar" should be "foo Sync bar"
#220: FILE: include/linux/zlib.h:592:
+extern int ZEXPORT zlib_inflateSync OF((z_streamp strm));

CHECK:CAMELCASE: Avoid CamelCase: <zlib_inflateSync>
#220: FILE: include/linux/zlib.h:592:
+extern int ZEXPORT zlib_inflateSync OF((z_streamp strm));

ERROR:POINTER_LOCATION: "fooReset bar" should be "foo Reset bar"
#229: FILE: include/linux/zlib.h:607:
+extern int ZEXPORT zlib_inflateReset OF((z_streamp strm));

CHECK:CAMELCASE: Avoid CamelCase: <zlib_inflateReset>
#229: FILE: include/linux/zlib.h:607:
+extern int ZEXPORT zlib_inflateReset OF((z_streamp strm));

ERROR:POINTER_LOCATION: "fooInit_ bar" should be "foo Init_ bar"
#238: FILE: include/linux/zlib.h:631:
+extern int ZEXPORT zlib_deflateInit_ OF((z_streamp strm, int level,

CHECK:CAMELCASE: Avoid CamelCase: <zlib_deflateInit_>
#238: FILE: include/linux/zlib.h:631:
+extern int ZEXPORT zlib_deflateInit_ OF((z_streamp strm, int level,

ERROR:POINTER_LOCATION: "fooInit_ bar" should be "foo Init_ bar"
#241: FILE: include/linux/zlib.h:633:
+extern int ZEXPORT zlib_inflateInit_ OF((z_streamp strm,

CHECK:CAMELCASE: Avoid CamelCase: <zlib_inflateInit_>
#241: FILE: include/linux/zlib.h:633:
+extern int ZEXPORT zlib_inflateInit_ OF((z_streamp strm,

ERROR:POINTER_LOCATION: "fooInit2_ bar" should be "foo Init2_ bar"
#244: FILE: include/linux/zlib.h:635:
+extern int ZEXPORT zlib_deflateInit2_ OF((z_streamp strm, int  level, int  method,

CHECK:CAMELCASE: Avoid CamelCase: <zlib_deflateInit2_>
#244: FILE: include/linux/zlib.h:635:
+extern int ZEXPORT zlib_deflateInit2_ OF((z_streamp strm, int  level, int  method,

ERROR:POINTER_LOCATION: "fooInit2_ bar" should be "foo Init2_ bar"
#249: FILE: include/linux/zlib.h:639:
+extern int ZEXPORT zlib_inflateInit2_ OF((z_streamp strm, int  windowBits,

CHECK:CAMELCASE: Avoid CamelCase: <zlib_inflateInit2_>
#249: FILE: include/linux/zlib.h:639:
+extern int ZEXPORT zlib_inflateInit2_ OF((z_streamp strm, int  windowBits,

CHECK:CAMELCASE: Avoid CamelCase: <windowBits>
#249: FILE: include/linux/zlib.h:639:
+extern int ZEXPORT zlib_inflateInit2_ OF((z_streamp strm, int  windowBits,

CHECK:CAMELCASE: Avoid CamelCase: <zlib_zError>
#260: FILE: include/linux/zlib.h:656:
+extern const char  * ZEXPORT zlib_zError           OF((int err));

CHECK:CAMELCASE: Avoid CamelCase: <zlib_inflateSyncPoint>
#261: FILE: include/linux/zlib.h:657:
+extern int           ZEXPORT zlib_inflateSyncPoint OF((z_streamp z));

CHECK:CAMELCASE: Avoid CamelCase: <uLong>
#262: FILE: include/linux/zlib.h:658:
+extern const uLong * ZEXPORT zlib_get_crc_table    OF((void));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000364757.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 4 warnings, 23 checks, 200 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000364757.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
