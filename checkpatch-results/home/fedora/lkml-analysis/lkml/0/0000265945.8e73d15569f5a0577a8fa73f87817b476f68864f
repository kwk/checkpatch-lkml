WARNING:TYPO_SPELLING: 'previosly' may be misspelled - perhaps 'previously'?
#39: 
We would like this code accepted into the kernel.  It was previosly 
                                                          ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#60: 
diff -Nur orig/Documentation/serial/icom.txt devel/Documentation/serial/icom.txt

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#214: FILE: drivers/serial/icom.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#215: FILE: drivers/serial/icom.c:2:
+/*
+  * icom.c

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#234: FILE: drivers/serial/icom.c:21:
+  * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#235: FILE: drivers/serial/icom.c:22:
+  * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#273: FILE: drivers/serial/icom.c:60:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#275: FILE: drivers/serial/icom.c:62:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/bitops.h> instead of <asm/bitops.h>
#276: FILE: drivers/serial/icom.c:63:
+#include <asm/bitops.h>

CHECK:CAMELCASE: Avoid CamelCase: <statStg>
#353: FILE: drivers/serial/icom.c:140:
+	if (icom_port->statStg) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <statStg_pci>
#355: FILE: drivers/serial/icom.c:142:
+				    icom_port->statStg_pci);

CHECK:CAMELCASE: Avoid CamelCase: <xmitRestart>
#359: FILE: drivers/serial/icom.c:146:
+	if (icom_port->xmitRestart) {

CHECK:CAMELCASE: Avoid CamelCase: <xmitRestart_pci>
#361: FILE: drivers/serial/icom.c:148:
+				    icom_port->xmitRestart_pci);

CHECK:CAMELCASE: Avoid CamelCase: <stgAddr>
#370: FILE: drivers/serial/icom.c:157:
+	unsigned long stgAddr;

CHECK:CAMELCASE: Avoid CamelCase: <startStgAddr>
#371: FILE: drivers/serial/icom.c:158:
+	unsigned long startStgAddr;

CHECK:SPACING: No space is necessary after a cast
#383: FILE: drivers/serial/icom.c:170:
+	      (unsigned long) icom_port->xmit_buf);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#393: FILE: drivers/serial/icom.c:180:
+	      (unsigned long) icom_port->recv_buf);

CHECK:SPACING: No space is necessary after a cast
#403: FILE: drivers/serial/icom.c:190:
+	      (unsigned long) icom_port->statStg);

CHECK:SPACING: No space is necessary after a cast
#418: FILE: drivers/serial/icom.c:205:
+	stgAddr = (unsigned long) icom_port->statStg;

CHECK:CAMELCASE: Avoid CamelCase: <leNext>
#425: FILE: drivers/serial/icom.c:212:
+			icom_port->statStg->xmit[index].leNext = 0;

CHECK:CAMELCASE: Avoid CamelCase: <leNextASD>
#426: FILE: drivers/serial/icom.c:213:
+			icom_port->statStg->xmit[index].leNextASD = 0;

CHECK:CAMELCASE: Avoid CamelCase: <leLengthASD>
#427: FILE: drivers/serial/icom.c:214:
+			icom_port->statStg->xmit[index].leLengthASD =

CHECK:SPACING: No space is necessary after a cast
#428: FILE: drivers/serial/icom.c:215:
+			    (unsigned short int) cpu_to_le16(XMIT_BUFF_SZ);

CHECK:CAMELCASE: Avoid CamelCase: <leOffsetASD>
#429: FILE: drivers/serial/icom.c:216:
+			icom_port->statStg->xmit[index].leOffsetASD = 0;

CHECK:SPACING: No space is necessary after a cast
#432: FILE: drivers/serial/icom.c:219:
+			      (unsigned long) icom_port->xmit_buf);

CHECK:CAMELCASE: Avoid CamelCase: <leBuffer>
#433: FILE: drivers/serial/icom.c:220:
+			icom_port->statStg->xmit[index].leBuffer =

CHECK:SPACING: No space is necessary after a cast
#440: FILE: drivers/serial/icom.c:227:
+			    (unsigned short int) cpu_to_le16(XMIT_BUFF_SZ);

CHECK:SPACING: No space is necessary after a cast
#443: FILE: drivers/serial/icom.c:230:
+			      (unsigned long) icom_port->xmit_buf);

CHECK:CAMELCASE: Avoid CamelCase: <leLength>
#463: FILE: drivers/serial/icom.c:250:
+		icom_port->statStg->rcv[index].leLength = 0;

CHECK:CAMELCASE: Avoid CamelCase: <WorkingLength>
#464: FILE: drivers/serial/icom.c:251:
+		icom_port->statStg->rcv[index].WorkingLength =

CHECK:SPACING: No space is necessary after a cast
#465: FILE: drivers/serial/icom.c:252:
+		    (unsigned short int) cpu_to_le16(RCV_BUFF_SZ);

CHECK:SPACING: No space is necessary after a cast
#468: FILE: drivers/serial/icom.c:255:
+			    stgAddr - (unsigned long) icom_port->statStg;

CHECK:SPACING: No space is necessary after a cast
#470: FILE: drivers/serial/icom.c:257:
+			    (unsigned long) cpu_to_le32(icom_port->

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'icom_port->statStg_pci'
#471: FILE: drivers/serial/icom.c:258:
+			    (unsigned long) cpu_to_le32(icom_port->
+							statStg_pci +

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

CHECK:SPACING: No space is necessary after a cast
#474: FILE: drivers/serial/icom.c:261:
+			      (unsigned long) icom_port->recv_buf);

CHECK:SPACING: No space is necessary after a cast
#480: FILE: drivers/serial/icom.c:267:
+			    (unsigned long) icom_port->statStg;

CHECK:SPACING: No space is necessary after a cast
#482: FILE: drivers/serial/icom.c:269:
+			    (unsigned long) cpu_to_le32(icom_port->

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'icom_port->statStg_pci'
#483: FILE: drivers/serial/icom.c:270:
+			    (unsigned long) cpu_to_le32(icom_port->
+							statStg_pci +

CHECK:SPACING: No space is necessary after a cast
#486: FILE: drivers/serial/icom.c:273:
+			      (unsigned long) icom_port->recv_buf + 2048);

CHECK:SPACING: No space is necessary after a cast
#590: FILE: drivers/serial/icom.c:377:
+	char *dram_ptr = (char *) icom_port->dram;

CHECK:SPACING: No space is necessary after a cast
#597: FILE: drivers/serial/icom.c:384:
+	writew(0x3FFF, (void *) icom_port->int_reg);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#610: FILE: drivers/serial/icom.c:397:
+		dev_err(&dev->dev,"Unable to load icom_call_setup.bin firmware image\n");
 		                 ^

CHECK:SPACING: No space is necessary after a cast
#622: FILE: drivers/serial/icom.c:409:
+	iram_ptr = (char *) icom_port->dram + ICOM_IRAM_OFFSET;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#630: FILE: drivers/serial/icom.c:417:
+		dev_err(&dev->dev,"Unable to load icom_res_dce.bin firmware image\n");
 		                 ^

CHECK:SPACING: No space is necessary after a cast
#642: FILE: drivers/serial/icom.c:429:
+	iram_ptr = (char *) icom_port->dram + ICOM_IRAM_OFFSET;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#647: FILE: drivers/serial/icom.c:434:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around icom_port->dram->misc_flags
#650: FILE: drivers/serial/icom.c:437:
+		writeb(V2_HARDWARE, &(icom_port->dram->misc_flags));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around icom_port->dram->HDLCConfigReg
#656: FILE: drivers/serial/icom.c:443:
+	       &(icom_port->dram->HDLCConfigReg));

CHECK:CAMELCASE: Avoid CamelCase: <HDLCConfigReg>
#656: FILE: drivers/serial/icom.c:443:
+	       &(icom_port->dram->HDLCConfigReg));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around icom_port->dram->FlagFillIdleTimer
#657: FILE: drivers/serial/icom.c:444:
+	writeb(0x04, &(icom_port->dram->FlagFillIdleTimer));	/* 0.5 seconds */

CHECK:CAMELCASE: Avoid CamelCase: <FlagFillIdleTimer>
#657: FILE: drivers/serial/icom.c:444:
+	writeb(0x04, &(icom_port->dram->FlagFillIdleTimer));	/* 0.5 seconds */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around icom_port->dram->CmdReg
#658: FILE: drivers/serial/icom.c:445:
+	writeb(0x00, &(icom_port->dram->CmdReg));

CHECK:CAMELCASE: Avoid CamelCase: <CmdReg>
#658: FILE: drivers/serial/icom.c:445:
+	writeb(0x00, &(icom_port->dram->CmdReg));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around icom_port->dram->async_config3
#659: FILE: drivers/serial/icom.c:446:
+	writeb(0x10, &(icom_port->dram->async_config3));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around icom_port->dram->async_config2
#661: FILE: drivers/serial/icom.c:448:
+		ICOM_ACFG_1STOP_BIT), &(icom_port->dram->async_config2));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#675: FILE: drivers/serial/icom.c:462:
+		dev_err(&dev->dev,"Unable to load icom_asc.bin firmware image\n");
 		                 ^

CHECK:SPACING: No space is necessary after a cast
#692: FILE: drivers/serial/icom.c:479:
+	writeb((char) ((fw->size + 16)/16), &icom_port->dram->mac_length);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#692: FILE: drivers/serial/icom.c:479:
+	writeb((char) ((fw->size + 16)/16), &icom_port->dram->mac_length);
 	                              ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#696: FILE: drivers/serial/icom.c:483:
+	/*Setting the syncReg to 0x80 causes adapter to start downloading
+	   the personality code into adapter instruction RAM.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#724: FILE: drivers/serial/icom.c:511:
+		dev_err(&dev->dev,"Invalid or no cable attached\n");
 		                 ^

WARNING:INDENTED_LABEL: labels should not be indented
#728: FILE: drivers/serial/icom.c:515:
+      load_code_exit:

CHECK:SPACING: No space is necessary after a cast
#732: FILE: drivers/serial/icom.c:519:
+		writew(0x3FFF, (void *) icom_port->int_reg);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around icom_port->dram->disable
#735: FILE: drivers/serial/icom.c:522:
+		writeb(ICOM_DISABLE, &(icom_port->dram->disable));

WARNING:TYPO_SPELLING: 'opertional' may be misspelled - perhaps 'operational'?
#740: FILE: drivers/serial/icom.c:527:
+		dev_err(&icom_port->adapter->pci_dev->dev,"Port not opertional\n");
 		                                                    ^^^^^^^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#740: FILE: drivers/serial/icom.c:527:
+		dev_err(&icom_port->adapter->pci_dev->dev,"Port not opertional\n");
 		                                         ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#743: FILE: drivers/serial/icom.c:530:
+      if (new_page != NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 14)
#743: FILE: drivers/serial/icom.c:530:
+      if (new_page != NULL)
+	      pci_free_consistent(dev, 4096, new_page, temp_pci);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "new_page"
#743: FILE: drivers/serial/icom.c:530:
+      if (new_page != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cable_id != icom_port->cable_id'
#772: FILE: drivers/serial/icom.c:559:
+	if (!(raw_cable_id & ICOM_CABLE_ID_VALID) ||
+	    (cable_id != icom_port->cable_id)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#774: FILE: drivers/serial/icom.c:561:
+	    (cable_id != icom_port->cable_id)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'icom_port->cable_id == NO_CABLE'
#781: FILE: drivers/serial/icom.c:568:
+		if (!(raw_cable_id & ICOM_CABLE_ID_VALID) ||
+		    (icom_port->cable_id == NO_CABLE))

CHECK:SPACING: No space is necessary after a cast
#793: FILE: drivers/serial/icom.c:580:
+		writew(0x00FF, (void *) icom_port->int_reg);

CHECK:SPACING: No space is necessary after a cast
#803: FILE: drivers/serial/icom.c:590:
+		writew(0x3F00, (void *) icom_port->int_reg);

CHECK:SPACING: No space is necessary after a cast
#813: FILE: drivers/serial/icom.c:600:
+		writew(0x00FF, (void *) icom_port->int_reg);

CHECK:SPACING: No space is necessary after a cast
#823: FILE: drivers/serial/icom.c:610:
+		writew(0x3F00, (void *) icom_port->int_reg);

CHECK:CAMELCASE: Avoid CamelCase: <cmdReg>
#843: FILE: drivers/serial/icom.c:630:
+	unsigned char cmdReg;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#888: FILE: drivers/serial/icom.c:675:
+	if ((cmdReg | CMD_SND_BREAK) == CMD_SND_BREAK) {
+		writeb(cmdReg & ~CMD_SND_BREAK, &icom_port->dram->CmdReg);
+	}

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#911: FILE: drivers/serial/icom.c:698:
+	       (data_count <= XMIT_BUFF_SZ)) {
+

CHECK:SPACING: No space is necessary after a cast
#923: FILE: drivers/serial/icom.c:710:
+		    (unsigned short int) cpu_to_le16(data_count);

CHECK:SPACING: No space is necessary after a cast
#925: FILE: drivers/serial/icom.c:712:
+		    (unsigned long) &ICOM_PORT->statStg->xmit[0] -

CHECK:SPACING: No space is necessary after a cast
#926: FILE: drivers/serial/icom.c:713:
+		    (unsigned long) ICOM_PORT->statStg;

CHECK:CAMELCASE: Avoid CamelCase: <StartXmitCmd>
#932: FILE: drivers/serial/icom.c:719:
+		writeb(START_XMIT, &ICOM_PORT->dram->StartXmitCmd);

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#941: FILE: drivers/serial/icom.c:728:
+	static char old_status = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'icom_port->uart_port.info->delta_msr_wait'
#965: FILE: drivers/serial/icom.c:752:
+		wake_up_interruptible(&icom_port->uart_port.info->
+				      delta_msr_wait);

CHECK:BRACES: braces {} should be used on all arms of this statement
#976: FILE: drivers/serial/icom.c:763:
+	if (port_int_reg & (INT_XMIT_COMPLETED)) {
[...]
+	} else
[...]

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#987: FILE: drivers/serial/icom.c:774:
+		for (i=0; i<count &&
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#987: FILE: drivers/serial/icom.c:774:
+		for (i=0; i<count &&
 		           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#988: FILE: drivers/serial/icom.c:775:
+		for (i=0; i<count &&
+			!uart_circ_empty(&icom_port->uart_port.info->xmit); i++) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#989: FILE: drivers/serial/icom.c:776:
+			!uart_circ_empty(&icom_port->uart_port.info->xmit); i++) {
+

CHECK:BRACES: Unbalanced braces around else statement
#998: FILE: drivers/serial/icom.c:785:
+	} else

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1015: FILE: drivers/serial/icom.c:802:
+	while (status & SA_FL_RCV_DONE) {
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1029: FILE: drivers/serial/icom.c:816:
+		memcpy(tty->flip.char_buf_ptr,(unsigned char *)
 		                             ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tty->flip.char_buf_ptr[0] == 0x00'
#1044: FILE: drivers/serial/icom.c:831:
+		if ((status & SA_FLAGS_FRAME_ERROR)
+		    && (tty->flip.char_buf_ptr[0] == 0x00)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1045: FILE: drivers/serial/icom.c:832:
+		if ((status & SA_FLAGS_FRAME_ERROR)
+		    && (tty->flip.char_buf_ptr[0] == 0x00)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1054: FILE: drivers/serial/icom.c:841:
+		     SA_FLAGS_FRAME_ERROR | SA_FLAGS_OVERRUN)) {
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#1076: FILE: drivers/serial/icom.c:863:
+			if (status & SA_FLAGS_BREAK_DET) {
[...]
+			} else if (status & SA_FLAGS_PARITY_ERROR) {
[...]
+			} else if (status & SA_FLAGS_FRAME_ERROR)
[...]

WARNING:INDENTED_LABEL: labels should not be indented
#1102: FILE: drivers/serial/icom.c:889:
+		ignore_char:

CHECK:SPACING: No space is necessary after a cast
#1106: FILE: drivers/serial/icom.c:893:
+			(unsigned short int) cpu_to_le16(RCV_BUFF_SZ);

CHECK:SPACING: No space is necessary after a cast
#1145: FILE: drivers/serial/icom.c:932:
+	icom_adapter = (struct icom_adapter *) dev_id;

CHECK:SPACING: No space is necessary after a cast
#1150: FILE: drivers/serial/icom.c:937:
+		adapter_interrupts = readl((void *) int_reg);

CHECK:SPACING: No space is necessary after a cast
#1155: FILE: drivers/serial/icom.c:942:
+			port_int_reg = (u16) adapter_interrupts;

CHECK:SPACING: No space is necessary after a cast
#1164: FILE: drivers/serial/icom.c:951:
+				    (u16) (adapter_interrupts >> 16);

CHECK:SPACING: No space is necessary after a cast
#1171: FILE: drivers/serial/icom.c:958:
+		writel(adapter_interrupts, (void *) int_reg);

CHECK:SPACING: No space is necessary after a cast
#1178: FILE: drivers/serial/icom.c:965:
+	adapter_interrupts = readl((void *) int_reg);

CHECK:SPACING: No space is necessary after a cast
#1183: FILE: drivers/serial/icom.c:970:
+		port_int_reg = (u16) adapter_interrupts;

CHECK:SPACING: No space is necessary after a cast
#1191: FILE: drivers/serial/icom.c:978:
+			port_int_reg = (u16) (adapter_interrupts >> 16);

CHECK:SPACING: No space is necessary after a cast
#1198: FILE: drivers/serial/icom.c:985:
+	writel(adapter_interrupts, (void *) int_reg);

CHECK:SPACING: No space is necessary after a cast
#1201: FILE: drivers/serial/icom.c:988:
+	adapter_interrupts = readl((void *) int_reg);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1341: FILE: drivers/serial/icom.c:1128:
+	if (break_state == -1) {
[...]
+	} else {
[...]

CHECK:SPACING: No space is necessary after a cast
#1374: FILE: drivers/serial/icom.c:1161:
+	writeb(cmdReg & (unsigned char) ~CMD_RCV_ENABLE,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1387: FILE: drivers/serial/icom.c:1174:
+	unsigned cflag, iflag;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ICOM_PORT->dram->HDLCConfigReg
#1461: FILE: drivers/serial/icom.c:1248:
+	tmp_byte = readb(&(ICOM_PORT->dram->HDLCConfigReg));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ICOM_PORT->dram->HDLCConfigReg
#1466: FILE: drivers/serial/icom.c:1253:
+	writeb(tmp_byte, &(ICOM_PORT->dram->HDLCConfigReg));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1489: FILE: drivers/serial/icom.c:1276:
+^I^I * If we're ignore parity and break indicators, ignore $

CHECK:CAMELCASE: Avoid CamelCase: <PrevCmdReg>
#1506: FILE: drivers/serial/icom.c:1293:
+		if (readb(&ICOM_PORT->dram->PrevCmdReg) == 0x00) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1506: FILE: drivers/serial/icom.c:1293:
+		if (readb(&ICOM_PORT->dram->PrevCmdReg) == 0x00) {
+			break;
+		}

CHECK:SPACING: No space is necessary after a cast
#1516: FILE: drivers/serial/icom.c:1303:
+		    (unsigned short int) cpu_to_le16(RCV_BUFF_SZ);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1519: FILE: drivers/serial/icom.c:1306:
+	for (xmit_buff = 0; xmit_buff < NUM_XBUFFS; xmit_buff++) {
+		ICOM_PORT->statStg->xmit[xmit_buff].flags = 0;
+	}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ICOM_PORT->dram->async_config3
#1525: FILE: drivers/serial/icom.c:1312:
+	writeb(new_config3, &(ICOM_PORT->dram->async_config3));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ICOM_PORT->dram->async_config2
#1526: FILE: drivers/serial/icom.c:1313:
+	writeb(new_config2, &(ICOM_PORT->dram->async_config2));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ICOM_PORT->dram->HDLCConfigReg
#1527: FILE: drivers/serial/icom.c:1314:
+	tmp_byte = readb(&(ICOM_PORT->dram->HDLCConfigReg));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ICOM_PORT->dram->HDLCConfigReg
#1529: FILE: drivers/serial/icom.c:1316:
+	writeb(tmp_byte, &(ICOM_PORT->dram->HDLCConfigReg));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ICOM_PORT->dram->FlagFillIdleTimer
#1530: FILE: drivers/serial/icom.c:1317:
+	writeb(0x04, &(ICOM_PORT->dram->FlagFillIdleTimer));	/* 0.5 seconds */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around ICOM_PORT->dram->ier
#1531: FILE: drivers/serial/icom.c:1318:
+	writeb(0xFF, &(ICOM_PORT->dram->ier));	/* enable modem signal interrupts */

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1537: FILE: drivers/serial/icom.c:1324:
+		if (readb(&ICOM_PORT->dram->CmdReg) == 0x00) {
+			break;
+		}

WARNING:TYPO_SPELLING: 'Reciever' may be misspelled - perhaps 'Receiver'?
#1542: FILE: drivers/serial/icom.c:1329:
+	/* Enable Transmitter and Reciever */
 	                          ^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#1544: FILE: drivers/serial/icom.c:1331:
+	    (unsigned long) &ICOM_PORT->statStg->rcv[0] -

CHECK:SPACING: No space is necessary after a cast
#1545: FILE: drivers/serial/icom.c:1332:
+	    (unsigned long) ICOM_PORT->statStg;

CHECK:CAMELCASE: Avoid CamelCase: <RcvStatusAddr>
#1547: FILE: drivers/serial/icom.c:1334:
+	       &ICOM_PORT->dram->RcvStatusAddr);

CHECK:CAMELCASE: Avoid CamelCase: <XmitStatusAddr>
#1552: FILE: drivers/serial/icom.c:1339:
+	       &ICOM_PORT->dram->XmitStatusAddr);

WARNING:CONST_STRUCT: struct uart_ops should normally be const
#1578: FILE: drivers/serial/icom.c:1365:
+static struct uart_ops icom_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1609: FILE: drivers/serial/icom.c:1396:
+static int __devinit icom_init_ports(struct icom_adapter *icom_adapter)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1668: FILE: drivers/serial/icom.c:1455:
+	for (port_num = 0; port_num < icom_adapter->numb_ports; port_num++) {
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1672: FILE: drivers/serial/icom.c:1459:
+		if (icom_port->status == ICOM_PORT_ACTIVE) {
+

CHECK:SPACING: No space is necessary after a cast
#1675: FILE: drivers/serial/icom.c:1462:
+				    (struct icom_regs *) ((char *)

CHECK:SPACING: No space is necessary after a cast
#1682: FILE: drivers/serial/icom.c:1469:
+				    (struct icom_regs *) ((char *)

CHECK:SPACING: No space is necessary after a cast
#1695: FILE: drivers/serial/icom.c:1482:
+			icom_port->dram = (struct func_dram *) ((char *)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1702: FILE: drivers/serial/icom.c:1489:
+			if ((retval = get_port_memory(icom_port)) != 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1711: FILE: drivers/serial/icom.c:1498:
+static int __devinit icom_alloc_adapter(struct icom_adapter

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1722: FILE: drivers/serial/icom.c:1509:
+	if (!icom_adapter) {
+		return -ENOMEM;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1732: FILE: drivers/serial/icom.c:1519:
+		if (cur_adapter_entry->index != adapter_count) {
+			break;
+		}

WARNING:TYPO_SPELLING: 'proccessor' may be misspelled - perhaps 'processor'?
#1773: FILE: drivers/serial/icom.c:1560:
+			/* Stop proccessor */
 			        ^^^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#1780: FILE: drivers/serial/icom.c:1567:
+	free_irq(icom_adapter->irq_number, (void *) icom_adapter);

CHECK:SPACING: No space is necessary after a cast
#1781: FILE: drivers/serial/icom.c:1568:
+	iounmap((void *) icom_adapter->base_addr);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1799: FILE: drivers/serial/icom.c:1586:
+static int __devinit icom_probe(struct pci_dev *dev,

CHECK:SPACING: No space is necessary after a cast
#1850: FILE: drivers/serial/icom.c:1637:
+	    (unsigned long) ioremap(icom_adapter->base_addr_pci,

CHECK:SPACING: No space is necessary after a cast
#1856: FILE: drivers/serial/icom.c:1643:
+			(void *) icom_adapter)) {

CHECK:SPACING: No space is necessary after a cast
#1872: FILE: drivers/serial/icom.c:1659:
+			    (char *) icom_adapter->base_addr_pci;

CHECK:BRACES: braces {} should be used on all arms of this statement
#1877: FILE: drivers/serial/icom.c:1664:
+			if (uart_add_one_port
[...]
+			} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1881: FILE: drivers/serial/icom.c:1668:
+			} else

WARNING:INDENTED_LABEL: labels should not be indented
#1890: FILE: drivers/serial/icom.c:1677:
+      probe_exit1:

CHECK:SPACING: No space is necessary after a cast
#1891: FILE: drivers/serial/icom.c:1678:
+	iounmap((void *) icom_adapter->base_addr);

WARNING:INDENTED_LABEL: labels should not be indented
#1895: FILE: drivers/serial/icom.c:1682:
+      probe_exit0:

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1899: FILE: drivers/serial/icom.c:1686:
+
+}

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1901: FILE: drivers/serial/icom.c:1688:
+static void __devexit icom_remove(struct pci_dev *dev)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1964: FILE: drivers/serial/icom.c:1751:
+    ("IBM iSeries 2745, 2771, 2772, 2742, 2793 and 2805 Communications adapters");$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1970: FILE: drivers/serial/icom.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1988: FILE: drivers/serial/icom.h:19:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1989: FILE: drivers/serial/icom.h:20:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1994: FILE: drivers/serial/icom.h:25:
+#define BAUD_TABLE_LIMIT	((sizeof(icom_acfg_baud)/sizeof(int)) - 1)
                         	                        ^

CHECK:CAMELCASE: Avoid CamelCase: <RcvStnAddr>
#2038: FILE: drivers/serial/icom.h:69:
+	u8 RcvStnAddr;		/* 1B4     Receive Station Addr */

CHECK:CAMELCASE: Avoid CamelCase: <IdleState>
#2039: FILE: drivers/serial/icom.h:70:
+	u8 IdleState;		/* 1B5     Idle State */

CHECK:CAMELCASE: Avoid CamelCase: <IdleMonitor>
#2040: FILE: drivers/serial/icom.h:71:
+	u8 IdleMonitor;		/* 1B6     Idle Monitor */

CHECK:CAMELCASE: Avoid CamelCase: <CauseCode>
#2045: FILE: drivers/serial/icom.h:76:
+	u8 CauseCode;		/* 1BE     Cause code for fatal error */

CHECK:CAMELCASE: Avoid CamelCase: <statusArea>
#2151: FILE: drivers/serial/icom.h:182:
+struct statusArea {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2193: FILE: drivers/serial/icom.h:224:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <iCom_sercons_init>
#2247: FILE: drivers/serial/icom.h:278:
+extern void iCom_sercons_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2247: FILE: drivers/serial/icom.h:278:
+extern void iCom_sercons_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000265945.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 35 warnings, 117 checks, 2177 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000265945.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
