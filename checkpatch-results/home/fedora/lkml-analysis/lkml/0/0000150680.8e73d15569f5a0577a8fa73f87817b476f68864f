WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#191: FILE: include/linux/spi.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#205: FILE: include/linux/spi.h:15:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#206: FILE: include/linux/spi.h:16:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#246: FILE: include/linux/spi.h:56:
+#define	SPI_MODE_0	(0|0)
        	          	  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#247: FILE: include/linux/spi.h:57:
+#define	SPI_MODE_1	(0|SPI_CPHA)
        	          	  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#248: FILE: include/linux/spi.h:58:
+#define	SPI_MODE_2	(SPI_CPOL|0)
        	          	         ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#249: FILE: include/linux/spi.h:59:
+#define	SPI_MODE_3	(SPI_CPOL|SPI_CPHA)
        	          	         ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#268: FILE: include/linux/spi.h:78:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#302: FILE: include/linux/spi.h:112:
+	int			(*transfer)(struct spi_device *spi,
+						struct spi_message *mesg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#308: FILE: include/linux/spi.h:118:
+extern int spi_register_master(struct device *host, struct spi_master *spi);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#309: FILE: include/linux/spi.h:119:
+extern void spi_unregister_master(struct spi_master *spi);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#311: FILE: include/linux/spi.h:121:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#339: FILE: include/linux/spi.h:149:
+	unsigned	len;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#345: FILE: include/linux/spi.h:155:
+	unsigned		n_transfer;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#353: FILE: include/linux/spi.h:163:
+^Ivoid ^I^I^I(*complete)(void *context);$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#355: FILE: include/linux/spi.h:165:
+	unsigned		actual_length;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#377: FILE: include/linux/spi.h:187:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#379: FILE: include/linux/spi.h:189:
+extern int spi_sync(struct spi_device *spi, struct spi_message *message);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#380: FILE: include/linux/spi.h:190:
+extern int spi_w8r8(struct spi_device *spi, u8 cmd);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#381: FILE: include/linux/spi.h:191:
+extern int spi_w8r16(struct spi_device *spi, u8 cmd);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#383: FILE: include/linux/spi.h:193:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#445: FILE: include/linux/spi.h:255:
+spi_register_board_info(struct spi_board_info const *info, unsigned n);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct spi_master *' should also have an identifier name
#447: FILE: include/linux/spi.h:257:
+extern struct spi_device *

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct spi_board_info *' should also have an identifier name
#447: FILE: include/linux/spi.h:257:
+extern struct spi_device *

CHECK:LINE_SPACING: Please don't use multiple blank lines
#457: FILE: include/linux/spi.h:267:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#462: FILE: drivers/spi/spi.c:1:
+/* spi.c -- prototype of SPI init/core code

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#477: FILE: drivers/spi/spi.c:16:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#478: FILE: drivers/spi/spi.c:17:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#487: FILE: drivers/spi/spi.c:26:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#552: FILE: drivers/spi/spi.c:91:
+static int spi_hotplug(struct device *dev, char **envp, int num_envp,
+		char *buffer, int buffer_size)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#597: FILE: drivers/spi/spi.c:136:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#608: FILE: drivers/spi/spi.c:147:
+	unsigned		n_board_info;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#615: FILE: drivers/spi/spi.c:154:
+#define	kzalloc(n, flags)	kcalloc(1,(n),(flags))
        	                 	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#615: FILE: drivers/spi/spi.c:154:
+#define	kzalloc(n, flags)	kcalloc(1,(n),(flags))
        	                 	             ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#626: FILE: drivers/spi/spi.c:165:
+
+

WARNING:SIZEOF_PARENTHESIS: sizeof *proxy should be sizeof(*proxy)
#649: FILE: drivers/spi/spi.c:188:
+	proxy = kzalloc(sizeof *proxy, GFP_KERNEL);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#651: FILE: drivers/spi/spi.c:190:
+	if (!proxy) {
+		dev_err(dev, "can't alloc dev for cs%d\n",

WARNING:SIZEOF_PARENTHESIS: sizeof proxy->dev.bus_id should be sizeof(proxy->dev.bus_id)
#659: FILE: drivers/spi/spi.c:198:
+	snprintf(proxy->dev.bus_id, sizeof proxy->dev.bus_id,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#660: FILE: drivers/spi/spi.c:199:
+	snprintf(proxy->dev.bus_id, sizeof proxy->dev.bus_id,
+			"%s.%u-%s", master->cdev.class_id,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#671: FILE: drivers/spi/spi.c:210:
+		dev_dbg(dev, "can't %s %s, status %d\n",
+				"setup", proxy->dev.bus_id, status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#678: FILE: drivers/spi/spi.c:217:
+		dev_dbg(dev, "can't %s %s, status %d\n",
+				"add", proxy->dev.bus_id, status);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#704: FILE: drivers/spi/spi.c:243:
+spi_register_board_info(struct spi_board_info const *info, unsigned n)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#708: FILE: drivers/spi/spi.c:247:
+	bi = kmalloc (sizeof (*bi) + n * sizeof (*info), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#708: FILE: drivers/spi/spi.c:247:
+	bi = kmalloc (sizeof (*bi) + n * sizeof (*info), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#708: FILE: drivers/spi/spi.c:247:
+	bi = kmalloc (sizeof (*bi) + n * sizeof (*info), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#712: FILE: drivers/spi/spi.c:251:
+	memcpy(bi->board_info, info, n * sizeof (*info));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#730: FILE: drivers/spi/spi.c:269:
+		unsigned		n;

CHECK:SPACING: No space is necessary after a cast
#741: FILE: drivers/spi/spi.c:280:
+			(void) spi_new_device(master, chip);

WARNING:SIZEOF_PARENTHESIS: sizeof master->cdev.class_id should be sizeof(master->cdev.class_id)
#793: FILE: drivers/spi/spi.c:332:
+	snprintf(master->cdev.class_id, sizeof master->cdev.class_id,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#794: FILE: drivers/spi/spi.c:333:
+	snprintf(master->cdev.class_id, sizeof master->cdev.class_id,
+		"spi%u", master->bus_num);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#811: FILE: drivers/spi/spi.c:350:
+
+

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#829: FILE: drivers/spi/spi.c:368:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#832: FILE: drivers/spi/spi.c:371:
+
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1025: FILE: drivers/spi/Kconfig:79:
+config SPI_EXAMPLE
+	tristate "SPI Platform Example"
+	help
+	  This just builds some sample code uses the core APIs to build
+	  some SPI devices and plug in dummy controller drivers.
+
+# Atmel AT91rm9200 (and some other AT91 family chips)

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1032: FILE: drivers/spi/Kconfig:86:
+config SPI_AT91
+	tristate "AT91 as SPI master"
+	depends on ARCH_AT91
+	help
+	  This implements SPI master mode using an SPI controller.
+
+# FIXME  bitbangers need arch-specific ways to access the
+# right GPIO pins, probably using platform data and maybe
+# using platform-specific minidrivers.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1041: FILE: drivers/spi/Kconfig:95:
+config SPI_BITBANG
+	tristate "Bitbanging SPI master"
+	help
+	  You can implement SPI using GPIO pins, as this driver
+	  eventually should do.
+
+# Motorola Coldfire (m68k)

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1048: FILE: drivers/spi/Kconfig:102:
+config SPI_COLDFIRE
+	tristate "Coldfire QSPI as SPI master"
+	depends on COLDFIRE
+	help
+	  This implements SPI master mode using the QSPI controller.
+
+# Motorola MPC (PPC)

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1055: FILE: drivers/spi/Kconfig:109:
+config SPI_MPC
+	tristate "MPC SPI master"
+	depends on PPC && MPC
+	help
+	  This implements SPI master mode using the MPC SPI controller.
+
+# TI OMAP (ARM)

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1062: FILE: drivers/spi/Kconfig:116:
+config SPI_OMAP
+	tristate "OMAP SPI controller as master"
+	depends on ARCH_OMAP
+	help
+	  This implements SPI master mode using the dedicated SPI
+	  controller.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1069: FILE: drivers/spi/Kconfig:123:
+config SPI_OMAP_MCBSP
+	tristate "OMAP MCBSP as SPI master"
+	depends on ARCH_OMAP
+	help
+	  This implements master mode SPI using a McBSP controller.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1075: FILE: drivers/spi/Kconfig:129:
+config SPI_OMAP_UWIRE
+	tristate "OMAP MicroWire as SPI master"
+	depends on ARCH_OMAP
+	select OMAP_UWIRE
+	help
+	  This implements master mode SPI using the MicroWire controller.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1082: FILE: drivers/spi/Kconfig:136:
+config SPI_OMAP_MMC
+	tristate "OMAP MMC as SPI master"
+	depends on ARCH_OMAP
+	help
+	  This implements master mode SPI using an MMC controller.
+
+
+# Intel PXA (ARM)

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1090: FILE: drivers/spi/Kconfig:144:
+config SPI_PXA_SSP
+	tristate "PXA SSP controller as SPI master"
+	depends on ARCH_PXA
+	help
+	  This implements SPI master mode using an SSP controller.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1096: FILE: drivers/spi/Kconfig:150:
+config SPI_PXA_NSSP
+	tristate "PXA NSSP (or ASSP) controller as SPI master"
+	depends on ARCH_PXA
+	help
+	  This implements SPI master mode using the NSSP controller, which
+	  is available with PXA 255 and PXA 26x processors.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1103: FILE: drivers/spi/Kconfig:157:
+config SPI_PXA_MMC
+	tristate "PXA MMC as SPI master"
+	depends on ARCH_PXA
+	help
+	  This implements master mode SPI using an MMC controller.
+
+
+#
+# Add new SPI master controllers in alphabetical order above this line
+#
+
+
+#
+# There are lots of SPI device types, with sensors and memory
+# being probably the most widely used ones.
+#
+comment "SPI Protocol Masters"
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1121: FILE: drivers/spi/Kconfig:175:
+config SPI_ADS7846
+	tristate "ADS 7846 touchscreen and sensors"
+	help
+	  This chip has touchscreen, voltage, and temperature sensors.
+	  The driver packages the touchscreen as an input device,
+	  and publishes the sensor values in sysfs.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1212: FILE: drivers/spi/Kconfig:266:
+config SPI_AT91_SLAVE
+	tristate "AT91 as SPI slave"
+	depends on ARCH_AT91
+	help
+	  This implements SPI slave mode using an SPI controller.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1218: FILE: drivers/spi/Kconfig:272:
+config SPI_OMAP_SLAVE
+	tristate "OMAP SPI controller as slave"
+	depends on ARCH_OMAP
+	help
+	  This implements SPI slave mode using the dedicated SPI
+	  controller.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1225: FILE: drivers/spi/Kconfig:279:
+config SPI_OMAP_MCBSP_SLAVE
+	tristate "OMAP MCBSP as SPI slave"
+	depends on ARCH_OMAP
+	help
+	  This implements slave mode SPI using a McBSP controller.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1231: FILE: drivers/spi/Kconfig:285:
+config SPI_PXA_SSP_SLAVE
+	tristate "PXA SSP controller as SPI slave"
+	depends on ARCH_PXA
+	help
+	  This implements SPI slave mode using an SSP controller.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1237: FILE: drivers/spi/Kconfig:291:
+config SPI_PXA_NSSP_SLAVE
+	tristate "PXA NSSP (or ASSP) controller as SPI slave"
+	depends on ARCH_PXA
+	help
+	  This implements SPI slave mode using the NSSP controller, which
+	  is available with PXA 255 and PXA 26x processors.
+
+#
+# Add new SPI slave controllers in alphabetical order above this line
+#
+
+
+comment "SPI Protocol Slaves"
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1251: FILE: drivers/spi/Kconfig:305:
+config SPI_ETHERNET_SLAVE
+	tristate "Ethernet Slave"
+	depends on NET
+	help
+	  Uses SPI to exchange Ethernet packets with some SPI
+	  protocol master.
+
+#
+# Add new SPI protocol slaves in alphabetical order above this line
+#
+

WARNING:DEPRECATED_VARIABLE: Use of EXTRA_CFLAGS is deprecated, please use `ccflags-y instead.
#1306: FILE: drivers/spi/Makefile:6:
+EXTRA_CFLAGS += -DDEBUG

EXTRA_{A,C,CPP,LD}FLAGS are deprecated and should be replaced by the new
flags added via commit f77bf01425b1 ("kbuild: introduce ccflags-y,
asflags-y and ldflags-y").

The following conversion scheme maybe used::

  EXTRA_AFLAGS    ->  asflags-y
  EXTRA_CFLAGS    ->  ccflags-y
  EXTRA_CPPFLAGS  ->  cppflags-y
  EXTRA_LDFLAGS   ->  ldflags-y

See:

  1. https://lore.kernel.org/lkml/20070930191054.GA15876@uranus.ravnborg.org/
  2. https://lore.kernel.org/lkml/1313384834-24433-12-git-send-email-lacombar@gmail.com/
  3. https://www.kernel.org/doc/html/latest/kbuild/makefiles.html#compilation-flags

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000150680.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 40 warnings, 27 checks, 1126 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000150680.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
