WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#62: FILE: arch/i386/mach-vmi/smpboot_hooks.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#81: FILE: arch/i386/mach-vmi/smpboot_hooks.c:20:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#82: FILE: arch/i386/mach-vmi/smpboot_hooks.c:21:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/acpi.h> instead of <asm/acpi.h>
#95: FILE: arch/i386/mach-vmi/smpboot_hooks.c:34:
+#include <asm/acpi.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#97: FILE: arch/i386/mach-vmi/smpboot_hooks.c:36:
+#include <asm/processor.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#99: FILE: arch/i386/mach-vmi/smpboot_hooks.c:38:
+#include <asm/io.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#101: FILE: arch/i386/mach-vmi/smpboot_hooks.c:40:
+#include <asm/pgtable.h>

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#105: FILE: arch/i386/mach-vmi/smpboot_hooks.c:44:
+extern struct desc_struct idt_table[256];

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#106: FILE: arch/i386/mach-vmi/smpboot_hooks.c:45:
+extern unsigned char *trampoline_base;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#116: FILE: arch/i386/mach-vmi/smpboot_hooks.c:55:
+int no_broadcast=DEFAULT_SEND_IPI;
                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <APState>
#118: FILE: arch/i386/mach-vmi/smpboot_hooks.c:57:
+APState ap;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: arch/i386/mach-vmi/smpboot_hooks.c:61:
+                         unsigned long start_esp)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: arch/i386/mach-vmi/smpboot_hooks.c:61:
+                         unsigned long start_esp)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#124: FILE: arch/i386/mach-vmi/smpboot_hooks.c:63:
+        /* We require phys_acpicid to be the cpu number. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#125: FILE: arch/i386/mach-vmi/smpboot_hooks.c:64:
+        if (hypervisor_found) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: arch/i386/mach-vmi/smpboot_hooks.c:64:
+        if (hypervisor_found) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#126: FILE: arch/i386/mach-vmi/smpboot_hooks.c:65:
+                /* Default everything to zero.  This is fine for most GPRs. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#127: FILE: arch/i386/mach-vmi/smpboot_hooks.c:66:
+                memset(&ap, 0, sizeof(APState));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: arch/i386/mach-vmi/smpboot_hooks.c:66:
+                memset(&ap, 0, sizeof(APState));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#129: FILE: arch/i386/mach-vmi/smpboot_hooks.c:68:
+                /* Set up AP's per-cpu GDT. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#130: FILE: arch/i386/mach-vmi/smpboot_hooks.c:69:
+                memcpy(get_cpu_gdt_table(phys_apicid), cpu_gdt_table,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: arch/i386/mach-vmi/smpboot_hooks.c:69:
+                memcpy(get_cpu_gdt_table(phys_apicid), cpu_gdt_table,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#131: FILE: arch/i386/mach-vmi/smpboot_hooks.c:70:
+                       GDT_SIZE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: arch/i386/mach-vmi/smpboot_hooks.c:70:
+                       GDT_SIZE);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#132: FILE: arch/i386/mach-vmi/smpboot_hooks.c:71:
+                ap.gdtr_limit = GDT_SIZE - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: arch/i386/mach-vmi/smpboot_hooks.c:71:
+                ap.gdtr_limit = GDT_SIZE - 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: arch/i386/mach-vmi/smpboot_hooks.c:72:
+                ap.gdtr_base = (unsigned long) get_cpu_gdt_table(phys_apicid);$

CHECK:SPACING: No space is necessary after a cast
#133: FILE: arch/i386/mach-vmi/smpboot_hooks.c:72:
+                ap.gdtr_base = (unsigned long) get_cpu_gdt_table(phys_apicid);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: arch/i386/mach-vmi/smpboot_hooks.c:72:
+                ap.gdtr_base = (unsigned long) get_cpu_gdt_table(phys_apicid);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#134: FILE: arch/i386/mach-vmi/smpboot_hooks.c:73:
+                $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#134: FILE: arch/i386/mach-vmi/smpboot_hooks.c:73:
+                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: arch/i386/mach-vmi/smpboot_hooks.c:73:
+                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#135: FILE: arch/i386/mach-vmi/smpboot_hooks.c:74:
+                ap.idtr_limit = IDT_ENTRIES * 8 - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: arch/i386/mach-vmi/smpboot_hooks.c:74:
+                ap.idtr_limit = IDT_ENTRIES * 8 - 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#136: FILE: arch/i386/mach-vmi/smpboot_hooks.c:75:
+                ap.idtr_base = (unsigned long) idt_table;$

CHECK:SPACING: No space is necessary after a cast
#136: FILE: arch/i386/mach-vmi/smpboot_hooks.c:75:
+                ap.idtr_base = (unsigned long) idt_table;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: arch/i386/mach-vmi/smpboot_hooks.c:75:
+                ap.idtr_base = (unsigned long) idt_table;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#138: FILE: arch/i386/mach-vmi/smpboot_hooks.c:77:
+                ap.ldtr = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: arch/i386/mach-vmi/smpboot_hooks.c:77:
+                ap.ldtr = 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#139: FILE: arch/i386/mach-vmi/smpboot_hooks.c:78:
+                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: arch/i386/mach-vmi/smpboot_hooks.c:78:
+                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: arch/i386/mach-vmi/smpboot_hooks.c:78:
+                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: arch/i386/mach-vmi/smpboot_hooks.c:79:
+                ap.cs = __KERNEL_CS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: arch/i386/mach-vmi/smpboot_hooks.c:79:
+                ap.cs = __KERNEL_CS;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: arch/i386/mach-vmi/smpboot_hooks.c:80:
+                ap.eip = (unsigned long) start_eip;$

CHECK:SPACING: No space is necessary after a cast
#141: FILE: arch/i386/mach-vmi/smpboot_hooks.c:80:
+                ap.eip = (unsigned long) start_eip;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: arch/i386/mach-vmi/smpboot_hooks.c:80:
+                ap.eip = (unsigned long) start_eip;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: arch/i386/mach-vmi/smpboot_hooks.c:81:
+                ap.ss = __KERNEL_DS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: arch/i386/mach-vmi/smpboot_hooks.c:81:
+                ap.ss = __KERNEL_DS;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: arch/i386/mach-vmi/smpboot_hooks.c:82:
+                ap.esp = (unsigned long) start_esp;$

CHECK:SPACING: No space is necessary after a cast
#143: FILE: arch/i386/mach-vmi/smpboot_hooks.c:82:
+                ap.esp = (unsigned long) start_esp;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: arch/i386/mach-vmi/smpboot_hooks.c:82:
+                ap.esp = (unsigned long) start_esp;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#144: FILE: arch/i386/mach-vmi/smpboot_hooks.c:83:
+                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: arch/i386/mach-vmi/smpboot_hooks.c:83:
+                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: arch/i386/mach-vmi/smpboot_hooks.c:83:
+                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: arch/i386/mach-vmi/smpboot_hooks.c:84:
+                ap.ds = __USER_DS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: arch/i386/mach-vmi/smpboot_hooks.c:84:
+                ap.ds = __USER_DS;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: arch/i386/mach-vmi/smpboot_hooks.c:85:
+                ap.es = __USER_DS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: arch/i386/mach-vmi/smpboot_hooks.c:85:
+                ap.es = __USER_DS;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: arch/i386/mach-vmi/smpboot_hooks.c:86:
+                ap.fs = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: arch/i386/mach-vmi/smpboot_hooks.c:86:
+                ap.fs = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#148: FILE: arch/i386/mach-vmi/smpboot_hooks.c:87:
+                ap.gs = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: arch/i386/mach-vmi/smpboot_hooks.c:87:
+                ap.gs = 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#149: FILE: arch/i386/mach-vmi/smpboot_hooks.c:88:
+                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: arch/i386/mach-vmi/smpboot_hooks.c:88:
+                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: arch/i386/mach-vmi/smpboot_hooks.c:88:
+                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: arch/i386/mach-vmi/smpboot_hooks.c:89:
+                ap.eflags = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: arch/i386/mach-vmi/smpboot_hooks.c:89:
+                ap.eflags = 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#151: FILE: arch/i386/mach-vmi/smpboot_hooks.c:90:
+                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: arch/i386/mach-vmi/smpboot_hooks.c:90:
+                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: arch/i386/mach-vmi/smpboot_hooks.c:90:
+                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: arch/i386/mach-vmi/smpboot_hooks.c:92:
+                /* efer should match BSP efer. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: arch/i386/mach-vmi/smpboot_hooks.c:93:
+                if (cpu_has_nx) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: arch/i386/mach-vmi/smpboot_hooks.c:93:
+                if (cpu_has_nx) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: arch/i386/mach-vmi/smpboot_hooks.c:94:
+                        unsigned l, h;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: arch/i386/mach-vmi/smpboot_hooks.c:94:
+                        unsigned l, h;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#155: FILE: arch/i386/mach-vmi/smpboot_hooks.c:94:
+                        unsigned l, h;

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: arch/i386/mach-vmi/smpboot_hooks.c:95:
+                        rdmsr(MSR_EFER, l, h);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#156: FILE: arch/i386/mach-vmi/smpboot_hooks.c:95:
+                        unsigned l, h;
+                        rdmsr(MSR_EFER, l, h);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: arch/i386/mach-vmi/smpboot_hooks.c:95:
+                        rdmsr(MSR_EFER, l, h);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: arch/i386/mach-vmi/smpboot_hooks.c:96:
+                        ap.efer = (unsigned long long) h << 32 | l;$

CHECK:SPACING: No space is necessary after a cast
#157: FILE: arch/i386/mach-vmi/smpboot_hooks.c:96:
+                        ap.efer = (unsigned long long) h << 32 | l;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: arch/i386/mach-vmi/smpboot_hooks.c:96:
+                        ap.efer = (unsigned long long) h << 32 | l;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#158: FILE: arch/i386/mach-vmi/smpboot_hooks.c:97:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: arch/i386/mach-vmi/smpboot_hooks.c:97:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#161: FILE: arch/i386/mach-vmi/smpboot_hooks.c:100:
+                ap.cr3 = __pa(swapper_pg_dir);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: arch/i386/mach-vmi/smpboot_hooks.c:100:
+                ap.cr3 = __pa(swapper_pg_dir);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: arch/i386/mach-vmi/smpboot_hooks.c:101:
+                /* Protected mode, paging, AM, WP, NE, MP. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: arch/i386/mach-vmi/smpboot_hooks.c:102:
+                ap.cr0 = 0x80050023;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: arch/i386/mach-vmi/smpboot_hooks.c:102:
+                ap.cr0 = 0x80050023;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: arch/i386/mach-vmi/smpboot_hooks.c:103:
+                ap.cr4 = mmu_cr4_features;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: arch/i386/mach-vmi/smpboot_hooks.c:103:
+                ap.cr4 = mmu_cr4_features;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#165: FILE: arch/i386/mach-vmi/smpboot_hooks.c:104:
+                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: arch/i386/mach-vmi/smpboot_hooks.c:104:
+                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: arch/i386/mach-vmi/smpboot_hooks.c:104:
+                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#166: FILE: arch/i386/mach-vmi/smpboot_hooks.c:105:
+                vmi_set_initial_ap_state(__pa(&ap), phys_apicid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: arch/i386/mach-vmi/smpboot_hooks.c:105:
+                vmi_set_initial_ap_state(__pa(&ap), phys_apicid);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: arch/i386/mach-vmi/smpboot_hooks.c:106:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: arch/i386/mach-vmi/smpboot_hooks.c:106:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: arch/i386/mach-vmi/smpboot_hooks.c:111:
+        if (vmi_hypervisor_found()) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: arch/i386/mach-vmi/smpboot_hooks.c:111:
+        if (vmi_hypervisor_found()) {$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#172: FILE: arch/i386/mach-vmi/smpboot_hooks.c:111:
+        if (vmi_hypervisor_found()) {
+                *(unsigned long *) trampoline_base = 0xa5a5a5a5;
+        }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: arch/i386/mach-vmi/smpboot_hooks.c:112:
+                *(unsigned long *) trampoline_base = 0xa5a5a5a5;$

CHECK:SPACING: No space is necessary after a cast
#173: FILE: arch/i386/mach-vmi/smpboot_hooks.c:112:
+                *(unsigned long *) trampoline_base = 0xa5a5a5a5;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: arch/i386/mach-vmi/smpboot_hooks.c:112:
+                *(unsigned long *) trampoline_base = 0xa5a5a5a5;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: arch/i386/mach-vmi/smpboot_hooks.c:113:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: arch/i386/mach-vmi/smpboot_hooks.c:113:
+        }$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#180: FILE: arch/i386/mach-vmi/smpboot_hooks.c:119:
+	printk ("Using %s mode\n", no_broadcast ? "No IPI Broadcast" :

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#180: FILE: arch/i386/mach-vmi/smpboot_hooks.c:119:
+	printk ("Using %s mode\n", no_broadcast ? "No IPI Broadcast" :

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#185: FILE: arch/i386/mach-vmi/smpboot_hooks.c:124:
+__setup("no_ipi_broadcast", no_ipi_broadcast);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#189: FILE: arch/i386/mach-vmi/smpboot_hooks.c:128:
+	printk ("Using IPI %s mode\n", no_broadcast ? "No-Shortcut" :

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#189: FILE: arch/i386/mach-vmi/smpboot_hooks.c:128:
+	printk ("Using IPI %s mode\n", no_broadcast ? "No-Shortcut" :

CHECK:SPACING: No space is necessary after a cast
#222: FILE: arch/i386/kernel/smpboot.c:786:
+	smpboot_startup_ipi_hook(phys_apicid, (unsigned long) start_secondary,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#223: FILE: arch/i386/kernel/smpboot.c:787:
+	smpboot_startup_ipi_hook(phys_apicid, (unsigned long) start_secondary,
+		(unsigned long) stack_start.esp);

CHECK:SPACING: No space is necessary after a cast
#223: FILE: arch/i386/kernel/smpboot.c:787:
+		(unsigned long) stack_start.esp);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#225: FILE: arch/i386/kernel/smpboot.c:789:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#238: FILE: include/asm-i386/mach-default/smpboot_hooks.h:46:
+static inline void smpboot_startup_ipi_hook(int phys_apicid, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#239: FILE: include/asm-i386/mach-default/smpboot_hooks.h:47:
+                                            unsigned long start_eip,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: include/asm-i386/mach-default/smpboot_hooks.h:47:
+                                            unsigned long start_eip,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#240: FILE: include/asm-i386/mach-default/smpboot_hooks.h:48:
+                                            unsigned long start_esp)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: include/asm-i386/mach-default/smpboot_hooks.h:48:
+                                            unsigned long start_esp)$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#242: FILE: include/asm-i386/mach-default/smpboot_hooks.h:50:
+{
+

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#243: FILE: include/asm-i386/mach-default/smpboot_hooks.h:51:
+
+}

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#247: FILE: include/asm-i386/mach-default/smpboot_hooks.h:55:
+{
+

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#248: FILE: include/asm-i386/mach-default/smpboot_hooks.h:56:
+
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#254: FILE: include/asm-i386/mach-vmi/smpboot_hooks.h:1:
+/* $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#254: FILE: include/asm-i386/mach-vmi/smpboot_hooks.h:1:
+/* 

CHECK:CAMELCASE: Avoid CamelCase: <Dprintk>
#269: FILE: include/asm-i386/mach-vmi/smpboot_hooks.h:16:
+	Dprintk("1.\n");

CHECK:SPACING: No space is necessary after a cast
#270: FILE: include/asm-i386/mach-vmi/smpboot_hooks.h:17:
+	*((volatile unsigned short *) TRAMPOLINE_HIGH) = start_eip >> 4;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#270: FILE: include/asm-i386/mach-vmi/smpboot_hooks.h:17:
+	*((volatile unsigned short *) TRAMPOLINE_HIGH) = start_eip >> 4;

CHECK:SPACING: No space is necessary after a cast
#272: FILE: include/asm-i386/mach-vmi/smpboot_hooks.h:19:
+	*((volatile unsigned short *) TRAMPOLINE_LOW) = start_eip & 0xf;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#272: FILE: include/asm-i386/mach-vmi/smpboot_hooks.h:19:
+	*((volatile unsigned short *) TRAMPOLINE_LOW) = start_eip & 0xf;

CHECK:SPACING: No space is necessary after a cast
#289: FILE: include/asm-i386/mach-vmi/smpboot_hooks.h:36:
+	*((volatile long *) phys_to_virt(0x467)) = 0;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#289: FILE: include/asm-i386/mach-vmi/smpboot_hooks.h:36:
+	*((volatile long *) phys_to_virt(0x467)) = 0;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#302: FILE: include/asm-i386/mach-vmi/smpboot_hooks.h:49:
+extern void smpboot_startup_ipi_hook(int phys_apicid, unsigned long start_eip,

ERROR:CODE_INDENT: code indent should use tabs where possible
#303: FILE: include/asm-i386/mach-vmi/smpboot_hooks.h:50:
+                             unsigned long start_esp);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#303: FILE: include/asm-i386/mach-vmi/smpboot_hooks.h:50:
+extern void smpboot_startup_ipi_hook(int phys_apicid, unsigned long start_eip,
+                             unsigned long start_esp);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: include/asm-i386/mach-vmi/smpboot_hooks.h:50:
+                             unsigned long start_esp);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#304: FILE: include/asm-i386/mach-vmi/smpboot_hooks.h:51:
+extern void smpboot_pre_start_secondary_hook(void);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#310: FILE: include/asm-i386/mach-vmi/entry_arch.h:1:
+/*

ERROR:SPACING: space required after that ',' (ctx:VxV)
#322: FILE: include/asm-i386/mach-vmi/entry_arch.h:13:
+BUILD_INTERRUPT(reschedule_interrupt,RESCHEDULE_VECTOR)
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#323: FILE: include/asm-i386/mach-vmi/entry_arch.h:14:
+BUILD_INTERRUPT(invalidate_interrupt,INVALIDATE_TLB_VECTOR)
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#324: FILE: include/asm-i386/mach-vmi/entry_arch.h:15:
+BUILD_INTERRUPT(call_function_interrupt,CALL_FUNCTION_VECTOR)
                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#335: FILE: include/asm-i386/mach-vmi/entry_arch.h:26:
+BUILD_INTERRUPT(apic_timer_interrupt,LOCAL_TIMER_VECTOR)
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#336: FILE: include/asm-i386/mach-vmi/entry_arch.h:27:
+BUILD_INTERRUPT(error_interrupt,ERROR_APIC_VECTOR)
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#337: FILE: include/asm-i386/mach-vmi/entry_arch.h:28:
+BUILD_INTERRUPT(spurious_interrupt,SPURIOUS_APIC_VECTOR)
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#340: FILE: include/asm-i386/mach-vmi/entry_arch.h:31:
+BUILD_INTERRUPT(thermal_interrupt,THERMAL_APIC_VECTOR)
                                  ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000095353.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 64 errors, 56 warnings, 27 checks, 265 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000095353.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
