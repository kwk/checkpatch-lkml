WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
> > diff -Nru -X dontdiff linux-2.4-vanilla/drivers/ide/pci/siimage.c linux-2.4/drivers/ide/pci/siimage.c

WARNING:IF_1: Consider removing the #if 1 and its #endif
#78: FILE: include/asm-i386/page.h:99:
+#if 1	/* Set to zero for a slightly smaller kernel */

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#79: FILE: include/asm-i386/page.h:100:
+__bug void __bugfn(void) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 17)
#80: FILE: include/asm-i386/page.h:101:
+	while(1) {
+		 __asm__ __volatile__(	"ud2\n"

ERROR:SPACING: space required before the open parenthesis '('
#80: FILE: include/asm-i386/page.h:101:
+	while(1) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#81: FILE: include/asm-i386/page.h:102:
+		 __asm__ __volatile__(	"ud2\n"

ERROR:CODE_INDENT: code indent should use tabs where possible
#85: FILE: include/asm-i386/page.h:106:
+ ^I}$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#85: FILE: include/asm-i386/page.h:106:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: include/asm-i386/page.h:106:
+ ^I}$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#88: FILE: include/asm-i386/page.h:109:
+__bug void __bugfn(void) {

ERROR:SPACING: space required before the open parenthesis '('
#89: FILE: include/asm-i386/page.h:110:
+	while(1) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#89: FILE: include/asm-i386/page.h:110:
+	while(1) {
+		__asm__ __volatile__("ud2\n");
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#94: FILE: include/asm-i386/page.h:115:
+#define BUG() __bugfn()

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#117: FILE: include/linux/compiler.h:17:
+/* __noreturn__ is implemented since gcc 2.5. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __noreturn over __attribute__((__noreturn__))
#120: FILE: include/linux/compiler.h:20:
+#define __bug __attribute__((__noreturn__, __always_inline__))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __always_inline over __attribute__((__always_inline__))
#120: FILE: include/linux/compiler.h:20:
+#define __bug __attribute__((__noreturn__, __always_inline__))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000306821.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 9 warnings, 0 checks, 52 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000306821.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
