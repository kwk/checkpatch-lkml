CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#70: FILE: fs/binfmt_misc.c:41:
+#define MISC_FMT_OPEN_BINARY (1<<30)
                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT macro
#70: FILE: fs/binfmt_misc.c:41:
+#define MISC_FMT_OPEN_BINARY (1<<30)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#76: FILE: fs/binfmt_misc.c:102:
*regs)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#80: FILE: fs/binfmt_misc.c:105:
+	struct file * interp_file;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#86: FILE: fs/binfmt_misc.c:111:
+	char * fdsp = fd_str;

ERROR:CODE_INDENT: code indent should use tabs where possible
#97: FILE: fs/binfmt_misc.c:126:
+ ^Iif (fmt->flags & MISC_FMT_OPEN_BINARY) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#97: FILE: fs/binfmt_misc.c:126:
+ ^Iif (fmt->flags & MISC_FMT_OPEN_BINARY) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: fs/binfmt_misc.c:126:
+ ^Iif (fmt->flags & MISC_FMT_OPEN_BINARY) {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#99: FILE: fs/binfmt_misc.c:128:
+^I^I * interpreter than keep it open and assign descriptor $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#100: FILE: fs/binfmt_misc.c:129:
+		 * to it */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#101: FILE: fs/binfmt_misc.c:130:
+ ^I^Ifd = get_unused_fd ();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#101: FILE: fs/binfmt_misc.c:130:
+ ^I^Ifd = get_unused_fd ();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: fs/binfmt_misc.c:130:
+ ^I^Ifd = get_unused_fd ();$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#101: FILE: fs/binfmt_misc.c:130:
+ 		fd = get_unused_fd ();

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: fs/binfmt_misc.c:131:
+ ^I^Iif (fd < 0) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#102: FILE: fs/binfmt_misc.c:131:
+ ^I^Iif (fd < 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: fs/binfmt_misc.c:131:
+ ^I^Iif (fd < 0) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#103: FILE: fs/binfmt_misc.c:132:
+ ^I^I^Iretval = fd;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#103: FILE: fs/binfmt_misc.c:132:
+ ^I^I^Iretval = fd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: fs/binfmt_misc.c:132:
+ ^I^I^Iretval = fd;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#104: FILE: fs/binfmt_misc.c:133:
+ ^I^I^Igoto _ret;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#104: FILE: fs/binfmt_misc.c:133:
+ ^I^I^Igoto _ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: fs/binfmt_misc.c:133:
+ ^I^I^Igoto _ret;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: fs/binfmt_misc.c:134:
+ ^I^I} else {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#105: FILE: fs/binfmt_misc.c:134:
+ ^I^I} else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: fs/binfmt_misc.c:134:
+ ^I^I} else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#106: FILE: fs/binfmt_misc.c:135:
+ ^I^I^Ifd_install (fd, bprm->file);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#106: FILE: fs/binfmt_misc.c:135:
+ ^I^I^Ifd_install (fd, bprm->file);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: fs/binfmt_misc.c:135:
+ ^I^I^Ifd_install (fd, bprm->file);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#106: FILE: fs/binfmt_misc.c:135:
+ 			fd_install (fd, bprm->file);

ERROR:CODE_INDENT: code indent should use tabs where possible
#107: FILE: fs/binfmt_misc.c:136:
+ ^I^I^Isnprintf (fd_str, sizeof(fd_str)-1, "%d", fd);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#107: FILE: fs/binfmt_misc.c:136:
+ ^I^I^Isnprintf (fd_str, sizeof(fd_str)-1, "%d", fd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: fs/binfmt_misc.c:136:
+ ^I^I^Isnprintf (fd_str, sizeof(fd_str)-1, "%d", fd);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#107: FILE: fs/binfmt_misc.c:136:
+ 			snprintf (fd_str, sizeof(fd_str)-1, "%d", fd);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#107: FILE: fs/binfmt_misc.c:136:
+ 			snprintf (fd_str, sizeof(fd_str)-1, "%d", fd);
  			                                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#108: FILE: fs/binfmt_misc.c:137:
+ ^I^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#108: FILE: fs/binfmt_misc.c:137:
+ ^I^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: fs/binfmt_misc.c:137:
+ ^I^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#109: FILE: fs/binfmt_misc.c:138:
+ ^I} else {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#109: FILE: fs/binfmt_misc.c:138:
+ ^I} else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: fs/binfmt_misc.c:138:
+ ^I} else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#110: FILE: fs/binfmt_misc.c:139:
+ ^I^Iallow_write_access(bprm->file);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#110: FILE: fs/binfmt_misc.c:139:
+ ^I^Iallow_write_access(bprm->file);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: fs/binfmt_misc.c:139:
+ ^I^Iallow_write_access(bprm->file);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: fs/binfmt_misc.c:140:
+ ^I^Ifput(bprm->file);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#111: FILE: fs/binfmt_misc.c:140:
+ ^I^Ifput(bprm->file);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: fs/binfmt_misc.c:140:
+ ^I^Ifput(bprm->file);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#112: FILE: fs/binfmt_misc.c:141:
+ ^I^Ibprm->file = NULL;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#112: FILE: fs/binfmt_misc.c:141:
+ ^I^Ibprm->file = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: fs/binfmt_misc.c:141:
+ ^I^Ibprm->file = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#113: FILE: fs/binfmt_misc.c:142:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#113: FILE: fs/binfmt_misc.c:142:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: fs/binfmt_misc.c:142:
+ ^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#121: FILE: fs/binfmt_misc.c:149:
+ ^Iif (fmt->flags & MISC_FMT_OPEN_BINARY) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#121: FILE: fs/binfmt_misc.c:149:
+ ^Iif (fmt->flags & MISC_FMT_OPEN_BINARY) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: fs/binfmt_misc.c:149:
+ ^Iif (fmt->flags & MISC_FMT_OPEN_BINARY) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: fs/binfmt_misc.c:151:
+ ^I^Iretval = copy_strings_kernel(1, &fdsp, bprm);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#123: FILE: fs/binfmt_misc.c:151:
+ ^I^Iretval = copy_strings_kernel(1, &fdsp, bprm);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: fs/binfmt_misc.c:151:
+ ^I^Iretval = copy_strings_kernel(1, &fdsp, bprm);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#124: FILE: fs/binfmt_misc.c:152:
+ ^I} else {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#124: FILE: fs/binfmt_misc.c:152:
+ ^I} else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: fs/binfmt_misc.c:152:
+ ^I} else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#126: FILE: fs/binfmt_misc.c:154:
+ ^I^Iretval = copy_strings_kernel(1, &bprm->interp, bprm);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#126: FILE: fs/binfmt_misc.c:154:
+ ^I^Iretval = copy_strings_kernel(1, &bprm->interp, bprm);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: fs/binfmt_misc.c:154:
+ ^I^Iretval = copy_strings_kernel(1, &bprm->interp, bprm);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#127: FILE: fs/binfmt_misc.c:155:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#127: FILE: fs/binfmt_misc.c:155:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: fs/binfmt_misc.c:155:
+ ^I}$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 0)
#145: FILE: fs/binfmt_misc.c:168:
+	if (fmt->flags & MISC_FMT_OPEN_BINARY) {
[...]
mm->dumpable=0 

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#148: FILE: fs/binfmt_misc.c:170:
+		/* if the binary is not readable than enforce
+		   regardless of the interpreter's permissions */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#148: FILE: fs/binfmt_misc.c:170:
+		   regardless of the interpreter's permissions */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#158: FILE: fs/binfmt_misc.c:176:
+		 * binary and not interpreter */

WARNING:BRACES: braces {} are not necessary for single statement blocks
#160: FILE: fs/binfmt_misc.c:178:
+		if (retval < 0) {
+			goto _ret;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#165: FILE: fs/binfmt_misc.c:183:
+		memset(bprm->buf,0,BINPRM_BUF_SIZE);
 		                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#165: FILE: fs/binfmt_misc.c:183:
+		memset(bprm->buf,0,BINPRM_BUF_SIZE);
 		                  ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#173: FILE: fs/binfmt_misc.c:190:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#186: FILE: fs/binfmt_misc.c:242:
+static inline char * check_special_flags (char * sfs, Node * e)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#186: FILE: fs/binfmt_misc.c:242:
+static inline char * check_special_flags (char * sfs, Node * e)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#186: FILE: fs/binfmt_misc.c:242:
+static inline char * check_special_flags (char * sfs, Node * e)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#186: FILE: fs/binfmt_misc.c:242:
+static inline char * check_special_flags (char * sfs, Node * e)

CHECK:CAMELCASE: Avoid CamelCase: <Node>
#186: FILE: fs/binfmt_misc.c:242:
+static inline char * check_special_flags (char * sfs, Node * e)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#188: FILE: fs/binfmt_misc.c:244:
+	char * p = sfs;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#192: FILE: fs/binfmt_misc.c:248:
+	while (strchr (SPECIAL_FLAGS, *p)) {

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#193: FILE: fs/binfmt_misc.c:249:
+		switch (*p) {
+			case 'P':
[...]
+			case 'O':

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:LINE_SPACING: Please don't use multiple blank lines
#217: FILE: fs/binfmt_misc.c:364:
 
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#218: FILE: fs/binfmt_misc.c:365:
+	p = check_special_flags (p, e);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#231: FILE: fs/exec.c:819:
+^I    permission(bprm->file->f_dentry->d_inode,MAY_READ, NULL) || $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#231: FILE: fs/exec.c:819:
+	    permission(bprm->file->f_dentry->d_inode,MAY_READ, NULL) || 
 	                                            ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000311174.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 32 errors, 50 warnings, 6 checks, 184 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000311174.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
