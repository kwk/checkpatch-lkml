WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#40: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#41: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#42: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#43: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#44: 
#	           ChangeSet	1.1589  -> 1.1590 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#45: 
#	drivers/scsi/BusLogic.h	1.16    -> 1.17   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#46: 
#	drivers/scsi/BusLogic.c	1.27    -> 1.28   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#47: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
# 04/02/09	barbeque@kittens.172.16.0.1	1.1590

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
# Fix to get it building under gcc-2.95.4.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#55: 
--- a/drivers/scsi/BusLogic.c	Mon Feb  9 05:22:57 2004

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#63: FILE: drivers/scsi/BusLogic.c:470:
+      if (StatusRegister.sr.HostAdapterReady &&$

CHECK:CAMELCASE: Avoid CamelCase: <StatusRegister>
#63: FILE: drivers/scsi/BusLogic.c:470:
+      if (StatusRegister.sr.HostAdapterReady &&

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <HostAdapterReady>
#63: FILE: drivers/scsi/BusLogic.c:470:
+      if (StatusRegister.sr.HostAdapterReady &&

CHECK:CAMELCASE: Avoid CamelCase: <CommandParameterRegisterBusy>
#64: FILE: drivers/scsi/BusLogic.c:471:
+	  !StatusRegister.sr.CommandParameterRegisterBusy)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#73: FILE: drivers/scsi/BusLogic.c:507:
+      if (InterruptRegister.ir.CommandComplete) break;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#73: FILE: drivers/scsi/BusLogic.c:507:
+      if (InterruptRegister.ir.CommandComplete) break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:CAMELCASE: Avoid CamelCase: <InterruptRegister>
#73: FILE: drivers/scsi/BusLogic.c:507:
+      if (InterruptRegister.ir.CommandComplete) break;

CHECK:CAMELCASE: Avoid CamelCase: <CommandComplete>
#73: FILE: drivers/scsi/BusLogic.c:507:
+      if (InterruptRegister.ir.CommandComplete) break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: drivers/scsi/BusLogic.c:509:
+      if (StatusRegister.sr.DataInRegisterReady) break;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#77: FILE: drivers/scsi/BusLogic.c:509:
+      if (StatusRegister.sr.DataInRegisterReady) break;

CHECK:CAMELCASE: Avoid CamelCase: <DataInRegisterReady>
#77: FILE: drivers/scsi/BusLogic.c:509:
+      if (StatusRegister.sr.DataInRegisterReady) break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: drivers/scsi/BusLogic.c:510:
+      if (StatusRegister.sr.CommandParameterRegisterBusy) continue;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#78: FILE: drivers/scsi/BusLogic.c:510:
+      if (StatusRegister.sr.CommandParameterRegisterBusy) continue;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: drivers/scsi/BusLogic.c:527:
+      if (StatusRegister.sr.CommandInvalid)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#87: FILE: drivers/scsi/BusLogic.c:527:
+      if (StatusRegister.sr.CommandInvalid)
 	{

CHECK:CAMELCASE: Avoid CamelCase: <CommandInvalid>
#87: FILE: drivers/scsi/BusLogic.c:527:
+      if (StatusRegister.sr.CommandInvalid)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: drivers/scsi/BusLogic.c:565:
+      if (InterruptRegister.ir.CommandComplete) break;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#96: FILE: drivers/scsi/BusLogic.c:565:
+      if (InterruptRegister.ir.CommandComplete) break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: drivers/scsi/BusLogic.c:567:
+      if (StatusRegister.sr.DataInRegisterReady)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#99: FILE: drivers/scsi/BusLogic.c:567:
+      if (StatusRegister.sr.DataInRegisterReady)
 	{

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: drivers/scsi/BusLogic.c:605:
+  if (StatusRegister.sr.CommandInvalid)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: drivers/scsi/BusLogic.c:617:
+      if (StatusRegister.sr.CommandInvalid ||$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#132: FILE: drivers/scsi/BusLogic.c:617:
+      if (StatusRegister.sr.CommandInvalid ||
[...]
 	{

CHECK:CAMELCASE: Avoid CamelCase: <Reserved>
#133: FILE: drivers/scsi/BusLogic.c:618:
+	  StatusRegister.sr.Reserved ||

CHECK:CAMELCASE: Avoid CamelCase: <InitializationRequired>
#137: FILE: drivers/scsi/BusLogic.c:622:
+	  !StatusRegister.sr.InitializationRequired ||

CHECK:CAMELCASE: Avoid CamelCase: <DiagnosticActive>
#138: FILE: drivers/scsi/BusLogic.c:623:
+	  StatusRegister.sr.DiagnosticActive ||

CHECK:CAMELCASE: Avoid CamelCase: <DiagnosticFailure>
#139: FILE: drivers/scsi/BusLogic.c:624:
+	  StatusRegister.sr.DiagnosticFailure)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: drivers/scsi/BusLogic.c:1336:
+      StatusRegister.sr.DiagnosticActive ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: drivers/scsi/BusLogic.c:1337:
+      StatusRegister.sr.CommandParameterRegisterBusy ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: drivers/scsi/BusLogic.c:1338:
+      StatusRegister.sr.Reserved ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: drivers/scsi/BusLogic.c:1339:
+      StatusRegister.sr.CommandInvalid ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: drivers/scsi/BusLogic.c:1340:
+      InterruptRegister.ir.Reserved != 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: drivers/scsi/BusLogic.c:1408:
+      if (StatusRegister.sr.DiagnosticActive) break;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#165: FILE: drivers/scsi/BusLogic.c:1408:
+      if (StatusRegister.sr.DiagnosticActive) break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: drivers/scsi/BusLogic.c:1429:
+      if (!StatusRegister.sr.DiagnosticActive) break;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#174: FILE: drivers/scsi/BusLogic.c:1429:
+      if (!StatusRegister.sr.DiagnosticActive) break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: drivers/scsi/BusLogic.c:1445:
+      if (StatusRegister.sr.DiagnosticFailure ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: drivers/scsi/BusLogic.c:1461:
+  if (StatusRegister.sr.DiagnosticFailure ||$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 6)
#197: FILE: drivers/scsi/BusLogic.c:1461:
+  if (StatusRegister.sr.DiagnosticFailure ||
[...]
     {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: drivers/scsi/BusLogic.c:1462:
+      !StatusRegister.sr.HostAdapterReady)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: drivers/scsi/BusLogic.c:1468:
+      if (StatusRegister.sr.DataInRegisterReady)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 10)
#205: FILE: drivers/scsi/BusLogic.c:1468:
+      if (StatusRegister.sr.DataInRegisterReady)
 	{

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: drivers/scsi/BusLogic.c:1759:
+    GeometryRegister.gr.ExtendedTranslationEnabled;$

CHECK:CAMELCASE: Avoid CamelCase: <GeometryRegister>
#214: FILE: drivers/scsi/BusLogic.c:1759:
+    GeometryRegister.gr.ExtendedTranslationEnabled;

CHECK:CAMELCASE: Avoid CamelCase: <ExtendedTranslationEnabled>
#214: FILE: drivers/scsi/BusLogic.c:1759:
+    GeometryRegister.gr.ExtendedTranslationEnabled;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: drivers/scsi/BusLogic.c:3187:
+      if (InterruptRegister.ir.InterruptValid)$

CHECK:CAMELCASE: Avoid CamelCase: <InterruptValid>
#223: FILE: drivers/scsi/BusLogic.c:3187:
+      if (InterruptRegister.ir.InterruptValid)

WARNING:TABSTOP: Statements should start on a tabstop
#232: FILE: drivers/scsi/BusLogic.c:3200:
+	  if (InterruptRegister.ir.ExternalBusReset)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#232: FILE: drivers/scsi/BusLogic.c:3200:
+	  if (InterruptRegister.ir.ExternalBusReset)
 	    HostAdapter->HostAdapterExternalReset = true;

CHECK:CAMELCASE: Avoid CamelCase: <ExternalBusReset>
#232: FILE: drivers/scsi/BusLogic.c:3200:
+	  if (InterruptRegister.ir.ExternalBusReset)

WARNING:TABSTOP: Statements should start on a tabstop
#235: FILE: drivers/scsi/BusLogic.c:3202:
+	  else if (InterruptRegister.ir.IncomingMailboxLoaded)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#235: FILE: drivers/scsi/BusLogic.c:3202:
+	  else if (InterruptRegister.ir.IncomingMailboxLoaded)
 	    BusLogic_ScanIncomingMailboxes(HostAdapter);

CHECK:CAMELCASE: Avoid CamelCase: <IncomingMailboxLoaded>
#235: FILE: drivers/scsi/BusLogic.c:3202:
+	  else if (InterruptRegister.ir.IncomingMailboxLoaded)

WARNING:TABSTOP: Statements should start on a tabstop
#238: FILE: drivers/scsi/BusLogic.c:3204:
+	  else if (InterruptRegister.ir.CommandComplete)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#238: FILE: drivers/scsi/BusLogic.c:3204:
+	  else if (InterruptRegister.ir.CommandComplete)
 	    HostAdapter->HostAdapterCommandCompleted = true;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: drivers/scsi/BusLogic.h:347:
+  } cr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: drivers/scsi/BusLogic.h:366:
+  } sr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: drivers/scsi/BusLogic.h:383:
+  } ir;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: drivers/scsi/BusLogic.h:398:
+  } gr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: drivers/scsi/BusLogic.h:1275:
+  ControlRegister.cr.SCSIBusReset = true;$

CHECK:CAMELCASE: Avoid CamelCase: <ControlRegister>
#286: FILE: drivers/scsi/BusLogic.h:1275:
+  ControlRegister.cr.SCSIBusReset = true;

CHECK:CAMELCASE: Avoid CamelCase: <SCSIBusReset>
#286: FILE: drivers/scsi/BusLogic.h:1275:
+  ControlRegister.cr.SCSIBusReset = true;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: drivers/scsi/BusLogic.h:1284:
+  ControlRegister.cr.InterruptReset = true;$

CHECK:CAMELCASE: Avoid CamelCase: <InterruptReset>
#295: FILE: drivers/scsi/BusLogic.h:1284:
+  ControlRegister.cr.InterruptReset = true;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: drivers/scsi/BusLogic.h:1293:
+  ControlRegister.cr.SoftReset = true;$

CHECK:CAMELCASE: Avoid CamelCase: <SoftReset>
#304: FILE: drivers/scsi/BusLogic.h:1293:
+  ControlRegister.cr.SoftReset = true;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: drivers/scsi/BusLogic.h:1302:
+  ControlRegister.cr.HardReset = true;$

CHECK:CAMELCASE: Avoid CamelCase: <HardReset>
#313: FILE: drivers/scsi/BusLogic.h:1302:
+  ControlRegister.cr.HardReset = true;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000305349.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 56 warnings, 21 checks, 235 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000305349.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
