WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#68: FILE: drivers/sh/superhyway/superhyway-sysfs.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#69: FILE: drivers/sh/superhyway/superhyway-sysfs.c:2:
+ * drivers/sh/superhyway/superhyway-sysfs.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'field' may be better as '(field)' to avoid precedence issues
#84: FILE: drivers/sh/superhyway/superhyway-sysfs.c:17:
+#define superhyway_ro_attr(name, fmt, field)				\
+static ssize_t name##_show(struct device *dev, char *buf)		\
+{									\
+	struct superhyway_device *s = to_superhyway_device(dev);	\
+	return sprintf(buf, fmt, s->field);				\
+}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#117: FILE: drivers/sh/superhyway/superhyway.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#118: FILE: drivers/sh/superhyway/superhyway.c:2:
+ * drivers/sh/superhyway/superhyway.c

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*dev)...) over kmalloc(sizeof(struct superhyway_device)...)
#171: FILE: drivers/sh/superhyway/superhyway.c:55:
+	dev = kmalloc(sizeof(struct superhyway_device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#312: FILE: drivers/sh/superhyway/superhyway.c:196:
+EXPORT_SYMBOL(superhyway_bus_type);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#313: FILE: drivers/sh/superhyway/superhyway.c:197:
+EXPORT_SYMBOL(superhyway_add_device);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#314: FILE: drivers/sh/superhyway/superhyway.c:198:
+EXPORT_SYMBOL(superhyway_register_driver);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#315: FILE: drivers/sh/superhyway/superhyway.c:199:
+EXPORT_SYMBOL(superhyway_unregister_driver);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#322: FILE: include/linux/superhyway.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#323: FILE: include/linux/superhyway.h:2:
+ * include/linux/superhyway.h

ERROR:SPACING: space required after that ',' (ctx:VxV)
#387: FILE: include/linux/superhyway.h:66:
+#define superhyway_set_drvdata(d,p)	dev_set_drvdata(&(d)->dev, (p))
                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#389: FILE: include/linux/superhyway.h:68:
+extern int superhyway_scan_bus(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct superhyway_driver *' should also have an identifier name
#392: FILE: include/linux/superhyway.h:71:
+int superhyway_register_driver(struct superhyway_driver *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct superhyway_driver *' should also have an identifier name
#393: FILE: include/linux/superhyway.h:72:
+void superhyway_unregister_driver(struct superhyway_driver *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#394: FILE: include/linux/superhyway.h:73:
+int superhyway_add_device(unsigned int, unsigned long, unsigned long long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#394: FILE: include/linux/superhyway.h:73:
+int superhyway_add_device(unsigned int, unsigned long, unsigned long long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long long' should also have an identifier name
#394: FILE: include/linux/superhyway.h:73:
+int superhyway_add_device(unsigned int, unsigned long, unsigned long long);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000200465.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 15 warnings, 3 checks, 338 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000200465.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
