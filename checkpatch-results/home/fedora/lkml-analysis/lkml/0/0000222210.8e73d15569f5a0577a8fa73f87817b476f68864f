WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
> > vanilla 2.6.9. Could you please pick up at least one of the recent fixes 

WARNING:REPEATED_WORD: Possible repeated word: 'as'
#33: 
> > for this problem, such as as Rik van Riel's?

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#47: 
# mm_spurious_oomkill.patch

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
#       include/linux/rmap.h -2 +2

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
#       mm/rmap.c -10 +13

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
#       mm/vmscan.c -2 +2

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
#       2004/11/19 14:54:22-08:00 akpm@osdl.org 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
#       [PATCH] vmscan: ignore swap token when in trouble

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
#       

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
#       The token-based thrashing control patches introduced a problem: when a task

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
#       which doesn't hold the token tries to run direct-reclaim, that task is told

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
#       that pages which belong to the token-holding mm are referenced, even though

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
#       they are not.  This means that it is possible for a huge number of a

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
#       non-token-holding mm's pages to be scanned to no effect.  Eventually, we give

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
#       up and go and oom-kill something.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
#       

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
#       So the patch arranges for the thrashing control logic to be defeated if the

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
#       caller has reached the highest level of scanning priority.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#64: 
#       

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#65: 
#       Signed-off-by: Andrew Morton <akpm@osdl.org>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#66: 
#       Signed-off-by: Linus Torvalds <torvalds@osdl.org>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#67: 
# 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#75: FILE: include/linux/rmap.h:91:
+int page_referenced(struct page *, int is_locked, int ignore_token);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#84: FILE: include/linux/rmap.h:105:
+#define page_referenced(page,l,i) TestClearPageReferenced(page)
                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#84: FILE: include/linux/rmap.h:105:
+#define page_referenced(page,l,i) TestClearPageReferenced(page)
                               ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: mm/rmap.c:256:
+       struct vm_area_struct *vma, unsigned int *mapcount, int ignore_token)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: mm/rmap.c:291:
+       if (mm != current->mm && !ignore_token && has_swap_token(mm))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#104: FILE: mm/rmap.c:291:
+       if (mm != current->mm && !ignore_token && has_swap_token(mm))
                referenced++;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#120: FILE: mm/rmap.c:316:
        list_for_each_entry(vma, &anon_vma->head, anon_vma_node) {
+               referenced += page_referenced_one(page, vma, &mapcount,

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: mm/rmap.c:317:
+               referenced += page_referenced_one(page, vma, &mapcount,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: mm/rmap.c:317:
+               referenced += page_referenced_one(page, vma, &mapcount,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: mm/rmap.c:318:
+                                                       ignore_token);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: mm/rmap.c:318:
+                                                       ignore_token);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: mm/rmap.c:375:
+               referenced += page_referenced_one(page, vma, &mapcount,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: mm/rmap.c:375:
+               referenced += page_referenced_one(page, vma, &mapcount,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: mm/rmap.c:376:
+                                                       ignore_token);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: mm/rmap.c:376:
+                                                       ignore_token);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#158: FILE: mm/rmap.c:404:
                if (PageAnon(page))
+                       referenced += page_referenced_anon(page, ignore_token);

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: mm/rmap.c:405:
+                       referenced += page_referenced_anon(page, ignore_token);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: mm/rmap.c:405:
+                       referenced += page_referenced_anon(page, ignore_token);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#161: FILE: mm/rmap.c:406:
                else if (is_locked)
+                       referenced += page_referenced_file(page, ignore_token);

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: mm/rmap.c:407:
+                       referenced += page_referenced_file(page, ignore_token);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: mm/rmap.c:407:
+                       referenced += page_referenced_file(page, ignore_token);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#167: FILE: mm/rmap.c:411:
                        if (page->mapping)
+                               referenced += page_referenced_file(page,

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: mm/rmap.c:412:
+                               referenced += page_referenced_file(page,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: mm/rmap.c:412:
+                               referenced += page_referenced_file(page,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: mm/rmap.c:413:
+                                                               ignore_token);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: mm/rmap.c:413:
+                                                               ignore_token);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: mm/vmscan.c:380:
+               referenced = page_referenced(page, 1, sc->priority <= 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: mm/vmscan.c:380:
+               referenced = page_referenced(page, 1, sc->priority <= 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#190: FILE: mm/vmscan.c:718:
+                           page_referenced(page, 0, sc->priority <= 0)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: mm/vmscan.c:718:
+                           page_referenced(page, 0, sc->priority <= 0)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: mm/vmscan.c:677:
+       zone->pages_scanned += pgscanned;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000222210.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 42 warnings, 0 checks, 122 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000222210.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
