WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
This splits the current struct pid into two structures, struct pid and struct

WARNING:TYPO_SPELLING: 'indepedent' may be misspelled - perhaps 'independent'?
#28: 
struct task_struct.  struct pid is given an indepedent lifetime, and holds
                                            ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'indpendent' may be misspelled - perhaps 'independent'?
#33: 
In addition in giving struct pid an indpendent life it makes the concept
                                    ^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#87: FILE: include/linux/pid.h:15:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'refering' may be misspelled - perhaps 'referring'?
#95: FILE: include/linux/pid.h:23:
+ * Storing pid_t values in the kernel and refering to them later has a
                                           ^^^^^^^^

WARNING:TYPO_SPELLING: 'Refering' may be misspelled - perhaps 'Referring'?
#100: FILE: include/linux/pid.h:28:
+ * Refering to user space process by holding a reference to struct
    ^^^^^^^^

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#129: FILE: include/linux/pid.h:53:
+struct pid_link
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#141: FILE: include/linux/pid.h:65:
+extern void FASTCALL(put_pid(struct pid *pid));

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#142: FILE: include/linux/pid.h:66:
+extern struct task_struct *FASTCALL(pid_task(struct pid *pid, enum pid_type));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#143: FILE: include/linux/pid.h:67:
+extern struct task_struct *FASTCALL(get_pid_task(struct pid *pid, enum pid_type));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#144: FILE: include/linux/pid.h:68:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: include/linux/pid.h:68:
+  $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#156: FILE: include/linux/pid.h:81:
+extern struct pid *FASTCALL(find_pid(int nr));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#163: FILE: include/linux/pid.h:86:
+extern struct pid *find_get_pid(int nr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#165: FILE: include/linux/pid.h:88:
+extern struct pid *alloc_pid(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#166: FILE: include/linux/pid.h:89:
+extern void FASTCALL(free_pid(struct pid *pid));

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#171: FILE: include/linux/pid.h:94:
+#define pid_next_task(task, type) ^I^I^I^I\$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#174: FILE: include/linux/pid.h:97:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#195: FILE: include/linux/pid.h:112:
+				1; }) );				\

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "p->pids[PIDTYPE_PID].pid"
#217: FILE: include/linux/sched.h:905:
+	return p->pids[PIDTYPE_PID].pid != NULL;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#244: FILE: kernel/fork.c:1319:
+	p = copy_process(clone_flags, stack_start, regs, stack_size, parent_tidptr, child_tidptr, nr);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#343: FILE: kernel/pid.c:152:
+	if ((atomic_read(&pid->count) == 1) ||
+	     atomic_dec_and_test(&pid->count))

WARNING:LINE_SPACING: Missing a blank line after declarations
#350: FILE: kernel/pid.c:159:
+	struct pid *pid = container_of(rhp, struct pid, rcu);
+	put_pid(pid);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#375: FILE: kernel/pid.c:184:
+^I$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#457: FILE: kernel/pid.c:229:
+	link->pid = pid = find_pid(nr);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#476: FILE: kernel/pid.c:243:
+^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#492: FILE: kernel/pid.c:257:
+	struct task_struct *result = NULL;
+	if (pid) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#494: FILE: kernel/pid.c:259:
+		struct hlist_node *first;
+		first = rcu_dereference(pid->tasks[type].first);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#500: FILE: kernel/pid.c:265:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#500: FILE: kernel/pid.c:265:
+  $

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#513: FILE: kernel/pid.c:274:
+EXPORT_SYMBOL(find_task_by_pid_type);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:LINE_SPACING: Missing a blank line after declarations
#519: FILE: kernel/pid.c:279:
+	struct task_struct *result;
+	rcu_read_lock();

ERROR:TRAILING_WHITESPACE: trailing whitespace
#538: FILE: kernel/pid.c:297:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#538: FILE: kernel/pid.c:297:
+  $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#580: FILE: kernel/pid.c:331:
+	pid_cachep = kmem_cache_create("pid", sizeof(struct pid),
+					__alignof__(struct pid),

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000095989.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 15 warnings, 12 checks, 481 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000095989.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
