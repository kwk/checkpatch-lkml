WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
Patch that help umount a mount. The mount can either be shared,slave,private or

WARNING:LINE_SPACING: Missing a blank line after declarations
#90: FILE: fs/namespace.c:120:
+	struct vfsmount *child_mnt;
+	spin_lock(&vfsmount_lock);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#91: FILE: fs/namespace.c:121:
+	if ((child_mnt = __lookup_mnt(mnt, dentry, 1)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#116: FILE: fs/namespace.c:395:
+	struct nameidata old_nd;
+	if (mnt != mnt->mnt_parent) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#158: FILE: fs/namespace.c:453:
+	int mycount = atomic_read(&mnt->mnt_count);
+	return (mycount > count);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#218: FILE: fs/pnode.c:607:
+		if (child && list_empty(&child->mnt_mounts) &&

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsmount *' should also have an identifier name
#279: FILE: include/linux/pnode.h:65:
+int propagate_umount(struct vfsmount *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsmount *' should also have an identifier name
#280: FILE: include/linux/pnode.h:66:
+int propagate_mount_busy(struct vfsmount *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#280: FILE: include/linux/pnode.h:66:
+int propagate_mount_busy(struct vfsmount *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#292: FILE: include/linux/fs.h:1255:
+extern int do_refcount_check(struct vfsmount *, int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsmount *' should also have an identifier name
#292: FILE: include/linux/fs.h:1255:
+extern int do_refcount_check(struct vfsmount *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#292: FILE: include/linux/fs.h:1255:
+extern int do_refcount_check(struct vfsmount *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#308: FILE: include/linux/dcache.h:332:
+extern struct vfsmount *__lookup_mnt(struct vfsmount *, struct dentry *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsmount *' should also have an identifier name
#308: FILE: include/linux/dcache.h:332:
+extern struct vfsmount *__lookup_mnt(struct vfsmount *, struct dentry *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#308: FILE: include/linux/dcache.h:332:
+extern struct vfsmount *__lookup_mnt(struct vfsmount *, struct dentry *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#308: FILE: include/linux/dcache.h:332:
+extern struct vfsmount *__lookup_mnt(struct vfsmount *, struct dentry *, int);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000150517.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 12 warnings, 2 checks, 244 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000150517.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
