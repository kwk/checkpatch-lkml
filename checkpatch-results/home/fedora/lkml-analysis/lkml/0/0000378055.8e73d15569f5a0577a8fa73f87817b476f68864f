WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
diff -urN linux-2.5.67/arch/s390/kernel/syscalls.S linux-2.5.67-s390/arch/s390/kernel/syscalls.S

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#44: FILE: arch/s390/kernel/syscalls.S:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#46: FILE: arch/s390/kernel/syscalls.S:3:
+ * entry in the table in the form $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#134: FILE: arch/s390/kernel/syscalls.S:91:
+SYSCALL(sys_getgroups16,sys_ni_syscall,sys32_getgroups16_wrapper)	/* 80 old getgroups16 syscall */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#135: FILE: arch/s390/kernel/syscalls.S:92:
+SYSCALL(sys_setgroups16,sys_ni_syscall,sys32_setgroups16_wrapper)	/* old setgroups16 syscall */

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#214: FILE: arch/s390/kernel/syscalls.S:171:
+SYSCALL(sys_sched_get_priority_min,sys_sched_get_priority_min,sys32_sched_get_priority_min_wrapper)	/* 160 */

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#218: FILE: arch/s390/kernel/syscalls.S:175:
+SYSCALL(sys_setresuid16,sys_ni_syscall,sys32_setresuid16_wrapper)	/* old setresuid16 syscall */

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#219: FILE: arch/s390/kernel/syscalls.S:176:
+SYSCALL(sys_getresuid16,sys_ni_syscall,sys32_getresuid16_wrapper)	/* 165 old getresuid16 syscall */

WARNING:LONG_LINE_COMMENT: line length of 105 exceeds 100 columns
#224: FILE: arch/s390/kernel/syscalls.S:181:
+SYSCALL(sys_setresgid16,sys_ni_syscall,sys32_setresgid16_wrapper)	/* 170 old setresgid16 syscall */

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#225: FILE: arch/s390/kernel/syscalls.S:182:
+SYSCALL(sys_getresgid16,sys_ni_syscall,sys32_getresgid16_wrapper)	/* old getresgid16 syscall */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#295: FILE: arch/s390/kernel/syscalls.S:252:
+NI_SYSCALL^I^I^I^I^I$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#397: FILE: arch/s390/kernel/traps.c:57:
+extern pgm_check_handler_t do_region_exception;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#429: FILE: arch/s390/kernel/traps.c:88:
+	printk("Call Trace:\n");

CHECK:SPACING: No space is necessary after a cast
#445: FILE: arch/s390/kernel/traps.c:95:
+		ret_addr = *((unsigned long *) (backchain+RET_ADDR)) & PSW_ADDR_INSN;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#445: FILE: arch/s390/kernel/traps.c:95:
+		ret_addr = *((unsigned long *) (backchain+RET_ADDR)) & PSW_ADDR_INSN;
 		                                         ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#446: FILE: arch/s390/kernel/traps.c:96:
+		printk(" [<%016lx>] ", ret_addr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#463: FILE: arch/s390/kernel/traps.c:130:
+		if (i && ((i * sizeof (long) % 32) == 0))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#466: FILE: arch/s390/kernel/traps.c:132:
+		printk("%p ", (void *)*stack++);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#478: FILE: arch/s390/kernel/traps.c:153:
+	printk("%s PSW : %p %p\n",

CHECK:SPACING: No space is necessary after a cast
#479: FILE: arch/s390/kernel/traps.c:154:
+	       mode, (void *) regs->psw.mask,

CHECK:SPACING: No space is necessary after a cast
#480: FILE: arch/s390/kernel/traps.c:155:
+	       (void *) regs->psw.addr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#481: FILE: arch/s390/kernel/traps.c:156:
+	printk("%s GPRS: " FOURLONG, mode,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#484: FILE: arch/s390/kernel/traps.c:158:
+	printk("           " FOURLONG,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#487: FILE: arch/s390/kernel/traps.c:160:
+	printk("           " FOURLONG,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#490: FILE: arch/s390/kernel/traps.c:162:
+	printk("           " FOURLONG,

CHECK:SPACING: No space is necessary after a cast
#509: FILE: arch/s390/kernel/traps.c:206:
+		       (void *) regs->psw.mask, (void *)regs->psw.addr);

ERROR:CODE_INDENT: code indent should use tabs where possible
#532: FILE: arch/s390/kernel/traps.c:283:
+                fixup = search_exception_tables(regs->psw.addr & PSW_ADDR_INSN);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#532: FILE: arch/s390/kernel/traps.c:283:
+                fixup = search_exception_tables(regs->psw.addr & PSW_ADDR_INSN);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#535: FILE: arch/s390/kernel/traps.c:285:
+                        regs->psw.addr = fixup->fixup | ~PSW_ADDR_INSN;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#535: FILE: arch/s390/kernel/traps.c:285:
+                        regs->psw.addr = fixup->fixup | ~PSW_ADDR_INSN;$

CHECK:SPACING: No space is necessary after a cast
#544: FILE: arch/s390/kernel/traps.c:388:
+	location = (__u16 *) get_check_address(regs);

ERROR:CODE_INDENT: code indent should use tabs where possible
#560: FILE: arch/s390/kernel/traps.c:617:
+        pgm_check_table[0x10] = &do_segment_exception;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#560: FILE: arch/s390/kernel/traps.c:617:
+        pgm_check_table[0x10] = &do_segment_exception;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#561: FILE: arch/s390/kernel/traps.c:618:
+        pgm_check_table[0x11] = &do_page_exception;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#561: FILE: arch/s390/kernel/traps.c:618:
+        pgm_check_table[0x11] = &do_page_exception;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#567: FILE: arch/s390/kernel/traps.c:624:
+        pgm_check_table[0x38] = &addressing_exception;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#567: FILE: arch/s390/kernel/traps.c:624:
+        pgm_check_table[0x38] = &addressing_exception;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#568: FILE: arch/s390/kernel/traps.c:625:
+        pgm_check_table[0x3B] = &do_region_exception;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#568: FILE: arch/s390/kernel/traps.c:625:
+        pgm_check_table[0x3B] = &do_region_exception;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#598: FILE: arch/s390/kernel/traps.c:640:
+^I^Iif (pfault_init() == 0) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#600: FILE: arch/s390/kernel/traps.c:642:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#620: FILE: arch/s390/lib/Makefile:9:
+obj-y += delay.o $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#627: FILE: arch/s390/lib/memset64.S:1:
+/*

WARNING:TYPO_SPELLING: 'thats' may be misspelled - perhaps 'that's'?
#650: FILE: arch/s390/lib/memset64.S:24:
+        MVCLE   2,4,0(1)               # thats it, MVCLE is your friend
                                          ^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#655: FILE: arch/s390/lib/memset64.S:29:
+        $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#661: FILE: arch/s390/lib/strcmp64.S:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#687: FILE: arch/s390/lib/strcmp64.S:27:
+        $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#692: FILE: arch/s390/lib/strncpy64.S:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#726: FILE: arch/s390/lib/uaccess64.S:1:
+/*

WARNING:TYPO_SPELLING: 'callled' may be misspelled - perhaps 'called'?
#759: FILE: arch/s390/lib/uaccess64.S:34:
+	# might have callled schedule, destroying all lowcore information.
 	             ^^^^^^^

WARNING:TYPO_SPELLING: 'callled' may be misspelled - perhaps 'called'?
#789: FILE: arch/s390/lib/uaccess64.S:64:
+	# might have callled schedule, destroying all lowcore information.
 	             ^^^^^^^

WARNING:TYPO_SPELLING: 'callled' may be misspelled - perhaps 'called'?
#821: FILE: arch/s390/lib/uaccess64.S:96:
+	# might have callled schedule, destroying all lowcore information.
 	             ^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#868: FILE: arch/s390/mm/fault.c:198:
+        address = S390_lowcore.trans_exc_code & __FAIL_ADDR_MASK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#868: FILE: arch/s390/mm/fault.c:198:
+        address = S390_lowcore.trans_exc_code & __FAIL_ADDR_MASK;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#889: FILE: arch/s390/mm/fault.c:295:
+        ^I       " at virtual kernel address %p\n", (void *)address);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#889: FILE: arch/s390/mm/fault.c:295:
+        ^I       " at virtual kernel address %p\n", (void *)address);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#889: FILE: arch/s390/mm/fault.c:295:
+        ^I       " at virtual kernel address %p\n", (void *)address);$

WARNING:SPLIT_STRING: quoted string split across lines
#889: FILE: arch/s390/mm/fault.c:295:
                 printk(KERN_ALERT "Unable to handle kernel pointer dereference"
+        	       " at virtual kernel address %p\n", (void *)address);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#893: FILE: arch/s390/mm/fault.c:298:
                 printk(KERN_ALERT "Unable to handle kernel paging request"
+		       " at virtual user address %p\n", (void *)address);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#927: FILE: arch/s390/mm/fault.c:491:
 	pfault_refbk_t refbk =
+		{ 0x258, 0, 5, 2, __LC_KERNEL_STACK, 1ULL << 48, 1ULL << 48,

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#998: FILE: arch/s390/mm/init.c:100:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1004: FILE: arch/s390/mm/init.c:105:
+^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1012: FILE: arch/s390/mm/init.c:148:
+        return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1012: FILE: arch/s390/mm/init.c:148:
+        return;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1018: FILE: arch/s390/mm/init.c:154:
+        pgd_t * pg_dir;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1018: FILE: arch/s390/mm/init.c:154:
+        pgd_t * pg_dir;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1018: FILE: arch/s390/mm/init.c:154:
+        pgd_t * pg_dir;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1019: FILE: arch/s390/mm/init.c:155:
+	pmd_t * pm_dir;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1020: FILE: arch/s390/mm/init.c:156:
+        pte_t * pt_dir;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1020: FILE: arch/s390/mm/init.c:156:
+        pte_t * pt_dir;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1020: FILE: arch/s390/mm/init.c:156:
+        pte_t * pt_dir;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1021: FILE: arch/s390/mm/init.c:157:
+        pte_t   pte;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1021: FILE: arch/s390/mm/init.c:157:
+        pte_t   pte;$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1022: FILE: arch/s390/mm/init.c:158:
+	int     i,j,k;
 	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1022: FILE: arch/s390/mm/init.c:158:
+	int     i,j,k;
 	           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1023: FILE: arch/s390/mm/init.c:159:
+        unsigned long pfn = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1023: FILE: arch/s390/mm/init.c:159:
+        unsigned long pfn = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1024: FILE: arch/s390/mm/init.c:160:
+        unsigned long pgdir_k = (__pa(swapper_pg_dir) & PAGE_MASK) |$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1024: FILE: arch/s390/mm/init.c:160:
+        unsigned long pgdir_k = (__pa(swapper_pg_dir) & PAGE_MASK) |$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1025: FILE: arch/s390/mm/init.c:161:
+          _KERN_REGION_TABLE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1025: FILE: arch/s390/mm/init.c:161:
+          _KERN_REGION_TABLE;$

CHECK:BRACES: braces {} should be used on all arms of this statement
#1034: FILE: arch/s390/mm/init.c:170:
+	if (dma_pfn > high_pfn)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1036: FILE: arch/s390/mm/init.c:172:
+	else {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1044: FILE: arch/s390/mm/init.c:180:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1046: FILE: arch/s390/mm/init.c:182:
+^I * map whole physical memory to virtual memory (identity mapping) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1049: FILE: arch/s390/mm/init.c:185:
+        pg_dir = swapper_pg_dir;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1049: FILE: arch/s390/mm/init.c:185:
+        pg_dir = swapper_pg_dir;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1050: FILE: arch/s390/mm/init.c:186:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1051: FILE: arch/s390/mm/init.c:187:
+        for (i = 0 ; i < PTRS_PER_PGD ; i++,pg_dir++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1051: FILE: arch/s390/mm/init.c:187:
+        for (i = 0 ; i < PTRS_PER_PGD ; i++,pg_dir++) {$

ERROR:SPACING: space required after that ',' (ctx:OxV)
#1051: FILE: arch/s390/mm/init.c:187:
+        for (i = 0 ; i < PTRS_PER_PGD ; i++,pg_dir++) {
                                            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1052: FILE: arch/s390/mm/init.c:188:
+^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1052: FILE: arch/s390/mm/init.c:188:
+        for (i = 0 ; i < PTRS_PER_PGD ; i++,pg_dir++) {
+	

ERROR:CODE_INDENT: code indent should use tabs where possible
#1053: FILE: arch/s390/mm/init.c:189:
+                if (pfn >= max_low_pfn) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1053: FILE: arch/s390/mm/init.c:189:
+                if (pfn >= max_low_pfn) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1054: FILE: arch/s390/mm/init.c:190:
+                        pgd_clear(pg_dir);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1054: FILE: arch/s390/mm/init.c:190:
+                        pgd_clear(pg_dir);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1055: FILE: arch/s390/mm/init.c:191:
+                        continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1055: FILE: arch/s390/mm/init.c:191:
+                        continue;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1056: FILE: arch/s390/mm/init.c:192:
+                }          $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1056: FILE: arch/s390/mm/init.c:192:
+                }          $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1056: FILE: arch/s390/mm/init.c:192:
+                }          $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1057: FILE: arch/s390/mm/init.c:193:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1057: FILE: arch/s390/mm/init.c:193:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1057: FILE: arch/s390/mm/init.c:193:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1058: FILE: arch/s390/mm/init.c:194:
+^I        pm_dir = (pmd_t *) alloc_bootmem_low_pages(PAGE_SIZE*4);$

CHECK:SPACING: No space is necessary after a cast
#1058: FILE: arch/s390/mm/init.c:194:
+	        pm_dir = (pmd_t *) alloc_bootmem_low_pages(PAGE_SIZE*4);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1058: FILE: arch/s390/mm/init.c:194:
+	        pm_dir = (pmd_t *) alloc_bootmem_low_pages(PAGE_SIZE*4);
 	                                                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1059: FILE: arch/s390/mm/init.c:195:
+                pgd_populate(&init_mm, pg_dir, pm_dir);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1059: FILE: arch/s390/mm/init.c:195:
+                pgd_populate(&init_mm, pg_dir, pm_dir);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1061: FILE: arch/s390/mm/init.c:197:
+                for (j = 0 ; j < PTRS_PER_PMD ; j++,pm_dir++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1061: FILE: arch/s390/mm/init.c:197:
+                for (j = 0 ; j < PTRS_PER_PMD ; j++,pm_dir++) {$

ERROR:SPACING: space required after that ',' (ctx:OxV)
#1061: FILE: arch/s390/mm/init.c:197:
+                for (j = 0 ; j < PTRS_PER_PMD ; j++,pm_dir++) {
                                                    ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1062: FILE: arch/s390/mm/init.c:198:
+                        if (pfn >= max_low_pfn) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1062: FILE: arch/s390/mm/init.c:198:
+                        if (pfn >= max_low_pfn) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1063: FILE: arch/s390/mm/init.c:199:
+                                pmd_clear(pm_dir);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1063: FILE: arch/s390/mm/init.c:199:
+                                pmd_clear(pm_dir);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1064: FILE: arch/s390/mm/init.c:200:
+                                continue; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1064: FILE: arch/s390/mm/init.c:200:
+                                continue; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1064: FILE: arch/s390/mm/init.c:200:
+                                continue; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1065: FILE: arch/s390/mm/init.c:201:
+                        }          $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1065: FILE: arch/s390/mm/init.c:201:
+                        }          $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1065: FILE: arch/s390/mm/init.c:201:
+                        }          $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1066: FILE: arch/s390/mm/init.c:202:
+                        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1066: FILE: arch/s390/mm/init.c:202:
+                        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1066: FILE: arch/s390/mm/init.c:202:
+                        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1067: FILE: arch/s390/mm/init.c:203:
+                        pt_dir = (pte_t *) alloc_bootmem_low_pages(PAGE_SIZE);$

CHECK:SPACING: No space is necessary after a cast
#1067: FILE: arch/s390/mm/init.c:203:
+                        pt_dir = (pte_t *) alloc_bootmem_low_pages(PAGE_SIZE);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1067: FILE: arch/s390/mm/init.c:203:
+                        pt_dir = (pte_t *) alloc_bootmem_low_pages(PAGE_SIZE);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1068: FILE: arch/s390/mm/init.c:204:
+                        pmd_populate_kernel(&init_mm, pm_dir, pt_dir);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1068: FILE: arch/s390/mm/init.c:204:
+                        pmd_populate_kernel(&init_mm, pm_dir, pt_dir);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1069: FILE: arch/s390/mm/init.c:205:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1070: FILE: arch/s390/mm/init.c:206:
+                        for (k = 0 ; k < PTRS_PER_PTE ; k++,pt_dir++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1070: FILE: arch/s390/mm/init.c:206:
+                        for (k = 0 ; k < PTRS_PER_PTE ; k++,pt_dir++) {$

ERROR:SPACING: space required after that ',' (ctx:OxV)
#1070: FILE: arch/s390/mm/init.c:206:
+                        for (k = 0 ; k < PTRS_PER_PTE ; k++,pt_dir++) {
                                                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1071: FILE: arch/s390/mm/init.c:207:
+                                pte = pfn_pte(pfn, PAGE_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1071: FILE: arch/s390/mm/init.c:207:
+                                pte = pfn_pte(pfn, PAGE_KERNEL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1072: FILE: arch/s390/mm/init.c:208:
+                                if (pfn >= max_low_pfn) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1072: FILE: arch/s390/mm/init.c:208:
+                                if (pfn >= max_low_pfn) {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1073: FILE: arch/s390/mm/init.c:209:
+                                        pte_clear(&pte); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1073: FILE: arch/s390/mm/init.c:209:
+                                        pte_clear(&pte); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1073: FILE: arch/s390/mm/init.c:209:
+                                        pte_clear(&pte); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1074: FILE: arch/s390/mm/init.c:210:
+                                        continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1074: FILE: arch/s390/mm/init.c:210:
+                                        continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1075: FILE: arch/s390/mm/init.c:211:
+                                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1075: FILE: arch/s390/mm/init.c:211:
+                                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1076: FILE: arch/s390/mm/init.c:212:
+                                set_pte(pt_dir, pte);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1076: FILE: arch/s390/mm/init.c:212:
+                                set_pte(pt_dir, pte);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1077: FILE: arch/s390/mm/init.c:213:
+                                pfn++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1077: FILE: arch/s390/mm/init.c:213:
+                                pfn++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1078: FILE: arch/s390/mm/init.c:214:
+                        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1078: FILE: arch/s390/mm/init.c:214:
+                        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1079: FILE: arch/s390/mm/init.c:215:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1079: FILE: arch/s390/mm/init.c:215:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1080: FILE: arch/s390/mm/init.c:216:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1080: FILE: arch/s390/mm/init.c:216:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1082: FILE: arch/s390/mm/init.c:218:
+        /* enable virtual mapping in kernel mode */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1083: FILE: arch/s390/mm/init.c:219:
+        __asm__ __volatile__("lctlg 1,1,%0\n\t"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1083: FILE: arch/s390/mm/init.c:219:
+        __asm__ __volatile__("lctlg 1,1,%0\n\t"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1084: FILE: arch/s390/mm/init.c:220:
+                             "lctlg 7,7,%0\n\t"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1084: FILE: arch/s390/mm/init.c:220:
+                             "lctlg 7,7,%0\n\t"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1085: FILE: arch/s390/mm/init.c:221:
+                             "lctlg 13,13,%0\n\t"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1085: FILE: arch/s390/mm/init.c:221:
+                             "lctlg 13,13,%0\n\t"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1086: FILE: arch/s390/mm/init.c:222:
+                             "ssm   %1"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1086: FILE: arch/s390/mm/init.c:222:
+                             "ssm   %1"$

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#1087: FILE: arch/s390/mm/init.c:223:
+			     : :"m" (pgdir_k), "m" (ssm_mask));
 			       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1089: FILE: arch/s390/mm/init.c:225:
+        local_flush_tlb();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1089: FILE: arch/s390/mm/init.c:225:
+        local_flush_tlb();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1107: FILE: arch/s390/mm/init.c:249:
+        printk("Memory: %luk/%luk available (%ldk kernel code, %ldk reserved, %ldk data, %ldk init)\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1107: FILE: arch/s390/mm/init.c:249:
+        printk("Memory: %luk/%luk available (%ldk kernel code, %ldk reserved, %ldk data, %ldk init)\n",$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1107: FILE: arch/s390/mm/init.c:249:
+        printk("Memory: %luk/%luk available (%ldk kernel code, %ldk reserved, %ldk data, %ldk init)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1108: FILE: arch/s390/mm/init.c:250:
+        printk("Memory: %luk/%luk available (%ldk kernel code, %ldk reserved, %ldk data, %ldk init)\n",
                 (unsigned long) nr_free_pages() << (PAGE_SHIFT-10),

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000378055.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 79 errors, 79 warnings, 14 checks, 1025 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000378055.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
