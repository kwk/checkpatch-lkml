ERROR:CODE_INDENT: code indent should use tabs where possible
#74: FILE: drivers/char/ipmi/ipmi_si_intf.c:225:
+        struct completion exiting;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: drivers/char/ipmi/ipmi_si_intf.c:225:
+        struct completion exiting;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#75: FILE: drivers/char/ipmi/ipmi_si_intf.c:226:
+        long              thread_pid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: drivers/char/ipmi/ipmi_si_intf.c:226:
+        long              thread_pid;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#86: FILE: drivers/char/ipmi/ipmi_si_intf.c:788:
+	unsigned long flags, last=1;
 	                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_info->si_lock
#94: FILE: drivers/char/ipmi/ipmi_si_intf.c:796:
+		spin_lock_irqsave(&(smi_info->si_lock), flags);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#95: FILE: drivers/char/ipmi/ipmi_si_intf.c:797:
+		smi_result=smi_event_handler(smi_info, 0);
 		          ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_info->si_lock
#96: FILE: drivers/char/ipmi/ipmi_si_intf.c:798:
+		spin_unlock_irqrestore(&(smi_info->si_lock), flags);

CHECK:BRACES: braces {} should be used on all arms of this statement
#97: FILE: drivers/char/ipmi/ipmi_si_intf.c:799:
+		if (smi_result == SI_SM_CALL_WITHOUT_DELAY)
[...]
+		else if (smi_result == SI_SM_CALL_WITH_DELAY) {
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#103: FILE: drivers/char/ipmi/ipmi_si_intf.c:805:
+		}
+		else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#103: FILE: drivers/char/ipmi/ipmi_si_intf.c:805:
+		else {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_info->exiting
#110: FILE: drivers/char/ipmi/ipmi_si_intf.c:812:
+	complete_and_exit(&(smi_info->exiting), 0);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#114: FILE: drivers/char/ipmi/ipmi_si_intf.c:816:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_info->exiting
#157: FILE: drivers/char/ipmi/ipmi_si_intf.c:2218:
+		wait_for_completion(&(smi_info->exiting));

ERROR:CODE_INDENT: code indent should use tabs where possible
#182: FILE: drivers/char/ipmi/ipmi_si_intf.c:2351:
+ ^Iif (new_smi->si_type != SI_BT) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#182: FILE: drivers/char/ipmi/ipmi_si_intf.c:2351:
+ ^Iif (new_smi->si_type != SI_BT) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: drivers/char/ipmi/ipmi_si_intf.c:2351:
+ ^Iif (new_smi->si_type != SI_BT) {$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around new_smi->exiting
#183: FILE: drivers/char/ipmi/ipmi_si_intf.c:2352:
+		init_completion(&(new_smi->exiting));

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#185: FILE: drivers/char/ipmi/ipmi_si_intf.c:2354:
+						    CLONE_FS|CLONE_FILES|
 						            ^

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#185: FILE: drivers/char/ipmi/ipmi_si_intf.c:2354:
+						    CLONE_FS|CLONE_FILES|
 						                        ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000142110.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 4 warnings, 10 checks, 164 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000142110.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
