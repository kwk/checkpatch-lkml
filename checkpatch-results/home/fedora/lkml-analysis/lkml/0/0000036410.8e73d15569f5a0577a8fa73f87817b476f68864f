WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#52: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#57: FILE: drivers/net/tsi108_eth.c:1:
+/*******************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#58: FILE: drivers/net/tsi108_eth.c:2:
+  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#58: FILE: drivers/net/tsi108_eth.c:2:
+/*******************************************************************************
+  

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#60: FILE: drivers/net/tsi108_eth.c:4:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#61: FILE: drivers/net/tsi108_eth.c:5:
+  This program is free software; you can redistribute it and/or modify it $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#62: FILE: drivers/net/tsi108_eth.c:6:
+  under the terms of the GNU General Public License as published by the Free $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#63: FILE: drivers/net/tsi108_eth.c:7:
+  Software Foundation; either version 2 of the License, or (at your option) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#65: FILE: drivers/net/tsi108_eth.c:9:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#66: FILE: drivers/net/tsi108_eth.c:10:
+  This program is distributed in the hope that it will be useful, but WITHOUT $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#67: FILE: drivers/net/tsi108_eth.c:11:
+  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#68: FILE: drivers/net/tsi108_eth.c:12:
+  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#70: FILE: drivers/net/tsi108_eth.c:14:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#72: FILE: drivers/net/tsi108_eth.c:16:
+  this program; if not, write to the Free Software Foundation, Inc., 59 $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#72: FILE: drivers/net/tsi108_eth.c:16:
+  this program; if not, write to the Free Software Foundation, Inc., 59 $

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#77: FILE: drivers/net/tsi108_eth.c:21:
+/* This driver is based on the driver code originally developed^I$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#110: FILE: drivers/net/tsi108_eth.c:54:
+#include <asm/io.h>

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#130: FILE: drivers/net/tsi108_eth.c:74:
+#define CHECK_PHY_INTERVAL (HZ/2)
                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#138: FILE: drivers/net/tsi108_eth.c:82:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#150: FILE: drivers/net/tsi108_eth.c:94:
+				 * interrupt condition that has been cleared */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#158: FILE: drivers/net/tsi108_eth.c:102:
+	 * explicitly. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#166: FILE: drivers/net/tsi108_eth.c:110:
+	 * yet been configured). */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#224: FILE: drivers/net/tsi108_eth.c:168:
+	printk("Dumping %s...\n", dev->name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#225: FILE: drivers/net/tsi108_eth.c:169:
+	printk("intstat %x intmask %x phy_ok %d"

WARNING:SPLIT_STRING: quoted string split across lines
#226: FILE: drivers/net/tsi108_eth.c:170:
+	printk("intstat %x intmask %x phy_ok %d"
+	       " link %d speed %d duplex %d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#231: FILE: drivers/net/tsi108_eth.c:175:
+	printk("TX: head %d, tail %d, free %d, stat %x, estat %x, err %x\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#237: FILE: drivers/net/tsi108_eth.c:181:
+	printk("RX: head %d, tail %d, free %d, stat %x,"

WARNING:SPLIT_STRING: quoted string split across lines
#238: FILE: drivers/net/tsi108_eth.c:182:
+	printk("RX: head %d, tail %d, free %d, stat %x,"
+	       " estat %x, err %x, pending %d\n\n",

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#266: FILE: drivers/net/tsi108_eth.c:210:
+		udelay(10);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

ERROR:TRAILING_WHITESPACE: trailing whitespace
#284: FILE: drivers/net/tsi108_eth.c:228:
+static void tsi108_write_mii(struct tsi108_prv_data *data, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#285: FILE: drivers/net/tsi108_eth.c:229:
+static void tsi108_write_mii(struct tsi108_prv_data *data, 
+				int reg, u16 val)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#297: FILE: drivers/net/tsi108_eth.c:241:
+static inline void tsi108_write_tbi(struct tsi108_prv_data *data,
+					int reg, u16 val)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#299: FILE: drivers/net/tsi108_eth.c:243:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#333: FILE: drivers/net/tsi108_eth.c:277:
+			printk(KERN_NOTICE "%s : link is down\n", dev->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#383: FILE: drivers/net/tsi108_eth.c:327:
+			printk(KERN_ERR "PHY reported invalid speed,"

ERROR:TRAILING_WHITESPACE: trailing whitespace
#408: FILE: drivers/net/tsi108_eth.c:352:
+^I^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#409: FILE: drivers/net/tsi108_eth.c:353:
+		
+	}

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#419: FILE: drivers/net/tsi108_eth.c:363:
+		if (netif_queue_stopped(dev)
+		    && is_valid_ether_addr(dev->dev_addr) && data->txfree)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#424: FILE: drivers/net/tsi108_eth.c:368:
+		printk("%s : link is up: %dMb %s-duplex\n",

WARNING:INDENTED_LABEL: labels should not be indented
#430: FILE: drivers/net/tsi108_eth.c:374:
+      out:

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#522: FILE: drivers/net/tsi108_eth.c:466:
+tsi108_read_stat(struct tsi108_prv_data * data, int reg, int carry_bit,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#533: FILE: drivers/net/tsi108_eth.c:477:
+      again:

WARNING:LINE_SPACING: Missing a blank line after declarations
#555: FILE: drivers/net/tsi108_eth.c:499:
+	struct tsi108_prv_data *data = netdev_priv(dev);
+	spin_lock_irq(&data->misclock);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#660: FILE: drivers/net/tsi108_eth.c:604:
+static void tsi108_restart_rx(struct tsi108_prv_data * data, struct net_device *dev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#669: FILE: drivers/net/tsi108_eth.c:613:
+static void tsi108_restart_tx(struct tsi108_prv_data * data)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#697: FILE: drivers/net/tsi108_eth.c:641:
+			printk("%s: bad tx packet, misc %x\n",

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#711: FILE: drivers/net/tsi108_eth.c:655:
+		if (netif_queue_stopped(dev)
+		    && is_valid_ether_addr(dev->dev_addr) && data->link_up)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#716: FILE: drivers/net/tsi108_eth.c:660:
+static int tsi108_send_packet(struct sk_buff * skb, struct net_device *dev)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#723: FILE: drivers/net/tsi108_eth.c:667:
+		printk(KERN_ERR "%s: Transmit while PHY is down!\n", dev->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#726: FILE: drivers/net/tsi108_eth.c:670:
+		printk(KERN_ERR "%s: Transmit while link is down!\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#736: FILE: drivers/net/tsi108_eth.c:680:
+			printk(KERN_ERR "%s: Transmit with full tx ring!\n",

WARNING:BRACES: braces {} are not necessary for single statement blocks
#741: FILE: drivers/net/tsi108_eth.c:685:
+	if (data->txfree - frags < MAX_SKB_FRAGS + 1) {
+		netif_stop_queue(dev);
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#755: FILE: drivers/net/tsi108_eth.c:699:
+^I^I * link, the tx interrupts are kept to a reasonable level. $

WARNING:LINE_SPACING: Missing a blank line after declarations
#785: FILE: drivers/net/tsi108_eth.c:729:
+			int i;
+			printk("%s: Tx Frame contents (%d)\n", dev->name,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#785: FILE: drivers/net/tsi108_eth.c:729:
+			printk("%s: Tx Frame contents (%d)\n", dev->name,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#788: FILE: drivers/net/tsi108_eth.c:732:
+				printk(" %2.2x", skb->data[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#789: FILE: drivers/net/tsi108_eth.c:733:
+			printk(".\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#844: FILE: drivers/net/tsi108_eth.c:788:
+			int i;
+			printk("%s: Rx Frame contents (%d)\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#844: FILE: drivers/net/tsi108_eth.c:788:
+			printk("%s: Rx Frame contents (%d)\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#847: FILE: drivers/net/tsi108_eth.c:791:
+				printk(" %2.2x", skb->data[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#848: FILE: drivers/net/tsi108_eth.c:792:
+			printk(".\n");

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#871: FILE: drivers/net/tsi108_eth.c:815:
+		data->rxskbs[rx] = skb = dev_alloc_skb(TSI108_RXBUF_SIZE + 2);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:LINE_SPACING: Missing a blank line after declarations
#933: FILE: drivers/net/tsi108_eth.c:877:
+		u32 err = TSI108_ETH_READ_REG(TSI108_EC_RXERR);
+		TSI108_ETH_WRITE_REG(TSI108_EC_RXERR, err);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#937: FILE: drivers/net/tsi108_eth.c:881:
+				printk(KERN_DEBUG "%s: RX error %x\n",

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#971: FILE: drivers/net/tsi108_eth.c:915:
+		return 0;
+	} else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#985: FILE: drivers/net/tsi108_eth.c:929:
+^I * unmasked them but not cleared LINK_STATE_SCHED).  $

WARNING:TYPO_SPELLING: 'caling' may be misspelled - perhaps 'calling'?
#1046: FILE: drivers/net/tsi108_eth.c:990:
+	/* A poll is scheduled, as opposed to caling tsi108_refill_rx 
 	                                      ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1046: FILE: drivers/net/tsi108_eth.c:990:
+^I/* A poll is scheduled, as opposed to caling tsi108_refill_rx $

WARNING:LINE_SPACING: Missing a blank line after declarations
#1065: FILE: drivers/net/tsi108_eth.c:1009:
+		u32 err = TSI108_ETH_READ_REG(TSI108_EC_TXERR);
+		TSI108_ETH_WRITE_REG(TSI108_EC_TXERR, err);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1068: FILE: drivers/net/tsi108_eth.c:1012:
+			printk(KERN_ERR "%s: TX error %x\n", dev->name, err);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1098: FILE: drivers/net/tsi108_eth.c:1042:
+			printk(KERN_DEBUG "%s: SFN error\n", dev->name);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1112: FILE: drivers/net/tsi108_eth.c:1056:
+{
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1126: FILE: drivers/net/tsi108_eth.c:1070:
+^I       TSI108_EC_TXSTAT_ACTIVE) $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1133: FILE: drivers/net/tsi108_eth.c:1077:
+static void tsi108_reset_ether(struct tsi108_prv_data * data)

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1136: FILE: drivers/net/tsi108_eth.c:1080:
+	udelay(100);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1140: FILE: drivers/net/tsi108_eth.c:1084:
+	udelay(100);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1146: FILE: drivers/net/tsi108_eth.c:1090:
+	udelay(100);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1152: FILE: drivers/net/tsi108_eth.c:1096:
+	udelay(100);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1160: FILE: drivers/net/tsi108_eth.c:1104:
+	udelay(100);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1186: FILE: drivers/net/tsi108_eth.c:1130:
+		if (0x8 == data->phy)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1208: FILE: drivers/net/tsi108_eth.c:1152:
+		printk("KERN_ERR: word1: %08x, word2: %08x\n", word1, word2);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1263: FILE: drivers/net/tsi108_eth.c:1207:
+		struct dev_mc_list *mc = dev->mc_list;
+		rxcfg |= TSI108_EC_RXCFG_MFE | TSI108_EC_RXCFG_MC_HASH;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1276: FILE: drivers/net/tsi108_eth.c:1220:
+				printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#1278: FILE: drivers/net/tsi108_eth.c:1222:
+				       "%s: got multicast address of length %d "
+				       "instead of 6.\n", dev->name,

WARNING:INDENTED_LABEL: labels should not be indented
#1299: FILE: drivers/net/tsi108_eth.c:1243:
+      out:

CHECK:CAMELCASE: Avoid CamelCase: <phyVal>
#1307: FILE: drivers/net/tsi108_eth.c:1251:
+	u16 phyVal = 0;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#1348: FILE: drivers/net/tsi108_eth.c:1292:
+		msleep(10);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1352: FILE: drivers/net/tsi108_eth.c:1296:
+	printk(KERN_DEBUG "PHY_STAT reg contains %08x\n", phyVal);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1375: FILE: drivers/net/tsi108_eth.c:1319:
+	printk(KERN_DEBUG "Inside tsi108_open()!\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tsi108_open', this function's name, in a string
#1375: FILE: drivers/net/tsi108_eth.c:1319:
+	printk(KERN_DEBUG "Inside tsi108_open()!\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1379: FILE: drivers/net/tsi108_eth.c:1323:
+		printk(KERN_ERR "tsi108_eth%d: Could not allocate IRQ%d.\n",

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1382: FILE: drivers/net/tsi108_eth.c:1326:
+		return i;
+	} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#1384: FILE: drivers/net/tsi108_eth.c:1328:
+		printk(KERN_NOTICE

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tsi108_open', this function's name, in a string
#1385: FILE: drivers/net/tsi108_eth.c:1329:
+		       "tsi108_open : Port %d Assigned IRQ %d to %s\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1392: FILE: drivers/net/tsi108_eth.c:1336:
+		printk(KERN_DEBUG

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1395: FILE: drivers/net/tsi108_eth.c:1339:
+		return -ENOMEM;
+	} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1402: FILE: drivers/net/tsi108_eth.c:1346:
+		printk(KERN_DEBUG

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1406: FILE: drivers/net/tsi108_eth.c:1350:
+		return -ENOMEM;
+	} else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1429: FILE: drivers/net/tsi108_eth.c:1373:
+			printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1486: FILE: drivers/net/tsi108_eth.c:1430:
+	printk(KERN_DEBUG "Inside tsi108_ifdown!\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#1498: FILE: drivers/net/tsi108_eth.c:1442:
+		struct sk_buff *skb;
+		skb = data->txskbs[tx];

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1625: FILE: drivers/net/tsi108_eth.c:1569:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1627: FILE: drivers/net/tsi108_eth.c:1571:
+^I$

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1628: FILE: drivers/net/tsi108_eth.c:1572:
+	if (NULL == einfo) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1629: FILE: drivers/net/tsi108_eth.c:1573:
+		printk(KERN_ERR "tsi-eth %d: Missing additional data!\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1638: FILE: drivers/net/tsi108_eth.c:1582:
+		printk("tsi108_eth: Could not allocate a device structure\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1642: FILE: drivers/net/tsi108_eth.c:1586:
+	printk("tsi108_eth%d: probe...\n", pdev->id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1646: FILE: drivers/net/tsi108_eth.c:1590:
+	pr_debug("tsi108_eth%d:regs:phyresgs:phy:irq_num=0x%x:0x%x:0x%x:0x%x\n",
+			pdev->id, einfo->regs, einfo->phyregs,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1648: FILE: drivers/net/tsi108_eth.c:1592:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1682: FILE: drivers/net/tsi108_eth.c:1626:
+		printk(KERN_ERR "%s: Invalid MAC address.  Please correct.\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1692: FILE: drivers/net/tsi108_eth.c:1636:
+	printk(KERN_INFO "%s: Tsi108 Gigabit Ethernet, MAC: "

WARNING:SPLIT_STRING: quoted string split across lines
#1693: FILE: drivers/net/tsi108_eth.c:1637:
+	printk(KERN_INFO "%s: Tsi108 Gigabit Ethernet, MAC: "
+	       "%02x:%02x:%02x:%02x:%02x:%02x\n", dev->name,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1707: FILE: drivers/net/tsi108_eth.c:1651:
+ * Thus, we have to do it using a timer. $

WARNING:LINE_SPACING: Missing a blank line after declarations
#1723: FILE: drivers/net/tsi108_eth.c:1667:
+	int ret;
+	ret = platform_driver_register (&tsi_eth_driver);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1723: FILE: drivers/net/tsi108_eth.c:1667:
+	ret = platform_driver_register (&tsi_eth_driver);

ERROR:SPACING: space required before the open brace '{'
#1724: FILE: drivers/net/tsi108_eth.c:1668:
+	if (ret < 0){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1725: FILE: drivers/net/tsi108_eth.c:1669:
+		printk("tsi108_ether_init: error initializing ethernet "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tsi108_ether_init', this function's name, in a string
#1725: FILE: drivers/net/tsi108_eth.c:1669:
+		printk("tsi108_ether_init: error initializing ethernet "

WARNING:SPLIT_STRING: quoted string split across lines
#1726: FILE: drivers/net/tsi108_eth.c:1670:
+		printk("tsi108_ether_init: error initializing ethernet "
+		       "device\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1736: FILE: drivers/net/tsi108_eth.c:1680:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1743: FILE: drivers/net/tsi108_eth.c:1687:
+^I$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1746: FILE: drivers/net/tsi108_eth.c:1690:
+}
+static void tsi108_ether_exit(void)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000036410.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 32 errors, 72 warnings, 18 checks, 1700 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000036410.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
