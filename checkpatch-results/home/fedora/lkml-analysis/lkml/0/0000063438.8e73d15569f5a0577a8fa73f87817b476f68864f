WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#53: FILE: drivers/md/raid5.c:218:
+			printk("sector=%llx i=%d %p %p %p %p %d\n",

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#66: FILE: drivers/md/raid5.c:1495:
+		struct bio *return_bi=NULL;
 		                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#67: FILE: drivers/md/raid5.c:1496:
+		struct bio *return_bi=NULL;
+		PRINTK("%s: stripe %llu STRIPE_OP_BIOFILL op_state: %lx\n",

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#68: FILE: drivers/md/raid5.c:1497:
+		PRINTK("%s: stripe %llu STRIPE_OP_BIOFILL op_state: %lx\n",
+			__FUNCTION__, (unsigned long long)sh->sector,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#68: FILE: drivers/md/raid5.c:1497:
+			__FUNCTION__, (unsigned long long)sh->sector,

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#71: FILE: drivers/md/raid5.c:1500:
+		for (i=disks ; i-- ;) {
 		      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#74: FILE: drivers/md/raid5.c:1503:
+			struct bio *rbi, *rbi2;
+			rbi = dev->read;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#100: FILE: drivers/md/raid5.c:1757:
+	int fill_complete=0, to_fill=0;
 	                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#100: FILE: drivers/md/raid5.c:1757:
+	int fill_complete=0, to_fill=0;
 	                            ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#109: FILE: drivers/md/raid5.c:1773:
+	if (test_bit(STRIPE_OP_BIOFILL, &sh->state) &&
[...]
+			clear_bit(STRIPE_OP_BIOFILL, &sh->state);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#110: FILE: drivers/md/raid5.c:1774:
+	if (test_bit(STRIPE_OP_BIOFILL, &sh->state) &&
+		test_bit(STRIPE_OP_BIOFILL_Done, &sh->ops.state)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#126: FILE: drivers/md/raid5.c:1788:
+		PRINTK("check %d: state 0x%lx toread %p read %p write %p written %p\n",
+			i, dev->flags, dev->toread, dev->read, dev->towrite, dev->written);

CHECK:BRACES: braces {} should be used on all arms of this statement
#151: FILE: drivers/md/raid5.c:1797:
+			if (test_bit(R5_UPTODATE, &dev->flags)) {
[...]
-				spin_unlock_irq(&conf->device_lock);
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#153: FILE: drivers/md/raid5.c:1799:
+					BUG_ON(dev->read);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:CAMELCASE: Avoid CamelCase: <R5_Overlap>
#157: FILE: drivers/md/raid5.c:1803:
+					if (test_and_clear_bit(R5_Overlap, &dev->flags))

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:BRACES: Unbalanced braces around else statement
#165: FILE: drivers/md/raid5.c:1808:
+			} else

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000063438.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 6 warnings, 6 checks, 165 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000063438.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
