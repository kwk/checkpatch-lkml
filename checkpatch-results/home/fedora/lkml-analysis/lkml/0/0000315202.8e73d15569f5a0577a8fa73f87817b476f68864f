WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#24: 
--- linux-2.6.0/arch/m68k/kernel/traps.c	2003-10-19 16:22:28.000000000 +0200

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#31: FILE: arch/m68k/kernel/traps.c:451:
+static inline void bus_error030 (struct frame *fp)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#376: FILE: include/asm-m68k/atariints.h:183:
+static inline void atari_turnon_irq( unsigned irq )

ERROR:SPACING: space prohibited after that open parenthesis '('
#376: FILE: include/asm-m68k/atariints.h:183:
+static inline void atari_turnon_irq( unsigned irq )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#376: FILE: include/asm-m68k/atariints.h:183:
+static inline void atari_turnon_irq( unsigned irq )

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#384: FILE: include/asm-m68k/atariints.h:190:
+static inline void atari_turnoff_irq( unsigned irq )

ERROR:SPACING: space prohibited after that open parenthesis '('
#384: FILE: include/asm-m68k/atariints.h:190:
+static inline void atari_turnoff_irq( unsigned irq )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#384: FILE: include/asm-m68k/atariints.h:190:
+static inline void atari_turnoff_irq( unsigned irq )

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#393: FILE: include/asm-m68k/atariints.h:198:
+static inline void atari_clear_pending_irq( unsigned irq )

ERROR:SPACING: space prohibited after that open parenthesis '('
#393: FILE: include/asm-m68k/atariints.h:198:
+static inline void atari_clear_pending_irq( unsigned irq )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#393: FILE: include/asm-m68k/atariints.h:198:
+static inline void atari_clear_pending_irq( unsigned irq )

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#401: FILE: include/asm-m68k/atariints.h:205:
+static inline int atari_irq_pending( unsigned irq )

ERROR:SPACING: space prohibited after that open parenthesis '('
#401: FILE: include/asm-m68k/atariints.h:205:
+static inline int atari_irq_pending( unsigned irq )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#401: FILE: include/asm-m68k/atariints.h:205:
+static inline int atari_irq_pending( unsigned irq )

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#413: FILE: include/asm-m68k/bitops.h:25:
+					      volatile unsigned long *vaddr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#423: FILE: include/asm-m68k/bitops.h:37:
+					     volatile unsigned long *vaddr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#432: FILE: include/asm-m68k/bitops.h:54:
+static inline void __constant_set_bit(int nr, volatile unsigned long *vaddr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#439: FILE: include/asm-m68k/bitops.h:60:
+static inline void __generic_set_bit(int nr, volatile unsigned long *vaddr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#449: FILE: include/asm-m68k/bitops.h:74:
+						volatile unsigned long *vaddr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#459: FILE: include/asm-m68k/bitops.h:86:
+					       volatile unsigned long *vaddr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#468: FILE: include/asm-m68k/bitops.h:108:
+static inline void __constant_clear_bit(int nr, volatile unsigned long *vaddr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#475: FILE: include/asm-m68k/bitops.h:114:
+static inline void __generic_clear_bit(int nr, volatile unsigned long *vaddr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#485: FILE: include/asm-m68k/bitops.h:129:
+						 volatile unsigned long *vaddr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#495: FILE: include/asm-m68k/bitops.h:141:
+						volatile unsigned long *vaddr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#504: FILE: include/asm-m68k/bitops.h:156:
+static inline void __constant_change_bit(int nr, volatile unsigned long *vaddr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#511: FILE: include/asm-m68k/bitops.h:162:
+static inline void __generic_change_bit(int nr, volatile unsigned long *vaddr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#518: FILE: include/asm-m68k/bitops.h:168:
+static inline int test_bit(int nr, const volatile unsigned long *vaddr)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#526: FILE: include/asm-m68k/bitops.h:174:
+				      unsigned size)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#556: FILE: include/asm-m68k/bitops.h:298:
+static inline int minix_find_first_zero_bit(const void *vaddr, unsigned size)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#566: FILE: include/asm-m68k/bitops.h:320:
+static inline int minix_test_and_set_bit(int nr, volatile void *vaddr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#576: FILE: include/asm-m68k/bitops.h:332:
+static inline int minix_test_and_clear_bit(int nr, volatile void *vaddr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#586: FILE: include/asm-m68k/bitops.h:342:
+static inline int minix_test_bit(int nr, const volatile void *vaddr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#595: FILE: include/asm-m68k/bitops.h:349:
+static inline int ext2_set_bit(int nr, volatile void *vaddr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#605: FILE: include/asm-m68k/bitops.h:359:
+static inline int ext2_clear_bit(int nr, volatile void *vaddr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#615: FILE: include/asm-m68k/bitops.h:387:
+static inline int ext2_test_bit(int nr, const volatile void *vaddr)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#622: FILE: include/asm-m68k/bitops.h:392:
+static inline int ext2_find_first_zero_bit(const void *vaddr, unsigned size)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#632: FILE: include/asm-m68k/bitops.h:414:
+static inline int ext2_find_next_zero_bit(const void *vaddr, unsigned size,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#633: FILE: include/asm-m68k/bitops.h:415:
+					  unsigned offset)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#720: FILE: include/asm-m68k/io.h:292:
 }
+static inline void *ioremap_nocache(unsigned long physaddr, unsigned long size)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#725: FILE: include/asm-m68k/io.h:296:
 }
+static inline void *ioremap_writethrough(unsigned long physaddr,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#731: FILE: include/asm-m68k/io.h:301:
 }
+static inline void *ioremap_fullcache(unsigned long physaddr,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#912: FILE: include/asm-m68k/motorola_pgtable.h:189:
 }
+static inline pte_t pte_mkcache(pte_t pte)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1174: FILE: include/asm-m68k/string.h:85:
+static inline char *strpbrk(const char *cs,const char *ct)
                                           ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1219: FILE: include/asm-m68k/sun3_pgtable.h:124:
+static inline int pte_none (pte_t pte) { return !pte_val (pte); }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1219: FILE: include/asm-m68k/sun3_pgtable.h:124:
+static inline int pte_none (pte_t pte) { return !pte_val (pte); }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1220: FILE: include/asm-m68k/sun3_pgtable.h:125:
+static inline int pte_present (pte_t pte) { return pte_val (pte) & SUN3_PAGE_VALID; }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1220: FILE: include/asm-m68k/sun3_pgtable.h:125:
+static inline int pte_present (pte_t pte) { return pte_val (pte) & SUN3_PAGE_VALID; }

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1221: FILE: include/asm-m68k/sun3_pgtable.h:126:
+static inline void pte_clear (pte_t *ptep) { pte_val (*ptep) = 0; }

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1221: FILE: include/asm-m68k/sun3_pgtable.h:126:
+static inline void pte_clear (pte_t *ptep) { pte_val (*ptep) = 0; }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1221: FILE: include/asm-m68k/sun3_pgtable.h:126:
+static inline void pte_clear (pte_t *ptep) { pte_val (*ptep) = 0; }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1230: FILE: include/asm-m68k/sun3_pgtable.h:136:
+static inline int pmd_none2 (pmd_t *pmd) { return !pmd_val (*pmd); }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1230: FILE: include/asm-m68k/sun3_pgtable.h:136:
+static inline int pmd_none2 (pmd_t *pmd) { return !pmd_val (*pmd); }

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#1234: FILE: include/asm-m68k/sun3_pgtable.h:138:
+//static inline int pmd_bad (pmd_t pmd) { return (pmd_val (pmd) & SUN3_PMD_MASK) != SUN3_PMD_MAGIC; }

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1235: FILE: include/asm-m68k/sun3_pgtable.h:139:
+static inline int pmd_bad2 (pmd_t *pmd) { return 0; }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1238: FILE: include/asm-m68k/sun3_pgtable.h:141:
+static inline int pmd_present2 (pmd_t *pmd) { return pmd_val (*pmd) & SUN3_PMD_VALID; }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1238: FILE: include/asm-m68k/sun3_pgtable.h:141:
+static inline int pmd_present2 (pmd_t *pmd) { return pmd_val (*pmd) & SUN3_PMD_VALID; }

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1242: FILE: include/asm-m68k/sun3_pgtable.h:144:
+static inline void pmd_clear (pmd_t *pmdp) { pmd_val (*pmdp) = 0; }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1242: FILE: include/asm-m68k/sun3_pgtable.h:144:
+static inline void pmd_clear (pmd_t *pmdp) { pmd_val (*pmdp) = 0; }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1242: FILE: include/asm-m68k/sun3_pgtable.h:144:
+static inline void pmd_clear (pmd_t *pmdp) { pmd_val (*pmdp) = 0; }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1248: FILE: include/asm-m68k/sun3_pgtable.h:146:
+static inline int pgd_none (pgd_t pgd) { return 0; }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1249: FILE: include/asm-m68k/sun3_pgtable.h:147:
+static inline int pgd_bad (pgd_t pgd) { return 0; }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1250: FILE: include/asm-m68k/sun3_pgtable.h:148:
+static inline int pgd_present (pgd_t pgd) { return 1; }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1251: FILE: include/asm-m68k/sun3_pgtable.h:149:
+static inline void pgd_clear (pgd_t *pgdp) {}

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1284: FILE: include/asm-m68k/sun3_pgtable.h:172:
+static inline pte_t pte_wrprotect(pte_t pte)	{ pte_val(pte) &= ~SUN3_PAGE_WRITEABLE; return pte; }

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1309: FILE: include/asm-m68k/sun3_pgtable.h:201:
+static inline pmd_t *pmd_offset (pgd_t *pgd, unsigned long address)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1457: FILE: include/asm-m68k/zorro.h:35:
 }
+static inline void *z_remap_fullcache(unsigned long physaddr,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000315202.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 50 warnings, 5 checks, 1281 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000315202.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
