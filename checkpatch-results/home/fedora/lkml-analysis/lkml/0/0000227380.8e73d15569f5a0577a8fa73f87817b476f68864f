WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#68: 
--- working-2.6.orig/arch/ppc64/kernel/sysfs.c	2004-11-17 11:19:38.000000000 +1100

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#118: FILE: arch/ppc64/kernel/sysfs.c:302:
+	BUG_ON(c->no_control);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#150: FILE: arch/ppc64/kernel/sysfs.c:334:
+static int __devinit sysfs_cpu_notify(struct notifier_block *self, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#150: FILE: arch/ppc64/kernel/sysfs.c:334:
+static int __devinit sysfs_cpu_notify(struct notifier_block *self, 

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#168: FILE: arch/ppc64/kernel/sysfs.c:352:
+static struct notifier_block __devinitdata sysfs_cpu_nb = {

WARNING:MISPLACED_INIT: __devinitdata should be placed after sysfs_cpu_nb
#168: FILE: arch/ppc64/kernel/sysfs.c:352:
+static struct notifier_block __devinitdata sysfs_cpu_nb = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'c->no_control == 0'
#215: FILE: arch/ppc64/kernel/sysfs.c:420:
+		if (cpu_online(cpu) || (c->no_control == 0)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000227380.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 5 warnings, 1 checks, 153 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000227380.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
