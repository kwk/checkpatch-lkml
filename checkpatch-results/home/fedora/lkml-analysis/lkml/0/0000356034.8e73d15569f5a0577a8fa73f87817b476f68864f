WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
+#define USER_PTRS_PER_PMD(x)   ((PARTIAL_PGD && ((x)==USER_PTRS_PER_PGD-1)) ? \

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#46: 
#define USER_PTRS_PER_PMD(x)   ((PARTIAL_PGD && ((x)==USER_PTRS_PER_PGD-1)) ? \

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:TYPO_SPELLING: 'boundarys' may be misspelled - perhaps 'boundaries'?
#50: 
before my change, it worked at 1Gig boundarys (ok, i really only tested at 0xc0000000) and
                                    ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'boundarys' may be misspelled - perhaps 'boundaries'?
#51: 
at 1gig + .5Gig boundarys (e.g. 0xe0000000), 0xd0000000 would blow up, and I think 0xe8000000
                ^^^^^^^^^

WARNING:TYPO_SPELLING: 'boundarys' may be misspelled - perhaps 'boundaries'?
#67: 
> > to be set on boundarys other then 1GB multiples. I started with
                 ^^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#139: FILE: arch/i386/mm/init.c:218:
+	((pte_t *) pmd_page_kernel(*(dir)) +  __pte_offset(address))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#141: FILE: arch/i386/mm/init.c:220:
+	((unsigned long) __va(pmd_val(pmd) & PAGE_MASK))

CHECK:SPACING: No space is necessary after a cast
#148: FILE: arch/i386/mm/init.c:227:
+	pte_t *page_table = (pte_t *) alloc_bootmem_low_pages(PAGE_SIZE);

WARNING:LINE_SPACING: Missing a blank line after declarations
#149: FILE: arch/i386/mm/init.c:228:
+	pte_t *page_table = (pte_t *) alloc_bootmem_low_pages(PAGE_SIZE);
+	set_pmd(pmd, __pmd(__pa(page_table) | _KERNPG_TABLE));

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#151: FILE: arch/i386/mm/init.c:230:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#156: FILE: arch/i386/mm/init.c:235:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#156: FILE: arch/i386/mm/init.c:235:
+
+	

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#165: FILE: arch/i386/mm/init.c:244:
+}
+static inline pte_t pfn_pte(unsigned long page_nr, pgprot_t pgprot)

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: arch/i386/mm/init.c:265:
+        pmd_table = (pmd_t *) alloc_bootmem_low_pages(PAGE_SIZE);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: No space is necessary after a cast
#186: FILE: arch/i386/mm/init.c:265:
+        pmd_table = (pmd_t *) alloc_bootmem_low_pages(PAGE_SIZE);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: arch/i386/mm/init.c:265:
+        pmd_table = (pmd_t *) alloc_bootmem_low_pages(PAGE_SIZE);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#187: FILE: arch/i386/mm/init.c:266:
+        set_pgd(pgd, __pgd(__pa(pmd_table) | _PAGE_PRESENT));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: arch/i386/mm/init.c:266:
+        set_pgd(pgd, __pgd(__pa(pmd_table) | _PAGE_PRESENT));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#188: FILE: arch/i386/mm/init.c:267:
+        if (pmd_table != pmd_offset(pgd, 0))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: arch/i386/mm/init.c:267:
+        if (pmd_table != pmd_offset(pgd, 0))$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#189: FILE: arch/i386/mm/init.c:268:
+		BUG();

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#196: FILE: arch/i386/mm/init.c:275:
+void pmd_map_pfn_range(pmd_t* pmd_entry, unsigned long pfn, unsigned long max_pfn)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#204: FILE: arch/i386/mm/init.c:283:
+		pte_t* pte = one_page_table_init(pmd_entry);

WARNING:LINE_SPACING: Missing a blank line after declarations
#205: FILE: arch/i386/mm/init.c:284:
+		pte_t* pte = one_page_table_init(pmd_entry);
+		for (pte_ofs = 0; pte_ofs < PTRS_PER_PTE && pfn < max_pfn; pte++, pfn++, pte_ofs++)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#209: FILE: arch/i386/mm/init.c:288:
+^I^I^I^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#210: FILE: arch/i386/mm/init.c:289:
+					
+

ERROR:SPACING: space required before the open parenthesis '('
#225: FILE: arch/i386/mm/init.c:304:
+	if(!cpu_has_pse) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#226: FILE: arch/i386/mm/init.c:305:
+		printk("PAE enabled, but no support for PSE (large pages)!");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#227: FILE: arch/i386/mm/init.c:306:
+		printk("this is likely to waste some RAM.");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#230: FILE: arch/i386/mm/init.c:309:
+^Ifor (; pmd_ofs < PTRS_PER_PMD && pfn <= max_low_pfn; pmd++, pmd_ofs++) { $

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#236: FILE: arch/i386/mm/init.c:315:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#238: FILE: arch/i386/mm/init.c:317:
+
+

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#262: FILE: arch/i386/mm/init.c:415:
+	printk("zap_low_mappings()\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#306: FILE: include/asm-i386/pgalloc.h:57:
+			memcpy(pgd + USER_PTRS_PER_PGD,
+				swapper_pg_dir + USER_PTRS_PER_PGD,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#311: FILE: include/asm-i386/pgalloc.h:62:
+^I^I^I$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#316: FILE: include/asm-i386/pgalloc.h:67:
+			memcpy(upmd, kpmd, (PTRS_PER_PMD-PARTIAL_PMD)*sizeof(pmd_t));
 			                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#316: FILE: include/asm-i386/pgalloc.h:67:
+			memcpy(upmd, kpmd, (PTRS_PER_PMD-PARTIAL_PMD)*sizeof(pmd_t));
 			                                             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#318: FILE: include/asm-i386/pgalloc.h:69:
+^I^I^I$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#330: FILE: include/asm-i386/pgtable.h:141:
+#define __USER_PTRS_PER_PGD    (TASK_SIZE/PGDIR_SIZE)
                                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#331: FILE: include/asm-i386/pgtable.h:142:
+#define PARTIAL_PGD    (TASK_SIZE > __USER_PTRS_PER_PGD*PGDIR_SIZE ? 1 : 0)
                                                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#332: FILE: include/asm-i386/pgtable.h:143:
+#define PARTIAL_PMD    ((TASK_SIZE % PGDIR_SIZE)/PMD_SIZE)
                                                 ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#334: FILE: include/asm-i386/pgtable.h:145:
+#define USER_PTRS_PER_PMD(x)   ((PARTIAL_PGD && ((x)==USER_PTRS_PER_PGD-1)) ? \
                                                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#334: FILE: include/asm-i386/pgtable.h:145:
+#define USER_PTRS_PER_PMD(x)   ((PARTIAL_PGD && ((x)==USER_PTRS_PER_PGD-1)) ? \
                                                                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#335: FILE: include/asm-i386/pgtable.h:146:
+				(PTRS_PER_PMD-PARTIAL_PMD) : \
 				             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#337: FILE: include/asm-i386/pgtable.h:148:
+^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#349: FILE: mm/memory.c:114:
+static inline void free_one_pgd(pgd_t * pgd, unsigned long pgdi)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#354: FILE: mm/memory.c:118:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000356034.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 15 warnings, 17 checks, 237 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000356034.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
