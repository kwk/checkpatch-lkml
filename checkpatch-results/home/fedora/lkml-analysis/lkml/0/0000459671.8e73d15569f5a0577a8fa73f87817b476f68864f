ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#55: 
--- a/fs/jfs/jfs_logmgr.c	Thu May  9 08:13:46 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:CAMELCASE: Avoid CamelCase: <lmLogWait>
#65: FILE: fs/jfs/jfs_logmgr.c:1393:
+void lmLogWait(log_t *log)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <jFYI>
#69: FILE: fs/jfs/jfs_logmgr.c:1397:
+	jFYI(1, ("lmLogWait: log:0x%p\n", log));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'lmLogWait', this function's name, in a string
#69: FILE: fs/jfs/jfs_logmgr.c:1397:
+	jFYI(1, ("lmLogWait: log:0x%p\n", log));

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'log->cqueue.head == NULL'
#80: FILE: fs/jfs/jfs_logmgr.c:1408:
+			if ((log->cqueue.head == NULL) &&
+			    list_empty(&log->synclist))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!log->cqueue.head"
#80: FILE: fs/jfs/jfs_logmgr.c:1408:
+			if ((log->cqueue.head == NULL) &&

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!log->cqueue.head"
#85: FILE: fs/jfs/jfs_logmgr.c:1413:
+	assert(log->cqueue.head == NULL);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#125: FILE: fs/jfs/jfs_logmgr.h:492:
+extern void lmLogWait(log_t * log);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#125: FILE: fs/jfs/jfs_logmgr.h:492:
+extern void lmLogWait(log_t * log);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#137: FILE: fs/jfs/jfs_umount.c:67:
+	if ((log = sbi->log))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#142: FILE: fs/jfs/jfs_umount.c:69:
+^I^I * Wait for outstanding transactions to be written to log: $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#176: FILE: fs/jfs/jfs_umount.c:131:
+^I^I * close log: $

CHECK:CAMELCASE: Avoid CamelCase: <lmLogClose>
#180: FILE: fs/jfs/jfs_umount.c:135:
+		rc = lmLogClose(sb, log);

CHECK:CAMELCASE: Avoid CamelCase: <updateSuper>
#213: FILE: fs/jfs/jfs_umount.c:166:
+	updateSuper(sb, FM_CLEAN);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000459671.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 1 warnings, 8 checks, 149 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000459671.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
