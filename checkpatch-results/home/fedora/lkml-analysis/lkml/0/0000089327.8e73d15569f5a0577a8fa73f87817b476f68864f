WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#36: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#247: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:212:
+EXPORT_SYMBOL_GPL(ipath_layer_set_linkstate);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:SPLIT_STRING: quoted string split across lines
#296: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:261:
+		ipath_cdbg(VERBOSE, "ibmaxlen was 0x%x, setting to 0x%x "
+			   "(mtu 0x%x)\n", dd->ipath_ibmaxlen, piosize,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:LINE_SPACING: Missing a blank line after declarations
#308: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:273:
+		u64 ibc = dd->ipath_ibcctrl;
+		ibc &= ~(INFINIPATH_IBCC_MAXPKTLEN_MASK <<

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#333: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:298:
+EXPORT_SYMBOL_GPL(ipath_layer_set_mtu);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#351: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:316:
+EXPORT_SYMBOL_GPL(ipath_set_sps_lid);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#360: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:325:
+EXPORT_SYMBOL_GPL(ipath_layer_set_guid);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#367: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:332:
+EXPORT_SYMBOL_GPL(ipath_layer_get_guid);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#374: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:339:
+EXPORT_SYMBOL_GPL(ipath_layer_get_nguid);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#376: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:341:
+int ipath_layer_query_device(struct ipath_devdata *dd, u32 * vendor,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#377: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:342:
+			     u32 * boardrev, u32 * majrev, u32 * minrev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#377: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:342:
+			     u32 * boardrev, u32 * majrev, u32 * minrev)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#377: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:342:
+			     u32 * boardrev, u32 * majrev, u32 * minrev)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#387: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:352:
+EXPORT_SYMBOL_GPL(ipath_layer_query_device);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#394: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:359:
+EXPORT_SYMBOL_GPL(ipath_layer_get_flags);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#401: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:366:
+EXPORT_SYMBOL_GPL(ipath_layer_get_device);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#408: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:373:
+EXPORT_SYMBOL_GPL(ipath_layer_get_deviceid);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#415: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:380:
+EXPORT_SYMBOL_GPL(ipath_layer_get_lastibcstat);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#422: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:387:
+EXPORT_SYMBOL_GPL(ipath_layer_get_ibmtu);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#498: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:463:
+EXPORT_SYMBOL_GPL(ipath_layer_register);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#528: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:493:
+EXPORT_SYMBOL_GPL(ipath_layer_unregister);

CHECK:SPACING: No space is necessary after a cast
#532: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:497:
+	struct ipath_devdata *dd = (struct ipath_devdata *) arg;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#557: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:522:
+			 int (*l_piobufavail) (void *arg),

WARNING:SPACING: Unnecessary space before function pointer arguments
#558: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:523:
+			 void (*l_rcv) (void *arg, void *rhdr,

WARNING:SPACING: Unnecessary space before function pointer arguments
#560: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:525:
+			 void (*l_timer_cb) (void *arg))

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#595: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:560:
+EXPORT_SYMBOL_GPL(ipath_verbs_register);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#627: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:592:
+EXPORT_SYMBOL_GPL(ipath_verbs_unregister);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#629: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:594:
+int ipath_layer_open(struct ipath_devdata *dd, u32 * pktmax)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#668: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:633:
+EXPORT_SYMBOL_GPL(ipath_layer_open);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#675: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:640:
+EXPORT_SYMBOL_GPL(ipath_layer_get_lid);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#690: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:655:
+int ipath_layer_get_mac(struct ipath_devdata *dd, u8 * mac)

CHECK:SPACING: No space is necessary after a cast
#694: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:659:
+	guid = (u8 *) &dd->ipath_guid;

WARNING:SPLIT_STRING: quoted string split across lines
#704: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:669:
+		ipath_dbg("Warning, guid bytes 3 and 4 not 0 or 0xffff: "
+			  "%x %x\n", guid[3], guid[4]);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#708: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:673:
+EXPORT_SYMBOL_GPL(ipath_layer_get_mac);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#715: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:680:
+EXPORT_SYMBOL_GPL(ipath_layer_get_bcast);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#722: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:687:
+EXPORT_SYMBOL_GPL(ipath_layer_get_cr_errpkey);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sge->mr"
#734: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:699:
+	} else if (sge->length == 0 && sge->mr != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#792: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:757:
+		BUG_ON(len == 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: No space is necessary after a cast
#831: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:796:
+			u32 *addr = (u32 *) ss->sge.vaddr;

CHECK:SPACING: No space is necessary after a cast
#887: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:852:
+			last = ((u32 *) ss->sge.vaddr)[w - 1];

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#889: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:854:
+			break;
+		} else {

CHECK:SPACING: No space is necessary after a cast
#897: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:862:
+				u32 v = ((u32 *) ss->sge.vaddr)[w];

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!piobuf"
#943: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:908:
+	if (unlikely(piobuf == NULL)) {

CHECK:SPACING: No space is necessary after a cast
#983: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:948:
+		__raw_writel(((u32 *) ss->sge.vaddr)[w - 1],

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#998: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:963:
+EXPORT_SYMBOL_GPL(ipath_verbs_send);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1024: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:989:
+EXPORT_SYMBOL_GPL(ipath_layer_snapshot_counters);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1034: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:999:
+int ipath_layer_get_counters(struct ipath_devdata *dd,
+			      struct ipath_layer_counters *cntrs)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1081: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1046:
+EXPORT_SYMBOL_GPL(ipath_layer_get_counters);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1092: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1057:
+EXPORT_SYMBOL_GPL(ipath_layer_want_buffer);

CHECK:BRACES: Unbalanced braces around else statement
#1105: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1070:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPLIT_STRING: quoted string split across lines
#1113: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1078:
+			ipath_cdbg(VERBOSE, "send while not ready, "
+				   "mylid=%u, flags=0x%x\n",

CHECK:SPACING: No space is necessary after a cast
#1117: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1082:
+	vlsllnh = *((__be16 *) hdr);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!piobuf"
#1129: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1094:
+	if (piobuf == NULL) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1137: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1102:
+	writeq(plen+1, piobuf); /* len (+1 for pad) to pbc, no flags */
 	           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1141: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1106:
+	count = plen-1; /* amount we can copy before trigger word */
 	            ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1153: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1118:
+EXPORT_SYMBOL_GPL(ipath_layer_send_hdr);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1164: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1129:
+EXPORT_SYMBOL_GPL(ipath_layer_set_piointbufavail_int);

CHECK:SPACING: No space is necessary after a cast
#1183: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1148:
+				 (u64) (1 << 2));

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1195: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1160:
+EXPORT_SYMBOL_GPL(ipath_layer_enable_timer);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1208: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1173:
+EXPORT_SYMBOL_GPL(ipath_layer_disable_timer);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1215: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1180:
+int ipath_layer_set_verbs_flags(struct ipath_devdata *dd, unsigned flags)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1237: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1202:
+EXPORT_SYMBOL_GPL(ipath_layer_set_verbs_flags);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1243: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1208:
+unsigned ipath_layer_get_npkeys(struct ipath_devdata *dd)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1248: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1213:
+EXPORT_SYMBOL_GPL(ipath_layer_get_npkeys);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1255: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1220:
+unsigned ipath_layer_get_pkey(struct ipath_devdata *dd, unsigned index)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1255: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1220:
+unsigned ipath_layer_get_pkey(struct ipath_devdata *dd, unsigned index)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1257: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1222:
+	unsigned ret;

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1267: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1232:
+EXPORT_SYMBOL_GPL(ipath_layer_get_pkey);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1274: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1239:
+int ipath_layer_get_pkeys(struct ipath_devdata *dd, u16 * pkeys)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1283: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1248:
+EXPORT_SYMBOL_GPL(ipath_layer_get_pkeys);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1386: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1351:
+int ipath_layer_set_pkeys(struct ipath_devdata *dd, u16 * pkeys)

CHECK:SPACING: No space is necessary after a cast
#1419: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1384:
+		pkey = (u64) dd->ipath_pkeys[0] |

CHECK:SPACING: No space is necessary after a cast
#1420: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1385:
+			((u64) dd->ipath_pkeys[1] << 16) |

CHECK:SPACING: No space is necessary after a cast
#1421: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1386:
+			((u64) dd->ipath_pkeys[2] << 32) |

CHECK:SPACING: No space is necessary after a cast
#1422: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1387:
+			((u64) dd->ipath_pkeys[3] << 48);

CHECK:SPACING: No space is necessary after a cast
#1424: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1389:
+			   (unsigned long long) pkey);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1431: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1396:
+EXPORT_SYMBOL_GPL(ipath_layer_set_pkeys);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1444: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1409:
+EXPORT_SYMBOL_GPL(ipath_layer_get_linkdowndefaultstate);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1465: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1430:
+EXPORT_SYMBOL_GPL(ipath_layer_set_linkdowndefaultstate);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1474: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1439:
+EXPORT_SYMBOL_GPL(ipath_layer_get_phyerrthreshold);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1483: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1448:
+int ipath_layer_set_phyerrthreshold(struct ipath_devdata *dd, unsigned n)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1485: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1450:
+	unsigned v;

CHECK:SPACING: No space is necessary after a cast
#1494: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1459:
+			(u64) n << INFINIPATH_IBCC_PHYERRTHRESHOLD_SHIFT;

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1501: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1466:
+EXPORT_SYMBOL_GPL(ipath_layer_set_phyerrthreshold);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1510: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1475:
+EXPORT_SYMBOL_GPL(ipath_layer_get_overrunthreshold);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1519: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1484:
+int ipath_layer_set_overrunthreshold(struct ipath_devdata *dd, unsigned n)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1521: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1486:
+	unsigned v;

CHECK:SPACING: No space is necessary after a cast
#1530: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1495:
+			(u64) n << INFINIPATH_IBCC_OVERRUNTHRESHOLD_SHIFT;

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1537: FILE: drivers/infiniband/hw/ipath/ipath_layer.c:1502:
+EXPORT_SYMBOL_GPL(ipath_layer_set_overrunthreshold);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1555: FILE: drivers/infiniband/hw/ipath/ipath_layer.h:1:
+/*

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1624: FILE: drivers/infiniband/hw/ipath/ipath_layer.h:70:
+#define IPATH_SEGSZ     (PAGE_SIZE / sizeof (struct ipath_seg))

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1676: FILE: drivers/infiniband/hw/ipath/ipath_layer.h:122:
+int ipath_layer_open(struct ipath_devdata *, u32 * pktmax);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ipath_devdata *' should also have an identifier name
#1676: FILE: drivers/infiniband/hw/ipath/ipath_layer.h:122:
+int ipath_layer_open(struct ipath_devdata *, u32 * pktmax);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8 *' should also have an identifier name
#1678: FILE: drivers/infiniband/hw/ipath/ipath_layer.h:124:
+int ipath_layer_get_mac(struct ipath_devdata *dd, u8 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ipath_devdata *' should also have an identifier name
#1682: FILE: drivers/infiniband/hw/ipath/ipath_layer.h:128:
+int ipath_layer_set_mtu(struct ipath_devdata *, u16);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u16' should also have an identifier name
#1682: FILE: drivers/infiniband/hw/ipath/ipath_layer.h:128:
+int ipath_layer_set_mtu(struct ipath_devdata *, u16);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ipath_devdata *' should also have an identifier name
#1683: FILE: drivers/infiniband/hw/ipath/ipath_layer.h:129:
+int ipath_set_sps_lid(struct ipath_devdata *, u32, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#1683: FILE: drivers/infiniband/hw/ipath/ipath_layer.h:129:
+int ipath_set_sps_lid(struct ipath_devdata *, u32, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#1683: FILE: drivers/infiniband/hw/ipath/ipath_layer.h:129:
+int ipath_set_sps_lid(struct ipath_devdata *, u32, u8);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1687: FILE: drivers/infiniband/hw/ipath/ipath_layer.h:133:
+		     u32 * hdr, u32 len, struct ipath_sge_state *ss);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ipath_devdata *' should also have an identifier name
#1697: FILE: drivers/infiniband/hw/ipath/ipath_layer.h:143:
+int ipath_layer_set_guid(struct ipath_devdata *, __be64 guid);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ipath_devdata *' should also have an identifier name
#1698: FILE: drivers/infiniband/hw/ipath/ipath_layer.h:144:
+__be64 ipath_layer_get_guid(struct ipath_devdata *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ipath_devdata *' should also have an identifier name
#1699: FILE: drivers/infiniband/hw/ipath/ipath_layer.h:145:
+u32 ipath_layer_get_nguid(struct ipath_devdata *);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1700: FILE: drivers/infiniband/hw/ipath/ipath_layer.h:146:
+int ipath_layer_query_device(struct ipath_devdata *, u32 * vendor,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ipath_devdata *' should also have an identifier name
#1700: FILE: drivers/infiniband/hw/ipath/ipath_layer.h:146:
+int ipath_layer_query_device(struct ipath_devdata *, u32 * vendor,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1701: FILE: drivers/infiniband/hw/ipath/ipath_layer.h:147:
+			     u32 * boardrev, u32 * majrev, u32 * minrev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1701: FILE: drivers/infiniband/hw/ipath/ipath_layer.h:147:
+			     u32 * boardrev, u32 * majrev, u32 * minrev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1701: FILE: drivers/infiniband/hw/ipath/ipath_layer.h:147:
+			     u32 * boardrev, u32 * majrev, u32 * minrev);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1709: FILE: drivers/infiniband/hw/ipath/ipath_layer.h:155:
+int ipath_layer_set_verbs_flags(struct ipath_devdata *dd, unsigned flags);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1710: FILE: drivers/infiniband/hw/ipath/ipath_layer.h:156:
+unsigned ipath_layer_get_npkeys(struct ipath_devdata *dd);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1711: FILE: drivers/infiniband/hw/ipath/ipath_layer.h:157:
+unsigned ipath_layer_get_pkey(struct ipath_devdata *dd, unsigned index);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1711: FILE: drivers/infiniband/hw/ipath/ipath_layer.h:157:
+unsigned ipath_layer_get_pkey(struct ipath_devdata *dd, unsigned index);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1718: FILE: drivers/infiniband/hw/ipath/ipath_layer.h:164:
+int ipath_layer_set_phyerrthreshold(struct ipath_devdata *dd, unsigned n);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1720: FILE: drivers/infiniband/hw/ipath/ipath_layer.h:166:
+int ipath_layer_set_overrunthreshold(struct ipath_devdata *dd, unsigned n);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1733: FILE: drivers/infiniband/hw/ipath/ipath_layer.h:179:
+extern unsigned ipath_debug; /* debugging bit mask */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000089327.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 79 warnings, 22 checks, 1696 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000089327.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
