WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
[PATCH] sysfs backing store: use sysfs_dirent based tree in dir file operations

WARNING:TYPO_SPELLING: 'strucutre' may be misspelled - perhaps 'structure'?
#32: 
o This patch implements the sysfs_dir_operations file_operations strucutre for
                                                                 ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#66: FILE: fs/sysfs/dir.c:238:
+	struct dentry * dentry = file->f_dentry;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#67: FILE: fs/sysfs/dir.c:239:
+	struct sysfs_dirent * parent_sd = dentry->d_fsdata;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#75: FILE: fs/sysfs/dir.c:247:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#79: FILE: fs/sysfs/dir.c:251:
+	struct dentry * dentry = file->f_dentry;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#80: FILE: fs/sysfs/dir.c:252:
+	struct sysfs_dirent * cursor = file->private_data;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#96: FILE: fs/sysfs/dir.c:268:
+static int sysfs_readdir(struct file * filp, void * dirent, filldir_t filldir)
                                        ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#96: FILE: fs/sysfs/dir.c:268:
+static int sysfs_readdir(struct file * filp, void * dirent, filldir_t filldir)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#96: FILE: fs/sysfs/dir.c:268:
+static int sysfs_readdir(struct file * filp, void * dirent, filldir_t filldir)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#99: FILE: fs/sysfs/dir.c:271:
+	struct sysfs_dirent * parent_sd = dentry->d_fsdata;

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#105: FILE: fs/sysfs/dir.c:277:
+	switch (i) {
+		case 0:
[...]
+		case 1:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#112: FILE: fs/sysfs/dir.c:284:
+			/* fallthrough */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#119: FILE: fs/sysfs/dir.c:291:
+			/* fallthrough */

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#125: FILE: fs/sysfs/dir.c:297:
+			for (p=q->next; p!= &parent_sd->s_children; p=p->next) {
 			      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '!=' (ctx:VxW)
#125: FILE: fs/sysfs/dir.c:297:
+			for (p=q->next; p!= &parent_sd->s_children; p=p->next) {
 			                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#125: FILE: fs/sysfs/dir.c:297:
+			for (p=q->next; p!= &parent_sd->s_children; p=p->next) {
 			                                             ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#127: FILE: fs/sysfs/dir.c:299:
+				const char * name;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#131: FILE: fs/sysfs/dir.c:303:
+				next = list_entry(p, struct sysfs_dirent,
+						   s_sibling);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#143: FILE: fs/sysfs/dir.c:315:
+				if (filldir(dirent, name, len, filp->f_pos, ino,
+						 dt_type(next)) < 0)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#155: FILE: fs/sysfs/dir.c:327:
+static loff_t sysfs_dir_lseek(struct file * file, loff_t offset, int origin)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#157: FILE: fs/sysfs/dir.c:329:
+	struct dentry * dentry = file->f_dentry;

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#160: FILE: fs/sysfs/dir.c:332:
+	switch (origin) {
+		case 1:
[...]
+		case 0:
[...]
+		default:

WARNING:LINE_SPACING: Missing a blank line after declarations
#182: FILE: fs/sysfs/dir.c:354:
+				struct sysfs_dirent *next;
+				next = list_entry(p, struct sysfs_dirent,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#183: FILE: fs/sysfs/dir.c:355:
+				next = list_entry(p, struct sysfs_dirent,
+						   s_sibling);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#195: FILE: fs/sysfs/dir.c:367:
+struct file_operations sysfs_dir_operations = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#224: FILE: fs/sysfs/sysfs.h:23:
+extern struct super_block * sysfs_sb;

WARNING:CONST_STRUCT: struct file_operations should normally be const
#225: FILE: fs/sysfs/sysfs.h:24:
+extern struct file_operations sysfs_dir_operations;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000234777.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 8 warnings, 4 checks, 169 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000234777.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
