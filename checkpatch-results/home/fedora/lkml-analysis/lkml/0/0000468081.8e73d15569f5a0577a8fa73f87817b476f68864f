WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#24: 
Dies ist eine mehrteilige Nachricht im MIME-Format.
     ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
of 363kbit with one connection, although it didn't work right until i started

ERROR:TRAILING_WHITESPACE: trailing whitespace
#84: FILE: Documentation/networking/load-balancing.txt:23:
+   $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#98: FILE: Documentation/networking/load-balancing.txt:37:
+     $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#102: FILE: Documentation/networking/load-balancing.txt:41:
+  $

WARNING:TYPO_SPELLING: 'bandwith' may be misspelled - perhaps 'bandwidth'?
#153: FILE: Documentation/networking/load-balancing.txt:92:
+					high bandwith data transfers.
 					     ^^^^^^^^

WARNING:TYPO_SPELLING: 'useage' may be misspelled - perhaps 'usage'?
#163: FILE: Documentation/networking/load-balancing.txt:102:
+This means that if your load gets higher, memory useage is higher. Since
                                                  ^^^^^^

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#206: FILE: net/ipv4/fib_semantics.c:105:
+unsigned int mp_counter=0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#206: FILE: net/ipv4/fib_semantics.c:105:
+unsigned int mp_counter=0;
                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#229: FILE: net/ipv4/ip_output.c:357:
+	if (rt == NULL || rt->u.dst.obsolete || rt->rt_flags&RTCF_EQUALIZE) {
 	                                                    ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rt"
#229: FILE: net/ipv4/ip_output.c:357:
+	if (rt == NULL || rt->u.dst.obsolete || rt->rt_flags&RTCF_EQUALIZE) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#243: FILE: net/ipv4/route.c:1424:
+		if (res.fi->fib_flags&RTM_F_EQUALIZE)
 		                     ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#254: FILE: net/ipv4/route.c:1628:
+	struct rtable * rth, **rthp;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#264: FILE: net/ipv4/route.c:1636:
+	for (rthp=&rt_hash_table[hash].chain; (rth=*rthp); rthp=&rth->u.rt_next) {
 	         ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#264: FILE: net/ipv4/route.c:1636:
+	for (rthp=&rt_hash_table[hash].chain; (rth=*rthp); rthp=&rth->u.rt_next) {
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#264: FILE: net/ipv4/route.c:1636:
+	for (rthp=&rt_hash_table[hash].chain; (rth=*rthp); rthp=&rth->u.rt_next) {
 	                                          ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#264: FILE: net/ipv4/route.c:1636:
+	for (rthp=&rt_hash_table[hash].chain; (rth=*rthp); rthp=&rth->u.rt_next) {
 	                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#264: FILE: net/ipv4/route.c:1636:
+	for (rthp=&rt_hash_table[hash].chain; (rth=*rthp); rthp=&rth->u.rt_next) {
 	                                                       ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#264: FILE: net/ipv4/route.c:1636:
+	for (rthp=&rt_hash_table[hash].chain; (rth=*rthp); rthp=&rth->u.rt_next) {
 	                                                        ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#272: FILE: net/ipv4/route.c:1645:
+			if (rth->rt_flags&RTCF_EQUALIZE) {
 			                 ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#300: FILE: net/ipv4/route.c:1866:
+		if (res.fi->fib_flags&RTM_F_EQUALIZE)
 		                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#318: FILE: net/ipv4/route.c:2004:
+	for (rthp=&rt_hash_table[hash].chain; (rth=*rthp); rthp=&rth->u.rt_next) {
 	         ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#318: FILE: net/ipv4/route.c:2004:
+	for (rthp=&rt_hash_table[hash].chain; (rth=*rthp); rthp=&rth->u.rt_next) {
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#318: FILE: net/ipv4/route.c:2004:
+	for (rthp=&rt_hash_table[hash].chain; (rth=*rthp); rthp=&rth->u.rt_next) {
 	                                          ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#318: FILE: net/ipv4/route.c:2004:
+	for (rthp=&rt_hash_table[hash].chain; (rth=*rthp); rthp=&rth->u.rt_next) {
 	                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#318: FILE: net/ipv4/route.c:2004:
+	for (rthp=&rt_hash_table[hash].chain; (rth=*rthp); rthp=&rth->u.rt_next) {
 	                                                       ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#318: FILE: net/ipv4/route.c:2004:
+	for (rthp=&rt_hash_table[hash].chain; (rth=*rthp); rthp=&rth->u.rt_next) {
 	                                                        ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#326: FILE: net/ipv4/route.c:2014:
+			if (rth->rt_flags&RTCF_EQUALIZE) {
 			                 ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#355: FILE: net/ipv4/udp.c:744:
+	if(rt->rt_flags&RTCF_EQUALIZE) {
 	               ^

ERROR:SPACING: space required before the open parenthesis '('
#355: FILE: net/ipv4/udp.c:744:
+	if(rt->rt_flags&RTCF_EQUALIZE) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#357: FILE: net/ipv4/udp.c:746:
+		sk->dst_cache=NULL;
 		             ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#359: FILE: net/ipv4/udp.c:748:
+	else
[...]
 	sk_dst_set(sk, &rt->u.dst);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#359: FILE: net/ipv4/udp.c:748:
+	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#361: FILE: net/ipv4/udp.c:750:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000468081.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 22 errors, 5 warnings, 7 checks, 277 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000468081.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
