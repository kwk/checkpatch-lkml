WARNING:TYPO_SPELLING: 'informations' may be misspelled - perhaps 'information'?
#48: 
These informations are inserted into the Elf-auxiliary-vector that is
      ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'previos' may be misspelled - perhaps 'previous'?
#50: 
the auxiliray-vector is not complete, UML uses the previos default
                                                   ^^^^^^^

ERROR:SPACING: space prohibited after that open parenthesis '('
#81: FILE: arch/um/kernel/main.c:84:
+extern void scan_elf_aux( char **envp);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#81: FILE: arch/um/kernel/main.c:84:
+extern void scan_elf_aux( char **envp);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: space prohibited after that open parenthesis '('
#90: FILE: arch/um/kernel/main.c:152:
+	scan_elf_aux( envp);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#133: FILE: arch/um/os-Linux/elf_aux.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:NEW_TYPEDEFS: do not add new typedefs
#147: FILE: arch/um/os-Linux/elf_aux.c:15:
+typedef Elf32_auxv_t elf_auxv_t;

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_auxv_t>
#147: FILE: arch/um/os-Linux/elf_aux.c:15:
+typedef Elf32_auxv_t elf_auxv_t;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:NEW_TYPEDEFS: do not add new typedefs
#149: FILE: arch/um/os-Linux/elf_aux.c:17:
+typedef Elf64_auxv_t elf_auxv_t;

CHECK:CAMELCASE: Avoid CamelCase: <Elf64_auxv_t>
#149: FILE: arch/um/os-Linux/elf_aux.c:17:
+typedef Elf64_auxv_t elf_auxv_t;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#152: FILE: arch/um/os-Linux/elf_aux.c:20:
+char * elf_aux_platform;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#160: FILE: arch/um/os-Linux/elf_aux.c:28:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#161: FILE: arch/um/os-Linux/elf_aux.c:29:
+__init void scan_elf_aux( char **envp)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#164: FILE: arch/um/os-Linux/elf_aux.c:32:
+	elf_auxv_t * auxv;

WARNING:SPACING: space prohibited before semicolon
#166: FILE: arch/um/os-Linux/elf_aux.c:34:
+	while ( *envp++ != NULL) ;

ERROR:SPACING: space prohibited after that open parenthesis '('
#166: FILE: arch/um/os-Linux/elf_aux.c:34:
+	while ( *envp++ != NULL) ;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#166: FILE: arch/um/os-Linux/elf_aux.c:34:
+	while ( *envp++ != NULL) ;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space prohibited after that open parenthesis '('
#168: FILE: arch/um/os-Linux/elf_aux.c:36:
+	for ( auxv = (elf_auxv_t *)envp; auxv->a_type != AT_NULL; auxv++) {

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#169: FILE: arch/um/os-Linux/elf_aux.c:37:
+		switch ( auxv->a_type ) {
+			case AT_SYSINFO:
[...]
+			case AT_SYSINFO_EHDR:
[...]
+			case AT_HWCAP:
[...]
+			case AT_PLATFORM:
[...]
+			case AT_PAGESZ:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space prohibited after that open parenthesis '('
#169: FILE: arch/um/os-Linux/elf_aux.c:37:
+		switch ( auxv->a_type ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#169: FILE: arch/um/os-Linux/elf_aux.c:37:
+		switch ( auxv->a_type ) {

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#187: FILE: arch/um/os-Linux/elf_aux.c:55:
+	if ( ! __kernel_vsyscall || ! vsyscall_ehdr ||
 	     ^

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#187: FILE: arch/um/os-Linux/elf_aux.c:55:
+	if ( ! __kernel_vsyscall || ! vsyscall_ehdr ||
 	                            ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#187: FILE: arch/um/os-Linux/elf_aux.c:55:
+	if ( ! __kernel_vsyscall || ! vsyscall_ehdr ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#188: FILE: arch/um/os-Linux/elf_aux.c:56:
+	if ( ! __kernel_vsyscall || ! vsyscall_ehdr ||
+	     ! elf_aux_hwcap || ! elf_aux_platform ||

ERROR:SPACING: space prohibited after that '!' (ctx:ExW)
#188: FILE: arch/um/os-Linux/elf_aux.c:56:
+	     ! elf_aux_hwcap || ! elf_aux_platform ||
 	     ^

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#188: FILE: arch/um/os-Linux/elf_aux.c:56:
+	     ! elf_aux_hwcap || ! elf_aux_platform ||
 	                        ^

ERROR:SPACING: space prohibited after that '!' (ctx:ExW)
#189: FILE: arch/um/os-Linux/elf_aux.c:57:
+	     ! page_size || (vsyscall_ehdr % page_size) ) {
 	     ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#189: FILE: arch/um/os-Linux/elf_aux.c:57:
+	     ! page_size || (vsyscall_ehdr % page_size) ) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#195: FILE: arch/um/os-Linux/elf_aux.c:63:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#195: FILE: arch/um/os-Linux/elf_aux.c:63:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#208: FILE: include/asm-um/archparam-i386.h:13:
+extern char * elf_aux_platform;

ERROR:SPACING: space prohibited after that open parenthesis '('
#241: FILE: include/asm-um/archparam-i386.h:77:
+	if ( vsyscall_ehdr ) {					\

ERROR:SPACING: space prohibited before that close parenthesis ')'
#241: FILE: include/asm-um/archparam-i386.h:77:
+	if ( vsyscall_ehdr ) {					\

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000225573.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 22 errors, 7 warnings, 5 checks, 156 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000225573.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
