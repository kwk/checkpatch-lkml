WARNING:TYPO_SPELLING: 'dependant' may be misspelled - perhaps 'dependent'?
#29: 
> > These either need to be marked __devinit and make "new_id" dependant on
                                                               ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
 drivers/pci/pci-driver.c |  301 +++++++++++++++++++++++++----------------------

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#42: 
--- a/drivers/pci/pci-driver.c	Thu Sep 11 15:54:52 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#82: FILE: drivers/pci/pci-driver.c:72:
+}
+static inline void

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#99: FILE: drivers/pci/pci-driver.c:89:
+store_new_id(struct device_driver * driver, const char * buf, size_t count)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#99: FILE: drivers/pci/pci-driver.c:89:
+store_new_id(struct device_driver * driver, const char * buf, size_t count)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#102: FILE: drivers/pci/pci-driver.c:92:
+	struct bus_type * bus;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#104: FILE: drivers/pci/pci-driver.c:94:
+	__u32 vendor=PCI_ANY_ID, device=PCI_ANY_ID, subvendor=PCI_ANY_ID,
 	            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#104: FILE: drivers/pci/pci-driver.c:94:
+	__u32 vendor=PCI_ANY_ID, device=PCI_ANY_ID, subvendor=PCI_ANY_ID,
 	                               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#104: FILE: drivers/pci/pci-driver.c:94:
+	__u32 vendor=PCI_ANY_ID, device=PCI_ANY_ID, subvendor=PCI_ANY_ID,
 	                                                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#105: FILE: drivers/pci/pci-driver.c:95:
+		subdevice=PCI_ANY_ID, class=0, class_mask=0;
 		         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#105: FILE: drivers/pci/pci-driver.c:95:
+		subdevice=PCI_ANY_ID, class=0, class_mask=0;
 		                           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#105: FILE: drivers/pci/pci-driver.c:95:
+		subdevice=PCI_ANY_ID, class=0, class_mask=0;
 		                                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#106: FILE: drivers/pci/pci-driver.c:96:
+	unsigned long driver_data=0;
 	                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#107: FILE: drivers/pci/pci-driver.c:97:
+	int fields=0;
 	          ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#147: FILE: drivers/pci/pci-driver.c:137:
+static DRIVER_ATTR(new_id, S_IWUSR, NULL, store_new_id);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#172: FILE: drivers/pci/pci-driver.c:162:
+pci_create_newid_file(struct pci_driver * drv)

WARNING:LINE_SPACING: Missing a blank line after declarations
#175: FILE: drivers/pci/pci-driver.c:165:
+	int error = 0;
+	if (drv->probe != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "drv->probe"
#175: FILE: drivers/pci/pci-driver.c:165:
+	if (drv->probe != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#182: FILE: drivers/pci/pci-driver.c:172:
+pci_bus_match_dynids(const struct pci_dev * pci_dev, const struct pci_driver * pci_drv)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#182: FILE: drivers/pci/pci-driver.c:172:
+pci_bus_match_dynids(const struct pci_dev * pci_dev, const struct pci_driver * pci_drv)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#200: FILE: drivers/pci/pci-driver.c:190:
+#define pci_device_probe_dynamic(drv,pci_dev) (-ENODEV)
                                     ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000337486.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 4 warnings, 2 checks, 339 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000337486.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
