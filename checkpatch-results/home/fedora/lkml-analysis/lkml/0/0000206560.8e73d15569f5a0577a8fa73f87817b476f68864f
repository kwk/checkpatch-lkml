WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#34: 
# readprofile -m System.map-t -p profile.raw -v -v -k vmlinux-t -l 1000

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#50: 
8           0.70        ffffffff8017d8c4:       callq  ffffffff8043fb40 <_spin_lock>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#85: FILE: sys-utils/readprofile.c:43:
+ * readprofile -m /boot/Sysytem.map-test -v -v -k /boot/vmlinux-test $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#94: FILE: sys-utils/readprofile.c:64:
+static char optstring[]="M:m:np:itvarVbsl:k:";

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#94: FILE: sys-utils/readprofile.c:64:
+static char optstring[]="M:m:np:itvarVbsl:k:";
                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#95: FILE: sys-utils/readprofile.c:65:
+static char *kernel_name="vmlinux";
                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#129: FILE: sys-utils/readprofile.c:151:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#132: FILE: sys-utils/readprofile.c:154:
+^I^Istart, start + size, kernel); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#142: FILE: sys-utils/readprofile.c:164:
+^I^I^Ifprintf(stderr, $

WARNING:TYPO_SPELLING: 'incompatiblity' may be misspelled - perhaps 'incompatibility'?
#143: FILE: sys-utils/readprofile.c:165:
+				"objdump format incompatiblity or wrong kernel/mapfile combo\n");
 				                ^^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#154: FILE: sys-utils/readprofile.c:176:
+^Iif (!fgets(lbuf, sizeof(lbuf) - 1, p)) $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#206: FILE: sys-utils/readprofile.c:389:
+		unsigned index0 = indx, end_idx;

CHECK:CAMELCASE: Avoid CamelCase: <optVerbose>
#224: FILE: sys-utils/readprofile.c:427:
+		} else if (optVerbose >= 2) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#227: FILE: sys-utils/readprofile.c:430:
+			printf("%6i %-40s %8.4f\n", this, fn_name,
+				this / (double) fn_len);

CHECK:SPACING: No space is necessary after a cast
#227: FILE: sys-utils/readprofile.c:430:
+				this / (double) fn_len);

WARNING:LINE_SPACING: Missing a blank line after declarations
#231: FILE: sys-utils/readprofile.c:434:
+				char *disass_nxt;
+				p = disass_start(kernel_name, fn_add,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#232: FILE: sys-utils/readprofile.c:435:
+				p = disass_start(kernel_name, fn_add,
+						((end_idx - index0) * step));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#233: FILE: sys-utils/readprofile.c:436:
+^I^I^I^Iif (!p) $

WARNING:LINE_SPACING: Missing a blank line after declarations
#242: FILE: sys-utils/readprofile.c:445:
+					unsigned long long disass_next_addr;
+					strncpy(disass_cur, disass_nxt, 200);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#246: FILE: sys-utils/readprofile.c:449:
+^I^I^I^I^I^Isscanf(disass_nxt,"%llx", $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#246: FILE: sys-utils/readprofile.c:449:
+						sscanf(disass_nxt,"%llx", 
 						                 ^

WARNING:NAKED_SSCANF: unchecked sscanf return value
#246: FILE: sys-utils/readprofile.c:449:
+						sscanf(disass_nxt,"%llx", 
+							&disass_next_addr);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#246: FILE: sys-utils/readprofile.c:449:
+						sscanf(disass_nxt,"%llx", 
+							&disass_next_addr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#247: FILE: sys-utils/readprofile.c:450:
+						sscanf(disass_nxt,"%llx", 
+							&disass_next_addr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#248: FILE: sys-utils/readprofile.c:451:
+^I^I^I^I^I^Iwhile (add0+indx*step < $

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#248: FILE: sys-utils/readprofile.c:451:
+						while (add0+indx*step < 

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (48, 55)
#248: FILE: sys-utils/readprofile.c:451:
+						while (add0+indx*step < 
[...]
+						       smpls_insn += buf[indx++];

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#248: FILE: sys-utils/readprofile.c:451:
+						while (add0+indx*step < 
 						           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#248: FILE: sys-utils/readprofile.c:451:
+						while (add0+indx*step < 
 						                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#252: FILE: sys-utils/readprofile.c:455:
+^I^I^I^I^I^Iwhile (add0+indx*step < $

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#252: FILE: sys-utils/readprofile.c:455:
+						while (add0+indx*step < 

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (48, 55)
#252: FILE: sys-utils/readprofile.c:455:
+						while (add0+indx*step < 
[...]
+						       smpls_insn += buf[indx++];

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#252: FILE: sys-utils/readprofile.c:455:
+						while (add0+indx*step < 
 						           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#252: FILE: sys-utils/readprofile.c:455:
+						while (add0+indx*step < 
 						                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#253: FILE: sys-utils/readprofile.c:456:
+^I^I^I^I^I^I       next_add) $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#257: FILE: sys-utils/readprofile.c:460:
+					printf("%d\t%8.2f\t%s",  smpls_insn,
+						100.0 * smpls_insn / this,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000206560.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 13 warnings, 10 checks, 178 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000206560.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
