WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#23: 
This patch provides discontigmem support for the IBM x440 against 2.5.62.  I 

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#45: 
--- a/arch/i386/Kconfig	Tue Feb 18 18:53:37 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#52: FILE: arch/i386/Kconfig:488:
+^Idepends on (HIGHMEM64G && (X86_NUMAQ || (X86_SUMMIT && ACPI && $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#53: FILE: arch/i386/Kconfig:488:
!ACPI_HT_ONLY)))

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#74: FILE: arch/i386/kernel/srat.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#75: FILE: arch/i386/kernel/srat.c:2:
+ * Some of the code in this file has been gleaned from the 64 bit $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#80: FILE: arch/i386/kernel/srat.c:7:
+ * All rights reserved.          $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#94: FILE: arch/i386/kernel/srat.c:21:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#95: FILE: arch/i386/kernel/srat.c:22:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#111: FILE: arch/i386/kernel/srat.c:38:
+#define BMAP_SET(bmap, bit)^I((bmap)[NODE_ARRAY_INDEX(bit)] |= 1 << $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#111: FILE: arch/i386/kernel/srat.c:38:
+#define BMAP_SET(bmap, bit)	((bmap)[NODE_ARRAY_INDEX(bit)] |= 1 << 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#113: FILE: arch/i386/kernel/srat.c:39:
+#define BMAP_TEST(bmap, bit)^I((bmap)[NODE_ARRAY_INDEX(bit)] & (1 << $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#113: FILE: arch/i386/kernel/srat.c:39:
+#define BMAP_TEST(bmap, bit)	((bmap)[NODE_ARRAY_INDEX(bit)] & (1 << 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#117: FILE: arch/i386/kernel/srat.c:42:
+#define PXM_BITMAP_LEN (MAX_PXM_DOMAINS / 8) $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#129: FILE: arch/i386/kernel/srat.c:54:
+};
+static struct node_memory_chunk_s node_memory_chunk[MAXCHUNKS];

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#138: FILE: arch/i386/kernel/srat.c:63:
+extern void * boot_ioremap(unsigned long, unsigned long);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#138: FILE: arch/i386/kernel/srat.c:63:
+extern void * boot_ioremap(unsigned long, unsigned long);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#138: FILE: arch/i386/kernel/srat.c:63:
+extern void * boot_ioremap(unsigned long, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#138: FILE: arch/i386/kernel/srat.c:63:
+extern void * boot_ioremap(unsigned long, unsigned long);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#143: FILE: arch/i386/kernel/srat.c:68:
+^Istruct acpi_table_processor_affinity *cpu_affinity = $

CHECK:SPACING: No space is necessary after a cast
#144: FILE: arch/i386/kernel/srat.c:69:
+				(struct acpi_table_processor_affinity *) p;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#152: FILE: arch/i386/kernel/srat.c:77:
+	printk("CPU 0x%02X in proximity domain 0x%02X\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#153: FILE: arch/i386/kernel/srat.c:78:
+	printk("CPU 0x%02X in proximity domain 0x%02X\n",
+		cpu_affinity->apic_id, cpu_affinity->proximity_domain);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#160: FILE: arch/i386/kernel/srat.c:85:
+static void __init parse_memory_affinity_structure (char *sratp)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#163: FILE: arch/i386/kernel/srat.c:88:
+^Iunsigned long start_pfn, end_pfn; $

CHECK:SPACING: No space is necessary after a cast
#167: FILE: arch/i386/kernel/srat.c:92:
+			(struct acpi_table_memory_affinity *) sratp;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#180: FILE: arch/i386/kernel/srat.c:105:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#183: FILE: arch/i386/kernel/srat.c:108:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#187: FILE: arch/i386/kernel/srat.c:112:
+		printk("Too many mem chunks in SRAT. Ignoring %lld MBytes at %llx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#188: FILE: arch/i386/kernel/srat.c:113:
+		printk("Too many mem chunks in SRAT. Ignoring %lld MBytes at %llx\n",
+			size/(1024*1024), paddr);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#188: FILE: arch/i386/kernel/srat.c:113:
+			size/(1024*1024), paddr);
 			    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#188: FILE: arch/i386/kernel/srat.c:113:
+			size/(1024*1024), paddr);
 			          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#208: FILE: arch/i386/kernel/srat.c:133:
+^Iprintk("Memory range 0x%lX to 0x%lX (type 0x%X) in proximity domain 0x%02X $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#208: FILE: arch/i386/kernel/srat.c:133:
+	printk("Memory range 0x%lX to 0x%lX (type 0x%X) in proximity domain 0x%02X 

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#214: FILE: arch/i386/kernel/srat.c:138:
+		 "enabled and removable" : "enabled" ) );

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: arch/i386/kernel/srat.c:145:
+ * of pages in each zone, returned via zones[].$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: arch/i386/kernel/srat.c:146:
+ */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#223: FILE: arch/i386/kernel/srat.c:147:
+static __init void chunk_to_zones(unsigned long cstart, unsigned long cend, $

WARNING:TYPO_SPELLING: 'consistant' may be misspelled - perhaps 'consistent'?
#233: FILE: arch/i386/kernel/srat.c:157:
+	 * similarly scoped information and should be handled in a consistant
 	                                                           ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: arch/i386/kernel/srat.c:186:
+ * physnode_map keeps track of the physical memory layout of the$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: arch/i386/kernel/srat.c:187:
+ * numaq nodes on a 256Mb break (each element of the array will$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: arch/i386/kernel/srat.c:188:
+ * represent 256Mb of memory and will be marked by the node id.  so,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: arch/i386/kernel/srat.c:189:
+ * if the first gig is on node 0, and the second gig is on node 1$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: arch/i386/kernel/srat.c:190:
+ * physnode_map will contain:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: arch/i386/kernel/srat.c:191:
+ * physnode_map[0-3] = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: arch/i386/kernel/srat.c:192:
+ * physnode_map[4-7] = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: arch/i386/kernel/srat.c:193:
+ * physnode_map[8- ] = -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: arch/i386/kernel/srat.c:194:
+ */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#278: FILE: arch/i386/kernel/srat.c:202:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#319: FILE: arch/i386/kernel/srat.c:243:
+^I^I^Iprintk("ACPI 2.0 SRAT: unknown entry skipped: type=0x%02X, len=%d\n", $

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#319: FILE: arch/i386/kernel/srat.c:243:
+			printk("ACPI 2.0 SRAT: unknown entry skipped: type=0x%02X, len=%d\n", 
 			                     ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#319: FILE: arch/i386/kernel/srat.c:243:
+			printk("ACPI 2.0 SRAT: unknown entry skipped: type=0x%02X, len=%d\n", 
 			                                            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#319: FILE: arch/i386/kernel/srat.c:243:
+			printk("ACPI 2.0 SRAT: unknown entry skipped: type=0x%02X, len=%d\n", 
 			                                                  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#319: FILE: arch/i386/kernel/srat.c:243:
+			printk("ACPI 2.0 SRAT: unknown entry skipped: type=0x%02X, len=%d\n", 
 			                                                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#319: FILE: arch/i386/kernel/srat.c:243:
+			printk("ACPI 2.0 SRAT: unknown entry skipped: type=0x%02X, len=%d\n", 
 			                                                              ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#319: FILE: arch/i386/kernel/srat.c:243:
+			printk("ACPI 2.0 SRAT: unknown entry skipped: type=0x%02X, len=%d\n", 
 			                                                               ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#325: FILE: arch/i386/kernel/srat.c:248:
+			printk("acpi20_parse_srat: Entry length value is zero;"
 			                         ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#325: FILE: arch/i386/kernel/srat.c:248:
+			printk("acpi20_parse_srat: Entry length value is zero;"
 			                                                     ^

CHECK:CAMELCASE: Avoid CamelCase: <Entry>
#325: FILE: arch/i386/kernel/srat.c:248:
+			printk("acpi20_parse_srat: Entry length value is zero;"

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: space preferred before that '/' (ctx:OxE)
#334: FILE: arch/i386/kernel/srat.c:257:
+	 */
 	  ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#346: FILE: arch/i386/kernel/srat.c:269:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#353: FILE: arch/i386/kernel/srat.c:276:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#354: FILE: arch/i386/kernel/srat.c:277:
+	printk("pxm bitmap: ");

WARNING:BRACES: braces {} are not necessary for single statement blocks
#355: FILE: arch/i386/kernel/srat.c:278:
+	for (i = 0; i < sizeof(pxm_bitmap); i++) {
+		printk("%02X ", pxm_bitmap[i]);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#356: FILE: arch/i386/kernel/srat.c:279:
+		printk("%02X ", pxm_bitmap[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#358: FILE: arch/i386/kernel/srat.c:281:
+	printk("\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#359: FILE: arch/i386/kernel/srat.c:282:
+	printk("Number of logical nodes in system = %d\n", numnodes);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#360: FILE: arch/i386/kernel/srat.c:283:
+	printk("Number of memory chunks in system = %d\n", num_memory_chunks);

ERROR:SPACING: space required before the open brace '{'
#362: FILE: arch/i386/kernel/srat.c:285:
+	for (j = 0; j < num_memory_chunks; j++){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#363: FILE: arch/i386/kernel/srat.c:286:
+		printk("chunk %d nid %d start_pfn %08lx end_pfn %08lx\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#368: FILE: arch/i386/kernel/srat.c:291:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#368: FILE: arch/i386/kernel/srat.c:291:
+ $

ERROR:SPACING: space required before the open brace '{'
#373: FILE: arch/i386/kernel/srat.c:296:
+		for (j = 0; j < num_memory_chunks; j++){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#380: FILE: arch/i386/kernel/srat.c:303:
+					if (node_start_pfn[nid] < node_memory_chunk[j].start_pfn) {
+						node_end_pfn[nid] = node_memory_chunk[j].end_pfn;
+					}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#403: FILE: arch/i386/kernel/srat.c:326:
+		printk("%s: assigning address to rsdp\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#403: FILE: arch/i386/kernel/srat.c:326:
+		printk("%s: assigning address to rsdp\n", __FUNCTION__);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#406: FILE: arch/i386/kernel/srat.c:329:
+		printk("%s: rsdp_address is not a physical pointer\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#406: FILE: arch/i386/kernel/srat.c:329:
+		printk("%s: rsdp_address is not a physical pointer\n", __FUNCTION__);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#410: FILE: arch/i386/kernel/srat.c:333:
+		printk("%s: Didn't find ACPI root!\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#410: FILE: arch/i386/kernel/srat.c:333:
+		printk("%s: Didn't find ACPI root!\n", __FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#414: FILE: arch/i386/kernel/srat.c:337:
+	printk(KERN_INFO "%.8s v%d [%.6s]\n", rsdp->signature, rsdp->revision,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#415: FILE: arch/i386/kernel/srat.c:338:
+	printk(KERN_INFO "%.8s v%d [%.6s]\n", rsdp->signature, rsdp->revision,
+		rsdp->oem_id);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#417: FILE: arch/i386/kernel/srat.c:340:
+	if (strncmp(rsdp->signature, RSDP_SIG,strlen(RSDP_SIG))) {
 	                                     ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#418: FILE: arch/i386/kernel/srat.c:341:
+		printk(KERN_WARNING "%s: RSDP table signature incorrect\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#418: FILE: arch/i386/kernel/srat.c:341:
+		printk(KERN_WARNING "%s: RSDP table signature incorrect\n", __FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#426: FILE: arch/i386/kernel/srat.c:349:
+		printk(KERN_WARNING

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#428: FILE: arch/i386/kernel/srat.c:351:
+		       __FUNCTION__);

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#432: FILE: arch/i386/kernel/srat.c:355:
+	header = & rsdt->header;
 	         ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#435: FILE: arch/i386/kernel/srat.c:358:
+		printk(KERN_WARNING "ACPI: RSDT signature incorrect\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#439: FILE: arch/i386/kernel/srat.c:362:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#440: FILE: arch/i386/kernel/srat.c:363:
+^I * The number of tables is computed by taking the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#441: FILE: arch/i386/kernel/srat.c:364:
+^I * size of all entries (header size minus total $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#450: FILE: arch/i386/kernel/srat.c:373:
+		printk(KERN_WARNING "ACPI: Too big length in RSDT: %d\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#455: FILE: arch/i386/kernel/srat.c:378:
+printk("Begin table scan....\n");

CHECK:SPACING: No space is necessary after a cast
#468: FILE: arch/i386/kernel/srat.c:391:
+		if (strncmp((char *) &header->signature, "SRAT", 4))

WARNING:TYPO_SPELLING: 'boundries' may be misspelled - perhaps 'boundaries'?
#480: FILE: arch/i386/kernel/srat.c:403:
+ * NOTE#1: this requires knowledge of the zone boundries and so
                                                ^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#482: FILE: arch/i386/kernel/srat.c:405:
+ * $

ERROR:SPACING: space required before the open brace '{'
#495: FILE: arch/i386/kernel/srat.c:418:
+		for (c = 0; c < num_memory_chunks; c++){

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#507: FILE: arch/i386/kernel/srat.c:430:
+					chunk_to_zones(end,
+						node_memory_chunk[c].start_pfn,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nid >= numnodes'
#521: FILE: arch/i386/kernel/srat.c:444:
+	if((nid >= numnodes) | (nid >= MAX_NUMNODES))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'nid >= MAX_NUMNODES'
#521: FILE: arch/i386/kernel/srat.c:444:
+	if((nid >= numnodes) | (nid >= MAX_NUMNODES))

ERROR:SPACING: space required before the open parenthesis '('
#521: FILE: arch/i386/kernel/srat.c:444:
+	if((nid >= numnodes) | (nid >= MAX_NUMNODES))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#522: FILE: arch/i386/kernel/srat.c:445:
+		printk("%s: nid = %d is invalid. numnodes = %d",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#523: FILE: arch/i386/kernel/srat.c:446:
+		       __FUNCTION__, nid, numnodes);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#600: FILE: include/asm-i386/srat.h:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#601: FILE: include/asm-i386/srat.h:2:
+ * Some of the code in this file has been gleaned from the 64 bit $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#620: FILE: include/asm-i386/srat.h:21:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#621: FILE: include/asm-i386/srat.h:22:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#634: FILE: include/asm-i386/srat.h:35:
+#define PFN_TO_ELEMENT(pfn) ((pfn)>>(28 - PAGE_SHIFT))
                                   ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'pa' may be better as '(pa)' to avoid precedence issues
#639: FILE: include/asm-i386/srat.h:40:
+#define PHYSADDR_TO_NID(pa) pfn_to_nid(pa >> PAGE_SHIFT)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#641: FILE: include/asm-i386/srat.h:42:
+extern void get_memcfg_from_srat(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#642: FILE: include/asm-i386/srat.h:43:
+extern unsigned long *get_zholes_size(int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#642: FILE: include/asm-i386/srat.h:43:
+extern unsigned long *get_zholes_size(int);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000392275.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 42 errors, 50 warnings, 21 checks, 576 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000392275.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
