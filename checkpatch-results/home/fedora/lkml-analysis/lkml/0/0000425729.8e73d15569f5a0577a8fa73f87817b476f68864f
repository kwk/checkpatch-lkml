WARNING:TYPO_SPELLING: 'OT' may be misspelled - perhaps 'TO'?
#20: 
Subject: Re: The reason to call it 3.0 is the desktop (was Re: [OT] 2.6 not 3.0 
                                                                ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
> Apparently, one of them missed the key it was aiming for and the other one

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#78: FILE: fs/ext2/ialloc.c:209:
+#if 0

ERROR:TRAILING_WHITESPACE: trailing whitespace
#88: FILE: fs/ext2/ialloc.c:245:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#89: FILE: fs/ext2/ialloc.c:246:
+ * Orlov's allocator for directories. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#90: FILE: fs/ext2/ialloc.c:247:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#93: FILE: fs/ext2/ialloc.c:250:
+ * If there are blockgroups with both free inodes and free blocks counts $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#94: FILE: fs/ext2/ialloc.c:251:
+ * not worse than average we return one with smallest directory count. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#95: FILE: fs/ext2/ialloc.c:252:
+ * Otherwise we simply return a random group. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#96: FILE: fs/ext2/ialloc.c:253:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#97: FILE: fs/ext2/ialloc.c:254:
+ * For the rest rules look so: $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#98: FILE: fs/ext2/ialloc.c:255:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#99: FILE: fs/ext2/ialloc.c:256:
+ * It's OK to put directory into a group unless $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#100: FILE: fs/ext2/ialloc.c:257:
+ * it has too many directories already (max_dirs) or $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#101: FILE: fs/ext2/ialloc.c:258:
+ * it has too few free inodes left (min_inodes) or $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#102: FILE: fs/ext2/ialloc.c:259:
+ * it has too few free blocks left (min_blocks) or $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#103: FILE: fs/ext2/ialloc.c:260:
+ * it's already running too large debt (max_debt). $

WARNING:TYPO_SPELLING: 'prefered' may be misspelled - perhaps 'preferred'?
#104: FILE: fs/ext2/ialloc.c:261:
+ * Parent's group is prefered, if it doesn't satisfy these 
                      ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#104: FILE: fs/ext2/ialloc.c:261:
+ * Parent's group is prefered, if it doesn't satisfy these $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#105: FILE: fs/ext2/ialloc.c:262:
+ * conditions we search cyclically through the rest. If none $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#106: FILE: fs/ext2/ialloc.c:263:
+ * of the groups look good we just look for a group with more $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#107: FILE: fs/ext2/ialloc.c:264:
+ * free inodes than average (starting at parent's group). $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#108: FILE: fs/ext2/ialloc.c:265:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#109: FILE: fs/ext2/ialloc.c:266:
+ * Debt is incremented each time we allocate a directory and decremented $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#110: FILE: fs/ext2/ialloc.c:267:
+ * when we allocate an inode, within 0--255. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#111: FILE: fs/ext2/ialloc.c:268:
+ */ $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#139: FILE: fs/ext2/ialloc.c:296:
+		parent_group = (unsigned)group % ngroups;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#142: FILE: fs/ext2/ialloc.c:299:
+			desc = ext2_get_group_desc (sb, group, &bh);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#182: FILE: fs/ext2/ialloc.c:339:
+		desc = ext2_get_group_desc (sb, group, &bh);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#199: FILE: fs/ext2/ialloc.c:356:
+		desc = ext2_get_group_desc (sb, group, &bh);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#258: FILE: fs/ext2/ialloc.c:625:
+unsigned long ext2_count_dirs (struct super_block * sb)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#258: FILE: fs/ext2/ialloc.c:625:
+unsigned long ext2_count_dirs (struct super_block * sb)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#264: FILE: fs/ext2/ialloc.c:631:
+		struct ext2_group_desc *gdp = ext2_get_group_desc (sb, i, NULL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#265: FILE: fs/ext2/ialloc.c:632:
+		struct ext2_group_desc *gdp = ext2_get_group_desc (sb, i, NULL);
+		if (!gdp)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#283: FILE: fs/ext2/super.c:670:
+		printk ("EXT2-fs: not enough memory\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#283: FILE: fs/ext2/super.c:670:
+		printk ("EXT2-fs: not enough memory\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#283: FILE: fs/ext2/super.c:670:
+	if (!sbi->debts) {
+		printk ("EXT2-fs: not enough memory\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#323: FILE: fs/ext2/ext2.h:48:
+extern unsigned long ext2_count_dirs (struct super_block *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#323: FILE: fs/ext2/ext2.h:48:
+extern unsigned long ext2_count_dirs (struct super_block *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#323: FILE: fs/ext2/ext2.h:48:
+extern unsigned long ext2_count_dirs (struct super_block *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000425729.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 23 errors, 16 warnings, 1 checks, 244 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000425729.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
