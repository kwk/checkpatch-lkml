WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
- Push the timer down to the ata_channel structure. Most probably it will end

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#128: FILE: drivers/ide/ide.c:645:
+u8 ide_dump_status(struct ata_device *drive, struct request * rq, const char *msg, u8 stat)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#139: FILE: drivers/ide/ide.c:721:
+					printk(", sector=%ld", rq->sector);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#184: FILE: drivers/ide/ide.c:884:
+int ide_wait_stat(ide_startstop_t *startstop,
+		struct ata_device *drive, struct request *rq,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#219: FILE: drivers/ide/ide.c:977:
+		if (ide_wait_stat(&res, drive, rq, drive->ready_stat,
 					BUSY_STAT|DRQ_STAT, WAIT_READY)) {

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#267: FILE: drivers/ide/ide.c:1344:
+	ide_get_lock(&irq_lock, ata_irq_request, hwgroup);/* for atari only: POSSIBLY BROKEN HERE(?) */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#294: FILE: drivers/ide/ide.c:1425:
+	struct ata_channel *ch = (struct ata_channel *) data;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#325: FILE: drivers/ide/ide.c:1462:
+			if ((expiry = ch->expiry) != NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#341: FILE: drivers/ide/ide.c:1499:
+					startstop = ide_error(drive, ch->hwgroup->rq, "irq timeout", GET_STAT());

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:TYPO_SPELLING: 'unneccessary' may be misspelled - perhaps 'unnecessary'?
#387: FILE: drivers/ide/ide.c:2015:
+		/* FIXME: possibly unneccessary */
 		                   ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'becouse' may be misspelled - perhaps 'because'?
#591: FILE: drivers/ide/ide.c:2325:
+	 * values for users which don't have permission too. We do this becouse
 	                                                                ^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#616: FILE: drivers/ide/ide.c:2339:
+			if (put_user(val, (unsigned long *) arg))

CHECK:SPACING: No space is necessary after a cast
#660: FILE: drivers/ide/ide.c:2377:
+			if (put_user(val, (unsigned long *) arg))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#665: FILE: drivers/ide/ide.c:2382:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#685: FILE: drivers/ide/ide.c:2402:
+			if (put_user(val, (unsigned long *) arg))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#785: FILE: drivers/ide/ide-cd.c:597:
+		*startstop = ide_error (drive, rq, "request sense failure", stat);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#816: FILE: drivers/ide/ide-cd.c:676:
+			*startstop = ide_error(drive, rq, __FUNCTION__, stat);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#843: FILE: drivers/ide/ide-cd.c:920:
+			return ide_error (drive, rq, "dma error", stat);

WARNING:LONG_LINE: line length of 127 exceeds 100 columns
#949: FILE: drivers/ide/ide-disk.c:1002:
+static int idedisk_ioctl(struct ata_device *drive, struct inode *inode, struct file *file, unsigned int cmd, unsigned long arg)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#953: FILE: drivers/ide/ide-disk.c:1006:
+	switch (cmd) {
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: No space is necessary after a cast
#957: FILE: drivers/ide/ide-disk.c:1010:
+			if (put_user(val, (unsigned long *) arg))

CHECK:SPACING: No space is necessary after a cast
#980: FILE: drivers/ide/ide-disk.c:1033:
+			if (put_user(val, (unsigned long *) arg))

CHECK:SPACING: No space is necessary after a cast
#1006: FILE: drivers/ide/ide-disk.c:1059:
+			if (put_user(val, (unsigned long *) arg))

CHECK:SPACING: No space is necessary after a cast
#1029: FILE: drivers/ide/ide-disk.c:1082:
+			if (put_user(val, (unsigned long *) arg))

CHECK:SPACING: No space is necessary after a cast
#1052: FILE: drivers/ide/ide-disk.c:1105:
+			if (put_user(val, (u8 *) arg))

CHECK:SPACING: No space is necessary after a cast
#1076: FILE: drivers/ide/ide-disk.c:1129:
+			if (put_user(val, (u8 *) arg))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1101: FILE: drivers/ide/ide-disk.c:1154:
+
+

WARNING:BAD_SIGN_OFF: Non-standard signature: standby:
#1106: FILE: drivers/ide/ide-disk.c:1161:
 	standby:		idedisk_standby,

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: Do not use whitespace before Standby:
#1106: FILE: drivers/ide/ide-disk.c:1161:
 	standby:		idedisk_standby,

WARNING:BAD_SIGN_OFF: Use a single space after Standby:
#1106: FILE: drivers/ide/ide-disk.c:1161:
 	standby:		idedisk_standby,

ERROR:BAD_SIGN_OFF: Unrecognized email address: 'idedisk_standby,'
#1106: FILE: drivers/ide/ide-disk.c:1161:
 	standby:		idedisk_standby,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1110: FILE: drivers/ide/ide-disk.c:1164:
+	ioctl:			idedisk_ioctl,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#1110: FILE: drivers/ide/ide-disk.c:1164:
+	ioctl:			idedisk_ioctl,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1164: FILE: drivers/ide/ide-floppy.c:695:
+	ide_end_drive_cmd (drive, rq, 0, 0);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1173: FILE: drivers/ide/ide-floppy.c:1009:
+	if (ide_wait_stat (&startstop, drive, rq, DRQ_STAT, BUSY_STAT, WAIT_READY)) {

CHECK:SPACING: No space is necessary after a cast
#1237: FILE: drivers/ide/ide-probe.c:662:
+	ch->timer.data = (unsigned long) ch;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1455: FILE: drivers/ide/pdc4030.c:188:
+	if (ide_wait_stat(&startstop, drive, NULL, DATA_READY,BAD_W_STAT,WAIT_DRQ)) {
 	                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1455: FILE: drivers/ide/pdc4030.c:188:
+	if (ide_wait_stat(&startstop, drive, NULL, DATA_READY,BAD_W_STAT,WAIT_DRQ)) {
 	                                                                ^

CHECK:SPACING: No space is necessary after a cast
#1612: FILE: drivers/ide/tcq.c:197:
+	ch->timer.data = (unsigned long) ch->drive;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1642: FILE: drivers/ide/tcq.c:264:
+		ide_dump_status(drive, rq, __FUNCTION__, stat);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1653: FILE: drivers/ide/tcq.c:276:
+		ide_dump_status(drive, rq, __FUNCTION__, stat);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1682: FILE: drivers/ide/tcq.c:345:
+		ide_dump_status(drive, rq, __FUNCTION__, stat);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_device *' should also have an identifier name
#1824: FILE: include/linux/ide.h:417:
+	int (*expiry)(struct ata_device *, struct request *);	/* irq handler, if active */

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#1824: FILE: include/linux/ide.h:417:
+	int (*expiry)(struct ata_device *, struct request *);	/* irq handler, if active */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1886: FILE: include/linux/ide.h:644:
+extern u8 ide_dump_status(struct ata_device *, struct request *rq, const char *, u8);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_device *' should also have an identifier name
#1886: FILE: include/linux/ide.h:644:
+extern u8 ide_dump_status(struct ata_device *, struct request *rq, const char *, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#1886: FILE: include/linux/ide.h:644:
+extern u8 ide_dump_status(struct ata_device *, struct request *rq, const char *, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#1886: FILE: include/linux/ide.h:644:
+extern u8 ide_dump_status(struct ata_device *, struct request *rq, const char *, u8);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1893: FILE: include/linux/ide.h:646:
+extern ide_startstop_t ide_error(struct ata_device *, struct request *rq,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_device *' should also have an identifier name
#1893: FILE: include/linux/ide.h:646:
+extern ide_startstop_t ide_error(struct ata_device *, struct request *rq,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#1893: FILE: include/linux/ide.h:646:
+extern ide_startstop_t ide_error(struct ata_device *, struct request *rq,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'byte' should also have an identifier name
#1893: FILE: include/linux/ide.h:646:
+extern ide_startstop_t ide_error(struct ata_device *, struct request *rq,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1894: FILE: include/linux/ide.h:647:
+extern ide_startstop_t ide_error(struct ata_device *, struct request *rq,
+		const char *, byte);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1903: FILE: include/linux/ide.h:671:
+extern int ide_wait_stat(ide_startstop_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_startstop_t *' should also have an identifier name
#1903: FILE: include/linux/ide.h:671:
+extern int ide_wait_stat(ide_startstop_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_device *' should also have an identifier name
#1903: FILE: include/linux/ide.h:671:
+extern int ide_wait_stat(ide_startstop_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'byte' should also have an identifier name
#1903: FILE: include/linux/ide.h:671:
+extern int ide_wait_stat(ide_startstop_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'byte' should also have an identifier name
#1903: FILE: include/linux/ide.h:671:
+extern int ide_wait_stat(ide_startstop_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#1903: FILE: include/linux/ide.h:671:
+extern int ide_wait_stat(ide_startstop_t *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1904: FILE: include/linux/ide.h:672:
+extern int ide_wait_stat(ide_startstop_t *,
+		struct ata_device *, struct request *rq,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1914: FILE: include/linux/ide.h:719:
+extern void ide_end_drive_cmd(struct ata_device *, struct request *, u8, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_device *' should also have an identifier name
#1914: FILE: include/linux/ide.h:719:
+extern void ide_end_drive_cmd(struct ata_device *, struct request *, u8, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#1914: FILE: include/linux/ide.h:719:
+extern void ide_end_drive_cmd(struct ata_device *, struct request *, u8, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#1914: FILE: include/linux/ide.h:719:
+extern void ide_end_drive_cmd(struct ata_device *, struct request *, u8, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#1914: FILE: include/linux/ide.h:719:
+extern void ide_end_drive_cmd(struct ata_device *, struct request *, u8, u8);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000459225.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 36 warnings, 22 checks, 1700 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000459225.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
