WARNING:TYPO_SPELLING: 'wih' may be misspelled - perhaps 'with'?
#38: 
the attached tarball.  I haven't bothered wih the vital
                                          ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#67: 
diff -ruN linux-2.4.17/arch/i386/kernel/entry.S linux-2.4.17-usersem/arch/i386/kernel/entry.S

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#97: FILE: include/linux/usersem.h:1:
+#ifndef __LINUX_USERSEM_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#128: FILE: kernel/usersem.c:1:
+/*

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#143: FILE: kernel/usersem.c:16:
+	unsigned magic;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#144: FILE: kernel/usersem.c:17:
+	spinlock_t spin;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#148: FILE: kernel/usersem.c:21:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#152: FILE: kernel/usersem.c:25:
+	struct ksem *r = (struct ksem*)s->__opaque_ksem;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#153: FILE: kernel/usersem.c:26:
+	struct ksem *r = (struct ksem*)s->__opaque_ksem;
+	if(!r) return NULL;

ERROR:SPACING: space required before the open parenthesis '('
#153: FILE: kernel/usersem.c:26:
+	if(!r) return NULL;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#153: FILE: kernel/usersem.c:26:
+	if(!r) return NULL;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required before the open parenthesis '('
#154: FILE: kernel/usersem.c:27:
+	if(r->magic != FS_SIG_MAGIC) return NULL;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#154: FILE: kernel/usersem.c:27:
+	if(r->magic != FS_SIG_MAGIC) return NULL;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#162: FILE: kernel/usersem.c:35:
+	s->__opaque_ksem = (void*)k;

WARNING:LINE_SPACING: Missing a blank line after declarations
#169: FILE: kernel/usersem.c:42:
+	struct ksem *s;
+	s = kmalloc(sizeof(*s), GFP_KERNEL);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#176: FILE: kernel/usersem.c:49:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#180: FILE: kernel/usersem.c:53:
+	struct ksem *ksem;
+	if(!(ksem = ksem_new()))

ERROR:SPACING: space required before the open parenthesis '('
#180: FILE: kernel/usersem.c:53:
+	if(!(ksem = ksem_new()))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#180: FILE: kernel/usersem.c:53:
+	if(!(ksem = ksem_new()))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space required before the open parenthesis '('
#182: FILE: kernel/usersem.c:55:
+	if(store_ksem(sem, ksem)) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#189: FILE: kernel/usersem.c:62:
+
+

ERROR:SPACING: space required before the open parenthesis '('
#194: FILE: kernel/usersem.c:67:
+	if(!(ksem = get_ksem(sem)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#194: FILE: kernel/usersem.c:67:
+	if(!(ksem = get_ksem(sem)))

WARNING:LINE_SPACING: Missing a blank line after declarations
#204: FILE: kernel/usersem.c:77:
+	struct ksem *ksem;
+	if(!(ksem = get_ksem(sem)))

ERROR:SPACING: space required before the open parenthesis '('
#204: FILE: kernel/usersem.c:77:
+	if(!(ksem = get_ksem(sem)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#204: FILE: kernel/usersem.c:77:
+	if(!(ksem = get_ksem(sem)))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000486945.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 9 warnings, 4 checks, 123 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000486945.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
