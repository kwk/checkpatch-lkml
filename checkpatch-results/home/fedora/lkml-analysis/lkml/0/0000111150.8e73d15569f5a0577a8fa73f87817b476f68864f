WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#44: FILE: crypto/Kconfig:345:
+config CRYPTO_DSA
+	tristate "Digital Signature Algorithm (EXPERIMENTAL)"
+	depends on CRYPTO && CRYPTO_MPILIB && EXPERIMENTAL
+	help
+	  Digital Signature Algorithm is used in a number of applications
+	  such as ssh and gpg.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#71: FILE: crypto/dsa.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#94: FILE: crypto/dsa.c:24:
+#if 0

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#95: FILE: crypto/dsa.c:25:
+#define dprintk(x...) printk(x)

ERROR:SPACING: space required before the open parenthesis '('
#97: FILE: crypto/dsa.c:27:
+#define dprintk(x...) do { } while(0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#108: FILE: crypto/dsa.c:38:
+	unsigned int nbytes = (nbits + 7)/8;
 	                                 ^

ERROR:SPACING: space required before the open parenthesis '('
#113: FILE: crypto/dsa.c:43:
+	while(1) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#117: FILE: crypto/dsa.c:47:
+				printk(KERN_ERR "dsa: failed to create buffer\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#117: FILE: crypto/dsa.c:47:
+			if (!rndbuf) {
+				printk(KERN_ERR "dsa: failed to create buffer\n");

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(unsigned int)4' could be '4U'
#123: FILE: crypto/dsa.c:53:
+			get_random_bytes(rndbuf, min(nbytes, (unsigned int)4));

WARNING:MINMAX: min() should probably be min_t(unsigned int, nbytes, 4)
#123: FILE: crypto/dsa.c:53:
+			get_random_bytes(rndbuf, min(nbytes, (unsigned int)4));

ERROR:SPACING: space prohibited after that open parenthesis '('
#127: FILE: crypto/dsa.c:57:
+		if(mpi_test_bit( k, nbits - 1)) {

ERROR:SPACING: space required before the open parenthesis '('
#127: FILE: crypto/dsa.c:57:
+		if(mpi_test_bit( k, nbits - 1)) {

ERROR:SPACING: space required before the open parenthesis '('
#135: FILE: crypto/dsa.c:65:
+		if(!(mpi_cmp(k, q) < 0))

ERROR:SPACING: space required before the open parenthesis '('
#139: FILE: crypto/dsa.c:69:
+		if(!(mpi_cmp_ui(k, 0) > 0))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#158: FILE: crypto/dsa.c:88:
+		printk(KERN_ERR "dsa: failed to create buffer\n");

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#174: FILE: crypto/dsa.c:104:
+	mpi_mulm(s , kinv, tmp, skey->part[DSA_PART_Q]);
 	           ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#194: FILE: crypto/dsa.c:124:
+		printk(KERN_ERR "dsa: invalid key size in dsa_setkey\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dsa_setkey', this function's name, in a string
#194: FILE: crypto/dsa.c:124:
+		printk(KERN_ERR "dsa: invalid key size in dsa_setkey\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*dctx->key)...) over kmalloc(sizeof(struct key_payload_dsa)...)
#200: FILE: crypto/dsa.c:130:
+	dctx->key = kmalloc(sizeof(struct key_payload_dsa), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#202: FILE: crypto/dsa.c:132:
+		printk(KERN_ERR "dsa: failed to allocate memory for key\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#229: FILE: crypto/dsa.c:159:
+		printk(KERN_ERR "dsa_init: failed to allocate sha1 tfm\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dsa_init', this function's name, in a string
#229: FILE: crypto/dsa.c:159:
+		printk(KERN_ERR "dsa_init: failed to allocate sha1 tfm\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#268: FILE: crypto/dsa.c:198:
+		printk(KERN_ERR "dsa: failed to allocate mpis\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#277: FILE: crypto/dsa.c:207:
+		printk(KERN_ERR "dsa: failed to allocate buffers\n");

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#312: FILE: crypto/dsa.c:242:
+^I.dia_init   ^I= ^Idsa_init,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#313: FILE: crypto/dsa.c:243:
+^I.dia_update ^I=^Idsa_update,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#314: FILE: crypto/dsa.c:244:
+^I.dia_final  ^I=^Idsa_final,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#315: FILE: crypto/dsa.c:245:
+^I.dia_setkey  ^I=^Idsa_setkey } }$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#320: FILE: crypto/dsa.c:250:
+	printk(KERN_INFO "Registering Digital Signature Algorithm crypto\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#326: FILE: crypto/dsa.c:256:
+	printk(KERN_INFO "Unregistering Digital Signature Algorithm crypto\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#341: FILE: include/linux/dsa.h:1:
+/* dsa.h: digital signature architecture

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: include/linux/dsa.h:29:
+    MPI part[DSA_PARTS]; /* p,q,g,y,x */$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000111150.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 24 warnings, 2 checks, 318 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000111150.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
