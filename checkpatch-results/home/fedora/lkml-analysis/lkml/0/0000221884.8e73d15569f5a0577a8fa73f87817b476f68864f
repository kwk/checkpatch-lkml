WARNING:TYPO_SPELLING: 'mulitpath' may be misspelled - perhaps 'multipath'?
#33: 
* a mulitpath/load balancing decision is only made in case a 
    ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'inthe' may be misspelled - perhaps 'in the'?
#49: 
  as good as possible keeping all routes inthe same place
                                         ^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#54: 
  configurable via "ip route" that allows to approximate many other policies

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#153: FILE: include/net/route.h:205:
+extern void __multipath_flush(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#154: FILE: include/net/route.h:206:
+static inline void multipath_flush(void) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#162: FILE: include/net/route.h:214:
+extern void __multipath_set_nhinfo(__u32 network,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#165: FILE: include/net/route.h:217:
+				   const struct fib_nh* nh);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#169: FILE: include/net/route.h:221:
+					const struct fib_nh* nh) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#176: FILE: include/net/route.h:228:
+					const struct fib_nh* nh) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#180: FILE: include/net/route.h:232:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#183: FILE: include/net/route.h:235:
+extern void __multipath_remove(struct rtable *rt);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#184: FILE: include/net/route.h:236:
+static inline void multipath_remove(struct rtable *rt) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#185: FILE: include/net/route.h:237:
+	if ( rt->u.dst.flags & DST_BALANCED ) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#185: FILE: include/net/route.h:237:
+	if ( rt->u.dst.flags & DST_BALANCED ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#185: FILE: include/net/route.h:237:
+	if ( rt->u.dst.flags & DST_BALANCED ) {
+		__multipath_remove( rt );
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#186: FILE: include/net/route.h:238:
+		__multipath_remove( rt );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#186: FILE: include/net/route.h:238:
+		__multipath_remove( rt );

CHECK:LINE_SPACING: Please don't use multiple blank lines
#193: FILE: include/net/route.h:245:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#195: FILE: include/net/route.h:247:
+extern void __multipath_selectroute(const struct flowi *flp,

ERROR:SPACING: space prohibited after that open parenthesis '('
#201: FILE: include/net/route.h:253:
+	if ( rth->u.dst.flags & DST_BALANCED ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#201: FILE: include/net/route.h:253:
+	if ( rth->u.dst.flags & DST_BALANCED ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#202: FILE: include/net/route.h:254:
+		__multipath_selectroute( flp, rth, rp );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#202: FILE: include/net/route.h:254:
+		__multipath_selectroute( flp, rth, rp );

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#205: FILE: include/net/route.h:257:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#205: FILE: include/net/route.h:257:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#237: FILE: net/ipv4/Kconfig:105:
+# $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#238: FILE: net/ipv4/Kconfig:106:
+choice
+	prompt "Multipath policy"
+	depends on IP_ROUTE_MULTIPATH_CACHED
+	default IP_ROUTE_MULTIPATH_RANDOM
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#243: FILE: net/ipv4/Kconfig:111:
+config IP_ROUTE_MULTIPATH_RR
+	bool "round robin (EXPERIMENTAL)"
+	help
+	  Mulitpath routes are chosen according to Round Robin
+

WARNING:TYPO_SPELLING: 'Mulitpath' may be misspelled - perhaps 'Multipath'?
#246: FILE: net/ipv4/Kconfig:114:
+	  Mulitpath routes are chosen according to Round Robin
 	  ^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#258: FILE: net/ipv4/Kconfig:126:
+^I  Multipath routes are chosen in a weighted random fashion. $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#262: FILE: net/ipv4/Kconfig:130:
+config IP_ROUTE_MULTIPATH_DRR
+	bool "interface round robin (EXPERIMENTAL)"
+	help
+	  Connections are distributed in a round robin fashion over the
+	  available interfaces. This policy makes sense if the connections 
+	  should be primarily distributed on interfaces and not on routes. 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#266: FILE: net/ipv4/Kconfig:134:
+^I  available interfaces. This policy makes sense if the connections $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#267: FILE: net/ipv4/Kconfig:135:
+^I  should be primarily distributed on interfaces and not on routes. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#322: FILE: net/ipv4/fib_semantics.c:766:
+^I^I       struct fib_result *res, __u32 zone, __u32 mask, $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#343: FILE: net/ipv4/multipath_drr.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#347: FILE: net/ipv4/multipath_drr.c:5:
+ * Version:	$Id: multipath_drr.c,v 1.1.2.1 2004/09/16 07:42:34 elueck Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#359: FILE: net/ipv4/multipath_drr.c:17:
+#include <asm/uaccess.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#391: FILE: net/ipv4/multipath_drr.c:49:
+struct multipath_device $

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#392: FILE: net/ipv4/multipath_drr.c:50:
+struct multipath_device 
+{

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#402: FILE: net/ipv4/multipath_drr.c:60:
+static int registered_dev_notifier = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#403: FILE: net/ipv4/multipath_drr.c:61:
+static struct rtable *last_selection = NULL;

CHECK:CAMELCASE: Avoid CamelCase: <RTprint>
#405: FILE: net/ipv4/multipath_drr.c:63:
+#define RTprint(a...)	// printk(KERN_DEBUG a)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:LINE_SPACING: Please don't use multiple blank lines
#407: FILE: net/ipv4/multipath_drr.c:65:
+
+

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#409: FILE: net/ipv4/multipath_drr.c:67:
+static int __inline__ multipath_comparekeys(const struct flowi *flp1,

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

WARNING:INLINE: plain inline is preferred over __inline__
#409: FILE: net/ipv4/multipath_drr.c:67:
+static int __inline__ multipath_comparekeys(const struct flowi *flp1,

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#409: FILE: net/ipv4/multipath_drr.c:67:
+static int __inline__ multipath_comparekeys(const struct flowi *flp1,
+					    const struct flowi *flp2) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#421: FILE: net/ipv4/multipath_drr.c:79:
+static  int __inline__ __multipath_findslot(void) {

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#421: FILE: net/ipv4/multipath_drr.c:79:
+static  int __inline__ __multipath_findslot(void) {

WARNING:INLINE: plain inline is preferred over __inline__
#421: FILE: net/ipv4/multipath_drr.c:79:
+static  int __inline__ __multipath_findslot(void) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#423: FILE: net/ipv4/multipath_drr.c:81:
+	int i;
+	for (i=0; i<MULTIPATH_MAX_DEVICECANDIDATES; ++i) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#423: FILE: net/ipv4/multipath_drr.c:81:
+	for (i=0; i<MULTIPATH_MAX_DEVICECANDIDATES; ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#423: FILE: net/ipv4/multipath_drr.c:81:
+	for (i=0; i<MULTIPATH_MAX_DEVICECANDIDATES; ++i) {
 	           ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#424: FILE: net/ipv4/multipath_drr.c:82:
+		if (state[i].allocated == 0) {
+			return i;
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#431: FILE: net/ipv4/multipath_drr.c:89:
+static  int __inline__ __multipath_finddev(int ifindex) $

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#431: FILE: net/ipv4/multipath_drr.c:89:
+static  int __inline__ __multipath_finddev(int ifindex) 

WARNING:INLINE: plain inline is preferred over __inline__
#431: FILE: net/ipv4/multipath_drr.c:89:
+static  int __inline__ __multipath_finddev(int ifindex) 

WARNING:LINE_SPACING: Missing a blank line after declarations
#434: FILE: net/ipv4/multipath_drr.c:92:
+	int i;
+	for (i=0; i<MULTIPATH_MAX_DEVICECANDIDATES; ++i) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#434: FILE: net/ipv4/multipath_drr.c:92:
+	for (i=0; i<MULTIPATH_MAX_DEVICECANDIDATES; ++i) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#434: FILE: net/ipv4/multipath_drr.c:92:
+	for (i=0; i<MULTIPATH_MAX_DEVICECANDIDATES; ++i) {
 	           ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#435: FILE: net/ipv4/multipath_drr.c:93:
+		if (state[i].allocated != 0 && state[i].ifi == ifindex) {
+			return i;
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#442: FILE: net/ipv4/multipath_drr.c:100:
+static int multipath_dev_event(struct notifier_block *this, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#452: FILE: net/ipv4/multipath_drr.c:110:
+^I^I$

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#458: FILE: net/ipv4/multipath_drr.c:116:
+			RTprint(KERN_DEBUG"%s: successfully removed device " \

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#458: FILE: net/ipv4/multipath_drr.c:116:
+			RTprint(KERN_DEBUG"%s: successfully removed device " \

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#459: FILE: net/ipv4/multipath_drr.c:117:
+				"with index %d\n",__FUNCTION__, devidx);
 				                 ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#459: FILE: net/ipv4/multipath_drr.c:117:
+				"with index %d\n",__FUNCTION__, devidx);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#461: FILE: net/ipv4/multipath_drr.c:119:
+		}
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#461: FILE: net/ipv4/multipath_drr.c:119:
+		else {

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#462: FILE: net/ipv4/multipath_drr.c:120:
+			RTprint(KERN_DEBUG"%s: Device not relevant for " \

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#462: FILE: net/ipv4/multipath_drr.c:120:
+			RTprint(KERN_DEBUG"%s: Device not relevant for " \

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#464: FILE: net/ipv4/multipath_drr.c:122:
+				__FUNCTION__, devidx);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#477: FILE: net/ipv4/multipath_drr.c:135:
+void __multipath_remove(struct rtable* rt) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#477: FILE: net/ipv4/multipath_drr.c:135:
+void __multipath_remove(struct rtable* rt) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#478: FILE: net/ipv4/multipath_drr.c:136:
+	if (last_selection == rt) {
+		last_selection = NULL;
+	}

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#483: FILE: net/ipv4/multipath_drr.c:141:
+void __multipath_safe_inc(atomic_t* usecount)

WARNING:LINE_SPACING: Missing a blank line after declarations
#486: FILE: net/ipv4/multipath_drr.c:144:
+	int n;
+	atomic_inc(usecount);

ERROR:SPACING: spaces required around that '<=' (ctx:VxV)
#488: FILE: net/ipv4/multipath_drr.c:146:
+	if (n<=0) {
 	     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#490: FILE: net/ipv4/multipath_drr.c:148:
+		int i;
+		RTprint("%s: detected overflow, now ill will reset all "\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#490: FILE: net/ipv4/multipath_drr.c:148:
+		RTprint("%s: detected overflow, now ill will reset all "\

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#491: FILE: net/ipv4/multipath_drr.c:149:
+			"usecounts\n", __FUNCTION__);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#494: FILE: net/ipv4/multipath_drr.c:152:
+		for (i=0; i<MULTIPATH_MAX_DEVICECANDIDATES; ++i) {
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#494: FILE: net/ipv4/multipath_drr.c:152:
+		for (i=0; i<MULTIPATH_MAX_DEVICECANDIDATES; ++i) {
 		           ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#494: FILE: net/ipv4/multipath_drr.c:152:
+		for (i=0; i<MULTIPATH_MAX_DEVICECANDIDATES; ++i) {
+			atomic_set(&state[i].usecount, 0);
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#501: FILE: net/ipv4/multipath_drr.c:159:
+void __multipath_selectroute(const struct flowi *flp, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#502: FILE: net/ipv4/multipath_drr.c:160:
+^I^I^I     struct rtable *first, struct rtable **rp) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#505: FILE: net/ipv4/multipath_drr.c:163:
+^Iint min_usecount = -1; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#508: FILE: net/ipv4/multipath_drr.c:166:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#515: FILE: net/ipv4/multipath_drr.c:173:
+       ^I/* if necessary and possible utilize the old alternative */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#515: FILE: net/ipv4/multipath_drr.c:173:
+       ^I/* if necessary and possible utilize the old alternative */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#515: FILE: net/ipv4/multipath_drr.c:173:
+       ^I/* if necessary and possible utilize the old alternative */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#516: FILE: net/ipv4/multipath_drr.c:174:
+^Iif ( ( flp->flags & FLOWI_FLAG_MULTIPATHOLDROUTE ) != 0 && $

ERROR:SPACING: space prohibited after that open parenthesis '('
#516: FILE: net/ipv4/multipath_drr.c:174:
+	if ( ( flp->flags & FLOWI_FLAG_MULTIPATHOLDROUTE ) != 0 && 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#516: FILE: net/ipv4/multipath_drr.c:174:
+	if ( ( flp->flags & FLOWI_FLAG_MULTIPATHOLDROUTE ) != 0 && 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#517: FILE: net/ipv4/multipath_drr.c:175:
+	if ( ( flp->flags & FLOWI_FLAG_MULTIPATHOLDROUTE ) != 0 && 
+	     last_selection != NULL ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#517: FILE: net/ipv4/multipath_drr.c:175:
+	     last_selection != NULL ) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "last_selection"
#517: FILE: net/ipv4/multipath_drr.c:175:
+	     last_selection != NULL ) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space prohibited after that open parenthesis '('
#518: FILE: net/ipv4/multipath_drr.c:176:
+		RTprint( KERN_CRIT"%s: holding route \n", __FUNCTION__ );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#518: FILE: net/ipv4/multipath_drr.c:176:
+		RTprint( KERN_CRIT"%s: holding route \n", __FUNCTION__ );

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#518: FILE: net/ipv4/multipath_drr.c:176:
+		RTprint( KERN_CRIT"%s: holding route \n", __FUNCTION__ );

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#518: FILE: net/ipv4/multipath_drr.c:176:
+		RTprint( KERN_CRIT"%s: holding route \n", __FUNCTION__ );

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#518: FILE: net/ipv4/multipath_drr.c:176:
+		RTprint( KERN_CRIT"%s: holding route \n", __FUNCTION__ );

CHECK:LINE_SPACING: Please don't use multiple blank lines
#524: FILE: net/ipv4/multipath_drr.c:182:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#529: FILE: net/ipv4/multipath_drr.c:187:
+^Ifor (nh = rcu_dereference(first); nh; $

ERROR:SPACING: space prohibited after that open parenthesis '('
#531: FILE: net/ipv4/multipath_drr.c:189:
+		if ( ( nh->u.dst.flags & DST_BALANCED ) != 0 &&

ERROR:SPACING: space prohibited before that close parenthesis ')'
#531: FILE: net/ipv4/multipath_drr.c:189:
+		if ( ( nh->u.dst.flags & DST_BALANCED ) != 0 &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#532: FILE: net/ipv4/multipath_drr.c:190:
+		if ( ( nh->u.dst.flags & DST_BALANCED ) != 0 &&
+		     multipath_comparekeys(&nh->fl, flp ) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#532: FILE: net/ipv4/multipath_drr.c:190:
+		     multipath_comparekeys(&nh->fl, flp ) ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#533: FILE: net/ipv4/multipath_drr.c:191:
+^I^I^Iint nh_ifidx = nh->u.dst.dev->ifindex; $

WARNING:LINE_SPACING: Missing a blank line after declarations
#534: FILE: net/ipv4/multipath_drr.c:192:
+			int nh_ifidx = nh->u.dst.dev->ifindex; 
+			nh->u.dst.lastuse = jiffies;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#536: FILE: net/ipv4/multipath_drr.c:194:
+			if (result != NULL) {
+				continue;
+			}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "result"
#536: FILE: net/ipv4/multipath_drr.c:194:
+			if (result != NULL) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#542: FILE: net/ipv4/multipath_drr.c:200:
+			/* this is not SMP safe, only add/remove are
+			   SMP safe as wrong usecount updates have no big

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#543: FILE: net/ipv4/multipath_drr.c:201:
+			   impact */

ERROR:SPACING: spaces required around that '==' (ctx:VxO)
#545: FILE: net/ipv4/multipath_drr.c:203:
+			if (devidx==-1) {
 			          ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#545: FILE: net/ipv4/multipath_drr.c:203:
+			if (devidx==-1) {
 			            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#546: FILE: net/ipv4/multipath_drr.c:204:
+^I^I^I^I/* add the interface to the array $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#547: FILE: net/ipv4/multipath_drr.c:205:
+				/* add the interface to the array 
+				   SMP safe */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#547: FILE: net/ipv4/multipath_drr.c:205:
+				   SMP safe */

ERROR:SPACING: spaces required around that '==' (ctx:VxO)
#552: FILE: net/ipv4/multipath_drr.c:210:
+				if (devidx==-1) {
 				          ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#552: FILE: net/ipv4/multipath_drr.c:210:
+				if (devidx==-1) {
 				            ^

ERROR:SPACING: spaces required around that '==' (ctx:VxO)
#555: FILE: net/ipv4/multipath_drr.c:213:
+					if (devidx==-1) {
 					          ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#555: FILE: net/ipv4/multipath_drr.c:213:
+					if (devidx==-1) {
 					            ^

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#557: FILE: net/ipv4/multipath_drr.c:215:
+						RTprint(KERN_DEBUG"%s: " \

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#557: FILE: net/ipv4/multipath_drr.c:215:
+						RTprint(KERN_DEBUG"%s: " \

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#559: FILE: net/ipv4/multipath_drr.c:217:
+							__FUNCTION__);

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#567: FILE: net/ipv4/multipath_drr.c:225:
+					RTprint(KERN_DEBUG"%s: created " \

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#567: FILE: net/ipv4/multipath_drr.c:225:
+					RTprint(KERN_DEBUG"%s: created " \

ERROR:TRAILING_WHITESPACE: trailing whitespace
#572: FILE: net/ipv4/multipath_drr.c:230:
+^I^I^I^I^I^I__FUNCTION__, $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#572: FILE: net/ipv4/multipath_drr.c:230:
+						__FUNCTION__, 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#573: FILE: net/ipv4/multipath_drr.c:231:
+						nh_ifidx );

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#581: FILE: net/ipv4/multipath_drr.c:239:
+				/* if the device has not been used it is
+				   the primary target */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#581: FILE: net/ipv4/multipath_drr.c:239:
+				   the primary target */

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#582: FILE: net/ipv4/multipath_drr.c:240:
+				RTprint(KERN_DEBUG"%s: now setting " \

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#582: FILE: net/ipv4/multipath_drr.c:240:
+				RTprint(KERN_DEBUG"%s: now setting " \

ERROR:SPACING: space prohibited before that close parenthesis ')'
#584: FILE: net/ipv4/multipath_drr.c:242:
+					__FUNCTION__, nh_ifidx );

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#584: FILE: net/ipv4/multipath_drr.c:242:
+					__FUNCTION__, nh_ifidx );

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#589: FILE: net/ipv4/multipath_drr.c:247:
+			}
+			else {

CHECK:BRACES: Unbalanced braces around else statement
#589: FILE: net/ipv4/multipath_drr.c:247:
+			else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#590: FILE: net/ipv4/multipath_drr.c:248:
+^I^I^I^Iint count = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#593: FILE: net/ipv4/multipath_drr.c:251:
+^I^I^I^Iif (min_usecount == -1 || $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#598: FILE: net/ipv4/multipath_drr.c:256:
+^I^I^I^I^I$

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#599: FILE: net/ipv4/multipath_drr.c:257:
+					RTprint(KERN_DEBUG"%s: found " \

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#599: FILE: net/ipv4/multipath_drr.c:257:
+					RTprint(KERN_DEBUG"%s: found " \

ERROR:TRAILING_WHITESPACE: trailing whitespace
#602: FILE: net/ipv4/multipath_drr.c:260:
+^I^I^I^I^I^I__FUNCTION__, $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#602: FILE: net/ipv4/multipath_drr.c:260:
+						__FUNCTION__, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#609: FILE: net/ipv4/multipath_drr.c:267:
+^I$

ERROR:SPACING: space prohibited after that open parenthesis '('
#612: FILE: net/ipv4/multipath_drr.c:270:
+			RTprint( KERN_DEBUG"%s: index of device in state "\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#612: FILE: net/ipv4/multipath_drr.c:270:
+			RTprint( KERN_DEBUG"%s: index of device in state "\

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#612: FILE: net/ipv4/multipath_drr.c:270:
+			RTprint( KERN_DEBUG"%s: index of device in state "\

ERROR:SPACING: space prohibited before that close parenthesis ')'
#614: FILE: net/ipv4/multipath_drr.c:272:
+				 __FUNCTION__, cur_min_devidx );

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#614: FILE: net/ipv4/multipath_drr.c:272:
+				 __FUNCTION__, cur_min_devidx );

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#618: FILE: net/ipv4/multipath_drr.c:276:
+		}
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#618: FILE: net/ipv4/multipath_drr.c:276:
+		else {

ERROR:SPACING: space prohibited after that open parenthesis '('
#619: FILE: net/ipv4/multipath_drr.c:277:
+			RTprint( KERN_DEBUG"%s: utilized first\n",

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#619: FILE: net/ipv4/multipath_drr.c:277:
+			RTprint( KERN_DEBUG"%s: utilized first\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#620: FILE: net/ipv4/multipath_drr.c:278:
+			RTprint( KERN_DEBUG"%s: utilized first\n",
+				 __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#620: FILE: net/ipv4/multipath_drr.c:278:
+				 __FUNCTION__);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#624: FILE: net/ipv4/multipath_drr.c:282:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#624: FILE: net/ipv4/multipath_drr.c:282:
+	else {

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#625: FILE: net/ipv4/multipath_drr.c:283:
+		RTprint(KERN_DEBUG"%s: utilize result: found device " \

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#625: FILE: net/ipv4/multipath_drr.c:283:
+		RTprint(KERN_DEBUG"%s: utilize result: found device " \

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#627: FILE: net/ipv4/multipath_drr.c:285:
+			__FUNCTION__, result->u.dst.dev->ifindex,

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#630: FILE: net/ipv4/multipath_drr.c:288:
+
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#631: FILE: net/ipv4/multipath_drr.c:289:
+^I^I$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#639: FILE: net/ipv4/multipath_random.c:1:
+/*

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#643: FILE: net/ipv4/multipath_random.c:5:
+ * Version:	$Id: multipath_random.c,v 1.1.2.3 2004/09/21 08:42:11 elueck Exp $

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#655: FILE: net/ipv4/multipath_random.c:17:
+#include <asm/uaccess.h>

WARNING:INLINE: plain inline is preferred over __inline__
#693: FILE: net/ipv4/multipath_random.c:55:
+static __inline__ unsigned int  random(unsigned int ubound);

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#695: FILE: net/ipv4/multipath_random.c:57:
+static int __inline__ multipath_comparekeys(const struct flowi *flp1,

WARNING:INLINE: plain inline is preferred over __inline__
#695: FILE: net/ipv4/multipath_random.c:57:
+static int __inline__ multipath_comparekeys(const struct flowi *flp1,

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#695: FILE: net/ipv4/multipath_random.c:57:
+static int __inline__ multipath_comparekeys(const struct flowi *flp1,
+					    const struct flowi *flp2) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#707: FILE: net/ipv4/multipath_random.c:69:
+void __multipath_selectroute(const struct flowi *flp, $

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#707: FILE: net/ipv4/multipath_random.c:69:
+void __multipath_selectroute(const struct flowi *flp, 
+			     struct rtable *first, 
+			     struct rtable **rp) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#708: FILE: net/ipv4/multipath_random.c:70:
+^I^I^I     struct rtable *first, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#715: FILE: net/ipv4/multipath_random.c:77:
+^Ifor (rt = rcu_dereference(first); rt; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#717: FILE: net/ipv4/multipath_random.c:79:
+^I^Iif ( ( rt->u.dst.flags & DST_BALANCED ) != 0 && $

ERROR:SPACING: space prohibited after that open parenthesis '('
#717: FILE: net/ipv4/multipath_random.c:79:
+		if ( ( rt->u.dst.flags & DST_BALANCED ) != 0 && 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#717: FILE: net/ipv4/multipath_random.c:79:
+		if ( ( rt->u.dst.flags & DST_BALANCED ) != 0 && 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#718: FILE: net/ipv4/multipath_random.c:80:
+		if ( ( rt->u.dst.flags & DST_BALANCED ) != 0 && 
+		     multipath_comparekeys(&rt->fl, flp) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#718: FILE: net/ipv4/multipath_random.c:80:
+		     multipath_comparekeys(&rt->fl, flp) ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#725: FILE: net/ipv4/multipath_random.c:87:
+	if ( candidate_count > 1 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#725: FILE: net/ipv4/multipath_random.c:87:
+	if ( candidate_count > 1 ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#727: FILE: net/ipv4/multipath_random.c:89:
+^I^Iunsigned char candidate_no = (unsigned char) $

CHECK:SPACING: No space is necessary after a cast
#727: FILE: net/ipv4/multipath_random.c:89:
+		unsigned char candidate_no = (unsigned char) 

ERROR:SPACING: space prohibited after that open parenthesis '('
#729: FILE: net/ipv4/multipath_random.c:91:
+		RTprint( "%s: randomly chosen candidate: %d (count: %d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#730: FILE: net/ipv4/multipath_random.c:92:
+		RTprint( "%s: randomly chosen candidate: %d (count: %d)\n",
+			 __FUNCTION__, candidate_no, candidate_count );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#730: FILE: net/ipv4/multipath_random.c:92:
+			 __FUNCTION__, candidate_no, candidate_count );

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#730: FILE: net/ipv4/multipath_random.c:92:
+			 __FUNCTION__, candidate_no, candidate_count );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#731: FILE: net/ipv4/multipath_random.c:93:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#732: FILE: net/ipv4/multipath_random.c:94:
+^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#732: FILE: net/ipv4/multipath_random.c:94:
+		
+		

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#734: FILE: net/ipv4/multipath_random.c:96:
+		/* find chosen candidate and adjust GC data for all candidates
+		   to ensure they stay in cache */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#734: FILE: net/ipv4/multipath_random.c:96:
+		   to ensure they stay in cache */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#736: FILE: net/ipv4/multipath_random.c:98:
+^I^I^Iif ( ( rt->u.dst.flags & DST_BALANCED ) != 0 && $

ERROR:SPACING: space prohibited after that open parenthesis '('
#736: FILE: net/ipv4/multipath_random.c:98:
+			if ( ( rt->u.dst.flags & DST_BALANCED ) != 0 && 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#736: FILE: net/ipv4/multipath_random.c:98:
+			if ( ( rt->u.dst.flags & DST_BALANCED ) != 0 && 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#737: FILE: net/ipv4/multipath_random.c:99:
+			if ( ( rt->u.dst.flags & DST_BALANCED ) != 0 && 
+			     multipath_comparekeys(&rt->fl, flp) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#737: FILE: net/ipv4/multipath_random.c:99:
+			     multipath_comparekeys(&rt->fl, flp) ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#739: FILE: net/ipv4/multipath_random.c:101:
+				if (i == candidate_no) {
+					decision = rt;
+				}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#742: FILE: net/ipv4/multipath_random.c:104:
+				if (i >= candidate_count) {
+					break;
+				}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#749: FILE: net/ipv4/multipath_random.c:111:
+^I^I^I$

WARNING:INLINE: plain inline is preferred over __inline__
#754: FILE: net/ipv4/multipath_random.c:116:
+static __inline__ unsigned int random(unsigned int ubound)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#757: FILE: net/ipv4/multipath_random.c:119:
+^I^Iq = 2, $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#759: FILE: net/ipv4/multipath_random.c:121:
+	RANDOM_SEED = a*(RANDOM_SEED % q) - r*(RANDOM_SEED / q);
 	               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#759: FILE: net/ipv4/multipath_random.c:121:
+	RANDOM_SEED = a*(RANDOM_SEED % q) - r*(RANDOM_SEED / q);
 	                                     ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#767: FILE: net/ipv4/multipath_rr.c:1:
+/*

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#771: FILE: net/ipv4/multipath_rr.c:5:
+ * Version:	$Id: multipath_rr.c,v 1.1.2.2 2004/09/16 07:42:34 elueck Exp $

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#783: FILE: net/ipv4/multipath_rr.c:17:
+#include <asm/uaccess.h>

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#819: FILE: net/ipv4/multipath_rr.c:53:
+static struct rtable* last_used = NULL;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#819: FILE: net/ipv4/multipath_rr.c:53:
+static struct rtable* last_used = NULL;

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#821: FILE: net/ipv4/multipath_rr.c:55:
+static int __inline__ multipath_comparekeys(const struct flowi *flp1,

WARNING:INLINE: plain inline is preferred over __inline__
#821: FILE: net/ipv4/multipath_rr.c:55:
+static int __inline__ multipath_comparekeys(const struct flowi *flp1,

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#821: FILE: net/ipv4/multipath_rr.c:55:
+static int __inline__ multipath_comparekeys(const struct flowi *flp1,
+					    const struct flowi *flp2) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#833: FILE: net/ipv4/multipath_rr.c:67:
+void __multipath_remove(struct rtable *rt) $

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#835: FILE: net/ipv4/multipath_rr.c:69:
+	if (last_used==rt) {
 	             ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#835: FILE: net/ipv4/multipath_rr.c:69:
+	if (last_used==rt) {
+		last_used = NULL;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#840: FILE: net/ipv4/multipath_rr.c:74:
+void __multipath_selectroute(const struct flowi *flp, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#841: FILE: net/ipv4/multipath_rr.c:75:
+^I^I^I     struct rtable *first, struct rtable **rp) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#847: FILE: net/ipv4/multipath_rr.c:81:
+^Iif ( ( flp->flags & FLOWI_FLAG_MULTIPATHOLDROUTE ) != 0 && $

ERROR:SPACING: space prohibited after that open parenthesis '('
#847: FILE: net/ipv4/multipath_rr.c:81:
+	if ( ( flp->flags & FLOWI_FLAG_MULTIPATHOLDROUTE ) != 0 && 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#847: FILE: net/ipv4/multipath_rr.c:81:
+	if ( ( flp->flags & FLOWI_FLAG_MULTIPATHOLDROUTE ) != 0 && 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#848: FILE: net/ipv4/multipath_rr.c:82:
+	if ( ( flp->flags & FLOWI_FLAG_MULTIPATHOLDROUTE ) != 0 && 
+	     last_used != NULL ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#848: FILE: net/ipv4/multipath_rr.c:82:
+	     last_used != NULL ) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "last_used"
#848: FILE: net/ipv4/multipath_rr.c:82:
+	     last_used != NULL ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#849: FILE: net/ipv4/multipath_rr.c:83:
+		RTprint( KERN_CRIT"%s: holding route \n",

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#849: FILE: net/ipv4/multipath_rr.c:83:
+		RTprint( KERN_CRIT"%s: holding route \n",

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#849: FILE: net/ipv4/multipath_rr.c:83:
+		RTprint( KERN_CRIT"%s: holding route \n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#850: FILE: net/ipv4/multipath_rr.c:84:
+		RTprint( KERN_CRIT"%s: holding route \n",
+			 __FUNCTION__ );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#850: FILE: net/ipv4/multipath_rr.c:84:
+			 __FUNCTION__ );

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#850: FILE: net/ipv4/multipath_rr.c:84:
+			 __FUNCTION__ );

CHECK:LINE_SPACING: Please don't use multiple blank lines
#855: FILE: net/ipv4/multipath_rr.c:89:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#859: FILE: net/ipv4/multipath_rr.c:93:
+^Ifor (nh = rcu_dereference(first); nh; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#860: FILE: net/ipv4/multipath_rr.c:94:
+ ^I     nh = rcu_dereference(nh->u.rt_next)) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#860: FILE: net/ipv4/multipath_rr.c:94:
+ ^I     nh = rcu_dereference(nh->u.rt_next)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#860: FILE: net/ipv4/multipath_rr.c:94:
+ ^I     nh = rcu_dereference(nh->u.rt_next)) {$

ERROR:SPACING: space prohibited after that open parenthesis '('
#861: FILE: net/ipv4/multipath_rr.c:95:
+		if ( ( nh->u.dst.flags & DST_BALANCED ) != 0 &&

ERROR:SPACING: space prohibited before that close parenthesis ')'
#861: FILE: net/ipv4/multipath_rr.c:95:
+		if ( ( nh->u.dst.flags & DST_BALANCED ) != 0 &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#862: FILE: net/ipv4/multipath_rr.c:96:
+		if ( ( nh->u.dst.flags & DST_BALANCED ) != 0 &&
+		     multipath_comparekeys(&nh->fl, flp ) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#862: FILE: net/ipv4/multipath_rr.c:96:
+		     multipath_comparekeys(&nh->fl, flp ) ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#869: FILE: net/ipv4/multipath_rr.c:103:
+			RTprint( KERN_CRIT"%s: found balanced entry\n",

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#869: FILE: net/ipv4/multipath_rr.c:103:
+			RTprint( KERN_CRIT"%s: found balanced entry\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#870: FILE: net/ipv4/multipath_rr.c:104:
+			RTprint( KERN_CRIT"%s: found balanced entry\n",
+				 __FUNCTION__ );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#870: FILE: net/ipv4/multipath_rr.c:104:
+				 __FUNCTION__ );

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#870: FILE: net/ipv4/multipath_rr.c:104:
+				 __FUNCTION__ );

WARNING:BRACES: braces {} are not necessary for single statement blocks
#874: FILE: net/ipv4/multipath_rr.c:108:
+	if (!result) {
+		result = first;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#878: FILE: net/ipv4/multipath_rr.c:112:
+ out:^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#884: FILE: net/ipv4/multipath_rr.c:118:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#889: FILE: net/ipv4/multipath_wrandom.c:1:
+/*

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#893: FILE: net/ipv4/multipath_wrandom.c:5:
+ * Version:	$Id: multipath_wrandom.c,v 1.1.2.3 2004/09/22 07:51:40 elueck Exp $

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#905: FILE: net/ipv4/multipath_wrandom.c:17:
+#include <asm/uaccess.h>

CHECK:CAMELCASE: Avoid CamelCase: <MPprint>
#938: FILE: net/ipv4/multipath_wrandom.c:50:
+#define MPprint(a...)	// printk(KERN_DEBUG a)

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#961: FILE: net/ipv4/multipath_wrandom.c:73:
+	spinlock_t       lock;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#974: FILE: net/ipv4/multipath_wrandom.c:86:
+
+

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#976: FILE: net/ipv4/multipath_wrandom.c:88:
+static int multipath_state_initialized = 0;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#980: FILE: net/ipv4/multipath_wrandom.c:92:
+
+

WARNING:INLINE: plain inline is preferred over __inline__
#983: FILE: net/ipv4/multipath_wrandom.c:95:
+static __inline__ unsigned int random(unsigned int ubound);

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#985: FILE: net/ipv4/multipath_wrandom.c:97:
+static int __inline__ multipath_comparekeys(const struct flowi *flp1,

WARNING:INLINE: plain inline is preferred over __inline__
#985: FILE: net/ipv4/multipath_wrandom.c:97:
+static int __inline__ multipath_comparekeys(const struct flowi *flp1,

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#985: FILE: net/ipv4/multipath_wrandom.c:97:
+static int __inline__ multipath_comparekeys(const struct flowi *flp1,
+					    const struct flowi *flp2) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#997: FILE: net/ipv4/multipath_wrandom.c:109:
+
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#998: FILE: net/ipv4/multipath_wrandom.c:110:
+static unsigned char __multipath_lookup_weight(const struct flowi *fl,
+					       const struct rtable *rt) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1001: FILE: net/ipv4/multipath_wrandom.c:113:
+^Istruct multipath_route *r; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1003: FILE: net/ipv4/multipath_wrandom.c:115:
+^Istruct multipath_dest *d; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1011: FILE: net/ipv4/multipath_wrandom.c:123:
+^I^Iif (r->gw == rt->rt_gateway && $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1015: FILE: net/ipv4/multipath_wrandom.c:127:
+^I^I} $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1019: FILE: net/ipv4/multipath_wrandom.c:131:
+		printk( KERN_CRIT"%s: missing state for gateway: %u and " \

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#1019: FILE: net/ipv4/multipath_wrandom.c:131:
+		printk( KERN_CRIT"%s: missing state for gateway: %u and " \

ERROR:SPACING: space prohibited after that open parenthesis '('
#1019: FILE: net/ipv4/multipath_wrandom.c:131:
+		printk( KERN_CRIT"%s: missing state for gateway: %u and " \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#1019: FILE: net/ipv4/multipath_wrandom.c:131:
+		printk( KERN_CRIT"%s: missing state for gateway: %u and " \

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1019: FILE: net/ipv4/multipath_wrandom.c:131:
+		printk( KERN_CRIT"%s: missing state for gateway: %u and " \

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1020: FILE: net/ipv4/multipath_wrandom.c:132:
+			"device %d\n", __FUNCTION__, rt->rt_gateway,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1027: FILE: net/ipv4/multipath_wrandom.c:139:
+^I^I__u32 targetnetwork = fl->fl4_dst & $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1029: FILE: net/ipv4/multipath_wrandom.c:141:
+^I^I$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1033: FILE: net/ipv4/multipath_wrandom.c:145:
+				__FUNCTION__, weight, rt->rt_gateway);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1043: FILE: net/ipv4/multipath_wrandom.c:155:
+static void __multipath_init_state(void) $

CHECK:SPACING: No space is necessary after a cast
#1043: FILE: net/ipv4/multipath_wrandom.c:155:
+static void __multipath_init_state(void) 

WARNING:LINE_SPACING: Missing a blank line after declarations
#1050: FILE: net/ipv4/multipath_wrandom.c:162:
+		int i;
+		for (i = 0; i < MULTIPATH_STATE_SIZE; ++i) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1062: FILE: net/ipv4/multipath_wrandom.c:174:
+static void inline __multipath_init(void) $

CHECK:SPACING: No space is necessary after a cast
#1062: FILE: net/ipv4/multipath_wrandom.c:174:
+static void inline __multipath_init(void) 

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#1062: FILE: net/ipv4/multipath_wrandom.c:174:
+static void inline __multipath_init(void) 

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1065: FILE: net/ipv4/multipath_wrandom.c:177:
+	if (!multipath_state_initialized) {
+		__multipath_init_state();
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1070: FILE: net/ipv4/multipath_wrandom.c:182:
+void __multipath_selectroute(const struct flowi *flp, $

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1070: FILE: net/ipv4/multipath_wrandom.c:182:
+void __multipath_selectroute(const struct flowi *flp, 
+			     struct rtable *first, 
+			     struct rtable **rp) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1071: FILE: net/ipv4/multipath_wrandom.c:183:
+^I^I^I     struct rtable *first, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1084: FILE: net/ipv4/multipath_wrandom.c:196:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1085: FILE: net/ipv4/multipath_wrandom.c:197:
+	
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1087: FILE: net/ipv4/multipath_wrandom.c:199:
+^Ifor (rt = rcu_dereference(first); rt; $

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1090: FILE: net/ipv4/multipath_wrandom.c:202:
+		    multipath_comparekeys(&rt->fl, flp) ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1091: FILE: net/ipv4/multipath_wrandom.c:203:
+^I^I^Istruct multipath_candidate* mpc = $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1091: FILE: net/ipv4/multipath_wrandom.c:203:
+			struct multipath_candidate* mpc = 

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1092: FILE: net/ipv4/multipath_wrandom.c:204:
+				(struct multipath_candidate*)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1094: FILE: net/ipv4/multipath_wrandom.c:206:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1096: FILE: net/ipv4/multipath_wrandom.c:208:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1098: FILE: net/ipv4/multipath_wrandom.c:210:
+^I^I^Impc->rt = rt;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1100: FILE: net/ipv4/multipath_wrandom.c:212:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1103: FILE: net/ipv4/multipath_wrandom.c:215:
+^I^I^Ielse $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1105: FILE: net/ipv4/multipath_wrandom.c:217:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1111: FILE: net/ipv4/multipath_wrandom.c:223:
+^Idecision = first; $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1113: FILE: net/ipv4/multipath_wrandom.c:225:
+	MPprint("%s: random number %d in range %d\n", __FUNCTION__, selector,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1116: FILE: net/ipv4/multipath_wrandom.c:228:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1117: FILE: net/ipv4/multipath_wrandom.c:229:
+^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1117: FILE: net/ipv4/multipath_wrandom.c:229:
+		
+		

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1124: FILE: net/ipv4/multipath_wrandom.c:236:
+			__FUNCTION__, last_power, selector, mpc->power);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1127: FILE: net/ipv4/multipath_wrandom.c:239:
+			MPprint("%s: selected %u\n", __FUNCTION__,

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1131: FILE: net/ipv4/multipath_wrandom.c:243:
+		if (last_mpc) {
+			kfree(last_mpc);
+		}

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1132: FILE: net/ipv4/multipath_wrandom.c:244:
+		if (last_mpc) {
+			kfree(last_mpc);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1135: FILE: net/ipv4/multipath_wrandom.c:247:
+^I}^I^I^I$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1148: FILE: net/ipv4/multipath_wrandom.c:260:
+			    const struct fib_nh* nh)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1165: FILE: net/ipv4/multipath_wrandom.c:277:
+^I^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1169: FILE: net/ipv4/multipath_wrandom.c:281:
+^I^Itarget_route = (struct multipath_route *) $

CHECK:SPACING: No space is necessary after a cast
#1169: FILE: net/ipv4/multipath_wrandom.c:281:
+		target_route = (struct multipath_route *) 

WARNING:LINE_SPACING: Missing a blank line after declarations
#1169: FILE: net/ipv4/multipath_wrandom.c:281:
+		const size_t size_rt = sizeof(struct multipath_route);
+		target_route = (struct multipath_route *) 

ERROR:MEMSET: memset to 0's uses 0 as the 2nd argument, not the 3rd
#1174: FILE: net/ipv4/multipath_wrandom.c:286:
+		memset(&target_route->rcu, sizeof(struct rcu_head), 0);

The memset use appears to be incorrect.  This may be caused due to
badly ordered parameters.  Please recheck the usage.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1176: FILE: net/ipv4/multipath_wrandom.c:288:
+^I^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1189: FILE: net/ipv4/multipath_wrandom.c:301:
+		const size_t size_dst = sizeof(struct multipath_dest);
+		target_dest = (struct multipath_dest*)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1189: FILE: net/ipv4/multipath_wrandom.c:301:
+		target_dest = (struct multipath_dest*)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1191: FILE: net/ipv4/multipath_wrandom.c:303:
+^I^I$

ERROR:MEMSET: memset to 0's uses 0 as the 2nd argument, not the 3rd
#1196: FILE: net/ipv4/multipath_wrandom.c:308:
+		memset(&target_dest->rcu, sizeof(struct rcu_head), 0);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1201: FILE: net/ipv4/multipath_wrandom.c:313:
+	/* else: we already stored this info for another destination =>
+	   we are finished */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1201: FILE: net/ipv4/multipath_wrandom.c:313:
+	   we are finished */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1206: FILE: net/ipv4/multipath_wrandom.c:318:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#1216: FILE: net/ipv4/multipath_wrandom.c:328:
+  ^Istruct multipath_dest *dst = container_of(head,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1216: FILE: net/ipv4/multipath_wrandom.c:328:
+  ^Istruct multipath_dest *dst = container_of(head,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1216: FILE: net/ipv4/multipath_wrandom.c:328:
+  ^Istruct multipath_dest *dst = container_of(head,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1222: FILE: net/ipv4/multipath_wrandom.c:334:
+void __multipath_flush() $

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void __multipath_flush() should probably be void __multipath_flush(void)
#1222: FILE: net/ipv4/multipath_wrandom.c:334:
+void __multipath_flush() 

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1226: FILE: net/ipv4/multipath_wrandom.c:338:
+	MPprint("%s: called\n", __FUNCTION__);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1234: FILE: net/ipv4/multipath_wrandom.c:346:
+		struct multipath_route *r;
+		spin_lock(&state[i].lock);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1235: FILE: net/ipv4/multipath_wrandom.c:347:
+^I^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1238: FILE: net/ipv4/multipath_wrandom.c:350:
+			struct multipath_dest *d;
+			list_for_each_entry_rcu(d, &r->dests, list) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1240: FILE: net/ipv4/multipath_wrandom.c:352:
+^I^I^I^Icall_rcu(&d->rcu, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1241: FILE: net/ipv4/multipath_wrandom.c:353:
+				call_rcu(&d->rcu, 
+					    __multipath_free_dst);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1243: FILE: net/ipv4/multipath_wrandom.c:355:
+
+			}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1245: FILE: net/ipv4/multipath_wrandom.c:357:
+^I^I^Icall_rcu(&r->rcu, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1246: FILE: net/ipv4/multipath_wrandom.c:358:
+			call_rcu(&r->rcu, 
+				    __multipath_free);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1252: FILE: net/ipv4/multipath_wrandom.c:364:
+	MPprint("%s: finished\n", __FUNCTION__);

WARNING:INLINE: plain inline is preferred over __inline__
#1255: FILE: net/ipv4/multipath_wrandom.c:367:
+static __inline__ unsigned int random(unsigned int ubound)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1258: FILE: net/ipv4/multipath_wrandom.c:370:
+^I^Iq = 2, $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1260: FILE: net/ipv4/multipath_wrandom.c:372:
+	RANDOM_SEED = a*(RANDOM_SEED % q) - r*(RANDOM_SEED / q);
 	               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1260: FILE: net/ipv4/multipath_wrandom.c:372:
+	RANDOM_SEED = a*(RANDOM_SEED % q) - r*(RANDOM_SEED / q);
 	                                     ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1279: FILE: net/ipv4/route.c:453:
+	multipath_remove( rt );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1279: FILE: net/ipv4/route.c:453:
+	multipath_remove( rt );

ERROR:SPACING: space prohibited after that open parenthesis '('
#1285: FILE: net/ipv4/route.c:459:
+	multipath_remove( rt );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1285: FILE: net/ipv4/route.c:459:
+	multipath_remove( rt );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1296: FILE: net/ipv4/route.c:524:
+^I^I^I^I^I^Iint* removed_count) $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1296: FILE: net/ipv4/route.c:524:
+						int* removed_count) 

WARNING:LINE_SPACING: Missing a blank line after declarations
#1302: FILE: net/ipv4/route.c:530:
+	struct rtable *rth;
+	if (removed_count)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1305: FILE: net/ipv4/route.c:533:
+		if ( rth == expentry ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1305: FILE: net/ipv4/route.c:533:
+		if ( rth == expentry ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1305: FILE: net/ipv4/route.c:533:
+		if ( rth == expentry ) {
+			passedexpired = 1;
+		}

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1315: FILE: net/ipv4/route.c:543:
+			}
+			else {

CHECK:BRACES: Unbalanced braces around else statement
#1315: FILE: net/ipv4/route.c:543:
+			else {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1322: FILE: net/ipv4/route.c:550:
+		}
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#1322: FILE: net/ipv4/route.c:550:
+		else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1323: FILE: net/ipv4/route.c:551:
+^I^I^Iif ( !((*rthp)->u.dst.flags & DST_BALANCED) && $

ERROR:SPACING: space prohibited after that open parenthesis '('
#1323: FILE: net/ipv4/route.c:551:
+			if ( !((*rthp)->u.dst.flags & DST_BALANCED) && 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1324: FILE: net/ipv4/route.c:552:
+			if ( !((*rthp)->u.dst.flags & DST_BALANCED) && 
+			     passedexpired && !nextstep ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1324: FILE: net/ipv4/route.c:552:
+			     passedexpired && !nextstep ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1334: FILE: net/ipv4/route.c:562:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1337: FILE: net/ipv4/route.c:565:
+^I^I^I^I^I       $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1340: FILE: net/ipv4/route.c:568:
+
+

ERROR:SPACING: space prohibited after that open parenthesis '('
#1352: FILE: net/ipv4/route.c:602:
+			if ( rth->u.dst.flags & DST_BALANCED ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1352: FILE: net/ipv4/route.c:602:
+			if ( rth->u.dst.flags & DST_BALANCED ) {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1353: FILE: net/ipv4/route.c:603:
+				rthp = rt_remove_balanced_route(

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1356: FILE: net/ipv4/route.c:606:
+				if (!rthp) {
+					break;
+				}

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1360: FILE: net/ipv4/route.c:610:
+			}
+			else {

CHECK:BRACES: Unbalanced braces around else statement
#1360: FILE: net/ipv4/route.c:610:
+			else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1365: FILE: net/ipv4/route.c:615:
+ ^I^I^I*rthp = rth->u.rt_next;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1365: FILE: net/ipv4/route.c:615:
+ ^I^I^I*rthp = rth->u.rt_next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1365: FILE: net/ipv4/route.c:615:
+ ^I^I^I*rthp = rth->u.rt_next;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1366: FILE: net/ipv4/route.c:616:
+ ^I^I^Irt_free(rth);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1366: FILE: net/ipv4/route.c:616:
+ ^I^I^Irt_free(rth);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1366: FILE: net/ipv4/route.c:616:
+ ^I^I^Irt_free(rth);$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1387: FILE: net/ipv4/route.c:788:
+				if ( rth->u.dst.flags & DST_BALANCED ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1387: FILE: net/ipv4/route.c:788:
+				if ( rth->u.dst.flags & DST_BALANCED ) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1389: FILE: net/ipv4/route.c:790:
+					int r;
+					rthp = rt_remove_balanced_route(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1389: FILE: net/ipv4/route.c:790:
+					rthp = rt_remove_balanced_route(

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1394: FILE: net/ipv4/route.c:795:
+					if (!rthp) {
+						break;
+					}

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1398: FILE: net/ipv4/route.c:799:
+				}
+				else {

CHECK:BRACES: Unbalanced braces around else statement
#1398: FILE: net/ipv4/route.c:799:
+				else {

ERROR:SPACING: space prohibited after that open parenthesis '('
#1429: FILE: net/ipv4/route.c:1726:
+	if ( res->fi->fib_nhs > 1 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1429: FILE: net/ipv4/route.c:1726:
+	if ( res->fi->fib_nhs > 1 )

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1448: FILE: net/ipv4/route.c:1797:
+#ifdef CONFIG_IP_ROUTE_MULTIPATH_CACHED $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1449: FILE: net/ipv4/route.c:1798:
+	struct rtable* rth;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1452: FILE: net/ipv4/route.c:1801:
+	unsigned hash;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1453: FILE: net/ipv4/route.c:1802:
+	unsigned hash;
+	if (res->fi) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1453: FILE: net/ipv4/route.c:1802:
+	if (res->fi) {
[...]
+	else {
[...]

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1456: FILE: net/ipv4/route.c:1805:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#1456: FILE: net/ipv4/route.c:1805:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1462: FILE: net/ipv4/route.c:1811:
+^Iif ( hopcount < 2 ) $

ERROR:SPACING: space prohibited after that open parenthesis '('
#1462: FILE: net/ipv4/route.c:1811:
+	if ( hopcount < 2 ) 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1462: FILE: net/ipv4/route.c:1811:
+	if ( hopcount < 2 ) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1463: FILE: net/ipv4/route.c:1812:
+^I^Ireturn ip_mkroute_input_def(skb, res, fl, in_dev, daddr, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1465: FILE: net/ipv4/route.c:1814:
+^I$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1466: FILE: net/ipv4/route.c:1815:
+	RTprint( KERN_DEBUG"%s: entered (hopcount: %d)\n", __FUNCTION__,

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1466: FILE: net/ipv4/route.c:1815:
+	RTprint( KERN_DEBUG"%s: entered (hopcount: %d)\n", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1466: FILE: net/ipv4/route.c:1815:
+	RTprint( KERN_DEBUG"%s: entered (hopcount: %d)\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1467: FILE: net/ipv4/route.c:1816:
+	RTprint( KERN_DEBUG"%s: entered (hopcount: %d)\n", __FUNCTION__,
+		 hopcount);

ERROR:SPACING: space prohibited after that open parenthesis '('
#1470: FILE: net/ipv4/route.c:1819:
+	for ( hop = 0; hop < hopcount; ++hop ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1470: FILE: net/ipv4/route.c:1819:
+	for ( hop = 0; hop < hopcount; ++hop ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1473: FILE: net/ipv4/route.c:1822:
+^I^IRTprint( KERN_DEBUG"%s: entered (hopcount: %d)\n", $

ERROR:SPACING: space prohibited after that open parenthesis '('
#1473: FILE: net/ipv4/route.c:1822:
+		RTprint( KERN_DEBUG"%s: entered (hopcount: %d)\n", 

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1473: FILE: net/ipv4/route.c:1822:
+		RTprint( KERN_DEBUG"%s: entered (hopcount: %d)\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1474: FILE: net/ipv4/route.c:1823:
+		RTprint( KERN_DEBUG"%s: entered (hopcount: %d)\n", 
+			 __FUNCTION__, hopcount);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1474: FILE: net/ipv4/route.c:1823:
+			 __FUNCTION__, hopcount);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1477: FILE: net/ipv4/route.c:1826:
+^I^Ierr = __mkroute_input( skb, res, in_dev, daddr, saddr, tos, $

ERROR:SPACING: space prohibited after that open parenthesis '('
#1477: FILE: net/ipv4/route.c:1826:
+		err = __mkroute_input( skb, res, in_dev, daddr, saddr, tos, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1478: FILE: net/ipv4/route.c:1827:
+		err = __mkroute_input( skb, res, in_dev, daddr, saddr, tos, 
+				       &rth );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1478: FILE: net/ipv4/route.c:1827:
+				       &rth );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1479: FILE: net/ipv4/route.c:1828:
+^I^Iif ( err ) $

ERROR:SPACING: space prohibited after that open parenthesis '('
#1479: FILE: net/ipv4/route.c:1828:
+		if ( err ) 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1479: FILE: net/ipv4/route.c:1828:
+		if ( err ) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1481: FILE: net/ipv4/route.c:1830:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1482: FILE: net/ipv4/route.c:1831:
+	
+

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1484: FILE: net/ipv4/route.c:1833:
+		hash = rt_hash_code(daddr, saddr ^ (fl->iif << 5), tos);
 		                                        ^^^

ERROR:POINTER_LOCATION: "(foo**)" should be "(foo **)"
#1485: FILE: net/ipv4/route.c:1834:
+		err = rt_intern_hash(hash, rth, (struct rtable**)&skb->dst);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1486: FILE: net/ipv4/route.c:1835:
+^I^Iif ( err ) $

ERROR:SPACING: space prohibited after that open parenthesis '('
#1486: FILE: net/ipv4/route.c:1835:
+		if ( err ) 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1486: FILE: net/ipv4/route.c:1835:
+		if ( err ) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1488: FILE: net/ipv4/route.c:1837:
+^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1495: FILE: net/ipv4/route.c:1844:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1496: FILE: net/ipv4/route.c:1845:
+^I^I/* only for the last hop the reference count is handled $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1497: FILE: net/ipv4/route.c:1846:
+		/* only for the last hop the reference count is handled 
+		   outside */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1497: FILE: net/ipv4/route.c:1846:
+		   outside */

ERROR:SPACING: space prohibited after that open parenthesis '('
#1498: FILE: net/ipv4/route.c:1847:
+		RTprint( KERN_DEBUG"%s: balanced entry created: %d\n",

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1498: FILE: net/ipv4/route.c:1847:
+		RTprint( KERN_DEBUG"%s: balanced entry created: %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1499: FILE: net/ipv4/route.c:1848:
+		RTprint( KERN_DEBUG"%s: balanced entry created: %d\n",
+			 __FUNCTION__, rth );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1499: FILE: net/ipv4/route.c:1848:
+			 __FUNCTION__, rth );

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1499: FILE: net/ipv4/route.c:1848:
+			 __FUNCTION__, rth );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1500: FILE: net/ipv4/route.c:1849:
+^I^Iif ( hop == lasthop ) $

ERROR:SPACING: space prohibited after that open parenthesis '('
#1500: FILE: net/ipv4/route.c:1849:
+		if ( hop == lasthop ) 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1500: FILE: net/ipv4/route.c:1849:
+		if ( hop == lasthop ) 

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around skb->dst->__refcnt
#1501: FILE: net/ipv4/route.c:1850:
+			atomic_set(&(skb->dst->__refcnt), 1);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1504: FILE: net/ipv4/route.c:1853:
+#else /* CONFIG_IP_ROUTE_MULTIPATH_CACHED  */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1506: FILE: net/ipv4/route.c:1855:
+#endif /* CONFIG_IP_ROUTE_MULTIPATH_CACHED  */ $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1528: FILE: net/ipv4/route.c:2274:
+	unsigned hash;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1530: FILE: net/ipv4/route.c:2276:
+	struct rtable* rth;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1532: FILE: net/ipv4/route.c:2278:
+^Iif (res->fi && res->fi->fib_nhs > 1) {^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1534: FILE: net/ipv4/route.c:2280:
+^I^IRTprint( KERN_DEBUG"%s: entered (hopcount: %d, fl->oif: %d)\n", $

WARNING:LINE_SPACING: Missing a blank line after declarations
#1534: FILE: net/ipv4/route.c:2280:
+		unsigned char hopcount = res->fi->fib_nhs;
+		RTprint( KERN_DEBUG"%s: entered (hopcount: %d, fl->oif: %d)\n", 

ERROR:SPACING: space prohibited after that open parenthesis '('
#1534: FILE: net/ipv4/route.c:2280:
+		RTprint( KERN_DEBUG"%s: entered (hopcount: %d, fl->oif: %d)\n", 

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1534: FILE: net/ipv4/route.c:2280:
+		RTprint( KERN_DEBUG"%s: entered (hopcount: %d, fl->oif: %d)\n", 

ERROR:CODE_INDENT: code indent should use tabs where possible
#1535: FILE: net/ipv4/route.c:2281:
+^I^I ^I__FUNCTION__, hopcount, fl->oif);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1535: FILE: net/ipv4/route.c:2281:
+^I^I ^I__FUNCTION__, hopcount, fl->oif);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1535: FILE: net/ipv4/route.c:2281:
+		RTprint( KERN_DEBUG"%s: entered (hopcount: %d, fl->oif: %d)\n", 
+		 	__FUNCTION__, hopcount, fl->oif);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1535: FILE: net/ipv4/route.c:2281:
+		 	__FUNCTION__, hopcount, fl->oif);

ERROR:SPACING: space prohibited after that open parenthesis '('
#1537: FILE: net/ipv4/route.c:2283:
+		for ( hop = 0; hop < hopcount; ++hop ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1537: FILE: net/ipv4/route.c:2283:
+		for ( hop = 0; hop < hopcount; ++hop ) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1539: FILE: net/ipv4/route.c:2285:
+			struct net_device *dev2nexthop;
+			RTprint( KERN_DEBUG"%s: hop %d of %d\n", __FUNCTION__,

ERROR:SPACING: space prohibited after that open parenthesis '('
#1539: FILE: net/ipv4/route.c:2285:
+			RTprint( KERN_DEBUG"%s: hop %d of %d\n", __FUNCTION__,

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1539: FILE: net/ipv4/route.c:2285:
+			RTprint( KERN_DEBUG"%s: hop %d of %d\n", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1539: FILE: net/ipv4/route.c:2285:
+			RTprint( KERN_DEBUG"%s: hop %d of %d\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1540: FILE: net/ipv4/route.c:2286:
+			RTprint( KERN_DEBUG"%s: hop %d of %d\n", __FUNCTION__,
+				 hop, hopcount );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1540: FILE: net/ipv4/route.c:2286:
+				 hop, hopcount );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1548: FILE: net/ipv4/route.c:2294:
+^I^I^Ierr = __mkroute_output(&rth, res, fl, oldflp, $

ERROR:SPACING: space prohibited after that open parenthesis '('
#1552: FILE: net/ipv4/route.c:2298:
+			RTprint( "%s: balanced entry created: %d " \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#1552: FILE: net/ipv4/route.c:2298:
+			RTprint( "%s: balanced entry created: %d " \

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1554: FILE: net/ipv4/route.c:2300:
+				 __FUNCTION__,

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1556: FILE: net/ipv4/route.c:2302:
+				 FIB_RES_GW(*res) );

ERROR:SPACING: space prohibited after that open parenthesis '('
#1558: FILE: net/ipv4/route.c:2304:
+			if ( err != 0 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1558: FILE: net/ipv4/route.c:2304:
+			if ( err != 0 ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1558: FILE: net/ipv4/route.c:2304:
+			if ( err != 0 ) {
+				goto cleanup;
+			}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1562: FILE: net/ipv4/route.c:2308:
+^I^I^IRTprint( KERN_DEBUG"%s: created successfully %d\n", $

ERROR:SPACING: space prohibited after that open parenthesis '('
#1562: FILE: net/ipv4/route.c:2308:
+			RTprint( KERN_DEBUG"%s: created successfully %d\n", 

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1562: FILE: net/ipv4/route.c:2308:
+			RTprint( KERN_DEBUG"%s: created successfully %d\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1563: FILE: net/ipv4/route.c:2309:
+			RTprint( KERN_DEBUG"%s: created successfully %d\n", 
+				 __FUNCTION__, hop );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1563: FILE: net/ipv4/route.c:2309:
+				 __FUNCTION__, hop );

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1563: FILE: net/ipv4/route.c:2309:
+				 __FUNCTION__, hop );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1564: FILE: net/ipv4/route.c:2310:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1565: FILE: net/ipv4/route.c:2311:
+^I^I^Ihash = rt_hash_code(oldflp->fl4_dst, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1566: FILE: net/ipv4/route.c:2312:
+^I^I^I^I^I    oldflp->fl4_src ^ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1569: FILE: net/ipv4/route.c:2315:
+^I^I^IRTprint( KERN_DEBUG"%s: hashed  %d\n", $

ERROR:SPACING: space prohibited after that open parenthesis '('
#1569: FILE: net/ipv4/route.c:2315:
+			RTprint( KERN_DEBUG"%s: hashed  %d\n", 

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1569: FILE: net/ipv4/route.c:2315:
+			RTprint( KERN_DEBUG"%s: hashed  %d\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1570: FILE: net/ipv4/route.c:2316:
+			RTprint( KERN_DEBUG"%s: hashed  %d\n", 
+				 __FUNCTION__, hop );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1570: FILE: net/ipv4/route.c:2316:
+				 __FUNCTION__, hop );

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1570: FILE: net/ipv4/route.c:2316:
+				 __FUNCTION__, hop );

WARNING:INDENTED_LABEL: labels should not be indented
#1577: FILE: net/ipv4/route.c:2323:
+		cleanup:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1580: FILE: net/ipv4/route.c:2326:
+^I^I^I$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1581: FILE: net/ipv4/route.c:2327:
+			if ( err != 0 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1581: FILE: net/ipv4/route.c:2327:
+			if ( err != 0 ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1581: FILE: net/ipv4/route.c:2327:
+			if ( err != 0 ) {
+				return err;
+			}

ERROR:SPACING: space prohibited after that open parenthesis '('
#1585: FILE: net/ipv4/route.c:2331:
+		RTprint( "%s: exited loop\n", __FUNCTION__ );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1585: FILE: net/ipv4/route.c:2331:
+		RTprint( "%s: exited loop\n", __FUNCTION__ );

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1585: FILE: net/ipv4/route.c:2331:
+		RTprint( "%s: exited loop\n", __FUNCTION__ );

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1589: FILE: net/ipv4/route.c:2335:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#1589: FILE: net/ipv4/route.c:2335:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1590: FILE: net/ipv4/route.c:2336:
+^I^Ireturn ip_mkroute_output_def(rp, res, fl, oldflp, dev_out, $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1603: FILE: net/ipv4/route.c:2370:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1612: FILE: net/ipv4/route.c:2421:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1620: FILE: net/ipv4/route.c:2528:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1624: FILE: net/ipv4/route.c:2532:
 
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1633: FILE: net/ipv4/route.c:2560:
+			/* check for multipath routes and choose one if
+			   necessary */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1633: FILE: net/ipv4/route.c:2560:
+			   necessary */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000221884.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 262 errors, 137 warnings, 95 checks, 1493 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000221884.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
