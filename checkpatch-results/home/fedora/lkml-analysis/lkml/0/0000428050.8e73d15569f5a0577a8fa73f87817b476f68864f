ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#73: 
--- a/include/sound/mixer_oss.h	Tue Oct  1 17:09:52 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:LONG_LINE: line length of 134 exceeds 100 columns
#229: FILE: sound/core/oss/mixer_oss.c:507:
+	*left = snd_mixer_oss_conv1(uctl.value.integer.value[0], uinfo.value.integer.min, uinfo.value.integer.max, &pslot->volume[0]);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 143 exceeds 100 columns
#232: FILE: sound/core/oss/mixer_oss.c:509:
+		*right = snd_mixer_oss_conv1(uctl.value.integer.value[1], uinfo.value.integer.min, uinfo.value.integer.max, &pslot->volume[1]);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#259: FILE: sound/core/pcm.c:615:
+	if ((err = snd_pcm_new_stream(pcm, SNDRV_PCM_STREAM_PLAYBACK, playback_count)) < 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#264: FILE: sound/core/pcm.c:619:
+	if ((err = snd_pcm_new_stream(pcm, SNDRV_PCM_STREAM_CAPTURE, capture_count)) < 0) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#307: FILE: sound/core/wrappers.c:63:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#309: FILE: sound/core/wrappers.c:65:
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 4, 0)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#309: FILE: sound/core/wrappers.c:65:
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 4, 0)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#310: FILE: sound/core/wrappers.c:66:
+#if defined(__i386__) || defined(__ppc__) || defined(__x86_64__)

Architecture specific defines should be avoided wherever
possible.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hwdev"
#334: FILE: sound/core/wrappers.c:90:
+	if (hwdev == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#345: FILE: sound/core/wrappers.c:101:
+	if (! ret)
 	    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#414: FILE: sound/pci/emu10k1/emufx.c:703:
+	.buffer_bytes_max =	(128*1024),
 	                   	    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#416: FILE: sound/pci/emu10k1/emufx.c:705:
+	.period_bytes_max =	(128*1024),
 	                   	    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#526: FILE: sound/pci/ice1712.c:1231:
+^I^Itmp2 &= ~ICE1712_DELTA_DFS; $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#641: FILE: sound/pci/maestro3.c:1607:
+	.buffer_bytes_max =	(512*1024),
 	                   	    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#643: FILE: sound/pci/maestro3.c:1609:
+	.period_bytes_max =	(512*1024),
 	                   	    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#674: FILE: sound/pci/maestro3.c:1628:
+	.buffer_bytes_max =	(512*1024),
 	                   	    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#676: FILE: sound/pci/maestro3.c:1630:
+	.period_bytes_max =	(512*1024),
 	                   	    ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#686: FILE: sound/pci/maestro3.c:2561:
+			printk(KERN_INFO "maestro3: enabled hack for '%s'\n", quirk->name);

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#768: FILE: sound/pci/rme9652/hammerfall_mem.c:25:
     along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#769: FILE: sound/pci/rme9652/hammerfall_mem.c:26:
     Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#772: FILE: sound/pci/rme9652/hammerfall_mem.c:28:
+    $Id: hammerfall_mem.c,v 1.3 2002/09/12 09:03:28 tiwai Exp $$

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#772: FILE: sound/pci/rme9652/hammerfall_mem.c:28:
+    $Id: hammerfall_mem.c,v 1.3 2002/09/12 09:03:28 tiwai Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#772: FILE: sound/pci/rme9652/hammerfall_mem.c:28:
+    $Id: hammerfall_mem.c,v 1.3 2002/09/12 09:03:28 tiwai Exp $
        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#772: FILE: sound/pci/rme9652/hammerfall_mem.c:28:
+    $Id: hammerfall_mem.c,v 1.3 2002/09/12 09:03:28 tiwai Exp $
                          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#772: FILE: sound/pci/rme9652/hammerfall_mem.c:28:
+    $Id: hammerfall_mem.c,v 1.3 2002/09/12 09:03:28 tiwai Exp $
                                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#772: FILE: sound/pci/rme9652/hammerfall_mem.c:28:
+    $Id: hammerfall_mem.c,v 1.3 2002/09/12 09:03:28 tiwai Exp $
                                        ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#772: FILE: sound/pci/rme9652/hammerfall_mem.c:28:
+    $Id: hammerfall_mem.c,v 1.3 2002/09/12 09:03:28 tiwai Exp $
                                              ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#772: FILE: sound/pci/rme9652/hammerfall_mem.c:28:
+    $Id: hammerfall_mem.c,v 1.3 2002/09/12 09:03:28 tiwai Exp $
                                                 ^

CHECK:CAMELCASE: Avoid CamelCase: <Id>
#772: FILE: sound/pci/rme9652/hammerfall_mem.c:28:
+    $Id: hammerfall_mem.c,v 1.3 2002/09/12 09:03:28 tiwai Exp $

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Exp>
#772: FILE: sound/pci/rme9652/hammerfall_mem.c:28:
+    $Id: hammerfall_mem.c,v 1.3 2002/09/12 09:03:28 tiwai Exp $

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#810: FILE: sound/pci/via82xx.c:981:
+	if (! (pval & 0x01)) { /* codec not ready? */
 	    ^

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#813: FILE: sound/pci/via82xx.c:984:
+		udelay(100);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#818: FILE: sound/pci/via82xx.c:989:
+		/* pci_write_config_byte(chip->pci, 0x41, 0x00);
+		   udelay(100);

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#823: FILE: sound/pci/via82xx.c:994:
+		udelay(100);

WARNING:TYPO_SPELLING: 'intialize' may be misspelled - perhaps 'initialize'?
#1240: FILE: sound/usb/usbaudio.c:1409:
+ * intialize the substream instance.
    ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1266: FILE: sound/usb/usbaudio.c:1435:
+
+

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#1274: FILE: sound/usb/usbaudio.c:1443:
+	if (! subs->num_formats)
 	    ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1278: FILE: sound/usb/usbaudio.c:1447:
+		struct audioformat *fp = list_entry(p, struct audioformat, list);
+		if (fp->rate_table)

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1279: FILE: sound/usb/usbaudio.c:1448:
+		if (fp->rate_table)
+			kfree(fp->rate_table);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1284: FILE: sound/usb/usbaudio.c:1453:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1294: FILE: sound/usb/usbaudio.c:1479:
 
+

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#1316: FILE: sound/usb/usbaudio.c:1496:
+		if (! subs->endpoint)
 		    ^

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#1353: FILE: sound/usb/usbaudio.c:1520:
+	if (! as)
 	    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1411: FILE: sound/usb/usbaudio.c:1569:
+^I$

WARNING:TYPO_SPELLING: 'endianess' may be misspelled - perhaps 'endianness'?
#1412: FILE: sound/usb/usbaudio.c:1570:
+	/* FIXME: correct endianess and sign? */
 	                  ^^^^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <idVendor>
#1453: FILE: sound/usb/usbaudio.c:1611:
+		if (dev->descriptor.idVendor == 0x04fa && dev->descriptor.idProduct == 0x4201)

CHECK:CAMELCASE: Avoid CamelCase: <idProduct>
#1453: FILE: sound/usb/usbaudio.c:1611:
+		if (dev->descriptor.idVendor == 0x04fa && dev->descriptor.idProduct == 0x4201)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1475: FILE: sound/usb/usbaudio.c:1633:
+
+

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#1476: FILE: sound/usb/usbaudio.c:1634:
+static int parse_audio_endpoints(snd_usb_audio_t *chip, unsigned char *buffer, int buflen, int iface_no)

CHECK:CAMELCASE: Avoid CamelCase: <bInterfaceClass>
#1495: FILE: sound/usb/usbaudio.c:1653:
+		if (alts->bInterfaceClass != USB_CLASS_AUDIO ||

CHECK:CAMELCASE: Avoid CamelCase: <bInterfaceSubClass>
#1496: FILE: sound/usb/usbaudio.c:1654:
+		    alts->bInterfaceSubClass != USB_SUBCLASS_AUDIO_STREAMING ||

CHECK:CAMELCASE: Avoid CamelCase: <bNumEndpoints>
#1497: FILE: sound/usb/usbaudio.c:1655:
+		    alts->bNumEndpoints < 1)

CHECK:CAMELCASE: Avoid CamelCase: <bmAttributes>
#1500: FILE: sound/usb/usbaudio.c:1658:
+		if ((alts->endpoint[0].bmAttributes & USB_ENDPOINT_XFERTYPE_MASK) !=

CHECK:CAMELCASE: Avoid CamelCase: <bEndpointAddress>
#1504: FILE: sound/usb/usbaudio.c:1662:
+		stream = (alts->endpoint[0].bEndpointAddress & USB_DIR_IN) ?

CHECK:CAMELCASE: Avoid CamelCase: <bAlternateSetting>
#1506: FILE: sound/usb/usbaudio.c:1664:
+		altno = alts->bAlternateSetting;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1517: FILE: sound/usb/usbaudio.c:1675:
+^I^I^Isnd_printk(KERN_ERR "%d:%u:%d : invalid AS_GENERAL desc\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1523: FILE: sound/usb/usbaudio.c:1681:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1527: FILE: sound/usb/usbaudio.c:1685:
+^I^I^Isnd_printk(KERN_ERR "%d:%u:%d : no FORMAT_TYPE desc\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1532: FILE: sound/usb/usbaudio.c:1690:
+^I^I^Isnd_printk(KERN_ERR "%d:%u:%d : invalid FORMAT_TYPE desc\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1540: FILE: sound/usb/usbaudio.c:1698:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1550: FILE: sound/usb/usbaudio.c:1708:
+^I^I^Isnd_printk(KERN_ERR "%d:%u:%d : invalid FORMAT_TYPE desc\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1557: FILE: sound/usb/usbaudio.c:1715:
+^I^I^Isnd_printk(KERN_ERR "%d:%u:%d : no or invalid class specific endpoint descriptor\n", $

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#1563: FILE: sound/usb/usbaudio.c:1721:
+		if (! fp) {
 		    ^

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1564: FILE: sound/usb/usbaudio.c:1722:
+		if (! fp) {
+			snd_printk(KERN_ERR "cannot malloc\n");

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#1588: FILE: sound/usb/usbaudio.c:1746:
+			fp->rate_table = kmalloc(sizeof(int) * nr_rates, GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fp->rate_table"
#1589: FILE: sound/usb/usbaudio.c:1747:
+			if (fp->rate_table == NULL) {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1596: FILE: sound/usb/usbaudio.c:1754:
+			fp->rate_min = fp->rate_max = combine_triple(&fmt[8]);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:LINE_SPACING: Missing a blank line after declarations
#1599: FILE: sound/usb/usbaudio.c:1757:
+				int rate = fp->rate_table[r] = combine_triple(&fmt[idx]);
+				if (rate < fp->rate_min)

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1609: FILE: sound/usb/usbaudio.c:1767:
+#if 0 // FIXME - we need to define constraint

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1622: FILE: sound/usb/usbaudio.c:1780:
+^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1622: FILE: sound/usb/usbaudio.c:1780:
+
+		

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#1623: FILE: sound/usb/usbaudio.c:1781:
+		snd_printdd(KERN_INFO "%d:%u:%d: add audio endpoint 0x%x\n", dev->devnum, iface_no, i, fp->endpoint);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1627: FILE: sound/usb/usbaudio.c:1785:
+			if (fp->rate_table)
+				kfree(fp->rate_table);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1635: FILE: sound/usb/usbaudio.c:1793:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000428050.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 23 errors, 19 warnings, 33 checks, 1486 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000428050.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
