WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
The following patch implements the RPA PCI Hotplug and DLPAR driver changes for

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#163: FILE: drivers/pci/hotplug/rpadlpar_core.c:270:
+		printk(KERN_ERR "%s: unexpected NULL slot device node\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#164: FILE: drivers/pci/hotplug/rpadlpar_core.c:271:
+		printk(KERN_ERR "%s: unexpected NULL slot device node\n",
+				__FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#164: FILE: drivers/pci/hotplug/rpadlpar_core.c:271:
+				__FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#170: FILE: drivers/pci/hotplug/rpadlpar_core.c:277:
+		printk(KERN_ERR "%s: unexpected NULL phb pointer\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#171: FILE: drivers/pci/hotplug/rpadlpar_core.c:278:
+		printk(KERN_ERR "%s: unexpected NULL phb pointer\n",
+				__FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#171: FILE: drivers/pci/hotplug/rpadlpar_core.c:278:
+				__FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#176: FILE: drivers/pci/hotplug/rpadlpar_core.c:283:
+		printk(KERN_ERR "%s: unable to remove hotplug slot %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#177: FILE: drivers/pci/hotplug/rpadlpar_core.c:284:
+		printk(KERN_ERR "%s: unable to remove hotplug slot %s\n",
+			__FUNCTION__, slot->location);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#177: FILE: drivers/pci/hotplug/rpadlpar_core.c:284:
+			__FUNCTION__, slot->location);

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#225: FILE: drivers/pci/hotplug/rpadlpar_core.c:340:
+	switch (node_type) {
+		case NODE_TYPE_VIO:
[...]
+		case NODE_TYPE_SLOT:
[...]
+		case NODE_TYPE_PHB:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#240: FILE: drivers/pci/hotplug/rpadlpar_core.c:351:
+			printk("%s: unexpected node type\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#240: FILE: drivers/pci/hotplug/rpadlpar_core.c:351:
+			printk("%s: unexpected node type\n", __FUNCTION__);

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#273: FILE: drivers/pci/hotplug/rpadlpar_core.c:463:
+		switch (slot->dev_type) {
+			case PCI_DEV:
[...]
+			case VIO_DEV:

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#295: FILE: drivers/pci/hotplug/rpaphp.h:133:
+extern int rpaphp_get_drc_props(struct device_node *dn, int *drc_index,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#296: FILE: drivers/pci/hotplug/rpaphp.h:134:
+extern int rpaphp_get_drc_props(struct device_node *dn, int *drc_index,
+		char **drc_name, char **drc_type, int *drc_power_domain);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#318: FILE: drivers/pci/hotplug/rpaphp_core.c:215:
+static int get_children_props(struct device_node *dn, int **drc_indexes,
+		int **drc_names, int **drc_types, int **drc_power_domains)

CHECK:SPACING: No space is necessary after a cast
#326: FILE: drivers/pci/hotplug/rpaphp_core.c:220:
+	indexes = (int *) get_property(dn, "ibm,drc-indexes", NULL);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#327: FILE: drivers/pci/hotplug/rpaphp_core.c:221:
+	names = (int *) get_property(dn, "ibm,drc-names", NULL);

CHECK:SPACING: No space is necessary after a cast
#328: FILE: drivers/pci/hotplug/rpaphp_core.c:222:
+	types = (int *) get_property(dn, "ibm,drc-types", NULL);

CHECK:SPACING: No space is necessary after a cast
#329: FILE: drivers/pci/hotplug/rpaphp_core.c:223:
+	domains = (int *) get_property(dn, "ibm,drc-power-domains", NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#364: FILE: drivers/pci/hotplug/rpaphp_core.c:248:
+int rpaphp_get_drc_props(struct device_node *dn, int *drc_index,
+		char **drc_name, char **drc_type, int *drc_power_domain)

CHECK:SPACING: No space is necessary after a cast
#372: FILE: drivers/pci/hotplug/rpaphp_core.c:256:
+	my_index = (int *) get_property(dn, "ibm,my-drc-index", NULL);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#379: FILE: drivers/pci/hotplug/rpaphp_core.c:263:
+	if (rc) {
+		return 1;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#383: FILE: drivers/pci/hotplug/rpaphp_core.c:267:
+	name_tmp = (char *) &names[1];

CHECK:SPACING: No space is necessary after a cast
#384: FILE: drivers/pci/hotplug/rpaphp_core.c:268:
+	type_tmp = (char *) &types[1];

CHECK:SPACING: No space is necessary after a cast
#388: FILE: drivers/pci/hotplug/rpaphp_core.c:272:
+		if ((unsigned int) indexes[i + 1] == *my_index) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#390: FILE: drivers/pci/hotplug/rpaphp_core.c:274:
+                ^I^I*drc_name = name_tmp;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#390: FILE: drivers/pci/hotplug/rpaphp_core.c:274:
+                ^I^I*drc_name = name_tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#390: FILE: drivers/pci/hotplug/rpaphp_core.c:274:
+                ^I^I*drc_name = name_tmp;$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#396: FILE: drivers/pci/hotplug/rpaphp_core.c:280:
+				*drc_power_domain = domains[i+1];
 				                             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#513: FILE: drivers/pci/hotplug/rpaphp_pci.c:120:
+ ^Istruct device_node *child_dn;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#513: FILE: drivers/pci/hotplug/rpaphp_pci.c:120:
+ ^Istruct device_node *child_dn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#513: FILE: drivers/pci/hotplug/rpaphp_pci.c:120:
+ ^Istruct device_node *child_dn;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#514: FILE: drivers/pci/hotplug/rpaphp_pci.c:121:
+ ^Istruct pci_dev *child_dev;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#514: FILE: drivers/pci/hotplug/rpaphp_pci.c:121:
+ ^Istruct pci_dev *child_dev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#514: FILE: drivers/pci/hotplug/rpaphp_pci.c:121:
+ ^Istruct pci_dev *child_dev;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#522: FILE: drivers/pci/hotplug/rpaphp_pci.c:128:
+ ^Iif ((state == EMPTY) || (slot->type == PHB)) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#522: FILE: drivers/pci/hotplug/rpaphp_pci.c:128:
+ ^Iif ((state == EMPTY) || (slot->type == PHB)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#522: FILE: drivers/pci/hotplug/rpaphp_pci.c:128:
+ ^Iif ((state == EMPTY) || (slot->type == PHB)) {$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'state == EMPTY'
#522: FILE: drivers/pci/hotplug/rpaphp_pci.c:128:
+ 	if ((state == EMPTY) || (slot->type == PHB)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'slot->type == PHB'
#522: FILE: drivers/pci/hotplug/rpaphp_pci.c:128:
+ 	if ((state == EMPTY) || (slot->type == PHB)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#523: FILE: drivers/pci/hotplug/rpaphp_pci.c:129:
+ ^I^Idbg("slot is empty\n");$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#523: FILE: drivers/pci/hotplug/rpaphp_pci.c:129:
+ ^I^Idbg("slot is empty\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#523: FILE: drivers/pci/hotplug/rpaphp_pci.c:129:
+ ^I^Idbg("slot is empty\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#524: FILE: drivers/pci/hotplug/rpaphp_pci.c:130:
+ ^I^I*value = EMPTY;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#524: FILE: drivers/pci/hotplug/rpaphp_pci.c:130:
+ ^I^I*value = EMPTY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#524: FILE: drivers/pci/hotplug/rpaphp_pci.c:130:
+ ^I^I*value = EMPTY;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#525: FILE: drivers/pci/hotplug/rpaphp_pci.c:131:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#525: FILE: drivers/pci/hotplug/rpaphp_pci.c:131:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#525: FILE: drivers/pci/hotplug/rpaphp_pci.c:131:
+ ^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#526: FILE: drivers/pci/hotplug/rpaphp_pci.c:132:
+ ^Ielse if (state == PRESENT) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#526: FILE: drivers/pci/hotplug/rpaphp_pci.c:132:
+ ^Ielse if (state == PRESENT) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#526: FILE: drivers/pci/hotplug/rpaphp_pci.c:132:
+ ^Ielse if (state == PRESENT) {$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#526: FILE: drivers/pci/hotplug/rpaphp_pci.c:132:
+ 	}
+ 	else if (state == PRESENT) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#533: FILE: drivers/pci/hotplug/rpaphp_pci.c:138:
+ ^I^I^Ichild_dn = slot->dn->child;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#533: FILE: drivers/pci/hotplug/rpaphp_pci.c:138:
+ ^I^I^Ichild_dn = slot->dn->child;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#533: FILE: drivers/pci/hotplug/rpaphp_pci.c:138:
+ ^I^I^Ichild_dn = slot->dn->child;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#534: FILE: drivers/pci/hotplug/rpaphp_pci.c:139:
+ ^I^I^Iif (child_dn)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#534: FILE: drivers/pci/hotplug/rpaphp_pci.c:139:
+ ^I^I^Iif (child_dn)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#534: FILE: drivers/pci/hotplug/rpaphp_pci.c:139:
+ ^I^I^Iif (child_dn)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#535: FILE: drivers/pci/hotplug/rpaphp_pci.c:140:
+ ^I^I^I^Ichild_dev = rpaphp_find_pci_dev(child_dn);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#535: FILE: drivers/pci/hotplug/rpaphp_pci.c:140:
+ ^I^I^I^Ichild_dev = rpaphp_find_pci_dev(child_dn);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#535: FILE: drivers/pci/hotplug/rpaphp_pci.c:140:
+ ^I^I^I^Ichild_dev = rpaphp_find_pci_dev(child_dn);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#537: FILE: drivers/pci/hotplug/rpaphp_pci.c:142:
+ ^I^I^Iif (child_dev)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#537: FILE: drivers/pci/hotplug/rpaphp_pci.c:142:
+ ^I^I^Iif (child_dev)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#537: FILE: drivers/pci/hotplug/rpaphp_pci.c:142:
+ ^I^I^Iif (child_dev)$

CHECK:BRACES: braces {} should be used on all arms of this statement
#537: FILE: drivers/pci/hotplug/rpaphp_pci.c:142:
+ 			if (child_dev)
[...]
+ 			else if (!child_dn)
[...]
-			else if (rpaphp_find_pci_dev(slot->dn->child))
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#538: FILE: drivers/pci/hotplug/rpaphp_pci.c:143:
+ ^I^I^I^I*value = CONFIGURED;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#538: FILE: drivers/pci/hotplug/rpaphp_pci.c:143:
+ ^I^I^I^I*value = CONFIGURED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#538: FILE: drivers/pci/hotplug/rpaphp_pci.c:143:
+ ^I^I^I^I*value = CONFIGURED;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#539: FILE: drivers/pci/hotplug/rpaphp_pci.c:144:
+ ^I^I^Ielse if (!child_dn)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#539: FILE: drivers/pci/hotplug/rpaphp_pci.c:144:
+ ^I^I^Ielse if (!child_dn)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#539: FILE: drivers/pci/hotplug/rpaphp_pci.c:144:
+ ^I^I^Ielse if (!child_dn)$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000240202.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 17 errors, 38 warnings, 19 checks, 480 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000240202.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
