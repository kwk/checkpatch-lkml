WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
in the return value of close(). The patch moves these operations to st_release() 

CHECK:CAMELCASE: Avoid CamelCase: <STp>
#77: FILE: drivers/scsi/st.c:1083:
+	DEB(char *name = tape_name(STp));

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:LINE_SPACING: Please don't use multiple blank lines
#107: FILE: drivers/scsi/st.c:1111:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#109: FILE: drivers/scsi/st.c:1113:
+/* Close the device and release it. BKL is not needed: this is the only thread
+   accessing this tape. STp->pos_unknown is set if to block further access if

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#110: FILE: drivers/scsi/st.c:1114:
+   tape re-positioning fails. */

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#111: FILE: drivers/scsi/st.c:1115:
+static int st_release(struct inode *inode, struct file *filp)
                                                         ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around STp->modes[STp->current_mode]
#116: FILE: drivers/scsi/st.c:1120:
+	struct st_modedef *STm = &(STp->modes[STp->current_mode]);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:CAMELCASE: Avoid CamelCase: <STm>
#116: FILE: drivers/scsi/st.c:1120:
+	struct st_modedef *STm = &(STp->modes[STp->current_mode]);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around STp->ps[STp->partition]
#117: FILE: drivers/scsi/st.c:1121:
+	struct st_partstat *STps = &(STp->ps[STp->partition]);

CHECK:CAMELCASE: Avoid CamelCase: <STps>
#117: FILE: drivers/scsi/st.c:1121:
+	struct st_partstat *STps = &(STp->ps[STp->partition]);

CHECK:CAMELCASE: Avoid CamelCase: <SRpnt>
#118: FILE: drivers/scsi/st.c:1122:
+	struct scsi_request *SRpnt;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#129: FILE: drivers/scsi/st.c:1198:
+			printk(KERN_ERR "%s: Final tape positioning failed.\n", name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#139: FILE: drivers/scsi/st.c:1207:
+			printk(KERN_ERR "%s: Auto-rewind failed.\n", name);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000226414.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 6 warnings, 7 checks, 96 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000226414.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
