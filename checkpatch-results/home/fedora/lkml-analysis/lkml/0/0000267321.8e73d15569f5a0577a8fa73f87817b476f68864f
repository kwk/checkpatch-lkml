ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#53: 
--- a/kernel/power/pmdisk.c	2004-07-17 14:50:53 -07:00

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#189: FILE: kernel/power/pmdisk.c:66:
+	extern int write_suspend_image(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#255: FILE: kernel/power/pmdisk.c:106:
+	extern int read_suspend_image(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#263: FILE: kernel/power/pmdisk.c:137:
+	extern void free_suspend_pagedir(unsigned long this_pagedir);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#292: FILE: kernel/power/swsusp.c:276:
+static int write_page(unsigned long addr, swp_entry_t * loc)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#319: FILE: kernel/power/swsusp.c:333:
+		error = write_page((pagedir_nosave+i)->address,
 		                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#320: FILE: kernel/power/swsusp.c:334:
+		error = write_page((pagedir_nosave+i)->address,
 					  &((pagedir_nosave+i)->swap_address));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#337: FILE: kernel/power/swsusp.c:387:
+	return write_page((unsigned long)&swsusp_info,entry);
 	                                             ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#372: FILE: kernel/power/swsusp.c:417:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#392: FILE: kernel/power/swsusp.c:431:
+	printk( "Writing pagedir (%d pages)\n", n);

ERROR:SPACING: space prohibited after that open parenthesis '('
#392: FILE: kernel/power/swsusp.c:431:
+	printk( "Writing pagedir (%d pages)\n", n);

ERROR:SPACING: space required after that ',' (ctx:VxO)
#394: FILE: kernel/power/swsusp.c:433:
+		error = write_page(addr,&swsusp_info.pagedir[i]);
 		                       ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#394: FILE: kernel/power/swsusp.c:433:
+		error = write_page(addr,&swsusp_info.pagedir[i]);
 		                        ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#421: FILE: kernel/power/swsusp.c:447:
+	if ((error = data_write()))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:CAMELCASE: Avoid CamelCase: <FreeData>
#422: FILE: kernel/power/swsusp.c:448:
+		goto FreeData;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#426: FILE: kernel/power/swsusp.c:450:
+	if ((error = write_pagedir()))

CHECK:CAMELCASE: Avoid CamelCase: <FreePagedir>
#427: FILE: kernel/power/swsusp.c:451:
+		goto FreePagedir;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#431: FILE: kernel/power/swsusp.c:453:
+	if ((error = close_swap()))

CHECK:CAMELCASE: Avoid CamelCase: <Done>
#433: FILE: kernel/power/swsusp.c:455:
+ Done:

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#505: FILE: kernel/power/swsusp.c:1315:
+	addr =__get_free_pages(GFP_ATOMIC, pagedir_order);
 	     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#511: FILE: kernel/power/swsusp.c:1320:
+	pr_debug("pmdisk: Reading pagedir (%d Pages)\n",n);
 	                                               ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#521: FILE: kernel/power/swsusp.c:1324:
+		unsigned long offset = swp_offset(swsusp_info.pagedir[i]);
+		if (offset)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#528: FILE: kernel/power/swsusp.c:1330:
+		free_pages((unsigned long)pagedir_nosave,pagedir_order);
 		                                        ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#540: FILE: kernel/power/swsusp.c:1338:
+	if ((error = verify()))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#542: FILE: kernel/power/swsusp.c:1340:
+	if ((error = read_pagedir()))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#544: FILE: kernel/power/swsusp.c:1342:
+	if ((error = data_read())) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#544: FILE: kernel/power/swsusp.c:1342:
+	if ((error = data_read())) {
+		free_pages((unsigned long)pagedir_nosave,pagedir_order);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#545: FILE: kernel/power/swsusp.c:1343:
+		free_pages((unsigned long)pagedir_nosave,pagedir_order);
 		                                        ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#551: FILE: kernel/power/swsusp.c:1348:
+static int __init __read_suspend_image(const char * specialfile)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000267321.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 17 errors, 6 warnings, 6 checks, 510 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000267321.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
