WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
> > I changed my harddrive to IBM 75 GB because someone said that IBM's 40 GB 

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#63: FILE: drivers/block/loop.c:118:
+#define ID printk(KERN_ERR "crc: info about (%s, %d, %d) ", kdevname(lo->lo_device), real_block, blksize);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#63: FILE: drivers/block/loop.c:118:
+#define ID printk(KERN_ERR "crc: info about (%s, %d, %d) ", kdevname(lo->lo_device), real_block, blksize);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#63: FILE: drivers/block/loop.c:118:
+#define ID printk(KERN_ERR "crc: info about (%s, %d, %d) ", kdevname(lo->lo_device), real_block, blksize);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#65: FILE: drivers/block/loop.c:120:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#67: FILE: drivers/block/loop.c:122:
+static int transfer_crc(struct loop_device *lo, int cmd, char *raw_buf,
+		  char *loop_buf, int size, int real_block)

WARNING:TYPO_SPELLING: 'auxilary' may be misspelled - perhaps 'auxiliary'?
#70: FILE: drivers/block/loop.c:125:
+	int blksize = 1024, nsect;	/* Size of block on auxilary media */
 	                          	                    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#73: FILE: drivers/block/loop.c:128:
+	u32 *data;
+	nsect = blksize / 4;

WARNING:LONG_LINE_STRING: line length of 113 exceeds 100 columns
#76: FILE: drivers/block/loop.c:131:
+		ID; printk( "reading from not-yet-setup crc device can result in armagedon. Dont try again.\n" );

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#76: FILE: drivers/block/loop.c:131:
+		ID; printk( "reading from not-yet-setup crc device can result in armagedon. Dont try again.\n" );

ERROR:SPACING: space prohibited after that open parenthesis '('
#76: FILE: drivers/block/loop.c:131:
+		ID; printk( "reading from not-yet-setup crc device can result in armagedon. Dont try again.\n" );

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#76: FILE: drivers/block/loop.c:131:
+		ID; printk( "reading from not-yet-setup crc device can result in armagedon. Dont try again.\n" );

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#79: FILE: drivers/block/loop.c:134:
+	bh = getblk(lo->second_device, 1+real_block/nsect, blksize);
 	                                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#79: FILE: drivers/block/loop.c:134:
+	bh = getblk(lo->second_device, 1+real_block/nsect, blksize);
 	                                           ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#81: FILE: drivers/block/loop.c:136:
+		ID; printk( "getblk returned NULL.\n" );

ERROR:SPACING: space prohibited after that open parenthesis '('
#81: FILE: drivers/block/loop.c:136:
+		ID; printk( "getblk returned NULL.\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#81: FILE: drivers/block/loop.c:136:
+		ID; printk( "getblk returned NULL.\n" );

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#88: FILE: drivers/block/loop.c:143:
+			ID; printk(  "could not read block with CRC\n" );

ERROR:SPACING: space prohibited after that open parenthesis '('
#88: FILE: drivers/block/loop.c:143:
+			ID; printk(  "could not read block with CRC\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#88: FILE: drivers/block/loop.c:143:
+			ID; printk(  "could not read block with CRC\n" );

CHECK:SPACING: No space is necessary after a cast
#93: FILE: drivers/block/loop.c:148:
+	data = (u32 *) bh->b_data;

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#100: FILE: drivers/block/loop.c:155:
+		if (le32_to_cpu(data[real_block%nsect]) != cksum) {
 		                               ^

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#102: FILE: drivers/block/loop.c:157:
+				ID; printk( "wrong checksum reading, is %x, should be %x\n", cksum, 0x1234 );

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#102: FILE: drivers/block/loop.c:157:
+				ID; printk( "wrong checksum reading, is %x, should be %x\n", cksum, 0x1234 );

ERROR:SPACING: space prohibited after that open parenthesis '('
#102: FILE: drivers/block/loop.c:157:
+				ID; printk( "wrong checksum reading, is %x, should be %x\n", cksum, 0x1234 );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#102: FILE: drivers/block/loop.c:157:
+				ID; printk( "wrong checksum reading, is %x, should be %x\n", cksum, 0x1234 );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#104: FILE: drivers/block/loop.c:159:
+^I^I^I} else { $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#105: FILE: drivers/block/loop.c:160:
+				ID; printk( "wrong checksum repairing, setting to %x\n", cksum );

ERROR:SPACING: space prohibited after that open parenthesis '('
#105: FILE: drivers/block/loop.c:160:
+				ID; printk( "wrong checksum repairing, setting to %x\n", cksum );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#105: FILE: drivers/block/loop.c:160:
+				ID; printk( "wrong checksum repairing, setting to %x\n", cksum );

WARNING:INDENTED_LABEL: labels should not be indented
#110: FILE: drivers/block/loop.c:165:
+	repair:

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#111: FILE: drivers/block/loop.c:166:
+		data[real_block%nsect] = cpu_to_le32(cksum);
 		               ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#130: FILE: drivers/block/loop.c:185:
+	printk( "Entering ioctl_crc\n" );

ERROR:SPACING: space prohibited after that open parenthesis '('
#130: FILE: drivers/block/loop.c:185:
+	printk( "Entering ioctl_crc\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#130: FILE: drivers/block/loop.c:185:
+	printk( "Entering ioctl_crc\n" );

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ioctl_crc', this function's name, in a string
#130: FILE: drivers/block/loop.c:185:
+	printk( "Entering ioctl_crc\n" );

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#142: FILE: drivers/block/loop.c:197:
+		printk(KERN_ERR "ioctl_crc: NULL inode?!?\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ioctl_crc', this function's name, in a string
#142: FILE: drivers/block/loop.c:197:
+		printk(KERN_ERR "ioctl_crc: NULL inode?!?\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#149: FILE: drivers/block/loop.c:204:
+		printk( "loop_crc: Registered device %x\n", lo->second_device );

ERROR:SPACING: space prohibited after that open parenthesis '('
#149: FILE: drivers/block/loop.c:204:
+		printk( "loop_crc: Registered device %x\n", lo->second_device );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#149: FILE: drivers/block/loop.c:204:
+		printk( "loop_crc: Registered device %x\n", lo->second_device );

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#151: FILE: drivers/block/loop.c:206:
+		return error;
+	} else {

WARNING:INDENTED_LABEL: labels should not be indented
#152: FILE: drivers/block/loop.c:207:
+	out:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#161: FILE: drivers/block/loop.c:216:
+} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#170: FILE: drivers/block/loop.c:237:
+struct loop_func_table crc_funcs = { $

WARNING:INDENTED_LABEL: labels should not be indented
#171: FILE: drivers/block/loop.c:238:
+	number: LO_CRYPT_CRC,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#172: FILE: drivers/block/loop.c:239:
+	transfer: transfer_crc,
 	        ^

WARNING:INDENTED_LABEL: labels should not be indented
#172: FILE: drivers/block/loop.c:239:
+	transfer: transfer_crc,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#173: FILE: drivers/block/loop.c:240:
+	init: none_status,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#173: FILE: drivers/block/loop.c:240:
+	init: none_status,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#174: FILE: drivers/block/loop.c:241:
+	ioctl: ioctl_crc
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#174: FILE: drivers/block/loop.c:241:
+	ioctl: ioctl_crc

ERROR:TRAILING_WHITESPACE: trailing whitespace
#175: FILE: drivers/block/loop.c:242:
+}; ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#175: FILE: drivers/block/loop.c:242:
+}; ^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000513395.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 26 warnings, 7 checks, 168 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000513395.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
