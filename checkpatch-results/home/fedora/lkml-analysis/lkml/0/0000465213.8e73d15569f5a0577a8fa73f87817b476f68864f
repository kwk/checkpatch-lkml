WARNING:TYPO_SPELLING: 'alows' may be misspelled - perhaps 'allows'?
#33: 
This change alows the multipage-bio-writeout patches to use
            ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'Devlopers' may be misspelled - perhaps 'Developers'?
#38: 
Devlopers should think carefully before calling try_to_free_buffers()
^^^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#56: 
--- 2.5.8-pre2/include/linux/mm.h~dallocbase-40-pageprivate	Tue Apr  9 12:14:49 2002

ERROR:SPACING: space required before the open parenthesis '('
#213: FILE: fs/buffer.c:1648:
+	for(bh = head = page_buffers(page), block_start = 0;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#269: FILE: fs/buffer.c:2207:
+	head = bh = page_buffers(page);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#307: FILE: fs/buffer.c:2442:
+	struct buffer_head * tmp, * bh = page_buffers(page);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#307: FILE: fs/buffer.c:2442:
+	struct buffer_head * tmp, * bh = page_buffers(page);
 	                          ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'page' - possible side-effects?
#327: FILE: include/linux/fs.h:289:
+#define page_buffers(page)					\
+	({							\
+		if (!PagePrivate(page))				\
+			BUG();					\
+		((struct buffer_head *)(page)->private);	\
+	})

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#330: FILE: include/linux/fs.h:292:
+			BUG();					\

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'page' - possible side-effects?
#334: FILE: include/linux/fs.h:296:
+#define set_page_buffers(page, buffers)				\
+	do {							\
+		SetPagePrivate(page);				\
+		page->private = (unsigned long)buffers;		\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'page' - possible side-effects?
#339: FILE: include/linux/fs.h:301:
+#define clear_page_buffers(page)				\
+	do {							\
+		ClearPagePrivate(page);				\
+		page->private = 0;				\
+	} while (0)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#355: FILE: fs/ext3/inode.c:1033:
+		ret = walk_page_buffers(handle, page_buffers(page),
 				from, to, NULL, do_journal_get_write_access);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#364: FILE: fs/ext3/inode.c:1106:
+		ret = walk_page_buffers(handle, page_buffers(page),
 			from, to, &partial, commit_write_fn);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#373: FILE: fs/ext3/inode.c:1116:
+			ret = walk_page_buffers(handle, page_buffers(page),
 				from, to, NULL, journal_dirty_sync_data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#401: FILE: fs/ext3/inode.c:1296:
+		walk_page_buffers(handle, page_bufs, 0,
 				PAGE_CACHE_SIZE, NULL, bget_one);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#419: FILE: fs/ext3/inode.c:1314:
+		err = walk_page_buffers(handle, page_bufs,
 			0, PAGE_CACHE_SIZE, NULL, journal_dirty_async_data);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#477: FILE: fs/jbd/transaction.c:1896:
+	head = bh = page_buffers(page);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#498: FILE: fs/reiserfs/inode.c:149:
+    if (page && page_has_buffers(page)) {$

WARNING:SPACING: space prohibited before semicolon
#499: FILE: fs/reiserfs/inode.c:150:
+	head = page_buffers(page) ;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#508: FILE: fs/reiserfs/inode.c:1688:
+    head = page_buffers(page) ;      $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#508: FILE: fs/reiserfs/inode.c:1688:
+    head = page_buffers(page) ;      $

WARNING:SPACING: space prohibited before semicolon
#508: FILE: fs/reiserfs/inode.c:1688:
+    head = page_buffers(page) ;      

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#517: FILE: fs/reiserfs/inode.c:1933:
+    if (!page_has_buffers(page)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#526: FILE: fs/reiserfs/inode.c:1951:
+    head = page_buffers(page) ;$

WARNING:SPACING: space prohibited before semicolon
#526: FILE: fs/reiserfs/inode.c:1951:
+    head = page_buffers(page) ;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#535: FILE: fs/reiserfs/tail_conversion.c:158:
   if (page) {
+    if (page_has_buffers(page)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#537: FILE: fs/reiserfs/tail_conversion.c:159:
+    if (page_has_buffers(page)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#537: FILE: fs/reiserfs/tail_conversion.c:159:
+    if (page_has_buffers(page)) {
       tail_index = pos & (PAGE_CACHE_SIZE - 1) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#541: FILE: fs/reiserfs/tail_conversion.c:162:
+      head = page_buffers(page) ;$

WARNING:SPACING: space prohibited before semicolon
#541: FILE: fs/reiserfs/tail_conversion.c:162:
+      head = page_buffers(page) ;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000465213.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 16 warnings, 10 checks, 601 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000465213.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
