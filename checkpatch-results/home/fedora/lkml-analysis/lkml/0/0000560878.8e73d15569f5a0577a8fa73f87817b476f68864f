CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#102: FILE: include/linux/string.h:16:
+extern void *kmallocz(size_t size, int gfp_flags);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#103: FILE: include/linux/string.h:17:
+extern char *kstrdup(const char *orig, int gfp_flags);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#104: FILE: include/linux/string.h:18:
+extern char **kstrdup_vec(char **orig, int gfp_flags);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#105: FILE: include/linux/string.h:19:
+extern void kstrfree_vec(char **vec);

WARNING:LONG_LINE_COMMENT: line length of 108 exceeds 100 columns
#125: FILE: include/linux/kmod.h:33:
+	int synchronous;					/* Flag: make call_usermodehelper() block */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 110 exceeds 100 columns
#126: FILE: include/linux/kmod.h:34:
+	void (*completion)(void *completion_arg, int exit_code);/* Called when subprocess exits if non-NULL */

WARNING:INDENTED_LABEL: labels should not be indented
#132: FILE: include/linux/kmod.h:40:
+		synchronous:	(_synchronous),				\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#133: FILE: include/linux/kmod.h:41:
+		completion:	(_completion),				\
 		          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#133: FILE: include/linux/kmod.h:41:
+		completion:	(_completion),				\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#134: FILE: include/linux/kmod.h:42:
+		completion_arg:	(_completion_arg),			\
 		              ^

WARNING:INDENTED_LABEL: labels should not be indented
#134: FILE: include/linux/kmod.h:42:
+		completion_arg:	(_completion_arg),			\

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#135: FILE: include/linux/kmod.h:43:
+		owner:		THIS_MODULE,				\
 		     ^

WARNING:INDENTED_LABEL: labels should not be indented
#135: FILE: include/linux/kmod.h:43:
+		owner:		THIS_MODULE,				\

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#141: FILE: include/linux/kmod.h:49:
+extern int call_usermodehelper(char *path, char *argv[], char *envp[], struct umh_control *umh_c);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#159: FILE: lib/misc.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#160: FILE: lib/misc.c:2:
+ * linux/lib/misc.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:LINE_SPACING: Missing a blank line after declarations
#180: FILE: lib/misc.c:22:
+	void *ret = kmalloc(size, gfp_flags);
+	if (ret)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#197: FILE: lib/misc.c:39:
+	char *ret = kmalloc(strlen(orig) + 1, gfp_flags);
+	if (ret)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#353: FILE: kernel/kmod.c:324:
+		printk(KERN_ERR "call_usermodehelper(%s): vfork failed: %d\n", sub_info->path, pid);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#371: FILE: kernel/kmod.c:342:
+			printk(KERN_ERR "call_usermodehelper(%s): waitpid failed: %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#372: FILE: kernel/kmod.c:343:
+			printk(KERN_ERR "call_usermodehelper(%s): waitpid failed: %d\n",
+				sub_info->path, pid2);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#395: FILE: kernel/kmod.c:362:
+		printk(KERN_ERR "call_usermodehelper(%s): fork failed: %d\n", sub_info->path, pid);

ERROR:SPACING: space prohibited after that open parenthesis '('
#486: FILE: kernel/kmod.c:427:
+		if (	sub_info->umh_c.owner &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#487: FILE: kernel/kmod.c:428:
+		if (	sub_info->umh_c.owner &&
+			sub_info->umh_c.completion &&

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#509: FILE: kernel/kmod.c:448:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:MEMORY_BARRIER: memory barrier without comment
#516: FILE: kernel/kmod.c:455:
+	smp_mb();

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#557: FILE: drivers/pci/pci.c:392:
+	call_usermodehelper (argv [0], argv, envp, 0);

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#557: FILE: drivers/pci/pci.c:392:
+	call_usermodehelper (argv [0], argv, envp, 0);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#579: FILE: drivers/usb/usb.c:780:
+	value = call_usermodehelper (argv [0], argv, envp, 0);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#579: FILE: drivers/usb/usb.c:780:
+	value = call_usermodehelper (argv [0], argv, envp, 0);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#658: FILE: net/core/dev.c:2753:
+	return call_usermodehelper(argv [0], argv, envp, 0);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000560878.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 17 warnings, 7 checks, 522 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000560878.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
