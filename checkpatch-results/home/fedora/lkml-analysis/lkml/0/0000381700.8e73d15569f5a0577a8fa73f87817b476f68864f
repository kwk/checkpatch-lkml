WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
pcmcia-cs-3.2.3/etc/config.opts is attached. Don't rely on it yet, in-kernel

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#53: FILE: drivers/pcmcia/ds.c:1220:
+static ssize_t store_iomem_##action (const char *buf, size_t count)	\

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#59: FILE: drivers/pcmcia/ds.c:1226:
+	ret = sscanf (buf, "0x%lx-0x%lx", &from, &to);			\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#63: FILE: drivers/pcmcia/ds.c:1230:
+^Iif (to <= from) ^I^I^I^I^I^I\$

CHECK:CAMELCASE: Avoid CamelCase: <Action>
#66: FILE: drivers/pcmcia/ds.c:1233:
+	adj.Action = action##_MANAGED_RESOURCE;				\

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Resource>
#67: FILE: drivers/pcmcia/ds.c:1234:
+	adj.Resource = RES_MEMORY_RANGE;				\

CHECK:CAMELCASE: Avoid CamelCase: <Base>
#68: FILE: drivers/pcmcia/ds.c:1235:
+	adj.resource.memory.Base = from;				\

CHECK:CAMELCASE: Avoid CamelCase: <Size>
#69: FILE: drivers/pcmcia/ds.c:1236:
+	adj.resource.memory.Size = to - from + 1;			\

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#75: FILE: drivers/pcmcia/ds.c:1242:
+}
+store_iomem(add);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#79: FILE: drivers/pcmcia/ds.c:1246:
+static ssize_t store_ioport_##action (const char *buf, size_t count)	\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#85: FILE: drivers/pcmcia/ds.c:1252:
+	ret = sscanf (buf, "0x%x-0x%x:0x%x", &from, &to, &addr_lines);	\

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ret != 2'
#86: FILE: drivers/pcmcia/ds.c:1253:
+	if ((ret != 2) && (ret != 3))					\

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ret != 3'
#86: FILE: drivers/pcmcia/ds.c:1253:
+	if ((ret != 2) && (ret != 3))					\

ERROR:SPACING: space prohibited after that open parenthesis '('
#89: FILE: drivers/pcmcia/ds.c:1256:
+	if ((to <= from) || ( to > 0xffff))				\

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'to <= from'
#89: FILE: drivers/pcmcia/ds.c:1256:
+	if ((to <= from) || ( to > 0xffff))				\

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'to > 0xffff'
#89: FILE: drivers/pcmcia/ds.c:1256:
+	if ((to <= from) || ( to > 0xffff))				\

CHECK:CAMELCASE: Avoid CamelCase: <BasePort>
#94: FILE: drivers/pcmcia/ds.c:1261:
+	adj.resource.io.BasePort = from;				\

CHECK:CAMELCASE: Avoid CamelCase: <NumPorts>
#95: FILE: drivers/pcmcia/ds.c:1262:
+	adj.resource.io.NumPorts = to - from + 1;			\

CHECK:CAMELCASE: Avoid CamelCase: <IOAddrLines>
#97: FILE: drivers/pcmcia/ds.c:1264:
+		adj.resource.io.IOAddrLines = addr_lines;		\

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#105: FILE: drivers/pcmcia/ds.c:1272:
+}
+store_ioport(add);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#109: FILE: drivers/pcmcia/ds.c:1276:
+static ssize_t store_irq_##action (const char *buf, size_t count)	\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#115: FILE: drivers/pcmcia/ds.c:1282:
+	ret = sscanf (buf, "0x%u:0x%x", &irq, &attr);			\

ERROR:PRINTF_0XDECIMAL: Prefixing 0x with decimal output is defective
#115: FILE: drivers/pcmcia/ds.c:1282:
+	ret = sscanf (buf, "0x%u:0x%x", &irq, &attr);			\

Prefixing 0x with decimal output is defective and should be corrected.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ret != 1'
#116: FILE: drivers/pcmcia/ds.c:1283:
+	if ((ret != 1) && (ret != 2))					\

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ret != 2'
#116: FILE: drivers/pcmcia/ds.c:1283:
+	if ((ret != 1) && (ret != 2))					\

CHECK:CAMELCASE: Avoid CamelCase: <Attributes>
#123: FILE: drivers/pcmcia/ds.c:1290:
+		adj.Attributes = attr;					\

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#131: FILE: drivers/pcmcia/ds.c:1298:
+}
+store_irq(add);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#134: FILE: drivers/pcmcia/ds.c:1301:
+static ssize_t store_resources_done (const char * buf, size_t count)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#134: FILE: drivers/pcmcia/ds.c:1301:
+static ssize_t store_resources_done (const char * buf, size_t count)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#139: FILE: drivers/pcmcia/ds.c:1306:
+	ret = sscanf (buf, "%u", &value);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#139: FILE: drivers/pcmcia/ds.c:1306:
+	ret = sscanf (buf, "%u", &value);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ret != 1'
#140: FILE: drivers/pcmcia/ds.c:1307:
+	if ((ret != 1) || (value > 1))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'value > 1'
#140: FILE: drivers/pcmcia/ds.c:1307:
+	if ((ret != 1) || (value > 1))

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#151: FILE: drivers/pcmcia/ds.c:1318:
+	ssize_t (*store)(const char *, size_t count);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#159: FILE: drivers/pcmcia/ds.c:1326:
+}
+define_one_w(iomem_add);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#167: FILE: drivers/pcmcia/ds.c:1334:
+static struct attribute * default_attrs[] = {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#178: FILE: drivers/pcmcia/ds.c:1345:
+static ssize_t show(struct kobject * kobj, struct attribute * attr ,char * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#178: FILE: drivers/pcmcia/ds.c:1345:
+static ssize_t show(struct kobject * kobj, struct attribute * attr ,char * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#178: FILE: drivers/pcmcia/ds.c:1345:
+static ssize_t show(struct kobject * kobj, struct attribute * attr ,char * buf)

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#178: FILE: drivers/pcmcia/ds.c:1345:
+static ssize_t show(struct kobject * kobj, struct attribute * attr ,char * buf)
                                                                    ^

ERROR:SPACING: space required after that ',' (ctx:WxV)
#178: FILE: drivers/pcmcia/ds.c:1345:
+static ssize_t show(struct kobject * kobj, struct attribute * attr ,char * buf)
                                                                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#183: FILE: drivers/pcmcia/ds.c:1350:
+static ssize_t store(struct kobject * kobj, struct attribute * attr, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#183: FILE: drivers/pcmcia/ds.c:1350:
+static ssize_t store(struct kobject * kobj, struct attribute * attr, 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#183: FILE: drivers/pcmcia/ds.c:1350:
+static ssize_t store(struct kobject * kobj, struct attribute * attr, 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#184: FILE: drivers/pcmcia/ds.c:1351:
+		     const char * buf, size_t count)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#186: FILE: drivers/pcmcia/ds.c:1353:
+	struct res_attr * rattr = container_of(attr, struct res_attr, attr);

WARNING:LINE_SPACING: Missing a blank line after declarations
#187: FILE: drivers/pcmcia/ds.c:1354:
+	struct res_attr * rattr = container_of(attr, struct res_attr, attr);
+	rattr->store ? rattr->store(buf,count) : 0;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#187: FILE: drivers/pcmcia/ds.c:1354:
+	rattr->store ? rattr->store(buf,count) : 0;
 	                               ^

WARNING:CONST_STRUCT: struct sysfs_ops should normally be const
#191: FILE: drivers/pcmcia/ds.c:1358:
+static struct sysfs_ops sysfs_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000381700.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 14 warnings, 20 checks, 187 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000381700.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
