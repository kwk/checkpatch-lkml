WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#47: 
Content-Disposition: attachment; filename="02-numa_sched_ilb-2.5.44-10.patch"

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#50: 
--- a/fs/exec.c	Sat Oct 19 06:01:48 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#67: FILE: include/linux/sched.h:450:
+extern void sched_balance_exec(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#82: FILE: kernel/sched.c:2186:
+static atomic_t sched_node=ATOMIC_INIT(0);
                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#90: FILE: kernel/sched.c:2194:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#92: FILE: kernel/sched.c:2196:
+	loop_over_node(n,cpu,node) {
 	                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#92: FILE: kernel/sched.c:2196:
+	loop_over_node(n,cpu,node) {
 	                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#108: FILE: kernel/sched.c:2212:
+	int i, n, best_node=0, min_load, pool_load, min_pool=numa_node_id();
 	                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#108: FILE: kernel/sched.c:2212:
+	int i, n, best_node=0, min_load, pool_load, min_pool=numa_node_id();
 	                                                    ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#123: FILE: kernel/sched.c:2227:
+			if (!cpu_online(cpu)) continue;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#126: FILE: kernel/sched.c:2230:
+		if (pool == numa_node_id()) load--;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#127: FILE: kernel/sched.c:2231:
+		pool_load = 100*load/pool_nr_cpus[pool];
 		               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#127: FILE: kernel/sched.c:2231:
+		pool_load = 100*load/pool_nr_cpus[pool];
 		                    ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pool_load < min_load'
#128: FILE: kernel/sched.c:2232:
+		if ((pool_load < min_load) && (pool_mask[pool] & mask)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#139: FILE: kernel/sched.c:2243:
+	int new_cpu, new_node=0;
 	                     ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#143: FILE: kernel/sched.c:2247:
+	if (numpools > 1) {
+		new_node = sched_best_node(current);
+	} 

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#145: FILE: kernel/sched.c:2249:
+^I} $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000419650.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 2 warnings, 4 checks, 105 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000419650.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
