WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#59: 
> kernel fixmaps, and this would mean that we'd have a new one. That's just 

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#96: FILE: arch/i386/mm/init.c:521:
+void kernel_pmd_ctor(void *, kmem_cache_t *, unsigned long);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#96: FILE: arch/i386/mm/init.c:521:
+void kernel_pmd_ctor(void *, kmem_cache_t *, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'kmem_cache_t *' should also have an identifier name
#96: FILE: arch/i386/mm/init.c:521:
+void kernel_pmd_ctor(void *, kmem_cache_t *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#96: FILE: arch/i386/mm/init.c:521:
+void kernel_pmd_ctor(void *, kmem_cache_t *, unsigned long);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#109: FILE: arch/i386/mm/init.c:537:
+		kernel_pmd_cache = kmem_cache_create("pae_kernel_pmd",
+						(PTRS_PER_PMD*sizeof(pmd_t))*KERNEL_PGD_PTRS,

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#109: FILE: arch/i386/mm/init.c:537:
+						(PTRS_PER_PMD*sizeof(pmd_t))*KERNEL_PGD_PTRS,
 						             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#109: FILE: arch/i386/mm/init.c:537:
+						(PTRS_PER_PMD*sizeof(pmd_t))*KERNEL_PGD_PTRS,
 						                            ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'pgtable_cache_init', this function's name, in a string
#116: FILE: arch/i386/mm/init.c:544:
+			panic("pgtable_cache_init(): cannot create kernel pmd cache");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#128: FILE: arch/i386/mm/pgtable.c:139:
+^I^Iif (pte) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#136: FILE: arch/i386/mm/pgtable.c:171:
+extern kmem_cache_t *kernel_pmd_cache;

WARNING:LINE_SPACING: Missing a blank line after declarations
#147: FILE: arch/i386/mm/pgtable.c:182:
+	int i;
+	for (i=USER_PTRS_PER_PGD; i<PTRS_PER_PGD; i++) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#147: FILE: arch/i386/mm/pgtable.c:182:
+	for (i=USER_PTRS_PER_PGD; i<PTRS_PER_PGD; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#147: FILE: arch/i386/mm/pgtable.c:182:
+	for (i=USER_PTRS_PER_PGD; i<PTRS_PER_PGD; i++) {
 	                           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#149: FILE: arch/i386/mm/pgtable.c:184:
+		pmd_t *kern_pmd = (pmd_t *)pgd_page(swapper_pg_dir[i]);
+		memcpy(__pmd+PAGE_SIZE*(i-USER_PTRS_PER_PGD), kern_pmd, PAGE_SIZE);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#149: FILE: arch/i386/mm/pgtable.c:184:
+		memcpy(__pmd+PAGE_SIZE*(i-USER_PTRS_PER_PGD), kern_pmd, PAGE_SIZE);
 		            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#149: FILE: arch/i386/mm/pgtable.c:184:
+		memcpy(__pmd+PAGE_SIZE*(i-USER_PTRS_PER_PGD), kern_pmd, PAGE_SIZE);
 		                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#149: FILE: arch/i386/mm/pgtable.c:184:
+		memcpy(__pmd+PAGE_SIZE*(i-USER_PTRS_PER_PGD), kern_pmd, PAGE_SIZE);
 		                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#171: FILE: arch/i386/mm/pgtable.c:212:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#172: FILE: arch/i386/mm/pgtable.c:213:
+^I^Iif (i >= USER_PTRS_PER_PGD) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#174: FILE: arch/i386/mm/pgtable.c:215:
+^I^I^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#186: FILE: arch/i386/mm/pgtable.c:225:
+		pmd_t *pmd = pmd_offset(&pgd[i],0);
 		                               ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#187: FILE: arch/i386/mm/pgtable.c:226:
+		pmd_t *pmd = pmd_offset(&pgd[i],0);
+		kmem_cache_free(pmd_cachep, pmd);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#199: FILE: arch/i386/mm/pgtable.c:238:
+			pmd_t *pmd_to_free = pmd_offset(&pgd[i],0);
 			                                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#200: FILE: arch/i386/mm/pgtable.c:239:
+^I^I^I$

ERROR:SPACING: space prohibited after that open parenthesis '('
#201: FILE: arch/i386/mm/pgtable.c:240:
+			if( i >= USER_PTRS_PER_PGD )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#201: FILE: arch/i386/mm/pgtable.c:240:
+			if( i >= USER_PTRS_PER_PGD )

ERROR:SPACING: space required before the open parenthesis '('
#201: FILE: arch/i386/mm/pgtable.c:240:
+			if( i >= USER_PTRS_PER_PGD )

ERROR:TRAILING_WHITESPACE: trailing whitespace
#203: FILE: arch/i386/mm/pgtable.c:242:
+^I^I^Ielse $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#235: FILE: arch/i386/mm/init.c:126:
 
+

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#240: FILE: arch/i386/mm/init.c:131:
+void pmd_map_pfn_range(pmd_t* pmd_entry, unsigned long pfn, unsigned long max_pfn)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#248: FILE: arch/i386/mm/init.c:139:
+		pte_t* pte = one_page_table_init(pmd_entry);

WARNING:LINE_SPACING: Missing a blank line after declarations
#249: FILE: arch/i386/mm/init.c:140:
+		pte_t* pte = one_page_table_init(pmd_entry);
+		for (pte_ofs = 0; pte_ofs < PTRS_PER_PTE && pfn < max_pfn; pte++, pfn++, pte_ofs++)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#281: FILE: arch/i386/mm/init.c:164:
+^I$

ERROR:SPACING: space prohibited after that open parenthesis '('
#283: FILE: arch/i386/mm/init.c:166:
+		if( pgd_idx == pgd_index(PAGE_OFFSET) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#283: FILE: arch/i386/mm/init.c:166:
+		if( pgd_idx == pgd_index(PAGE_OFFSET) ) {

ERROR:SPACING: space required before the open parenthesis '('
#283: FILE: arch/i386/mm/init.c:166:
+		if( pgd_idx == pgd_index(PAGE_OFFSET) ) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#283: FILE: arch/i386/mm/init.c:166:
+		if( pgd_idx == pgd_index(PAGE_OFFSET) ) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#286: FILE: arch/i386/mm/init.c:169:
+		} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#291: FILE: arch/i386/mm/init.c:174:
+^I^I^Ipfn += PTRS_PER_PTE; $

ERROR:SPACING: space required before the open parenthesis '('
#310: FILE: arch/i386/mm/init.c:193:
+	if(!cpu_has_pse) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#311: FILE: arch/i386/mm/init.c:194:
+		printk("PAE enabled, but no support for PSE (large pages)!\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#312: FILE: arch/i386/mm/init.c:195:
+		printk("this is likely to waste some RAM.");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#314: FILE: arch/i386/mm/init.c:197:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#315: FILE: arch/i386/mm/init.c:198:
+^Ifor (; pmd_ofs < PTRS_PER_PMD && pfn <= max_low_pfn; pmd++, pmd_ofs++) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#318: FILE: arch/i386/mm/init.c:201:
+^I}^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#322: FILE: arch/i386/mm/init.c:205:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#382: FILE: arch/i386/mm/pgtable.c:183:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#387: FILE: arch/i386/mm/pgtable.c:188:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#388: FILE: arch/i386/mm/pgtable.c:189:
+	for (i=FIRST_KERNEL_PGD_PTR; i<PTRS_PER_PGD; i++, pmd+=PTRS_PER_PMD) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#388: FILE: arch/i386/mm/pgtable.c:189:
+	for (i=FIRST_KERNEL_PGD_PTR; i<PTRS_PER_PGD; i++, pmd+=PTRS_PER_PMD) {
 	                              ^

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#388: FILE: arch/i386/mm/pgtable.c:189:
+	for (i=FIRST_KERNEL_PGD_PTR; i<PTRS_PER_PGD; i++, pmd+=PTRS_PER_PMD) {
 	                                                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#394: FILE: arch/i386/mm/pgtable.c:194:
+		int num_pmds = PTRS_PER_PMD-USER_PTRS_PER_PMD(i);
 		                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#395: FILE: arch/i386/mm/pgtable.c:195:
+^I^I$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#396: FILE: arch/i386/mm/pgtable.c:196:
+		memcpy(dst_pmd, src_pmd, num_pmds*sizeof(pmd_t));
 		                                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#420: FILE: arch/i386/mm/pgtable.c:224:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#426: FILE: arch/i386/mm/pgtable.c:230:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#429: FILE: arch/i386/mm/pgtable.c:233:
+^I * a different slab for each one. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#434: FILE: arch/i386/mm/pgtable.c:238:
+^I$

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#436: FILE: arch/i386/mm/pgtable.c:240:
+		set_pgd(pgd + i, __pgd(1 + __pa((unsigned long long)((unsigned long)kern_pmd_pages))));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#440: FILE: arch/i386/mm/pgtable.c:244:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#457: FILE: arch/i386/mm/pgtable.c:260:
+^I^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#468: FILE: arch/i386/mm/pgtable.c:263:
+			pmd_to_free = pmd_offset(&pgd[i],0);
 			                                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#472: FILE: arch/i386/mm/pgtable.c:267:
+^I^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#477: FILE: arch/i386/mm/pgtable.c:272:
+		pmd_to_free = pmd_offset(&pgd[FIRST_KERNEL_PGD_PTR],0);
 		                                                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#483: FILE: arch/i386/mm/pgtable.c:277:
+^I$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#527: FILE: include/asm-i386/pgtable.h:58:
+#define __USER_PTRS_PER_PGD	(TASK_SIZE/PGDIR_SIZE)
                            	          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#529: FILE: include/asm-i386/pgtable.h:60:
+#define PARTIAL_PGD	(TASK_SIZE > __USER_PTRS_PER_PGD*PGDIR_SIZE ? 1 : 0)
                    	                                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#530: FILE: include/asm-i386/pgtable.h:61:
+#define PARTIAL_PMD	((TASK_SIZE % PGDIR_SIZE)/PMD_SIZE)
                    	                         ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#533: FILE: include/asm-i386/pgtable.h:64:
+static inline int USER_PTRS_PER_PMD(int pgd_index) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#537: FILE: include/asm-i386/pgtable.h:68:
+		return (PTRS_PER_PMD-PARTIAL_PMD);
 		                    ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#686: FILE: mm/memory.c:102:
+static inline void free_one_pgd(struct mmu_gather *tlb, pgd_t * pgd, unsigned long pgdi)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#709: FILE: mm/memory.c:144:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000371727.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 43 errors, 14 warnings, 16 checks, 521 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000371727.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
