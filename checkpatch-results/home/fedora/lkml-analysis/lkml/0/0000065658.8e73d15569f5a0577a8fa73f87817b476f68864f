WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#64: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#69: FILE: arch/m68k/kernel/dma.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dma_alloc_coherent', this function's name, in a string
#93: FILE: arch/m68k/kernel/dma.c:25:
+	pr_debug("dma_alloc_coherent: %d,%x\n", size, flag);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dma_free_coherent', this function's name, in a string
#132: FILE: arch/m68k/kernel/dma.c:64:
+	pr_debug("dma_free_coherent: %p, %x\n", addr, handle);

WARNING:PRINTK_RATELIMITED: Prefer printk_ratelimited or pr_<level>_ratelimited to printk_ratelimit
#148: FILE: arch/m68k/kernel/dma.c:80:
+		if (printk_ratelimit())

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#149: FILE: arch/m68k/kernel/dma.c:81:
+			printk("dma_sync_single_for_device: unsupported dir %u\n", dir);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#205: FILE: drivers/scsi/sun3x_esp.c:334:
     while (sz >= 0) {
+	    sg[sz].dma_address = dvma_map((unsigned long)page_address(sg[sz].page) +

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: drivers/scsi/sun3x_esp.c:339:
+    sp->SCp.ptr=(char *)((unsigned long)sp->SCp.buffer->dma_address);$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#212: FILE: drivers/scsi/sun3x_esp.c:339:
+    sp->SCp.ptr=(char *)((unsigned long)sp->SCp.buffer->dma_address);
                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <SCp>
#212: FILE: drivers/scsi/sun3x_esp.c:339:
+    sp->SCp.ptr=(char *)((unsigned long)sp->SCp.buffer->dma_address);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: drivers/scsi/sun3x_esp.c:353:
+        dvma_unmap((char *)sg[sz].dma_address);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: drivers/scsi/sun3x_esp.c:353:
+        dvma_unmap((char *)sg[sz].dma_address);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: drivers/scsi/sun3x_esp.c:360:
+    sp->SCp.ptr = (char *)((unsigned long)sp->SCp.buffer->dma_address);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#258: FILE: include/asm-m68k/dma-mapping.h:16:
+extern void *dma_alloc_coherent(struct device *, size_t,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#260: FILE: include/asm-m68k/dma-mapping.h:18:
+extern void dma_free_coherent(struct device *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#260: FILE: include/asm-m68k/dma-mapping.h:18:
+extern void dma_free_coherent(struct device *, size_t,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#260: FILE: include/asm-m68k/dma-mapping.h:18:
+extern void dma_free_coherent(struct device *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#260: FILE: include/asm-m68k/dma-mapping.h:18:
+extern void dma_free_coherent(struct device *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'dma_addr_t' should also have an identifier name
#260: FILE: include/asm-m68k/dma-mapping.h:18:
+extern void dma_free_coherent(struct device *, size_t,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#263: FILE: include/asm-m68k/dma-mapping.h:21:
+extern dma_addr_t dma_map_single(struct device *, void *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#263: FILE: include/asm-m68k/dma-mapping.h:21:
+extern dma_addr_t dma_map_single(struct device *, void *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#263: FILE: include/asm-m68k/dma-mapping.h:21:
+extern dma_addr_t dma_map_single(struct device *, void *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#263: FILE: include/asm-m68k/dma-mapping.h:21:
+extern dma_addr_t dma_map_single(struct device *, void *, size_t,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#270: FILE: include/asm-m68k/dma-mapping.h:28:
+extern dma_addr_t dma_map_page(struct device *, struct page *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#278: FILE: include/asm-m68k/dma-mapping.h:36:
+extern int dma_map_sg(struct device *, struct scatterlist *, int,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#285: FILE: include/asm-m68k/dma-mapping.h:43:
+extern void dma_sync_single_for_device(struct device *, dma_addr_t, size_t,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#287: FILE: include/asm-m68k/dma-mapping.h:45:
+extern void dma_sync_sg_for_device(struct device *, struct scatterlist *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#287: FILE: include/asm-m68k/dma-mapping.h:45:
+extern void dma_sync_sg_for_device(struct device *, struct scatterlist *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scatterlist *' should also have an identifier name
#287: FILE: include/asm-m68k/dma-mapping.h:45:
+extern void dma_sync_sg_for_device(struct device *, struct scatterlist *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#287: FILE: include/asm-m68k/dma-mapping.h:45:
+extern void dma_sync_sg_for_device(struct device *, struct scatterlist *, int,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000065658.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 21 warnings, 8 checks, 263 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000065658.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
