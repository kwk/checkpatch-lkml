CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#53: FILE: drivers/char/ipmi/ipmi_si_intf.c:99:
 };
+static char *si_to_str[] = { "kcs", "smic", "bt" };

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#115: FILE: drivers/char/ipmi/ipmi_si_intf.c:1033:
+MODULE_PARM_DESC(hotmod, "Add and remove interfaces.  See"
+		 " Documentation/IPMI.txt in the kernel sources for the"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#116: FILE: drivers/char/ipmi/ipmi_si_intf.c:1034:
+		 " Documentation/IPMI.txt in the kernel sources for the"
+		 " gory details.");

WARNING:SPLIT_STRING: quoted string split across lines
#126: FILE: drivers/char/ipmi/ipmi_si_intf.c:1088:
+MODULE_PARM_DESC(unload_when_empty, "Unload the module if no interfaces are"
+		 " specified or found, default is 1.  Setting to 0"

WARNING:SPLIT_STRING: quoted string split across lines
#127: FILE: drivers/char/ipmi/ipmi_si_intf.c:1089:
+		 " specified or found, default is 1.  Setting to 0"
+		 " is useful for hot add of devices using hotmod.");

WARNING:TYPO_SPELLING: 'Parms' may be misspelled - perhaps 'Params'?
#142: FILE: drivers/char/ipmi/ipmi_si_intf.c:1366:
+ * Parms come in as <op1>[:op2[:op3...]].  ops are:
    ^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#156: FILE: drivers/char/ipmi/ipmi_si_intf.c:1380:
+};
+static struct hotmod_vals hotmod_ops[] = {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#161: FILE: drivers/char/ipmi/ipmi_si_intf.c:1385:
+};
+static struct hotmod_vals hotmod_si[] = {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#167: FILE: drivers/char/ipmi/ipmi_si_intf.c:1391:
+};
+static struct hotmod_vals hotmod_as[] = {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#172: FILE: drivers/char/ipmi/ipmi_si_intf.c:1396:
+};
+static int ipmi_strcasecmp(const char *s1, const char *s2)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#186: FILE: drivers/char/ipmi/ipmi_si_intf.c:1410:
+}
+static int parse_str(struct hotmod_vals *v, int *val, char *name, char **curr)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#193: FILE: drivers/char/ipmi/ipmi_si_intf.c:1417:
+		printk(KERN_WARNING PFX "No hotmod %s given.\n", name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#206: FILE: drivers/char/ipmi/ipmi_si_intf.c:1430:
+	printk(KERN_WARNING PFX "Invalid hotmod %s '%s'\n", name, *curr);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#269: FILE: drivers/char/ipmi/ipmi_si_intf.c:1493:
+		addr = simple_strtoul(curr, &n, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#271: FILE: drivers/char/ipmi/ipmi_si_intf.c:1495:
+			printk(KERN_WARNING PFX "Invalid hotmod address"

WARNING:SPLIT_STRING: quoted string split across lines
#272: FILE: drivers/char/ipmi/ipmi_si_intf.c:1496:
+			printk(KERN_WARNING PFX "Invalid hotmod address"
+			       " '%s'\n", curr);

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#288: FILE: drivers/char/ipmi/ipmi_si_intf.c:1512:
+#define HOTMOD_INT_OPT(name, val) \
+			if (ipmi_strcasecmp(curr, name) == 0) {		\
+				if (!o) {				\
+					printk(KERN_WARNING PFX		\
+					       "No option given for '%s'\n", \
+						curr);			\
+					goto out;			\
+				}					\
+				val = simple_strtoul(o, &n, 0);		\
+				if ((*n != '\0') || (*o == '\0')) {	\
+					printk(KERN_WARNING PFX		\
+					       "Bad option given for '%s'\n", \
+					       curr);			\
+					goto out;			\
+				}					\
+			}

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#288: FILE: drivers/char/ipmi/ipmi_si_intf.c:1512:
+#define HOTMOD_INT_OPT(name, val) \
+			if (ipmi_strcasecmp(curr, name) == 0) {		\
+				if (!o) {				\
+					printk(KERN_WARNING PFX		\
+					       "No option given for '%s'\n", \
+						curr);			\
+					goto out;			\
+				}					\
+				val = simple_strtoul(o, &n, 0);		\
+				if ((*n != '\0') || (*o == '\0')) {	\
+					printk(KERN_WARNING PFX		\
+					       "Bad option given for '%s'\n", \
+					       curr);			\
+					goto out;			\
+				}					\
+			}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#291: FILE: drivers/char/ipmi/ipmi_si_intf.c:1515:
+					printk(KERN_WARNING PFX		\

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#296: FILE: drivers/char/ipmi/ipmi_si_intf.c:1520:
+				val = simple_strtoul(o, &n, 0);		\

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#298: FILE: drivers/char/ipmi/ipmi_si_intf.c:1522:
+					printk(KERN_WARNING PFX		\

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#306: FILE: drivers/char/ipmi/ipmi_si_intf.c:1530:
+			else HOTMOD_INT_OPT("rsi", regsize)

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#307: FILE: drivers/char/ipmi/ipmi_si_intf.c:1531:
+			else HOTMOD_INT_OPT("rsh", regshift)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#308: FILE: drivers/char/ipmi/ipmi_si_intf.c:1532:
+			else HOTMOD_INT_OPT("irq", irq)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#309: FILE: drivers/char/ipmi/ipmi_si_intf.c:1533:
+			else HOTMOD_INT_OPT("ipmb", ipmb)

CHECK:BRACES: Unbalanced braces around else statement
#310: FILE: drivers/char/ipmi/ipmi_si_intf.c:1534:
+			else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#311: FILE: drivers/char/ipmi/ipmi_si_intf.c:1535:
+				printk(KERN_WARNING PFX

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#370: FILE: drivers/char/ipmi/ipmi_si_intf.c:1594:
 static __devinit void hardcode_find_bmc(void)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#442: FILE: drivers/char/ipmi/ipmi_si_intf.c:2678:
+		printk(KERN_ERR

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000013259.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 17 warnings, 7 checks, 460 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000013259.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
