WARNING:TYPO_SPELLING: 'occurances' may be misspelled - perhaps 'occurrences'?
#22: 
This patch changes all the other occurances of const __initdata that
                                 ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#25: 
l-k with ~40 seperate related mails).
             ^^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
diff -urN --exclude-from=/home/davej/.exclude linux-ac/arch/m68k/amiga/config.c linux-dj/arch/m68k/amiga/config.c

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#127: FILE: arch/ppc/kernel/residual.c:58:
+char * PnP_BASE_TYPES[] __initdata = {

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <PnP_BASE_TYPES>
#127: FILE: arch/ppc/kernel/residual.c:58:
+char * PnP_BASE_TYPES[] __initdata = {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#136: FILE: arch/ppc/kernel/residual.c:74:
+unsigned char * PnP_SUB_TYPES[] __initdata = {

CHECK:CAMELCASE: Avoid CamelCase: <PnP_SUB_TYPES>
#136: FILE: arch/ppc/kernel/residual.c:74:
+unsigned char * PnP_SUB_TYPES[] __initdata = {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#145: FILE: arch/ppc/kernel/residual.c:131:
+unsigned char * PnP_INTERFACES[] __initdata = {

CHECK:CAMELCASE: Avoid CamelCase: <PnP_INTERFACES>
#145: FILE: arch/ppc/kernel/residual.c:131:
+unsigned char * PnP_INTERFACES[] __initdata = {

WARNING:MISPLACED_INIT: __initdata should be placed after ucode_start
#168: FILE: drivers/atm/ambassador.c:300:
+static u32 __initdata ucode_start =

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:MISPLACED_INIT: __initdata should be placed after ucode_data[]
#179: FILE: drivers/atm/ambassador.c:309:
+static u32 __initdata ucode_data[] = {

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#228: FILE: drivers/char/qpmouse.c:341:
+static char msg_banner[] __initdata = KERN_INFO "82C710 type pointing device detected -- driver installed.\n";

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#301: FILE: drivers/net/hamradio/6pack.c:702:
+static char msg_banner[]  __initdata = KERN_INFO "AX.25: 6pack driver, " SIXPACK_VERSION " (dynamic channels, max=%d)\n";

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#303: FILE: drivers/net/hamradio/6pack.c:704:
+static char msg_nomem[]   __initdata = KERN_ERR  "6pack: can't allocate sixpack_ctrls[] array! No 6pack available.\n";

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#304: FILE: drivers/net/hamradio/6pack.c:705:
+static char msg_regfail[] __initdata = KERN_ERR  "6pack: can't register line discipline (err = %d)\n";

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#340: FILE: drivers/net/hamradio/scc.c:187:
+static char banner[] __initdata = KERN_INFO "AX.25: Z8530 SCC driver version "VERSION".dl1bke\n";

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#412: FILE: drivers/net/wireless/airport.c:35:
+static char version[] __initdata = "airport.c 0.06f (Benjamin Herrenschmidt <benh@kernel.crashing.org>)";

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#424: FILE: drivers/net/wireless/hermes.c:33:
+static char version[] __initdata = "hermes.c: 1 Aug 2001 David Gibson <hermes@gibson.dropbear.id.au>";

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#436: FILE: drivers/net/wireless/orinoco.c:223:
+static char version[] __initdata = "orinoco.c 0.06f (David Gibson <hermes@gibson.dropbear.id.au> and others)";

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#448: FILE: drivers/net/wireless/orinoco_cs.c:45:
+static char version[] __initdata = "orinoco_cs.c 0.06f (David Gibson <hermes@gibson.dropbear.id.au> and others)";

CHECK:CAMELCASE: Avoid CamelCase: <Signature>
#460: FILE: drivers/scsi/seagate.c:294:
+static Signature __initdata signatures[] =

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#469: FILE: drivers/sound/sonicvibes.c:2482:
 static int __devinit sv_probe(struct pci_dev *pcidev, const struct pci_device_id *pciid)

WARNING:MISPLACED_INIT: __initdata should be placed after sv_ddma_name[]
#472: FILE: drivers/sound/sonicvibes.c:2484:
+	static char __initdata sv_ddma_name[] = "S3 Inc. SonicVibes DDMA Controller";

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#484: FILE: drivers/video/amifb.c:917:
+static char *mode_option __initdata = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#496: FILE: drivers/video/aty/atyfb_base.c:254:
+static char *mode_option __initdata = NULL;

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#611: FILE: drivers/video/aty128fb.c:223:
+static char *mode_option __initdata = NULL;

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#635: FILE: drivers/video/pvr2fb.c:302:
+static char *mode_option __initdata = NULL;

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#647: FILE: drivers/video/riva/fbdev.c:263:
+static char *mode_option __initdata = NULL;

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#659: FILE: drivers/video/tdfxfb.c:532:
+static char *mode_option __initdata = NULL;

ERROR:SPACING: space prohibited after that open parenthesis '('
#671: FILE: drivers/zorro/names.c:40:
+#define MANUF( manuf, name )		static char __manufstr_##manuf[] __initdata = name;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#671: FILE: drivers/zorro/names.c:40:
+#define MANUF( manuf, name )		static char __manufstr_##manuf[] __initdata = name;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#671: FILE: drivers/zorro/names.c:40:
+#define MANUF( manuf, name )		static char __manufstr_##manuf[] __initdata = name;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#674: FILE: drivers/zorro/names.c:42:
+#define PRODUCT( manuf, prod, name ) ^Istatic char __prodstr_##manuf##prod[] __initdata = name;$

ERROR:SPACING: space prohibited after that open parenthesis '('
#674: FILE: drivers/zorro/names.c:42:
+#define PRODUCT( manuf, prod, name ) 	static char __prodstr_##manuf##prod[] __initdata = name;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#674: FILE: drivers/zorro/names.c:42:
+#define PRODUCT( manuf, prod, name ) 	static char __prodstr_##manuf##prod[] __initdata = name;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#674: FILE: drivers/zorro/names.c:42:
+#define PRODUCT( manuf, prod, name ) 	static char __prodstr_##manuf##prod[] __initdata = name;

WARNING:MISPLACED_INIT: __initdata should be placed after zorro_manuf_list[]
#683: FILE: drivers/zorro/names.c:51:
+static struct zorro_manuf_info __initdata zorro_manuf_list[] = {

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#695: FILE: net/ax25/af_ax25.c:1844:
+static char banner[] __initdata = KERN_INFO "NET4: G4KLX/GW4PTS AX.25 for Linux. Version 0.37 for Linux NET4.0\n";

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#731: FILE: net/ipx/af_spx.c:913:
+static char banner[] __initdata = KERN_INFO "NET4: Sequenced Packet eXchange (SPX) 0.02 for Linux NET4.0\n";

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#755: FILE: net/netrom/af_netrom.c:1265:
+static char banner[] __initdata = KERN_INFO "G4KLX NET/ROM for Linux. Version 0.7 for AX25.037 Linux 2.4\n";

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000516823.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 22 warnings, 5 checks, 557 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000516823.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
