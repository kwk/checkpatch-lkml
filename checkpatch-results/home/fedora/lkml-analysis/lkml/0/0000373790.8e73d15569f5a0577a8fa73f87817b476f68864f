WARNING:PATCH_PREFIX: patch prefix 'MAINTAINERS' exists, appears to be a -p0 patch

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#60: FILE: MAINTAINERS:2093:
+P:	Yoshinori Sato
+M:	ysato@users.sourceforge.jp

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'S:' before 'W:'
#62: FILE: MAINTAINERS:2095:
+W:	http://uclinux-h8.sourceforge.jp/
+S:	Supported

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:TYPO_SPELLING: 'commmand' may be misspelled - perhaps 'command'?
#86: FILE: h8300/Kconfig:129:
+	string "Buildin commmand string"
 	                ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#141: FILE: h8300/kernel/process.c:113:
+	printk("ER2: %08lx ER3: %08lx ER4: %08lx ER5: %08lx\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#143: FILE: h8300/kernel/process.c:115:
+	printk("ER6' %08lx ",regs->er6);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#143: FILE: h8300/kernel/process.c:115:
+	printk("ER6' %08lx ",regs->er6);
 	                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#147: FILE: h8300/kernel/process.c:119:
+		printk("\n");

CHECK:SPACING: No space is necessary after a cast
#170: FILE: h8300/kernel/process.c:208:
+	childregs->retpc = (unsigned long) ret_from_fork;

CHECK:SPACING: No space is necessary after a cast
#211: FILE: h8300/kernel/process.c:251:
+	struct pt_regs *regs = (struct pt_regs *) ((unsigned char *)&dummy-4);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#211: FILE: h8300/kernel/process.c:251:
+	struct pt_regs *regs = (struct pt_regs *) ((unsigned char *)&dummy-4);
 	                                                                  ^

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

CHECK:SPACING: No space is necessary after a cast
#278: FILE: h8300/kernel/setup.c:94:
+	memory_start = (unsigned long) &_ramstart;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#281: FILE: h8300/kernel/setup.c:97:
+	if (memcmp(memory_start, "-rom1fs-", 8) == 0) {
+		memory_start += be32_to_cpu(((unsigned long *) memory_start)[2]);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#282: FILE: h8300/kernel/setup.c:98:
+		memory_start += be32_to_cpu(((unsigned long *) memory_start)[2]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#294: FILE: h8300/kernel/setup.c:113:
+	printk("\r\n\nuClinux " CPU "\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#298: FILE: h8300/kernel/setup.c:116:
+	printk("H8/300 series support by Yoshinori Sato <ysato@users.sourceforge.jp>\n");

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

ERROR:SPACING: space required after that ',' (ctx:VxV)
#338: FILE: h8300/kernel/signal.c:164:
+} __attribute__((aligned(2),packed));
                            ^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(2) over __attribute__((aligned(2)))
#338: FILE: h8300/kernel/signal.c:164:
+} __attribute__((aligned(2),packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#338: FILE: h8300/kernel/signal.c:164:
+} __attribute__((aligned(2),packed));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#357: FILE: h8300/kernel/signal.c:177:
+} __attribute__((aligned(2),packed));
                            ^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(2) over __attribute__((aligned(2)))
#357: FILE: h8300/kernel/signal.c:177:
+} __attribute__((aligned(2),packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#357: FILE: h8300/kernel/signal.c:177:
+} __attribute__((aligned(2),packed));

CHECK:SPACING: No space is necessary after a cast
#390: FILE: h8300/kernel/signal.c:244:
+	struct pt_regs *regs = (struct pt_regs *) &__unused;

CHECK:SPACING: No space is necessary after a cast
#400: FILE: h8300/kernel/signal.c:275:
+	struct pt_regs *regs = (struct pt_regs *) &__unused;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#466: FILE: h8300/kernel/signal.c:381:
+	regs->er0 = (current_thread_info()->exec_domain
+			   && current_thread_info()->exec_domain->signal_invmap

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#467: FILE: h8300/kernel/signal.c:382:
+			   && current_thread_info()->exec_domain->signal_invmap
+			   && sig < 32

ERROR:CODE_INDENT: code indent should use tabs where possible
#469: FILE: h8300/kernel/signal.c:384:
+^I^I          : sig);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around frame->sc
#470: FILE: h8300/kernel/signal.c:385:
+	regs->er1 = (unsigned long)&(frame->sc);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: No space is necessary after a cast
#494: FILE: h8300/kernel/signal.c:430:
+	regs->pc  = (unsigned long) ka->sa.sa_handler;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#496: FILE: h8300/kernel/signal.c:432:
+	regs->er0 = (current_thread_info()->exec_domain
+		     && current_thread_info()->exec_domain->signal_invmap

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#497: FILE: h8300/kernel/signal.c:433:
+		     && current_thread_info()->exec_domain->signal_invmap
+		     && sig < 32

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around frame->info
#500: FILE: h8300/kernel/signal.c:436:
+	regs->er1 = (unsigned long)&(frame->info);

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

CHECK:SPACING: No space is necessary after a cast
#518: FILE: h8300/kernel/sys_h8300.c:284:
+	struct pt_regs *regs = (struct pt_regs *) ((unsigned char *)&dummy-4);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#518: FILE: h8300/kernel/sys_h8300.c:284:
+	struct pt_regs *regs = (struct pt_regs *) ((unsigned char *)&dummy-4);
 	                                                                  ^

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#596: FILE: h8300/platform/h8300h/entry.S:60:
+^Isub.l^I#(LRET-LORIG),sp^I^I/* allocate LORIG - LRET */ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#665: FILE: h8300/platform/h8300h/entry.S:113:
+^Iadd.l^I#(LRET-LORIG),sp^I^I/* remove LORIG - LRET */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#703: FILE: h8300/platform/h8300h/entry.S:126:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#715: FILE: h8300/platform/h8300h/entry.S:137:
+INTERRUPTS = 64^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#838: FILE: h8300/platform/h8300h/entry.S:260:
+^Ijmp^I@SYMBOL_NAME_LABEL(ret_from_exception)^I$

WARNING:PATCH_PREFIX: patch prefix 'arch' exists, appears to be a -p0 patch

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000373790.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 24 warnings, 16 checks, 743 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000373790.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
