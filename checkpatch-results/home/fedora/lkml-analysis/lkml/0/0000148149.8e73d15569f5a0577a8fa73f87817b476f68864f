CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#73: FILE: include/linux/vmalloc.h:35:
+extern void *vmalloc_node(unsigned long size, int node);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#79: FILE: include/linux/vmalloc.h:38:
+extern void *__vmalloc(unsigned long size, unsigned int __nocast gfp_mask,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#80: FILE: include/linux/vmalloc.h:39:
+extern void *__vmalloc(unsigned long size, unsigned int __nocast gfp_mask,
+				pgprot_t prot);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#81: FILE: include/linux/vmalloc.h:40:
+extern void *__vmalloc_node(unsigned long size, unsigned int __nocast gfp_mask,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#82: FILE: include/linux/vmalloc.h:41:
+extern void *__vmalloc_node(unsigned long size, unsigned int __nocast gfp_mask,
+				pgprot_t prot, int node);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#83: FILE: include/linux/vmalloc.h:42:
+extern void *__vmalloc_area(struct vm_struct *area, unsigned int __nocast gfp_mask,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#84: FILE: include/linux/vmalloc.h:43:
+extern void *__vmalloc_area(struct vm_struct *area, unsigned int __nocast gfp_mask,
+				pgprot_t prot, int node);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#86: FILE: include/linux/vmalloc.h:45:
+extern void vfree(void *addr);

WARNING:TYPO_SPELLING: 'contingous' may be misspelled - perhaps 'contiguous'?
#95: FILE: include/linux/vmalloc.h:51:
+ *      get_vm_area  -  reserve a contingous kernel virtual area
                                   ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#173: FILE: mm/vmalloc.c:385:
+void *__vmalloc_area(struct vm_struct *area, unsigned int __nocast gfp_mask,
+			pgprot_t prot, int node)

WARNING:TYPO_SPELLING: 'cotrol' may be misspelled - perhaps 'control'?
#256: FILE: mm/vmalloc.c:489:
+ *	For tight cotrol over page level allocator and protection flags
   	          ^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: mm/vmalloc.c:494:
+       return __vmalloc_node(size, GFP_KERNEL | __GFP_HIGHMEM, PAGE_KERNEL, node);$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#264: FILE: mm/vmalloc.c:497:
+EXPORT_SYMBOL(vmalloc_node);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000148149.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 4 warnings, 9 checks, 185 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000148149.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
