WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
--- linux-2.6.14-rc5-mm1/fs/ecryptfs/ecryptfs_kernel.h	1969-12-31 18:00:00.000000000 -0600

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#42: FILE: fs/ecryptfs/ecryptfs_kernel.h:1:
+/**

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#62: FILE: fs/ecryptfs/ecryptfs_kernel.h:21:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#63: FILE: fs/ecryptfs/ecryptfs_kernel.h:22:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#77: FILE: fs/ecryptfs/ecryptfs_kernel.h:36:
+#define ECRYPTFS_SALT_SIZE_HEX (ECRYPTFS_SALT_SIZE*2)
                                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#80: FILE: fs/ecryptfs/ecryptfs_kernel.h:39:
+ * be passed around or referenced on the command line */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#82: FILE: fs/ecryptfs/ecryptfs_kernel.h:41:
+#define ECRYPTFS_SIG_SIZE_HEX (ECRYPTFS_SIG_SIZE*2)
                                                 ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#128: FILE: fs/ecryptfs/ecryptfs_kernel.h:87:
+				 * has not received its salt yet. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#144: FILE: fs/ecryptfs/ecryptfs_kernel.h:103:
+				 * descriptors */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#153: FILE: fs/ecryptfs/ecryptfs_kernel.h:112:
+	 * key */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#162: FILE: fs/ecryptfs/ecryptfs_kernel.h:121:
+extern void ecryptfs_to_hex(char *dst, char *src, int src_size);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#163: FILE: fs/ecryptfs/ecryptfs_kernel.h:122:
+extern void ecryptfs_from_hex(char *dst, char *src, int dst_size);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#179: FILE: fs/ecryptfs/ecryptfs_kernel.h:138:
+};
+#define KEY_REC_SIZE(key_rec) \

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'key_rec' may be better as '(key_rec)' to avoid precedence issues
#179: FILE: fs/ecryptfs/ecryptfs_kernel.h:138:
+#define KEY_REC_SIZE(key_rec) \
+        ( sizeof(struct ecryptfs_key_record) - ECRYPTFS_MAX_KEY_BYTES \
+          + key_rec.enc_key_size_bits/8 )

ERROR:CODE_INDENT: code indent should use tabs where possible
#180: FILE: fs/ecryptfs/ecryptfs_kernel.h:139:
+        ( sizeof(struct ecryptfs_key_record) - ECRYPTFS_MAX_KEY_BYTES \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: fs/ecryptfs/ecryptfs_kernel.h:139:
+        ( sizeof(struct ecryptfs_key_record) - ECRYPTFS_MAX_KEY_BYTES \$

ERROR:SPACING: space prohibited after that open parenthesis '('
#180: FILE: fs/ecryptfs/ecryptfs_kernel.h:139:
+        ( sizeof(struct ecryptfs_key_record) - ECRYPTFS_MAX_KEY_BYTES \

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: fs/ecryptfs/ecryptfs_kernel.h:140:
+          + key_rec.enc_key_size_bits/8 )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: fs/ecryptfs/ecryptfs_kernel.h:140:
+          + key_rec.enc_key_size_bits/8 )$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#181: FILE: fs/ecryptfs/ecryptfs_kernel.h:140:
+          + key_rec.enc_key_size_bits/8 )
                                      ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#181: FILE: fs/ecryptfs/ecryptfs_kernel.h:140:
+          + key_rec.enc_key_size_bits/8 )

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'key' may be better as '(key)' to avoid precedence issues
#193: FILE: fs/ecryptfs/ecryptfs_kernel.h:152:
+#define KEY_PAYLOAD_DATA(key) \
+	( ((struct user_key_payload*)key->payload.data)->data)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#194: FILE: fs/ecryptfs/ecryptfs_kernel.h:153:
+	( ((struct user_key_payload*)key->payload.data)->data)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#194: FILE: fs/ecryptfs/ecryptfs_kernel.h:153:
+	( ((struct user_key_payload*)key->payload.data)->data)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'key' may be better as '(key)' to avoid precedence issues
#195: FILE: fs/ecryptfs/ecryptfs_kernel.h:154:
+#define KEY_PAYLOAD_LEN(key) \
+	( ((struct user_key_payload*)key->payload.data)->datalen)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#196: FILE: fs/ecryptfs/ecryptfs_kernel.h:155:
+	( ((struct user_key_payload*)key->payload.data)->datalen)

ERROR:SPACING: space prohibited after that open parenthesis '('
#196: FILE: fs/ecryptfs/ecryptfs_kernel.h:155:
+	( ((struct user_key_payload*)key->payload.data)->datalen)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'crypt_stats' - possible side-effects?
#211: FILE: fs/ecryptfs/ecryptfs_kernel.h:170:
+#define RECORDS_PER_PAGE(crypt_stats) (crypt_stats->extent_size / \
+                                       (crypt_stats->iv_bytes))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'crypt_stats' may be better as '(crypt_stats)' to avoid precedence issues
#211: FILE: fs/ecryptfs/ecryptfs_kernel.h:170:
+#define RECORDS_PER_PAGE(crypt_stats) (crypt_stats->extent_size / \
+                                       (crypt_stats->iv_bytes))

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: fs/ecryptfs/ecryptfs_kernel.h:171:
+                                       (crypt_stats->iv_bytes))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: fs/ecryptfs/ecryptfs_kernel.h:171:
+                                       (crypt_stats->iv_bytes))$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'crypt_stats' - possible side-effects?
#213: FILE: fs/ecryptfs/ecryptfs_kernel.h:172:
+#define PG_IDX_TO_LWR_PG_IDX(crypt_stats, idx) \
+        ((idx / crypt_stats->records_per_page) + idx \
+         + crypt_stats->num_header_pages + 1)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'crypt_stats' may be better as '(crypt_stats)' to avoid precedence issues
#213: FILE: fs/ecryptfs/ecryptfs_kernel.h:172:
+#define PG_IDX_TO_LWR_PG_IDX(crypt_stats, idx) \
+        ((idx / crypt_stats->records_per_page) + idx \
+         + crypt_stats->num_header_pages + 1)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'idx' - possible side-effects?
#213: FILE: fs/ecryptfs/ecryptfs_kernel.h:172:
+#define PG_IDX_TO_LWR_PG_IDX(crypt_stats, idx) \
+        ((idx / crypt_stats->records_per_page) + idx \
+         + crypt_stats->num_header_pages + 1)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'idx' may be better as '(idx)' to avoid precedence issues
#213: FILE: fs/ecryptfs/ecryptfs_kernel.h:172:
+#define PG_IDX_TO_LWR_PG_IDX(crypt_stats, idx) \
+        ((idx / crypt_stats->records_per_page) + idx \
+         + crypt_stats->num_header_pages + 1)

ERROR:CODE_INDENT: code indent should use tabs where possible
#214: FILE: fs/ecryptfs/ecryptfs_kernel.h:173:
+        ((idx / crypt_stats->records_per_page) + idx \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: fs/ecryptfs/ecryptfs_kernel.h:173:
+        ((idx / crypt_stats->records_per_page) + idx \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: fs/ecryptfs/ecryptfs_kernel.h:174:
+         + crypt_stats->num_header_pages + 1)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: fs/ecryptfs/ecryptfs_kernel.h:174:
+         + crypt_stats->num_header_pages + 1)$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'crypt_stats' may be better as '(crypt_stats)' to avoid precedence issues
#216: FILE: fs/ecryptfs/ecryptfs_kernel.h:175:
+#define RECORD_IDX(crypt_stats, idx) (idx % crypt_stats->records_per_page)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'idx' may be better as '(idx)' to avoid precedence issues
#216: FILE: fs/ecryptfs/ecryptfs_kernel.h:175:
+#define RECORD_IDX(crypt_stats, idx) (idx % crypt_stats->records_per_page)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'crypt_stats' - possible side-effects?
#217: FILE: fs/ecryptfs/ecryptfs_kernel.h:176:
+#define RECORD_OFFSET(crypt_stats, idx) \
+        (RECORD_IDX(crypt_stats, idx) * (crypt_stats->iv_bytes \
+                                         + crypt_stats->hmac_bytes))

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: fs/ecryptfs/ecryptfs_kernel.h:177:
+        (RECORD_IDX(crypt_stats, idx) * (crypt_stats->iv_bytes \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: fs/ecryptfs/ecryptfs_kernel.h:177:
+        (RECORD_IDX(crypt_stats, idx) * (crypt_stats->iv_bytes \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: fs/ecryptfs/ecryptfs_kernel.h:178:
+                                         + crypt_stats->hmac_bytes))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: fs/ecryptfs/ecryptfs_kernel.h:178:
+                                         + crypt_stats->hmac_bytes))$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'crypt_stats' - possible side-effects?
#220: FILE: fs/ecryptfs/ecryptfs_kernel.h:179:
+#define LAST_RECORDS_PAGE_IDX(crypt_stats, idx) \
+        (PG_IDX_TO_LWR_PG_IDX(crypt_stats, idx) \
+         - RECORD_IDX(crypt_stats,idx) - 1)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'idx' - possible side-effects?
#220: FILE: fs/ecryptfs/ecryptfs_kernel.h:179:
+#define LAST_RECORDS_PAGE_IDX(crypt_stats, idx) \
+        (PG_IDX_TO_LWR_PG_IDX(crypt_stats, idx) \
+         - RECORD_IDX(crypt_stats,idx) - 1)

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: fs/ecryptfs/ecryptfs_kernel.h:180:
+        (PG_IDX_TO_LWR_PG_IDX(crypt_stats, idx) \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: fs/ecryptfs/ecryptfs_kernel.h:180:
+        (PG_IDX_TO_LWR_PG_IDX(crypt_stats, idx) \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#222: FILE: fs/ecryptfs/ecryptfs_kernel.h:181:
+         - RECORD_IDX(crypt_stats,idx) - 1)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: fs/ecryptfs/ecryptfs_kernel.h:181:
+         - RECORD_IDX(crypt_stats,idx) - 1)$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#222: FILE: fs/ecryptfs/ecryptfs_kernel.h:181:
+         - RECORD_IDX(crypt_stats,idx) - 1)
                                  ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#247: FILE: fs/ecryptfs/ecryptfs_kernel.h:206:
+				 * file */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#258: FILE: fs/ecryptfs/ecryptfs_kernel.h:217:
+				 * write (performance vs. security tradeoff) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#267: FILE: fs/ecryptfs/ecryptfs_kernel.h:226:
+				 * header */

ERROR:CODE_INDENT: code indent should use tabs where possible
#326: FILE: fs/ecryptfs/ecryptfs_kernel.h:285:
+        if (unlikely(!(EX))) {                                                \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: fs/ecryptfs/ecryptfs_kernel.h:285:
+        if (unlikely(!(EX))) {                                                \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#327: FILE: fs/ecryptfs/ecryptfs_kernel.h:286:
+^I        printk(KERN_CRIT "ASSERTION FAILED: %s at %s:%d (%s)\n", #EX, \$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#327: FILE: fs/ecryptfs/ecryptfs_kernel.h:286:
+	        printk(KERN_CRIT "ASSERTION FAILED: %s at %s:%d (%s)\n", #EX, \

ERROR:CODE_INDENT: code indent should use tabs where possible
#328: FILE: fs/ecryptfs/ecryptfs_kernel.h:287:
+^I               __FILE__, __LINE__, __FUNCTION__);^I              \$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#328: FILE: fs/ecryptfs/ecryptfs_kernel.h:287:
+	               __FILE__, __LINE__, __FUNCTION__);	              \

ERROR:CODE_INDENT: code indent should use tabs where possible
#329: FILE: fs/ecryptfs/ecryptfs_kernel.h:288:
+                BUG();                                                        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: fs/ecryptfs/ecryptfs_kernel.h:288:
+                BUG();                                                        \$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#329: FILE: fs/ecryptfs/ecryptfs_kernel.h:288:
+                BUG();                                                        \

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:CODE_INDENT: code indent should use tabs where possible
#330: FILE: fs/ecryptfs/ecryptfs_kernel.h:289:
+        }^I                                                              \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: fs/ecryptfs/ecryptfs_kernel.h:289:
+        }^I                                                              \$

WARNING:SPACING: space prohibited before semicolon
#333: FILE: fs/ecryptfs/ecryptfs_kernel.h:292:
+#define ASSERT(EX) ;

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#333: FILE: fs/ecryptfs/ecryptfs_kernel.h:292:
+#define ASSERT(EX) ;

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#333: FILE: fs/ecryptfs/ecryptfs_kernel.h:292:
+#define ASSERT(EX) ;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:CONST_STRUCT: struct file_operations should normally be const
#364: FILE: fs/ecryptfs/ecryptfs_kernel.h:323:
+extern struct file_operations ecryptfs_main_fops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct file_operations should normally be const
#365: FILE: fs/ecryptfs/ecryptfs_kernel.h:324:
+extern struct file_operations ecryptfs_dir_fops;

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#366: FILE: fs/ecryptfs/ecryptfs_kernel.h:325:
+extern struct inode_operations ecryptfs_main_iops;

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#367: FILE: fs/ecryptfs/ecryptfs_kernel.h:326:
+extern struct inode_operations ecryptfs_dir_iops;

WARNING:CONST_STRUCT: struct inode_operations should normally be const
#368: FILE: fs/ecryptfs/ecryptfs_kernel.h:327:
+extern struct inode_operations ecryptfs_symlink_iops;

WARNING:CONST_STRUCT: struct dentry_operations should normally be const
#370: FILE: fs/ecryptfs/ecryptfs_kernel.h:329:
+extern struct dentry_operations ecryptfs_dops;

WARNING:CONST_STRUCT: struct address_space_operations should normally be const
#371: FILE: fs/ecryptfs/ecryptfs_kernel.h:330:
+extern struct address_space_operations ecryptfs_aops;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#404: FILE: fs/ecryptfs/ecryptfs_kernel.h:363:
+#define ecryptfs_printk(verb, type, fmt, arg...) \
+        __ecryptfs_printk((verb), type "%s: " fmt, __FUNCTION__, ## arg);

ERROR:CODE_INDENT: code indent should use tabs where possible
#405: FILE: fs/ecryptfs/ecryptfs_kernel.h:364:
+        __ecryptfs_printk((verb), type "%s: " fmt, __FUNCTION__, ## arg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#405: FILE: fs/ecryptfs/ecryptfs_kernel.h:364:
+        __ecryptfs_printk((verb), type "%s: " fmt, __FUNCTION__, ## arg);$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#405: FILE: fs/ecryptfs/ecryptfs_kernel.h:364:
+        __ecryptfs_printk((verb), type "%s: " fmt, __FUNCTION__, ## arg);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#448: FILE: fs/ecryptfs/ecryptfs_kernel.h:407:
+				struct nameidata *nd);
 				                  ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#467: FILE: fs/ecryptfs/ecryptfs_kernel.h:426:
+#define ecryptfs_kfree(ptr) \
+        __ecryptfs_kfree(ptr, __FUNCTION__, __LINE__);

ERROR:CODE_INDENT: code indent should use tabs where possible
#468: FILE: fs/ecryptfs/ecryptfs_kernel.h:427:
+        __ecryptfs_kfree(ptr, __FUNCTION__, __LINE__);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#468: FILE: fs/ecryptfs/ecryptfs_kernel.h:427:
+        __ecryptfs_kfree(ptr, __FUNCTION__, __LINE__);$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#468: FILE: fs/ecryptfs/ecryptfs_kernel.h:427:
+        __ecryptfs_kfree(ptr, __FUNCTION__, __LINE__);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#469: FILE: fs/ecryptfs/ecryptfs_kernel.h:428:
+#define ecryptfs_kmalloc(size, flags) \
+        __ecryptfs_kmalloc(size, flags, __FUNCTION__, __LINE__);

ERROR:CODE_INDENT: code indent should use tabs where possible
#470: FILE: fs/ecryptfs/ecryptfs_kernel.h:429:
+        __ecryptfs_kmalloc(size, flags, __FUNCTION__, __LINE__);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#470: FILE: fs/ecryptfs/ecryptfs_kernel.h:429:
+        __ecryptfs_kmalloc(size, flags, __FUNCTION__, __LINE__);$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#470: FILE: fs/ecryptfs/ecryptfs_kernel.h:429:
+        __ecryptfs_kmalloc(size, flags, __FUNCTION__, __LINE__);

ERROR:CODE_INDENT: code indent should use tabs where possible
#472: FILE: fs/ecryptfs/ecryptfs_kernel.h:431:
+        __ecryptfs_kmem_cache_alloc(kmem_cache, slab_type, __FUNCTION__, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#472: FILE: fs/ecryptfs/ecryptfs_kernel.h:431:
+        __ecryptfs_kmem_cache_alloc(kmem_cache, slab_type, __FUNCTION__, \$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#472: FILE: fs/ecryptfs/ecryptfs_kernel.h:431:
+        __ecryptfs_kmem_cache_alloc(kmem_cache, slab_type, __FUNCTION__, \

ERROR:CODE_INDENT: code indent should use tabs where possible
#473: FILE: fs/ecryptfs/ecryptfs_kernel.h:432:
+                                    __LINE__)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#473: FILE: fs/ecryptfs/ecryptfs_kernel.h:432:
+                                    __LINE__)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#475: FILE: fs/ecryptfs/ecryptfs_kernel.h:434:
+        __ecryptfs_kmem_cache_free(kmem_cache, ptr, __FUNCTION__, __LINE__)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#475: FILE: fs/ecryptfs/ecryptfs_kernel.h:434:
+        __ecryptfs_kmem_cache_free(kmem_cache, ptr, __FUNCTION__, __LINE__)$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#475: FILE: fs/ecryptfs/ecryptfs_kernel.h:434:
+        __ecryptfs_kmem_cache_free(kmem_cache, ptr, __FUNCTION__, __LINE__)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#478: FILE: fs/ecryptfs/ecryptfs_kernel.h:437:
+void *__ecryptfs_kmem_cache_alloc(kmem_cache_t * kmem_cache,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#481: FILE: fs/ecryptfs/ecryptfs_kernel.h:440:
+void __ecryptfs_kmem_cache_free(kmem_cache_t * kmem_cache, void *ptr,

ERROR:CODE_INDENT: code indent should use tabs where possible
#504: FILE: fs/ecryptfs/ecryptfs_kernel.h:463:
+        __ecryptfs_iget(sb, inode, __FUNCTION__, __LINE__)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#504: FILE: fs/ecryptfs/ecryptfs_kernel.h:463:
+        __ecryptfs_iget(sb, inode, __FUNCTION__, __LINE__)$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#504: FILE: fs/ecryptfs/ecryptfs_kernel.h:463:
+        __ecryptfs_iget(sb, inode, __FUNCTION__, __LINE__)

ERROR:CODE_INDENT: code indent should use tabs where possible
#506: FILE: fs/ecryptfs/ecryptfs_kernel.h:465:
+        __ecryptfs_iput(inode, __FUNCTION__, __LINE__)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#506: FILE: fs/ecryptfs/ecryptfs_kernel.h:465:
+        __ecryptfs_iput(inode, __FUNCTION__, __LINE__)$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#506: FILE: fs/ecryptfs/ecryptfs_kernel.h:465:
+        __ecryptfs_iput(inode, __FUNCTION__, __LINE__)

ERROR:CODE_INDENT: code indent should use tabs where possible
#508: FILE: fs/ecryptfs/ecryptfs_kernel.h:467:
+        __ecryptfs_fput(file, __FUNCTION__, __LINE__)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#508: FILE: fs/ecryptfs/ecryptfs_kernel.h:467:
+        __ecryptfs_fput(file, __FUNCTION__, __LINE__)$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#508: FILE: fs/ecryptfs/ecryptfs_kernel.h:467:
+        __ecryptfs_fput(file, __FUNCTION__, __LINE__)

ERROR:CODE_INDENT: code indent should use tabs where possible
#510: FILE: fs/ecryptfs/ecryptfs_kernel.h:469:
+        __ecryptfs_d_add(dentry, inode, __FUNCTION__, __LINE__)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#510: FILE: fs/ecryptfs/ecryptfs_kernel.h:469:
+        __ecryptfs_d_add(dentry, inode, __FUNCTION__, __LINE__)$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#510: FILE: fs/ecryptfs/ecryptfs_kernel.h:469:
+        __ecryptfs_d_add(dentry, inode, __FUNCTION__, __LINE__)

ERROR:CODE_INDENT: code indent should use tabs where possible
#512: FILE: fs/ecryptfs/ecryptfs_kernel.h:471:
+        __ecryptfs_d_instantiate(dentry, inode, __FUNCTION__, __LINE__)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#512: FILE: fs/ecryptfs/ecryptfs_kernel.h:471:
+        __ecryptfs_d_instantiate(dentry, inode, __FUNCTION__, __LINE__)$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#512: FILE: fs/ecryptfs/ecryptfs_kernel.h:471:
+        __ecryptfs_d_instantiate(dentry, inode, __FUNCTION__, __LINE__)

ERROR:CODE_INDENT: code indent should use tabs where possible
#514: FILE: fs/ecryptfs/ecryptfs_kernel.h:473:
+        __ecryptfs_d_alloc(parent, name, __FUNCTION__, __LINE__)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#514: FILE: fs/ecryptfs/ecryptfs_kernel.h:473:
+        __ecryptfs_d_alloc(parent, name, __FUNCTION__, __LINE__)$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#514: FILE: fs/ecryptfs/ecryptfs_kernel.h:473:
+        __ecryptfs_d_alloc(parent, name, __FUNCTION__, __LINE__)

ERROR:CODE_INDENT: code indent should use tabs where possible
#516: FILE: fs/ecryptfs/ecryptfs_kernel.h:475:
+        __ecryptfs_dput(dentry, __FUNCTION__, __LINE__)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#516: FILE: fs/ecryptfs/ecryptfs_kernel.h:475:
+        __ecryptfs_dput(dentry, __FUNCTION__, __LINE__)$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#516: FILE: fs/ecryptfs/ecryptfs_kernel.h:475:
+        __ecryptfs_dput(dentry, __FUNCTION__, __LINE__)

ERROR:CODE_INDENT: code indent should use tabs where possible
#518: FILE: fs/ecryptfs/ecryptfs_kernel.h:477:
+        __ecryptfs_dget(dentry, __FUNCTION__, __LINE__)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#518: FILE: fs/ecryptfs/ecryptfs_kernel.h:477:
+        __ecryptfs_dget(dentry, __FUNCTION__, __LINE__)$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#518: FILE: fs/ecryptfs/ecryptfs_kernel.h:477:
+        __ecryptfs_dget(dentry, __FUNCTION__, __LINE__)

ERROR:CODE_INDENT: code indent should use tabs where possible
#520: FILE: fs/ecryptfs/ecryptfs_kernel.h:479:
+        __ecryptfs_d_drop(dentry, __FUNCTION__, __LINE__)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#520: FILE: fs/ecryptfs/ecryptfs_kernel.h:479:
+        __ecryptfs_d_drop(dentry, __FUNCTION__, __LINE__)$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#520: FILE: fs/ecryptfs/ecryptfs_kernel.h:479:
+        __ecryptfs_d_drop(dentry, __FUNCTION__, __LINE__)

ERROR:CODE_INDENT: code indent should use tabs where possible
#522: FILE: fs/ecryptfs/ecryptfs_kernel.h:481:
+        __ecryptfs_dentry_open(dentry, mnt, flags, __FUNCTION__, __LINE__)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#522: FILE: fs/ecryptfs/ecryptfs_kernel.h:481:
+        __ecryptfs_dentry_open(dentry, mnt, flags, __FUNCTION__, __LINE__)$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#522: FILE: fs/ecryptfs/ecryptfs_kernel.h:481:
+        __ecryptfs_dentry_open(dentry, mnt, flags, __FUNCTION__, __LINE__)

ERROR:CODE_INDENT: code indent should use tabs where possible
#524: FILE: fs/ecryptfs/ecryptfs_kernel.h:483:
+        __ecryptfs_d_delete(dentry, __FUNCTION__, __LINE__)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#524: FILE: fs/ecryptfs/ecryptfs_kernel.h:483:
+        __ecryptfs_d_delete(dentry, __FUNCTION__, __LINE__)$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#524: FILE: fs/ecryptfs/ecryptfs_kernel.h:483:
+        __ecryptfs_d_delete(dentry, __FUNCTION__, __LINE__)

ERROR:CODE_INDENT: code indent should use tabs where possible
#526: FILE: fs/ecryptfs/ecryptfs_kernel.h:485:
+        __ecryptfs_igrab(inode, __FUNCTION__, __LINE__)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#526: FILE: fs/ecryptfs/ecryptfs_kernel.h:485:
+        __ecryptfs_igrab(inode, __FUNCTION__, __LINE__)$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#526: FILE: fs/ecryptfs/ecryptfs_kernel.h:485:
+        __ecryptfs_igrab(inode, __FUNCTION__, __LINE__)

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#550: FILE: fs/ecryptfs/ecryptfs_kernel.h:509:
+#define ecryptfs_iput(inode) iput(inode)
                              ^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000138726.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 44 errors, 73 warnings, 20 checks, 523 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000138726.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
