WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
inutPDA) serial keyboards. I made it on kernel 2.6.16, but it applies clean=

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#91: FILE: input/keyboard/stowaway.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#114: FILE: input/keyboard/stowaway.c:24:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#115: FILE: input/keyboard/stowaway.c:25:
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#140: FILE: input/keyboard/stowaway.c:50:
+^IKEY_X, KEY_A, KEY_S, KEY_D, KEY_F, KEY_G, KEY_H, KEY_SPACE, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: input/keyboard/stowaway.c:52:
+        0, 0, 0, KEY_LEFTALT, 0, 0, 0, 0,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: input/keyboard/stowaway.c:52:
+        0, 0, 0, KEY_LEFTALT, 0, 0, 0, 0,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: input/keyboard/stowaway.c:54:
+        KEY_MINUS, KEY_EQUAL, KEY_BACKSPACE, KEY_HOME, KEY_8, KEY_9, KEY_0, KEY_ESC,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: input/keyboard/stowaway.c:54:
+        KEY_MINUS, KEY_EQUAL, KEY_BACKSPACE, KEY_HOME, KEY_8, KEY_9, KEY_0, KEY_ESC,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: input/keyboard/stowaway.c:56:
+        KEY_APOSTROPHE, KEY_ENTER, KEY_PAGEUP,0, KEY_J, KEY_K, KEY_L, KEY_SEMICOLON,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: input/keyboard/stowaway.c:56:
+        KEY_APOSTROPHE, KEY_ENTER, KEY_PAGEUP,0, KEY_J, KEY_K, KEY_L, KEY_SEMICOLON,$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#146: FILE: input/keyboard/stowaway.c:56:
+        KEY_APOSTROPHE, KEY_ENTER, KEY_PAGEUP,0, KEY_J, KEY_K, KEY_L, KEY_SEMICOLON,
                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#147: FILE: input/keyboard/stowaway.c:57:
+	KEY_SLASH, KEY_UP, KEY_PAGEDOWN, 0,KEY_M, KEY_COMMA, KEY_DOT, KEY_INSERT,
 	                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#148: FILE: input/keyboard/stowaway.c:58:
+        KEY_DELETE, KEY_LEFT, KEY_DOWN, KEY_RIGHT,  0, 0, 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: input/keyboard/stowaway.c:58:
+        KEY_DELETE, KEY_LEFT, KEY_DOWN, KEY_RIGHT,  0, 0, 0,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: input/keyboard/stowaway.c:60:
+        0, 0, 0, 0, 0, 0, 0, 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: input/keyboard/stowaway.c:60:
+        0, 0, 0, 0, 0, 0, 0, 0,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: input/keyboard/stowaway.c:62:
+        0, KEY_F1, KEY_F2, KEY_F3, KEY_F4, KEY_F5, KEY_F6, KEY_F7,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: input/keyboard/stowaway.c:62:
+        0, KEY_F1, KEY_F2, KEY_F3, KEY_F4, KEY_F5, KEY_F6, KEY_F7,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#164: FILE: input/keyboard/stowaway.c:74:
+static irqreturn_t skbd_interrupt(struct serio *serio,
+		unsigned char data, unsigned int flags, struct pt_regs *regs)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#168: FILE: input/keyboard/stowaway.c:78:
+	if (data < 0x80) {
[...]
+	    if (skbd->keycode[data & SKBD_KEY]) {

WARNING:TABSTOP: Statements should start on a tabstop
#170: FILE: input/keyboard/stowaway.c:80:
+	    if (skbd->keycode[data & SKBD_KEY]) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 20)
#170: FILE: input/keyboard/stowaway.c:80:
+	    if (skbd->keycode[data & SKBD_KEY]) {
+		    input_regs(skbd->dev, regs);

WARNING:TABSTOP: Statements should start on a tabstop
#174: FILE: input/keyboard/stowaway.c:84:
+	    }

WARNING:TABSTOP: Statements should start on a tabstop
#175: FILE: input/keyboard/stowaway.c:85:
+	    else if (data == 0xe7) /* end of init sequence */

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 20)
#175: FILE: input/keyboard/stowaway.c:85:
+	    else if (data == 0xe7) /* end of init sequence */
+		    printk(KERN_INFO "input: %s on %s\n", skbd->dev->name, serio->phys);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#175: FILE: input/keyboard/stowaway.c:85:
+	    }
+	    else if (data == 0xe7) /* end of init sequence */

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#176: FILE: input/keyboard/stowaway.c:86:
+		    printk(KERN_INFO "input: %s on %s\n", skbd->dev->name, serio->phys);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 20)
#177: FILE: input/keyboard/stowaway.c:87:
+	} else {
+		    input_report_key(skbd->dev, skbd->keycode[data & SKBD_KEY], 0);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#182: FILE: input/keyboard/stowaway.c:92:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*skbd)...) over kzalloc(sizeof(struct skbd)...)
#191: FILE: input/keyboard/stowaway.c:101:
+	skbd = kzalloc(sizeof(struct skbd), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000051003.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 19 warnings, 3 checks, 212 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000051003.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
