WARNING:TYPO_SPELLING: 'varoius' may be misspelled - perhaps 'various'?
#33: 
the varoius vendor trees for a long time.
    ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#52: FILE: fs/inode.c:852:
+	inode->i_state &= ~(I_LOCK|I_NEW);
 	                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#64: FILE: fs/inode.c:878:
+			inode->i_state = I_LOCK|I_NEW;
 			                       ^

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#100: FILE: fs/inode.c:964:
+struct inode *iget4_locked(struct super_block *sb, unsigned long ino, find_inode_t find_actor, void *opaque)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#118: FILE: include/linux/fs.h:1399:
+extern void unlock_new_inode(struct inode *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#118: FILE: include/linux/fs.h:1399:
+extern void unlock_new_inode(struct inode *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#123: FILE: include/linux/fs.h:1403:
+extern struct inode * iget4_locked(struct super_block *, unsigned long,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#123: FILE: include/linux/fs.h:1403:
+extern struct inode * iget4_locked(struct super_block *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#123: FILE: include/linux/fs.h:1403:
+extern struct inode * iget4_locked(struct super_block *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#123: FILE: include/linux/fs.h:1403:
+extern struct inode * iget4_locked(struct super_block *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'find_inode_t' should also have an identifier name
#123: FILE: include/linux/fs.h:1403:
+extern struct inode * iget4_locked(struct super_block *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#123: FILE: include/linux/fs.h:1403:
+extern struct inode * iget4_locked(struct super_block *, unsigned long,

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#172: FILE: kernel/ksyms.c:147:
+EXPORT_SYMBOL(unlock_new_inode);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000342739.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 8 warnings, 4 checks, 128 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000342739.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
