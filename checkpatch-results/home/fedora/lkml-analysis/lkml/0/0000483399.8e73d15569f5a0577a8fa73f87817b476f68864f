WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
APIC flat mode and his clustered logical mode.  The problem with the latter 

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#124: FILE: arch/i386/kernel/io_apic.c:593:
+	static unsigned	next_cpu = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#124: FILE: arch/i386/kernel/io_apic.c:593:
+	static unsigned	next_cpu = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#127: FILE: arch/i386/kernel/io_apic.c:596:
+		if (next_cpu >= NR_CPUS)

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#133: FILE: arch/i386/kernel/io_apic.c:602:
+		return (val);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#139: FILE: arch/i386/kernel/io_apic.c:608:
+	return (0);

CHECK:CAMELCASE: Avoid CamelCase: <dest_LowestPrio>
#226: FILE: arch/i386/kernel/mpparse.c:71:
+unsigned char int_delivery_mode = dest_LowestPrio;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#227: FILE: arch/i386/kernel/mpparse.c:72:
+unsigned char target_cpus = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#228: FILE: arch/i386/kernel/mpparse.c:73:
+unsigned char clustered_apic_mode = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#229: FILE: arch/i386/kernel/mpparse.c:74:
+unsigned char clustered_apic_logical = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#230: FILE: arch/i386/kernel/mpparse.c:75:
+unsigned char clustered_apic_physical = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#231: FILE: arch/i386/kernel/mpparse.c:76:
+unsigned char esr_disable = 0;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#255: FILE: arch/i386/kernel/mpparse.c:240:
+	logical_cpu_present_map |= 1 << (num_processors-1);
 	                                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#306: FILE: arch/i386/kernel/mpparse.c:432:
+	printk("OEM ID: %s ", oem);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#307: FILE: arch/i386/kernel/mpparse.c:433:
+	printk("Product ID: %s ",prod);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#307: FILE: arch/i386/kernel/mpparse.c:433:
+	printk("Product ID: %s ",prod);
 	                        ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#312: FILE: arch/i386/kernel/mpparse.c:438:
+	    (!strncmp(prod, "NF 6000R", 8) || !strncmp(prod, "VIGIL SMP", 9)) )

CHECK:SPACING: No space is necessary after a cast
#361: FILE: arch/i386/kernel/mpparse.c:540:
+		clustered_apic_logical = (unsigned char) numaq;

CHECK:SPACING: No space is necessary after a cast
#362: FILE: arch/i386/kernel/mpparse.c:541:
+		clustered_apic_physical = (unsigned char) xapic;

CHECK:CAMELCASE: Avoid CamelCase: <dest_Fixed>
#367: FILE: arch/i386/kernel/mpparse.c:546:
+		int_delivery_mode = (xapic ? dest_Fixed : dest_LowestPrio);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#376: FILE: arch/i386/kernel/mpparse.c:555:
+	printk("Enabling APIC mode:  %s.  Using %d I/O APICs\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#377: FILE: arch/i386/kernel/mpparse.c:556:
+	printk("Enabling APIC mode:  %s.  Using %d I/O APICs\n",
+		(clustered_apic_logical ? "Clustered Logical" :

ERROR:SPACING: spaces required around that '?' (ctx:WxV)
#378: FILE: arch/i386/kernel/mpparse.c:557:
+				(clustered_apic_physical ?"Physical" : "Flat")),
 				                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#392: FILE: arch/i386/kernel/process.c:189:
+ ^I^I^I^Ihave set up boot_cpu_physical_apicid or smp_num_cpu */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#392: FILE: arch/i386/kernel/process.c:189:
+ ^I^I^I^Ihave set up boot_cpu_physical_apicid or smp_num_cpu */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#392: FILE: arch/i386/kernel/process.c:189:
+ 				have set up boot_cpu_physical_apicid or smp_num_cpu */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#520: FILE: arch/i386/kernel/smpboot.c:1127:
+			printk("CPU #%d/0x%02x not responding - cannot use it.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#521: FILE: arch/i386/kernel/smpboot.c:1128:
+			printk("CPU #%d/0x%02x not responding - cannot use it.\n",
+								bit, apicid);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#548: FILE: include/asm-i386/apicdef.h:15:
+#define			APIC_ID_MASK		(0xFF<<24)
        			            		     ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#549: FILE: include/asm-i386/apicdef.h:16:
+#define			GET_APIC_ID(x)		(((x)>>24)&0xFF)
        			              		     ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#549: FILE: include/asm-i386/apicdef.h:16:
+#define			GET_APIC_ID(x)		(((x)>>24)&0xFF)
        			              		          ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#650: FILE: include/asm-i386/smp.h:27:
+  extern unsigned char clustered_apic_mode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#651: FILE: include/asm-i386/smp.h:28:
+  extern unsigned char clustered_apic_physical;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#652: FILE: include/asm-i386/smp.h:29:
+  extern unsigned char clustered_apic_logical;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#653: FILE: include/asm-i386/smp.h:30:
+  extern unsigned char target_cpus;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#654: FILE: include/asm-i386/smp.h:31:
+  extern unsigned char esr_disable;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#655: FILE: include/asm-i386/smp.h:32:
+  extern unsigned char int_delivery_mode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#656: FILE: include/asm-i386/smp.h:33:
+  extern unsigned int int_dest_addr_mode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#657: FILE: include/asm-i386/smp.h:34:
+  extern unsigned int apic_broadcast_id;$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#661: FILE: include/asm-i386/smp.h:38:
+							cpu_online_map) )

WARNING:INLINE: plain inline is preferred over __inline
#702: FILE: include/asm-i386/smp.h:120:
+extern __inline int logical_smp_processor_id(void)

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#738: FILE: include/asm-i386/smpboot.h:8:
+#define TRAMPOLINE_LOW phys_to_virt(clustered_apic_logical?0x8:0x467)
                                                           ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#738: FILE: include/asm-i386/smpboot.h:8:
+#define TRAMPOLINE_LOW phys_to_virt(clustered_apic_logical?0x8:0x467)
                                                               ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#739: FILE: include/asm-i386/smpboot.h:9:
+#define TRAMPOLINE_HIGH phys_to_virt(clustered_apic_logical?0xa:0x469)
                                                            ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#739: FILE: include/asm-i386/smpboot.h:9:
+#define TRAMPOLINE_HIGH phys_to_virt(clustered_apic_logical?0xa:0x469)
                                                                ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#741: FILE: include/asm-i386/smpboot.h:11:
+#define boot_cpu_apicid (clustered_apic_logical?boot_cpu_logical_apicid:boot_cpu_physical_apicid)
                                                ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#741: FILE: include/asm-i386/smpboot.h:11:
+#define boot_cpu_apicid (clustered_apic_logical?boot_cpu_logical_apicid:boot_cpu_physical_apicid)
                                                                        ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#754: FILE: include/asm-i386/smpboot.h:24:
+#define physical_to_logical_apicid(phys_apic) ( (1UL << (phys_apic & 0x3)) | (phys_apic & 0xF0U) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#754: FILE: include/asm-i386/smpboot.h:24:
+#define physical_to_logical_apicid(phys_apic) ( (1UL << (phys_apic & 0x3)) | (phys_apic & 0xF0U) )

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'phys_apic' - possible side-effects?
#754: FILE: include/asm-i386/smpboot.h:24:
+#define physical_to_logical_apicid(phys_apic) ( (1UL << (phys_apic & 0x3)) | (phys_apic & 0xF0U) )

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'phys_apic' may be better as '(phys_apic)' to avoid precedence issues
#754: FILE: include/asm-i386/smpboot.h:24:
+#define physical_to_logical_apicid(phys_apic) ( (1UL << (phys_apic & 0x3)) | (phys_apic & 0xF0U) )

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#766: FILE: include/asm-i386/smpboot.h:36:
+ #define apic_ldr_value(value)	(((value) & ~APIC_LDR_MASK) | SET_APIC_LOGICAL_ID(1UL << smp_processor_id()))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#774: FILE: include/asm-i386/smpboot.h:43:
+ *^Iuse $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'mps_cpu' - possible side-effects?
#782: FILE: include/asm-i386/smpboot.h:46:
+#define cpu_present_to_apicid(mps_cpu)	(clustered_apic_logical ? \
+ 	( ((mps_cpu / 4) * 16) + (1 << (mps_cpu % 4)) ) : \
+	 (clustered_apic_physical ? raw_phys_apicid[mps_cpu] : (mps_cpu) ) )

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'mps_cpu' may be better as '(mps_cpu)' to avoid precedence issues
#782: FILE: include/asm-i386/smpboot.h:46:
+#define cpu_present_to_apicid(mps_cpu)	(clustered_apic_logical ? \
+ 	( ((mps_cpu / 4) * 16) + (1 << (mps_cpu % 4)) ) : \
+	 (clustered_apic_physical ? raw_phys_apicid[mps_cpu] : (mps_cpu) ) )

ERROR:CODE_INDENT: code indent should use tabs where possible
#783: FILE: include/asm-i386/smpboot.h:47:
+ ^I( ((mps_cpu / 4) * 16) + (1 << (mps_cpu % 4)) ) : \$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#783: FILE: include/asm-i386/smpboot.h:47:
+ ^I( ((mps_cpu / 4) * 16) + (1 << (mps_cpu % 4)) ) : \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#783: FILE: include/asm-i386/smpboot.h:47:
+ ^I( ((mps_cpu / 4) * 16) + (1 << (mps_cpu % 4)) ) : \$

ERROR:SPACING: space prohibited after that open parenthesis '('
#783: FILE: include/asm-i386/smpboot.h:47:
+ 	( ((mps_cpu / 4) * 16) + (1 << (mps_cpu % 4)) ) : \

ERROR:SPACING: space prohibited before that close parenthesis ')'
#783: FILE: include/asm-i386/smpboot.h:47:
+ 	( ((mps_cpu / 4) * 16) + (1 << (mps_cpu % 4)) ) : \

ERROR:SPACING: space prohibited before that close parenthesis ')'
#784: FILE: include/asm-i386/smpboot.h:48:
+	 (clustered_apic_physical ? raw_phys_apicid[mps_cpu] : (mps_cpu) ) )

WARNING:LONG_LINE: line length of 138 exceeds 100 columns
#786: FILE: include/asm-i386/smpboot.h:50:
+#define apicid_to_phys_cpu_present(apicid)	(clustered_apic_mode ? (1UL << (((apicid >> 4) << 2) + (apicid & 0x3))) : (1UL << apicid))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'apicid' - possible side-effects?
#786: FILE: include/asm-i386/smpboot.h:50:
+#define apicid_to_phys_cpu_present(apicid)	(clustered_apic_mode ? (1UL << (((apicid >> 4) << 2) + (apicid & 0x3))) : (1UL << apicid))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'apicid' may be better as '(apicid)' to avoid precedence issues
#786: FILE: include/asm-i386/smpboot.h:50:
+#define apicid_to_phys_cpu_present(apicid)	(clustered_apic_mode ? (1UL << (((apicid >> 4) << 2) + (apicid & 0x3))) : (1UL << apicid))

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#810: FILE: include/asm-i386/smpboot.h:69:
+#define boot_apicid_to_cpu(apicid) (clustered_apic_logical ? logical_apicid_2_cpu[apicid] : physical_apicid_2_cpu[apicid])

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'apicid' - possible side-effects?
#810: FILE: include/asm-i386/smpboot.h:69:
+#define boot_apicid_to_cpu(apicid) (clustered_apic_logical ? logical_apicid_2_cpu[apicid] : physical_apicid_2_cpu[apicid])

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#811: FILE: include/asm-i386/smpboot.h:70:
+#define cpu_to_boot_apicid(cpu) (clustered_apic_logical ? cpu_2_logical_apicid[cpu] : cpu_2_physical_apicid[cpu])

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cpu' - possible side-effects?
#811: FILE: include/asm-i386/smpboot.h:70:
+#define cpu_to_boot_apicid(cpu) (clustered_apic_logical ? cpu_2_logical_apicid[cpu] : cpu_2_physical_apicid[cpu])

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000483399.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 20 errors, 24 warnings, 24 checks, 680 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000483399.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
