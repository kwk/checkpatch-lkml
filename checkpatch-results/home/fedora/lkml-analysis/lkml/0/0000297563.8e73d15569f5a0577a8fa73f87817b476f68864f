WARNING:TYPO_SPELLING: 'hould' may be misspelled - perhaps 'hold'?
#68: FILE: fs/super.c:300:
+ * block device, we hould a read lock on the s->s_umount sem to make sure
                     ^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#71: FILE: fs/super.c:303:
+void sync_super_lockfs(struct block_device *bdev) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#74: FILE: fs/super.c:306:
+	struct super_block *sb;
+	down(&bdev->bd_mount_sem);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#148: FILE: fs/buffer.c:266:
+	int res;
+	res = fsync_bdev(bdev);

WARNING:LINE_SPACING: Missing a blank line after declarations
#186: FILE: drivers/md/dm.c:852:
+	struct block_device *bdev = bdget_disk(disk, 0);
+	if (bdev) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#195: FILE: drivers/md/dm.c:861:
+	struct block_device *bdev = bdget_disk(disk, 0);
+	if (bdev) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#216: FILE: drivers/md/dm.c:885:
+	if (!test_and_set_bit(DMF_FS_LOCKED, &md->flags)) {
+		__lock_disk(md->disk);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#259: FILE: include/linux/fs.h:1222:
+extern void sync_super_lockfs(struct block_device *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct block_device *' should also have an identifier name
#259: FILE: include/linux/fs.h:1222:
+extern void sync_super_lockfs(struct block_device *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct block_device *' should also have an identifier name
#271: FILE: include/linux/buffer_head.h:167:
+int fsync_bdev_lockfs(struct block_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct block_device *' should also have an identifier name
#272: FILE: include/linux/buffer_head.h:168:
+void unlockfs(struct block_device *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000297563.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 9 warnings, 1 checks, 197 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000297563.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
