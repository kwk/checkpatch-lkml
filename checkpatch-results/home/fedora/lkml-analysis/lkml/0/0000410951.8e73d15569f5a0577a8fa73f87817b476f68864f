WARNING:TYPO_SPELLING: 'BA' may be misspelled - perhaps 'BY'?
#18: 
=?ISO-8859-1?Q?=CA=D5=BC=FE=C8=CB=A3=BA: ?= linux-kernel@vger.kernel.org
                                     ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#63: FILE: ext3/ialloc.c:304:
+   struct ext3_super_block * es = EXT3_SB(sb)->s_es;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#63: FILE: ext3/ialloc.c:304:
+   struct ext3_super_block * es = EXT3_SB(sb)->s_es;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#64: FILE: ext3/ialloc.c:305:
+   int ngroups = EXT3_SB(sb)->s_groups_count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#65: FILE: ext3/ialloc.c:306:
+   int avefreei = le32_to_cpu(es->s_free_inodes_count) / ngroups;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: ext3/ialloc.c:307:
+   struct ext3_group_desc *desc, *best_desc = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: ext3/ialloc.c:308:
+   struct buffer_head *bh, *best_bh = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: ext3/ialloc.c:309:
+   int group, best_group = -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: ext3/ialloc.c:311:
+   for (group = 0; group < ngroups; group++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 7)
#70: FILE: ext3/ialloc.c:311:
+   for (group = 0; group < ngroups; group++) {
+       desc = ext3_get_group_desc (sb, group, &bh);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: ext3/ialloc.c:312:
+       desc = ext3_get_group_desc (sb, group, &bh);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#71: FILE: ext3/ialloc.c:312:
+       desc = ext3_get_group_desc (sb, group, &bh);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: ext3/ialloc.c:313:
+       if (!desc || !desc->bg_free_inodes_count)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#72: FILE: ext3/ialloc.c:313:
+       if (!desc || !desc->bg_free_inodes_count)
+           continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#73: FILE: ext3/ialloc.c:314:
+           continue;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#73: FILE: ext3/ialloc.c:314:
+           continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: ext3/ialloc.c:315:
+       if (le16_to_cpu(desc->bg_free_inodes_count) < avefreei)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#74: FILE: ext3/ialloc.c:315:
+       if (le16_to_cpu(desc->bg_free_inodes_count) < avefreei)
+           continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#75: FILE: ext3/ialloc.c:316:
+           continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: ext3/ialloc.c:316:
+           continue;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#76: FILE: ext3/ialloc.c:317:
+       if (!best_desc || $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: ext3/ialloc.c:317:
+       if (!best_desc || $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#76: FILE: ext3/ialloc.c:317:
+       if (!best_desc || 
[...]
+           best_group = group;

ERROR:CODE_INDENT: code indent should use tabs where possible
#77: FILE: ext3/ialloc.c:318:
+           (le16_to_cpu(desc->bg_free_blocks_count) >$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: ext3/ialloc.c:318:
+           (le16_to_cpu(desc->bg_free_blocks_count) >$

ERROR:CODE_INDENT: code indent should use tabs where possible
#78: FILE: ext3/ialloc.c:319:
+            le16_to_cpu(best_desc->bg_free_blocks_count))) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: ext3/ialloc.c:319:
+            le16_to_cpu(best_desc->bg_free_blocks_count))) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#79: FILE: ext3/ialloc.c:320:
+           best_group = group;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: ext3/ialloc.c:320:
+           best_group = group;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#80: FILE: ext3/ialloc.c:321:
+           best_desc = desc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: ext3/ialloc.c:321:
+           best_desc = desc;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#81: FILE: ext3/ialloc.c:322:
+           best_bh = bh;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: ext3/ialloc.c:322:
+           best_bh = bh;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: ext3/ialloc.c:323:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: ext3/ialloc.c:324:
+   }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: ext3/ialloc.c:325:
+   if (!best_desc)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 7)
#84: FILE: ext3/ialloc.c:325:
+   if (!best_desc)
+       return -1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: ext3/ialloc.c:326:
+       return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: ext3/ialloc.c:327:
+   return best_group;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#89: FILE: ext3/ialloc.c:330:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#91: FILE: ext3/ialloc.c:332:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#93: FILE: ext3/ialloc.c:334:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#97: FILE: ext3/ialloc.c:338:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#99: FILE: ext3/ialloc.c:340:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#100: FILE: ext3/ialloc.c:341:
+ * It's OK to put directory into a group unless $

WARNING:TYPO_SPELLING: 'prefered' may be misspelled - perhaps 'preferred'?
#105: FILE: ext3/ialloc.c:346:
+ * Parent's group is prefered, if it doesn't satisfy these
                      ^^^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: ext3/ialloc.c:360:
+   int parent_group = EXT3_I(parent)->i_block_group;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: ext3/ialloc.c:361:
+   struct ext3_sb_info *sbi = EXT3_SB(sb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: ext3/ialloc.c:362:
+   struct ext3_super_block *es = sbi->s_es;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: ext3/ialloc.c:363:
+   int ngroups = sbi->s_groups_count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: ext3/ialloc.c:364:
+   int inodes_per_group = EXT3_INODES_PER_GROUP(sb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: ext3/ialloc.c:365:
+   int avefreei = le32_to_cpu(es->s_free_inodes_count) / ngroups;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: ext3/ialloc.c:366:
+   int avefreeb = le32_to_cpu(es->s_free_blocks_count) / ngroups;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: ext3/ialloc.c:367:
+   int blocks_per_dir;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: ext3/ialloc.c:368:
+   int ndirs = sbi->s_dir_count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: ext3/ialloc.c:369:
+   int max_debt, max_dirs, min_blocks, min_inodes;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: ext3/ialloc.c:370:
+   int group = -1, i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: ext3/ialloc.c:371:
+   struct ext3_group_desc *desc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: ext3/ialloc.c:372:
+   struct buffer_head *bh;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: ext3/ialloc.c:374:
+   if ((parent == sb->s_root->d_inode) ||$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 7)
#133: FILE: ext3/ialloc.c:374:
+   if ((parent == sb->s_root->d_inode) ||
[...]
+       struct ext3_group_desc *best_desc = NULL;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'parent == sb->s_root->d_inode'
#133: FILE: ext3/ialloc.c:374:
+   if ((parent == sb->s_root->d_inode) ||
+       (parent->i_flags & EXT3_TOPDIR_FL)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: ext3/ialloc.c:375:
+       (parent->i_flags & EXT3_TOPDIR_FL)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: ext3/ialloc.c:376:
+       struct ext3_group_desc *best_desc = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: ext3/ialloc.c:377:
+       struct buffer_head *best_bh = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: ext3/ialloc.c:378:
+       int best_ndir = inodes_per_group;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: ext3/ialloc.c:379:
+       int best_group = -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: ext3/ialloc.c:381:
+       get_random_bytes(&group, sizeof(group));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: ext3/ialloc.c:382:
+       parent_group = (unsigned)group % ngroups;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#141: FILE: ext3/ialloc.c:382:
+       parent_group = (unsigned)group % ngroups;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: ext3/ialloc.c:383:
+       for (i = 0; i < ngroups; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#142: FILE: ext3/ialloc.c:383:
+       for (i = 0; i < ngroups; i++) {
+           group = (parent_group + i) % ngroups;

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: ext3/ialloc.c:384:
+           group = (parent_group + i) % ngroups;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: ext3/ialloc.c:384:
+           group = (parent_group + i) % ngroups;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#144: FILE: ext3/ialloc.c:385:
+           desc = ext3_get_group_desc (sb, group, &bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: ext3/ialloc.c:385:
+           desc = ext3_get_group_desc (sb, group, &bh);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#144: FILE: ext3/ialloc.c:385:
+           desc = ext3_get_group_desc (sb, group, &bh);

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: ext3/ialloc.c:386:
+           if (!desc || !desc->bg_free_inodes_count)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: ext3/ialloc.c:386:
+           if (!desc || !desc->bg_free_inodes_count)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 15)
#145: FILE: ext3/ialloc.c:386:
+           if (!desc || !desc->bg_free_inodes_count)
+               continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: ext3/ialloc.c:387:
+               continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: ext3/ialloc.c:387:
+               continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: ext3/ialloc.c:388:
+           if (le16_to_cpu(desc->bg_used_dirs_count) >= best_ndir)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: ext3/ialloc.c:388:
+           if (le16_to_cpu(desc->bg_used_dirs_count) >= best_ndir)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 15)
#147: FILE: ext3/ialloc.c:388:
+           if (le16_to_cpu(desc->bg_used_dirs_count) >= best_ndir)
+               continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#148: FILE: ext3/ialloc.c:389:
+               continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: ext3/ialloc.c:389:
+               continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: ext3/ialloc.c:390:
+           if (le16_to_cpu(desc->bg_free_inodes_count) < avefreei)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: ext3/ialloc.c:390:
+           if (le16_to_cpu(desc->bg_free_inodes_count) < avefreei)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 15)
#149: FILE: ext3/ialloc.c:390:
+           if (le16_to_cpu(desc->bg_free_inodes_count) < avefreei)
+               continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: ext3/ialloc.c:391:
+               continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: ext3/ialloc.c:391:
+               continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: ext3/ialloc.c:392:
+           if (le16_to_cpu(desc->bg_free_blocks_count) < avefreeb)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: ext3/ialloc.c:392:
+           if (le16_to_cpu(desc->bg_free_blocks_count) < avefreeb)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 15)
#151: FILE: ext3/ialloc.c:392:
+           if (le16_to_cpu(desc->bg_free_blocks_count) < avefreeb)
+               continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: ext3/ialloc.c:393:
+               continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: ext3/ialloc.c:393:
+               continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: ext3/ialloc.c:394:
+           best_group = group;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: ext3/ialloc.c:394:
+           best_group = group;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: ext3/ialloc.c:395:
+           best_ndir = le16_to_cpu(desc->bg_used_dirs_count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: ext3/ialloc.c:395:
+           best_ndir = le16_to_cpu(desc->bg_used_dirs_count);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: ext3/ialloc.c:396:
+           best_desc = desc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: ext3/ialloc.c:396:
+           best_desc = desc;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: ext3/ialloc.c:397:
+           best_bh = bh;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: ext3/ialloc.c:397:
+           best_bh = bh;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: ext3/ialloc.c:398:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: ext3/ialloc.c:399:
+       if (best_group >= 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#158: FILE: ext3/ialloc.c:399:
+       if (best_group >= 0) {
+           desc = best_desc;

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: ext3/ialloc.c:400:
+           desc = best_desc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: ext3/ialloc.c:400:
+           desc = best_desc;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: ext3/ialloc.c:401:
+           bh = best_bh;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: ext3/ialloc.c:401:
+           bh = best_bh;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#161: FILE: ext3/ialloc.c:402:
+           group = best_group;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: ext3/ialloc.c:402:
+           group = best_group;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: ext3/ialloc.c:403:
+           goto found;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: ext3/ialloc.c:403:
+           goto found;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: ext3/ialloc.c:404:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: ext3/ialloc.c:405:
+       goto fallback;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: ext3/ialloc.c:406:
+   }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: ext3/ialloc.c:408:
+   blocks_per_dir = (le32_to_cpu(es->s_blocks_count) -$

ERROR:CODE_INDENT: code indent should use tabs where possible
#168: FILE: ext3/ialloc.c:409:
+             le32_to_cpu(es->s_free_blocks_count)) / ndirs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: ext3/ialloc.c:409:
+             le32_to_cpu(es->s_free_blocks_count)) / ndirs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: ext3/ialloc.c:411:
+   max_dirs = ndirs / ngroups + inodes_per_group / 16;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: ext3/ialloc.c:412:
+   min_inodes = avefreei - inodes_per_group / 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: ext3/ialloc.c:413:
+   min_blocks = avefreeb - EXT3_BLOCKS_PER_GROUP(sb) / 4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: ext3/ialloc.c:415:
+   max_debt = EXT3_BLOCKS_PER_GROUP(sb) / max(blocks_per_dir, BLOCK_COST);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: ext3/ialloc.c:416:
+   if (max_debt * INODE_COST > inodes_per_group)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 7)
#175: FILE: ext3/ialloc.c:416:
+   if (max_debt * INODE_COST > inodes_per_group)
+       max_debt = inodes_per_group / INODE_COST;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: ext3/ialloc.c:417:
+       max_debt = inodes_per_group / INODE_COST;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: ext3/ialloc.c:418:
+   if (max_debt > 255)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 7)
#177: FILE: ext3/ialloc.c:418:
+   if (max_debt > 255)
+       max_debt = 255;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: ext3/ialloc.c:419:
+       max_debt = 255;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: ext3/ialloc.c:420:
+   if (max_debt == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 7)
#179: FILE: ext3/ialloc.c:420:
+   if (max_debt == 0)
+       max_debt = 1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: ext3/ialloc.c:421:
+       max_debt = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: ext3/ialloc.c:423:
+   for (i = 0; i < ngroups; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 7)
#182: FILE: ext3/ialloc.c:423:
+   for (i = 0; i < ngroups; i++) {
+       group = (parent_group + i) % ngroups;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: ext3/ialloc.c:424:
+       group = (parent_group + i) % ngroups;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: ext3/ialloc.c:425:
+       desc = ext3_get_group_desc (sb, group, &bh);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#184: FILE: ext3/ialloc.c:425:
+       desc = ext3_get_group_desc (sb, group, &bh);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: ext3/ialloc.c:426:
+       if (!desc || !desc->bg_free_inodes_count)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#185: FILE: ext3/ialloc.c:426:
+       if (!desc || !desc->bg_free_inodes_count)
+           continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: ext3/ialloc.c:427:
+           continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: ext3/ialloc.c:427:
+           continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: ext3/ialloc.c:428:
+       if (sbi->s_debts[group] >= max_debt)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#187: FILE: ext3/ialloc.c:428:
+       if (sbi->s_debts[group] >= max_debt)
+           continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#188: FILE: ext3/ialloc.c:429:
+           continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: ext3/ialloc.c:429:
+           continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: ext3/ialloc.c:430:
+       if (le16_to_cpu(desc->bg_used_dirs_count) >= max_dirs)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#189: FILE: ext3/ialloc.c:430:
+       if (le16_to_cpu(desc->bg_used_dirs_count) >= max_dirs)
+           continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#190: FILE: ext3/ialloc.c:431:
+           continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: ext3/ialloc.c:431:
+           continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: ext3/ialloc.c:432:
+       if (le16_to_cpu(desc->bg_free_inodes_count) < min_inodes)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#191: FILE: ext3/ialloc.c:432:
+       if (le16_to_cpu(desc->bg_free_inodes_count) < min_inodes)
+           continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#192: FILE: ext3/ialloc.c:433:
+           continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: ext3/ialloc.c:433:
+           continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: ext3/ialloc.c:434:
+       if (le16_to_cpu(desc->bg_free_blocks_count) < min_blocks)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#193: FILE: ext3/ialloc.c:434:
+       if (le16_to_cpu(desc->bg_free_blocks_count) < min_blocks)
+           continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#194: FILE: ext3/ialloc.c:435:
+           continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: ext3/ialloc.c:435:
+           continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: ext3/ialloc.c:436:
+       goto found;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: ext3/ialloc.c:437:
+   }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: ext3/ialloc.c:440:
+   for (i = 0; i < ngroups; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 7)
#199: FILE: ext3/ialloc.c:440:
+   for (i = 0; i < ngroups; i++) {
+       group = (parent_group + i) % ngroups;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: ext3/ialloc.c:441:
+       group = (parent_group + i) % ngroups;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: ext3/ialloc.c:442:
+       desc = ext3_get_group_desc (sb, group, &bh);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#201: FILE: ext3/ialloc.c:442:
+       desc = ext3_get_group_desc (sb, group, &bh);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: ext3/ialloc.c:443:
+       if (!desc || !desc->bg_free_inodes_count)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#202: FILE: ext3/ialloc.c:443:
+       if (!desc || !desc->bg_free_inodes_count)
+           continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#203: FILE: ext3/ialloc.c:444:
+           continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: ext3/ialloc.c:444:
+           continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: ext3/ialloc.c:445:
+       if (le16_to_cpu(desc->bg_free_inodes_count) >= avefreei)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#204: FILE: ext3/ialloc.c:445:
+       if (le16_to_cpu(desc->bg_free_inodes_count) >= avefreei)
+           goto found;

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: ext3/ialloc.c:446:
+           goto found;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: ext3/ialloc.c:446:
+           goto found;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: ext3/ialloc.c:447:
+   }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: ext3/ialloc.c:449:
+   return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: ext3/ialloc.c:451:
+   return group;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: ext3/ialloc.c:456:
+   int parent_group = EXT3_I(parent)->i_block_group;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: ext3/ialloc.c:457:
+   int ngroups = EXT3_SB(sb)->s_groups_count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: ext3/ialloc.c:458:
+   struct ext3_group_desc *desc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: ext3/ialloc.c:459:
+   struct buffer_head *bh;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: ext3/ialloc.c:460:
+   int group, i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: ext3/ialloc.c:465:
+   group = parent_group;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: ext3/ialloc.c:466:
+   desc = ext3_get_group_desc (sb, group, &bh);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#225: FILE: ext3/ialloc.c:466:
+   desc = ext3_get_group_desc (sb, group, &bh);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: ext3/ialloc.c:467:
+   if (desc && le16_to_cpu(desc->bg_free_inodes_count))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 7)
#226: FILE: ext3/ialloc.c:467:
+   if (desc && le16_to_cpu(desc->bg_free_inodes_count))
+       goto found;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: ext3/ialloc.c:468:
+       goto found;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: ext3/ialloc.c:474:
+   for (i = 1; i < ngroups; i <<= 1) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 7)
#233: FILE: ext3/ialloc.c:474:
+   for (i = 1; i < ngroups; i <<= 1) {
+       group += i;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: ext3/ialloc.c:475:
+       group += i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: ext3/ialloc.c:476:
+       if (group >= ngroups)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#235: FILE: ext3/ialloc.c:476:
+       if (group >= ngroups)
+           group -= ngroups;

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: ext3/ialloc.c:477:
+           group -= ngroups;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: ext3/ialloc.c:477:
+           group -= ngroups;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: ext3/ialloc.c:478:
+       desc = ext3_get_group_desc (sb, group, &bh);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#237: FILE: ext3/ialloc.c:478:
+       desc = ext3_get_group_desc (sb, group, &bh);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: ext3/ialloc.c:479:
+       if (desc && le16_to_cpu(desc->bg_free_inodes_count))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#238: FILE: ext3/ialloc.c:479:
+       if (desc && le16_to_cpu(desc->bg_free_inodes_count))
+           goto found;

ERROR:CODE_INDENT: code indent should use tabs where possible
#239: FILE: ext3/ialloc.c:480:
+           goto found;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: ext3/ialloc.c:480:
+           goto found;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: ext3/ialloc.c:481:
+   }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: ext3/ialloc.c:486:
+   group = parent_group + 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: ext3/ialloc.c:487:
+   for (i = 2; i < ngroups; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 7)
#246: FILE: ext3/ialloc.c:487:
+   for (i = 2; i < ngroups; i++) {
+       if (++group >= ngroups)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: ext3/ialloc.c:488:
+       if (++group >= ngroups)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#247: FILE: ext3/ialloc.c:488:
+       if (++group >= ngroups)
+           group = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#248: FILE: ext3/ialloc.c:489:
+           group = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: ext3/ialloc.c:489:
+           group = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: ext3/ialloc.c:490:
+       desc = ext3_get_group_desc (sb, group, &bh);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#249: FILE: ext3/ialloc.c:490:
+       desc = ext3_get_group_desc (sb, group, &bh);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: ext3/ialloc.c:491:
+       if (desc && le16_to_cpu(desc->bg_free_inodes_count))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#250: FILE: ext3/ialloc.c:491:
+       if (desc && le16_to_cpu(desc->bg_free_inodes_count))
+           goto found;

ERROR:CODE_INDENT: code indent should use tabs where possible
#251: FILE: ext3/ialloc.c:492:
+           goto found;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: ext3/ialloc.c:492:
+           goto found;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: ext3/ialloc.c:493:
+   }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: ext3/ialloc.c:495:
+   return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: ext3/ialloc.c:498:
+   return group;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#272: FILE: ext3/ialloc.c:511:
+struct inode * ext3_new_inode (handle_t *handle, struct inode * dir, int mode)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#272: FILE: ext3/ialloc.c:511:
+struct inode * ext3_new_inode (handle_t *handle, struct inode * dir, int mode)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#272: FILE: ext3/ialloc.c:511:
+struct inode * ext3_new_inode (handle_t *handle, struct inode * dir, int mode)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#282: FILE: ext3/ialloc.c:519:
+	struct inode * inode;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#323: FILE: ext3/ialloc.c:538:
+		if (test_opt (sb, OLDALLOC))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#361: FILE: ext3/ialloc.c:542:
+^I} else $

CHECK:BRACES: Unbalanced braces around else statement
#361: FILE: ext3/ialloc.c:542:
+	} else 

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#371: FILE: ext3/ialloc.c:550:
+	bitmap_nr = load_inode_bitmap (sb, group);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#375: FILE: ext3/ialloc.c:554:
+	gdp = ext3_get_group_desc (sb, group, &bh2);

CHECK:SPACING: No space is necessary after a cast
#379: FILE: ext3/ialloc.c:557:
+	if ((ino = ext3_find_first_zero_bit ((unsigned long *) bh->b_data,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#379: FILE: ext3/ialloc.c:557:
+	if ((ino = ext3_find_first_zero_bit ((unsigned long *) bh->b_data,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#379: FILE: ext3/ialloc.c:557:
+	if ((ino = ext3_find_first_zero_bit ((unsigned long *) bh->b_data,

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#380: FILE: ext3/ialloc.c:558:
+	if ((ino = ext3_find_first_zero_bit ((unsigned long *) bh->b_data,
 				      EXT3_INODES_PER_GROUP(sb))) <

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#387: FILE: ext3/ialloc.c:564:
+		if (ext3_set_bit (ino, bh->b_data)) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#410: FILE: ext3/ialloc.c:593:
+		if (ino < EXT3_FIRST_INO(sb) || ino > le32_to_cpu(es->s_inodes_count)) {
 		ext3_error (sb, "ext3_new_inode",

WARNING:SPLIT_STRING: quoted string split across lines
#414: FILE: ext3/ialloc.c:596:
 			    "reserved inode or inode > inodes count - "
+			    "block_group = %d,inode=%lu", group, ino);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#456: FILE: ext3/ialloc.c:780:
+unsigned long ext3_count_dirs (struct super_block * sb)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#456: FILE: ext3/ialloc.c:780:
+unsigned long ext3_count_dirs (struct super_block * sb)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#458: FILE: ext3/ialloc.c:782:
+   unsigned long count = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#459: FILE: ext3/ialloc.c:783:
+   int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: ext3/ialloc.c:785:
+   for (i = 0; i < EXT3_SB(sb)->s_groups_count; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 7)
#461: FILE: ext3/ialloc.c:785:
+   for (i = 0; i < EXT3_SB(sb)->s_groups_count; i++) {
+       struct ext3_group_desc *gdp = ext3_get_group_desc (sb, i, NULL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#462: FILE: ext3/ialloc.c:786:
+       struct ext3_group_desc *gdp = ext3_get_group_desc (sb, i, NULL);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#462: FILE: ext3/ialloc.c:786:
+       struct ext3_group_desc *gdp = ext3_get_group_desc (sb, i, NULL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#463: FILE: ext3/ialloc.c:787:
+       struct ext3_group_desc *gdp = ext3_get_group_desc (sb, i, NULL);
+       if (!gdp)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: ext3/ialloc.c:787:
+       if (!gdp)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 11)
#463: FILE: ext3/ialloc.c:787:
+       if (!gdp)
+           continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#464: FILE: ext3/ialloc.c:788:
+           continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#464: FILE: ext3/ialloc.c:788:
+           continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#465: FILE: ext3/ialloc.c:789:
+       count += le16_to_cpu(gdp->bg_used_dirs_count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#466: FILE: ext3/ialloc.c:790:
+   }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#467: FILE: ext3/ialloc.c:791:
+   return count;$

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#491: FILE: ext3/super.c:1099:
+	sbi->s_debts = kmalloc(sbi->s_groups_count * sizeof(*sbi->s_debts),
+			GFP_KERNEL);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#493: FILE: ext3/super.c:1101:
+		printk ("EXT3-fs: not enough memory\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#493: FILE: ext3/super.c:1101:
+		printk ("EXT3-fs: not enough memory\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#493: FILE: ext3/super.c:1101:
+	if (!sbi->s_debts) {
+		printk ("EXT3-fs: not enough memory\n");

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#513: FILE: ext3/super.c:1232:
+	if (sbi->s_debts)
+		kfree(sbi->s_debts);

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#551: FILE: linux/ext3_fs.h:611:
+extern unsigned long ext3_count_dirs (struct super_block *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#551: FILE: linux/ext3_fs.h:611:
+extern unsigned long ext3_count_dirs (struct super_block *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#551: FILE: linux/ext3_fs.h:611:
+extern unsigned long ext3_count_dirs (struct super_block *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#560: FILE: linux/ext3_fs.h:625:
+extern struct inode * ext3_new_inode (handle_t *, struct inode *, int);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#560: FILE: linux/ext3_fs.h:625:
+extern struct inode * ext3_new_inode (handle_t *, struct inode *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#560: FILE: linux/ext3_fs.h:625:
+extern struct inode * ext3_new_inode (handle_t *, struct inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'handle_t *' should also have an identifier name
#560: FILE: linux/ext3_fs.h:625:
+extern struct inode * ext3_new_inode (handle_t *, struct inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#560: FILE: linux/ext3_fs.h:625:
+extern struct inode * ext3_new_inode (handle_t *, struct inode *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#560: FILE: linux/ext3_fs.h:625:
+extern struct inode * ext3_new_inode (handle_t *, struct inode *, int);

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000410951.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 53 errors, 209 warnings, 7 checks, 507 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000410951.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
