WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#59: 
diff -urNp --exclude TAGS -X /home/rusty/current-dontdiff --minimal linux-2.5.34/arch/i386/kernel/i386_ksyms.c working-2.5.34-oopser/arch/i386/kernel/i386_ksyms.c

WARNING:LINE_SPACING: Missing a blank line after declarations
#84: FILE: arch/i386/kernel/traps.c:285:
+		int ret;
+		local_irq_disable();

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#89: FILE: arch/i386/kernel/traps.c:290:
+			printk(KERN_EMERG "Oops handler failed: %i\n", ret);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#151: FILE: drivers/char/oopser/decode-table.c:1:
+static const char huff_dec_chars[]

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#152: FILE: drivers/char/oopser/decode-table.c:2:
+static const char huff_dec_chars[]
+	= "_0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#154: FILE: drivers/char/oopser/decode-table.c:4:
+static const struct huff_decode_table huff_decode[] = { $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#155: FILE: drivers/char/oopser/decode-table.c:5:
+^I[0] = { { 1, 2 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#156: FILE: drivers/char/oopser/decode-table.c:6:
+^I[1] = { { 2, 3 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#157: FILE: drivers/char/oopser/decode-table.c:7:
+^I[3] = { { 2, -41 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#158: FILE: drivers/char/oopser/decode-table.c:8:
+^I[5] = { { -37, 1 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#159: FILE: drivers/char/oopser/decode-table.c:9:
+^I[6] = { { -49, 1 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#160: FILE: drivers/char/oopser/decode-table.c:10:
+^I[7] = { { -58, -61 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#161: FILE: drivers/char/oopser/decode-table.c:11:
+^I[4] = { { 4, 0 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#162: FILE: drivers/char/oopser/decode-table.c:12:
+^I[8] = { { -45, -55 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#163: FILE: drivers/char/oopser/decode-table.c:13:
+^I[2] = { { 7, 8 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#164: FILE: drivers/char/oopser/decode-table.c:14:
+^I[9] = { { 2, 3 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#165: FILE: drivers/char/oopser/decode-table.c:15:
+^I[11] = { { 2, -54 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#166: FILE: drivers/char/oopser/decode-table.c:16:
+^I[13] = { { -57, 1 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#167: FILE: drivers/char/oopser/decode-table.c:17:
+^I[14] = { { 1, -47 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#168: FILE: drivers/char/oopser/decode-table.c:18:
+^I[15] = { { -60, 1 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#169: FILE: drivers/char/oopser/decode-table.c:19:
+^I[16] = { { 1, -53 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#170: FILE: drivers/char/oopser/decode-table.c:20:
+^I[17] = { { 1, 2 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#171: FILE: drivers/char/oopser/decode-table.c:21:
+^I[18] = { { -62, -5 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#172: FILE: drivers/char/oopser/decode-table.c:22:
+^I[19] = { { 1, -9 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#173: FILE: drivers/char/oopser/decode-table.c:23:
+^I[20] = { { 1, -2 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#174: FILE: drivers/char/oopser/decode-table.c:24:
+^I[21] = { { 1, -13 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#175: FILE: drivers/char/oopser/decode-table.c:25:
+^I[22] = { { -29, 1 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#176: FILE: drivers/char/oopser/decode-table.c:26:
+^I[23] = { { -21, 1 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#177: FILE: drivers/char/oopser/decode-table.c:27:
+^I[24] = { { 1, -22 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#178: FILE: drivers/char/oopser/decode-table.c:28:
+^I[25] = { { -34, 1 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#179: FILE: drivers/char/oopser/decode-table.c:29:
+^I[26] = { { -24, -31 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#180: FILE: drivers/char/oopser/decode-table.c:30:
+^I[12] = { { -63, -56 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#181: FILE: drivers/char/oopser/decode-table.c:31:
+^I[10] = { { 17, 18 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#182: FILE: drivers/char/oopser/decode-table.c:32:
+^I[27] = { { 2, 3 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#183: FILE: drivers/char/oopser/decode-table.c:33:
+^I[29] = { { -48, -52 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#184: FILE: drivers/char/oopser/decode-table.c:34:
+^I[30] = { { 1, -40 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#185: FILE: drivers/char/oopser/decode-table.c:35:
+^I[31] = { { 1, -43 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#186: FILE: drivers/char/oopser/decode-table.c:36:
+^I[32] = { { -59, 1 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#187: FILE: drivers/char/oopser/decode-table.c:37:
+^I[33] = { { 1, 2 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#188: FILE: drivers/char/oopser/decode-table.c:38:
+^I[34] = { { -4, -3 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#189: FILE: drivers/char/oopser/decode-table.c:39:
+^I[35] = { { 1, 2 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#190: FILE: drivers/char/oopser/decode-table.c:40:
+^I[36] = { { 2, 3 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#191: FILE: drivers/char/oopser/decode-table.c:41:
+^I[38] = { { -19, -6 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#192: FILE: drivers/char/oopser/decode-table.c:42:
+^I[39] = { { 1, -7 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#193: FILE: drivers/char/oopser/decode-table.c:43:
+^I[40] = { { -26, 1 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#194: FILE: drivers/char/oopser/decode-table.c:44:
+^I[41] = { { -10, 1 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#195: FILE: drivers/char/oopser/decode-table.c:45:
+^I[42] = { { 1, -8 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#196: FILE: drivers/char/oopser/decode-table.c:46:
+^I[43] = { { -23, 1 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#197: FILE: drivers/char/oopser/decode-table.c:47:
+^I[44] = { { -28, -32 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#198: FILE: drivers/char/oopser/decode-table.c:48:
+^I[37] = { { -46, 8 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#199: FILE: drivers/char/oopser/decode-table.c:49:
+^I[45] = { { 1, -1 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#200: FILE: drivers/char/oopser/decode-table.c:50:
+^I[46] = { { 1, -11 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#201: FILE: drivers/char/oopser/decode-table.c:51:
+^I[47] = { { 1, -25 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#202: FILE: drivers/char/oopser/decode-table.c:52:
+^I[48] = { { -30, 1 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#203: FILE: drivers/char/oopser/decode-table.c:53:
+^I[49] = { { 1, 2 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#204: FILE: drivers/char/oopser/decode-table.c:54:
+^I[50] = { { 2, -27 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#205: FILE: drivers/char/oopser/decode-table.c:55:
+^I[52] = { { 1, -14 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#206: FILE: drivers/char/oopser/decode-table.c:56:
+^I[53] = { { 1, -12 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#207: FILE: drivers/char/oopser/decode-table.c:57:
+^I[54] = { { 1, -36 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#208: FILE: drivers/char/oopser/decode-table.c:58:
+^I[55] = { { 1, -35 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#209: FILE: drivers/char/oopser/decode-table.c:59:
+^I[56] = { { -16, -33 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#210: FILE: drivers/char/oopser/decode-table.c:60:
+^I[51] = { { 6, 7 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#211: FILE: drivers/char/oopser/decode-table.c:61:
+^I[57] = { { -18, -20 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#212: FILE: drivers/char/oopser/decode-table.c:62:
+^I[58] = { { -15, -17 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#213: FILE: drivers/char/oopser/decode-table.c:63:
+^I[28] = { { 31, 32 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#214: FILE: drivers/char/oopser/decode-table.c:64:
+^I[59] = { { -50, 2 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#215: FILE: drivers/char/oopser/decode-table.c:65:
+^I[61] = { { -42, 1 } }, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#216: FILE: drivers/char/oopser/decode-table.c:66:
+^I[62] = { { -38, -44 } }, $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#222: FILE: drivers/char/oopser/dumper.c:1:
+/* This is the core dumper code.  It must *not* reference any outside

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#223: FILE: drivers/char/oopser/dumper.c:2:
+/* This is the core dumper code.  It must *not* reference any outside
+   code, except the arch/subsystem specific routines, which is done

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#224: FILE: drivers/char/oopser/dumper.c:3:
+   through the oopser_write and oopser_read pointer. */

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#232: FILE: drivers/char/oopser/dumper.c:11:
+#include <asm/uaccess.h>

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#243: FILE: drivers/char/oopser/dumper.c:22:
+struct oopser_symtable *symtable = NULL;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#260: FILE: drivers/char/oopser/dumper.c:39:
+	for (cursor = 0;
[...]
+	     cursor += next) ;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:SPACING: space prohibited before semicolon
#262: FILE: drivers/char/oopser/dumper.c:41:
+	     cursor += next) ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#275: FILE: drivers/char/oopser/dumper.c:54:
+		while (get_char(encnames, &bitnum) != 0);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#307: FILE: drivers/char/oopser/dumper.c:86:
+		if (addr >= i->start_addr && addr <= i->end_addr) {
+			return find_addr(i, addr - i->start_addr, outname);
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#322: FILE: drivers/char/oopser/dumper.c:101:
+		static unsigned char oldcontents[512];
+		oldcontents[0] = 0;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#326: FILE: drivers/char/oopser/dumper.c:105:
+		for (ret = 0; ret < sizeof(LINUX_OOPSER_SIGNATURE)-1; ret++)
 		                                                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#333: FILE: drivers/char/oopser/dumper.c:112:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#357: FILE: drivers/char/oopser/dumper.c:136:
+#else^I$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#364: FILE: drivers/char/oopser/dumper.c:143:
+	extern char log_buf[];

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#365: FILE: drivers/char/oopser/dumper.c:144:
+	extern unsigned long log_end;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#407: FILE: drivers/char/oopser/dumper.c:186:
+	p = add_string(page, "CPU="); p = add_int(p,smp_processor_id());
 	                                           ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#434: FILE: drivers/char/oopser/dumper_x86_ide.c:1:
+/* This is the core dumper code: x86 IDE.  It must *not* reference any

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#435: FILE: drivers/char/oopser/dumper_x86_ide.c:2:
+/* This is the core dumper code: x86 IDE.  It must *not* reference any
+   outside code. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#435: FILE: drivers/char/oopser/dumper_x86_ide.c:2:
+   outside code. */

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#441: FILE: drivers/char/oopser/dumper_x86_ide.c:8:
+#include <asm/io.h>

WARNING:LINE_SPACING: Missing a blank line after declarations
#450: FILE: drivers/char/oopser/dumper_x86_ide.c:17:
+	unsigned int i;
+	for (i = 0; i < 10000 * num_usec; i++);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#450: FILE: drivers/char/oopser/dumper_x86_ide.c:17:
+	for (i = 0; i < 10000 * num_usec; i++);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#464: FILE: drivers/char/oopser/dumper_x86_ide.c:31:
+			if (b & ERR_STAT) return 0;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#465: FILE: drivers/char/oopser/dumper_x86_ide.c:32:
+			if (b & flag) return 1;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#486: FILE: drivers/char/oopser/dumper_x86_ide.c:53:
+	if (!wait_before_command()) return -EIO;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#489: FILE: drivers/char/oopser/dumper_x86_ide.c:56:
+	if (!wait_before_command()) return -EIO;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#501: FILE: drivers/char/oopser/dumper_x86_ide.c:68:
+	if (!wait_before_data()) return -EIO;

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#504: FILE: drivers/char/oopser/dumper_x86_ide.c:71:
+#if 0

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#505: FILE: drivers/char/oopser/dumper_x86_ide.c:72:
+	printk("Contents of sector %u\n", lba);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#506: FILE: drivers/char/oopser/dumper_x86_ide.c:73:
+	printk("SECTOR: %02X %02X %02X %02X %02X %02X %02X %02X ...\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#507: FILE: drivers/char/oopser/dumper_x86_ide.c:74:
+^I       sect[0], sect[1], sect[2], sect[3], $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#509: FILE: drivers/char/oopser/dumper_x86_ide.c:76:
+	printk("SECTOR: ... %02X %02X %02X %02X %02X %02X %02X %02X\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#510: FILE: drivers/char/oopser/dumper_x86_ide.c:77:
+^I       sect[504], sect[505], sect[506], sect[507], $

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#520: FILE: drivers/char/oopser/dumper_x86_ide.c:87:
+	if (!wait_before_command()) return -EIO;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#522: FILE: drivers/char/oopser/dumper_x86_ide.c:89:
+^I$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#523: FILE: drivers/char/oopser/dumper_x86_ide.c:90:
+	if (!wait_before_command()) return -EIO;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#535: FILE: drivers/char/oopser/dumper_x86_ide.c:102:
+	if (!wait_before_data()) return -EIO;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#545: FILE: drivers/char/oopser/dumper_x86_ide.c:112:
+	printk(KERN_INFO "Oopser set: %s %u...\n",

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#572: FILE: drivers/char/oopser/interface.c:1:
+/* This is the only part of the in-kernel oops dumper which can call

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#573: FILE: drivers/char/oopser/interface.c:2:
+/* This is the only part of the in-kernel oops dumper which can call
+   into the rest of the kernel. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#573: FILE: drivers/char/oopser/interface.c:2:
+   into the rest of the kernel. */

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#586: FILE: drivers/char/oopser/interface.c:15:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#587: FILE: drivers/char/oopser/interface.c:16:
+#include <asm/io.h>

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#593: FILE: drivers/char/oopser/interface.c:22:
+static unsigned int use_count = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#598: FILE: drivers/char/oopser/interface.c:27:
+static int oopser_open(struct inode *inode, struct file *filp)
                                                          ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#613: FILE: drivers/char/oopser/interface.c:42:
+static int oopser_close(struct inode *inode, struct file *filp)
                                                           ^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#643: FILE: drivers/char/oopser/interface.c:72:
+	if (len < sizeof(syms) + sizeof(unsigned short)*syms.num_syms)
 	                                               ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#652: FILE: drivers/char/oopser/interface.c:81:
+	if (!new) return -ENOMEM;

ERROR:SPACING: space required before the open brace '{'
#655: FILE: drivers/char/oopser/interface.c:84:
+	if (copy_from_user(&new->symsize, ubuffer + sizeof(syms), extra) != 0){

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#666: FILE: drivers/char/oopser/interface.c:95:
+	new->encnames = (unsigned char *)(new->prefix + strlen(new->prefix)+1);
 	                                                                   ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#668: FILE: drivers/char/oopser/interface.c:97:
+	printk(KERN_INFO "oopser: %u symbols for %s added\n",

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#681: FILE: drivers/char/oopser/interface.c:110:
+	if (len != sizeof(unsigned int)) return -EINVAL;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#683: FILE: drivers/char/oopser/interface.c:112:
+	if (oopser_block_write) ret = -EEXIST;

CHECK:BRACES: braces {} should be used on all arms of this statement
#683: FILE: drivers/char/oopser/interface.c:112:
+	if (oopser_block_write) ret = -EEXIST;
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#684: FILE: drivers/char/oopser/interface.c:113:
+	else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#687: FILE: drivers/char/oopser/interface.c:116:
+			printk(KERN_INFO "Oopser armed: IDE\n");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#705: FILE: drivers/char/oopser/interface.c:134:
+	if (len != sizeof(unsigned int)) return -EINVAL;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#707: FILE: drivers/char/oopser/interface.c:136:
+	if (!oopser_block_write) ret = -ENOENT;

CHECK:BRACES: braces {} should be used on all arms of this statement
#707: FILE: drivers/char/oopser/interface.c:136:
+	if (!oopser_block_write) ret = -ENOENT;
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#708: FILE: drivers/char/oopser/interface.c:137:
+	else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#712: FILE: drivers/char/oopser/interface.c:141:
+		printk(KERN_INFO "Oopser disarmed\n");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#725: FILE: drivers/char/oopser/interface.c:154:
+	if (oopser_block_write) return -EBUSY;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#728: FILE: drivers/char/oopser/interface.c:157:
+	if (len < sizeof(unsigned int)*2) return -EINVAL;
 	                              ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#728: FILE: drivers/char/oopser/interface.c:157:
+	if (len < sizeof(unsigned int)*2) return -EINVAL;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#729: FILE: drivers/char/oopser/interface.c:158:
+	if (len > sizeof(buffer)) return -ENOSPC;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#739: FILE: drivers/char/oopser/interface.c:168:
+		printk(KERN_DEBUG "oopser: unknown set type %u\n",

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#749: FILE: drivers/char/oopser/interface.c:178:
+static ssize_t oopser_write(struct file *filp,
                                          ^^^^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#794: FILE: drivers/char/oopser/interface.c:223:
+static struct file_operations oopser_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:INDENTED_LABEL: labels should not be indented
#795: FILE: drivers/char/oopser/interface.c:224:
+	open:		oopser_open,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#796: FILE: drivers/char/oopser/interface.c:225:
+	release:	oopser_close,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#796: FILE: drivers/char/oopser/interface.c:225:
+	release:	oopser_close,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#797: FILE: drivers/char/oopser/interface.c:226:
+	write:		oopser_write,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#797: FILE: drivers/char/oopser/interface.c:226:
+	write:		oopser_write,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#820: FILE: drivers/char/oopser/oopser_priv.h:1:
+#ifndef _OOPSER_PRIV_H

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#828: FILE: drivers/char/oopser/oopser_priv.h:9:
+struct oopser_symtable
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#860: FILE: drivers/char/oopser/oopser_priv.h:41:
+extern int oopser_write_ide(const char dump[512], unsigned int block);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#861: FILE: drivers/char/oopser/oopser_priv.h:42:
+extern int oopser_read_ide(char dump[512], unsigned int block);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#862: FILE: drivers/char/oopser/oopser_priv.h:43:
+extern int oopser_set_ide(const char *buffer, size_t len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#866: FILE: drivers/char/oopser/oopser_priv.h:47:
+extern char *dump_registers(char *p, struct pt_regs *regs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#867: FILE: drivers/char/oopser/oopser_priv.h:48:
+extern char *dump_code_context(char *p, struct pt_regs *regs);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#879: FILE: drivers/char/oopser/oopser_priv.h:60:
+	return p+i-1;
 	        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#879: FILE: drivers/char/oopser/oopser_priv.h:60:
+	return p+i-1;
 	          ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#884: FILE: drivers/char/oopser/oopser_priv.h:65:
+	if (num < 10) return '0' + num;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#885: FILE: drivers/char/oopser/oopser_priv.h:66:
+	else return 'a' + num - 10;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#914: FILE: drivers/char/oopser/oopser_priv.h:95:
+		if (i/mag) {
 		     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#915: FILE: drivers/char/oopser/oopser_priv.h:96:
+			*(p++) = tohex(i/mag);
 			                ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#930: FILE: drivers/char/oopser/regs_x86.c:1:
+/* x86-specific dumper code.  It must *not* reference any outside

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#931: FILE: drivers/char/oopser/regs_x86.c:2:
+/* x86-specific dumper code.  It must *not* reference any outside
+   code. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#931: FILE: drivers/char/oopser/regs_x86.c:2:
+   code. */

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#933: FILE: drivers/char/oopser/regs_x86.c:4:
+#include <asm/uaccess.h>

CHECK:BRACES: braces {} should be used on all arms of this statement
#943: FILE: drivers/char/oopser/regs_x86.c:14:
+	if (regs->eip < PAGE_OFFSET)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#945: FILE: drivers/char/oopser/regs_x86.c:16:
+	else {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#946: FILE: drivers/char/oopser/regs_x86.c:17:
+		for (i=0; i < 20; i++) {
 		      ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#947: FILE: drivers/char/oopser/regs_x86.c:18:
+			if (__get_user(c, &((unsigned char*)regs->eip)[i])) {

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#963: FILE: drivers/char/oopser/regs_x86.c:34:
+	while (((long) stack & (THREAD_SIZE-1)) != 0 && i < 20) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#963: FILE: drivers/char/oopser/regs_x86.c:34:
+	while (((long) stack & (THREAD_SIZE-1)) != 0 && i < 20) {
 	                                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#988: FILE: drivers/char/oopser/regs_x86.c:59:
+	for (i=0; i < 24; i++) {
 	      ^

CHECK:SPACING: No space is necessary after a cast
#989: FILE: drivers/char/oopser/regs_x86.c:60:
+		if (((long) stack & (THREAD_SIZE-1)) == 0)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#989: FILE: drivers/char/oopser/regs_x86.c:60:
+		if (((long) stack & (THREAD_SIZE-1)) == 0)
 		                                ^

CHECK:SPACING: No space is necessary after a cast
#1003: FILE: drivers/char/oopser/regs_x86.c:74:
+	esp = (unsigned long) (&regs->esp);

CHECK:SPACING: No space is necessary after a cast
#1032: FILE: drivers/char/oopser/regs_x86.c:103:
+	esp = (unsigned long) (&regs->esp);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1039: FILE: drivers/char/oopser/regs_x86.c:110:
+	 * time of the fault..  */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1042: FILE: drivers/char/oopser/regs_x86.c:113:
+^I^Iif ((0xffff & regs->xcs) == __KERNEL_CS) $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1044: FILE: drivers/char/oopser/regs_x86.c:115:
+		p = dump_stack(p, (unsigned long*)esp);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1045: FILE: drivers/char/oopser/regs_x86.c:116:
+		p = dump_backtrace(p, (unsigned long*)esp);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1065: FILE: include/linux/oopser.h:1:
+#ifndef _LINUX_OOPSER_H

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1070: FILE: include/linux/oopser.h:6:
+#define LINUX_OOPSER_BLOCKS (LINUX_OOPSER_DUMP_SIZE/512)
                                                    ^

ERROR:OPEN_BRACE: open brace '{' following enum go on the same line
#1074: FILE: include/linux/oopser.h:10:
+enum linux_oopser_command
+{

ERROR:CODE_INDENT: code indent should use tabs where possible
#1076: FILE: include/linux/oopser.h:12:
+           NUL-terminated module name ("" for kernel), then Huffman$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1076: FILE: include/linux/oopser.h:12:
+	/* Followed by num syms, base address, 16-bit sizes,
+           NUL-terminated module name ("" for kernel), then Huffman

ERROR:CODE_INDENT: code indent should use tabs where possible
#1077: FILE: include/linux/oopser.h:13:
+           encoded names. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1077: FILE: include/linux/oopser.h:13:
+           encoded names. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1078: FILE: include/linux/oopser.h:14:
+^ILINUX_OOPSER_SYMBOLS, $

ERROR:OPEN_BRACE: open brace '{' following enum go on the same line
#1090: FILE: include/linux/oopser.h:26:
+enum linux_oopser_type
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1095: FILE: include/linux/oopser.h:31:
+struct linux_oopser_ide
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1107: FILE: include/linux/oopser.h:43:
+struct linux_oopser_symbols
+{

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1128: FILE: kernel/ksyms.c:605:
+EXPORT_SYMBOL_GPL(tainted);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#1146: FILE: kernel/printk.c:90:
+unsigned long log_end;				/* Index into log_buf: most-recently-written-char + 1 */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1155: FILE: kernel/printk.c:711:
+EXPORT_SYMBOL_GPL(log_buf);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000432358.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 109 errors, 51 warnings, 27 checks, 1035 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000432358.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
