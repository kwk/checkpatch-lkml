WARNING:TYPO_SPELLING: 'inport' may be misspelled - perhaps 'import'?
#58: 
 drivers/input/mouse/inport.c                   |    2 
                     ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#98: 
--- a/arch/sparc64/kernel/irq.c	Wed Feb 12 11:57:08 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#574: FILE: drivers/input/joystick/iforce/iforce-packets.c:154:
+void iforce_process_packet(struct iforce *iforce, u16 cmd, unsigned char *data, struct pt_regs *regs)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#603: FILE: drivers/input/joystick/iforce/iforce-serio.c:81:
+static void iforce_serio_irq(struct serio *serio, unsigned char data, unsigned int flags, struct pt_regs *regs)

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#680: FILE: drivers/input/joystick/iforce/iforce.h:179:
+void iforce_process_packet(struct iforce *iforce, u16 cmd, unsigned char *data, struct pt_regs *regs);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#692: FILE: drivers/input/joystick/magellan.c:84:
+static void magellan_process_packet(struct magellan* magellan, struct pt_regs *regs)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#710: FILE: drivers/input/joystick/magellan.c:116:
+static void magellan_interrupt(struct serio *serio, unsigned char data, unsigned int flags, struct pt_regs *regs)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#728: FILE: drivers/input/joystick/spaceball.c:84:
+static void spaceball_process_packet(struct spaceball* spaceball, struct pt_regs *regs)

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#746: FILE: drivers/input/joystick/spaceball.c:152:
+static void spaceball_interrupt(struct serio *serio, unsigned char data, unsigned int flags, struct pt_regs *regs)

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#783: FILE: drivers/input/joystick/spaceorb.c:133:
+static void spaceorb_interrupt(struct serio *serio, unsigned char data, unsigned int flags, struct pt_regs *regs)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#789: FILE: drivers/input/joystick/spaceorb.c:138:
+		if (spaceorb->idx) spaceorb_process_packet(spaceorb, regs);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#818: FILE: drivers/input/joystick/stinger.c:101:
+static void stinger_interrupt(struct serio *serio, unsigned char data, unsigned int flags, struct pt_regs *regs)

WARNING:TYPO_SPELLING: 'struc' may be misspelled - perhaps 'struct'?
#857: FILE: drivers/input/joystick/twidjoy.c:145:
+static void twidjoy_interrupt(struct serio *serio, unsigned char data, unsigned int flags, struc pt_regs *regs)
                                                                                            ^^^^^

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#857: FILE: drivers/input/joystick/twidjoy.c:145:
+static void twidjoy_interrupt(struct serio *serio, unsigned char data, unsigned int flags, struc pt_regs *regs)

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#857: FILE: drivers/input/joystick/twidjoy.c:145:
+static void twidjoy_interrupt(struct serio *serio, unsigned char data, unsigned int flags, struc pt_regs *regs)
                                                                                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#895: FILE: drivers/input/joystick/warrior.c:102:
+static void warrior_interrupt(struct serio *serio, unsigned char data, unsigned int flags, struct pt_regs *regs)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#901: FILE: drivers/input/joystick/warrior.c:107:
+		if (warrior->idx) warrior_process_packet(warrior, regs);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#910: FILE: drivers/input/joystick/warrior.c:116:
+^I^Iif (warrior->idx) warrior_process_packet(warrior, regs);^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#910: FILE: drivers/input/joystick/warrior.c:116:
+		if (warrior->idx) warrior_process_packet(warrior, regs);	

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#934: FILE: drivers/input/keyboard/atkbd.c:135:
+static void atkbd_interrupt(struct serio *serio, unsigned char data, unsigned int flags, struct pt_regs *regs)

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#954: FILE: drivers/input/keyboard/newtonkbd.c:65:
+void nkbd_interrupt(struct serio *serio, unsigned char data, unsigned int flags, struct pt_regs *regs)

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#981: FILE: drivers/input/keyboard/sunkbd.c:92:
+static void sunkbd_interrupt(struct serio *serio, unsigned char data, unsigned int flags, struct pt_regs *regs)

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1001: FILE: drivers/input/keyboard/xtkbd.c:66:
+void xtkbd_interrupt(struct serio *serio, unsigned char data, unsigned int flags, struct pt_regs *regs)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1047: FILE: drivers/input/misc/gsc_ps2.c:372:
+	if (hpmouse.nbread && time_after(jiffies, hpmouse.last + HZ/2)) {
 	                                                           ^

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#1143: FILE: drivers/input/mouse/psmouse.c:170:
+static void psmouse_interrupt(struct serio *serio, unsigned char data, unsigned int flags, struct pt_regs *regs)

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#1208: FILE: drivers/input/mouse/sermouse.c:207:
+static void sermouse_interrupt(struct serio *serio, unsigned char data, unsigned int flags, struct pt_regs *regs)

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#1336: FILE: drivers/input/serio/parkbd.c:139:
+			serio_interrupt(&parkbd_port, (parkbd_buffer >> (2 - parkbd_mode)) & 0xff, 0, regs);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1417: FILE: drivers/input/serio/serio.c:138:
+void serio_interrupt(struct serio *serio, unsigned char data, unsigned int flags, struct pt_regs *regs)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1421: FILE: drivers/input/serio/serio.c:141:
+                serio->dev->interrupt(serio, data, flags, regs);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1421: FILE: drivers/input/serio/serio.c:141:
+                serio->dev->interrupt(serio, data, flags, regs);$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1455: FILE: drivers/input/touchscreen/gunze.c:63:
+static void gunze_process_packet(struct gunze* gunze, struct pt_regs *regs)

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#1471: FILE: drivers/input/touchscreen/gunze.c:81:
+static void gunze_interrupt(struct serio *serio, unsigned char data, unsigned int flags, struct pt_regs *regs)

CHECK:BRACES: Unbalanced braces around else statement
#1565: FILE: drivers/macintosh/adbhid.c:166:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 138 exceeds 100 columns
#1653: FILE: drivers/usb/input/hid-core.c:776:
+static void hid_process_event(struct hid_device *hid, struct hid_field *field, struct hid_usage *usage, __s32 value, struct pt_regs *regs)

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#1670: FILE: drivers/usb/input/hid-core.c:791:
+static void hid_input_field(struct hid_device *hid, struct hid_field *field, __u8 *data, struct pt_regs *regs)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#1683: FILE: drivers/usb/input/hid-core.c:825:
 		if (field->value[n] >= min && field->value[n] <= max
[...]
+				hid_process_event(hid, field, &field->usage[field->value[n] - min], 0, regs);

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#1687: FILE: drivers/usb/input/hid-core.c:828:
+				hid_process_event(hid, field, &field->usage[field->value[n] - min], 0, regs);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#1689: FILE: drivers/usb/input/hid-core.c:830:
 		if (value[n] >= min && value[n] <= max
[...]
+				hid_process_event(hid, field, &field->usage[value[n] - min], 1, regs);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1693: FILE: drivers/usb/input/hid-core.c:833:
+				hid_process_event(hid, field, &field->usage[value[n] - min], 1, regs);

WARNING:LONG_LINE: line length of 132 exceeds 100 columns
#1739: FILE: drivers/usb/input/hid-input.c:383:
+void hidinput_hid_event(struct hid_device *hid, struct hid_field *field, struct hid_usage *usage, __s32 value, struct pt_regs *regs)

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#1756: FILE: drivers/usb/input/hid.h:423:
+extern void hidinput_hid_event(struct hid_device *, struct hid_field *, struct hid_usage *, __s32, struct pt_regs *regs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1756: FILE: drivers/usb/input/hid.h:423:
+extern void hidinput_hid_event(struct hid_device *, struct hid_field *, struct hid_usage *, __s32, struct pt_regs *regs);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_device *' should also have an identifier name
#1756: FILE: drivers/usb/input/hid.h:423:
+extern void hidinput_hid_event(struct hid_device *, struct hid_field *, struct hid_usage *, __s32, struct pt_regs *regs);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_field *' should also have an identifier name
#1756: FILE: drivers/usb/input/hid.h:423:
+extern void hidinput_hid_event(struct hid_device *, struct hid_field *, struct hid_usage *, __s32, struct pt_regs *regs);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hid_usage *' should also have an identifier name
#1756: FILE: drivers/usb/input/hid.h:423:
+extern void hidinput_hid_event(struct hid_device *, struct hid_field *, struct hid_usage *, __s32, struct pt_regs *regs);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__s32' should also have an identifier name
#1756: FILE: drivers/usb/input/hid.h:423:
+extern void hidinput_hid_event(struct hid_device *, struct hid_field *, struct hid_usage *, __s32, struct pt_regs *regs);

WARNING:LONG_LINE: line length of 150 exceeds 100 columns
#1763: FILE: drivers/usb/input/hid.h:429:
+static inline void hidinput_hid_event(struct hid_device *hid, struct hid_field *field, struct hid_usage *usage, __s32 value, struct pt_regs *regs) { }

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#1859: FILE: drivers/usb/input/xpad.c:127:
+static void xpad_process_packet(struct usb_xpad *xpad, u16 cmd, unsigned char *data, struct pt_regs *regs)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1943: FILE: include/linux/input.h:909:
+#define input_regs(a,b)		do { (a)->regs = (b); } while (0)
                     ^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1943: FILE: include/linux/input.h:909:
+#define input_regs(a,b)		do { (a)->regs = (b); } while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#1944: FILE: include/linux/input.h:910:
+#define input_sync(a)		do { input_event(a, EV_SYN, SYN_REPORT, 0); (a)->regs = NULL; } while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#1944: FILE: include/linux/input.h:910:
+#define input_sync(a)		do { input_event(a, EV_SYN, SYN_REPORT, 0); (a)->regs = NULL; } while (0)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct serio *' should also have an identifier name
#1971: FILE: include/linux/serio.h:53:
+	void (*interrupt)(struct serio *, unsigned char, unsigned int, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char' should also have an identifier name
#1971: FILE: include/linux/serio.h:53:
+	void (*interrupt)(struct serio *, unsigned char, unsigned int, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#1971: FILE: include/linux/serio.h:53:
+	void (*interrupt)(struct serio *, unsigned char, unsigned int, struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#1971: FILE: include/linux/serio.h:53:
+	void (*interrupt)(struct serio *, unsigned char, unsigned int, struct pt_regs *);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#1980: FILE: include/linux/serio.h:64:
+void serio_interrupt(struct serio *serio, unsigned char data, unsigned int flags, struct pt_regs *regs);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000394176.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 42 warnings, 5 checks, 1574 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000394176.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
