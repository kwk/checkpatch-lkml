WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#74: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#75: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#76: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#76: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#77: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#78: 
#	           ChangeSet	1.907   -> 1.908  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#79: 
#	include/asm-ppc/module.h	1.4     -> 1.5    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#80: 
#	arch/ppc/kernel/Makefile	1.28    -> 1.29   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#81: 
#	arch/ppc/kernel/misc.S	1.31    -> 1.32   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#82: 
#	arch/ppc/mm/extable.c	1.3     -> 1.4    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#83: 
#	               (new)	        -> 1.1     arch/ppc/kernel/module.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#84: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#85: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#86: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#87: 
# 02/11/20	rusty@rustcorp.com.au	1.908

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#88: 
# PPC32: In-kernel module linker for PPC.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#89: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#90: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#92: 
--- a/arch/ppc/kernel/Makefile	Wed Nov 20 09:52:38 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#132: FILE: arch/ppc/kernel/module.c:1:
+/*  Kernel module help for PPC.

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#133: FILE: arch/ppc/kernel/module.c:2:
+/*  Kernel module help for PPC.
+    Copyright (C) 2001 Rusty Russell.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#146: FILE: arch/ppc/kernel/module.c:15:
+    along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#147: FILE: arch/ppc/kernel/module.c:16:
+    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#156: FILE: arch/ppc/kernel/module.c:25:
+#if 0

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#159: FILE: arch/ppc/kernel/module.c:28:
+#define DEBUGP(fmt , ...)
                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: arch/ppc/kernel/module.c:43:
+           table entries. */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#174: FILE: arch/ppc/kernel/module.c:43:
+	/* FIXME: If module_region == mod->init_region, trim exception
+           table entries. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#174: FILE: arch/ppc/kernel/module.c:43:
+           table entries. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#178: FILE: arch/ppc/kernel/module.c:47:
+/* Count how many different relocations (different symbol, different
+   addend) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#178: FILE: arch/ppc/kernel/module.c:47:
+   addend) */

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Rela>
#179: FILE: arch/ppc/kernel/module.c:48:
+static unsigned int count_relocs(const Elf32_Rela *rela, unsigned int num)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:CODE_INDENT: code indent should use tabs where possible
#184: FILE: arch/ppc/kernel/module.c:53:
+           time critical */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#184: FILE: arch/ppc/kernel/module.c:53:
+	/* Sure, this is order(n^2), but it's usually short, and not
+           time critical */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#184: FILE: arch/ppc/kernel/module.c:53:
+           time critical */

ERROR:CODE_INDENT: code indent should use tabs where possible
#188: FILE: arch/ppc/kernel/module.c:57:
+                           already been counted */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#188: FILE: arch/ppc/kernel/module.c:57:
+			/* If this addend appeared before, it's
+                           already been counted */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#188: FILE: arch/ppc/kernel/module.c:57:
+                           already been counted */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#191: FILE: arch/ppc/kernel/module.c:60:
+			    == ELF32_R_SYM(rela[j].r_info)
+			    && rela[i].r_addend == rela[j].r_addend)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#194: FILE: arch/ppc/kernel/module.c:63:
+		if (j == i) ret++;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#200: FILE: arch/ppc/kernel/module.c:69:
+/* Get the potential trampolines size required of the init and
+   non-init sections */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#200: FILE: arch/ppc/kernel/module.c:69:
+   non-init sections */

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Ehdr>
#201: FILE: arch/ppc/kernel/module.c:70:
+static unsigned long get_plt_size(const Elf32_Ehdr *hdr,

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Shdr>
#202: FILE: arch/ppc/kernel/module.c:71:
+				  const Elf32_Shdr *sechdrs,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#207: FILE: arch/ppc/kernel/module.c:76:
+	unsigned i;

ERROR:CODE_INDENT: code indent should use tabs where possible
#210: FILE: arch/ppc/kernel/module.c:79:
+           symbols) */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#210: FILE: arch/ppc/kernel/module.c:79:
+	/* Everything marked ALLOC (this includes the exported
+           symbols) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#210: FILE: arch/ppc/kernel/module.c:79:
+           symbols) */

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: arch/ppc/kernel/module.c:82:
+                   not interested */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#213: FILE: arch/ppc/kernel/module.c:82:
+		/* If it's called *.init*, and we're not init, we're
+                   not interested */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#213: FILE: arch/ppc/kernel/module.c:82:
+                   not interested */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#258: FILE: arch/ppc/kernel/module.c:127:
+	printk(KERN_ERR "%s: Non-ADD RELOCATION unsupported\n",

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Addr>
#263: FILE: arch/ppc/kernel/module.c:132:
+static inline int entry_matches(struct ppc_plt_entry *entry, Elf32_Addr val)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#266: FILE: arch/ppc/kernel/module.c:135:
+	if (entry->jump[0] == 0x3d600000 + ((val + 0x8000) >> 16)
+	    && entry->jump[1] == 0x396b0000 + (val & 0xffff))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#279: FILE: arch/ppc/kernel/module.c:148:
+	if (location >= mod->module_core
+	    && location < mod->module_core + mod->arch.core_plt_offset)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#286: FILE: arch/ppc/kernel/module.c:155:
+		if (entry_matches(entry, val)) return (uint32_t)entry;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#291: FILE: arch/ppc/kernel/module.c:160:
+	entry->jump[0] = 0x3d600000+((val+0x8000)>>16);	/* lis r11,sym@ha */
 	                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#291: FILE: arch/ppc/kernel/module.c:160:
+	entry->jump[0] = 0x3d600000+((val+0x8000)>>16);	/* lis r11,sym@ha */
 	                                 ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#291: FILE: arch/ppc/kernel/module.c:160:
+	entry->jump[0] = 0x3d600000+((val+0x8000)>>16);	/* lis r11,sym@ha */
 	                                         ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#292: FILE: arch/ppc/kernel/module.c:161:
+	entry->jump[1] = 0x396b0000 + (val&0xffff);	/* addi r11,r11,sym@l*/
 	                                  ^

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Sym>
#307: FILE: arch/ppc/kernel/module.c:176:
+	Elf32_Sym *sym;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#308: FILE: arch/ppc/kernel/module.c:177:
+	uint32_t *location;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#309: FILE: arch/ppc/kernel/module.c:178:
+	uint32_t value;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#321: FILE: arch/ppc/kernel/module.c:190:
+			printk(KERN_WARNING "%s: Unknown symbol %s\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#338: FILE: arch/ppc/kernel/module.c:207:
+^I^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#341: FILE: arch/ppc/kernel/module.c:210:
+			/* Sign-adjusted lower 16 bits: PPC ELF ABI says:
+			   (((x >> 16) + ((x & 0x8000) ? 1 : 0))) & 0xFFFF.

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#349: FILE: arch/ppc/kernel/module.c:218:
+			if ((int)(value - (uint32_t)location) < -0x02000000
+			    || (int)(value - (uint32_t)location) >= 0x02000000)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#357: FILE: arch/ppc/kernel/module.c:226:
+^I^I^I*(uint32_t *)location $

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#358: FILE: arch/ppc/kernel/module.c:227:
+			*(uint32_t *)location 
+				= (*(uint32_t *)location & ~0x03fffffc)

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#376: FILE: arch/ppc/kernel/module.c:245:
+			printk("%s: unknown ADD relocation: %u\n",

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Ehdr>
#386: FILE: arch/ppc/kernel/module.c:255:
+int module_finalize(const Elf_Ehdr *hdr,

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Shdr>
#387: FILE: arch/ppc/kernel/module.c:256:
+		    const Elf_Shdr *sechdrs,

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#418: FILE: arch/ppc/mm/extable.c:86:
+		struct exception_table *ex
+			= list_entry(i, struct exception_table, list);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#452: FILE: include/asm-ppc/module.h:6:
+/* Thanks to Paul M for explaining this.
+

WARNING:TYPO_SPELLING: 'furthur' may be misspelled - perhaps 'further'?
#454: FILE: include/asm-ppc/module.h:8:
+   modules are furthur away than this.  So, we jump to a table of
                ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#460: FILE: include/asm-ppc/module.h:14:
+struct ppc_plt_entry
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#466: FILE: include/asm-ppc/module.h:20:
+struct mod_arch_specific
+{

ERROR:CODE_INDENT: code indent should use tabs where possible
#468: FILE: include/asm-ppc/module.h:22:
+           we know the rest is for the PLT */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#468: FILE: include/asm-ppc/module.h:22:
+	/* How much of the core is actually taken up with core (then
+           we know the rest is for the PLT */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#468: FILE: include/asm-ppc/module.h:22:
+           we know the rest is for the PLT */

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Sym>
#476: FILE: include/asm-ppc/module.h:30:
+#define Elf_Sym Elf32_Sym

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000412336.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 44 warnings, 20 checks, 368 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000412336.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
