WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#81: 
diff -Nuar linux-2.6.11.org/drivers/serial/jsm/jsm_mgmt.c linux-2.6.11.new/drivers/serial/jsm/jsm_mgmt.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#85: FILE: drivers/serial/jsm/jsm_mgmt.c:1:
+/************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#94: FILE: drivers/serial/jsm/jsm_mgmt.c:10:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#96: FILE: drivers/serial/jsm/jsm_mgmt.c:12:
+ * but WITHOUT ANY WARRANTY, EXPRESS OR IMPLIED; without even the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#97: FILE: drivers/serial/jsm/jsm_mgmt.c:13:
+ * implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#99: FILE: drivers/serial/jsm/jsm_mgmt.c:15:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#100: FILE: drivers/serial/jsm/jsm_mgmt.c:16:
+ * You should have received a copy of the GNU General Public License $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#101: FILE: drivers/serial/jsm/jsm_mgmt.c:17:
+ * along with this program; if not, write to the Free Software $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#101: FILE: drivers/serial/jsm/jsm_mgmt.c:17:
+ * along with this program; if not, write to the Free Software $

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#112: FILE: drivers/serial/jsm/jsm_mgmt.c:28:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#115: FILE: drivers/serial/jsm/jsm_mgmt.c:31:
+ * $

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#122: FILE: drivers/serial/jsm/jsm_mgmt.c:38:
+#include <asm/uaccess.h>	/* For copy_from_user/copy_to_user */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#131: FILE: drivers/serial/jsm/jsm_mgmt.c:47:
+ * jsm_mgmt_open()  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#134: FILE: drivers/serial/jsm/jsm_mgmt.c:50:
+ */  $

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#153: FILE: drivers/serial/jsm/jsm_mgmt.c:69:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#153: FILE: drivers/serial/jsm/jsm_mgmt.c:69:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#169: FILE: drivers/serial/jsm/jsm_mgmt.c:85:
+ */  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#195: FILE: drivers/serial/jsm/jsm_mgmt.c:111:
+ */  $

CHECK:SPACING: No space is necessary after a cast
#200: FILE: drivers/serial/jsm/jsm_mgmt.c:116:
+	void __user *uarg = (void __user *) arg;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#205: FILE: drivers/serial/jsm/jsm_mgmt.c:121:
+	switch (cmd) {
+

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#216: FILE: drivers/serial/jsm/jsm_mgmt.c:132:
+		ddi = (struct digi_dinfo *)kmalloc(sizeof(struct digi_dinfo), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ddi)...) over kmalloc(sizeof(struct digi_dinfo)...)
#216: FILE: drivers/serial/jsm/jsm_mgmt.c:132:
+		ddi = (struct digi_dinfo *)kmalloc(sizeof(struct digi_dinfo), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:LINE_SPACING: Please don't use multiple blank lines
#223: FILE: drivers/serial/jsm/jsm_mgmt.c:139:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#236: FILE: drivers/serial/jsm/jsm_mgmt.c:152:
+		if (copy_to_user(uarg, &ddi, sizeof (struct digi_dinfo)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'brd < 0'
#260: FILE: drivers/serial/jsm/jsm_mgmt.c:176:
+		if ((brd < 0) || (brd > adapter_count) || (adapter_count == 0))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'brd > adapter_count'
#260: FILE: drivers/serial/jsm/jsm_mgmt.c:176:
+		if ((brd < 0) || (brd > adapter_count) || (adapter_count == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'adapter_count == 0'
#260: FILE: drivers/serial/jsm/jsm_mgmt.c:176:
+		if ((brd < 0) || (brd > adapter_count) || (adapter_count == 0))

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#263: FILE: drivers/serial/jsm/jsm_mgmt.c:179:
+		di = (struct digi_info *)kmalloc(sizeof(struct digi_info), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*di)...) over kmalloc(sizeof(struct digi_info)...)
#263: FILE: drivers/serial/jsm/jsm_mgmt.c:179:
+		di = (struct digi_info *)kmalloc(sizeof(struct digi_info), GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#275: FILE: drivers/serial/jsm/jsm_mgmt.c:191:
+			cur_board_entry = list_entry(tmp, struct jsm_board,
+						  jsm_board_entry);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#276: FILE: drivers/serial/jsm/jsm_mgmt.c:192:
+			if (cur_board_entry->boardnum == brd) {
+				break;
+			}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#282: FILE: drivers/serial/jsm/jsm_mgmt.c:198:
+
+

CHECK:SPACING: No space is necessary after a cast
#288: FILE: drivers/serial/jsm/jsm_mgmt.c:204:
+		di->info_physaddr = (u64) cur_board_entry->membase;

CHECK:SPACING: No space is necessary after a cast
#289: FILE: drivers/serial/jsm/jsm_mgmt.c:205:
+		di->info_physsize = (u64) cur_board_entry->membase - cur_board_entry->membase_end;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#300: FILE: drivers/serial/jsm/jsm_mgmt.c:216:
+		if (copy_to_user(uarg, &di, sizeof (struct digi_info)))

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#320: FILE: drivers/serial/jsm/jsm_mgmt.c:236:
+		ni = (struct ni_info *)kmalloc(sizeof(struct ni_info), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ni)...) over kmalloc(sizeof(struct ni_info)...)
#320: FILE: drivers/serial/jsm/jsm_mgmt.c:236:
+		ni = (struct ni_info *)kmalloc(sizeof(struct ni_info), GFP_KERNEL);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'board < 0'
#337: FILE: drivers/serial/jsm/jsm_mgmt.c:253:
+		if ((board < 0) || (board > adapter_count) || (adapter_count == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'board > adapter_count'
#337: FILE: drivers/serial/jsm/jsm_mgmt.c:253:
+		if ((board < 0) || (board > adapter_count) || (adapter_count == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'adapter_count == 0'
#337: FILE: drivers/serial/jsm/jsm_mgmt.c:253:
+		if ((board < 0) || (board > adapter_count) || (adapter_count == 0))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#343: FILE: drivers/serial/jsm/jsm_mgmt.c:259:
+			cur_board_entry = list_entry(tmp, struct jsm_board,
+					jsm_board_entry);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#344: FILE: drivers/serial/jsm/jsm_mgmt.c:260:
+			if (cur_board_entry->boardnum == board) {
+				break;
+			}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'channel < 0'
#351: FILE: drivers/serial/jsm/jsm_mgmt.c:267:
+		if ((channel < 0) || (channel > cur_board_entry->nasync))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'channel > cur_board_entry->nasync'
#351: FILE: drivers/serial/jsm/jsm_mgmt.c:267:
+		if ((channel < 0) || (channel > cur_board_entry->nasync))

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#415: FILE: drivers/serial/jsm/jsm_mgmt.c:331:
+
+	}

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000200572.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 10 warnings, 21 checks, 336 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000200572.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
