ERROR:TRAILING_WHITESPACE: trailing whitespace
#53: FILE: arch/um/include/tlb.h:41:
+^I^I^I     int (*do_ops)(union mm_context *, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'union mm_context *' should also have an identifier name
#53: FILE: arch/um/include/tlb.h:41:
+			     int (*do_ops)(union mm_context *, 

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct host_vm_op *' should also have an identifier name
#53: FILE: arch/um/include/tlb.h:41:
+			     int (*do_ops)(union mm_context *, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#53: FILE: arch/um/include/tlb.h:41:
+			     int (*do_ops)(union mm_context *, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#53: FILE: arch/um/include/tlb.h:41:
+			     int (*do_ops)(union mm_context *, 

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void **' should also have an identifier name
#53: FILE: arch/um/include/tlb.h:41:
+			     int (*do_ops)(union mm_context *, 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#75: FILE: arch/um/kernel/skas/include/skas.h:27:
+extern int map(struct mm_id * mm_idp, unsigned long virt,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#75: FILE: arch/um/kernel/skas/include/skas.h:27:
+extern int map(struct mm_id * mm_idp, unsigned long virt,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#76: FILE: arch/um/kernel/skas/include/skas.h:28:
+^I       unsigned long len, int r, int w, int x, int phys_fd, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#78: FILE: arch/um/kernel/skas/include/skas.h:30:
+extern int unmap(struct mm_id * mm_idp, void *addr, unsigned long len,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#78: FILE: arch/um/kernel/skas/include/skas.h:30:
+extern int unmap(struct mm_id * mm_idp, void *addr, unsigned long len,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#80: FILE: arch/um/kernel/skas/include/skas.h:32:
+extern int protect(struct mm_id * mm_idp, unsigned long addr,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#80: FILE: arch/um/kernel/skas/include/skas.h:32:
+extern int protect(struct mm_id * mm_idp, unsigned long addr,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#81: FILE: arch/um/kernel/skas/include/skas.h:33:
+^I^I   unsigned long len, int r, int w, int x, int done, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#90: FILE: arch/um/kernel/skas/include/skas.h:42:
+extern long run_syscall_stub(struct mm_id * mm_idp,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#90: FILE: arch/um/kernel/skas/include/skas.h:42:
+extern long run_syscall_stub(struct mm_id * mm_idp,

ERROR:CODE_INDENT: code indent should use tabs where possible
#91: FILE: arch/um/kernel/skas/include/skas.h:43:
+                             int syscall, unsigned long *args, long expected,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: arch/um/kernel/skas/include/skas.h:43:
+                             int syscall, unsigned long *args, long expected,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#92: FILE: arch/um/kernel/skas/include/skas.h:44:
+                             void **addr, int done);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: arch/um/kernel/skas/include/skas.h:44:
+                             void **addr, int done);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#93: FILE: arch/um/kernel/skas/include/skas.h:45:
+extern long syscall_stub_data(struct mm_id * mm_idp,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#93: FILE: arch/um/kernel/skas/include/skas.h:45:
+extern long syscall_stub_data(struct mm_id * mm_idp,

ERROR:CODE_INDENT: code indent should use tabs where possible
#94: FILE: arch/um/kernel/skas/include/skas.h:46:
+                              unsigned long *data, int data_count,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: arch/um/kernel/skas/include/skas.h:46:
+                              unsigned long *data, int data_count,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#95: FILE: arch/um/kernel/skas/include/skas.h:47:
+                              void **addr, void **stub_addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: arch/um/kernel/skas/include/skas.h:47:
+                              void **addr, void **stub_addr);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#141: FILE: arch/um/kernel/skas/mem_user.c:32:
+static inline unsigned long *check_init_stack(struct mm_id * mm_idp,

ERROR:SPACING: space required before the open brace '{'
#144: FILE: arch/um/kernel/skas/mem_user.c:35:
+	if(stack == NULL){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#144: FILE: arch/um/kernel/skas/mem_user.c:35:
+	if(stack == NULL){

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!stack"
#144: FILE: arch/um/kernel/skas/mem_user.c:35:
+	if(stack == NULL){

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: No space is necessary after a cast
#145: FILE: arch/um/kernel/skas/mem_user.c:36:
+		stack = (unsigned long *) mm_idp->stack + 2;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#155: FILE: arch/um/kernel/skas/mem_user.c:44:
+int single_count = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#156: FILE: arch/um/kernel/skas/mem_user.c:45:
+int multi_count = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#157: FILE: arch/um/kernel/skas/mem_user.c:46:
+int multi_op_count = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#158: FILE: arch/um/kernel/skas/mem_user.c:47:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: arch/um/kernel/skas/mem_user.c:47:
+  $

ERROR:SPACING: space required before the open parenthesis '('
#168: FILE: arch/um/kernel/skas/mem_user.c:56:
+	if(proc_mm)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#173: FILE: arch/um/kernel/skas/mem_user.c:61:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: arch/um/kernel/skas/mem_user.c:61:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#177: FILE: arch/um/kernel/skas/mem_user.c:64:
+^I^I((unsigned long) &batch_syscall_stub - $

CHECK:SPACING: No space is necessary after a cast
#177: FILE: arch/um/kernel/skas/mem_user.c:64:
+		((unsigned long) &batch_syscall_stub - 

ERROR:SPACING: space required before the open parenthesis '('
#193: FILE: arch/um/kernel/skas/mem_user.c:67:
+	if(n < 0)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'do_syscall_stub', this function's name, in a string
#194: FILE: arch/um/kernel/skas/mem_user.c:68:
+		panic("do_syscall_stub : PTRACE_SETREGS failed, errno = %d\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:SPACING: No space is necessary after a cast
#204: FILE: arch/um/kernel/skas/mem_user.c:78:
+	ret = *((unsigned long *) mm_idp->stack);

CHECK:SPACING: No space is necessary after a cast
#205: FILE: arch/um/kernel/skas/mem_user.c:79:
+	offset = *((unsigned long *) mm_idp->stack + 1);

CHECK:BRACES: braces {} should be used on all arms of this statement
#206: FILE: arch/um/kernel/skas/mem_user.c:80:
+	if (offset) {
[...]
+	else ret = 0;
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#210: FILE: arch/um/kernel/skas/mem_user.c:84:
+		printk("do_syscall_stub: syscall %ld failed, return value = "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'do_syscall_stub', this function's name, in a string
#210: FILE: arch/um/kernel/skas/mem_user.c:84:
+		printk("do_syscall_stub: syscall %ld failed, return value = "

WARNING:SPLIT_STRING: quoted string split across lines
#211: FILE: arch/um/kernel/skas/mem_user.c:85:
+		printk("do_syscall_stub: syscall %ld failed, return value = "
+		       "0x%lx, expected return value = 0x%lx\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#213: FILE: arch/um/kernel/skas/mem_user.c:87:
+		printk("    syscall parameters: "

WARNING:SPLIT_STRING: quoted string split across lines
#214: FILE: arch/um/kernel/skas/mem_user.c:88:
+		printk("    syscall parameters: "
+		       "0x%lx 0x%lx 0x%lx 0x%lx 0x%lx 0x%lx\n",

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#217: FILE: arch/um/kernel/skas/mem_user.c:91:
+		for(n = 1; n < data[0]/sizeof(long); n++) {
 		                      ^

ERROR:SPACING: space required before the open parenthesis '('
#217: FILE: arch/um/kernel/skas/mem_user.c:91:
+		for(n = 1; n < data[0]/sizeof(long); n++) {

ERROR:SPACING: space required before the open parenthesis '('
#218: FILE: arch/um/kernel/skas/mem_user.c:92:
+			if(n == 1)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#219: FILE: arch/um/kernel/skas/mem_user.c:93:
+				printk("    additional syscall data:");

ERROR:SPACING: space required before the open parenthesis '('
#220: FILE: arch/um/kernel/skas/mem_user.c:94:
+			if(n % 4 == 1)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#221: FILE: arch/um/kernel/skas/mem_user.c:95:
+				printk("\n      ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#222: FILE: arch/um/kernel/skas/mem_user.c:96:
+			printk("  0x%lx", data[n]);

ERROR:SPACING: space required before the open parenthesis '('
#224: FILE: arch/um/kernel/skas/mem_user.c:98:
+		if(n > 1)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#225: FILE: arch/um/kernel/skas/mem_user.c:99:
+			printk("\n");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#227: FILE: arch/um/kernel/skas/mem_user.c:101:
+	else ret = 0;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#227: FILE: arch/um/kernel/skas/mem_user.c:101:
 	}
+	else ret = 0;

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#233: FILE: arch/um/kernel/skas/mem_user.c:104:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: arch/um/kernel/skas/mem_user.c:104:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#242: FILE: arch/um/kernel/skas/mem_user.c:108:
+long run_syscall_stub(struct mm_id * mm_idp, int syscall, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#242: FILE: arch/um/kernel/skas/mem_user.c:108:
+long run_syscall_stub(struct mm_id * mm_idp, int syscall, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#243: FILE: arch/um/kernel/skas/mem_user.c:109:
+^I^I      unsigned long *args, long expected, void **addr, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#244: FILE: arch/um/kernel/skas/mem_user.c:110:
+ ^I^I      int done)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#244: FILE: arch/um/kernel/skas/mem_user.c:110:
+ ^I^I      int done)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: arch/um/kernel/skas/mem_user.c:110:
+ ^I^I      int done)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#248: FILE: arch/um/kernel/skas/mem_user.c:112:
+ ^Iunsigned long *stack = check_init_stack(mm_idp, *addr);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#248: FILE: arch/um/kernel/skas/mem_user.c:112:
+ ^Iunsigned long *stack = check_init_stack(mm_idp, *addr);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: arch/um/kernel/skas/mem_user.c:112:
+ ^Iunsigned long *stack = check_init_stack(mm_idp, *addr);$

ERROR:SPACING: space required before the open parenthesis '('
#250: FILE: arch/um/kernel/skas/mem_user.c:114:
+	if(done && *addr == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!addr"
#250: FILE: arch/um/kernel/skas/mem_user.c:114:
+	if(done && *addr == NULL)

ERROR:CODE_INDENT: code indent should use tabs where possible
#253: FILE: arch/um/kernel/skas/mem_user.c:117:
+ ^I*stack += sizeof(long);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#253: FILE: arch/um/kernel/skas/mem_user.c:117:
+ ^I*stack += sizeof(long);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: arch/um/kernel/skas/mem_user.c:117:
+ ^I*stack += sizeof(long);$

ERROR:SPACING: space required before the open brace '{'
#273: FILE: arch/um/kernel/skas/mem_user.c:132:
+		     PAGE_SIZE - 10 * sizeof(long))){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#286: FILE: arch/um/kernel/skas/mem_user.c:139:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: arch/um/kernel/skas/mem_user.c:139:
+ $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#287: FILE: arch/um/kernel/skas/mem_user.c:140:
+long syscall_stub_data(struct mm_id * mm_idp,

CHECK:SPACING: No space is necessary after a cast
#303: FILE: arch/um/kernel/skas/mem_user.c:150:
+	if((((unsigned long) *addr) & ~PAGE_MASK) >=

ERROR:SPACING: space required before the open parenthesis '('
#303: FILE: arch/um/kernel/skas/mem_user.c:150:
+	if((((unsigned long) *addr) & ~PAGE_MASK) >=

ERROR:CODE_INDENT: code indent should use tabs where possible
#306: FILE: arch/um/kernel/skas/mem_user.c:153:
+ ^I^I/* in case of error, don't overwrite data on stack */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#306: FILE: arch/um/kernel/skas/mem_user.c:153:
+ ^I^I/* in case of error, don't overwrite data on stack */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: arch/um/kernel/skas/mem_user.c:153:
+ ^I^I/* in case of error, don't overwrite data on stack */$

ERROR:SPACING: space required before the open parenthesis '('
#307: FILE: arch/um/kernel/skas/mem_user.c:154:
+		if(ret)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#340: FILE: arch/um/kernel/skas/mem_user.c:170:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: arch/um/kernel/skas/mem_user.c:170:
+ $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#341: FILE: arch/um/kernel/skas/mem_user.c:171:
+int map(struct mm_id * mm_idp, unsigned long virt, unsigned long len,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#342: FILE: arch/um/kernel/skas/mem_user.c:172:
+^Iint r, int w, int x, int phys_fd, unsigned long long offset, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#346: FILE: arch/um/kernel/skas/mem_user.c:175:
+        int prot, ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: arch/um/kernel/skas/mem_user.c:175:
+        int prot, ret;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#358: FILE: arch/um/kernel/skas/mem_user.c:196:
+^I^Iif(ret != sizeof(map)) $

ERROR:SPACING: space required before the open parenthesis '('
#358: FILE: arch/um/kernel/skas/mem_user.c:196:
+		if(ret != sizeof(map)) 

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#359: FILE: arch/um/kernel/skas/mem_user.c:197:
+			printk("map : /proc/mm map failed, err = %d\n", -ret);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#360: FILE: arch/um/kernel/skas/mem_user.c:198:
+		else ret = 0;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#382: FILE: arch/um/kernel/skas/mem_user.c:212:
+int unmap(struct mm_id * mm_idp, void *addr, unsigned long len, int done,

ERROR:CODE_INDENT: code indent should use tabs where possible
#386: FILE: arch/um/kernel/skas/mem_user.c:215:
+        int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#386: FILE: arch/um/kernel/skas/mem_user.c:215:
+        int ret;$

ERROR:SPACING: space required before the open parenthesis '('
#398: FILE: arch/um/kernel/skas/mem_user.c:228:
+		if(ret != sizeof(unmap))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#399: FILE: arch/um/kernel/skas/mem_user.c:229:
+			printk("unmap - proc_mm write returned %d\n", ret);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#400: FILE: arch/um/kernel/skas/mem_user.c:230:
+		else ret = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#413: FILE: arch/um/kernel/skas/mem_user.c:238:
+                if(ret < 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#413: FILE: arch/um/kernel/skas/mem_user.c:238:
+                if(ret < 0)$

ERROR:SPACING: space required before the open parenthesis '('
#413: FILE: arch/um/kernel/skas/mem_user.c:238:
+                if(ret < 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#414: FILE: arch/um/kernel/skas/mem_user.c:239:
+                        printk("munmap stub failed, errno = %d\n", ret);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#414: FILE: arch/um/kernel/skas/mem_user.c:239:
+                        printk("munmap stub failed, errno = %d\n", ret);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#414: FILE: arch/um/kernel/skas/mem_user.c:239:
+                        printk("munmap stub failed, errno = %d\n", ret);

ERROR:CODE_INDENT: code indent should use tabs where possible
#418: FILE: arch/um/kernel/skas/mem_user.c:242:
+        return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#418: FILE: arch/um/kernel/skas/mem_user.c:242:
+        return ret;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#423: FILE: arch/um/kernel/skas/mem_user.c:245:
+int protect(struct mm_id * mm_idp, unsigned long addr, unsigned long len,

ERROR:CODE_INDENT: code indent should use tabs where possible
#428: FILE: arch/um/kernel/skas/mem_user.c:249:
+        int prot, ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#428: FILE: arch/um/kernel/skas/mem_user.c:249:
+        int prot, ret;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#439: FILE: arch/um/kernel/skas/mem_user.c:264:
+                ret = os_write_file(fd, &protect, sizeof(protect));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#439: FILE: arch/um/kernel/skas/mem_user.c:264:
+                ret = os_write_file(fd, &protect, sizeof(protect));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#440: FILE: arch/um/kernel/skas/mem_user.c:265:
+                if(ret != sizeof(protect))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#440: FILE: arch/um/kernel/skas/mem_user.c:265:
+                if(ret != sizeof(protect))$

ERROR:SPACING: space required before the open parenthesis '('
#440: FILE: arch/um/kernel/skas/mem_user.c:265:
+                if(ret != sizeof(protect))

ERROR:CODE_INDENT: code indent should use tabs where possible
#441: FILE: arch/um/kernel/skas/mem_user.c:266:
+                        printk("protect failed, err = %d", -ret);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: arch/um/kernel/skas/mem_user.c:266:
+                        printk("protect failed, err = %d", -ret);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#441: FILE: arch/um/kernel/skas/mem_user.c:266:
+                        printk("protect failed, err = %d", -ret);

ERROR:CODE_INDENT: code indent should use tabs where possible
#442: FILE: arch/um/kernel/skas/mem_user.c:267:
+                else ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#442: FILE: arch/um/kernel/skas/mem_user.c:267:
+                else ret = 0;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#442: FILE: arch/um/kernel/skas/mem_user.c:267:
+                else ret = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#452: FILE: arch/um/kernel/skas/mem_user.c:272:
+                ret = run_syscall_stub(mm_idp, __NR_mprotect, args, 0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#452: FILE: arch/um/kernel/skas/mem_user.c:272:
+                ret = run_syscall_stub(mm_idp, __NR_mprotect, args, 0,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#453: FILE: arch/um/kernel/skas/mem_user.c:273:
+                                       data, done);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#453: FILE: arch/um/kernel/skas/mem_user.c:273:
+                                       data, done);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#457: FILE: arch/um/kernel/skas/mem_user.c:276:
+        return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#457: FILE: arch/um/kernel/skas/mem_user.c:276:
+        return ret;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#476: FILE: arch/um/kernel/skas/tlb.c:25:
+        int i, ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: arch/um/kernel/skas/tlb.c:25:
+        int i, ret = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#479: FILE: arch/um/kernel/skas/tlb.c:27:
+        for(i = 0; i <= last && !ret; i++){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#479: FILE: arch/um/kernel/skas/tlb.c:27:
+        for(i = 0; i <= last && !ret; i++){$

ERROR:SPACING: space required before the open brace '{'
#479: FILE: arch/um/kernel/skas/tlb.c:27:
+        for(i = 0; i <= last && !ret; i++){

ERROR:SPACING: space required before the open parenthesis '('
#479: FILE: arch/um/kernel/skas/tlb.c:27:
+        for(i = 0; i <= last && !ret; i++){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#487: FILE: arch/um/kernel/skas/tlb.c:31:
+^I^I^Iret = map(&mmu->skas.id, op->u.mmap.addr, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#495: FILE: arch/um/kernel/skas/tlb.c:37:
+^I^I^Iret = unmap(&mmu->skas.id, $

CHECK:SPACING: No space is necessary after a cast
#496: FILE: arch/um/kernel/skas/tlb.c:38:
+				    (void *) op->u.munmap.addr,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#505: FILE: arch/um/kernel/skas/tlb.c:43:
+^I^I^I^I      op->u.mprotect.len, op->u.mprotect.r, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#506: FILE: arch/um/kernel/skas/tlb.c:44:
+^I^I^I^I      op->u.mprotect.w, op->u.mprotect.x, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#529: FILE: arch/um/kernel/tlb.c:19:
+ ^I^I    int r, int w, int x, struct host_vm_op *ops, int *index, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#529: FILE: arch/um/kernel/tlb.c:19:
+ ^I^I    int r, int w, int x, struct host_vm_op *ops, int *index, $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#529: FILE: arch/um/kernel/tlb.c:19:
+ ^I^I    int r, int w, int x, struct host_vm_op *ops, int *index, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#529: FILE: arch/um/kernel/tlb.c:19:
+ ^I^I    int r, int w, int x, struct host_vm_op *ops, int *index, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#533: FILE: arch/um/kernel/tlb.c:21:
+^I^I    int (*do_ops)(union mm_context *, struct host_vm_op *, $

ERROR:SPACING: space required before the open brace '{'
#544: FILE: arch/um/kernel/tlb.c:29:
+	if(*index != -1){

ERROR:SPACING: space required before the open parenthesis '('
#544: FILE: arch/um/kernel/tlb.c:29:
+	if(*index != -1){

ERROR:SPACING: space required before the open brace '{'
#560: FILE: arch/um/kernel/tlb.c:41:
+	if(*index == last_filled){

ERROR:SPACING: space required before the open parenthesis '('
#560: FILE: arch/um/kernel/tlb.c:41:
+	if(*index == last_filled){

ERROR:CODE_INDENT: code indent should use tabs where possible
#577: FILE: arch/um/kernel/tlb.c:47:
+^I^I^I     ^I^I^I.u = { .mmap = {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#577: FILE: arch/um/kernel/tlb.c:47:
+^I^I^I     ^I^I^I.u = { .mmap = {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#595: FILE: arch/um/kernel/tlb.c:62:
+^I^I      int (*do_ops)(union mm_context *, struct host_vm_op *, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#603: FILE: arch/um/kernel/tlb.c:67:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#603: FILE: arch/um/kernel/tlb.c:67:
+  $

ERROR:SPACING: space required before the open brace '{'
#604: FILE: arch/um/kernel/tlb.c:68:
+	if(*index != -1){

ERROR:SPACING: space required before the open parenthesis '('
#604: FILE: arch/um/kernel/tlb.c:68:
+	if(*index != -1){

ERROR:SPACING: space required before the open brace '{'
#617: FILE: arch/um/kernel/tlb.c:77:
+	if(*index == last_filled){

ERROR:SPACING: space required before the open parenthesis '('
#617: FILE: arch/um/kernel/tlb.c:77:
+	if(*index == last_filled){

ERROR:CODE_INDENT: code indent should use tabs where possible
#628: FILE: arch/um/kernel/tlb.c:83:
+^I^I^I     ^I^I       .u = { .munmap = {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#628: FILE: arch/um/kernel/tlb.c:83:
+^I^I^I     ^I^I       .u = { .munmap = {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#629: FILE: arch/um/kernel/tlb.c:84:
+^I^I^I^I^I^I        .addr^I= addr,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#636: FILE: arch/um/kernel/tlb.c:90:
+^I^I^Iint x, struct host_vm_op *ops, int *index, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#640: FILE: arch/um/kernel/tlb.c:92:
+ ^I^I^Iint (*do_ops)(union mm_context *, struct host_vm_op *,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#640: FILE: arch/um/kernel/tlb.c:92:
+ ^I^I^Iint (*do_ops)(union mm_context *, struct host_vm_op *,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#640: FILE: arch/um/kernel/tlb.c:92:
+ ^I^I^Iint (*do_ops)(union mm_context *, struct host_vm_op *,$

ERROR:SPACING: space required before the open brace '{'
#648: FILE: arch/um/kernel/tlb.c:98:
+	if(*index != -1){

ERROR:SPACING: space required before the open parenthesis '('
#648: FILE: arch/um/kernel/tlb.c:98:
+	if(*index != -1){

ERROR:SPACING: space required before the open brace '{'
#663: FILE: arch/um/kernel/tlb.c:109:
+	if(*index == last_filled){

ERROR:SPACING: space required before the open parenthesis '('
#663: FILE: arch/um/kernel/tlb.c:109:
+	if(*index == last_filled){

ERROR:CODE_INDENT: code indent should use tabs where possible
#677: FILE: arch/um/kernel/tlb.c:115:
+^I^I^I     ^I^I       .u = { .mprotect = {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#677: FILE: arch/um/kernel/tlb.c:115:
+^I^I^I     ^I^I       .u = { .mprotect = {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#692: FILE: arch/um/kernel/tlb.c:128:
+^I^I      int (*do_ops)(union mm_context *, struct host_vm_op *, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#701: FILE: arch/um/kernel/tlb.c:141:
+        int ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#701: FILE: arch/um/kernel/tlb.c:141:
+        int ret = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#707: FILE: arch/um/kernel/tlb.c:146:
+        for(addr = start_addr; addr < end_addr && !ret;){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#707: FILE: arch/um/kernel/tlb.c:146:
+        for(addr = start_addr; addr < end_addr && !ret;){$

ERROR:SPACING: space required before the open brace '{'
#707: FILE: arch/um/kernel/tlb.c:146:
+        for(addr = start_addr; addr < end_addr && !ret;){

ERROR:SPACING: space required before the open parenthesis '('
#707: FILE: arch/um/kernel/tlb.c:146:
+        for(addr = start_addr; addr < end_addr && !ret;){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#717: FILE: arch/um/kernel/tlb.c:153:
+                                ret = add_munmap(addr, end - addr, ops, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#717: FILE: arch/um/kernel/tlb.c:153:
+                                ret = add_munmap(addr, end - addr, ops, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#717: FILE: arch/um/kernel/tlb.c:153:
+                                ret = add_munmap(addr, end - addr, ops, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#718: FILE: arch/um/kernel/tlb.c:154:
+                                                 &op_index, last_op, mmu,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#718: FILE: arch/um/kernel/tlb.c:154:
+                                                 &op_index, last_op, mmu,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#719: FILE: arch/um/kernel/tlb.c:155:
+                                                 &flush, do_ops);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#719: FILE: arch/um/kernel/tlb.c:155:
+                                                 &flush, do_ops);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#730: FILE: arch/um/kernel/tlb.c:168:
+                                ret = add_munmap(addr, end - addr, ops, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#730: FILE: arch/um/kernel/tlb.c:168:
+                                ret = add_munmap(addr, end - addr, ops, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#730: FILE: arch/um/kernel/tlb.c:168:
+                                ret = add_munmap(addr, end - addr, ops, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#731: FILE: arch/um/kernel/tlb.c:169:
+                                                 &op_index, last_op, mmu,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#731: FILE: arch/um/kernel/tlb.c:169:
+                                                 &op_index, last_op, mmu,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#732: FILE: arch/um/kernel/tlb.c:170:
+                                                 &flush, do_ops);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#732: FILE: arch/um/kernel/tlb.c:170:
+                                                 &flush, do_ops);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#743: FILE: arch/um/kernel/tlb.c:183:
+                                ret = add_munmap(addr, end - addr, ops, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#743: FILE: arch/um/kernel/tlb.c:183:
+                                ret = add_munmap(addr, end - addr, ops, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#743: FILE: arch/um/kernel/tlb.c:183:
+                                ret = add_munmap(addr, end - addr, ops, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#744: FILE: arch/um/kernel/tlb.c:184:
+                                                 &op_index, last_op, mmu,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#744: FILE: arch/um/kernel/tlb.c:184:
+                                                 &op_index, last_op, mmu,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#745: FILE: arch/um/kernel/tlb.c:185:
+                                                 &flush, do_ops);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#745: FILE: arch/um/kernel/tlb.c:185:
+                                                 &flush, do_ops);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 26)
#752: FILE: arch/um/kernel/tlb.c:203:
                         if(pte_present(*npte))
+			  ret = add_mmap(addr, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#761: FILE: arch/um/kernel/tlb.c:204:
+^I^I^I  ret = add_mmap(addr, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#763: FILE: arch/um/kernel/tlb.c:206:
+^I^I^I^I^I PAGE_SIZE, r, w, x, ops, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#766: FILE: arch/um/kernel/tlb.c:209:
+^I^I^Ielse ret = add_munmap(addr, PAGE_SIZE, ops, $

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#766: FILE: arch/um/kernel/tlb.c:209:
+			else ret = add_munmap(addr, PAGE_SIZE, ops, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#767: FILE: arch/um/kernel/tlb.c:210:
+^I^I^I^I^I      &op_index, last_op, mmu, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#774: FILE: arch/um/kernel/tlb.c:214:
+^I^I^Iret = add_mprotect(addr, PAGE_SIZE, r, w, x, ops, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#782: FILE: arch/um/kernel/tlb.c:221:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#782: FILE: arch/um/kernel/tlb.c:221:
+ $

ERROR:SPACING: space required before the open parenthesis '('
#783: FILE: arch/um/kernel/tlb.c:222:
+	if(!ret)

ERROR:SPACING: space required before the open parenthesis '('
#787: FILE: arch/um/kernel/tlb.c:226:
+	if(ret) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#788: FILE: arch/um/kernel/tlb.c:227:
+		printk("fix_range_common: failed, killing current process\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#805: FILE: arch/um/kernel/tt/tlb.c:21:
+static int do_ops(union mm_context *mmu, struct host_vm_op *ops, int last,
+		    int finished, void **flush)

ERROR:CODE_INDENT: code indent should use tabs where possible
#809: FILE: arch/um/kernel/tt/tlb.c:24:
+        int i, ret=0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#809: FILE: arch/um/kernel/tt/tlb.c:24:
+        int i, ret=0;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#809: FILE: arch/um/kernel/tt/tlb.c:24:
+        int i, ret=0;
                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#812: FILE: arch/um/kernel/tt/tlb.c:26:
+        for(i = 0; i <= last && !ret; i++){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#812: FILE: arch/um/kernel/tt/tlb.c:26:
+        for(i = 0; i <= last && !ret; i++){$

ERROR:SPACING: space required before the open brace '{'
#812: FILE: arch/um/kernel/tt/tlb.c:26:
+        for(i = 0; i <= last && !ret; i++){

ERROR:SPACING: space required before the open parenthesis '('
#812: FILE: arch/um/kernel/tt/tlb.c:26:
+        for(i = 0; i <= last && !ret; i++){

ERROR:CODE_INDENT: code indent should use tabs where possible
#820: FILE: arch/um/kernel/tt/tlb.c:30:
+                        ret = os_map_memory((void *) op->u.mmap.addr,$

CHECK:SPACING: No space is necessary after a cast
#820: FILE: arch/um/kernel/tt/tlb.c:30:
+                        ret = os_map_memory((void *) op->u.mmap.addr,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#820: FILE: arch/um/kernel/tt/tlb.c:30:
+                        ret = os_map_memory((void *) op->u.mmap.addr,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#821: FILE: arch/um/kernel/tt/tlb.c:31:
+                                            op->u.mmap.fd, op->u.mmap.offset,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#821: FILE: arch/um/kernel/tt/tlb.c:31:
+                                            op->u.mmap.fd, op->u.mmap.offset,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#822: FILE: arch/um/kernel/tt/tlb.c:32:
+                                            op->u.mmap.len, op->u.mmap.r,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#822: FILE: arch/um/kernel/tt/tlb.c:32:
+                                            op->u.mmap.len, op->u.mmap.r,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#823: FILE: arch/um/kernel/tt/tlb.c:33:
+                                            op->u.mmap.w, op->u.mmap.x);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#823: FILE: arch/um/kernel/tt/tlb.c:33:
+                                            op->u.mmap.w, op->u.mmap.x);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#828: FILE: arch/um/kernel/tt/tlb.c:36:
+                        ret = os_unmap_memory((void *) op->u.munmap.addr, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#828: FILE: arch/um/kernel/tt/tlb.c:36:
+                        ret = os_unmap_memory((void *) op->u.munmap.addr, $

CHECK:SPACING: No space is necessary after a cast
#828: FILE: arch/um/kernel/tt/tlb.c:36:
+                        ret = os_unmap_memory((void *) op->u.munmap.addr, 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#828: FILE: arch/um/kernel/tt/tlb.c:36:
+                        ret = os_unmap_memory((void *) op->u.munmap.addr, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#829: FILE: arch/um/kernel/tt/tlb.c:37:
+                                              op->u.munmap.len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#829: FILE: arch/um/kernel/tt/tlb.c:37:
+                                              op->u.munmap.len);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#832: FILE: arch/um/kernel/tt/tlb.c:40:
+                        ret = protect_memory(op->u.mprotect.addr,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#832: FILE: arch/um/kernel/tt/tlb.c:40:
+                        ret = protect_memory(op->u.mprotect.addr,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#833: FILE: arch/um/kernel/tt/tlb.c:41:
+                                             op->u.munmap.len, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#833: FILE: arch/um/kernel/tt/tlb.c:41:
+                                             op->u.munmap.len, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#833: FILE: arch/um/kernel/tt/tlb.c:41:
+                                             op->u.munmap.len, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#834: FILE: arch/um/kernel/tt/tlb.c:42:
+                                             op->u.mprotect.r,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#834: FILE: arch/um/kernel/tt/tlb.c:42:
+                                             op->u.mprotect.r,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#835: FILE: arch/um/kernel/tt/tlb.c:43:
+                                             op->u.mprotect.w, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#835: FILE: arch/um/kernel/tt/tlb.c:43:
+                                             op->u.mprotect.w, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#835: FILE: arch/um/kernel/tt/tlb.c:43:
+                                             op->u.mprotect.w, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#836: FILE: arch/um/kernel/tt/tlb.c:44:
+                                             op->u.mprotect.x, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#836: FILE: arch/um/kernel/tt/tlb.c:44:
+                                             op->u.mprotect.x, 1);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#938: FILE: arch/um/sys-x86_64/stub.S:29:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000155222.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 146 errors, 86 warnings, 18 checks, 873 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000155222.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
