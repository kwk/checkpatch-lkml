WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#112: FILE: mm/hugetlb.c:388:
+			 * write. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#133: FILE: mm/hugetlb.c:405:
+			 * and shared */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#135: FILE: mm/hugetlb.c:407:
+			writable = (vma->vm_flags & VM_SHARED)
+				&& (vma->vm_flags & VM_WRITE);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#157: FILE: mm/hugetlb.c:474:
+	 * and just make the page writable */

WARNING:LINE_SPACING: Missing a blank line after declarations
#160: FILE: mm/hugetlb.c:477:
+		int avoidcopy = (page_count(old_page) == 1);
+		unlock_page(old_page);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#174: FILE: mm/hugetlb.c:491:
+	if (! new_page) {
 	    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#180: FILE: mm/hugetlb.c:497:
+		 * at all (?) */

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#184: FILE: mm/hugetlb.c:501:
+	for (i = 0; i < HPAGE_SIZE/PAGE_SIZE; i++)
 	                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#186: FILE: mm/hugetlb.c:503:
+				   address + i*PAGE_SIZE);
 				              ^

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#215: FILE: mm/hugetlb.c:532:
+	if ( (! ptep) || pte_none(*ptep))
 	      ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#215: FILE: mm/hugetlb.c:532:
+	if ( (! ptep) || pte_none(*ptep))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '! ptep'
#215: FILE: mm/hugetlb.c:532:
+	if ( (! ptep) || pte_none(*ptep))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#220: FILE: mm/hugetlb.c:537:
+	if (! (write_access && !pte_write(*ptep))) {
 	    ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#221: FILE: mm/hugetlb.c:538:
+		printk(KERN_WARNING "Unexpected hugepte fault (wr=%d hugepte=%08lx\n",

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#256: FILE: include/linux/hugetlb.h:28:
+int hugetlb_fault(struct mm_struct *mm, struct vm_area_struct * vma,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000169974.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 6 warnings, 4 checks, 231 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000169974.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
