WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
diff -Nru a/drivers/scsi/aic7xxx/aic7xxx_linux.c b/drivers/scsi/aic7xxx/aic7xxx_linux.c

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#41: 
--- a/drivers/scsi/aic7xxx/aic7xxx_linux.c	Mon Sep 16 15:29:45 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:CODE_INDENT: code indent should use tabs where possible
#87: FILE: drivers/scsi/aic7xxx/aic7xxx_linux.c:1520:
+^I       ^I       ahc->platform_data->host->host_no, scsi_path.spi_channel + 'A',$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#87: FILE: drivers/scsi/aic7xxx/aic7xxx_linux.c:1520:
+^I       ^I       ahc->platform_data->host->host_no, scsi_path.spi_channel + 'A',$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: drivers/scsi/ips.c:1861:
+   struct Scsi_Host *host;$

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#120: FILE: drivers/scsi/ips.c:1861:
+   struct Scsi_Host *host;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: drivers/scsi/ips.c:1865:
+   host = scsi_get_host(disk->device);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: drivers/scsi/ips.c:1866:
+   if (host == NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 6)
#126: FILE: drivers/scsi/ips.c:1866:
+   if (host == NULL)
+      return (0);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!host"
#126: FILE: drivers/scsi/ips.c:1866:
+   if (host == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: drivers/scsi/ips.c:1867:
+      return (0);$

CHECK:SPACING: No space is necessary after a cast
#129: FILE: drivers/scsi/ips.c:1869:
+   ha = (ips_ha_t *) host->hostdata;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: drivers/scsi/ips.c:1869:
+   ha = (ips_ha_t *) host->hostdata;$

CHECK:CAMELCASE: Avoid CamelCase: <Cmnd>
#150: FILE: drivers/scsi/qlogicfc.c:1160:
+		Cmnd->result = DID_NO_CONNECT << 16;

CHECK:SPACING: No space is necessary after a cast
#163: FILE: drivers/scsi/qlogicfc.c:1481:
+			do_isp2x00_flush_all_SCSI_cmds((unsigned long) host);

ERROR:CODE_INDENT: code indent should use tabs where possible
#177: FILE: drivers/scsi/qlogicfc.c:2241:
+        struct Scsi_Host * host = (struct Scsi_Host *) arg;$

CHECK:SPACING: No space is necessary after a cast
#177: FILE: drivers/scsi/qlogicfc.c:2241:
+        struct Scsi_Host * host = (struct Scsi_Host *) arg;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: drivers/scsi/qlogicfc.c:2241:
+        struct Scsi_Host * host = (struct Scsi_Host *) arg;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#177: FILE: drivers/scsi/qlogicfc.c:2241:
+        struct Scsi_Host * host = (struct Scsi_Host *) arg;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#178: FILE: drivers/scsi/qlogicfc.c:2242:
+	struct isp2x00_hostdata * hostdata;

CHECK:SPACING: No space is necessary after a cast
#181: FILE: drivers/scsi/qlogicfc.c:2245:
+	hostdata = (struct isp2x00_hostdata *) host->hostdata;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#183: FILE: drivers/scsi/qlogicfc.c:2247:
+	printk("qlogicfc%d : Flushing all SCSI commands?\n", hostdata->host_id);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#184: FILE: drivers/scsi/qlogicfc.c:2248:
+^Ifor (i = 0; i < QLOGICFC_REQ_QUEUE_LEN; i++){ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open brace '{'
#184: FILE: drivers/scsi/qlogicfc.c:2248:
+	for (i = 0; i < QLOGICFC_REQ_QUEUE_LEN; i++){ 

ERROR:SPACING: space required before the open brace '{'
#185: FILE: drivers/scsi/qlogicfc.c:2249:
+		if (hostdata->handle_ptrs[i] ){

ERROR:SPACING: space prohibited before that close parenthesis ')'
#185: FILE: drivers/scsi/qlogicfc.c:2249:
+		if (hostdata->handle_ptrs[i] ){

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Cmnd>
#186: FILE: drivers/scsi/qlogicfc.c:2250:
+			Scsi_Cmnd *Cmnd = hostdata->handle_ptrs[i];

WARNING:TABSTOP: Statements should start on a tabstop
#188: FILE: drivers/scsi/qlogicfc.c:2252:
+			 if (Cmnd->use_sg)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (25, 33)
#188: FILE: drivers/scsi/qlogicfc.c:2252:
+			 if (Cmnd->use_sg)
+				 pci_unmap_sg(hostdata->pci_dev,

WARNING:TABSTOP: Statements should start on a tabstop
#193: FILE: drivers/scsi/qlogicfc.c:2257:
+			 else if (Cmnd->request_bufflen &&

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (25, 33)
#193: FILE: drivers/scsi/qlogicfc.c:2257:
+			 else if (Cmnd->request_bufflen &&
[...]
+				 pci_unmap_page(hostdata->pci_dev,

CHECK:CAMELCASE: Avoid CamelCase: <SCp>
#196: FILE: drivers/scsi/qlogicfc.c:2260:
+						Cmnd->SCp.dma_handle,

WARNING:TABSTOP: Statements should start on a tabstop
#199: FILE: drivers/scsi/qlogicfc.c:2263:
+			 }

WARNING:TABSTOP: Statements should start on a tabstop
#203: FILE: drivers/scsi/qlogicfc.c:2267:
+			 if (Cmnd->scsi_done){

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (25, 27)
#203: FILE: drivers/scsi/qlogicfc.c:2267:
+			 if (Cmnd->scsi_done){
+			   (*Cmnd->scsi_done) (Cmnd);

ERROR:SPACING: space required before the open brace '{'
#203: FILE: drivers/scsi/qlogicfc.c:2267:
+			 if (Cmnd->scsi_done){

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#203: FILE: drivers/scsi/qlogicfc.c:2267:
+			 if (Cmnd->scsi_done){
[...]
+			 else printk("qlogicfc%d : done is null?\n", hostdata->host_id);
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TABSTOP: Statements should start on a tabstop
#205: FILE: drivers/scsi/qlogicfc.c:2269:
+			 }

WARNING:TABSTOP: Statements should start on a tabstop
#206: FILE: drivers/scsi/qlogicfc.c:2270:
+			 else printk("qlogicfc%d : done is null?\n", hostdata->host_id);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#206: FILE: drivers/scsi/qlogicfc.c:2270:
+			 else printk("qlogicfc%d : done is null?\n", hostdata->host_id);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#206: FILE: drivers/scsi/qlogicfc.c:2270:
+			 else printk("qlogicfc%d : done is null?\n", hostdata->host_id);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#206: FILE: drivers/scsi/qlogicfc.c:2270:
+			 }
+			 else printk("qlogicfc%d : done is null?\n", hostdata->host_id);

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000431951.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 21 warnings, 9 checks, 156 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000431951.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
