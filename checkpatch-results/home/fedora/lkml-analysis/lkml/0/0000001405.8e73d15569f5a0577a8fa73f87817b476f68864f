WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#85: FILE: arch/s390/hypfs/inode.c:137:
+static ssize_t hypfs_aio_read(struct file *filp, const struct iovec *iov,
                                            ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#108: FILE: arch/s390/hypfs/inode.c:170:
 }
+static ssize_t hypfs_aio_write(struct file *file, const struct iovec *iov,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#109: FILE: arch/s390/hypfs/inode.c:171:
+static ssize_t hypfs_aio_write(struct file *file, const struct iovec *iov,
+			      unsigned long nr_segs, loff_t *ppos,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#164: FILE: drivers/net/tun.c:292:
+static ssize_t tun_chr_aio_write(struct file *file, const struct iovec *iv,
+			      unsigned long count, loff_t *ppos,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#179: FILE: drivers/net/tun.c:339:
+static ssize_t tun_chr_aio_read(struct file *file, const struct iovec *iv,
+			    unsigned long count, loff_t *ppos,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#195: FILE: fs/aio.c:1320:
+	ssize_t (*rw_op)(struct file *, const struct iovec *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iovec *' should also have an identifier name
#195: FILE: fs/aio.c:1320:
+	ssize_t (*rw_op)(struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#195: FILE: fs/aio.c:1320:
+	ssize_t (*rw_op)(struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#195: FILE: fs/aio.c:1320:
+	ssize_t (*rw_op)(struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'file_endio_t *' should also have an identifier name
#195: FILE: fs/aio.c:1320:
+	ssize_t (*rw_op)(struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#195: FILE: fs/aio.c:1320:
+	ssize_t (*rw_op)(struct file *, const struct iovec *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#237: FILE: fs/bad_inode.c:38:
+static ssize_t bad_file_aio_read(struct file *file, const struct iovec *iov,
+			unsigned long nr_segs, loff_t *ppos,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#246: FILE: fs/bad_inode.c:45:
+static ssize_t bad_file_aio_write(struct file *file, const struct iovec *iov,
+			unsigned long nr_segs, loff_t *ppos,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#368: FILE: fs/ecryptfs/file.c:104:
+static ssize_t ecryptfs_read_update_atime(struct file *file,
 				const struct iovec *iov,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#457: FILE: fs/fuse/dev.c:684:
+static ssize_t fuse_dev_read(struct file *file, const struct iovec *iov,
+			      unsigned long nr_segs, loff_t *ppos,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#476: FILE: fs/fuse/dev.c:810:
+static ssize_t fuse_dev_write(struct file *file, const struct iovec *iov,
+			       unsigned long nr_segs, loff_t *ppos,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#501: FILE: fs/nfs/file.c:45:
+static ssize_t nfs_file_read(struct file *, const struct iovec *iov,
+				unsigned long nr_segs, loff_t *ppos,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#504: FILE: fs/nfs/file.c:48:
+static ssize_t nfs_file_write(struct file *file, const struct iovec *iov,
+				unsigned long nr_segs, loff_t *ppos,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#516: FILE: fs/nfs/file.c:204:
+nfs_file_read(struct file *file, const struct iovec *iov,
+		unsigned long nr_segs, loff_t *ppos,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#520: FILE: fs/nfs/file.c:207:
+	struct dentry * dentry = file->f_path.dentry;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#537: FILE: fs/nfs/file.c:220:
+		(unsigned long) count, (unsigned long) *ppos);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#556: FILE: fs/nfs/file.c:349:
+static ssize_t nfs_file_write(struct file *file, const struct iovec *iov,
+				unsigned long nr_segs, loff_t *ppos,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#560: FILE: fs/nfs/file.c:352:
+	struct dentry * dentry = file->f_path.dentry;

CHECK:SPACING: No space is necessary after a cast
#577: FILE: fs/nfs/file.c:365:
+		inode->i_ino, (unsigned long) count, (long long) *ppos);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#616: FILE: fs/ntfs/file.c:1812:
+static ssize_t ntfs_file_buffered_write(struct file *file,
 		const struct iovec *iov, unsigned long nr_segs,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#641: FILE: fs/ntfs/file.c:2127:
+static ssize_t ntfs_file_aio_write_nolock(struct file *file,
+		const struct iovec *iov, unsigned long nr_segs, loff_t *ppos,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#655: FILE: fs/ntfs/file.c:2170:
+	written = ntfs_file_buffered_write(file, iov, nr_segs, pos, ppos,
+			count, endio, endio_data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#666: FILE: fs/ntfs/file.c:2180:
+static ssize_t ntfs_file_aio_write(struct file *file, const struct iovec *iov,
+		unsigned long nr_segs, loff_t *ppos, file_endio_t *endio,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#747: FILE: fs/ocfs2/file.c:1144:
+static ssize_t ocfs2_file_aio_write(struct file *filp,
                                                  ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#766: FILE: fs/ocfs2/file.c:1181:
+	ret = ocfs2_prepare_inode_for_write(filp->f_path.dentry, ppos,
 					iov_length(iov, nr_segs), appending);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#773: FILE: fs/ocfs2/file.c:1187:
+	ret = generic_file_aio_write_nolock(filp, iov, nr_segs, ppos,
 	                                    ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#783: FILE: fs/ocfs2/file.c:1291:
+static ssize_t ocfs2_file_aio_read(struct file *filp,
                                                 ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#801: FILE: fs/ocfs2/file.c:1344:
+	ret = generic_file_aio_read(filp, iov, nr_segs, ppos,
 	                            ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#815: FILE: fs/pipe.c:221:
+pipe_read(struct file *filp, const struct iovec *_iov,
                        ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#816: FILE: fs/pipe.c:222:
+pipe_read(struct file *filp, const struct iovec *_iov,
+	   unsigned long nr_segs, loff_t *ppos,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#829: FILE: fs/pipe.c:334:
+pipe_write(struct file *filp, const struct iovec *_iov,
                         ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#830: FILE: fs/pipe.c:335:
+pipe_write(struct file *filp, const struct iovec *_iov,
+	    unsigned long nr_segs, loff_t *ppos,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#875: FILE: fs/read_write.c:224:
+	return filp->f_op->aio_read(filp, &iov, 1, ppos, NULL, NULL);
 	                            ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#901: FILE: fs/read_write.c:266:
+	return filp->f_op->aio_write(filp, &iov, 1, ppos, NULL, NULL);
 	                             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#911: FILE: fs/read_write.c:411:
+ssize_t do_loop_readv_writev(int type, struct file *filp, struct iovec *iov,
                                                     ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#912: FILE: fs/read_write.c:412:
+ssize_t do_loop_readv_writev(int type, struct file *filp, struct iovec *iov,
+		unsigned long nr_segs, loff_t *ppos, size_t count)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#939: FILE: fs/read_write.c:421:
+	ret = rw_verify_area(type, filp, ppos, count);
 	                           ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#949: FILE: fs/read_write.c:425:
+	ret = security_file_permission(filp, type == READ ? MAY_READ : MAY_WRITE);
 	                               ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#955: FILE: fs/read_write.c:431:
+			ret = filp->f_op->aio_read(filp, iov, nr_segs, ppos,
 			                           ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#960: FILE: fs/read_write.c:436:
+			ret = filp->f_op->aio_write(filp, iov, nr_segs, ppos,
 			                            ^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type == READ'
#979: FILE: fs/read_write.c:468:
+	if ((ret + (type == READ)) > 0) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1022: FILE: fs/read_write.c:495:
+		*ret_ptr = kmalloc(nr_segs*sizeof(struct iovec), GFP_KERNEL);
 		                          ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ret_ptr"
#1023: FILE: fs/read_write.c:496:
+		if (*ret_ptr == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#1026: FILE: fs/read_write.c:499:
+  ^Ireturn 0;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1026: FILE: fs/read_write.c:499:
+  ^Ireturn 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1026: FILE: fs/read_write.c:499:
+  ^Ireturn 0;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1029: FILE: fs/read_write.c:502:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1030: FILE: fs/read_write.c:503:
+ssize_t rw_copy_check_uvector(int type, const struct iovec __user * uvector,

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1055: FILE: fs/read_write.c:513:
+	if (copy_from_user(iov, uvector, nr_segs*sizeof(*uvector)))
 	                                        ^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1166: FILE: fs/read_write.h:9:
+ssize_t do_loop_readv_writev(int type, struct file *filp, struct iovec *iov,
                                                     ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1167: FILE: fs/read_write.h:10:
+ssize_t do_loop_readv_writev(int type, struct file *filp, struct iovec *iov,
+		unsigned long nr_segs, loff_t *ppos, size_t count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1178: FILE: fs/smbfs/file.c:218:
+smb_file_aio_read(struct file *file, const struct iovec *iov,
+			unsigned long nr_segs, loff_t *ppos,

CHECK:SPACING: No space is necessary after a cast
#1187: FILE: fs/smbfs/file.c:225:
+		(unsigned long) iov_length(iov, nr_segs), (unsigned long) *ppos);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1208: FILE: fs/smbfs/file.c:324:
+smb_file_aio_write(struct file *file, const struct iovec *iov,
+			       unsigned long nr_segs, loff_t *ppos,

CHECK:SPACING: No space is necessary after a cast
#1218: FILE: fs/smbfs/file.c:332:
+		(unsigned long) iov_length(iov, nr_segs), (unsigned long) *ppos);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1242: FILE: fs/udf/file.c:106:
+static ssize_t udf_file_aio_write(struct file *file, const struct iovec *iov,
+			      unsigned long nr_segs, loff_t *ppos,

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1325: FILE: fs/xfs/linux-2.6/xfs_file.c:89:
+	return __xfs_file_read(file, iov, nr_segs, IO_ISAIO|IO_INVIS, ppos,
 	                                                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1382: FILE: fs/xfs/linux-2.6/xfs_file.c:134:
+	return __xfs_file_write(file, iov, nr_segs, IO_ISAIO|IO_INVIS, ppos,
 	                                                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1455: FILE: fs/xfs/linux-2.6/xfs_lrw.c:861:
+		ret = generic_file_buffered_write(file, iovp, segs,
+				pos, offset, endio, endio_data, count, ret);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1474: FILE: fs/xfs/linux-2.6/xfs_lrw.h:87:
+extern ssize_t xfs_read(struct bhv_desc *, struct file *,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bhv_desc *' should also have an identifier name
#1474: FILE: fs/xfs/linux-2.6/xfs_lrw.h:87:
+extern ssize_t xfs_read(struct bhv_desc *, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#1474: FILE: fs/xfs/linux-2.6/xfs_lrw.h:87:
+extern ssize_t xfs_read(struct bhv_desc *, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iovec *' should also have an identifier name
#1474: FILE: fs/xfs/linux-2.6/xfs_lrw.h:87:
+extern ssize_t xfs_read(struct bhv_desc *, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#1474: FILE: fs/xfs/linux-2.6/xfs_lrw.h:87:
+extern ssize_t xfs_read(struct bhv_desc *, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#1474: FILE: fs/xfs/linux-2.6/xfs_lrw.h:87:
+extern ssize_t xfs_read(struct bhv_desc *, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'file_endio_t *' should also have an identifier name
#1474: FILE: fs/xfs/linux-2.6/xfs_lrw.h:87:
+extern ssize_t xfs_read(struct bhv_desc *, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1474: FILE: fs/xfs/linux-2.6/xfs_lrw.h:87:
+extern ssize_t xfs_read(struct bhv_desc *, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1474: FILE: fs/xfs/linux-2.6/xfs_lrw.h:87:
+extern ssize_t xfs_read(struct bhv_desc *, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cred *' should also have an identifier name
#1474: FILE: fs/xfs/linux-2.6/xfs_lrw.h:87:
+extern ssize_t xfs_read(struct bhv_desc *, struct file *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1475: FILE: fs/xfs/linux-2.6/xfs_lrw.h:88:
+extern ssize_t xfs_read(struct bhv_desc *, struct file *,
 				const struct iovec *, unsigned int,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1480: FILE: fs/xfs/linux-2.6/xfs_lrw.h:91:
+extern ssize_t xfs_write(struct bhv_desc *, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bhv_desc *' should also have an identifier name
#1480: FILE: fs/xfs/linux-2.6/xfs_lrw.h:91:
+extern ssize_t xfs_write(struct bhv_desc *, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#1480: FILE: fs/xfs/linux-2.6/xfs_lrw.h:91:
+extern ssize_t xfs_write(struct bhv_desc *, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iovec *' should also have an identifier name
#1480: FILE: fs/xfs/linux-2.6/xfs_lrw.h:91:
+extern ssize_t xfs_write(struct bhv_desc *, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#1480: FILE: fs/xfs/linux-2.6/xfs_lrw.h:91:
+extern ssize_t xfs_write(struct bhv_desc *, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#1480: FILE: fs/xfs/linux-2.6/xfs_lrw.h:91:
+extern ssize_t xfs_write(struct bhv_desc *, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'file_endio_t *' should also have an identifier name
#1480: FILE: fs/xfs/linux-2.6/xfs_lrw.h:91:
+extern ssize_t xfs_write(struct bhv_desc *, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1480: FILE: fs/xfs/linux-2.6/xfs_lrw.h:91:
+extern ssize_t xfs_write(struct bhv_desc *, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1480: FILE: fs/xfs/linux-2.6/xfs_lrw.h:91:
+extern ssize_t xfs_write(struct bhv_desc *, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cred *' should also have an identifier name
#1480: FILE: fs/xfs/linux-2.6/xfs_lrw.h:91:
+extern ssize_t xfs_write(struct bhv_desc *, struct file *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1481: FILE: fs/xfs/linux-2.6/xfs_lrw.h:92:
+extern ssize_t xfs_write(struct bhv_desc *, struct file *,
 				const struct iovec *, unsigned int,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1518: FILE: fs/xfs/linux-2.6/xfs_vnode.h:255:
+#define bhv_vop_read(vp,file,iov,segs,offset,endio,endio_data,ioflags,cr) \
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1518: FILE: fs/xfs/linux-2.6/xfs_vnode.h:255:
+#define bhv_vop_read(vp,file,iov,segs,offset,endio,endio_data,ioflags,cr) \
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1518: FILE: fs/xfs/linux-2.6/xfs_vnode.h:255:
+#define bhv_vop_read(vp,file,iov,segs,offset,endio,endio_data,ioflags,cr) \
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1518: FILE: fs/xfs/linux-2.6/xfs_vnode.h:255:
+#define bhv_vop_read(vp,file,iov,segs,offset,endio,endio_data,ioflags,cr) \
                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1518: FILE: fs/xfs/linux-2.6/xfs_vnode.h:255:
+#define bhv_vop_read(vp,file,iov,segs,offset,endio,endio_data,ioflags,cr) \
                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1518: FILE: fs/xfs/linux-2.6/xfs_vnode.h:255:
+#define bhv_vop_read(vp,file,iov,segs,offset,endio,endio_data,ioflags,cr) \
                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1518: FILE: fs/xfs/linux-2.6/xfs_vnode.h:255:
+#define bhv_vop_read(vp,file,iov,segs,offset,endio,endio_data,ioflags,cr) \
                                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1518: FILE: fs/xfs/linux-2.6/xfs_vnode.h:255:
+#define bhv_vop_read(vp,file,iov,segs,offset,endio,endio_data,ioflags,cr) \
                                                                      ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'vp' - possible side-effects?
#1518: FILE: fs/xfs/linux-2.6/xfs_vnode.h:255:
+#define bhv_vop_read(vp,file,iov,segs,offset,endio,endio_data,ioflags,cr) \
+		VOP(vop_read, vp)(VNHEAD(vp),file,iov,segs,offset,	\
+				endio,endio_data,ioflags,cr)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1519: FILE: fs/xfs/linux-2.6/xfs_vnode.h:256:
+		VOP(vop_read, vp)(VNHEAD(vp),file,iov,segs,offset,	\
 		                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1519: FILE: fs/xfs/linux-2.6/xfs_vnode.h:256:
+		VOP(vop_read, vp)(VNHEAD(vp),file,iov,segs,offset,	\
 		                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1519: FILE: fs/xfs/linux-2.6/xfs_vnode.h:256:
+		VOP(vop_read, vp)(VNHEAD(vp),file,iov,segs,offset,	\
 		                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1519: FILE: fs/xfs/linux-2.6/xfs_vnode.h:256:
+		VOP(vop_read, vp)(VNHEAD(vp),file,iov,segs,offset,	\
 		                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1520: FILE: fs/xfs/linux-2.6/xfs_vnode.h:257:
+				endio,endio_data,ioflags,cr)
 				     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1520: FILE: fs/xfs/linux-2.6/xfs_vnode.h:257:
+				endio,endio_data,ioflags,cr)
 				                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1520: FILE: fs/xfs/linux-2.6/xfs_vnode.h:257:
+				endio,endio_data,ioflags,cr)
 				                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1521: FILE: fs/xfs/linux-2.6/xfs_vnode.h:258:
+#define bhv_vop_write(vp,file,iov,segs,offset,endio,endio_data,ioflags,cr) \
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1521: FILE: fs/xfs/linux-2.6/xfs_vnode.h:258:
+#define bhv_vop_write(vp,file,iov,segs,offset,endio,endio_data,ioflags,cr) \
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1521: FILE: fs/xfs/linux-2.6/xfs_vnode.h:258:
+#define bhv_vop_write(vp,file,iov,segs,offset,endio,endio_data,ioflags,cr) \
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1521: FILE: fs/xfs/linux-2.6/xfs_vnode.h:258:
+#define bhv_vop_write(vp,file,iov,segs,offset,endio,endio_data,ioflags,cr) \
                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1521: FILE: fs/xfs/linux-2.6/xfs_vnode.h:258:
+#define bhv_vop_write(vp,file,iov,segs,offset,endio,endio_data,ioflags,cr) \
                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1521: FILE: fs/xfs/linux-2.6/xfs_vnode.h:258:
+#define bhv_vop_write(vp,file,iov,segs,offset,endio,endio_data,ioflags,cr) \
                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1521: FILE: fs/xfs/linux-2.6/xfs_vnode.h:258:
+#define bhv_vop_write(vp,file,iov,segs,offset,endio,endio_data,ioflags,cr) \
                                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1521: FILE: fs/xfs/linux-2.6/xfs_vnode.h:258:
+#define bhv_vop_write(vp,file,iov,segs,offset,endio,endio_data,ioflags,cr) \
                                                                       ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'vp' - possible side-effects?
#1521: FILE: fs/xfs/linux-2.6/xfs_vnode.h:258:
+#define bhv_vop_write(vp,file,iov,segs,offset,endio,endio_data,ioflags,cr) \
+		VOP(vop_write, vp)(VNHEAD(vp),file,iov,segs,offset,	\
+				endio,endio_data,ioflags,cr)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1522: FILE: fs/xfs/linux-2.6/xfs_vnode.h:259:
+		VOP(vop_write, vp)(VNHEAD(vp),file,iov,segs,offset,	\
 		                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1522: FILE: fs/xfs/linux-2.6/xfs_vnode.h:259:
+		VOP(vop_write, vp)(VNHEAD(vp),file,iov,segs,offset,	\
 		                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1522: FILE: fs/xfs/linux-2.6/xfs_vnode.h:259:
+		VOP(vop_write, vp)(VNHEAD(vp),file,iov,segs,offset,	\
 		                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1522: FILE: fs/xfs/linux-2.6/xfs_vnode.h:259:
+		VOP(vop_write, vp)(VNHEAD(vp),file,iov,segs,offset,	\
 		                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1523: FILE: fs/xfs/linux-2.6/xfs_vnode.h:260:
+				endio,endio_data,ioflags,cr)
 				     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1523: FILE: fs/xfs/linux-2.6/xfs_vnode.h:260:
+				endio,endio_data,ioflags,cr)
 				                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1523: FILE: fs/xfs/linux-2.6/xfs_vnode.h:260:
+				endio,endio_data,ioflags,cr)
 				                        ^

WARNING:SPACING: Unnecessary space before function pointer arguments
#1536: FILE: include/linux/fs.h:1125:
+	ssize_t (*aio_read) (struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#1536: FILE: include/linux/fs.h:1125:
+	ssize_t (*aio_read) (struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iovec *' should also have an identifier name
#1536: FILE: include/linux/fs.h:1125:
+	ssize_t (*aio_read) (struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#1536: FILE: include/linux/fs.h:1125:
+	ssize_t (*aio_read) (struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#1536: FILE: include/linux/fs.h:1125:
+	ssize_t (*aio_read) (struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'file_endio_t *' should also have an identifier name
#1536: FILE: include/linux/fs.h:1125:
+	ssize_t (*aio_read) (struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1536: FILE: include/linux/fs.h:1125:
+	ssize_t (*aio_read) (struct file *, const struct iovec *,

WARNING:SPACING: Unnecessary space before function pointer arguments
#1538: FILE: include/linux/fs.h:1127:
+	ssize_t (*aio_write) (struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#1538: FILE: include/linux/fs.h:1127:
+	ssize_t (*aio_write) (struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iovec *' should also have an identifier name
#1538: FILE: include/linux/fs.h:1127:
+	ssize_t (*aio_write) (struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#1538: FILE: include/linux/fs.h:1127:
+	ssize_t (*aio_write) (struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#1538: FILE: include/linux/fs.h:1127:
+	ssize_t (*aio_write) (struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'file_endio_t *' should also have an identifier name
#1538: FILE: include/linux/fs.h:1127:
+	ssize_t (*aio_write) (struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1538: FILE: include/linux/fs.h:1127:
+	ssize_t (*aio_write) (struct file *, const struct iovec *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1565: FILE: include/linux/fs.h:1774:
+extern ssize_t generic_file_aio_read(struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#1565: FILE: include/linux/fs.h:1774:
+extern ssize_t generic_file_aio_read(struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iovec *' should also have an identifier name
#1565: FILE: include/linux/fs.h:1774:
+extern ssize_t generic_file_aio_read(struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#1565: FILE: include/linux/fs.h:1774:
+extern ssize_t generic_file_aio_read(struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#1565: FILE: include/linux/fs.h:1774:
+extern ssize_t generic_file_aio_read(struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'file_endio_t *' should also have an identifier name
#1565: FILE: include/linux/fs.h:1774:
+extern ssize_t generic_file_aio_read(struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1565: FILE: include/linux/fs.h:1774:
+extern ssize_t generic_file_aio_read(struct file *, const struct iovec *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1566: FILE: include/linux/fs.h:1775:
+extern ssize_t generic_file_aio_read(struct file *, const struct iovec *,
+			unsigned long, loff_t *, file_endio_t *, void *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1567: FILE: include/linux/fs.h:1776:
+extern ssize_t generic_file_aio_write(struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#1567: FILE: include/linux/fs.h:1776:
+extern ssize_t generic_file_aio_write(struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iovec *' should also have an identifier name
#1567: FILE: include/linux/fs.h:1776:
+extern ssize_t generic_file_aio_write(struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#1567: FILE: include/linux/fs.h:1776:
+extern ssize_t generic_file_aio_write(struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#1567: FILE: include/linux/fs.h:1776:
+extern ssize_t generic_file_aio_write(struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'file_endio_t *' should also have an identifier name
#1567: FILE: include/linux/fs.h:1776:
+extern ssize_t generic_file_aio_write(struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1567: FILE: include/linux/fs.h:1776:
+extern ssize_t generic_file_aio_write(struct file *, const struct iovec *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1568: FILE: include/linux/fs.h:1777:
+extern ssize_t generic_file_aio_write(struct file *, const struct iovec *,
+			unsigned long, loff_t *, file_endio_t *, void *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1569: FILE: include/linux/fs.h:1778:
+extern ssize_t generic_file_aio_write_nolock(struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#1569: FILE: include/linux/fs.h:1778:
+extern ssize_t generic_file_aio_write_nolock(struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iovec *' should also have an identifier name
#1569: FILE: include/linux/fs.h:1778:
+extern ssize_t generic_file_aio_write_nolock(struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#1569: FILE: include/linux/fs.h:1778:
+extern ssize_t generic_file_aio_write_nolock(struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#1569: FILE: include/linux/fs.h:1778:
+extern ssize_t generic_file_aio_write_nolock(struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'file_endio_t *' should also have an identifier name
#1569: FILE: include/linux/fs.h:1778:
+extern ssize_t generic_file_aio_write_nolock(struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1569: FILE: include/linux/fs.h:1778:
+extern ssize_t generic_file_aio_write_nolock(struct file *, const struct iovec *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1570: FILE: include/linux/fs.h:1779:
+extern ssize_t generic_file_aio_write_nolock(struct file *, const struct iovec *,
+		unsigned long, loff_t *, file_endio_t *, void *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1576: FILE: include/linux/fs.h:1783:
+extern ssize_t generic_file_buffered_write(struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#1576: FILE: include/linux/fs.h:1783:
+extern ssize_t generic_file_buffered_write(struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct iovec *' should also have an identifier name
#1576: FILE: include/linux/fs.h:1783:
+extern ssize_t generic_file_buffered_write(struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#1576: FILE: include/linux/fs.h:1783:
+extern ssize_t generic_file_buffered_write(struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t' should also have an identifier name
#1576: FILE: include/linux/fs.h:1783:
+extern ssize_t generic_file_buffered_write(struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#1576: FILE: include/linux/fs.h:1783:
+extern ssize_t generic_file_buffered_write(struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#1576: FILE: include/linux/fs.h:1783:
+extern ssize_t generic_file_buffered_write(struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ssize_t' should also have an identifier name
#1576: FILE: include/linux/fs.h:1783:
+extern ssize_t generic_file_buffered_write(struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'file_endio_t *' should also have an identifier name
#1576: FILE: include/linux/fs.h:1783:
+extern ssize_t generic_file_buffered_write(struct file *, const struct iovec *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1576: FILE: include/linux/fs.h:1783:
+extern ssize_t generic_file_buffered_write(struct file *, const struct iovec *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1577: FILE: include/linux/fs.h:1784:
+extern ssize_t generic_file_buffered_write(struct file *, const struct iovec *,
+		unsigned long, loff_t, loff_t *, size_t, ssize_t,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1590: FILE: mm/filemap.c:1176:
+ * @filp:	file to read
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1604: FILE: mm/filemap.c:1187:
+generic_file_aio_read(struct file *filp, const struct iovec *iov,
                                    ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1605: FILE: mm/filemap.c:1188:
+generic_file_aio_read(struct file *filp, const struct iovec *iov,
+		unsigned long nr_segs, loff_t *ppos, file_endio_t *endio,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1624: FILE: mm/filemap.c:1228:
+			retval = generic_file_direct_IO(READ, filp, iov, *ppos,
 			                                      ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1625: FILE: mm/filemap.c:1229:
+			retval = generic_file_direct_IO(READ, filp, iov, *ppos,
+						nr_segs, endio, endio_data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1638: FILE: mm/filemap.c:2123:
+generic_file_buffered_write(struct file *file, const struct iovec *iov,
 		unsigned long nr_segs, loff_t pos, loff_t *ppos,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1676: FILE: mm/filemap.c:2360:
+		written_buffered = generic_file_buffered_write(file, iov,
 						nr_segs, pos, ppos, count,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1689: FILE: mm/filemap.c:2397:
+		written = generic_file_buffered_write(file, iov, nr_segs,
+				pos, ppos, count, written, endio, endio_data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1699: FILE: mm/filemap.c:2405:
+ssize_t generic_file_aio_write_nolock(struct file *file,
+		const struct iovec *iov, unsigned long nr_segs, loff_t *ppos,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1712: FILE: mm/filemap.c:2413:
+	ret = __generic_file_aio_write_nolock(file, iov, nr_segs, ppos,
+			endio, endio_data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1732: FILE: mm/filemap.c:2429:
+ssize_t generic_file_aio_write(struct file *file, const struct iovec *iov,
+		unsigned long nr_segs, loff_t *ppos, file_endio_t *endio,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1746: FILE: mm/filemap.c:2438:
+	ret = __generic_file_aio_write_nolock(file, iov, nr_segs, ppos,
+			endio, endio_data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1773: FILE: net/socket.c:98:
+static ssize_t sock_aio_read(struct file *file, const struct iovec *iov,
+			 unsigned long nr_segs, loff_t *ppos,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1776: FILE: net/socket.c:101:
+static ssize_t sock_aio_write(struct file *file, const struct iovec *iov,
+			  unsigned long nr_segs, loff_t *ppos,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1788: FILE: net/socket.c:627:
+static ssize_t sock_aio_read(struct file *file, const struct iovec *iov,
+				unsigned long nr_segs, loff_t *ppos,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1815: FILE: net/socket.c:656:
+static ssize_t sock_aio_write(struct file *file, const struct iovec *iov,
+			  unsigned long nr_segs, loff_t *ppos,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1848: FILE: sound/core/pcm_native.c:2858:
+static ssize_t snd_pcm_aio_read(struct file *file, const struct iovec *iov,
+			     unsigned long nr_segs, loff_t *ppos,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1872: FILE: sound/core/pcm_native.c:2893:
+static ssize_t snd_pcm_aio_write(struct file *file, const struct iovec *iov,
+			      unsigned long nr_segs, loff_t *ppos,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000001405.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 34 errors, 85 warnings, 66 checks, 1649 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000001405.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
