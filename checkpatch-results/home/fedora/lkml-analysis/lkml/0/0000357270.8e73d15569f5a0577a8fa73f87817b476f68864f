WARNING:TYPO_SPELLING: 'doesnt' may be misspelled - perhaps 'doesn't'?
#41: 
> > > If the IO fairness still doesnt
                               ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
> > > get somewhat better for general use (well get isolated user reports and

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#87: FILE: drivers/block/elevator.c:183:
+int blkelvget_ioctl(request_queue_t *q, blkelv_ioctl_arg_t * arg)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#99: FILE: drivers/block/elevator.c:193:
+^I^Ioutput.max_bomb_segments |= MAX_BOMB_LATENCY_MASK;^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#101: FILE: drivers/block/elevator.c:195:
+^I^Ioutput.max_bomb_segments &= ~MAX_BOMB_LATENCY_MASK;^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#109: FILE: drivers/block/elevator.c:202:
+int blkelvset_ioctl(request_queue_t *q, const blkelv_ioctl_arg_t * arg)

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#124: FILE: drivers/block/elevator.c:219:
+	q->low_latency = input.max_bomb_segments & MAX_BOMB_LATENCY_MASK ? 1:0;
 	                                                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#125: FILE: drivers/block/elevator.c:220:
+^Iprintk("queue %d: low latency mode is now %s\n", elevator->queue_ID, $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#125: FILE: drivers/block/elevator.c:220:
+	printk("queue %d: low latency mode is now %s\n", elevator->queue_ID, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#126: FILE: drivers/block/elevator.c:221:
+	printk("queue %d: low latency mode is now %s\n", elevator->queue_ID, 
+		q->low_latency ? "on" : "off");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#130: FILE: drivers/block/elevator.c:225:
+^Iprintk("queue %d: max queue sectors is now %d\n", elevator->queue_ID, $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#130: FILE: drivers/block/elevator.c:225:
+	printk("queue %d: max queue sectors is now %d\n", elevator->queue_ID, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#131: FILE: drivers/block/elevator.c:226:
+	printk("queue %d: max queue sectors is now %d\n", elevator->queue_ID, 
+		q->max_queue_sectors);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#143: FILE: drivers/block/ll_rw_blk.c:383:
+		if (!list_empty(&q->queue_head)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#144: FILE: drivers/block/ll_rw_blk.c:384:
+^I^I^I/* we don't want merges later on to come in $

WARNING:LINE_SPACING: Missing a blank line after declarations
#153: FILE: drivers/block/ll_rw_blk.c:393:
+				struct request *rq;
+				rq = blkdev_entry_prev_request(&q->queue_head),

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_COMMA_SEMICOLON: Possible comma where semicolon could be used
#153: FILE: drivers/block/ll_rw_blk.c:393:
+				rq = blkdev_entry_prev_request(&q->queue_head),
+				rq->elevator_sequence = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#200: FILE: drivers/block/ll_rw_blk.c:594:
+/* $

WARNING:MEMORY_BARRIER: memory barrier without comment
#207: FILE: drivers/block/ll_rw_blk.c:601:
+	mb();

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#208: FILE: drivers/block/ll_rw_blk.c:602:
+	if (waitqueue_active(&q->wait_for_requests))

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#244: FILE: drivers/block/ll_rw_blk.c:675:
+	if (!waitqueue_active(&q->wait_for_requests))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#270: FILE: include/linux/blkdev.h:144:
+^I$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#306: FILE: include/linux/elevator.h:49:
+extern int blkelvget_ioctl(request_queue_t *, blkelv_ioctl_arg_t *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'request_queue_t *' should also have an identifier name
#306: FILE: include/linux/elevator.h:49:
+extern int blkelvget_ioctl(request_queue_t *, blkelv_ioctl_arg_t *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'blkelv_ioctl_arg_t *' should also have an identifier name
#306: FILE: include/linux/elevator.h:49:
+extern int blkelvget_ioctl(request_queue_t *, blkelv_ioctl_arg_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#307: FILE: include/linux/elevator.h:50:
+extern int blkelvset_ioctl(request_queue_t *, const blkelv_ioctl_arg_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'request_queue_t *' should also have an identifier name
#307: FILE: include/linux/elevator.h:50:
+extern int blkelvset_ioctl(request_queue_t *, const blkelv_ioctl_arg_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const blkelv_ioctl_arg_t *' should also have an identifier name
#307: FILE: include/linux/elevator.h:50:
+extern int blkelvset_ioctl(request_queue_t *, const blkelv_ioctl_arg_t *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000357270.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 13 warnings, 6 checks, 225 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000357270.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
