WARNING:TYPO_SPELLING: 'modifed' may be misspelled - perhaps 'modified'?
#36: 
The function cifs_readpages() is modifed and cifs_readpages_threadfn() has 
                                 ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
Current implementation sends a read request to server and waits for data to 

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#76: FILE: home/temp/file-en.c:1:
+/*	 <modified file.c - by Nitin Gupta (nitin_gupta_mail@hotmail.com)>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#85: FILE: home/temp/file-en.c:38:
#include "cifs_debug.h"

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#88: FILE: home/temp/file-en.c:40:
+#include <asm/atomic.h>

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#104: FILE: home/temp/file-en.c:56:
+	struct cifsFileInfo * open_file;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <cifsFileInfo>
#104: FILE: home/temp/file-en.c:56:
+	struct cifsFileInfo * open_file;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <cifsTconInfo>
#106: FILE: home/temp/file-en.c:58:
+	struct cifsTconInfo *pTcon;

CHECK:CAMELCASE: Avoid CamelCase: <pTcon>
#106: FILE: home/temp/file-en.c:58:
+	struct cifsTconInfo *pTcon;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#108: FILE: home/temp/file-en.c:60:
+	spinlock_t sl_page_pool;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#109: FILE: home/temp/file-en.c:61:
+	spinlock_t sl_cache_lock;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#111: FILE: home/temp/file-en.c:63:
+	volatile struct list_head *page_pool;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#119: FILE: home/temp/file-en.c:71:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#130: FILE: home/temp/file-en.c:1131:
+int cifs_readpages_threadfn (void *data)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#150: FILE: home/temp/file-en.c:1134:
+unsigned num_pages;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#151: FILE: home/temp/file-en.c:1135:
+char *smb_read_data = NULL;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#157: FILE: home/temp/file-en.c:1141:
+
+

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#160: FILE: home/temp/file-en.c:1144:
+while ( atomic_read(&t->pages_left) > 0 )
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#160: FILE: home/temp/file-en.c:1144:
+while ( atomic_read(&t->pages_left) > 0 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#160: FILE: home/temp/file-en.c:1144:
+while ( atomic_read(&t->pages_left) > 0 )

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#162: FILE: home/temp/file-en.c:1146:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#165: FILE: home/temp/file-en.c:1149:
+^Iif (atomic_read(&t->read_state) == FIN_ERR || (t->interrupted == 1)) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 0)
#165: FILE: home/temp/file-en.c:1149:
+	if (atomic_read(&t->read_state) == FIN_ERR || (t->interrupted == 1)) 
break;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 't->interrupted == 1'
#165: FILE: home/temp/file-en.c:1149:
+	if (atomic_read(&t->read_state) == FIN_ERR || (t->interrupted == 1)) 

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LINE_SPACING: Please don't use multiple blank lines
#168: FILE: home/temp/file-en.c:1151:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#185: FILE: home/temp/file-en.c:1164:
+	/*	if(atomic_read(&t->thread_count)<=1) {
+			atomic_dec(&t->thread_count);

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#192: FILE: home/temp/file-en.c:1171:
+	}*/

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#200: FILE: home/temp/file-en.c:1179:
+			return 0;
+		} else {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#209: FILE: home/temp/file-en.c:1188:
+	if (atomic_read(&t->pages_left) >= t->rsize_in_pages) {
[...]
+	} else {
[...]

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#218: FILE: home/temp/file-en.c:1197:
+	for (i=0; i<num_pages; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#218: FILE: home/temp/file-en.c:1197:
+	for (i=0; i<num_pages; i++) {
 	           ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#227: FILE: home/temp/file-en.c:1206:
+	if ( atomic_read(&t->pages_left) <= 0 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#227: FILE: home/temp/file-en.c:1206:
+	if ( atomic_read(&t->pages_left) <= 0 )

ERROR:SPACING: space required before the open parenthesis '('
#236: FILE: home/temp/file-en.c:1213:
+	for(i = 0; i < num_pages;) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#248: FILE: home/temp/file-en.c:1218:
+		struct smb_com_read_rsp * pSMBr;

CHECK:CAMELCASE: Avoid CamelCase: <pSMBr>
#248: FILE: home/temp/file-en.c:1218:
+		struct smb_com_read_rsp * pSMBr;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#252: FILE: home/temp/file-en.c:1222:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#260: FILE: home/temp/file-en.c:1224:
+		expected_index = list_entry(page_list->prev,struct page,lru)->index;
 		                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#260: FILE: home/temp/file-en.c:1224:
+		expected_index = list_entry(page_list->prev,struct page,lru)->index;
 		                                                       ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#261: FILE: home/temp/file-en.c:1225:
+		list_for_each_entry_reverse(tmp_page, page_list,lru) {
			if(tmp_page->index == expected_index) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#261: FILE: home/temp/file-en.c:1225:
+		list_for_each_entry_reverse(tmp_page, page_list,lru) {
 		                                               ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#284: FILE: home/temp/file-en.c:1245:
+		if (atomic_read(&t->read_state) == FIN_ERR) break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 24)
#287: FILE: home/temp/file-en.c:1246:
		while(rc == -EAGAIN) {
+			if ((t->open_file->invalidHandle) && (!t->open_file->closePend)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 't->open_file->invalidHandle'
#292: FILE: home/temp/file-en.c:1247:
+			if ((t->open_file->invalidHandle) && (!t->open_file->closePend)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!t->open_file->closePend'
#292: FILE: home/temp/file-en.c:1247:
+			if ((t->open_file->invalidHandle) && (!t->open_file->closePend)) {

CHECK:CAMELCASE: Avoid CamelCase: <invalidHandle>
#292: FILE: home/temp/file-en.c:1247:
+			if ((t->open_file->invalidHandle) && (!t->open_file->closePend)) {

CHECK:CAMELCASE: Avoid CamelCase: <closePend>
#292: FILE: home/temp/file-en.c:1247:
+			if ((t->open_file->invalidHandle) && (!t->open_file->closePend)) {

ERROR:SPACING: space required before the open parenthesis '('
#295: FILE: home/temp/file-en.c:1250:
+				if(rc != 0) {

CHECK:CAMELCASE: Avoid CamelCase: <CIFSSMBRead>
#303: FILE: home/temp/file-en.c:1254:
+			rc = CIFSSMBRead(t->xid, t->pTcon,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#304: FILE: home/temp/file-en.c:1255:
+			rc = CIFSSMBRead(t->xid, t->pTcon,
+				t->open_file->netfid,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#305: FILE: home/temp/file-en.c:1255:
+			rc = CIFSSMBRead(t->xid, t->pTcon,
				read_size, offset,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#306: FILE: home/temp/file-en.c:1255:
+			rc = CIFSSMBRead(t->xid, t->pTcon,
				&bytes_read, &smb_read_data);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 24)
#310: FILE: home/temp/file-en.c:1257:
+			if(rc == -EAGAIN) {
				if(smb_read_data) {

ERROR:SPACING: space required before the open parenthesis '('
#310: FILE: home/temp/file-en.c:1257:
+			if(rc == -EAGAIN) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#317: FILE: home/temp/file-en.c:1258:
+			if(rc == -EAGAIN) {
+

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#318: FILE: home/temp/file-en.c:1259:
+		if (atomic_read(&t->read_state) == FIN_ERR) break;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#322: FILE: home/temp/file-en.c:1261:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#344: FILE: home/temp/file-en.c:1271:
+			cifs_copy_cache_pages(t->mapping, page_list,
+				bytes_read, smb_read_data + 4 /* RFC1001 hdr */

ERROR:CODE_INDENT: code indent should use tabs where possible
#345: FILE: home/temp/file-en.c:1272:
+^I^I^I ^I+ le16_to_cpu(pSMBr->DataOffset),$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#345: FILE: home/temp/file-en.c:1272:
+^I^I^I ^I+ le16_to_cpu(pSMBr->DataOffset),$

CHECK:CAMELCASE: Avoid CamelCase: <DataOffset>
#345: FILE: home/temp/file-en.c:1272:
+			 	+ le16_to_cpu(pSMBr->DataOffset),

ERROR:SPACING: space required after that ',' (ctx:VxV)
#364: FILE: home/temp/file-en.c:1282:
+				cFYI(1,("Partial page %d of %d read to cache",
 				      ^

CHECK:CAMELCASE: Avoid CamelCase: <cFYI>
#364: FILE: home/temp/file-en.c:1282:
+				cFYI(1,("Partial page %d of %d read to cache",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#365: FILE: home/temp/file-en.c:1283:
+				cFYI(1,("Partial page %d of %d read to cache",
+								i, num_pages));

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#401: FILE: home/temp/file-en.c:1322:
+		if (atomic_read(&t->read_state) == FIN_ERR) break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#407: FILE: home/temp/file-en.c:1327:
+	if (atomic_read(&t->read_state) == FIN_ERR) break;

ERROR:SPACING: space required before the open parenthesis '('
#411: FILE: home/temp/file-en.c:1331:
+			if(smb_read_data) {

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#418: FILE: home/temp/file-en.c:1338:
+			return 0;
+		} else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#425: FILE: home/temp/file-en.c:1345:
+if (atomic_read(&t->read_state) == FIN_ERR || (t->interrupted == 1))  { /* $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (0, 0)
#425: FILE: home/temp/file-en.c:1345:
+if (atomic_read(&t->read_state) == FIN_ERR || (t->interrupted == 1))  { /* 
if error */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 't->interrupted == 1'
#425: FILE: home/temp/file-en.c:1345:
+if (atomic_read(&t->read_state) == FIN_ERR || (t->interrupted == 1))  { /* 

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#431: FILE: home/temp/file-en.c:1346:
+if (atomic_read(&t->read_state) == FIN_ERR || (t->interrupted == 1))  { /* 
+	}

WARNING:TYPO_SPELLING: 'nin' may be misspelled - perhaps 'inn'?
#433: FILE: home/temp/file-en.c:1348:
+	//printk("\nin tfn thread_count: %d\n", atomic_read(&t->thread_count));
 	           ^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#447: FILE: home/temp/file-en.c:1361:
+
+

ERROR:SPACING: space prohibited before that close parenthesis ')'
#464: FILE: home/temp/file-en.c:1378:
+	if (num_pages <= 4 )

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#468: FILE: home/temp/file-en.c:1382:
+	else init_threads = 8;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#471: FILE: home/temp/file-en.c:1385:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <GetXid>
#473: FILE: home/temp/file-en.c:1387:
+	xid = GetXid();

CHECK:LINE_SPACING: Please don't use multiple blank lines
#481: FILE: home/temp/file-en.c:1395:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#485: FILE: home/temp/file-en.c:1399:
+^Ithread_data.rsize_in_pages = (thread_data.cifs_sb->rsize) >> $

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#495: FILE: home/temp/file-en.c:1408:
+	 * FIN_END  (3) : some error occured during read
 	                             ^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#514: FILE: home/temp/file-en.c:1427:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!file->private_data"
#517: FILE: home/temp/file-en.c:1430:
+	if (file->private_data == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:CAMELCASE: Avoid CamelCase: <FreeXid>
#518: FILE: home/temp/file-en.c:1431:
+		FreeXid(thread_data.xid);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#526: FILE: home/temp/file-en.c:1439:
+	for (i=0; i<init_threads; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#526: FILE: home/temp/file-en.c:1439:
+	for (i=0; i<init_threads; i++)
 	           ^

ERROR:SPACING: space required before the open parenthesis '('
#529: FILE: home/temp/file-en.c:1442:
+	if(down_interruptible(&thread_data.threadsem)) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#532: FILE: home/temp/file-en.c:1445:
+		printk("\nCIFS: readpages interrupted by signal\n");

ERROR:SPACING: space required before the open parenthesis '('
#535: FILE: home/temp/file-en.c:1448:
+		while(!list_empty(page_list)) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#536: FILE: home/temp/file-en.c:1449:
+			page = list_entry(page_list->prev,struct page, lru);
 			                                 ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#545: FILE: home/temp/file-en.c:1458:
+
+

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#550: FILE: home/temp/file-en.c:1463:
+		printk("\nCIFS: some error occured during reading\n");
 		                           ^^^^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#550: FILE: home/temp/file-en.c:1463:
+		printk("\nCIFS: some error occured during reading\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#551: FILE: home/temp/file-en.c:1464:
+^I^Iwait_event_interruptible(thread_data.wq_h, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#553: FILE: home/temp/file-en.c:1465:
+		wait_event_interruptible(thread_data.wq_h, 
+		while(!list_empty(page_list)) {

ERROR:SPACING: space required before the open parenthesis '('
#553: FILE: home/temp/file-en.c:1465:
+		while(!list_empty(page_list)) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#554: FILE: home/temp/file-en.c:1466:
+			page = list_entry(page_list->prev,struct page, lru);
 			                                 ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#567: FILE: home/temp/file-en.c:1477:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000210378.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 37 errors, 24 warnings, 37 checks, 497 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000210378.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
