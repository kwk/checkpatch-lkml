WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#133: FILE: arch/x86_64/kernel/kprobes.c:46:
+void __kprobes arch_copy_kprobe(struct kprobe *p);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#207: FILE: kernel/kprobes.c:170:
+ * ^I- under the kprobe_mutex - during kprobe_[un]register()$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#270: FILE: kernel/kprobes.c:474:
+	if ((ret = arch_prepare_kprobe(p)) != 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'old_p->pre_handler == aggr_pre_handler'
#312: FILE: kernel/kprobes.c:503:
+	if ((old_p->pre_handler == aggr_pre_handler) &&
+		(p->list.next == &old_p->list) &&
+		(p->list.prev == &old_p->list)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->list.next == &old_p->list'
#312: FILE: kernel/kprobes.c:503:
+	if ((old_p->pre_handler == aggr_pre_handler) &&
+		(p->list.next == &old_p->list) &&
+		(p->list.prev == &old_p->list)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->list.prev == &old_p->list'
#312: FILE: kernel/kprobes.c:503:
+	if ((old_p->pre_handler == aggr_pre_handler) &&
+		(p->list.next == &old_p->list) &&
+		(p->list.prev == &old_p->list)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#313: FILE: kernel/kprobes.c:504:
+	if ((old_p->pre_handler == aggr_pre_handler) &&
+		(p->list.next == &old_p->list) &&

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched', prefer 'synchronize_rcu' instead
#334: FILE: kernel/kprobes.c:522:
+	synchronize_sched();

Usage of a deprecated RCU API is detected.  It is recommended to replace
old flavourful RCU APIs by their new vanilla-RCU counterparts.

The full list of available RCU APIs can be viewed from the kernel docs.

See: https://www.kernel.org/doc/html/latest/RCU/whatisRCU.html#full-list-of-rcu-apis

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#335: FILE: kernel/kprobes.c:523:
+	if ((mod = module_text_address((unsigned long)p->addr)))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000125908.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 3 warnings, 4 checks, 259 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000125908.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
