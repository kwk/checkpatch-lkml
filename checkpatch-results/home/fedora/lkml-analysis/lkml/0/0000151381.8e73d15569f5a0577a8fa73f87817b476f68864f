WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
This is a repost/correction to my previous patch to convert the /proc/devices

WARNING:TYPO_SPELLING: 'fiel' may be misspelled - perhaps 'feel'?
#26: 
fiel to use the seq_file api.  Previous patch was found to deadlock under some
^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#48: FILE: drivers/block/genhd.c:43:
+        int index;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#48: FILE: drivers/block/genhd.c:43:
+        int index;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#49: FILE: drivers/block/genhd.c:44:
+        struct blk_major_name *bd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#49: FILE: drivers/block/genhd.c:44:
+        struct blk_major_name *bd;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#59: FILE: drivers/block/genhd.c:54:
+        struct blkdev_info *info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: drivers/block/genhd.c:54:
+        struct blkdev_info *info;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#61: FILE: drivers/block/genhd.c:56:
+        if (dev == NULL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: drivers/block/genhd.c:56:
+        if (dev == NULL) {$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#61: FILE: drivers/block/genhd.c:56:
+        if (dev == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#62: FILE: drivers/block/genhd.c:57:
+                info = kmalloc(sizeof(*info), GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#62: FILE: drivers/block/genhd.c:57:
+                info = kmalloc(sizeof(*info), GFP_KERNEL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#63: FILE: drivers/block/genhd.c:58:
+                if (!info)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#63: FILE: drivers/block/genhd.c:58:
+                if (!info)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#64: FILE: drivers/block/genhd.c:59:
+                        goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#64: FILE: drivers/block/genhd.c:59:
+                        goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#65: FILE: drivers/block/genhd.c:60:
+                info->index=0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#65: FILE: drivers/block/genhd.c:60:
+                info->index=0;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#65: FILE: drivers/block/genhd.c:60:
+                info->index=0;
                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#66: FILE: drivers/block/genhd.c:61:
+                info->bd = major_names[info->index];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: drivers/block/genhd.c:61:
+                info->bd = major_names[info->index];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#67: FILE: drivers/block/genhd.c:62:
+                if(info->bd)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: drivers/block/genhd.c:62:
+                if(info->bd)$

ERROR:SPACING: space required before the open parenthesis '('
#67: FILE: drivers/block/genhd.c:62:
+                if(info->bd)

ERROR:CODE_INDENT: code indent should use tabs where possible
#68: FILE: drivers/block/genhd.c:63:
+                        goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: drivers/block/genhd.c:63:
+                        goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#69: FILE: drivers/block/genhd.c:64:
+        } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: drivers/block/genhd.c:64:
+        } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#70: FILE: drivers/block/genhd.c:65:
+                info = dev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: drivers/block/genhd.c:65:
+                info = dev;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#71: FILE: drivers/block/genhd.c:66:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: drivers/block/genhd.c:66:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#73: FILE: drivers/block/genhd.c:68:
+        while (info->index < ARRAY_SIZE(major_names)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#73: FILE: drivers/block/genhd.c:68:
+        while (info->index < ARRAY_SIZE(major_names)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#74: FILE: drivers/block/genhd.c:69:
+                if (info->bd)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: drivers/block/genhd.c:69:
+                if (info->bd)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#75: FILE: drivers/block/genhd.c:70:
+                        info->bd = info->bd->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: drivers/block/genhd.c:70:
+                        info->bd = info->bd->next;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#76: FILE: drivers/block/genhd.c:71:
+                if (info->bd)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: drivers/block/genhd.c:71:
+                if (info->bd)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#77: FILE: drivers/block/genhd.c:72:
+                        goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: drivers/block/genhd.c:72:
+                        goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#78: FILE: drivers/block/genhd.c:73:
+                /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#79: FILE: drivers/block/genhd.c:74:
+                 *no devices on this chain, move to the next$

ERROR:CODE_INDENT: code indent should use tabs where possible
#80: FILE: drivers/block/genhd.c:75:
+                 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#81: FILE: drivers/block/genhd.c:76:
+                info->index++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: drivers/block/genhd.c:76:
+                info->index++;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#82: FILE: drivers/block/genhd.c:77:
+                info->bd = (info->index < ARRAY_SIZE(major_names)) ? $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#82: FILE: drivers/block/genhd.c:77:
+                info->bd = (info->index < ARRAY_SIZE(major_names)) ? $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: drivers/block/genhd.c:77:
+                info->bd = (info->index < ARRAY_SIZE(major_names)) ? $

ERROR:CODE_INDENT: code indent should use tabs where possible
#84: FILE: drivers/block/genhd.c:79:
+                if (info->bd)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: drivers/block/genhd.c:79:
+                if (info->bd)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#85: FILE: drivers/block/genhd.c:80:
+                        goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: drivers/block/genhd.c:80:
+                        goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#86: FILE: drivers/block/genhd.c:81:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: drivers/block/genhd.c:81:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#89: FILE: drivers/block/genhd.c:84:
+        return info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: drivers/block/genhd.c:84:
+        return info;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#94: FILE: drivers/block/genhd.c:89:
+        down(&block_subsys_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: drivers/block/genhd.c:89:
+        down(&block_subsys_sem);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#96: FILE: drivers/block/genhd.c:91:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#97: FILE: drivers/block/genhd.c:92:
+        return get_next_blkdev(NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: drivers/block/genhd.c:92:
+        return get_next_blkdev(NULL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: drivers/block/genhd.c:97:
+        up(&block_subsys_sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: drivers/block/genhd.c:97:
+        up(&block_subsys_sem);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#103: FILE: drivers/block/genhd.c:98:
+        kfree(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: drivers/block/genhd.c:98:
+        kfree(dev);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#106: FILE: drivers/block/genhd.c:101:
+
+

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#132: FILE: drivers/block/genhd.c:114:
+		for (n = major_names[i]; n; n = n->next)
+				count++;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#137: FILE: drivers/block/genhd.c:117:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#143: FILE: drivers/block/genhd.c:123:
+ * passed in as a void to *dev.  Must be called with $

ERROR:CODE_INDENT: code indent should use tabs where possible
#148: FILE: drivers/block/genhd.c:128:
+        struct blkdev_info *info = dev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: drivers/block/genhd.c:128:
+        struct blkdev_info *info = dev;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: drivers/block/genhd.c:130:
+        if (info->bd == NULL)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: drivers/block/genhd.c:130:
+        if (info->bd == NULL)$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info->bd"
#150: FILE: drivers/block/genhd.c:130:
+        if (info->bd == NULL)

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: drivers/block/genhd.c:131:
+                return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: drivers/block/genhd.c:131:
+                return 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: drivers/block/genhd.c:133:
+        *major = info->bd->major;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: drivers/block/genhd.c:133:
+        *major = info->bd->major;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: drivers/block/genhd.c:134:
+        *name = info->bd->name;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: drivers/block/genhd.c:134:
+        *name = info->bd->name;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: drivers/block/genhd.c:135:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: drivers/block/genhd.c:135:
+        return 0;$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#169: FILE: fs/proc/proc_misc.c:66:
+extern void *acquire_chrdev_list(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#170: FILE: fs/proc/proc_misc.c:67:
+extern int count_chrdev_list(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#171: FILE: fs/proc/proc_misc.c:68:
+extern void *get_next_chrdev(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#171: FILE: fs/proc/proc_misc.c:68:
+extern void *get_next_chrdev(void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#172: FILE: fs/proc/proc_misc.c:69:
+extern void *acquire_blkdev_list(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#173: FILE: fs/proc/proc_misc.c:70:
+extern int count_blkdev_list(void);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#174: FILE: fs/proc/proc_misc.c:71:
+extern void *get_next_blkdev(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#174: FILE: fs/proc/proc_misc.c:71:
+extern void *get_next_blkdev(void *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#175: FILE: fs/proc/proc_misc.c:72:
+extern int get_chrdev_info(void *, int *, char **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#175: FILE: fs/proc/proc_misc.c:72:
+extern int get_chrdev_info(void *, int *, char **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#175: FILE: fs/proc/proc_misc.c:72:
+extern int get_chrdev_info(void *, int *, char **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char **' should also have an identifier name
#175: FILE: fs/proc/proc_misc.c:72:
+extern int get_chrdev_info(void *, int *, char **);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#176: FILE: fs/proc/proc_misc.c:73:
+extern int get_blkdev_info(void *, int *, char **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#176: FILE: fs/proc/proc_misc.c:73:
+extern int get_blkdev_info(void *, int *, char **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#176: FILE: fs/proc/proc_misc.c:73:
+extern int get_blkdev_info(void *, int *, char **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char **' should also have an identifier name
#176: FILE: fs/proc/proc_misc.c:73:
+extern int get_blkdev_info(void *, int *, char **);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#177: FILE: fs/proc/proc_misc.c:74:
+extern void release_chrdev_list(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#177: FILE: fs/proc/proc_misc.c:74:
+extern void release_chrdev_list(void *);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#178: FILE: fs/proc/proc_misc.c:75:
+extern void release_blkdev_list(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#178: FILE: fs/proc/proc_misc.c:75:
+extern void release_blkdev_list(void *);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#208: FILE: fs/proc/proc_misc.c:283:
+^I^Iif ((info) && (*pos <= info->num_records)) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#214: FILE: fs/proc/proc_misc.c:289:
+^Iinfo->chrdev = acquire_chrdev_list(); $

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#231: FILE: fs/proc/proc_misc.c:306:
+	switch (info->state) {
+		case CHR_HDR:
[...]
+		case CHR_LIST:
[...]
+		case BLK_HDR:	
[...]
+		case BLK_LIST:
[...]
+		case DEVINFO_DONE:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#235: FILE: fs/proc/proc_misc.c:310:
+			/*fallthrough*/

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

ERROR:SPACING: space required after that ',' (ctx:VxO)
#237: FILE: fs/proc/proc_misc.c:312:
+			if (get_chrdev_info(info->chrdev,&idummy,&ndummy)) {
 			                                ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#237: FILE: fs/proc/proc_misc.c:312:
+			if (get_chrdev_info(info->chrdev,&idummy,&ndummy)) {
 			                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#237: FILE: fs/proc/proc_misc.c:312:
+			if (get_chrdev_info(info->chrdev,&idummy,&ndummy)) {
 			                                        ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#237: FILE: fs/proc/proc_misc.c:312:
+			if (get_chrdev_info(info->chrdev,&idummy,&ndummy)) {
 			                                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#241: FILE: fs/proc/proc_misc.c:316:
+^I^I^I^Iinfo->state = BLK_HDR;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#247: FILE: fs/proc/proc_misc.c:322:
+^I^Icase BLK_HDR:^I$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#252: FILE: fs/proc/proc_misc.c:327:
+			if (get_blkdev_info(info->blkdev,&idummy,&ndummy)) {
 			                                ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#252: FILE: fs/proc/proc_misc.c:327:
+			if (get_blkdev_info(info->blkdev,&idummy,&ndummy)) {
 			                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#252: FILE: fs/proc/proc_misc.c:327:
+			if (get_blkdev_info(info->blkdev,&idummy,&ndummy)) {
 			                                        ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#252: FILE: fs/proc/proc_misc.c:327:
+			if (get_blkdev_info(info->blkdev,&idummy,&ndummy)) {
 			                                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#256: FILE: fs/proc/proc_misc.c:331:
+^I^I^I^Iinfo->state = DEVINFO_DONE;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#259: FILE: fs/proc/proc_misc.c:334:
+^I^I^I}^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#283: FILE: fs/proc/proc_misc.c:358:
+^I^Ikfree(info);^I$

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#293: FILE: fs/proc/proc_misc.c:368:
+	switch(info->state) {
+		case CHR_HDR:
[...]
+		case CHR_LIST:
[...]
+		case BLK_HDR:
[...]
+		case BLK_LIST:
[...]
+		default:

ERROR:SPACING: space required before the open parenthesis '('
#293: FILE: fs/proc/proc_misc.c:368:
+	switch(info->state) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#295: FILE: fs/proc/proc_misc.c:370:
+			seq_printf(f,"Character devices:\n");
 			            ^

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#295: FILE: fs/proc/proc_misc.c:370:
+			seq_printf(f,"Character devices:\n");

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#296: FILE: fs/proc/proc_misc.c:371:
+			/* fallthrough */

ERROR:SPACING: space required after that ',' (ctx:VxO)
#298: FILE: fs/proc/proc_misc.c:373:
+			if (!get_chrdev_info(info->chrdev,&major,&name))
 			                                 ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#298: FILE: fs/proc/proc_misc.c:373:
+			if (!get_chrdev_info(info->chrdev,&major,&name))
 			                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#298: FILE: fs/proc/proc_misc.c:373:
+			if (!get_chrdev_info(info->chrdev,&major,&name))
 			                                        ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#298: FILE: fs/proc/proc_misc.c:373:
+			if (!get_chrdev_info(info->chrdev,&major,&name))
 			                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#299: FILE: fs/proc/proc_misc.c:374:
+				seq_printf(f,"%3d %s\n",major,name);
 				            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#299: FILE: fs/proc/proc_misc.c:374:
+				seq_printf(f,"%3d %s\n",major,name);
 				                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#299: FILE: fs/proc/proc_misc.c:374:
+				seq_printf(f,"%3d %s\n",major,name);
 				                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#302: FILE: fs/proc/proc_misc.c:377:
+			seq_printf(f,"\nBlock devices:\n");
 			            ^

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#302: FILE: fs/proc/proc_misc.c:377:
+			seq_printf(f,"\nBlock devices:\n");

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#303: FILE: fs/proc/proc_misc.c:378:
+			/* fallthrough */

ERROR:SPACING: space required after that ',' (ctx:VxO)
#305: FILE: fs/proc/proc_misc.c:380:
+			if (!get_blkdev_info(info->blkdev,&major,&name))
 			                                 ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#305: FILE: fs/proc/proc_misc.c:380:
+			if (!get_blkdev_info(info->blkdev,&major,&name))
 			                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#305: FILE: fs/proc/proc_misc.c:380:
+			if (!get_blkdev_info(info->blkdev,&major,&name))
 			                                        ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#305: FILE: fs/proc/proc_misc.c:380:
+			if (!get_blkdev_info(info->blkdev,&major,&name))
 			                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#306: FILE: fs/proc/proc_misc.c:381:
+				seq_printf(f,"%3d %s\n",major,name);
 				            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#306: FILE: fs/proc/proc_misc.c:381:
+				seq_printf(f,"%3d %s\n",major,name);
 				                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#306: FILE: fs/proc/proc_misc.c:381:
+				seq_printf(f,"%3d %s\n",major,name);
 				                             ^

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#315: FILE: fs/proc/proc_misc.c:390:
+static  struct seq_operations devinfo_op = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct file_operations should normally be const
#327: FILE: fs/proc/proc_misc.c:402:
+static struct file_operations proc_devinfo_operations = {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#396: FILE: fs/char_dev.c:57:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#397: FILE: fs/char_dev.c:58:
+	if (dev == NULL) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#401: FILE: fs/char_dev.c:62:
+		info->index=0;
 		           ^

ERROR:SPACING: space required before the open parenthesis '('
#403: FILE: fs/char_dev.c:64:
+		if(info->cd)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#418: FILE: fs/char_dev.c:79:
+^I^Iinfo->cd = (info->index < ARRAY_SIZE(chrdevs)) ? $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#440: FILE: fs/char_dev.c:92:
+^Ireturn get_next_chrdev(NULL);^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#452: FILE: fs/char_dev.c:101:
 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#466: FILE: fs/char_dev.c:113:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#474: FILE: fs/char_dev.c:120:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info->cd"
#475: FILE: fs/char_dev.c:121:
+	if (info->cd == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#477: FILE: fs/char_dev.c:123:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#489: FILE: fs/char_dev.c:174:
+	strncpy(cd->name,name,64);
 	                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#489: FILE: fs/char_dev.c:174:
+	strncpy(cd->name,name,64);
 	                     ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000151381.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 87 errors, 65 warnings, 7 checks, 440 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000151381.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
