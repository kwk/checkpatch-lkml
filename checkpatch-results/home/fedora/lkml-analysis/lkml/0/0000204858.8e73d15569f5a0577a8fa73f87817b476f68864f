WARNING:TYPO_SPELLING: 'thats' may be misspelled - perhaps 'that's'?
#53: 
Actually, thats an old function, nothing I added - but I renamed it.
          ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'fo' may be misspelled - perhaps 'of'?
#64: 
available. Needed on ia64 for pages converted fo uncached mappings to
                                              ^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#196: FILE: drivers/char/mem.c:209:
+		unsigned long sz = PAGE_SIZE - p;
+		if (sz > count)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#197: FILE: drivers/char/mem.c:210:
+^I^I^Isz = count; $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#318: FILE: include/asm-frv/io.h:276:
 
+

ERROR:DEFINE_ARCH_HAS: #define of 'ARCH_HAS_TRANSLATE_MEM_PTR' is wrong - use Kconfig variables or standard guards instead
#378: FILE: include/asm-ia64/uaccess.h:372:
+#define ARCH_HAS_TRANSLATE_MEM_PTR	1

The ARCH_HAS_xyz and ARCH_HAVE_xyz patterns are wrong.

For big conceptual features use Kconfig symbols instead.  And for
smaller things where we have compatibility fallback functions but
want architectures able to override them with optimized ones, we
should either use weak functions (appropriate for some cases), or
the symbol that protects them should be the same symbol we use.

See: https://lore.kernel.org/lkml/CA+55aFycQ9XJvEOsiM3txHL5bjUc8CeKWJNR_H+MiicaddB42Q@mail.gmail.com/

WARNING:INLINE: plain inline is preferred over __inline__
#379: FILE: include/asm-ia64/uaccess.h:373:
+static __inline__ char *

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#380: FILE: include/asm-ia64/uaccess.h:374:
+xlate_dev_mem_ptr (unsigned long p)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#383: FILE: include/asm-ia64/uaccess.h:377:
+	char * ptr;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:DEFINE_ARCH_HAS: #define of '__ARCH_HAS_NO_PAGE_ZERO_MAPPED' is wrong - use Kconfig variables or standard guards instead
#419: FILE: include/asm-m68k/io.h:363:
+#define __ARCH_HAS_NO_PAGE_ZERO_MAPPED		1

ERROR:DEFINE_ARCH_HAS: #define of '__ARCH_HAS_NO_PAGE_ZERO_MAPPED' is wrong - use Kconfig variables or standard guards instead
#525: FILE: include/asm-sparc/io.h:277:
+#define __ARCH_HAS_NO_PAGE_ZERO_MAPPED		1

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000204858.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 5 warnings, 1 checks, 442 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000204858.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
