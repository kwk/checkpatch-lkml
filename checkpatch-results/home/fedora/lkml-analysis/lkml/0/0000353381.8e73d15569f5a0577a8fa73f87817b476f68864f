WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#23: 
diff -u --new-file --recursive --exclude-from /usr/src/exclude linux-2.6.0-test1/sound/oss/harmony.c linux-2.6.0-test1-ac2/sound/oss/harmony.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#27: FILE: sound/oss/harmony.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#28: FILE: sound/oss/harmony.c:2:
+ ^Idrivers/sound/harmony.c $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#28: FILE: sound/oss/harmony.c:2:
+ ^Idrivers/sound/harmony.c $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#28: FILE: sound/oss/harmony.c:2:
+ ^Idrivers/sound/harmony.c $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#28: FILE: sound/oss/harmony.c:2:
+/*
+ 	drivers/sound/harmony.c 

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#34: FILE: sound/oss/harmony.c:8:
+^IOn older 715 machines you'll find the technically identical chip $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#42: FILE: sound/oss/harmony.c:16:
+^I^I^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#42: FILE: sound/oss/harmony.c:16:
+
+				

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#63: FILE: sound/oss/harmony.c:37:
+#include <asm/io.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#68: FILE: sound/oss/harmony.c:42:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#74: FILE: sound/oss/harmony.c:48:
+# define DPRINTK printk $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#76: FILE: sound/oss/harmony.c:50:
+# define DPRINTK(x,...)
                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#79: FILE: sound/oss/harmony.c:53:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#134: FILE: sound/oss/harmony.c:108:
+#define GAIN_HE_MASK    ( 1 << GAIN_HE_SHIFT) $

ERROR:SPACING: space prohibited after that open parenthesis '('
#134: FILE: sound/oss/harmony.c:108:
+#define GAIN_HE_MASK    ( 1 << GAIN_HE_SHIFT) 

CHECK:BIT_MACRO: Prefer using the BIT macro
#134: FILE: sound/oss/harmony.c:108:
+#define GAIN_HE_MASK    ( 1 << GAIN_HE_SHIFT) 

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#136: FILE: sound/oss/harmony.c:110:
+#define GAIN_LE_MASK    ( 1 << GAIN_LE_SHIFT) $

ERROR:SPACING: space prohibited after that open parenthesis '('
#136: FILE: sound/oss/harmony.c:110:
+#define GAIN_LE_MASK    ( 1 << GAIN_LE_SHIFT) 

CHECK:BIT_MACRO: Prefer using the BIT macro
#136: FILE: sound/oss/harmony.c:110:
+#define GAIN_LE_MASK    ( 1 << GAIN_LE_SHIFT) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#138: FILE: sound/oss/harmony.c:112:
+#define GAIN_SE_MASK    ( 1 << GAIN_SE_SHIFT) $

ERROR:SPACING: space prohibited after that open parenthesis '('
#138: FILE: sound/oss/harmony.c:112:
+#define GAIN_SE_MASK    ( 1 << GAIN_SE_SHIFT) 

CHECK:BIT_MACRO: Prefer using the BIT macro
#138: FILE: sound/oss/harmony.c:112:
+#define GAIN_SE_MASK    ( 1 << GAIN_SE_SHIFT) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#140: FILE: sound/oss/harmony.c:114:
+#define GAIN_IS_MASK    ( 1 << GAIN_IS_SHIFT) $

ERROR:SPACING: space prohibited after that open parenthesis '('
#140: FILE: sound/oss/harmony.c:114:
+#define GAIN_IS_MASK    ( 1 << GAIN_IS_SHIFT) 

CHECK:BIT_MACRO: Prefer using the BIT macro
#140: FILE: sound/oss/harmony.c:114:
+#define GAIN_IS_MASK    ( 1 << GAIN_IS_SHIFT) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#142: FILE: sound/oss/harmony.c:116:
+#define GAIN_MA_MASK    ( 0x0f << GAIN_MA_SHIFT) $

ERROR:SPACING: space prohibited after that open parenthesis '('
#142: FILE: sound/oss/harmony.c:116:
+#define GAIN_MA_MASK    ( 0x0f << GAIN_MA_SHIFT) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#144: FILE: sound/oss/harmony.c:118:
+#define GAIN_LI_MASK    ( 0x0f << GAIN_LI_SHIFT) $

ERROR:SPACING: space prohibited after that open parenthesis '('
#144: FILE: sound/oss/harmony.c:118:
+#define GAIN_LI_MASK    ( 0x0f << GAIN_LI_SHIFT) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#146: FILE: sound/oss/harmony.c:120:
+#define GAIN_RI_MASK    ( 0x0f << GAIN_RI_SHIFT) $

ERROR:SPACING: space prohibited after that open parenthesis '('
#146: FILE: sound/oss/harmony.c:120:
+#define GAIN_RI_MASK    ( 0x0f << GAIN_RI_SHIFT) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#148: FILE: sound/oss/harmony.c:122:
+#define GAIN_LO_MASK    ( 0x3f << GAIN_LO_SHIFT) $

ERROR:SPACING: space prohibited after that open parenthesis '('
#148: FILE: sound/oss/harmony.c:122:
+#define GAIN_LO_MASK    ( 0x3f << GAIN_LO_SHIFT) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#150: FILE: sound/oss/harmony.c:124:
+#define GAIN_RO_MASK    ( 0x3f << GAIN_RO_SHIFT) $

ERROR:SPACING: space prohibited after that open parenthesis '('
#150: FILE: sound/oss/harmony.c:124:
+#define GAIN_RO_MASK    ( 0x3f << GAIN_RO_SHIFT) 

CHECK:LINE_SPACING: Please don't use multiple blank lines
#152: FILE: sound/oss/harmony.c:126:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#164: FILE: sound/oss/harmony.c:138:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#196: FILE: sound/oss/harmony.c:170:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#199: FILE: sound/oss/harmony.c:173:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#202: FILE: sound/oss/harmony.c:176:
+^Iint nb_filled_play; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#206: FILE: sound/oss/harmony.c:180:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#210: FILE: sound/oss/harmony.c:184:
+^Istruct pci_dev *fake_pci_dev; /* The fake pci_dev needed for $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#211: FILE: sound/oss/harmony.c:185:
+	struct pci_dev *fake_pci_dev; /* The fake pci_dev needed for 
+					pci_* functions under ccio. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#211: FILE: sound/oss/harmony.c:185:
+					pci_* functions under ccio. */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#214: FILE: sound/oss/harmony.c:188:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#217: FILE: sound/oss/harmony.c:191:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#235: FILE: sound/oss/harmony.c:209:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#236: FILE: sound/oss/harmony.c:210:
+#define CHECK_WBACK_INV_OFFSET(b,offset,len) \
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#236: FILE: sound/oss/harmony.c:210:
+#define CHECK_WBACK_INV_OFFSET(b,offset,len) \
                                        ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#236: FILE: sound/oss/harmony.c:210:
+#define CHECK_WBACK_INV_OFFSET(b,offset,len) \
+        do { if (!b.dma_consistent) \
+		dma_cache_wback_inv((unsigned long)b.addr+offset,len); \
+	} while (0) 

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'b' may be better as '(b)' to avoid precedence issues
#236: FILE: sound/oss/harmony.c:210:
+#define CHECK_WBACK_INV_OFFSET(b,offset,len) \
+        do { if (!b.dma_consistent) \
+		dma_cache_wback_inv((unsigned long)b.addr+offset,len); \
+	} while (0) 

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'offset' may be better as '(offset)' to avoid precedence issues
#236: FILE: sound/oss/harmony.c:210:
+#define CHECK_WBACK_INV_OFFSET(b,offset,len) \
+        do { if (!b.dma_consistent) \
+		dma_cache_wback_inv((unsigned long)b.addr+offset,len); \
+	} while (0) 

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: sound/oss/harmony.c:211:
+        do { if (!b.dma_consistent) \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: sound/oss/harmony.c:211:
+        do { if (!b.dma_consistent) \$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#238: FILE: sound/oss/harmony.c:212:
+		dma_cache_wback_inv((unsigned long)b.addr+offset,len); \
 		                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#238: FILE: sound/oss/harmony.c:212:
+		dma_cache_wback_inv((unsigned long)b.addr+offset,len); \
 		                                                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#239: FILE: sound/oss/harmony.c:213:
+^I} while (0) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#241: FILE: sound/oss/harmony.c:215:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#241: FILE: sound/oss/harmony.c:215:
+
+	

ERROR:TRAILING_WHITESPACE: trailing whitespace
#242: FILE: sound/oss/harmony.c:216:
+static int __init harmony_alloc_buffer(struct harmony_buffer *b, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#243: FILE: sound/oss/harmony.c:217:
+static int __init harmony_alloc_buffer(struct harmony_buffer *b, 
+		int buffer_count)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#246: FILE: sound/oss/harmony.c:220:
+^Ib->addr = pci_alloc_consistent(harmony.fake_pci_dev, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#247: FILE: sound/oss/harmony.c:221:
+	b->addr = pci_alloc_consistent(harmony.fake_pci_dev, 
+			  b->len, &b->dma_handle);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#251: FILE: sound/oss/harmony.c:225:
+		DPRINTK(KERN_INFO PFX "consistent memory: 0x%lx, played_buf: 0x%lx\n",
+				(unsigned long)b->dma_handle, (unsigned long)b->addr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#257: FILE: sound/oss/harmony.c:231:
+			printk(KERN_ERR PFX "couldn't allocate memory\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#257: FILE: sound/oss/harmony.c:231:
+		if (!b->addr) {
+			printk(KERN_ERR PFX "couldn't allocate memory\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#272: FILE: sound/oss/harmony.c:246:
+		pci_free_consistent(harmony.fake_pci_dev,
+				b->len, b->addr, b->dma_handle);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#279: FILE: sound/oss/harmony.c:253:
+
+

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#285: FILE: sound/oss/harmony.c:259:
+static void __inline__ harmony_wait_CNTL(void)

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

WARNING:INLINE: plain inline is preferred over __inline__
#285: FILE: sound/oss/harmony.c:259:
+static void __inline__ harmony_wait_CNTL(void)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 27)
#288: FILE: sound/oss/harmony.c:262:
+	while (gsc_readl(&harmony.hpa->cntl) & CNTL_C)
+		/* wait */ ;

WARNING:SPACING: space prohibited before semicolon
#289: FILE: sound/oss/harmony.c:263:
+		/* wait */ ;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#292: FILE: sound/oss/harmony.c:266:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#293: FILE: sound/oss/harmony.c:267:
+static void harmony_update_control(void) $

CHECK:SPACING: No space is necessary after a cast
#293: FILE: sound/oss/harmony.c:267:
+static void harmony_update_control(void) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#296: FILE: sound/oss/harmony.c:270:
+^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#298: FILE: sound/oss/harmony.c:272:
+^Idefault_cntl = (CNTL_C |  ^I^I/* The C bit */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#303: FILE: sound/oss/harmony.c:277:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#308: FILE: sound/oss/harmony.c:282:
+static void harmony_set_control(u8 data_format, u8 sample_rate, u8 stereo_select) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#316: FILE: sound/oss/harmony.c:290:
+static void harmony_set_rate(u8 data_rate) $

WARNING:LINE_SPACING: Missing a blank line after declarations
#325: FILE: sound/oss/harmony.c:299:
+	int newrate;
+	switch (*freq) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#326: FILE: sound/oss/harmony.c:300:
+	case 8000:	newrate = HARMONY_SR_8KHZ;	break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#327: FILE: sound/oss/harmony.c:301:
+^Icase 16000:^Inewrate = HARMONY_SR_16KHZ;^Ibreak; $

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#327: FILE: sound/oss/harmony.c:301:
+	case 16000:	newrate = HARMONY_SR_16KHZ;	break; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#328: FILE: sound/oss/harmony.c:302:
+^Icase 27428:^Inewrate = HARMONY_SR_27KHZ;^Ibreak; $

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#328: FILE: sound/oss/harmony.c:302:
+	case 27428:	newrate = HARMONY_SR_27KHZ;	break; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#329: FILE: sound/oss/harmony.c:303:
+^Icase 32000:^Inewrate = HARMONY_SR_32KHZ;^Ibreak; $

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#329: FILE: sound/oss/harmony.c:303:
+	case 32000:	newrate = HARMONY_SR_32KHZ;	break; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#330: FILE: sound/oss/harmony.c:304:
+^Icase 48000:^Inewrate = HARMONY_SR_48KHZ;^Ibreak; $

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#330: FILE: sound/oss/harmony.c:304:
+	case 48000:	newrate = HARMONY_SR_48KHZ;	break; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#331: FILE: sound/oss/harmony.c:305:
+^Icase 9600:^Inewrate = HARMONY_SR_9KHZ;^Ibreak; $

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#331: FILE: sound/oss/harmony.c:305:
+	case 9600:	newrate = HARMONY_SR_9KHZ;	break; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#332: FILE: sound/oss/harmony.c:306:
+^Icase 5125:^Inewrate = HARMONY_SR_5KHZ;^Ibreak; $

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#332: FILE: sound/oss/harmony.c:306:
+	case 5125:	newrate = HARMONY_SR_5KHZ;	break; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#333: FILE: sound/oss/harmony.c:307:
+^Icase 11025:^Inewrate = HARMONY_SR_11KHZ;^Ibreak; $

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#333: FILE: sound/oss/harmony.c:307:
+	case 11025:	newrate = HARMONY_SR_11KHZ;	break; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#334: FILE: sound/oss/harmony.c:308:
+^Icase 18900:^Inewrate = HARMONY_SR_18KHZ;^Ibreak; $

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#334: FILE: sound/oss/harmony.c:308:
+	case 18900:	newrate = HARMONY_SR_18KHZ;	break; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#335: FILE: sound/oss/harmony.c:309:
+^Icase 22050:^Inewrate = HARMONY_SR_22KHZ;^Ibreak; $

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#335: FILE: sound/oss/harmony.c:309:
+	case 22050:	newrate = HARMONY_SR_22KHZ;	break; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#336: FILE: sound/oss/harmony.c:310:
+^Icase 37800:^Inewrate = HARMONY_SR_37KHZ;^Ibreak; $

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#336: FILE: sound/oss/harmony.c:310:
+	case 37800:	newrate = HARMONY_SR_37KHZ;	break; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#337: FILE: sound/oss/harmony.c:311:
+^Icase 44100:^Inewrate = HARMONY_SR_44KHZ;^Ibreak; $

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#337: FILE: sound/oss/harmony.c:311:
+	case 44100:	newrate = HARMONY_SR_44KHZ;	break; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#338: FILE: sound/oss/harmony.c:312:
+^Icase 33075:^Inewrate = HARMONY_SR_33KHZ;^Ibreak; $

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#338: FILE: sound/oss/harmony.c:312:
+	case 33075:	newrate = HARMONY_SR_33KHZ;	break; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#339: FILE: sound/oss/harmony.c:313:
+^Icase 6615:^Inewrate = HARMONY_SR_6KHZ;^Ibreak; $

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#339: FILE: sound/oss/harmony.c:313:
+	case 6615:	newrate = HARMONY_SR_6KHZ;	break; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#340: FILE: sound/oss/harmony.c:314:
+^Idefault:^Inewrate = HARMONY_SR_8KHZ; $

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#340: FILE: sound/oss/harmony.c:314:
+	default:	newrate = HARMONY_SR_8KHZ; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#346: FILE: sound/oss/harmony.c:320:
+static void harmony_set_format(u8 data_format) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#352: FILE: sound/oss/harmony.c:326:
+static void harmony_set_stereo(u8 stereo_select) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#358: FILE: sound/oss/harmony.c:332:
+static void harmony_disable_interrupts(void) $

CHECK:SPACING: No space is necessary after a cast
#358: FILE: sound/oss/harmony.c:332:
+static void harmony_disable_interrupts(void) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#361: FILE: sound/oss/harmony.c:335:
+^Igsc_writel(0, &harmony.hpa->dstatus); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#364: FILE: sound/oss/harmony.c:338:
+static void harmony_enable_interrupts(void) $

CHECK:SPACING: No space is necessary after a cast
#364: FILE: sound/oss/harmony.c:338:
+static void harmony_enable_interrupts(void) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#367: FILE: sound/oss/harmony.c:341:
+^Igsc_writel(DSTATUS_IE, &harmony.hpa->dstatus); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#379: FILE: sound/oss/harmony.c:353:
+static void harmony_silence(struct harmony_buffer *buffer, int start, int length) $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#384: FILE: sound/oss/harmony.c:358:
+	/* Despite what you hear, silence is different in
+	   different audio formats.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#384: FILE: sound/oss/harmony.c:358:
+	   different audio formats.  */

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#385: FILE: sound/oss/harmony.c:359:
+	switch (harmony.data_format) {
+		case HARMONY_DF_8BIT_ULAW:	silence_char = 0x55; break;
+		case HARMONY_DF_8BIT_ALAW:	silence_char = 0xff; break;
+		case HARMONY_DF_16BIT_LINEAR:	/* fall through */
+		default:			silence_char = 0;

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#386: FILE: sound/oss/harmony.c:360:
+		case HARMONY_DF_8BIT_ULAW:	silence_char = 0x55; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#387: FILE: sound/oss/harmony.c:361:
+		case HARMONY_DF_8BIT_ALAW:	silence_char = 0xff; break;

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#388: FILE: sound/oss/harmony.c:362:
+		case HARMONY_DF_16BIT_LINEAR:	/* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#389: FILE: sound/oss/harmony.c:363:
+		default:			silence_char = 0;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#392: FILE: sound/oss/harmony.c:366:
+	memset(buffer->addr+start, silence_char, length);
 	                   ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#395: FILE: sound/oss/harmony.c:369:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#398: FILE: sound/oss/harmony.c:372:
+^Iif (harmony.audio_open) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#400: FILE: sound/oss/harmony.c:374:
+^I$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#402: FILE: sound/oss/harmony.c:376:
+	harmony.suspended_playing = harmony.suspended_recording = 1;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#403: FILE: sound/oss/harmony.c:377:
+	harmony.blocked_playing   = harmony.blocked_recording   = 0;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#404: FILE: sound/oss/harmony.c:378:
+	harmony.first_filled_play = harmony.first_filled_record = 0;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#405: FILE: sound/oss/harmony.c:379:
+	harmony.nb_filled_play    = harmony.nb_filled_record    = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#409: FILE: sound/oss/harmony.c:383:
+^I$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#416: FILE: sound/oss/harmony.c:390:
+	harmony_silence(&played_buf, 0, HARMONY_BUF_SIZE*MAX_BUFS);
 	                                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#417: FILE: sound/oss/harmony.c:391:
+	CHECK_WBACK_INV_OFFSET(played_buf, 0, HARMONY_BUF_SIZE*MAX_BUFS);
 	                                                      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#418: FILE: sound/oss/harmony.c:392:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#428: FILE: sound/oss/harmony.c:402:
+^Iif (!harmony.audio_open) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#430: FILE: sound/oss/harmony.c:404:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#441: FILE: sound/oss/harmony.c:415:
+                                char *buffer,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#441: FILE: sound/oss/harmony.c:415:
+static ssize_t harmony_audio_read(struct file *file,
+                                char *buffer,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: sound/oss/harmony.c:415:
+                                char *buffer,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#442: FILE: sound/oss/harmony.c:416:
+                                size_t size_count,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#442: FILE: sound/oss/harmony.c:416:
+                                size_t size_count,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#443: FILE: sound/oss/harmony.c:417:
+                                loff_t *ppos)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#443: FILE: sound/oss/harmony.c:417:
+                                loff_t *ppos)$

CHECK:SPACING: No space is necessary after a cast
#445: FILE: sound/oss/harmony.c:419:
+	int total_count = (int) size_count;

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#449: FILE: sound/oss/harmony.c:423:
+	while (count<total_count) {
 	            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#452: FILE: sound/oss/harmony.c:426:
+^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#456: FILE: sound/oss/harmony.c:430:
+^I^I        if (harmony.suspended_recording) {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#460: FILE: sound/oss/harmony.c:434:
+^I^I^I^I^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#464: FILE: sound/oss/harmony.c:438:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#467: FILE: sound/oss/harmony.c:441:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#471: FILE: sound/oss/harmony.c:445:
+^I^Icopy_to_user(buffer+count, $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#471: FILE: sound/oss/harmony.c:445:
+		copy_to_user(buffer+count, 
 		                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#472: FILE: sound/oss/harmony.c:446:
+^I^I^I     recorded_buf.addr+(HARMONY_BUF_SIZE*buf_to_read), $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#472: FILE: sound/oss/harmony.c:446:
+			     recorded_buf.addr+(HARMONY_BUF_SIZE*buf_to_read), 
 			                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#472: FILE: sound/oss/harmony.c:446:
+			     recorded_buf.addr+(HARMONY_BUF_SIZE*buf_to_read), 
 			                                        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#474: FILE: sound/oss/harmony.c:448:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#478: FILE: sound/oss/harmony.c:452:
+^I^I^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#484: FILE: sound/oss/harmony.c:458:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#486: FILE: sound/oss/harmony.c:460:
+
+

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#495: FILE: sound/oss/harmony.c:469:
+#define four_bytes_to_u32(start) (file_header[start] << 24)|\
                                                            ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#495: FILE: sound/oss/harmony.c:469:
+#define four_bytes_to_u32(start) (file_header[start] << 24)|\
+                                  (file_header[start+1] << 16)|\
+                                  (file_header[start+2] << 8)|\
+                                  (file_header[start+3]);

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'start' - possible side-effects?
#495: FILE: sound/oss/harmony.c:469:
+#define four_bytes_to_u32(start) (file_header[start] << 24)|\
+                                  (file_header[start+1] << 16)|\
+                                  (file_header[start+2] << 8)|\
+                                  (file_header[start+3]);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#495: FILE: sound/oss/harmony.c:469:
+#define four_bytes_to_u32(start) (file_header[start] << 24)|\
+                                  (file_header[start+1] << 16)|\
+                                  (file_header[start+2] << 8)|\
+                                  (file_header[start+3]);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:CODE_INDENT: code indent should use tabs where possible
#496: FILE: sound/oss/harmony.c:470:
+                                  (file_header[start+1] << 16)|\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#496: FILE: sound/oss/harmony.c:470:
+                                  (file_header[start+1] << 16)|\$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#496: FILE: sound/oss/harmony.c:470:
+                                  (file_header[start+1] << 16)|\
                                                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#496: FILE: sound/oss/harmony.c:470:
+                                  (file_header[start+1] << 16)|\
                                                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#497: FILE: sound/oss/harmony.c:471:
+                                  (file_header[start+2] << 8)|\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#497: FILE: sound/oss/harmony.c:471:
+                                  (file_header[start+2] << 8)|\$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#497: FILE: sound/oss/harmony.c:471:
+                                  (file_header[start+2] << 8)|\
                                                     ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#497: FILE: sound/oss/harmony.c:471:
+                                  (file_header[start+2] << 8)|\
                                                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#498: FILE: sound/oss/harmony.c:472:
+                                  (file_header[start+3]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#498: FILE: sound/oss/harmony.c:472:
+                                  (file_header[start+3]);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#498: FILE: sound/oss/harmony.c:472:
+                                  (file_header[start+3]);
                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#500: FILE: sound/oss/harmony.c:474:
+#define test_rate(tested,real_value,harmony_value) if ((tested)<=(real_value))\
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#500: FILE: sound/oss/harmony.c:474:
+#define test_rate(tested,real_value,harmony_value) if ((tested)<=(real_value))\
                                    ^

ERROR:SPACING: spaces required around that '<=' (ctx:VxV)
#500: FILE: sound/oss/harmony.c:474:
+#define test_rate(tested,real_value,harmony_value) if ((tested)<=(real_value))\
                                                                ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#500: FILE: sound/oss/harmony.c:474:
+#define test_rate(tested,real_value,harmony_value) if ((tested)<=(real_value))\
+                                                    

ERROR:TRAILING_WHITESPACE: trailing whitespace
#501: FILE: sound/oss/harmony.c:475:
+                                                    $

ERROR:CODE_INDENT: code indent should use tabs where possible
#501: FILE: sound/oss/harmony.c:475:
+                                                    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#501: FILE: sound/oss/harmony.c:475:
+                                                    $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#502: FILE: sound/oss/harmony.c:476:
+                                                    
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#507: FILE: sound/oss/harmony.c:481:
+^I$

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#508: FILE: sound/oss/harmony.c:482:
+	if (block_size>24) {
 	              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#511: FILE: sound/oss/harmony.c:485:
+^I^I$

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#512: FILE: sound/oss/harmony.c:486:
+		if ((file_header[4]==0) && (start_string==0x2E736E64)) {
 		                   ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#512: FILE: sound/oss/harmony.c:486:
+		if ((file_header[4]==0) && (start_string==0x2E736E64)) {
 		                                        ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'file_header[4]==0'
#512: FILE: sound/oss/harmony.c:486:
+		if ((file_header[4]==0) && (start_string==0x2E736E64)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'start_string==0x2E736E64'
#512: FILE: sound/oss/harmony.c:486:
+		if ((file_header[4]==0) && (start_string==0x2E736E64)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#516: FILE: sound/oss/harmony.c:490:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#520: FILE: sound/oss/harmony.c:494:
+^I^I^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#533: FILE: sound/oss/harmony.c:507:
+				harmony_set_control(HARMONY_DF_16BIT_LINEAR,
+						HARMONY_SR_44KHZ, HARMONY_SS_STEREO);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#549: FILE: sound/oss/harmony.c:523:
+^I^I^Ireturn;^I^I^I$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#554: FILE: sound/oss/harmony.c:528:
+}
+#undef four_bytes_to_u32

CHECK:LINE_SPACING: Please don't use multiple blank lines
#556: FILE: sound/oss/harmony.c:530:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#558: FILE: sound/oss/harmony.c:532:
+                                 const char *buffer,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#558: FILE: sound/oss/harmony.c:532:
+static ssize_t harmony_audio_write(struct file *file,
+                                 const char *buffer,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#558: FILE: sound/oss/harmony.c:532:
+                                 const char *buffer,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#559: FILE: sound/oss/harmony.c:533:
+                                 size_t size_count,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#559: FILE: sound/oss/harmony.c:533:
+                                 size_t size_count,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#560: FILE: sound/oss/harmony.c:534:
+                                 loff_t *ppos)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#560: FILE: sound/oss/harmony.c:534:
+                                 loff_t *ppos)$

CHECK:SPACING: No space is necessary after a cast
#562: FILE: sound/oss/harmony.c:536:
+	int total_count = (int) size_count;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#567: FILE: sound/oss/harmony.c:541:
+^Iif (!harmony.format_initialized) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 11)
#567: FILE: sound/oss/harmony.c:541:
+	if (!harmony.format_initialized) 
+	   harmony_format_auto_detect(buffer, total_count);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#569: FILE: sound/oss/harmony.c:543:
+^I$

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#570: FILE: sound/oss/harmony.c:544:
+	while (count<total_count) {
 	            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#575: FILE: sound/oss/harmony.c:549:
+		if (harmony.nb_filled_play+2 >= MAX_BUFS && !harmony.play_offset) {
 		                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#580: FILE: sound/oss/harmony.c:554:
+		if (harmony.nb_filled_play+2 >= MAX_BUFS && !harmony.play_offset)
 		                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#582: FILE: sound/oss/harmony.c:556:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#583: FILE: sound/oss/harmony.c:557:
+^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#583: FILE: sound/oss/harmony.c:557:
+		
+		

ERROR:TRAILING_WHITESPACE: trailing whitespace
#584: FILE: sound/oss/harmony.c:558:
+^I^Ibuf_to_fill = (harmony.first_filled_play+harmony.nb_filled_play); $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#584: FILE: sound/oss/harmony.c:558:
+		buf_to_fill = (harmony.first_filled_play+harmony.nb_filled_play); 
 		                                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#590: FILE: sound/oss/harmony.c:564:
+		if ((total_count-count) > HARMONY_BUF_SIZE - harmony.play_offset) {
 		                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#594: FILE: sound/oss/harmony.c:568:
+^I^I^I/* Clear out the buffer, since there we'll only be $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#595: FILE: sound/oss/harmony.c:569:
+			/* Clear out the buffer, since there we'll only be 
+			   overlaying part of the old buffer with the new one */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#595: FILE: sound/oss/harmony.c:569:
+			   overlaying part of the old buffer with the new one */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#596: FILE: sound/oss/harmony.c:570:
+^I^I^Iharmony_silence(&played_buf, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#597: FILE: sound/oss/harmony.c:571:
+			harmony_silence(&played_buf, 
+				HARMONY_BUF_SIZE*buf_to_fill+frame_size+harmony.play_offset,

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#597: FILE: sound/oss/harmony.c:571:
+				HARMONY_BUF_SIZE*buf_to_fill+frame_size+harmony.play_offset,
 				                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#597: FILE: sound/oss/harmony.c:571:
+				HARMONY_BUF_SIZE*buf_to_fill+frame_size+harmony.play_offset,
 				                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#597: FILE: sound/oss/harmony.c:571:
+				HARMONY_BUF_SIZE*buf_to_fill+frame_size+harmony.play_offset,
 				                                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#598: FILE: sound/oss/harmony.c:572:
+				HARMONY_BUF_SIZE-frame_size-harmony.play_offset);
 				                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#598: FILE: sound/oss/harmony.c:572:
+				HARMONY_BUF_SIZE-frame_size-harmony.play_offset);
 				                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#602: FILE: sound/oss/harmony.c:576:
+^I^Icopy_from_user(played_buf.addr + (HARMONY_BUF_SIZE*buf_to_fill) + harmony.play_offset, $

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#602: FILE: sound/oss/harmony.c:576:
+		copy_from_user(played_buf.addr + (HARMONY_BUF_SIZE*buf_to_fill) + harmony.play_offset, 

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#602: FILE: sound/oss/harmony.c:576:
+		copy_from_user(played_buf.addr + (HARMONY_BUF_SIZE*buf_to_fill) + harmony.play_offset, 
 		                                                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#603: FILE: sound/oss/harmony.c:577:
+		copy_from_user(played_buf.addr + (HARMONY_BUF_SIZE*buf_to_fill) + harmony.play_offset, 
+				buffer+count, frame_size);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#603: FILE: sound/oss/harmony.c:577:
+				buffer+count, frame_size);
 				      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#604: FILE: sound/oss/harmony.c:578:
+^I^ICHECK_WBACK_INV_OFFSET(played_buf, (HARMONY_BUF_SIZE*buf_to_fill + harmony.play_offset), $

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#604: FILE: sound/oss/harmony.c:578:
+		CHECK_WBACK_INV_OFFSET(played_buf, (HARMONY_BUF_SIZE*buf_to_fill + harmony.play_offset), 

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#604: FILE: sound/oss/harmony.c:578:
+		CHECK_WBACK_INV_OFFSET(played_buf, (HARMONY_BUF_SIZE*buf_to_fill + harmony.play_offset), 
 		                                                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#605: FILE: sound/oss/harmony.c:579:
+		CHECK_WBACK_INV_OFFSET(played_buf, (HARMONY_BUF_SIZE*buf_to_fill + harmony.play_offset), 
+				frame_size);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#606: FILE: sound/oss/harmony.c:580:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#609: FILE: sound/oss/harmony.c:583:
+^I^I$

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#613: FILE: sound/oss/harmony.c:587:
+		if (harmony.suspended_playing && (harmony.nb_filled_play>=4))
 		                                                        ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'harmony.nb_filled_play>=4'
#613: FILE: sound/oss/harmony.c:587:
+		if (harmony.suspended_playing && (harmony.nb_filled_play>=4))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#616: FILE: sound/oss/harmony.c:590:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#621: FILE: sound/oss/harmony.c:595:
+                                     struct poll_table_struct *wait)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#621: FILE: sound/oss/harmony.c:595:
+static unsigned int harmony_audio_poll(struct file *file,
+                                     struct poll_table_struct *wait)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#621: FILE: sound/oss/harmony.c:595:
+                                     struct poll_table_struct *wait)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#624: FILE: sound/oss/harmony.c:598:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#643: FILE: sound/oss/harmony.c:617:
+                                struct file *file,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#643: FILE: sound/oss/harmony.c:617:
+static int harmony_audio_ioctl(struct inode *inode,
+                                struct file *file,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#643: FILE: sound/oss/harmony.c:617:
+                                struct file *file,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#645: FILE: sound/oss/harmony.c:619:
+                                unsigned long arg)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#645: FILE: sound/oss/harmony.c:619:
+                                unsigned long arg)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#650: FILE: sound/oss/harmony.c:624:
+^I$

CHECK:SPACING: No space is necessary after a cast
#653: FILE: sound/oss/harmony.c:627:
+		return put_user(SOUND_VERSION, (int *) arg);

CHECK:SPACING: No space is necessary after a cast
#657: FILE: sound/oss/harmony.c:631:
+		return put_user(ival, (int *) arg);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#660: FILE: sound/oss/harmony.c:634:
+^I^Iival = (AFMT_S16_BE | AFMT_MU_LAW | AFMT_A_LAW ); $

ERROR:SPACING: space prohibited before that close parenthesis ')'
#660: FILE: sound/oss/harmony.c:634:
+		ival = (AFMT_S16_BE | AFMT_MU_LAW | AFMT_A_LAW ); 

CHECK:SPACING: No space is necessary after a cast
#661: FILE: sound/oss/harmony.c:635:
+		return put_user(ival, (int *) arg);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#662: FILE: sound/oss/harmony.c:636:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#664: FILE: sound/oss/harmony.c:638:
+^I^Iif (get_user(ival, (int *) arg)) $

CHECK:SPACING: No space is necessary after a cast
#664: FILE: sound/oss/harmony.c:638:
+		if (get_user(ival, (int *) arg)) 

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#668: FILE: sound/oss/harmony.c:642:
+			case AFMT_MU_LAW:	new_format = HARMONY_DF_8BIT_ULAW; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#669: FILE: sound/oss/harmony.c:643:
+			case AFMT_A_LAW:	new_format = HARMONY_DF_8BIT_ALAW; break;

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#670: FILE: sound/oss/harmony.c:644:
+			case AFMT_S16_LE:	/* fall through, but not really supported */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#671: FILE: sound/oss/harmony.c:645:
+			case AFMT_S16_BE:	new_format = HARMONY_DF_16BIT_LINEAR;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#673: FILE: sound/oss/harmony.c:647:
+^I^I^I^I^I^Ibreak; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#675: FILE: sound/oss/harmony.c:649:
+^I^I^I^IDPRINTK(KERN_WARNING PFX $

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#684: FILE: sound/oss/harmony.c:658:
+			case HARMONY_DF_8BIT_ULAW:	ival = AFMT_MU_LAW; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#685: FILE: sound/oss/harmony.c:659:
+			case HARMONY_DF_8BIT_ALAW:	ival = AFMT_A_LAW;  break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#686: FILE: sound/oss/harmony.c:660:
+			case HARMONY_DF_16BIT_LINEAR:	ival = AFMT_U16_BE; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#687: FILE: sound/oss/harmony.c:661:
+			default: ival = 0;

CHECK:SPACING: No space is necessary after a cast
#690: FILE: sound/oss/harmony.c:664:
+		return put_user(ival, (int *) arg);

CHECK:SPACING: No space is necessary after a cast
#694: FILE: sound/oss/harmony.c:668:
+		return put_user(ival, (int *) arg);

CHECK:SPACING: No space is necessary after a cast
#697: FILE: sound/oss/harmony.c:671:
+		if (get_user(ival, (int *) arg))

CHECK:SPACING: No space is necessary after a cast
#701: FILE: sound/oss/harmony.c:675:
+		return put_user(ival, (int*) arg);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#701: FILE: sound/oss/harmony.c:675:
+		return put_user(ival, (int*) arg);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#704: FILE: sound/oss/harmony.c:678:
+		if (get_user(ival, (int *) arg))

CHECK:SPACING: No space is necessary after a cast
#709: FILE: sound/oss/harmony.c:683:
+		return put_user(ival, (int *) arg);

CHECK:SPACING: No space is necessary after a cast
#713: FILE: sound/oss/harmony.c:687:
+		return put_user(ival, (int *) arg);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#714: FILE: sound/oss/harmony.c:688:
+^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#715: FILE: sound/oss/harmony.c:689:
+        case SNDCTL_DSP_NONBLOCK:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#715: FILE: sound/oss/harmony.c:689:
+        case SNDCTL_DSP_NONBLOCK:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#716: FILE: sound/oss/harmony.c:690:
+                file->f_flags |= O_NONBLOCK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#716: FILE: sound/oss/harmony.c:690:
+                file->f_flags |= O_NONBLOCK;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#717: FILE: sound/oss/harmony.c:691:
+                return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#717: FILE: sound/oss/harmony.c:691:
+                return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#719: FILE: sound/oss/harmony.c:693:
+        case SNDCTL_DSP_RESET:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#719: FILE: sound/oss/harmony.c:693:
+        case SNDCTL_DSP_RESET:$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#720: FILE: sound/oss/harmony.c:694:
+		if (!harmony.suspended_recording) {
+			/* TODO: stop_recording() */
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#729: FILE: sound/oss/harmony.c:703:
+		frag_buf = (ival>>16) & 0xffff;
 		                ^

CHECK:SPACING: No space is necessary after a cast
#734: FILE: sound/oss/harmony.c:708:
+		return put_user(ival, (int *) arg);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#735: FILE: sound/oss/harmony.c:709:
+^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#740: FILE: sound/oss/harmony.c:714:
+                info.fragments = MAX_BUFS - harmony.nb_filled_play;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#740: FILE: sound/oss/harmony.c:714:
+                info.fragments = MAX_BUFS - harmony.nb_filled_play;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#742: FILE: sound/oss/harmony.c:716:
+                info.bytes = info.fragments * info.fragsize;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#742: FILE: sound/oss/harmony.c:716:
+                info.bytes = info.fragments * info.fragsize;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#749: FILE: sound/oss/harmony.c:723:
+                info.fragments = /*MAX_BUFS-*/ harmony.nb_filled_record;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#749: FILE: sound/oss/harmony.c:723:
+                info.fragments = /*MAX_BUFS-*/ harmony.nb_filled_record;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#751: FILE: sound/oss/harmony.c:725:
+                info.bytes = info.fragments * info.fragsize;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#751: FILE: sound/oss/harmony.c:725:
+                info.bytes = info.fragments * info.fragsize;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#753: FILE: sound/oss/harmony.c:727:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#757: FILE: sound/oss/harmony.c:731:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#761: FILE: sound/oss/harmony.c:735:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#766: FILE: sound/oss/harmony.c:740:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#780: FILE: sound/oss/harmony.c:754:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#783: FILE: sound/oss/harmony.c:757:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#789: FILE: sound/oss/harmony.c:763:
+^I^I^I^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#794: FILE: sound/oss/harmony.c:768:
+^I^I^Igsc_writel((unsigned long)played_buf.dma_handle + $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#795: FILE: sound/oss/harmony.c:769:
+					(HARMONY_BUF_SIZE*harmony.first_filled_play),
 					                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#800: FILE: sound/oss/harmony.c:774:
+^I^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#801: FILE: sound/oss/harmony.c:775:
+^I^I       ^Iharmony_enable_interrupts();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#801: FILE: sound/oss/harmony.c:775:
+^I^I       ^Iharmony_enable_interrupts();$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#803: FILE: sound/oss/harmony.c:777:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#807: FILE: sound/oss/harmony.c:781:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#810: FILE: sound/oss/harmony.c:784:
+		if((harmony.nb_filled_record+2>=MAX_BUFS) || harmony.suspended_recording)
+		{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#810: FILE: sound/oss/harmony.c:784:
+		if((harmony.nb_filled_record+2>=MAX_BUFS) || harmony.suspended_recording)
 		                            ^

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#810: FILE: sound/oss/harmony.c:784:
+		if((harmony.nb_filled_record+2>=MAX_BUFS) || harmony.suspended_recording)
 		                              ^

ERROR:SPACING: space required before the open parenthesis '('
#810: FILE: sound/oss/harmony.c:784:
+		if((harmony.nb_filled_record+2>=MAX_BUFS) || harmony.suspended_recording)

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#820: FILE: sound/oss/harmony.c:794:
+			buf_to_fill = (harmony.first_filled_record+harmony.nb_filled_record) % MAX_BUFS;

WARNING:LINE_SPACING: Missing a blank line after declarations
#820: FILE: sound/oss/harmony.c:794:
+			int buf_to_fill;
+			buf_to_fill = (harmony.first_filled_record+harmony.nb_filled_record) % MAX_BUFS;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#820: FILE: sound/oss/harmony.c:794:
+			buf_to_fill = (harmony.first_filled_record+harmony.nb_filled_record) % MAX_BUFS;
 			                                          ^

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#821: FILE: sound/oss/harmony.c:795:
+			CHECK_WBACK_INV_OFFSET(recorded_buf, HARMONY_BUF_SIZE*buf_to_fill, HARMONY_BUF_SIZE);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#821: FILE: sound/oss/harmony.c:795:
+			CHECK_WBACK_INV_OFFSET(recorded_buf, HARMONY_BUF_SIZE*buf_to_fill, HARMONY_BUF_SIZE);
 			                                                     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#823: FILE: sound/oss/harmony.c:797:
+					HARMONY_BUF_SIZE*buf_to_fill,
 					                ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#829: FILE: sound/oss/harmony.c:803:
+		if (harmony.blocked_recording && harmony.nb_filled_record>3)
 		                                                         ^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#839: FILE: sound/oss/harmony.c:813:
+static struct file_operations harmony_audio_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:INDENTED_LABEL: labels should not be indented
#840: FILE: sound/oss/harmony.c:814:
+	owner:	THIS_MODULE,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#841: FILE: sound/oss/harmony.c:815:
+	llseek:	no_llseek,
 	      ^

WARNING:INDENTED_LABEL: labels should not be indented
#841: FILE: sound/oss/harmony.c:815:
+	llseek:	no_llseek,

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#842: FILE: sound/oss/harmony.c:816:
+^Iread: ^Iharmony_audio_read,$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#842: FILE: sound/oss/harmony.c:816:
+	read: 	harmony_audio_read,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#842: FILE: sound/oss/harmony.c:816:
+	read: 	harmony_audio_read,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#843: FILE: sound/oss/harmony.c:817:
+	write:	harmony_audio_write,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#843: FILE: sound/oss/harmony.c:817:
+	write:	harmony_audio_write,

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#844: FILE: sound/oss/harmony.c:818:
+^Ipoll: ^Iharmony_audio_poll,$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#844: FILE: sound/oss/harmony.c:818:
+	poll: 	harmony_audio_poll,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#844: FILE: sound/oss/harmony.c:818:
+	poll: 	harmony_audio_poll,

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#845: FILE: sound/oss/harmony.c:819:
+^Iioctl: ^Iharmony_audio_ioctl,$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#845: FILE: sound/oss/harmony.c:819:
+	ioctl: 	harmony_audio_ioctl,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#845: FILE: sound/oss/harmony.c:819:
+	ioctl: 	harmony_audio_ioctl,

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#846: FILE: sound/oss/harmony.c:820:
+^Iopen: ^Iharmony_audio_open,$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#846: FILE: sound/oss/harmony.c:820:
+	open: 	harmony_audio_open,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#846: FILE: sound/oss/harmony.c:820:
+	open: 	harmony_audio_open,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#847: FILE: sound/oss/harmony.c:821:
+	release:harmony_audio_release,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#847: FILE: sound/oss/harmony.c:821:
+	release:harmony_audio_release,

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#853: FILE: sound/oss/harmony.c:827:
+	if (request_irq(harmony.irq, harmony_interrupt, 0 ,"harmony", &harmony)) {
 	                                                  ^

ERROR:SPACING: space required after that ',' (ctx:WxV)
#853: FILE: sound/oss/harmony.c:827:
+	if (request_irq(harmony.irq, harmony_interrupt, 0 ,"harmony", &harmony)) {
 	                                                  ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#854: FILE: sound/oss/harmony.c:828:
+		printk(KERN_ERR PFX "Error requesting irq %d.\n", harmony.irq);

ERROR:CODE_INDENT: code indent should use tabs where possible
#858: FILE: sound/oss/harmony.c:832:
+   ^Iharmony.dsp_unit = register_sound_dsp(&harmony_audio_fops, -1);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#858: FILE: sound/oss/harmony.c:832:
+   ^Iharmony.dsp_unit = register_sound_dsp(&harmony_audio_fops, -1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#858: FILE: sound/oss/harmony.c:832:
+   ^Iharmony.dsp_unit = register_sound_dsp(&harmony_audio_fops, -1);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#860: FILE: sound/oss/harmony.c:834:
+		printk(KERN_ERR PFX "Error registering dsp\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#864: FILE: sound/oss/harmony.c:838:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#865: FILE: sound/oss/harmony.c:839:
+^I/* Clear the buffers so you don't end up with crap in the buffers. */ $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#866: FILE: sound/oss/harmony.c:840:
+	harmony_silence(&played_buf, 0, HARMONY_BUF_SIZE*MAX_BUFS);
 	                                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#869: FILE: sound/oss/harmony.c:843:
+	CHECK_WBACK_INV_OFFSET(played_buf, 0, HARMONY_BUF_SIZE*MAX_BUFS);
 	                                                      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#874: FILE: sound/oss/harmony.c:848:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#876: FILE: sound/oss/harmony.c:850:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#880: FILE: sound/oss/harmony.c:854:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#882: FILE: sound/oss/harmony.c:856:
+ * mixer functions $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#891: FILE: sound/oss/harmony.c:865:
+/* $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#898: FILE: sound/oss/harmony.c:872:
+#define to_harmony_level(level,max) ((level)*max/100)
                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#898: FILE: sound/oss/harmony.c:872:
+#define to_harmony_level(level,max) ((level)*max/100)
                                             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#898: FILE: sound/oss/harmony.c:872:
+#define to_harmony_level(level,max) ((level)*max/100)
                                                 ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'max' may be better as '(max)' to avoid precedence issues
#898: FILE: sound/oss/harmony.c:872:
+#define to_harmony_level(level,max) ((level)*max/100)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#899: FILE: sound/oss/harmony.c:873:
+#define to_oss_level(level,max) ((level)*100/max)
                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#899: FILE: sound/oss/harmony.c:873:
+#define to_oss_level(level,max) ((level)*100/max)
                                         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#899: FILE: sound/oss/harmony.c:873:
+#define to_oss_level(level,max) ((level)*100/max)
                                             ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'max' may be better as '(max)' to avoid precedence issues
#899: FILE: sound/oss/harmony.c:873:
+#define to_oss_level(level,max) ((level)*100/max)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#906: FILE: sound/oss/harmony.c:880:
+	switch (channel) {
+		case SOUND_MIXER_OGAIN:
[...]
+		case SOUND_MIXER_IGAIN:
[...]
+		case SOUND_MIXER_VOLUME:

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#911: FILE: sound/oss/harmony.c:885:
+			right_level = to_oss_level(MAX_OUTPUT_LEVEL - right_level, MAX_OUTPUT_LEVEL);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#912: FILE: sound/oss/harmony.c:886:
+			return (right_level << 8)+left_level;
 			                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#913: FILE: sound/oss/harmony.c:887:
+^I^I^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#916: FILE: sound/oss/harmony.c:890:
+			right_level= (harmony.current_gain & GAIN_RI_MASK) >> GAIN_RI_SHIFT;
 			           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#918: FILE: sound/oss/harmony.c:892:
+			right_level= to_oss_level(right_level, MAX_INPUT_LEVEL);
 			           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#919: FILE: sound/oss/harmony.c:893:
+			return (right_level << 8)+left_level;
 			                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#920: FILE: sound/oss/harmony.c:894:
+^I^I^I$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#923: FILE: sound/oss/harmony.c:897:
+			left_level = to_oss_level(MAX_VOLUME_LEVEL-left_level, MAX_VOLUME_LEVEL);
 			                                          ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#929: FILE: sound/oss/harmony.c:903:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#946: FILE: sound/oss/harmony.c:920:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#946: FILE: sound/oss/harmony.c:920:
+  $

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#947: FILE: sound/oss/harmony.c:921:
+	switch (channel) {
+		case SOUND_MIXER_OGAIN:
[...]
+		case SOUND_MIXER_IGAIN:
[...]
+		case SOUND_MIXER_VOLUME:

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#949: FILE: sound/oss/harmony.c:923:
+			right_level = to_harmony_level(100-right_level, MAX_OUTPUT_LEVEL);
 			                                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#950: FILE: sound/oss/harmony.c:924:
+			left_level  = to_harmony_level(100-left_level, MAX_OUTPUT_LEVEL);
 			                                  ^

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#951: FILE: sound/oss/harmony.c:925:
+			new_right_level = to_oss_level(MAX_OUTPUT_LEVEL - right_level, MAX_OUTPUT_LEVEL);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#952: FILE: sound/oss/harmony.c:926:
+			new_left_level  = to_oss_level(MAX_OUTPUT_LEVEL - left_level, MAX_OUTPUT_LEVEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#953: FILE: sound/oss/harmony.c:927:
+^I^I^Iharmony.current_gain = (harmony.current_gain & ~(GAIN_LO_MASK | GAIN_RO_MASK)) $

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#953: FILE: sound/oss/harmony.c:927:
+			harmony.current_gain = (harmony.current_gain & ~(GAIN_LO_MASK | GAIN_RO_MASK)) 

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#954: FILE: sound/oss/harmony.c:928:
+					| (left_level << GAIN_LO_SHIFT) | (right_level << GAIN_RO_SHIFT);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#957: FILE: sound/oss/harmony.c:931:
+^I^I^I$

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#963: FILE: sound/oss/harmony.c:937:
+			harmony.current_gain = (harmony.current_gain & ~(GAIN_LI_MASK | GAIN_RI_MASK))

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#964: FILE: sound/oss/harmony.c:938:
+					| (left_level << GAIN_LI_SHIFT) | (right_level << GAIN_RI_SHIFT);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#967: FILE: sound/oss/harmony.c:941:
+^I$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#969: FILE: sound/oss/harmony.c:943:
+			left_level = to_harmony_level(100-left_level, MAX_VOLUME_LEVEL);
 			                                 ^

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#970: FILE: sound/oss/harmony.c:944:
+			new_left_level = to_oss_level(MAX_VOLUME_LEVEL-left_level, MAX_VOLUME_LEVEL);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#970: FILE: sound/oss/harmony.c:944:
+			new_left_level = to_oss_level(MAX_VOLUME_LEVEL-left_level, MAX_VOLUME_LEVEL);
 			                                              ^

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#971: FILE: sound/oss/harmony.c:945:
+			harmony.current_gain = (harmony.current_gain & ~GAIN_MA_MASK)| (left_level << GAIN_MA_SHIFT);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxW)
#971: FILE: sound/oss/harmony.c:945:
+			harmony.current_gain = (harmony.current_gain & ~GAIN_MA_MASK)| (left_level << GAIN_MA_SHIFT);
 			                                                             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#982: FILE: sound/oss/harmony.c:956:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#986: FILE: sound/oss/harmony.c:960:
+static int harmony_mixer_get_recmask(void) $

CHECK:SPACING: No space is necessary after a cast
#986: FILE: sound/oss/harmony.c:960:
+static int harmony_mixer_get_recmask(void) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#989: FILE: sound/oss/harmony.c:963:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#990: FILE: sound/oss/harmony.c:964:
+^Icurrent_input_line = (harmony.current_gain & GAIN_IS_MASK) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#992: FILE: sound/oss/harmony.c:966:
+^Iif (current_input_line) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1014: FILE: sound/oss/harmony.c:988:
+^Iharmony.current_gain = ((harmony.current_gain & ~GAIN_IS_MASK) | $

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1015: FILE: sound/oss/harmony.c:989:
+				(new_input_line << GAIN_IS_SHIFT ));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1020: FILE: sound/oss/harmony.c:994:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1021: FILE: sound/oss/harmony.c:995:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1028: FILE: sound/oss/harmony.c:1002:
+^I$

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#1029: FILE: sound/oss/harmony.c:1003:
+	if (harmony.current_gain & GAIN_HE_MASK) outmask |=SOUND_MASK_PHONEOUT;
 	                                                 ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1029: FILE: sound/oss/harmony.c:1003:
+	if (harmony.current_gain & GAIN_HE_MASK) outmask |=SOUND_MASK_PHONEOUT;

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#1030: FILE: sound/oss/harmony.c:1004:
+	if (harmony.current_gain & GAIN_LE_MASK) outmask |=SOUND_MASK_LINE;
 	                                                 ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1030: FILE: sound/oss/harmony.c:1004:
+	if (harmony.current_gain & GAIN_LE_MASK) outmask |=SOUND_MASK_LINE;

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#1031: FILE: sound/oss/harmony.c:1005:
+	if (harmony.current_gain & GAIN_SE_MASK) outmask |=SOUND_MASK_SPEAKER;
 	                                                 ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1031: FILE: sound/oss/harmony.c:1005:
+	if (harmony.current_gain & GAIN_SE_MASK) outmask |=SOUND_MASK_SPEAKER;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1032: FILE: sound/oss/harmony.c:1006:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1036: FILE: sound/oss/harmony.c:1010:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1039: FILE: sound/oss/harmony.c:1013:
+^Iif (outmask & SOUND_MASK_PHONEOUT) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1040: FILE: sound/oss/harmony.c:1014:
+^I^Iharmony.current_gain |= GAIN_HE_MASK; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1041: FILE: sound/oss/harmony.c:1015:
+^Ielse $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1043: FILE: sound/oss/harmony.c:1017:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1044: FILE: sound/oss/harmony.c:1018:
+^Iif (outmask & SOUND_MASK_LINE) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1046: FILE: sound/oss/harmony.c:1020:
+^Ielse $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1048: FILE: sound/oss/harmony.c:1022:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1049: FILE: sound/oss/harmony.c:1023:
+^Iif (outmask & SOUND_MASK_SPEAKER) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1051: FILE: sound/oss/harmony.c:1025:
+^Ielse $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1053: FILE: sound/oss/harmony.c:1027:
+^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1063: FILE: sound/oss/harmony.c:1037:
+static int harmony_mixer_ioctl(struct inode * inode, struct file * file,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1063: FILE: sound/oss/harmony.c:1037:
+static int harmony_mixer_ioctl(struct inode * inode, struct file * file,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1064: FILE: sound/oss/harmony.c:1038:
+static int harmony_mixer_ioctl(struct inode * inode, struct file * file,
+		unsigned int cmd, unsigned long arg)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1071: FILE: sound/oss/harmony.c:1045:
+		mixer_info info;
+		memset(&info, 0, sizeof(info));

ERROR:CODE_INDENT: code indent should use tabs where possible
#1072: FILE: sound/oss/harmony.c:1046:
+                strncpy(info.id, "harmony", sizeof(info.id)-1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1072: FILE: sound/oss/harmony.c:1046:
+                strncpy(info.id, "harmony", sizeof(info.id)-1);$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1072: FILE: sound/oss/harmony.c:1046:
+                strncpy(info.id, "harmony", sizeof(info.id)-1);
                                                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1073: FILE: sound/oss/harmony.c:1047:
+                strncpy(info.name, "Harmony audio", sizeof(info.name)-1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1073: FILE: sound/oss/harmony.c:1047:
+                strncpy(info.name, "Harmony audio", sizeof(info.name)-1);$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1073: FILE: sound/oss/harmony.c:1047:
+                strncpy(info.name, "Harmony audio", sizeof(info.name)-1);
                                                                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1074: FILE: sound/oss/harmony.c:1048:
+                info.modify_counter = 1; /* ? */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1074: FILE: sound/oss/harmony.c:1048:
+                info.modify_counter = 1; /* ? */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1075: FILE: sound/oss/harmony.c:1049:
+                if (copy_to_user((void *)arg, &info, sizeof(info)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1075: FILE: sound/oss/harmony.c:1049:
+                if (copy_to_user((void *)arg, &info, sizeof(info)))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1076: FILE: sound/oss/harmony.c:1050:
+                        return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1076: FILE: sound/oss/harmony.c:1050:
+                        return -EFAULT;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1079: FILE: sound/oss/harmony.c:1053:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1096: FILE: sound/oss/harmony.c:1070:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1108: FILE: sound/oss/harmony.c:1082:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1115: FILE: sound/oss/harmony.c:1089:
+^I      $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1122: FILE: sound/oss/harmony.c:1096:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1144: FILE: sound/oss/harmony.c:1118:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1147: FILE: sound/oss/harmony.c:1121:
+^Iif (harmony.mixer_open) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1155: FILE: sound/oss/harmony.c:1129:
+^Iif (!harmony.mixer_open) $

WARNING:CONST_STRUCT: struct file_operations should normally be const
#1161: FILE: sound/oss/harmony.c:1135:
+static struct file_operations harmony_mixer_fops = {

WARNING:INDENTED_LABEL: labels should not be indented
#1162: FILE: sound/oss/harmony.c:1136:
+	owner:		THIS_MODULE,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1163: FILE: sound/oss/harmony.c:1137:
+	llseek:		no_llseek,
 	      ^

WARNING:INDENTED_LABEL: labels should not be indented
#1163: FILE: sound/oss/harmony.c:1137:
+	llseek:		no_llseek,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1164: FILE: sound/oss/harmony.c:1138:
+	open:		harmony_mixer_open,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#1164: FILE: sound/oss/harmony.c:1138:
+	open:		harmony_mixer_open,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1165: FILE: sound/oss/harmony.c:1139:
+	release:	harmony_mixer_release,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#1165: FILE: sound/oss/harmony.c:1139:
+	release:	harmony_mixer_release,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1166: FILE: sound/oss/harmony.c:1140:
+	ioctl:		harmony_mixer_ioctl,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#1166: FILE: sound/oss/harmony.c:1140:
+	ioctl:		harmony_mixer_ioctl,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1169: FILE: sound/oss/harmony.c:1143:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1191: FILE: sound/oss/harmony.c:1165:
+		printk(KERN_WARNING PFX "Error Registering Mixer Driver\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1194: FILE: sound/oss/harmony.c:1168:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1194: FILE: sound/oss/harmony.c:1168:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1197: FILE: sound/oss/harmony.c:1171:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1201: FILE: sound/oss/harmony.c:1175:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1203: FILE: sound/oss/harmony.c:1177:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1204: FILE: sound/oss/harmony.c:1178:
+ * This is the callback that's called by the inventory hardware code $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1205: FILE: sound/oss/harmony.c:1179:
+ * if it finds a match to the registered driver. $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1217: FILE: sound/oss/harmony.c:1191:
+		printk(KERN_ERR PFX "driver already registered\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1226: FILE: sound/oss/harmony.c:1200:
+		printk(KERN_ERR PFX "no irq found\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1233: FILE: sound/oss/harmony.c:1207:
+		printk(KERN_WARNING PFX "wrong harmony id 0x%02x\n", id);

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1237: FILE: sound/oss/harmony.c:1211:
+	rev = (cntl>>20) & 0xff;
 	           ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1239: FILE: sound/oss/harmony.c:1213:
+	printk(KERN_INFO "Lasi Harmony Audio driver " HARMONY_VERSION ", "

WARNING:SPLIT_STRING: quoted string split across lines
#1240: FILE: sound/oss/harmony.c:1214:
+	printk(KERN_INFO "Lasi Harmony Audio driver " HARMONY_VERSION ", "
+			"h/w id %i, rev. %i at 0x%lx, IRQ %i\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1242: FILE: sound/oss/harmony.c:1216:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1243: FILE: sound/oss/harmony.c:1217:
+^I/* Make sure the control bit isn't set, although I don't think it $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1244: FILE: sound/oss/harmony.c:1218:
+	/* Make sure the control bit isn't set, although I don't think it 
+	   ever is. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1244: FILE: sound/oss/harmony.c:1218:
+	   ever is. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1246: FILE: sound/oss/harmony.c:1220:
+		printk(KERN_WARNING PFX "CNTL busy\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1253: FILE: sound/oss/harmony.c:1227:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1255: FILE: sound/oss/harmony.c:1229:
+^Iif (harmony_alloc_buffer(&played_buf, MAX_BUFS) || $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1264: FILE: sound/oss/harmony.c:1238:
+^Iif ((ret=harmony_mixer_init())) $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1264: FILE: sound/oss/harmony.c:1238:
+	if ((ret=harmony_mixer_init())) 
 	        ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1264: FILE: sound/oss/harmony.c:1238:
+	if ((ret=harmony_mixer_init())) 

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1266: FILE: sound/oss/harmony.c:1240:
+^Iif ((ret=harmony_audio_init())) $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1266: FILE: sound/oss/harmony.c:1240:
+	if ((ret=harmony_audio_init())) 
 	        ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1266: FILE: sound/oss/harmony.c:1240:
+	if ((ret=harmony_audio_init())) 

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1280: FILE: sound/oss/harmony.c:1254:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1283: FILE: sound/oss/harmony.c:1257:
+ { HPHW_FIO, HVERSION_REV_ANY_ID, HVERSION_ANY_ID, 0x0007B }, /* 712/715 Audio */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1284: FILE: sound/oss/harmony.c:1258:
+ { HPHW_FIO, HVERSION_REV_ANY_ID, HVERSION_ANY_ID, 0x0007E }, /* Pace Audio */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1285: FILE: sound/oss/harmony.c:1259:
+ { HPHW_FIO, HVERSION_REV_ANY_ID, HVERSION_ANY_ID, 0x0007F }, /* Outfield / Coral II */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1286: FILE: sound/oss/harmony.c:1260:
+ { 0, }$

WARNING:INDENTED_LABEL: labels should not be indented
#1292: FILE: sound/oss/harmony.c:1266:
+	name:		"Lasi Harmony",

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1293: FILE: sound/oss/harmony.c:1267:
+	id_table:	harmony_tbl,
 	        ^

WARNING:INDENTED_LABEL: labels should not be indented
#1293: FILE: sound/oss/harmony.c:1267:
+	id_table:	harmony_tbl,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1294: FILE: sound/oss/harmony.c:1268:
+	probe:		harmony_driver_callback,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#1294: FILE: sound/oss/harmony.c:1268:
+	probe:		harmony_driver_callback,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000353381.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 269 errors, 107 warnings, 124 checks, 1296 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000353381.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
