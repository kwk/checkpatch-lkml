WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
--- linux-2.6.8-rc3/arch/i386/Kconfig.orig	2004-08-07 07:52:57.000000000 +0200

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#133: FILE: include/asm-i386/system.h:172:
+static __inline__ void __set_64bit(unsigned long long * ptr,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INLINE: plain inline is preferred over __inline__
#133: FILE: include/asm-i386/system.h:172:
+static __inline__ void __set_64bit(unsigned long long * ptr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#134: FILE: include/asm-i386/system.h:173:
+static __inline__ void __set_64bit(unsigned long long * ptr,
+				    const unsigned int low,

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#156: FILE: include/asm-i386/system.h:189:
+#define set_64bit(ptr, value) ^I^I^I^I^I^I\$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#156: FILE: include/asm-i386/system.h:189:
+#define set_64bit(ptr, value) 						\
+	(__builtin_constant_p(value) ? 					\
+	    __set_64bit(ptr,						\
+			    (const unsigned int)(value),		\
+			    (const unsigned int)((value) >> 32ULL)	\
+			) :						\
+	    __set_64bit(ptr,						\
+			    *(((const unsigned int *)&(value)) + 0),	\
+			    *(((const unsigned int *)&(value)) + 1)	\
+			)						\
+	)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'value' - possible side-effects?
#156: FILE: include/asm-i386/system.h:189:
+#define set_64bit(ptr, value) 						\
+	(__builtin_constant_p(value) ? 					\
+	    __set_64bit(ptr,						\
+			    (const unsigned int)(value),		\
+			    (const unsigned int)((value) >> 32ULL)	\
+			) :						\
+	    __set_64bit(ptr,						\
+			    *(((const unsigned int *)&(value)) + 0),	\
+			    *(((const unsigned int *)&(value)) + 1)	\
+			)						\
+	)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#157: FILE: include/asm-i386/system.h:190:
+^I(__builtin_constant_p(value) ? ^I^I^I^I^I\$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#203: FILE: include/asm-i386/system.h:244:
+static __inline__ unsigned long __cmpxchg(volatile void *ptr,

WARNING:INLINE: plain inline is preferred over __inline__
#203: FILE: include/asm-i386/system.h:244:
+static __inline__ unsigned long __cmpxchg(volatile void *ptr,

ERROR:CODE_INDENT: code indent should use tabs where possible
#204: FILE: include/asm-i386/system.h:245:
+^I^I^I    ^I^I    const unsigned long old,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#204: FILE: include/asm-i386/system.h:245:
+^I^I^I    ^I^I    const unsigned long old,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#204: FILE: include/asm-i386/system.h:245:
+static __inline__ unsigned long __cmpxchg(volatile void *ptr,
+			    		    const unsigned long old,

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#218: FILE: include/asm-i386/system.h:273:
+#define cmpxchg(ptr, o, n)					\
+	((__typeof__(*(ptr)))__cmpxchg((ptr),			\
+					(unsigned long)(o),	\
+					(unsigned long)(n),	\
+					sizeof(*(ptr))))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000262443.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 7 warnings, 5 checks, 163 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000262443.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
