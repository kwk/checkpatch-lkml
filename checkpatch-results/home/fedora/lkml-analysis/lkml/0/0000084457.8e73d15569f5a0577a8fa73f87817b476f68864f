WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#55: 
Content-Type: text/x-patch; name=sysv-do-sysctl-strategies2.patch; charset=ANSI_X3.4-1968

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#242: FILE: include/linux/ipc.h:57:
+int sysctl_ipc_strategy (/*ctl_table *table,*/ int __user *name, int nlen,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#264: FILE: ipc/sysctl.c:1:
+#include <linux/sysctl.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/bug.h> instead of <asm/bug.h>
#265: FILE: ipc/sysctl.c:2:
+#include <asm/bug.h>

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#268: FILE: ipc/sysctl.c:5:
+extern size_t shm_ctlall;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#269: FILE: ipc/sysctl.c:6:
+extern int shm_ctlmni;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#270: FILE: ipc/sysctl.c:7:
+extern int msg_ctlmax;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#271: FILE: ipc/sysctl.c:8:
+extern int msg_ctlmnb;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#272: FILE: ipc/sysctl.c:9:
+extern int msg_ctlmni;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#273: FILE: ipc/sysctl.c:10:
+extern int sem_ctls[];

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#275: FILE: ipc/sysctl.c:12:
+int sysctl_ipc_strategy (ctl_table *table, int __user *name, int nlen,

ERROR:CODE_INDENT: code indent should use tabs where possible
#276: FILE: ipc/sysctl.c:13:
+                         void __user *oldval, size_t __user *oldlenp,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: ipc/sysctl.c:13:
+                         void __user *oldval, size_t __user *oldlenp,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#277: FILE: ipc/sysctl.c:14:
+                         void __user *newval, size_t newlen, void **context)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: ipc/sysctl.c:14:
+                         void __user *newval, size_t newlen, void **context)$

WARNING:LINE_SPACING: Missing a blank line after declarations
#280: FILE: ipc/sysctl.c:17:
+	void *data = NULL;
+	switch (table->ctl_name) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#280: FILE: ipc/sysctl.c:17:
+	switch (table->ctl_name) {
+		case KERN_SHMMAX:
[...]
+		case KERN_SHMALL:
[...]
+		case KERN_SHMMNI:
[...]
+		case KERN_MSGMAX:
[...]
+		case KERN_MSGMNI:
[...]
+		case KERN_MSGMNB:
[...]
+		case KERN_SEM:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:LINE_SPACING: Please don't use multiple blank lines
#311: FILE: ipc/sysctl.c:48:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#355: FILE: kernel/sysctl.c:1255:
+int default_sysctl_strategy(ctl_table *table, void *data,
+			       void __user *oldval, size_t __user *oldlenp,

WARNING:LINE_SPACING: Missing a blank line after declarations
#359: FILE: kernel/sysctl.c:1259:
+	size_t len;
+	if (data && table->maxlen) {

ERROR:SPACING: space required before the open parenthesis '('
#366: FILE: kernel/sysctl.c:1266:
+				if(copy_to_user(oldval, data, len))

ERROR:SPACING: space required before the open parenthesis '('
#368: FILE: kernel/sysctl.c:1268:
+				if(put_user(len, oldlenp))

ERROR:SPACING: space required before the open parenthesis '('
#376: FILE: kernel/sysctl.c:1276:
+			if(copy_from_user(data, newval, len))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#423: FILE: kernel/sysctl.c:1308:
+	return default_sysctl_strategy(table, table->data, oldval,oldlenp,
 	                                                         ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#436: FILE: include/linux/sysctl.h:948:
+extern int default_sysctl_strategy(ctl_table *table, void *data,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000084457.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 15 warnings, 3 checks, 278 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000084457.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
