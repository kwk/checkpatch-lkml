WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
- Introduce channel group based locking instead of a single global lock for all

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#143: FILE: drivers/ide/cmd640.c:230:
+static u8 get_cmd640_reg_pci1 (unsigned short reg)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#155: FILE: drivers/ide/cmd640.c:245:
+static void put_cmd640_reg_pci2 (unsigned short reg, u8 val)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#164: FILE: drivers/ide/cmd640.c:257:
+static u8 get_cmd640_reg_pci2 (unsigned short reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#176: FILE: drivers/ide/cmd640.c:273:
+static void put_cmd640_reg_vlb (unsigned short reg, u8 val)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#185: FILE: drivers/ide/cmd640.c:284:
+static u8 get_cmd640_reg_vlb (unsigned short reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#257: FILE: drivers/ide/cmd640.c:506:
+static inline u8 pack_nibbles (u8 upper, u8 lower)

WARNING:LONG_LINE: line length of 137 exceeds 100 columns
#288: FILE: drivers/ide/cmd640.c:598:
+static void cmd640_set_mode (unsigned int index, u8 pio_mode, unsigned int cycle_time, unsigned int active_time, unsigned int setup_time)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#288: FILE: drivers/ide/cmd640.c:598:
+static void cmd640_set_mode (unsigned int index, u8 pio_mode, unsigned int cycle_time, unsigned int active_time, unsigned int setup_time)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#317: FILE: drivers/ide/cmd640.c:661:
+			printk(KERN_ERR "%s: bad news in cmd640_tune_drive\n", drive->name);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'cmd640_tune_drive', this function's name, in a string
#317: FILE: drivers/ide/cmd640.c:661:
+			printk(KERN_ERR "%s: bad news in cmd640_tune_drive\n", drive->name);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:LONG_LINE: line length of 132 exceeds 100 columns
#328: FILE: drivers/ide/cmd640.c:673:
+			printk(KERN_INFO "%s: %sabled cmd640 fast host timing (devsel)\n", drive->name, mode_wanted ? "en" : "dis");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#328: FILE: drivers/ide/cmd640.c:673:
+			printk(KERN_INFO "%s: %sabled cmd640 fast host timing (devsel)\n", drive->name, mode_wanted ? "en" : "dis");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ch->handler"
#450: FILE: drivers/ide/ide.c:345:
+	if (ch->handler != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'choosen' may be misspelled - perhaps 'chosen'?
#592: FILE: drivers/ide/ide.c:1147:
+		/* Take this device, if there is no device choosen thus far or
 		                                           ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#595: FILE: drivers/ide/ide.c:1150:
+		if (!choice || (drive->sleep && (!choice->sleep || time_after(choice->sleep, drive->sleep)))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#694: FILE: drivers/ide/ide.c:1404:
+			printk(KERN_ERR "ide_timer_expiry: IRQ handler was NULL\n");

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#702: FILE: drivers/ide/ide.c:1411:
+				printk(KERN_ERR "%s: ide_timer_expiry: IRQ handler was not busy??\n", drive->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#702: FILE: drivers/ide/ide.c:1411:
+				printk(KERN_ERR "%s: ide_timer_expiry: IRQ handler was not busy??\n", drive->name);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#836: FILE: drivers/ide/ide.c:1740:
 	if (drive->busy || (drive->usage > 1)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#861: FILE: drivers/ide/ide.c:1889:
+	spinlock_t *lock;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#940: FILE: drivers/ide/ide.c:2200:
 	while (test_bit(IDE_BUSY, &drive->channel->active)) {
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1139: FILE: drivers/ide/ide-pci.c:556:
+	printk(KERN_INFO "ATA: %s: controller on PCI slot %s dev %02x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1140: FILE: drivers/ide/ide-pci.c:557:
+	printk(KERN_INFO "ATA: %s: controller on PCI slot %s dev %02x\n",
+			dev->name, dev->slot_name, dev->devfn);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1147: FILE: drivers/ide/ide-pci.c:562:
+	printk(KERN_INFO "ATA: %s: controller on PCI slot %s dev %02x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1148: FILE: drivers/ide/ide-pci.c:563:
+	printk(KERN_INFO "ATA: %s: controller on PCI slot %s dev %02x\n",
+			dev2->name, dev2->slot_name, dev2->devfn);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1158: FILE: drivers/ide/ide-pci.c:586:
+	printk(KERN_INFO "ATA: %s: controller on PCI slot %s dev %02x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1159: FILE: drivers/ide/ide-pci.c:587:
+	printk(KERN_INFO "ATA: %s: controller on PCI slot %s dev %02x\n",
+		dev->name, dev->slot_name, dev->devfn);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1169: FILE: drivers/ide/ide-pci.c:603:
+	printk(KERN_INFO "ATA: %s: controller on PCI slot %s dev %02x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1170: FILE: drivers/ide/ide-pci.c:604:
+	printk(KERN_INFO "ATA: %s: controller on PCI slot %s dev %02x\n",
+		dev2->name, dev2->slot_name, dev2->devfn);

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#1175: FILE: drivers/ide/ide-pci.c:622:
 	switch(class_rev) {
[...]
+		case 3:	printk(KERN_INFO "ATA: %s: controller on PCI slot %s\n", dev->name, dev->slot_name);

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#1179: FILE: drivers/ide/ide-pci.c:625:
+		case 3:	printk(KERN_INFO "ATA: %s: controller on PCI slot %s\n", dev->name, dev->slot_name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1179: FILE: drivers/ide/ide-pci.c:625:
+		case 3:	printk(KERN_INFO "ATA: %s: controller on PCI slot %s\n", dev->name, dev->slot_name);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1179: FILE: drivers/ide/ide-pci.c:625:
+		case 3:	printk(KERN_INFO "ATA: %s: controller on PCI slot %s\n", dev->name, dev->slot_name);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LONG_LINE: line length of 131 exceeds 100 columns
#1188: FILE: drivers/ide/ide-pci.c:641:
+				printk(KERN_INFO "ATAL: %s: onboard version of chipset, pin1=%d pin2=%d\n", dev->name, pin1, pin2);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1188: FILE: drivers/ide/ide-pci.c:641:
+				printk(KERN_INFO "ATAL: %s: onboard version of chipset, pin1=%d pin2=%d\n", dev->name, pin1, pin2);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1194: FILE: drivers/ide/ide-pci.c:646:
+	printk(KERN_INFO "ATA: %s: controller on PCI slot %s\n", dev->name, dev->slot_name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1200: FILE: drivers/ide/ide-pci.c:651:
+	printk(KERN_INFO "ATA: %s: controller on PCI slot %s\n", dev2->name, dev2->slot_name);

WARNING:TYPO_SPELLING: 'beeing' may be misspelled - perhaps 'being'?
#1210: FILE: drivers/ide/ide-pci.c:683:
+		 * beeing grabbed by generic drivers.
 		   ^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <wrDataSetupTicks>
#1343: FILE: drivers/ide/ide-pmac.c:558:
+			(wrDataSetupTicks << TR_66_UDMA_WRDATASETUP_SHIFT) |

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <halfTick>
#1387: FILE: drivers/ide/ide-pmac.c:663:
+			halfTick = 1;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1411: FILE: drivers/ide/ide-pmac.c:684:
+pmac_ide_tune_chipset (struct ata_device *drive, byte speed)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1581: FILE: drivers/ide/ide-pmac.c:1245:
+	printk(KERN_INFO "%s: Enabling MultiWord DMA %d\n", drive->name, feature & 0xf);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1586: FILE: drivers/ide/ide-pmac.c:1248:
+		printk(KERN_WARNING "%s: Failed !\n", drive->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1618: FILE: drivers/ide/ide-pmac.c:1284:
+	printk(KERN_INFO "%s: Enabling Ultra DMA %d\n", drive->name, feature & 0xf);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1660: FILE: drivers/ide/ide-pmac.c:1535:
+static void idepmac_sleep_device(struct ata_device *drive, int i, unsigned base)

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1829: FILE: drivers/ide/ide-probe.c:581:
+	spinlock_t *lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1830: FILE: drivers/ide/ide-probe.c:582:
+	spinlock_t *new_lock;

ERROR:SPACING: space required before the open parenthesis '('
#1886: FILE: drivers/ide/ide-probe.c:630:
+		if(new_lock)

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1887: FILE: drivers/ide/ide-probe.c:631:
+		if(new_lock)
+			kfree(new_lock);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2113: FILE: drivers/ide/pdc4030.c:133:
+	insw(IDE_DATA_REG, buffer, wcount<<1);
 	                                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2118: FILE: drivers/ide/pdc4030.c:138:
+	outsw(IDE_DATA_REG, buffer, wcount<<1);
 	                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#2202: FILE: drivers/ide/pdc4030.c:229:
+        struct ata_device *drive;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2202: FILE: drivers/ide/pdc4030.c:229:
+        struct ata_device *drive;$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2218: FILE: drivers/ide/pdc4030.c:243:
+	if (inb(IDE_NSECTOR_REG) == 0xFF || inb(IDE_SECTOR_REG) == 0xFF) {
 		return 0;
 	}

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2241: FILE: drivers/ide/pdc4030.c:299:
+	hwif->ata_read  = hwif2->ata_read = promise_read;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2242: FILE: drivers/ide/pdc4030.c:300:
+	hwif->ata_write = hwif2->ata_write = promise_write;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2243: FILE: drivers/ide/pdc4030.c:301:
+	hwif->selectproc = hwif2->selectproc = promise_selectproc;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2416: FILE: drivers/ide/tcq.c:162:
+		printk(KERN_ERR "ATA: %s: IRQ handler not busy\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2416: FILE: drivers/ide/tcq.c:162:
+		printk(KERN_ERR "ATA: %s: IRQ handler not busy\n", __FUNCTION__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2418: FILE: drivers/ide/tcq.c:164:
+		printk(KERN_ERR "ATA: %s: missing ISR!\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2418: FILE: drivers/ide/tcq.c:164:
+		printk(KERN_ERR "ATA: %s: missing ISR!\n", __FUNCTION__);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2467: FILE: drivers/ide/umc8672.c:95:
+	for (i = 3; i >= 0; i--) {
 		tmp = (tmp << 2) | speedtab[1][speeds[i]];
 	}

ERROR:SPACING: space required after that ';' (ctx:VxV)
#2473: FILE: drivers/ide/umc8672.c:99:
+	for (i = 0;i < 4; i++) {
 	          ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2500: FILE: drivers/ide/umc8672.c:122:
+	umc_set_speeds (current_speeds);

CHECK:SPACING: No space is necessary after a cast
#2505: FILE: drivers/ide/umc8672.c:126:
+void __init init_umc8672(void)	/* called from ide.c */

WARNING:TYPO_SPELLING: 'differen' may be misspelled - perhaps 'different'?
#2625: FILE: include/linux/ide.h:447:
+	 * between differen queues sharing the same irq line.
 	           ^^^^^^^^

WARNING:LONG_LINE_COMMENT: line length of 108 exceeds 100 columns
#2629: FILE: include/linux/ide.h:451:
+	ide_startstop_t (*handler)(struct ata_device *, struct request *);	/* irq handler, if active */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_device *' should also have an identifier name
#2629: FILE: include/linux/ide.h:451:
+	ide_startstop_t (*handler)(struct ata_device *, struct request *);	/* irq handler, if active */

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#2629: FILE: include/linux/ide.h:451:
+	ide_startstop_t (*handler)(struct ata_device *, struct request *);	/* irq handler, if active */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2642: FILE: include/linux/ide.h:773:
+extern void ide_stall_queue(struct ata_device *, unsigned long);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_device *' should also have an identifier name
#2642: FILE: include/linux/ide.h:773:
+extern void ide_stall_queue(struct ata_device *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#2642: FILE: include/linux/ide.h:773:
+extern void ide_stall_queue(struct ata_device *, unsigned long);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000458741.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 49 warnings, 19 checks, 2342 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000458741.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
