WARNING:INCLUDE_LINUX: Use #include <linux/topology.h> instead of <asm/topology.h>
#82: FILE: kernel/sched.c:34:
+#include <asm/topology.h>

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#84: FILE: kernel/sched.c:35:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#131: FILE: kernel/sched.c:692:
+	if (nr_running < 1)=20
 	                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#131: FILE: kernel/sched.c:692:
+	if (nr_running < 1)=20

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#132: FILE: kernel/sched.c:693:
+		nr_running =3D 1;
 		           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#134: FILE: kernel/sched.c:694:
+	busiest_on_node =3D NULL;
 	                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#135: FILE: kernel/sched.c:695:
+	busiest_off_node =3D NULL;
 	                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#138: FILE: kernel/sched.c:697:
+	max_load_on_node =3D 1;
 	                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#139: FILE: kernel/sched.c:698:
+	max_load_off_node =3D 3;
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#140: FILE: kernel/sched.c:699:
+=09
 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#154: FILE: kernel/sched.c:712:
+		if (__cpu_to_node(i) =3D=3D __cpu_to_node(this_cpu)) {
 		                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#154: FILE: kernel/sched.c:712:
+		if (__cpu_to_node(i) =3D=3D __cpu_to_node(this_cpu)) {
 		                        ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#154: FILE: kernel/sched.c:712:
+		if (__cpu_to_node(i) =3D=3D __cpu_to_node(this_cpu)) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#155: FILE: kernel/sched.c:713:
+			if ((load > max_load_on_node) && (rq_src !=3D this_rq)) {
 			                                         ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'load > max_load_on_node'
#155: FILE: kernel/sched.c:713:
+			if ((load > max_load_on_node) && (rq_src !=3D this_rq)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#156: FILE: kernel/sched.c:714:
+				busiest_on_node =3D rq_src;
 				                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#157: FILE: kernel/sched.c:715:
+				max_load_on_node =3D load;
 				                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#161: FILE: kernel/sched.c:719:
+				busiest_off_node =3D rq_src;
 				                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#162: FILE: kernel/sched.c:720:
+				max_load_off_node =3D load;
 				                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#178: FILE: kernel/sched.c:726:
+		if (idle || ((nr_running*5)/4 < max_load_on_node)) {
 		                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#178: FILE: kernel/sched.c:726:
+		if (idle || ((nr_running*5)/4 < max_load_on_node)) {
 		                           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#179: FILE: kernel/sched.c:727:
+			busiest =3D busiest_on_node;
 			        ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#180: FILE: kernel/sched.c:728:
+			*imbalance =3D (max_load_on_node - nr_running) / 2;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#180: FILE: kernel/sched.c:728:
+			*imbalance =3D (max_load_on_node - nr_running) / 2;
 			           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#196: FILE: kernel/sched.c:734:
+		if (nr_running*4 >=3D max_load_off_node)=20
 		              ^

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#196: FILE: kernel/sched.c:734:
+		if (nr_running*4 >=3D max_load_off_node)=20
 		                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#196: FILE: kernel/sched.c:734:
+		if (nr_running*4 >=3D max_load_off_node)=20
 		                                        ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#196: FILE: kernel/sched.c:734:
+		if (nr_running*4 >=3D max_load_off_node)=20

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#198: FILE: kernel/sched.c:736:
+		busiest =3D busiest_off_node;=20
 		        ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#198: FILE: kernel/sched.c:736:
+		busiest =3D busiest_off_node;=20
 		                            ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#198: FILE: kernel/sched.c:736:
+		busiest =3D busiest_off_node;=20
 		                             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#199: FILE: kernel/sched.c:737:
+		*imbalance =3D 1;
 		^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#199: FILE: kernel/sched.c:737:
+		*imbalance =3D 1;
 		           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#200: FILE: kernel/sched.c:738:
+	}=20
 	 ^

ERROR:SPACING: space required after that close brace '}'
#200: FILE: kernel/sched.c:738:
+	}=20

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#202: FILE: kernel/sched.c:740:
+		nr_running =3D double_lock_balance(this_rq, busiest, this_cpu, idle, nr_=
 		           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#202: FILE: kernel/sched.c:740:
+		nr_running =3D double_lock_balance(this_rq, busiest, this_cpu, idle, nr_=
 		                                                                        ^

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#208: FILE: kernel/sched.c:745:
+		if (busiest->nr_running <=3D nr_running) {
 		                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#210: FILE: kernel/sched.c:747:
+			busiest =3D NULL;
 			        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#232: FILE: kernel/sched.c:2149:
+	old_mask =3D p->cpus_allowed;
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#249: FILE: kernel/sched.c:2166:
+static DEFINE_PER_CPU(int, last_exec_cpu) =3D 0;
                                           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#257: FILE: kernel/sched.c:2174:
+	int i, minload, best_cpu, cur_cpu, node;
+	best_cpu =3D task_cpu(p);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#257: FILE: kernel/sched.c:2174:
+	best_cpu =3D task_cpu(p);
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#259: FILE: kernel/sched.c:2176:
+	node =3D __cpu_to_node(__get_cpu_var(last_exec_cpu));
 	     ^

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#260: FILE: kernel/sched.c:2177:
+	if (++node >=3D numnodes)
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#261: FILE: kernel/sched.c:2178:
+		node =3D 0;
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#262: FILE: kernel/sched.c:2179:
+=09
 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#263: FILE: kernel/sched.c:2180:
+	cur_cpu =3D __node_to_first_cpu(node);
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#264: FILE: kernel/sched.c:2181:
+	minload =3D cpu_rq(best_cpu)->nr_running;
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#266: FILE: kernel/sched.c:2183:
+	for (i =3D 0; i < NR_CPUS; i++) {
 	       ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#266: FILE: kernel/sched.c:2183:
+	for (i =3D 0; i < NR_CPUS; i++) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#271: FILE: kernel/sched.c:2188:
+			minload =3D cpu_rq(cur_cpu)->nr_running;
 			        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#272: FILE: kernel/sched.c:2189:
+			best_cpu =3D cur_cpu;
 			         ^

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#274: FILE: kernel/sched.c:2191:
+		if (++cur_cpu >=3D NR_CPUS)
 		              ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#274: FILE: kernel/sched.c:2191:
+		if (++cur_cpu >=3D NR_CPUS)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#275: FILE: kernel/sched.c:2192:
+			cur_cpu =3D 0;
 			        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#277: FILE: kernel/sched.c:2194:
+	__get_cpu_var(last_exec_cpu) =3D best_cpu;
 	                             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#286: FILE: kernel/sched.c:2203:
+		new_cpu =3D sched_best_cpu(current);
 		        ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#287: FILE: kernel/sched.c:2204:
+		if (new_cpu !=3D smp_processor_id())
 		            ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#314: FILE: include/linux/sched.h:170:
+extern void sched_balance_exec(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000424808.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 49 errors, 5 warnings, 6 checks, 241 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000424808.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
