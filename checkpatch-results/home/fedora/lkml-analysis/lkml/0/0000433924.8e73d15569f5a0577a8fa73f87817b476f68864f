WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#23: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#24: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#25: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#26: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#27: 
#	           ChangeSet	1.624   -> 1.625  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#28: 
#	drivers/hotplug/cpqphp_core.c	1.6     -> 1.7    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#29: 
#	drivers/hotplug/cpqphp.h	1.1     -> 1.2    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#30: 
#	drivers/hotplug/cpqphp_ctrl.c	1.2     -> 1.3    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#31: 
#	drivers/hotplug/cpqphp_nvram.c	1.2     -> 1.3    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#32: 
#	drivers/hotplug/cpqphp_pci.c	1.5     -> 1.6    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#33: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#34: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#35: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#36: 
# 02/09/09	greg@kroah.com	1.625

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#37: 
# Compaq PCI Hotplug driver: fixed __FUNCTION__ usages

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#38: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#39: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#41: 
--- a/drivers/hotplug/cpqphp.h	Mon Sep  9 15:09:52 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#48: FILE: drivers/hotplug/cpqphp.h:698:
+	dbg("%s: slot->device = %d, ctrl->slot_device_offset = %d \n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#49: FILE: drivers/hotplug/cpqphp.h:699:
+	    __FUNCTION__, slot->device, ctrl->slot_device_offset);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#58: FILE: drivers/hotplug/cpqphp.h:737:
+	dbg("%s - start\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#67: FILE: drivers/hotplug/cpqphp.h:747:
+	dbg("%s - end\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#79: FILE: drivers/hotplug/cpqphp_core.c:317:
+	dbg("%s\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#88: FILE: drivers/hotplug/cpqphp_core.c:479:
+	dbg("%s: %p, %d, %d, %p\n", __FUNCTION__, ops, bus_num, dev_num, slot);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#97: FILE: drivers/hotplug/cpqphp_core.c:595:
+	dbg("%s - physical_slot = %s\n", __FUNCTION__, hotplug_slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#106: FILE: drivers/hotplug/cpqphp_core.c:630:
+	dbg("%s - physical_slot = %s\n", __FUNCTION__, hotplug_slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#115: FILE: drivers/hotplug/cpqphp_core.c:670:
+	dbg("%s - physical_slot = %s\n", __FUNCTION__, hotplug_slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#124: FILE: drivers/hotplug/cpqphp_core.c:698:
+	dbg("%s - physical_slot = %s\n", __FUNCTION__, hotplug_slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#133: FILE: drivers/hotplug/cpqphp_core.c:719:
+	dbg("%s - physical_slot = %s\n", __FUNCTION__, hotplug_slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#142: FILE: drivers/hotplug/cpqphp_core.c:737:
+	dbg("%s - physical_slot = %s\n", __FUNCTION__, hotplug_slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#151: FILE: drivers/hotplug/cpqphp_core.c:755:
+	dbg("%s - physical_slot = %s\n", __FUNCTION__, hotplug_slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#162: FILE: drivers/hotplug/cpqphp_core.c:774:
+	dbg("%s - physical_slot = %s\n", __FUNCTION__, hotplug_slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#171: FILE: drivers/hotplug/cpqphp_core.c:823:
+			err("%s : pci_read_config_word failed\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#180: FILE: drivers/hotplug/cpqphp_core.c:834:
+			err("%s : out of memory\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#188: FILE: drivers/hotplug/cpqphp_core.c:841:
+			err("%s : pci_read_config_word failed\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#197: FILE: drivers/hotplug/cpqphp_core.c:1056:
+		err("%s: unable to save PCI configuration data, error %d\n", __FUNCTION__, rc);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#206: FILE: drivers/hotplug/cpqphp_core.c:1083:
+		err("%s: unable to save PCI configuration data, error %d\n", __FUNCTION__, rc);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#220: FILE: drivers/hotplug/cpqphp_ctrl.c:776:
+		    __FUNCTION__, size, node, node->base, node->length);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#226: FILE: drivers/hotplug/cpqphp_ctrl.c:781:
+			dbg("%s: not aligned\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#235: FILE: drivers/hotplug/cpqphp_ctrl.c:807:
+			dbg("%s: too big\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#244: FILE: drivers/hotplug/cpqphp_ctrl.c:824:
+		dbg("%s: got one!!!\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#253: FILE: drivers/hotplug/cpqphp_ctrl.c:859:
+	dbg("%s: head = %p, *head = %p\n", __FUNCTION__, head, *head);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#262: FILE: drivers/hotplug/cpqphp_ctrl.c:945:
+		dbg ("%s - waking up\n", __FUNCTION__);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#262: FILE: drivers/hotplug/cpqphp_ctrl.c:945:
+		dbg ("%s - waking up\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#273: FILE: drivers/hotplug/cpqphp_ctrl.c:1386:
+	    __FUNCTION__, func->device, ctrl->slot_device_offset, hp_slot);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#282: FILE: drivers/hotplug/cpqphp_ctrl.c:1433:
+	dbg("%s: before down\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#285: FILE: drivers/hotplug/cpqphp_ctrl.c:1435:
+	dbg("%s: after down\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#288: FILE: drivers/hotplug/cpqphp_ctrl.c:1437:
+	dbg("%s: before slot_enable\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#292: FILE: drivers/hotplug/cpqphp_ctrl.c:1440:
+	dbg("%s: before green_LED_blink\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#296: FILE: drivers/hotplug/cpqphp_ctrl.c:1443:
+	dbg("%s: before amber_LED_blink\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#300: FILE: drivers/hotplug/cpqphp_ctrl.c:1446:
+	dbg("%s: before set_SOGO\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#305: FILE: drivers/hotplug/cpqphp_ctrl.c:1450:
+	dbg("%s: before wait_for_ctrl_irq\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#308: FILE: drivers/hotplug/cpqphp_ctrl.c:1452:
+	dbg("%s: after wait_for_ctrl_irq\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#312: FILE: drivers/hotplug/cpqphp_ctrl.c:1455:
+	dbg("%s: before up\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#315: FILE: drivers/hotplug/cpqphp_ctrl.c:1457:
+	dbg("%s: after up\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#319: FILE: drivers/hotplug/cpqphp_ctrl.c:1460:
+	dbg("%s: before long_delay\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#322: FILE: drivers/hotplug/cpqphp_ctrl.c:1462:
+	dbg("%s: after long_delay\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#325: FILE: drivers/hotplug/cpqphp_ctrl.c:1464:
+	dbg("%s: func status = %x\n", __FUNCTION__, func->status);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#331: FILE: drivers/hotplug/cpqphp_ctrl.c:1469:
+		dbg("%s: temp register set to %x by power fault\n", __FUNCTION__, temp_register);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#339: FILE: drivers/hotplug/cpqphp_ctrl.c:1475:
+		dbg("%s: pci_read_config_dword returns %d\n", __FUNCTION__, rc);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#340: FILE: drivers/hotplug/cpqphp_ctrl.c:1476:
+		dbg("%s: temp_register is %x\n", __FUNCTION__, temp_register);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#346: FILE: drivers/hotplug/cpqphp_ctrl.c:1481:
+			dbg("%s: temp register set to %x by error\n", __FUNCTION__, temp_register);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#355: FILE: drivers/hotplug/cpqphp_ctrl.c:1497:
+		dbg("%s: back from configure_new_device\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#364: FILE: drivers/hotplug/cpqphp_ctrl.c:1534:
+		dbg("%s: configure linux pci_dev structure\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#373: FILE: drivers/hotplug/cpqphp_ctrl.c:1601:
+	dbg("In %s, hp_slot = %d\n", __FUNCTION__, hp_slot);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#382: FILE: drivers/hotplug/cpqphp_ctrl.c:1930:
+			dbg("Error! func NULL in %s\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#391: FILE: drivers/hotplug/cpqphp_ctrl.c:1954:
+			dbg("Error! func NULL in %s\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#400: FILE: drivers/hotplug/cpqphp_ctrl.c:2069:
+		dbg("%s: rc = %d\n", __FUNCTION__, rc);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#409: FILE: drivers/hotplug/cpqphp_ctrl.c:2335:
+	dbg("%s\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#414: FILE: drivers/hotplug/cpqphp_ctrl.c:2339:
+		dbg("%s: rc = %d\n", __FUNCTION__, rc);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#426: FILE: drivers/hotplug/cpqphp_nvram.c:164:
+	dbg ("%s - returned %d\n", __FUNCTION__, result);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#426: FILE: drivers/hotplug/cpqphp_nvram.c:164:
+	dbg ("%s - returned %d\n", __FUNCTION__, result);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#438: FILE: drivers/hotplug/cpqphp_pci.c:143:
+		dbg("@@@@@@@@@@@ cpqhp_slot_create in %s\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#447: FILE: drivers/hotplug/cpqphp_pci.c:310:
+	dbg("%s: bus/dev/func = %x/%x/%x\n", __FUNCTION__, func->bus, func->device, func->function);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#458: FILE: drivers/hotplug/cpqphp_pci.c:359:
+	    __FUNCTION__, dev_num, bus_num, int_pin, irq_num);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#461: FILE: drivers/hotplug/cpqphp_pci.c:361:
+	dbg("%s: rc %d\n", __FUNCTION__, rc);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#470: FILE: drivers/hotplug/cpqphp_pci.c:1589:
+	dbg("%s\n", __FUNCTION__);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000433924.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 77 warnings, 0 checks, 383 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000433924.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
