WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#58: 
diff -urpN --exclude TAGS -X /home/rusty/devel/kernel/kernel-patches/current-dontdiff --minimal .13015-linux-2.6.0-test5-bk11/arch/ia64/ia32/sys_ia32.c .13015-linux-2.6.0-test5-bk11.updated/arch/ia64/ia32/sys_ia32.c

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#69: FILE: arch/ia64/ia32/sys_ia32.c:2438:
+	gl = kmalloc(sizeof(gl[0]) * current->ngroups, GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:SPACING: No space is necessary after a cast
#99: FILE: arch/ia64/ia32/sys_ia32.c:2465:
+	if ((unsigned) gidsetsize > max_groups)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#99: FILE: arch/ia64/ia32/sys_ia32.c:2465:
+	if ((unsigned) gidsetsize > max_groups)

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#101: FILE: arch/ia64/ia32/sys_ia32.c:2467:
+	gl = kmalloc(sizeof(gl[0]) * gidsetsize, GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#137: FILE: arch/s390/kernel/compat_linux.c:192:
+extern asmlinkage long sys_getgroups (int gidsetsize, gid_t *grouplist);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#160: FILE: arch/s390/kernel/compat_linux.c:201:
+	gl = kmalloc(sizeof(gl[0]) * current->ngroups, GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#179: FILE: arch/s390/kernel/compat_linux.c:219:
+extern asmlinkage long sys_setgroups (int gidsetsize, gid_t *grouplist);

CHECK:SPACING: No space is necessary after a cast
#193: FILE: arch/s390/kernel/compat_linux.c:228:
+	if ((unsigned) gidsetsize > max_groups)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#193: FILE: arch/s390/kernel/compat_linux.c:228:
+	if ((unsigned) gidsetsize > max_groups)

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#201: FILE: arch/s390/kernel/compat_linux.c:230:
+	gl = kmalloc(sizeof(gl[0]) * gidsetsize, GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#237: FILE: arch/sparc64/kernel/sys_sparc32.c:209:
+extern asmlinkage long sys_getgroups (int gidsetsize, gid_t *grouplist);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#260: FILE: arch/sparc64/kernel/sys_sparc32.c:218:
+	gl = kmalloc(sizeof(gl[0]) * current->ngroups, GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#279: FILE: arch/sparc64/kernel/sys_sparc32.c:236:
+extern asmlinkage long sys_setgroups (int gidsetsize, gid_t *grouplist);

CHECK:SPACING: No space is necessary after a cast
#293: FILE: arch/sparc64/kernel/sys_sparc32.c:245:
+	if ((unsigned) gidsetsize > max_groups)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#293: FILE: arch/sparc64/kernel/sys_sparc32.c:245:
+	if ((unsigned) gidsetsize > max_groups)

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#301: FILE: arch/sparc64/kernel/sys_sparc32.c:247:
+	gl = kmalloc(sizeof(gl[0]) * gidsetsize, GFP_KERNEL);

ERROR:SPACING: space required before the open parenthesis '('
#360: FILE: fs/nfsd/nfs4state.c:247:
+	for(i = 0; i < SVC_CREDS_NGROUPS; i++)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#372: FILE: fs/nfsd/nfssvc.c:186:
+		printk("Unable to start nfsd thread: can't set groups\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'nfsd', this function's name, in a string
#372: FILE: fs/nfsd/nfssvc.c:186:
+		printk("Unable to start nfsd thread: can't set groups\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#679: FILE: include/linux/sched.h:333:
+struct task_groups
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#719: FILE: include/linux/sched.h:700:
+extern int cow_current_groups(unsigned int ngroups);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#720: FILE: include/linux/sched.h:701:
+extern void release_groups(gid_t *groups);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#749: FILE: include/linux/sysctl.h:130:
+	KERN_MAX_GROUPS=60,	/* int: setgroups limit */
 	               ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#796: FILE: kernel/sys.c:1081:
+ * current->ngroups, once copy is successful. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#804: FILE: kernel/sys.c:1089:
+	tgrp = kmalloc(sizeof(*tgrp) + sizeof(tgrp->groups[0])*ngroups,
 	                                                      ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#821: FILE: kernel/sys.c:1106:
+ * 0 or -err. */

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#865: FILE: kernel/sys.c:1169:
+	groups = kmalloc(sizeof(groups[0]) * gidsetsize, GFP_KERNEL);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#889: FILE: kernel/sys.c:1503:
+EXPORT_SYMBOL(cow_current_groups);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#929: FILE: kernel/uid16.c:120:
+		if (!access_ok(VERIFY_WRITE, grouplist, sizeof(old_gid_t)*i))
 		                                                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#931: FILE: kernel/uid16.c:122:
+		for(j=0;j<i;j++) {
 		     ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#931: FILE: kernel/uid16.c:122:
+		for(j=0;j<i;j++) {
 		       ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#931: FILE: kernel/uid16.c:122:
+		for(j=0;j<i;j++) {
 		         ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#931: FILE: kernel/uid16.c:122:
+		for(j=0;j<i;j++) {
 		           ^

ERROR:SPACING: space required before the open parenthesis '('
#931: FILE: kernel/uid16.c:122:
+		for(j=0;j<i;j++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#933: FILE: kernel/uid16.c:124:
+			old_gid_t group;
+			group = current->groups[j];

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#934: FILE: kernel/uid16.c:125:
+			if (copy_to_user(grouplist+j, &group, sizeof(group)))
 			                          ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#955: FILE: kernel/uid16.c:141:
+	if ((ret = cow_current_groups(gidsetsize)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#958: FILE: kernel/uid16.c:144:
+	groups = kmalloc(sizeof(groups[0]) * gidsetsize, GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#959: FILE: kernel/uid16.c:145:
+	new_groups = kmalloc(sizeof(new_groups[0]) * gidsetsize, GFP_KERNEL);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000334681.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 23 warnings, 8 checks, 782 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000334681.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
