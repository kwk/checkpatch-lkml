WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
summary, is basically a forward-port of the 2.4 fbdev/fbcon framework to 2.6

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#123: FILE: drivers/video/console/bitblit.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#124: FILE: drivers/video/console/bitblit.c:2:
+ *  linux/drivers/video/console/bitblit.c -- BitBlitting Operation

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#159: FILE: drivers/video/console/bitblit.c:37:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#242: FILE: drivers/video/console/bitblit.c:120:
+	unsigned int maxcnt = info->pixmap.size/cellsize;
 	                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#275: FILE: drivers/video/console/bitblit.c:153:
+			cnt = k = maxcnt;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#277: FILE: drivers/video/console/bitblit.c:155:
+			cnt = k = count;

CHECK:SPACING: space preferred before that '&' (ctx:VxE)
#288: FILE: drivers/video/console/bitblit.c:166:
+				src = vc->vc_font.data + (scr_readw(s++)&
 				                                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#289: FILE: drivers/video/console/bitblit.c:167:
+							  charmask)*cellsize;
 							           ^

CHECK:SPACING: space preferred before that '&' (ctx:VxE)
#306: FILE: drivers/video/console/bitblit.c:184:
+				src = vc->vc_font.data + (scr_readw(s++)&
 				                                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#307: FILE: drivers/video/console/bitblit.c:185:
+							  charmask)*cellsize;
 							           ^

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#325: FILE: drivers/video/console/bitblit.c:203:
+	if (buf)
+		kfree(buf);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#334: FILE: drivers/video/console/bitblit.c:212:
+	unsigned int rw = info->var.xres - (vc->vc_cols*cw);
 	                                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#335: FILE: drivers/video/console/bitblit.c:213:
+	unsigned int bh = info->var.yres - (vc->vc_rows*ch);
 	                                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#370: FILE: drivers/video/console/bitblit.c:248:
+ ^Ic = scr_readw((u16 *) vc->vc_pos);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#370: FILE: drivers/video/console/bitblit.c:248:
+ ^Ic = scr_readw((u16 *) vc->vc_pos);$

CHECK:SPACING: No space is necessary after a cast
#370: FILE: drivers/video/console/bitblit.c:248:
+ 	c = scr_readw((u16 *) vc->vc_pos);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: drivers/video/console/bitblit.c:248:
+ ^Ic = scr_readw((u16 *) vc->vc_pos);$

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#380: FILE: drivers/video/console/bitblit.c:258:
+		if (info->cursor.data)
+			kfree(info->cursor.data);

ERROR:CODE_INDENT: code indent should use tabs where possible
#401: FILE: drivers/video/console/bitblit.c:279:
+        ^Iinfo->cursor.rop = ROP_XOR;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#401: FILE: drivers/video/console/bitblit.c:279:
+        ^Iinfo->cursor.rop = ROP_XOR;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#401: FILE: drivers/video/console/bitblit.c:279:
+        ^Iinfo->cursor.rop = ROP_XOR;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#425: FILE: drivers/video/console/bitblit.c:303:
+			cursor.hot.x = cursor.hot.y = 0;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#431: FILE: drivers/video/console/bitblit.c:309:
+		    ((vc->vc_cursor_type & 0x0f) != p->cursor_shape)
+		    || info->cursor.mask == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info->cursor.mask"
#431: FILE: drivers/video/console/bitblit.c:309:
+		    || info->cursor.mask == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#432: FILE: drivers/video/console/bitblit.c:310:
+			char *mask = kmalloc(w*vc->vc_font.height, GFP_ATOMIC);
 			                      ^

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#440: FILE: drivers/video/console/bitblit.c:318:
+			if (info->cursor.mask)
+				kfree(info->cursor.mask);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#453: FILE: drivers/video/console/bitblit.c:331:
+				cur_height = vc->vc_font.height/3;
 				                               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#459: FILE: drivers/video/console/bitblit.c:337:
+				cur_height = (vc->vc_font.height << 1)/3;
 				                                      ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#487: FILE: drivers/video/console/bitblit.c:365:
+EXPORT_SYMBOL(fbcon_set_bitops);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#534: FILE: drivers/video/console/fbcon.c:196:
+static inline int get_color(struct vc_data *vc, struct fb_info *info,
+	      u16 c, int is_fg)

CHECK:SPACING: No space is necessary after a cast
#576: FILE: drivers/video/console/fbcon.c:238:
+	struct fbcon_ops *ops = (struct fbcon_ops *) info->fbcon_par;

ERROR:CODE_INDENT: code indent should use tabs where possible
#590: FILE: drivers/video/console/fbcon.c:250:
+ ^I    registered_fb[(int) con2fb_map[vc->vc_num]] != info)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#590: FILE: drivers/video/console/fbcon.c:250:
+ ^I    registered_fb[(int) con2fb_map[vc->vc_num]] != info)$

CHECK:SPACING: No space is necessary after a cast
#590: FILE: drivers/video/console/fbcon.c:250:
+ 	    registered_fb[(int) con2fb_map[vc->vc_num]] != info)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#590: FILE: drivers/video/console/fbcon.c:250:
+ ^I    registered_fb[(int) con2fb_map[vc->vc_num]] != info)$

CHECK:SPACING: No space is necessary after a cast
#593: FILE: drivers/video/console/fbcon.c:253:
+	c = scr_readw((u16 *) vc->vc_pos);

CHECK:SPACING: No space is necessary after a cast
#639: FILE: drivers/video/console/fbcon.c:463:
+	struct fbcon_ops *ops = (struct fbcon_ops *) info->fbcon_par;

CHECK:SPACING: No space is necessary after a cast
#650: FILE: drivers/video/console/fbcon.c:474:
+	struct fbcon_ops *ops = (struct fbcon_ops *) info->fbcon_par;

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ops)...) over kmalloc(sizeof(struct fbcon_ops)...)
#683: FILE: drivers/video/console/fbcon.c:530:
+			ops = kmalloc(sizeof(struct fbcon_ops), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ops)...) over kmalloc(sizeof(struct fbcon_ops)...)
#980: FILE: drivers/video/console/fbcon.c:689:
+	ops = kmalloc(sizeof(struct fbcon_ops), GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#1023: FILE: drivers/video/console/fbcon.c:957:
+	struct fbcon_ops *ops = (struct fbcon_ops *) info->fbcon_par;

CHECK:SPACING: No space is necessary after a cast
#1047: FILE: drivers/video/console/fbcon.c:987:
+	struct fbcon_ops *ops = (struct fbcon_ops *) info->fbcon_par;

CHECK:SPACING: No space is necessary after a cast
#1068: FILE: drivers/video/console/fbcon.c:1009:
+	struct fb_info *info = registered_fb[(int) con2fb_map[vc->vc_num]];

CHECK:SPACING: No space is necessary after a cast
#1069: FILE: drivers/video/console/fbcon.c:1010:
+	struct fbcon_ops *ops = (struct fbcon_ops *) info->fbcon_par;

CHECK:SPACING: No space is necessary after a cast
#1079: FILE: drivers/video/console/fbcon.c:1018:
+	struct fbcon_ops *ops = (struct fbcon_ops *) info->fbcon_par;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1086: FILE: drivers/video/console/fbcon.c:1021:
+ ^Iint c = scr_readw((u16 *) vc->vc_pos);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1086: FILE: drivers/video/console/fbcon.c:1021:
+ ^Iint c = scr_readw((u16 *) vc->vc_pos);$

CHECK:SPACING: No space is necessary after a cast
#1086: FILE: drivers/video/console/fbcon.c:1021:
+ 	int c = scr_readw((u16 *) vc->vc_pos);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1086: FILE: drivers/video/console/fbcon.c:1021:
+ ^Iint c = scr_readw((u16 *) vc->vc_pos);$

CHECK:BRACES: braces {} should be used on all arms of this statement
#1093: FILE: drivers/video/console/fbcon.c:1027:
+			if (y + softback_lines >= vc->vc_rows) {
[...]
 			else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1367: FILE: drivers/video/console/fbcon.c:1407:
+					fbcon_putcs(vc, start, s - start,
+						     line, x);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1391: FILE: drivers/video/console/fbcon.c:1493:
+			fbcon_clear(vc, b - count, 0, count,
 					 vc->vc_cols);

CHECK:SPACING: No space is necessary after a cast
#1431: FILE: drivers/video/console/fbcon.c:1680:
+	struct fbcon_ops *ops = (struct fbcon_ops *) info->fbcon_par;

CHECK:SPACING: No space is necessary after a cast
#1456: FILE: drivers/video/console/fbcon.c:1814:
+	info = registered_fb[(int) con2fb_map[vc->vc_num]];

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1573: FILE: drivers/video/console/fbcon.h:153:
+extern void fbcon_set_tileops(struct vc_data *vc, struct fb_info *info,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1576: FILE: drivers/video/console/fbcon.h:156:
+extern void fbcon_set_bitops(struct fbcon_ops *ops);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1595: FILE: drivers/video/console/tileblit.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1596: FILE: drivers/video/console/tileblit.c:2:
+ *  linux/drivers/video/console/tileblit.c -- Tile Blitting Operation

CHECK:SPACING: No space is necessary after a cast
#1664: FILE: drivers/video/console/tileblit.c:70:
+	blit.indices = (u32 *) fb_get_buffer_offset(info, &info->pixmap, size);

WARNING:RETURN_VOID: void function return statements are not generally useful
#1675: FILE: drivers/video/console/tileblit.c:81:
+	return;
+}

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1735: FILE: drivers/video/console/tileblit.c:141:
+EXPORT_SYMBOL(fbcon_set_tileops);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#1769: FILE: drivers/video/Kconfig:52:
+config FB_TILEBLITTING
+       bool "Enable Tile Blitting Support"
+       depends on FB
+       default n
+       ---help---
+         This enables tile blitting.  Tile blitting is a drawing technique
+	 where the screen is divided into rectangular sections (tiles), whereas
+	 the standard blitting divides the screen into pixels. Because the
+	 default drawing element is a tile, drawing functions will be passed
+	 parameters in terms of number of tiles instead of number of pixels.
+	 For example, to draw a single character, instead of using bitmaps,
+	 an index to an array of bitmaps will be used.  To clear or move a
+	 rectangular section of a screen, the rectangle willbe described in
+	 terms of number of tiles in the x- and y-axis.
+
+	 This is particularly important to one driver, the matroxfb.  If
+	 unsure, say N.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1820: FILE: include/linux/fb.h:574:
+	__u8  *data;                /* actual tile map: a bitmap array, packed
+				       to the nearest byte */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1820: FILE: include/linux/fb.h:574:
+				       to the nearest byte */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000251478.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 22 warnings, 39 checks, 1707 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000251478.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
