WARNING:LINE_SPACING: Missing a blank line after declarations
#187: FILE: include/asm-i386/unistd.h:388:
+	long __res;
+	__asm__ volatile ("int $0x80"

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#211: FILE: include/linux/unistd.h:17:
+static inline long open(const char * name, int mode, int flags)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#213: FILE: include/linux/unistd.h:19:
+	return sys_open((const char __user *) name, mode, flags);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#226: FILE: include/linux/unistd.h:32:
+static inline long read(int fd, char * buf, size_t nr)

CHECK:SPACING: No space is necessary after a cast
#228: FILE: include/linux/unistd.h:34:
+	return sys_read(fd, (char __user *) buf, nr);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000284367.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 1 warnings, 2 checks, 163 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000284367.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
