WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
> > > Current -git as of today (that is 2.6.15-rc5 + the batch of fixes Linus

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#70: FILE: drivers/scsi/ipr.c:95:
+static unsigned int ipr_debug = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#203: FILE: drivers/scsi/ipr.c:945:
+ * ^Inone$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#218: FILE: drivers/scsi/ipr.c:960:
+ * ^Inone$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#239: FILE: drivers/scsi/ipr.c:981:
+	ipr_err("Additional IOA Data: %08X %08X %08X\n",
+		     be32_to_cpu(error->ioa_data[0]),

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#279: FILE: drivers/scsi/ipr.c:1024:
+ * ^Inone$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#363: FILE: drivers/scsi/ipr.c:1111:
+ * ^Inone$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#371: FILE: drivers/scsi/ipr.c:1119:
+	const u8 zero_sn[IPR_SERIAL_NUM_LEN] = { [0 ... IPR_SERIAL_NUM_LEN-1] = '0' };
 	                                                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#492: FILE: drivers/scsi/ipr.c:1229:
+			be32_to_cpu(data[i+1]),
 			                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#493: FILE: drivers/scsi/ipr.c:1230:
+			be32_to_cpu(data[i+2]),
 			                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#494: FILE: drivers/scsi/ipr.c:1231:
+			be32_to_cpu(data[i+3]));
 			                  ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#504: FILE: drivers/scsi/ipr.c:1241:
+ * ^Inone$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#529: FILE: drivers/scsi/ipr.c:1266:
+ * ^Inone$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#554: FILE: drivers/scsi/ipr.c:1291:
+ * ^Inone$

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#620: FILE: drivers/scsi/ipr.c:2186:
+} cache_state [] = {

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#636: FILE: drivers/scsi/ipr.c:2202:
+	struct Scsi_Host *shost = class_to_shost(class_dev);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:LINE_SPACING: Please don't use multiple blank lines
#652: FILE: drivers/scsi/ipr.c:2218:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#662: FILE: drivers/scsi/ipr.c:2228:
+ * ^Icount on success / other on failure$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#665: FILE: drivers/scsi/ipr.c:2231:
+static ssize_t ipr_store_write_caching(struct class_device *class_dev,
+					const char *buf, size_t count)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#708: FILE: drivers/scsi/ipr.c:2274:
+		.mode =		S_IRUGO | S_IWUSR,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#726: FILE: drivers/scsi/ipr.c:2425:
+ * ^Inumber of bytes printed to buffer$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#753: FILE: drivers/scsi/ipr.c:2452:
+ * ^Icount on success / other on failure$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#782: FILE: drivers/scsi/ipr.c:2481:
+		.mode =		S_IRUGO | S_IWUSR,

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*sglist)...) over kzalloc(sizeof(struct ipr_sglist)...)
#797: FILE: drivers/scsi/ipr.c:2559:
+	sglist = kzalloc(sizeof(struct ipr_sglist) +

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#856: FILE: drivers/scsi/ipr.c:2690:
+	ioadl[i-1].flags_and_data_len |=
 	       ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#868: FILE: drivers/scsi/ipr.c:2702:
+ * ^I0 on success / -EIO on failure$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*dump)...) over kzalloc(sizeof(struct ipr_dump)...)
#973: FILE: drivers/scsi/ipr.c:2934:
+	dump = kzalloc(sizeof(struct ipr_dump), GFP_KERNEL);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1001: FILE: drivers/scsi/ipr.c:3235:
+ * ^I0 on success / -ENXIO if device does not exist$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1083: FILE: drivers/scsi/ipr.c:4116:
+	       min_t(u16, be16_to_cpu(ioasa->auto_sense.auto_sense_len),
+		   SCSI_SENSE_BUFFERSIZE));

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1181: FILE: drivers/scsi/ipr.c:4614:
+ * ^IIPR_RC_JOB_CONTINUE / IPR_RC_JOB_RETURN$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1230: FILE: drivers/scsi/ipr.c:4893:
+ * ^IIPR_RC_JOB_RETURN$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1254: FILE: drivers/scsi/ipr.c:4917:
+ * ^IIPR_RC_JOB_CONTINUE / IPR_RC_JOB_RETURN$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1337: FILE: drivers/scsi/ipr.c:5172:
+ * ^IIPR_RC_JOB_CONTINUE / IPR_RC_JOB_RETURN$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ioa_cfg->res_entries)...) over kzalloc(sizeof(struct ipr_resource_entry)...)
#1428: FILE: drivers/scsi/ipr.c:6060:
+	ioa_cfg->res_entries = kzalloc(sizeof(struct ipr_resource_entry) *

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ioa_cfg->trace)...) over kzalloc(sizeof(struct ipr_trace_entry)...)
#1445: FILE: drivers/scsi/ipr.c:6106:
+	ioa_cfg->trace = kzalloc(sizeof(struct ipr_trace_entry) *

ERROR:SPACING: space required after that close brace '}'
#1600: FILE: drivers/scsi/ipr.h:260:
+}__attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1600: FILE: drivers/scsi/ipr.h:260:
+}__attribute__((packed));

ERROR:SPACING: space required after that close brace '}'
#1605: FILE: drivers/scsi/ipr.h:265:
+}__attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1605: FILE: drivers/scsi/ipr.h:265:
+}__attribute__((packed));

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1648: FILE: drivers/scsi/ipr.h:438:
+	__be32 data[SCSI_SENSE_BUFFERSIZE/sizeof(__be32)];
 	                                 ^

ERROR:SPACING: space required after that close brace '}'
#1684: FILE: drivers/scsi/ipr.h:559:
+}__attribute__((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1684: FILE: drivers/scsi/ipr.h:559:
+}__attribute__((packed));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1711: FILE: drivers/scsi/ipr.h:578:
+}__attribute__((packed, aligned (4)));

ERROR:SPACING: space required after that close brace '}'
#1711: FILE: drivers/scsi/ipr.h:578:
+}__attribute__((packed, aligned (4)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1711: FILE: drivers/scsi/ipr.h:578:
+}__attribute__((packed, aligned (4)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(4) over __attribute__((aligned(4)))
#1711: FILE: drivers/scsi/ipr.h:578:
+}__attribute__((packed, aligned (4)));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1719: FILE: drivers/scsi/ipr.h:584:
+}__attribute__((packed, aligned (4)));

ERROR:SPACING: space required after that close brace '}'
#1719: FILE: drivers/scsi/ipr.h:584:
+}__attribute__((packed, aligned (4)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1719: FILE: drivers/scsi/ipr.h:584:
+}__attribute__((packed, aligned (4)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(4) over __attribute__((aligned(4)))
#1719: FILE: drivers/scsi/ipr.h:584:
+}__attribute__((packed, aligned (4)));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1751: FILE: drivers/scsi/ipr.h:610:
+}__attribute__((packed, aligned (4)));

ERROR:SPACING: space required after that close brace '}'
#1751: FILE: drivers/scsi/ipr.h:610:
+}__attribute__((packed, aligned (4)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1751: FILE: drivers/scsi/ipr.h:610:
+}__attribute__((packed, aligned (4)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(4) over __attribute__((aligned(4)))
#1751: FILE: drivers/scsi/ipr.h:610:
+}__attribute__((packed, aligned (4)));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1775: FILE: drivers/scsi/ipr.h:627:
+}__attribute__((packed, aligned (4)));

ERROR:SPACING: space required after that close brace '}'
#1775: FILE: drivers/scsi/ipr.h:627:
+}__attribute__((packed, aligned (4)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1775: FILE: drivers/scsi/ipr.h:627:
+}__attribute__((packed, aligned (4)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(4) over __attribute__((aligned(4)))
#1775: FILE: drivers/scsi/ipr.h:627:
+}__attribute__((packed, aligned (4)));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1805: FILE: drivers/scsi/ipr.h:650:
+}__attribute__((packed, aligned (4)));

ERROR:SPACING: space required after that close brace '}'
#1805: FILE: drivers/scsi/ipr.h:650:
+}__attribute__((packed, aligned (4)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1805: FILE: drivers/scsi/ipr.h:650:
+}__attribute__((packed, aligned (4)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(4) over __attribute__((aligned(4)))
#1805: FILE: drivers/scsi/ipr.h:650:
+}__attribute__((packed, aligned (4)));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1817: FILE: drivers/scsi/ipr.h:662:
+}__attribute__((packed, aligned (4)));

ERROR:SPACING: space required after that close brace '}'
#1817: FILE: drivers/scsi/ipr.h:662:
+}__attribute__((packed, aligned (4)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1817: FILE: drivers/scsi/ipr.h:662:
+}__attribute__((packed, aligned (4)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(4) over __attribute__((aligned(4)))
#1817: FILE: drivers/scsi/ipr.h:662:
+}__attribute__((packed, aligned (4)));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1823: FILE: drivers/scsi/ipr.h:668:
+}__attribute__((packed, aligned (4)));

ERROR:SPACING: space required after that close brace '}'
#1823: FILE: drivers/scsi/ipr.h:668:
+}__attribute__((packed, aligned (4)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1823: FILE: drivers/scsi/ipr.h:668:
+}__attribute__((packed, aligned (4)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(4) over __attribute__((aligned(4)))
#1823: FILE: drivers/scsi/ipr.h:668:
+}__attribute__((packed, aligned (4)));

WARNING:SPACING: Unnecessary space before function pointer arguments
#1907: FILE: drivers/scsi/ipr.h:1035:
+	int (*job_step_failed) (struct ipr_cmnd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ipr_cmnd *' should also have an identifier name
#1907: FILE: drivers/scsi/ipr.h:1035:
+	int (*job_step_failed) (struct ipr_cmnd *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#1920: FILE: drivers/scsi/ipr.h:1171:
+#define IPR_DBG_CMD(CMD) if (ipr_debug) { CMD; }

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1920: FILE: drivers/scsi/ipr.h:1171:
+#define IPR_DBG_CMD(CMD) if (ipr_debug) { CMD; }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'res' - possible side-effects?
#1928: FILE: drivers/scsi/ipr.h:1219:
+#define ipr_phys_res_err(ioa_cfg, res, fmt, ...)			\
+{									\
+	if ((res).bus >= IPR_MAX_NUM_BUSES) {				\
+		ipr_err(fmt": unknown\n", ##__VA_ARGS__);		\
+	} else {							\
+		ipr_err(fmt": %d:%d:%d:%d\n",				\
+			##__VA_ARGS__, (ioa_cfg)->host->host_no,	\
+			(res).bus, (res).target, (res).lun);		\
+	}								\
+}

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'fmt' - possible side-effects?
#1928: FILE: drivers/scsi/ipr.h:1219:
+#define ipr_phys_res_err(ioa_cfg, res, fmt, ...)			\
+{									\
+	if ((res).bus >= IPR_MAX_NUM_BUSES) {				\
+		ipr_err(fmt": unknown\n", ##__VA_ARGS__);		\
+	} else {							\
+		ipr_err(fmt": %d:%d:%d:%d\n",				\
+			##__VA_ARGS__, (ioa_cfg)->host->host_no,	\
+			(res).bus, (res).target, (res).lun);		\
+	}								\
+}

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1931: FILE: drivers/scsi/ipr.h:1222:
+		ipr_err(fmt": unknown\n", ##__VA_ARGS__);		\

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1933: FILE: drivers/scsi/ipr.h:1224:
+		ipr_err(fmt": %d:%d:%d:%d\n",				\

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1949: FILE: drivers/scsi/ipr.h:1233:
+#define ENTER IPR_DBG_CMD(printk(KERN_INFO IPR_NAME": Entering %s\n", __FUNCTION__))

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1949: FILE: drivers/scsi/ipr.h:1233:
+#define ENTER IPR_DBG_CMD(printk(KERN_INFO IPR_NAME": Entering %s\n", __FUNCTION__))

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1949: FILE: drivers/scsi/ipr.h:1233:
+#define ENTER IPR_DBG_CMD(printk(KERN_INFO IPR_NAME": Entering %s\n", __FUNCTION__))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1950: FILE: drivers/scsi/ipr.h:1234:
+#define LEAVE IPR_DBG_CMD(printk(KERN_INFO IPR_NAME": Leaving %s\n", __FUNCTION__))

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1950: FILE: drivers/scsi/ipr.h:1234:
+#define LEAVE IPR_DBG_CMD(printk(KERN_INFO IPR_NAME": Leaving %s\n", __FUNCTION__))

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1950: FILE: drivers/scsi/ipr.h:1234:
+#define LEAVE IPR_DBG_CMD(printk(KERN_INFO IPR_NAME": Leaving %s\n", __FUNCTION__))

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1962: FILE: drivers/scsi/ipr.h:1311:
+ * ^I1 if NACA queueing model / 0 if not NACA queueing model$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000126380.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 51 warnings, 21 checks, 1836 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000126380.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
