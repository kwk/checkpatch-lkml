WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#36: FILE: drivers/acpi/bay.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#54: FILE: drivers/acpi/bay.c:19:
+ *  with this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#55: FILE: drivers/acpi/bay.c:20:
+ *  59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.$

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#68: FILE: drivers/acpi/bay.c:33:
+#include <asm/uaccess.h>

ERROR:SPACING: space required after that ',' (ctx:VxV)
#79: FILE: drivers/acpi/bay.c:44:
+#define bay_dprintk(h,s) {\
                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#83: FILE: drivers/acpi/bay.c:48:
+	printk(KERN_DEBUG PREFIX "%s: %s\n", prefix, s); }

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#89: FILE: drivers/acpi/bay.c:54:
+static int acpi_bay_match(struct acpi_device *device,
+				struct acpi_driver *driver);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#174: FILE: drivers/acpi/bay.c:139:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#187: FILE: drivers/acpi/bay.c:152:
+	if ((ACPI_SUCCESS(acpi_get_handle(handle, "_GTF", &tmp))) ||
+	   (ACPI_SUCCESS(acpi_get_handle(handle, "_GTM", &tmp))) ||

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#241: FILE: drivers/acpi/bay.c:206:
+		printk("No acpi handle for device\n");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#265: FILE: drivers/acpi/bay.c:230:
+		seq_printf(seq, "present\n");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#267: FILE: drivers/acpi/bay.c:232:
+		seq_printf(seq, "removed\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#274: FILE: drivers/acpi/bay.c:239:
+acpi_bay_write_eject(struct file *file,
+		      const char __user * buffer,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#274: FILE: drivers/acpi/bay.c:239:
+		      const char __user * buffer,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#275: FILE: drivers/acpi/bay.c:240:
+		      size_t count, loff_t * data)

WARNING:SIZEOF_PARENTHESIS: sizeof str should be sizeof(str)
#283: FILE: drivers/acpi/bay.c:248:
+	if (!bay || count + 1 > sizeof str)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#290: FILE: drivers/acpi/bay.c:255:
+	state = simple_strtoul(str, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:CONST_STRUCT: struct file_operations should normally be const
#311: FILE: drivers/acpi/bay.c:276:
+static struct file_operations acpi_bay_status_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct file_operations should normally be const
#318: FILE: drivers/acpi/bay.c:283:
+static struct file_operations acpi_bay_eject_fops = {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#325: FILE: drivers/acpi/bay.c:290:
+};
+#if 0

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#325: FILE: drivers/acpi/bay.c:290:
+#if 0

WARNING:CONST_STRUCT: struct file_operations should normally be const
#326: FILE: drivers/acpi/bay.c:291:
+static struct file_operations acpi_bay_insert_fops = {

ERROR:CODE_INDENT: code indent should use tabs where possible
#343: FILE: drivers/acpi/bay.c:308:
+  ^I * acpi device drivers because our device may not be present$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#343: FILE: drivers/acpi/bay.c:308:
+  ^I * acpi device drivers because our device may not be present$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#351: FILE: drivers/acpi/bay.c:316:
+				  S_IRUGO, bay->proc);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:BRACES: braces {} should be used on all arms of this statement
#352: FILE: drivers/acpi/bay.c:317:
+	if (!entry)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#354: FILE: drivers/acpi/bay.c:319:
+		return -EIO;
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#354: FILE: drivers/acpi/bay.c:319:
+	else {

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUGO' are not preferred. Consider using octal permissions '0222'.
#361: FILE: drivers/acpi/bay.c:326:
+				  S_IWUGO, bay->proc);

CHECK:BRACES: braces {} should be used on all arms of this statement
#362: FILE: drivers/acpi/bay.c:327:
+	if (!entry)
[...]
+	else {
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#364: FILE: drivers/acpi/bay.c:329:
+		return -EIO;
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#364: FILE: drivers/acpi/bay.c:329:
+	else {

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#369: FILE: drivers/acpi/bay.c:334:
+#if 0

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUGO' are not preferred. Consider using octal permissions '0222'.
#372: FILE: drivers/acpi/bay.c:337:
+				  S_IWUGO, bay->proc);

CHECK:BRACES: braces {} should be used on all arms of this statement
#373: FILE: drivers/acpi/bay.c:338:
+	if (!entry)
[...]
+	else {
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#375: FILE: drivers/acpi/bay.c:340:
+		return -EIO;
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#375: FILE: drivers/acpi/bay.c:340:
+	else {

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#392: FILE: drivers/acpi/bay.c:357:
+#if 0

WARNING:LINE_SPACING: Missing a blank line after declarations
#417: FILE: drivers/acpi/bay.c:382:
+	struct acpi_buffer nbuffer = {ACPI_ALLOCATE_BUFFER, NULL};
+	acpi_get_name(handle, ACPI_FULL_PATHNAME, &nbuffer);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!acpi_bay_dir"
#425: FILE: drivers/acpi/bay.c:390:
+	if (acpi_bay_dir == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#440: FILE: drivers/acpi/bay.c:405:
+	status = acpi_install_notify_handler(handle, ACPI_SYSTEM_NOTIFY,
+			bay_notify, new_bay);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#441: FILE: drivers/acpi/bay.c:406:
+	if (ACPI_FAILURE(status)) {
+		printk(KERN_ERR PREFIX "Error installing bay notify handler\n");
+	}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#442: FILE: drivers/acpi/bay.c:407:
+		printk(KERN_ERR PREFIX "Error installing bay notify handler\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#452: FILE: drivers/acpi/bay.c:417:
+	printk(KERN_INFO PREFIX "Bay [%s] Added\n", new_bay->name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#463: FILE: drivers/acpi/bay.c:428:
+static int acpi_bay_match(struct acpi_device *device,
+				struct acpi_driver *driver)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#487: FILE: drivers/acpi/bay.c:452:
+static struct acpi_device * bay_create_acpi_device(acpi_handle handle)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#506: FILE: drivers/acpi/bay.c:471:
+		ret = acpi_bus_add(&device, parent_device, handle,
+			ACPI_BUS_TYPE_DEVICE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#509: FILE: drivers/acpi/bay.c:474:
+			pr_debug("error adding bus, %x\n",
+				-ret);

ERROR:SPACING: space required before the open parenthesis '('
#530: FILE: drivers/acpi/bay.c:495:
+	switch(event) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#532: FILE: drivers/acpi/bay.c:497:
+		printk("Bus Check\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#534: FILE: drivers/acpi/bay.c:499:
+		printk("Device Check\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#539: FILE: drivers/acpi/bay.c:504:
+			printk("No device for generating event\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#545: FILE: drivers/acpi/bay.c:510:
+		printk("Eject request\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#550: FILE: drivers/acpi/bay.c:515:
+			printk("No device for generating eventn");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#557: FILE: drivers/acpi/bay.c:522:
+		printk("unknown event %d\n", event);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#588: FILE: drivers/acpi/bay.c:553:
+	acpi_walk_namespace(ACPI_TYPE_DEVICE, ACPI_ROOT_OBJECT,
+		ACPI_UINT32_MAX, find_bay, &bays, NULL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#592: FILE: drivers/acpi/bay.c:557:
+			printk(KERN_ERR "Unable to register bay driver\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#595: FILE: drivers/acpi/bay.c:560:
+				remove_proc_entry(ACPI_BAY_CLASS,
+					acpi_root_dir);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#614: FILE: drivers/acpi/bay.c:579:
+		acpi_remove_notify_handler(bay->handle, ACPI_SYSTEM_NOTIFY,
+			bay_notify);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#636: FILE: drivers/acpi/Kconfig:141:
+config ACPI_BAY
+	tristate "Removable Drive Bay"
+	depends on EXPERIMENTAL
+	help
+	  This driver adds support for ACPI controlled removable drive
+	  bays such as the IBM ultrabay or the Dell Module Bay.
+

Kconfig symbols should have a help text which fully describes
it.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000040186.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 33 warnings, 19 checks, 612 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000040186.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
