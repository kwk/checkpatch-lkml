WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#45: FILE: devfs/base.c:3156:
+    struct devfsd_notify_struct* info;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#45: FILE: devfs/base.c:3156:
+    struct devfsd_notify_struct* info;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#57: FILE: devfs/base.c:3167:
+    info = kmalloc(sizeof(struct devfsd_notify_struct), GFP_KERNEL);$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*info)...) over kmalloc(sizeof(struct devfsd_notify_struct)...)
#57: FILE: devfs/base.c:3167:
+    info = kmalloc(sizeof(struct devfsd_notify_struct), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#58: FILE: devfs/base.c:3168:
+    if(info == NULL)$

ERROR:SPACING: space required before the open parenthesis '('
#58: FILE: devfs/base.c:3168:
+    if(info == NULL)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info"
#58: FILE: devfs/base.c:3168:
+    if(info == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#59: FILE: devfs/base.c:3169:
+        return -ENOMEM;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: devfs/base.c:3169:
+        return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: devfs/base.c:3171:
+    info->major = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#62: FILE: devfs/base.c:3172:
+    info->minor = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: devfs/base.c:3196:
+    info->overrun_count = ival;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: devfs/base.c:3199:
+    info->type = entry->type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: devfs/base.c:3200:
+    info->mode = entry->mode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: devfs/base.c:3201:
+    info->uid = entry->uid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: devfs/base.c:3202:
+    info->gid = entry->gid;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#93: FILE: devfs/base.c:3205:
+	info->namelen = strlen (entry->data);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#96: FILE: devfs/base.c:3207:
+	memcpy (info->devname, entry->data, info->namelen + 1);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#109: FILE: devfs/base.c:3218:
+	pos = devfs_generate_path (de, info->devname, DEVFS_PATHLEN);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#110: FILE: devfs/base.c:3219:
+	if (pos < 0) {
+	  kfree(info);

WARNING:TABSTOP: Statements should start on a tabstop
#112: FILE: devfs/base.c:3221:
+	  return pos;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#119: FILE: devfs/base.c:3224:
+	if (info->mode == 0) info->mode = de->mode;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:SPACING: No space is necessary after a cast
#122: FILE: devfs/base.c:3226:
+    devname_offset = info->devname - (char *) info;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: devfs/base.c:3226:
+    devname_offset = info->devname - (char *) info;$

CHECK:SPACING: No space is necessary after a cast
#130: FILE: devfs/base.c:3233:
+	if ( copy_to_user (buf, (char *) info + rpos, tlen) )

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#130: FILE: devfs/base.c:3233:
+	if ( copy_to_user (buf, (char *) info + rpos, tlen) )
 	{

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#130: FILE: devfs/base.c:3233:
+	if ( copy_to_user (buf, (char *) info + rpos, tlen) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#130: FILE: devfs/base.c:3233:
+	if ( copy_to_user (buf, (char *) info + rpos, tlen) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#130: FILE: devfs/base.c:3233:
+	if ( copy_to_user (buf, (char *) info + rpos, tlen) )

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#145: FILE: devfs/base.c:3248:
+	if ( copy_to_user (buf, info->devname + pos + rpos - devname_offset,
[...]
 	{

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#145: FILE: devfs/base.c:3248:
+	if ( copy_to_user (buf, info->devname + pos + rpos - devname_offset,

ERROR:SPACING: space prohibited after that open parenthesis '('
#145: FILE: devfs/base.c:3248:
+	if ( copy_to_user (buf, info->devname + pos + rpos - devname_offset,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: devfs/base.c:3266:
+    kfree(info);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000532177.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 23 warnings, 4 checks, 113 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000532177.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
