CHECK:BRACES: Unbalanced braces around else statement
#63: FILE: arch/i386/mm/pageattr.c:132:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#64: FILE: arch/i386/mm/pageattr.c:133:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#67: FILE: arch/i386/mm/pageattr.c:136:
+	BUG_ON(!page_count(kpte_page));

CHECK:BRACES: Unbalanced braces around else statement
#105: FILE: arch/x86_64/mm/pageattr.c:143:
+	} else

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#106: FILE: arch/x86_64/mm/pageattr.c:144:
+		BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#116: FILE: arch/x86_64/mm/pageattr.c:152:
+		BUG(); /* memleak and failed 2M page regeneration */

WARNING:BAD_SIGN_OFF: Duplicate signature
#136: 
Signed-off-by: Andrea Arcangeli <andrea@novell.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:TRAILING_WHITESPACE: trailing whitespace
#159: FILE: arch/i386/mm/ioremap.c:235:
+^Iif ((p->flags >> 24) && p->phys_addr < virt_to_phys(high_memory)) { $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#207: FILE: arch/x86_64/mm/ioremap.c:198:
+^Iif (phys_addr + size - 1 < virt_to_phys(high_memory)) { $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#213: FILE: arch/x86_64/mm/ioremap.c:202:
+		BUG_ON(phys_addr+size >= (unsigned long)high_memory);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#213: FILE: arch/x86_64/mm/ioremap.c:202:
+		BUG_ON(phys_addr+size >= (unsigned long)high_memory);
 		                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#214: FILE: arch/x86_64/mm/ioremap.c:203:
+		BUG_ON(phys_addr + size <= phys_addr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#223: FILE: arch/x86_64/mm/ioremap.c:226:
+^Iif ((p->flags >> 24) && p->phys_addr + p->size < virt_to_phys(high_memory)) { $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000236268.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 7 warnings, 3 checks, 139 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000236268.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
