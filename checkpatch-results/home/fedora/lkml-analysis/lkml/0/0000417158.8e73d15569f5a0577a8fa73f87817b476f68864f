WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#82: 
diff -Nru linux-2.5.45.vanilla/drivers/char/eventpoll.c linux-2.5.45.epoll/drivers/char/eventpoll.c

WARNING:TYPO_SPELLING: 'usefull' may be misspelled - perhaps 'useful'?
#143: FILE: drivers/char/eventpoll.c:97:
+ * This is usefull for us because we can test if the item is linked
            ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'p' - possible side-effects?
#147: FILE: drivers/char/eventpoll.c:100:
+#define EP_LIST_DEL(p) do { list_del(p); INIT_LIST_HEAD(p); } while (0)

CHECK:SPACING: No space is necessary after a cast
#153: FILE: drivers/char/eventpoll.c:106:
+#define EP_ITEM_FROM_WAIT(p) ((struct epitem *) container_of(p, struct eppoll_entry, wait)->base)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#155: FILE: drivers/char/eventpoll.c:108:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#157: FILE: drivers/char/eventpoll.c:110:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#325: FILE: drivers/char/eventpoll.c:202:
+static int ep_poll_callback(wait_queue_t *wait, unsigned mode, int sync);

WARNING:TYPO_SPELLING: 'togheter' may be misspelled - perhaps 'together'?
#338: FILE: drivers/char/eventpoll.c:214:
+/* Use to link togheter all the "struct eventpoll" */
                ^^^^^^^^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#382: FILE: drivers/char/eventpoll.c:252:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#384: FILE: drivers/char/eventpoll.c:254:
+		if (n & 1) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#390: FILE: drivers/char/eventpoll.c:260:
+		} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#396: FILE: drivers/char/eventpoll.c:266:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#423: FILE: drivers/char/eventpoll.c:292:
+
+

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#449: FILE: drivers/char/eventpoll.c:307:
+	for (; !ep_is_prime(size); size++);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:BRACES: braces {} should be used on all arms of this statement
#569: FILE: drivers/char/eventpoll.c:391:
+		if (!dpi) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#575: FILE: drivers/char/eventpoll.c:397:
+		} else

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sys_epoll_wait', this function's name, in a string
#617: FILE: drivers/char/eventpoll.c:445:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: sys_epoll_wait(%d, %p, %d, %d)\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#621: FILE: drivers/char/eventpoll.c:449:
+	if ((error = verify_area(VERIFY_WRITE, events, maxevents * sizeof(struct pollfd))))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#701: FILE: drivers/char/eventpoll.c:599:
+	if (!(ep = kmalloc(sizeof(struct eventpoll), GFP_KERNEL)))

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ep)...) over kmalloc(sizeof(struct eventpoll)...)
#701: FILE: drivers/char/eventpoll.c:599:
+	if (!(ep = kmalloc(sizeof(struct eventpoll), GFP_KERNEL)))

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ep_file_init', this function's name, in a string
#719: FILE: drivers/char/eventpoll.c:617:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: ep_file_init() ep=%p\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#724: FILE: drivers/char/eventpoll.c:622:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#730: FILE: drivers/char/eventpoll.c:628:
+{
+

CHECK:SPACING: No space is necessary after a cast
#731: FILE: drivers/char/eventpoll.c:629:
+	return (int) ((((unsigned long) file) / sizeof(struct file)) % ep->hsize);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#734: FILE: drivers/char/eventpoll.c:632:
+
+

CHECK:SPACING: No space is necessary after a cast
#743: FILE: drivers/char/eventpoll.c:639:
+	return (struct list_head *) (ep->hpages[index / EP_HENTRY_X_PAGE] +

CHECK:LINE_SPACING: Please don't use multiple blank lines
#747: FILE: drivers/char/eventpoll.c:643:
+
+

WARNING:TYPO_SPELLING: 'reaquire' may be misspelled - perhaps 'reacquire'?
#825: FILE: drivers/char/eventpoll.c:700:
+			/* And then we reaquire the lock ... */
 			               ^^^^^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ep_find', this function's name, in a string
#888: FILE: drivers/char/eventpoll.c:744:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: ep_find(%p) -> %p\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ep_unlink', this function's name, in a string
#1098: FILE: drivers/char/eventpoll.c:874:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: ep_unlink(%p, %d)\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1104: FILE: drivers/char/eventpoll.c:880:
+
+

WARNING:TYPO_SPELLING: 'machanism' may be misspelled - perhaps 'mechanism'?
#1169: FILE: drivers/char/eventpoll.c:914:
+ * machanism. It is called by the stored file descriptors when they
    ^^^^^^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1174: FILE: drivers/char/eventpoll.c:917:
+static int ep_poll_callback(wait_queue_t *wait, unsigned mode, int sync)

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1449: FILE: drivers/char/eventpoll.c:1070:
+			MAX_SCHEDULE_TIMEOUT: (timeout * HZ) / 1000;
 			                    ^

WARNING:INDENTED_LABEL: labels should not be indented
#1449: FILE: drivers/char/eventpoll.c:1070:
+			MAX_SCHEDULE_TIMEOUT: (timeout * HZ) / 1000;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#2319: FILE: include/linux/poll.h:18:
+	void (*qproc)(void *, wait_queue_head_t *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'wait_queue_head_t *' should also have an identifier name
#2319: FILE: include/linux/poll.h:18:
+	void (*qproc)(void *, wait_queue_head_t *);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2334: FILE: include/linux/poll.h:40:
+static inline void poll_initwait_ex(poll_table* pt, int queue,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000417158.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 14 warnings, 19 checks, 1995 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000417158.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
