WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
>> > > the attached patch creates a /sys/cryptoapi/<cipher-name>/ hierarchie

WARNING:TYPO_SPELLING: 'hierarchie' may be misspelled - perhaps 'hierarchy'?
#46: 
>> > > the attached patch creates a /sys/cryptoapi/<cipher-name>/ hierarchie
                                                                  ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#102: FILE: crypto/api.c:22:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#105: FILE: crypto/api.c:24:
+extern struct class cryptoapi_class;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#109: FILE: crypto/api.c:28:
+extern struct class_device_attribute class_device_attr_module;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#110: FILE: crypto/api.c:29:
+extern struct class_device_attribute class_device_attr_type;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#111: FILE: crypto/api.c:30:
+extern struct class_device_attribute class_device_attr_blocksize;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#112: FILE: crypto/api.c:31:
+extern struct class_device_attribute class_device_attr_digestsize;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#113: FILE: crypto/api.c:32:
+extern struct class_device_attribute class_device_attr_minkeysize;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#114: FILE: crypto/api.c:33:
+extern struct class_device_attribute class_device_attr_maxkeysize;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around cryptoapi_class.children
#132: FILE: crypto/api.c:56:
+	list_for_each_entry(dev, &(cryptoapi_class.children), node) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#134: FILE: crypto/api.c:58:
+			q =3D (struct crypto_alg *)class_get_devdata(dev);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#134: FILE: crypto/api.c:58:
+			q =3D (struct crypto_alg *)class_get_devdata(dev);
 			  ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around cryptoapi_class.children
#149: FILE: crypto/api.c:183:
+	list_for_each_entry(dev, &(cryptoapi_class.children), node) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#158: FILE: crypto/api.c:190:
+	dev =3D (struct class_device*)kmalloc(sizeof(struct class_device), GFP_KE=

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#158: FILE: crypto/api.c:190:
+	dev =3D (struct class_device*)kmalloc(sizeof(struct class_device), GFP_KE=

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#158: FILE: crypto/api.c:190:
+	dev =3D (struct class_device*)kmalloc(sizeof(struct class_device), GFP_KE=
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#158: FILE: crypto/api.c:190:
+	dev =3D (struct class_device*)kmalloc(sizeof(struct class_device), GFP_KE=
 	                                                                         ^

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#158: FILE: crypto/api.c:190:
+	dev =3D (struct class_device*)kmalloc(sizeof(struct class_device), GFP_KE=

ERROR:SPACING: space required before the open parenthesis '('
#160: FILE: crypto/api.c:191:
+	if(!dev) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#161: FILE: crypto/api.c:192:
+		ret =3D -ENOMEM;
 		    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#161: FILE: crypto/api.c:192:
+		ret =3D -ENOMEM;
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#164: FILE: crypto/api.c:195:
+=09
 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#166: FILE: crypto/api.c:197:
+	dev->class =3D &cryptoapi_class;
 	           ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#166: FILE: crypto/api.c:197:
+	dev->class =3D &cryptoapi_class;
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#167: FILE: crypto/api.c:198:
+	dev->dev   =3D NULL;
 	           ^

ERROR:SPACING: space required before the open parenthesis '('
#177: FILE: crypto/api.c:208:
+	switch(alg->cra_flags & CRYPTO_ALG_TYPE_MASK) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around cryptoapi_class.children
#202: FILE: crypto/api.c:233:
+	list_for_each_entry(dev, &(cryptoapi_class.children), node) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#203: FILE: crypto/api.c:234:
+		q =3D class_get_devdata(dev);
 		  ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#442: FILE: crypto/proc.c:37:
+	struct list_head *e =3D &(((struct class_device*)p)->node);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#442: FILE: crypto/proc.c:37:
+	struct list_head *e =3D &(((struct class_device*)p)->node);
 	                    ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#442: FILE: crypto/proc.c:37:
+	struct list_head *e =3D &(((struct class_device*)p)->node);
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#448: FILE: crypto/proc.c:40:
+	e =3D e->next;
 	  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#449: FILE: crypto/proc.c:41:
+	return (e =3D=3D &(cryptoapi_class.children)) ?
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#449: FILE: crypto/proc.c:41:
+	return (e =3D=3D &(cryptoapi_class.children)) ?
 	             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#449: FILE: crypto/proc.c:41:
+	return (e =3D=3D &(cryptoapi_class.children)) ?
 	                 ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around cryptoapi_class.children
#449: FILE: crypto/proc.c:41:
+	return (e =3D=3D &(cryptoapi_class.children)) ?

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#460: FILE: crypto/proc.c:53:
+	struct crypto_alg *alg =3D (struct crypt_alg*)class_get_devdata((struct c=

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#460: FILE: crypto/proc.c:53:
+	struct crypto_alg *alg =3D (struct crypt_alg*)class_get_devdata((struct c=

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#460: FILE: crypto/proc.c:53:
+	struct crypto_alg *alg =3D (struct crypt_alg*)class_get_devdata((struct c=
 	                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#460: FILE: crypto/proc.c:53:
+	struct crypto_alg *alg =3D (struct crypt_alg*)class_get_devdata((struct c=
 	                                                                         ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#530: FILE: crypto/sysfs.c:1:
+#include <linux/init.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#541: FILE: crypto/sysfs.c:12:
+struct class cryptoapi_class =3D {
                              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#542: FILE: crypto/sysfs.c:13:
+	.name =3D "crypto",
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#543: FILE: crypto/sysfs.c:14:
+	.release =3D cryptoapi_release,
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#547: FILE: crypto/sysfs.c:18:
+static ssize_t cryptoapi_show_blocksize(struct class_device *dev, char *bu=
                                                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#549: FILE: crypto/sysfs.c:19:
+static ssize_t cryptoapi_show_digestsize(struct class_device *dev, char *b=
                                                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#552: FILE: crypto/sysfs.c:21:
+static ssize_t cryptoapi_show_module(struct class_device *dev, char *buffe=
                                                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#554: FILE: crypto/sysfs.c:22:
+static ssize_t cryptoapi_show_maxkeysize(struct class_device *dev, char *b=
                                                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#556: FILE: crypto/sysfs.c:23:
+static ssize_t cryptoapi_show_minkeysize(struct class_device *dev, char *b=
                                                                           ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#567: FILE: crypto/sysfs.c:33:
+void cryptoapi_release(struct class_device *class_dev) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#572: FILE: crypto/sysfs.c:38:
+	static ssize_t cryptoapi_show_##_name(struct class_device *dev, char *buf=
 	                                                                         ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#574: FILE: crypto/sysfs.c:39:
+		BUG_ON(dev=3D=3DNULL); \

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#574: FILE: crypto/sysfs.c:39:
+		BUG_ON(dev=3D=3DNULL); \
 		          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#574: FILE: crypto/sysfs.c:39:
+		BUG_ON(dev=3D=3DNULL); \
 		             ^

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#574: FILE: crypto/sysfs.c:39:
+		BUG_ON(dev=3D=3DNULL); \

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#576: FILE: crypto/sysfs.c:41:
+				((struct crypto_alg*)class_get_devdata(dev))->cra_##_attr)+1)*sizeof(c=

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#576: FILE: crypto/sysfs.c:41:
+				((struct crypto_alg*)class_get_devdata(dev))->cra_##_attr)+1)*sizeof(c=

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#576: FILE: crypto/sysfs.c:41:
+				((struct crypto_alg*)class_get_devdata(dev))->cra_##_attr)+1)*sizeof(c=
 				                                                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#576: FILE: crypto/sysfs.c:41:
+				((struct crypto_alg*)class_get_devdata(dev))->cra_##_attr)+1)*sizeof(c=
 				                                                             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#576: FILE: crypto/sysfs.c:41:
+				((struct crypto_alg*)class_get_devdata(dev))->cra_##_attr)+1)*sizeof(c=
 				                                                                      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#580: FILE: crypto/sysfs.c:44:
+cryptoapi_show(blocksize, blocksize, %u\n);
                                      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#581: FILE: crypto/sysfs.c:45:
+cryptoapi_show(digestsize, digest.dia_digestsize, %u\n);
                                                   ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#582: FILE: crypto/sysfs.c:46:
+cryptoapi_show(minkeysize, cipher.cia_min_keysize, %u\n);
                                                    ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#583: FILE: crypto/sysfs.c:47:
+cryptoapi_show(maxkeysize, cipher.cia_max_keysize, %u\n);
                                                    ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#584: FILE: crypto/sysfs.c:48:
+cryptoapi_show(name, name, %s\n);
                            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#588: FILE: crypto/sysfs.c:52:
+static ssize_t cryptoapi_show_module(struct class_device *dev, char *buffe=
                                                                           ^

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#588: FILE: crypto/sysfs.c:52:
+static ssize_t cryptoapi_show_module(struct class_device *dev, char *buffe=
r) {
+	BUG_ON(dev=3D=3DNULL);
+	return (snprintf(buffer, PAGE_SIZE, "%s\n",
+			module_name(((struct crypto_alg*)class_get_devdata(dev))->cra_module))+=
1)*sizeof(char);
+}

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#590: FILE: crypto/sysfs.c:53:
+	BUG_ON(dev=3D=3DNULL);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#590: FILE: crypto/sysfs.c:53:
+	BUG_ON(dev=3D=3DNULL);
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#590: FILE: crypto/sysfs.c:53:
+	BUG_ON(dev=3D=3DNULL);
 	             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#592: FILE: crypto/sysfs.c:55:
+	return (snprintf(buffer, PAGE_SIZE, "%s\n",
+			module_name(((struct crypto_alg*)class_get_devdata(dev))->cra_module))+=

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#592: FILE: crypto/sysfs.c:55:
+			module_name(((struct crypto_alg*)class_get_devdata(dev))->cra_module))+=

ERROR:SPACING: spaces required around that '+=' (ctx:VxE)
#592: FILE: crypto/sysfs.c:55:
+			module_name(((struct crypto_alg*)class_get_devdata(dev))->cra_module))+=
 			                                                                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#593: FILE: crypto/sysfs.c:55:
+	return (snprintf(buffer, PAGE_SIZE, "%s\n",
1)*sizeof(char);

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#596: FILE: crypto/sysfs.c:58:
+static ssize_t cryptoapi_show_type(struct class_device *dev, char *buffer)=
                                                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#598: FILE: crypto/sysfs.c:60:
+	struct crypto_alg *tmp =3D class_get_devdata(dev);
 	                       ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#599: FILE: crypto/sysfs.c:61:
+=09
 ^

ERROR:SPACING: space required before the open parenthesis '('
#600: FILE: crypto/sysfs.c:62:
+	switch(tmp->cra_flags & CRYPTO_ALG_TYPE_MASK) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#613: FILE: crypto/sysfs.c:75:
+	return (strlen(buffer)+1)*sizeof(char);
 	                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#613: FILE: crypto/sysfs.c:75:
+	return (strlen(buffer)+1)*sizeof(char);
 	                         ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000250861.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 44 errors, 18 warnings, 19 checks, 451 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000250861.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
