WARNING:TYPO_SPELLING: 'beeing' may be misspelled - perhaps 'being'?
#31: 
in rq->special. But that has a drawback: The request beeing re-fetched
                                                     ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#78: FILE: drivers/ide/ide-cd.c:3256:
+/* Power Management state machine. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#83: FILE: drivers/ide/ide-cd.c:3261:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#84: FILE: drivers/ide/ide-cd.c:3262:
+static void ide_cdrom_complete_power_step (ide_drive_t *drive, struct request *rq, u8 stat, u8 error)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#84: FILE: drivers/ide/ide-cd.c:3262:
+static void ide_cdrom_complete_power_step (ide_drive_t *drive, struct request *rq, u8 stat, u8 error)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#88: FILE: drivers/ide/ide-cd.c:3266:
+static ide_startstop_t ide_cdrom_start_power_step (ide_drive_t *drive, struct request *rq)

ERROR:SPACING: space required before the open parenthesis '('
#94: FILE: drivers/ide/ide-cd.c:3272:
+	switch(drive->pm_step) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ide_dma_check"
#107: FILE: drivers/ide/ide-cd.c:3285:
+		if (HWIF(drive)->ide_dma_check == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#209: FILE: drivers/ide/ide-disk.c:1501:
+static void idedisk_complete_power_step (ide_drive_t *drive, struct request *rq, u8 stat, u8 error)

ERROR:SPACING: space required before the open parenthesis '('
#211: FILE: drivers/ide/ide-disk.c:1503:
+	switch(drive->pm_step) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#222: FILE: drivers/ide/ide-disk.c:1513:
+static ide_startstop_t idedisk_start_power_step (ide_drive_t *drive, struct request *rq)

ERROR:SPACING: space required before the open parenthesis '('
#234: FILE: drivers/ide/ide-disk.c:1519:
+	switch(drive->pm_step) {

CHECK:CAMELCASE: Avoid CamelCase: <tfRegister>
#242: FILE: drivers/ide/ide-disk.c:1527:
+			args->tfRegister[IDE_COMMAND_OFFSET]	= WIN_FLUSH_CACHE_EXT;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#245: FILE: drivers/ide/ide-disk.c:1530:
+^I^Iargs->command_type^I^I ^I^I= ide_cmd_type_parser(args);$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ide_dma_check"
#261: FILE: drivers/ide/ide-disk.c:1546:
+		if (HWIF(drive)->ide_dma_check == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#293: FILE: drivers/ide/ide-io.c:143:
+ *^I@drive: target drive $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#297: FILE: drivers/ide/ide-io.c:147:
+ *^Iif necessary. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#299: FILE: drivers/ide/ide-io.c:149:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: drivers/ide/ide-io.c:149:
+ $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#300: FILE: drivers/ide/ide-io.c:150:
+static void ide_complete_pm_request (ide_drive_t *drive, struct request *rq)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#304: FILE: drivers/ide/ide-io.c:154:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#306: FILE: drivers/ide/ide-io.c:156:
+	printk("%s: completing PM request, suspend: %d\n", drive->name, suspend);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#307: FILE: drivers/ide/ide-io.c:157:
+#endif^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#322: FILE: drivers/ide/ide-io.c:172:
+
+

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#333: FILE: drivers/ide/ide-io.c:251:
+		printk("%s: complete_power_step(step: %d, stat: %x, err: %x)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#334: FILE: drivers/ide/ide-io.c:252:
+		printk("%s: complete_power_step(step: %d, stat: %x, err: %x)\n",
+			drive->name, drive->pm_step, stat, err);

WARNING:TYPO_SPELLING: 'Te' may be misspelled - perhaps 'The'?
#358: FILE: drivers/ide/ide-io.c:670:
+		/* Te first thing we do on wakeup is to wait for BSY bit to go
 		   ^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#365: FILE: drivers/ide/ide-io.c:677:
+		printk("%s: Wakeup request inited, waiting for !BSY...\n", drive->name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#366: FILE: drivers/ide/ide-io.c:678:
+#endif^I^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#369: FILE: drivers/ide/ide-io.c:681:
+			printk(KERN_WARNING "%s: bus not ready on wakeup\n", drive->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#374: FILE: drivers/ide/ide-io.c:686:
+			printk(KERN_WARNING "%s: drive not ready on wakeup\n", drive->name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#377: FILE: drivers/ide/ide-io.c:689:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#387: FILE: drivers/ide/ide-io.c:701:
+			printk("%s: start_power_step(step: %d)\n", drive->name, drive->pm_step);

CHECK:BRACES: braces {} should be used on all arms of this statement
#390: FILE: drivers/ide/ide-io.c:704:
+			if (startstop == ide_stopped && drive->pm_step == ide_pm_state_completed) {
[...]
+			} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#393: FILE: drivers/ide/ide-io.c:707:
+			} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#408: FILE: drivers/ide/ide-io.c:927:
+^I^I * $

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#415: FILE: drivers/ide/ide-io.c:934:
+			printk("%s: a request made it's way while we are power managing...\n", drive->name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#415: FILE: drivers/ide/ide-io.c:934:
+			printk("%s: a request made it's way while we are power managing...\n", drive->name);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#420: FILE: drivers/ide/ide-io.c:939:
+^I^I^Ibreak;^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#432: FILE: drivers/ide/ide-io.c:1388:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#438: FILE: drivers/ide/ide-io.c:1394:
+^I *^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#485: FILE: drivers/ide/ide-iops.c:1328:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#486: FILE: drivers/ide/ide-iops.c:1329:
+	while(timeout--) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#504: FILE: drivers/ide/ide-iops.c:1347:
+
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#602: FILE: drivers/ide/ide.c:1461:
+EXPORT_SYMBOL(generic_ide_suspend);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#621: FILE: drivers/ide/ide.c:1480:
+EXPORT_SYMBOL(generic_ide_resume);

CHECK:BIT_MACRO: Prefer using the BIT macro
#644: FILE: include/linux/blkdev.h:158:
+#define REQ_PM_SUSPEND	(1 << __REQ_PM_SUSPEND)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#645: FILE: include/linux/blkdev.h:159:
+#define REQ_PM_RESUME	(1 << __REQ_PM_RESUME)

CHECK:BIT_MACRO: Prefer using the BIT macro
#646: FILE: include/linux/blkdev.h:160:
+#define REQ_PM_STARTED	(1 << __REQ_PM_STARTED)

CHECK:BIT_MACRO: Prefer using the BIT macro
#647: FILE: include/linux/blkdev.h:161:
+#define REQ_PREEMPT	(1 << __REQ_PREEMPT)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'rq' may be better as '(rq)' to avoid precedence issues
#649: FILE: include/linux/blkdev.h:163:
+#define blk_request_is_pm(rq)	\
+	((rq->flags & (REQ_PM_SUSPEND | REQ_PM_RESUME)) != 0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#678: FILE: include/linux/ide.h:1149:
 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#680: FILE: include/linux/ide.h:1151:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#684: FILE: include/linux/ide.h:1155:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#693: FILE: include/linux/ide.h:1164:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#699: FILE: include/linux/ide.h:1170:
+ * $

WARNING:TYPO_SPELLING: 'epxected' may be misspelled - perhaps 'expected'?
#700: FILE: include/linux/ide.h:1171:
+ * Subdrivers are epxected to define their own additional power
                   ^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#711: FILE: include/linux/ide.h:1182:
+
+

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#719: FILE: include/linux/ide.h:1212:
+	ide_startstop_t	(*start_power_step)(ide_drive_t *, struct request *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#719: FILE: include/linux/ide.h:1212:
+	ide_startstop_t	(*start_power_step)(ide_drive_t *, struct request *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#720: FILE: include/linux/ide.h:1213:
+	void		(*complete_power_step)(ide_drive_t *, struct request *, u8, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#720: FILE: include/linux/ide.h:1213:
+	void		(*complete_power_step)(ide_drive_t *, struct request *, u8, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#720: FILE: include/linux/ide.h:1213:
+	void		(*complete_power_step)(ide_drive_t *, struct request *, u8, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#720: FILE: include/linux/ide.h:1213:
+	void		(*complete_power_step)(ide_drive_t *, struct request *, u8, u8);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#728: FILE: include/linux/ide.h:1222:
+extern int generic_ide_suspend(struct device *dev, u32 state, u32 level);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#729: FILE: include/linux/ide.h:1223:
+extern int generic_ide_resume(struct device *dev, u32 level);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#745: FILE: include/linux/ide.h:1576:
+extern int ide_wait_not_busy(ide_hwif_t *hwif, unsigned long timeout);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000364844.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 27 warnings, 19 checks, 626 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000364844.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
