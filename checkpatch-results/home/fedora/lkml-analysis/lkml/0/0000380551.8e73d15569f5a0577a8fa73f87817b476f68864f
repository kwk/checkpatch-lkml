ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#123: FILE: via686a.c:399:
+	return (inb_p(client->addr + reg));

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#139: FILE: via686a.c:414:
+static ssize_t show_in(struct device *dev, char *buf, int nr) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#142: FILE: via686a.c:417:
+	struct via686a_data *data = i2c_get_clientdata(client);
+	via686a_update_client(client);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#143: FILE: via686a.c:418:
+	return sprintf(buf, "%ld\n", IN_FROM_REG(data->in[nr], nr) );

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#146: FILE: via686a.c:421:
+static ssize_t show_in_min(struct device *dev, char *buf, int nr) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#149: FILE: via686a.c:424:
+	struct via686a_data *data = i2c_get_clientdata(client);
+	via686a_update_client(client);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#150: FILE: via686a.c:425:
+	return sprintf(buf, "%ld\n", IN_FROM_REG(data->in_min[nr], nr) );

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#153: FILE: via686a.c:428:
+static ssize_t show_in_max(struct device *dev, char *buf, int nr) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#156: FILE: via686a.c:431:
+	struct via686a_data *data = i2c_get_clientdata(client);
+	via686a_update_client(client);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#157: FILE: via686a.c:432:
+	return sprintf(buf, "%ld\n", IN_FROM_REG(data->in_max[nr], nr) );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#160: FILE: via686a.c:435:
+static ssize_t set_in_min(struct device *dev, const char *buf, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#160: FILE: via686a.c:435:
+static ssize_t set_in_min(struct device *dev, const char *buf, 
+		size_t count, int nr) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#161: FILE: via686a.c:436:
+static ssize_t set_in_min(struct device *dev, const char *buf, 
+		size_t count, int nr) {

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#164: FILE: via686a.c:439:
+	unsigned long val = simple_strtoul(buf, NULL, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:LINE_SPACING: Missing a blank line after declarations
#165: FILE: via686a.c:440:
+	unsigned long val = simple_strtoul(buf, NULL, 10);
+	data->in_min[nr] = IN_TO_REG(val,nr);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#165: FILE: via686a.c:440:
+	data->in_min[nr] = IN_TO_REG(val,nr);
 	                                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#166: FILE: via686a.c:441:
+^Ivia686a_write_value(client, VIA686A_REG_IN_MIN(nr), $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#167: FILE: via686a.c:442:
+	via686a_write_value(client, VIA686A_REG_IN_MIN(nr), 
+			data->in_min[nr]);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#170: FILE: via686a.c:445:
+static ssize_t set_in_max(struct device *dev, const char *buf, $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#170: FILE: via686a.c:445:
+}
+static ssize_t set_in_max(struct device *dev, const char *buf, 

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#170: FILE: via686a.c:445:
+static ssize_t set_in_max(struct device *dev, const char *buf, 
+		size_t count, int nr) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#171: FILE: via686a.c:446:
+static ssize_t set_in_max(struct device *dev, const char *buf, 
+		size_t count, int nr) {

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#174: FILE: via686a.c:449:
+	unsigned long val = simple_strtoul(buf, NULL, 10);

WARNING:LINE_SPACING: Missing a blank line after declarations
#175: FILE: via686a.c:450:
+	unsigned long val = simple_strtoul(buf, NULL, 10);
+	data->in_max[nr] = IN_TO_REG(val,nr);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#175: FILE: via686a.c:450:
+	data->in_max[nr] = IN_TO_REG(val,nr);
 	                                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#176: FILE: via686a.c:451:
+^Ivia686a_write_value(client, VIA686A_REG_IN_MAX(nr), $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#177: FILE: via686a.c:452:
+	via686a_write_value(client, VIA686A_REG_IN_MAX(nr), 
+			data->in_max[nr]);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#180: FILE: via686a.c:455:
+}
+#define show_in_offset(offset)					\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#181: FILE: via686a.c:456:
+static ssize_t ^I^I^I^I^I^I^I\$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#182: FILE: via686a.c:457:
+	show_in##offset (struct device *dev, char *buf)		\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#186: FILE: via686a.c:461:
+static ssize_t ^I^I^I^I^I^I^I\$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#187: FILE: via686a.c:462:
+	show_in##offset##_min (struct device *dev, char *buf)	\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#191: FILE: via686a.c:466:
+static ssize_t ^I^I^I^I^I^I^I\$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#192: FILE: via686a.c:467:
+	show_in##offset##_max (struct device *dev, char *buf)	\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#196: FILE: via686a.c:471:
+static ssize_t set_in##offset##_min (struct device *dev, ^I\$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#196: FILE: via686a.c:471:
+static ssize_t set_in##offset##_min (struct device *dev, 	\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#197: FILE: via686a.c:472:
+^I^Iconst char *buf, size_t count) ^I^I^I\$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#201: FILE: via686a.c:476:
+static ssize_t set_in##offset##_max (struct device *dev,	\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#206: FILE: via686a.c:481:
+static DEVICE_ATTR(in_input##offset, S_IRUGO, show_in##offset, NULL) ^I\$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#206: FILE: via686a.c:481:
+static DEVICE_ATTR(in_input##offset, S_IRUGO, show_in##offset, NULL) 	\

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#207: FILE: via686a.c:482:
+static DEVICE_ATTR(in_min##offset, S_IRUGO | S_IWUSR, ^I^I\$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#207: FILE: via686a.c:482:
+static DEVICE_ATTR(in_min##offset, S_IRUGO | S_IWUSR, 		\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#209: FILE: via686a.c:484:
+static DEVICE_ATTR(in_max##offset, S_IRUGO | S_IWUSR, ^I^I\$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#209: FILE: via686a.c:484:
+static DEVICE_ATTR(in_max##offset, S_IRUGO | S_IWUSR, 		\

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#219: FILE: via686a.c:494:
+static ssize_t show_temp(struct device *dev, char *buf, int nr) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#222: FILE: via686a.c:497:
+	struct via686a_data *data = i2c_get_clientdata(client);
+	via686a_update_client(client);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#223: FILE: via686a.c:498:
+	return sprintf(buf, "%ld\n", TEMP_FROM_REG10(data->temp[nr]) );

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#225: FILE: via686a.c:500:
+}
+/* more like overshoot temperature */

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#226: FILE: via686a.c:501:
+static ssize_t show_temp_max(struct device *dev, char *buf, int nr) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#229: FILE: via686a.c:504:
+	struct via686a_data *data = i2c_get_clientdata(client);
+	via686a_update_client(client);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#232: FILE: via686a.c:507:
+}
+/* more like hysteresis temperature */

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#233: FILE: via686a.c:508:
+static ssize_t show_temp_min(struct device *dev, char *buf, int nr) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#236: FILE: via686a.c:511:
+	struct via686a_data *data = i2c_get_clientdata(client);
+	via686a_update_client(client);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#239: FILE: via686a.c:514:
+static ssize_t set_temp_max(struct device *dev, const char *buf, $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#239: FILE: via686a.c:514:
+}
+static ssize_t set_temp_max(struct device *dev, const char *buf, 

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#239: FILE: via686a.c:514:
+static ssize_t set_temp_max(struct device *dev, const char *buf, 
+		size_t count, int nr) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#240: FILE: via686a.c:515:
+static ssize_t set_temp_max(struct device *dev, const char *buf, 
+		size_t count, int nr) {

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#243: FILE: via686a.c:518:
+	int val = simple_strtol(buf, NULL, 10);

WARNING:LINE_SPACING: Missing a blank line after declarations
#244: FILE: via686a.c:519:
+	int val = simple_strtol(buf, NULL, 10);
+	data->temp_over[nr] = TEMP_TO_REG(val);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#248: FILE: via686a.c:523:
+static ssize_t set_temp_min(struct device *dev, const char *buf, $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#248: FILE: via686a.c:523:
+}
+static ssize_t set_temp_min(struct device *dev, const char *buf, 

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#248: FILE: via686a.c:523:
+static ssize_t set_temp_min(struct device *dev, const char *buf, 
+		size_t count, int nr) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#249: FILE: via686a.c:524:
+static ssize_t set_temp_min(struct device *dev, const char *buf, 
+		size_t count, int nr) {

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#252: FILE: via686a.c:527:
+	int val = simple_strtol(buf, NULL, 10);

WARNING:LINE_SPACING: Missing a blank line after declarations
#253: FILE: via686a.c:528:
+	int val = simple_strtol(buf, NULL, 10);
+	data->temp_hyst[nr] = TEMP_TO_REG(val);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#257: FILE: via686a.c:532:
+}
+#define show_temp_offset(offset)					\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#258: FILE: via686a.c:533:
+static ssize_t show_temp_##offset (struct device *dev, char *buf)	\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#263: FILE: via686a.c:538:
+show_temp_##offset##_max (struct device *dev, char *buf)		\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#268: FILE: via686a.c:543:
+show_temp_##offset##_min (struct device *dev, char *buf)		\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#272: FILE: via686a.c:547:
+static ssize_t set_temp_##offset##_max (struct device *dev, ^I^I\$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#272: FILE: via686a.c:547:
+static ssize_t set_temp_##offset##_max (struct device *dev, 		\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#273: FILE: via686a.c:548:
+^I^Iconst char *buf, size_t count) ^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#277: FILE: via686a.c:552:
+static ssize_t set_temp_##offset##_min (struct device *dev, ^I^I\$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#277: FILE: via686a.c:552:
+static ssize_t set_temp_##offset##_min (struct device *dev, 		\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#278: FILE: via686a.c:553:
+^I^Iconst char *buf, size_t count) ^I^I^I^I\$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#282: FILE: via686a.c:557:
+static DEVICE_ATTR(temp_input##offset, S_IRUGO, show_temp_##offset, NULL) \

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#283: FILE: via686a.c:558:
+static DEVICE_ATTR(temp_max##offset, S_IRUGO | S_IWUSR, ^I^I\$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#283: FILE: via686a.c:558:
+static DEVICE_ATTR(temp_max##offset, S_IRUGO | S_IWUSR, 		\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#284: FILE: via686a.c:559:
+^I^Ishow_temp_##offset##_max, set_temp_##offset##_max) ^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#285: FILE: via686a.c:560:
+static DEVICE_ATTR(temp_min##offset, S_IRUGO | S_IWUSR, ^I^I\$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#285: FILE: via686a.c:560:
+static DEVICE_ATTR(temp_min##offset, S_IRUGO | S_IWUSR, 		\

ERROR:TRAILING_WHITESPACE: trailing whitespace
#286: FILE: via686a.c:561:
+^I^Ishow_temp_##offset##_min, set_temp_##offset##_min)^I$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#293: FILE: via686a.c:568:
+static ssize_t show_fan(struct device *dev, char *buf, int nr) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#296: FILE: via686a.c:571:
+	struct via686a_data *data = i2c_get_clientdata(client);
+	via686a_update_client(client);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#297: FILE: via686a.c:572:
+^Ireturn sprintf(buf,"%d\n", FAN_FROM_REG(data->fan[nr], $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#297: FILE: via686a.c:572:
+	return sprintf(buf,"%d\n", FAN_FROM_REG(data->fan[nr], 
 	                  ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#298: FILE: via686a.c:573:
+				DIV_FROM_REG(data->fan_div[nr])) );

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#300: FILE: via686a.c:575:
+}
+static ssize_t show_fan_min(struct device *dev, char *buf, int nr) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#300: FILE: via686a.c:575:
+static ssize_t show_fan_min(struct device *dev, char *buf, int nr) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#303: FILE: via686a.c:578:
+	struct via686a_data *data = i2c_get_clientdata(client);
+	via686a_update_client(client);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#304: FILE: via686a.c:579:
+	return sprintf(buf,"%d\n",
 	                  ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#305: FILE: via686a.c:580:
+		FAN_FROM_REG(data->fan_min[nr], DIV_FROM_REG(data->fan_div[nr])) );

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#307: FILE: via686a.c:582:
+}
+static ssize_t show_fan_div(struct device *dev, char *buf, int nr) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#307: FILE: via686a.c:582:
+static ssize_t show_fan_div(struct device *dev, char *buf, int nr) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#310: FILE: via686a.c:585:
+	struct via686a_data *data = i2c_get_clientdata(client);
+	via686a_update_client(client);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#311: FILE: via686a.c:586:
+	return sprintf(buf,"%d\n", DIV_FROM_REG(data->fan_div[nr]) );
 	                  ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#311: FILE: via686a.c:586:
+	return sprintf(buf,"%d\n", DIV_FROM_REG(data->fan_div[nr]) );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#313: FILE: via686a.c:588:
+static ssize_t set_fan_min(struct device *dev, const char *buf, $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#313: FILE: via686a.c:588:
+}
+static ssize_t set_fan_min(struct device *dev, const char *buf, 

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#313: FILE: via686a.c:588:
+static ssize_t set_fan_min(struct device *dev, const char *buf, 
+		size_t count, int nr) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#314: FILE: via686a.c:589:
+static ssize_t set_fan_min(struct device *dev, const char *buf, 
+		size_t count, int nr) {

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#317: FILE: via686a.c:592:
+	int val = simple_strtol(buf, NULL, 10);

WARNING:LINE_SPACING: Missing a blank line after declarations
#318: FILE: via686a.c:593:
+	int val = simple_strtol(buf, NULL, 10);
+	data->fan_min[nr] = FAN_TO_REG(val, DIV_FROM_REG(data->fan_div[nr]));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#319: FILE: via686a.c:594:
+	via686a_write_value(client, VIA686A_REG_FAN_MIN(nr+1), data->fan_min[nr]);
 	                                                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#322: FILE: via686a.c:597:
+static ssize_t set_fan_div(struct device *dev, const char *buf, $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#322: FILE: via686a.c:597:
+}
+static ssize_t set_fan_div(struct device *dev, const char *buf, 

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#322: FILE: via686a.c:597:
+static ssize_t set_fan_div(struct device *dev, const char *buf, 
+		size_t count, int nr) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#323: FILE: via686a.c:598:
+static ssize_t set_fan_div(struct device *dev, const char *buf, 
+		size_t count, int nr) {

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#326: FILE: via686a.c:601:
+	int val = simple_strtol(buf, NULL, 10);

WARNING:LINE_SPACING: Missing a blank line after declarations
#328: FILE: via686a.c:603:
+	int old = via686a_read_value(client, VIA686A_REG_FANDIV);
+	data->fan_div[nr] = DIV_TO_REG(val);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#335: FILE: via686a.c:610:
+static ssize_t show_fan_##offset (struct device *dev, char *buf)	\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#339: FILE: via686a.c:614:
+static ssize_t show_fan_##offset##_min (struct device *dev, char *buf)	\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#343: FILE: via686a.c:618:
+static ssize_t show_fan_##offset##_div (struct device *dev, char *buf)	\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#347: FILE: via686a.c:622:
+static ssize_t set_fan_##offset##_min (struct device *dev, ^I^I\$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#347: FILE: via686a.c:622:
+static ssize_t set_fan_##offset##_min (struct device *dev, 		\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#348: FILE: via686a.c:623:
+^Iconst char *buf, size_t count) ^I^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#352: FILE: via686a.c:627:
+static ssize_t set_fan_##offset##_div (struct device *dev, ^I^I\$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#352: FILE: via686a.c:627:
+static ssize_t set_fan_##offset##_div (struct device *dev, 		\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#353: FILE: via686a.c:628:
+^I^Iconst char *buf, size_t count) ^I^I^I^I\$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#357: FILE: via686a.c:632:
+static DEVICE_ATTR(fan_input##offset, S_IRUGO, show_fan_##offset, NULL) \

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#358: FILE: via686a.c:633:
+static DEVICE_ATTR(fan_min##offset, S_IRUGO | S_IWUSR, ^I^I^I\$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#358: FILE: via686a.c:633:
+static DEVICE_ATTR(fan_min##offset, S_IRUGO | S_IWUSR, 			\

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#359: FILE: via686a.c:634:
+^I^Ishow_fan_##offset##_min, set_fan_##offset##_min) ^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#360: FILE: via686a.c:635:
+static DEVICE_ATTR(fan_div##offset, S_IRUGO | S_IWUSR, ^I^I^I\$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#360: FILE: via686a.c:635:
+static DEVICE_ATTR(fan_div##offset, S_IRUGO | S_IWUSR, 			\

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#367: FILE: via686a.c:642:
+static ssize_t show_alarm(struct device *dev, char *buf) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#370: FILE: via686a.c:645:
+	struct via686a_data *data = i2c_get_clientdata(client);
+	via686a_update_client(client);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#371: FILE: via686a.c:646:
+	return sprintf(buf,"%d\n", ALARMS_FROM_REG(data->alarms));
 	                  ^

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_alarm' to 'alarm_show'
#372: FILE: via686a.c:647:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#373: FILE: via686a.c:648:
+static DEVICE_ATTR(alarm, S_IRUGO | S_IWUSR, show_alarm, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#466: FILE: via686a.c:669:
+static int via686a_detect(struct i2c_adapter *adapter, int address,
+		   unsigned short flags, int kind)

WARNING:STATIC_CONST_CHAR_ARRAY: const array should probably be static const
#472: FILE: via686a.c:674:
+	const char client_name[] = "via686a chip";

ERROR:TRAILING_WHITESPACE: trailing whitespace
#492: FILE: via686a.c:737:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#545: FILE: via686a.c:880:
+			data->temp[i] = via686a_read_value(client,
 						 VIA686A_REG_TEMP(i)) << 2;

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#708: FILE: via686a.c:917:
 static struct pci_device_id via686a_pci_ids[] __devinitdata = {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000380551.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 41 errors, 72 warnings, 22 checks, 625 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000380551.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
