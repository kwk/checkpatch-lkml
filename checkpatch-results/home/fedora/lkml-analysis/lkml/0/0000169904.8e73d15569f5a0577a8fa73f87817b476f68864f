WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#49: 
--- ../linux-2.4.31/drivers/input/joydev.c	2003-06-13 16:51:34.000000000 +0200

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

ERROR:CODE_INDENT: code indent should use tabs where possible
#55: FILE: input/joydev.c:68:
+        int digital;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#55: FILE: input/joydev.c:68:
+        int digital;$

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#63: FILE: input/joydev.c:88:
+static int digital = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#65: FILE: input/joydev.c:90:
+MODULE_PARM(digital,"i");
                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#66: FILE: input/joydev.c:91:
+MODULE_PARM_DESC(digital,"if 1, handle digital joysticks via the 'ElCheapo' interface");
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#75: FILE: input/joydev.c:118:
+static int joydev_digital_event(struct js_event *ev,struct input_handle *handle,unsigned int type,
                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#75: FILE: input/joydev.c:118:
+static int joydev_digital_event(struct js_event *ev,struct input_handle *handle,unsigned int type,
                                                                                ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: input/joydev.c:121:
+  struct joydev *joydev = handle->private;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: input/joydev.c:123:
+  switch(type) {$

ERROR:SPACING: space required before the open parenthesis '('
#80: FILE: input/joydev.c:123:
+  switch(type) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: input/joydev.c:124:
+  case EV_KEY:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: input/joydev.c:125:
+    if (code < BTN_MISC || value == 2) return 0;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#82: FILE: input/joydev.c:125:
+    if (code < BTN_MISC || value == 2) return 0;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: input/joydev.c:126:
+    code = joydev->keymap[code - BTN_MISC];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: input/joydev.c:127:
+    switch(code) {$

ERROR:SPACING: space required before the open parenthesis '('
#84: FILE: input/joydev.c:127:
+    switch(code) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: input/joydev.c:128:
+    case 0:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: input/joydev.c:129:
+      ev->type   = JS_EVENT_AXIS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: input/joydev.c:130:
+      ev->number = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: input/joydev.c:131:
+      ev->value  = (value)?+32767:0;$

ERROR:SPACING: spaces required around that '?' (ctx:VxO)
#88: FILE: input/joydev.c:131:
+      ev->value  = (value)?+32767:0;
                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:OxV)
#88: FILE: input/joydev.c:131:
+      ev->value  = (value)?+32767:0;
                            ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#88: FILE: input/joydev.c:131:
+      ev->value  = (value)?+32767:0;
                                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: input/joydev.c:132:
+      break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: input/joydev.c:133:
+    case 1:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: input/joydev.c:134:
+      ev->type   = JS_EVENT_AXIS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: input/joydev.c:135:
+      ev->number = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: input/joydev.c:136:
+      ev->value  = (value)?+32767:0;$

ERROR:SPACING: spaces required around that '?' (ctx:VxO)
#93: FILE: input/joydev.c:136:
+      ev->value  = (value)?+32767:0;
                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:OxV)
#93: FILE: input/joydev.c:136:
+      ev->value  = (value)?+32767:0;
                            ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#93: FILE: input/joydev.c:136:
+      ev->value  = (value)?+32767:0;
                                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: input/joydev.c:137:
+      break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: input/joydev.c:138:
+    case 2:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: input/joydev.c:139:
+      ev->type   = JS_EVENT_AXIS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: input/joydev.c:140:
+      ev->number = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: input/joydev.c:141:
+      ev->value  = (value)?-32767:0;$

ERROR:SPACING: spaces required around that '?' (ctx:VxO)
#98: FILE: input/joydev.c:141:
+      ev->value  = (value)?-32767:0;
                           ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#98: FILE: input/joydev.c:141:
+      ev->value  = (value)?-32767:0;
                            ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#98: FILE: input/joydev.c:141:
+      ev->value  = (value)?-32767:0;
                                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: input/joydev.c:142:
+      break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: input/joydev.c:143:
+    case 3:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: input/joydev.c:144:
+      ev->type   = JS_EVENT_AXIS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: input/joydev.c:145:
+      ev->number = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: input/joydev.c:146:
+      ev->value  = (value)?-32767:0;$

ERROR:SPACING: spaces required around that '?' (ctx:VxO)
#103: FILE: input/joydev.c:146:
+      ev->value  = (value)?-32767:0;
                           ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#103: FILE: input/joydev.c:146:
+      ev->value  = (value)?-32767:0;
                            ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#103: FILE: input/joydev.c:146:
+      ev->value  = (value)?-32767:0;
                                  ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: input/joydev.c:147:
+      break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: input/joydev.c:149:
+      ev->type   = JS_EVENT_BUTTON;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: input/joydev.c:150:
+      ev->number = code;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: input/joydev.c:151:
+      ev->value  = value;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: input/joydev.c:152:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: input/joydev.c:153:
+    break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: input/joydev.c:154:
+  case EV_ABS:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: input/joydev.c:155:
+    if (joydev->absmap[code] == 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 6)
#112: FILE: input/joydev.c:155:
+    if (joydev->absmap[code] == 0) {
+      ev->type   = JS_EVENT_BUTTON;

CHECK:BRACES: braces {} should be used on all arms of this statement
#112: FILE: input/joydev.c:155:
+    if (joydev->absmap[code] == 0) {
[...]
+    } else return 0;
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: input/joydev.c:156:
+      ev->type   = JS_EVENT_BUTTON;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: input/joydev.c:157:
+      ev->number = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: input/joydev.c:158:
+      if (joydev_correct(value, joydev->corr) >= 16384)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: input/joydev.c:160:
+      else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: input/joydev.c:162:
+    } else return 0;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#119: FILE: input/joydev.c:162:
+    } else return 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: input/joydev.c:163:
+    break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: input/joydev.c:165:
+    return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: input/joydev.c:166:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: input/joydev.c:167:
+  return 1;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#134: FILE: input/joydev.c:176:
+	if (joydev->digital) {
+	  if (joydev_digital_event(&event,handle,type,code,value) == 0)

WARNING:TABSTOP: Statements should start on a tabstop
#135: FILE: input/joydev.c:177:
+	  if (joydev_digital_event(&event,handle,type,code,value) == 0)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 12)
#135: FILE: input/joydev.c:177:
+	  if (joydev_digital_event(&event,handle,type,code,value) == 0)
+	    return;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#135: FILE: input/joydev.c:177:
+	  if (joydev_digital_event(&event,handle,type,code,value) == 0)
 	                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#135: FILE: input/joydev.c:177:
+	  if (joydev_digital_event(&event,handle,type,code,value) == 0)
 	                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#135: FILE: input/joydev.c:177:
+	  if (joydev_digital_event(&event,handle,type,code,value) == 0)
 	                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#135: FILE: input/joydev.c:177:
+	  if (joydev_digital_event(&event,handle,type,code,value) == 0)
 	                                                  ^

WARNING:TABSTOP: Statements should start on a tabstop
#136: FILE: input/joydev.c:178:
+	    return;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#137: FILE: input/joydev.c:179:
+	} else switch (type) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: input/joydev.c:446:
+^I        case JSIOCSDIGITAL:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: input/joydev.c:447:
+^I^I        return get_user(joydev->digital, (__u8 *)arg);$

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:LONG_LINE_COMMENT: line length of 109 exceeds 100 columns
#171: FILE: linux/joystick.h:73:
+#define JSIOCSDIGITAL           _IOW('j', 0x35, __u8)                           /* set digital/analog flag */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000169904.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 23 errors, 52 warnings, 7 checks, 109 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000169904.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
