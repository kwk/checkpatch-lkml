WARNING:TYPO_SPELLING: 'remainer' may be misspelled - perhaps 'remainder'?
#72: FILE: Documentation/filesystems/proc/pmap:21:
+The remainer will be composed of letters and numbers, but
     ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: fs/proc/base.c:109:
+       PROC_TGID_PMAP,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: fs/proc/base.c:150:
+       PROC_TID_PMAP,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: fs/proc/base.c:207:
+       E(PROC_TGID_PMAP,      "pmap",   S_IFREG|S_IRUGO),$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#139: FILE: fs/proc/base.c:207:
+       E(PROC_TGID_PMAP,      "pmap",   S_IFREG|S_IRUGO),
                                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#139: FILE: fs/proc/base.c:207:
+       E(PROC_TGID_PMAP,      "pmap",   S_IFREG|S_IRUGO),

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: fs/proc/base.c:250:
+       E(PROC_TID_PMAP,       "pmap",    S_IFREG|S_IRUGO),$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#147: FILE: fs/proc/base.c:250:
+       E(PROC_TID_PMAP,       "pmap",    S_IFREG|S_IRUGO),
                                                 ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#147: FILE: fs/proc/base.c:250:
+       E(PROC_TID_PMAP,       "pmap",    S_IFREG|S_IRUGO),

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#156: FILE: fs/proc/base.c:669:
+extern struct seq_operations proc_pid_pmap_op;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: fs/proc/base.c:672:
+       struct task_struct *task = proc_task(inode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: fs/proc/base.c:673:
+       int ret = seq_open(file, &proc_pid_pmap_op);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#161: FILE: fs/proc/base.c:674:
+       int ret = seq_open(file, &proc_pid_pmap_op);
+       if (!ret) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: fs/proc/base.c:674:
+       if (!ret) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#161: FILE: fs/proc/base.c:674:
+       if (!ret) {
+               struct seq_file *m = file->private_data;

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: fs/proc/base.c:675:
+               struct seq_file *m = file->private_data;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: fs/proc/base.c:675:
+               struct seq_file *m = file->private_data;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: fs/proc/base.c:676:
+               m->private = task;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#163: FILE: fs/proc/base.c:676:
+               struct seq_file *m = file->private_data;
+               m->private = task;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: fs/proc/base.c:676:
+               m->private = task;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: fs/proc/base.c:677:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: fs/proc/base.c:678:
+       return ret;$

WARNING:CONST_STRUCT: struct file_operations should normally be const
#168: FILE: fs/proc/base.c:681:
+static struct file_operations proc_pmap_operations = {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: fs/proc/base.c:682:
+       .open           = pmap_open,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: fs/proc/base.c:683:
+       .read           = seq_read,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: fs/proc/base.c:684:
+       .llseek         = seq_lseek,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: fs/proc/base.c:685:
+       .release        = seq_release,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#184: FILE: fs/proc/base.c:1759:
+               case PROC_TID_PMAP:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: fs/proc/base.c:1759:
+               case PROC_TID_PMAP:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#185: FILE: fs/proc/base.c:1760:
+               case PROC_TGID_PMAP:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: fs/proc/base.c:1760:
+               case PROC_TGID_PMAP:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: fs/proc/base.c:1761:
+                       inode->i_fop = &proc_pmap_operations;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: fs/proc/base.c:1761:
+                       inode->i_fop = &proc_pmap_operations;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#187: FILE: fs/proc/base.c:1762:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: fs/proc/base.c:1762:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: fs/proc/task_mmu.c:303:
+       struct task_struct *task = m->private;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: fs/proc/task_mmu.c:304:
+       struct vm_area_struct *vma = v;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: fs/proc/task_mmu.c:305:
+       struct mm_struct *mm = vma->vm_mm;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: fs/proc/task_mmu.c:306:
+       struct file *file = vma->vm_file;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: fs/proc/task_mmu.c:307:
+       int flags = vma->vm_flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: fs/proc/task_mmu.c:308:
+       unsigned long ino = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: fs/proc/task_mmu.c:309:
+       dev_t dev = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: fs/proc/task_mmu.c:310:
+       struct mem_size_stats mss;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: fs/proc/task_mmu.c:311:
+       char flag_string[7];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: fs/proc/task_mmu.c:312:
+       unsigned shift = PAGE_SHIFT;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#214: FILE: fs/proc/task_mmu.c:312:
+       unsigned shift = PAGE_SHIFT;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: fs/proc/task_mmu.c:314:
+       memset(&mss, 0, sizeof mss);$

WARNING:SIZEOF_PARENTHESIS: sizeof mss should be sizeof(mss)
#216: FILE: fs/proc/task_mmu.c:314:
+       memset(&mss, 0, sizeof mss);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: fs/proc/task_mmu.c:315:
+       if (vma->vm_mm)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#217: FILE: fs/proc/task_mmu.c:315:
+       if (vma->vm_mm)
+               smaps_pgd_range(vma, vma->vm_start, vma->vm_end, &mss);

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: fs/proc/task_mmu.c:316:
+               smaps_pgd_range(vma, vma->vm_start, vma->vm_end, &mss);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: fs/proc/task_mmu.c:316:
+               smaps_pgd_range(vma, vma->vm_start, vma->vm_end, &mss);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: fs/proc/task_mmu.c:318:
+       if (file) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#220: FILE: fs/proc/task_mmu.c:318:
+       if (file) {
+               struct inode *inode = vma->vm_file->f_dentry->d_inode;

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: fs/proc/task_mmu.c:319:
+               struct inode *inode = vma->vm_file->f_dentry->d_inode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: fs/proc/task_mmu.c:319:
+               struct inode *inode = vma->vm_file->f_dentry->d_inode;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#222: FILE: fs/proc/task_mmu.c:320:
+               dev = inode->i_sb->s_dev;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#222: FILE: fs/proc/task_mmu.c:320:
+               struct inode *inode = vma->vm_file->f_dentry->d_inode;
+               dev = inode->i_sb->s_dev;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: fs/proc/task_mmu.c:320:
+               dev = inode->i_sb->s_dev;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#223: FILE: fs/proc/task_mmu.c:321:
+               ino = inode->i_ino;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: fs/proc/task_mmu.c:321:
+               ino = inode->i_ino;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: fs/proc/task_mmu.c:322:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: fs/proc/task_mmu.c:324:
+       flag_string[0] = flags & VM_READ       ? 'r' : '-';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: fs/proc/task_mmu.c:325:
+       flag_string[1] = flags & VM_WRITE      ? 'w' : '-';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: fs/proc/task_mmu.c:326:
+       flag_string[2] = flags & VM_EXEC       ? 'x' : '-';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: fs/proc/task_mmu.c:327:
+       flag_string[3] = flags & VM_MAYSHARE   ? 's' : '-';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: fs/proc/task_mmu.c:328:
+       flag_string[4] = flags & VM_LOCKED     ? 'L' : '-';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: fs/proc/task_mmu.c:329:
+       flag_string[5] = flags & VM_IO         ? 'i' : '-';$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: fs/proc/task_mmu.c:330:
+       flag_string[sizeof flag_string - 1] = '\0';$

WARNING:SIZEOF_PARENTHESIS: sizeof flag_string should be sizeof(flag_string)
#232: FILE: fs/proc/task_mmu.c:330:
+       flag_string[sizeof flag_string - 1] = '\0';

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: fs/proc/task_mmu.c:333:
+       if(flags & VM_HUGETLB)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#235: FILE: fs/proc/task_mmu.c:333:
+       if(flags & VM_HUGETLB)
+               shift = HPAGE_SHIFT;

ERROR:SPACING: space required before the open parenthesis '('
#235: FILE: fs/proc/task_mmu.c:333:
+       if(flags & VM_HUGETLB)

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: fs/proc/task_mmu.c:334:
+               shift = HPAGE_SHIFT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: fs/proc/task_mmu.c:334:
+               shift = HPAGE_SHIFT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: fs/proc/task_mmu.c:337:
+       seq_printf($

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#239: FILE: fs/proc/task_mmu.c:337:
+       seq_printf(

ERROR:CODE_INDENT: code indent should use tabs where possible
#240: FILE: fs/proc/task_mmu.c:338:
+               m,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: fs/proc/task_mmu.c:338:
+               m,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#241: FILE: fs/proc/task_mmu.c:339:
+               "%s %lu %lu %lu %u %u %lu %u %lu %lu %lu %lu %lu ",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: fs/proc/task_mmu.c:339:
+               "%s %lu %lu %lu %u %u %lu %u %lu %lu %lu %lu %lu ",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#242: FILE: fs/proc/task_mmu.c:340:
+               flag_string,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: fs/proc/task_mmu.c:340:
+               flag_string,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#243: FILE: fs/proc/task_mmu.c:341:
+               vma->vm_start,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: fs/proc/task_mmu.c:341:
+               vma->vm_start,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#244: FILE: fs/proc/task_mmu.c:342:
+               vma->vm_end,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: fs/proc/task_mmu.c:342:
+               vma->vm_end,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#245: FILE: fs/proc/task_mmu.c:343:
+               vma->vm_pgoff,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: fs/proc/task_mmu.c:343:
+               vma->vm_pgoff,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#246: FILE: fs/proc/task_mmu.c:344:
+               MAJOR(dev),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: fs/proc/task_mmu.c:344:
+               MAJOR(dev),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#247: FILE: fs/proc/task_mmu.c:345:
+               MINOR(dev),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: fs/proc/task_mmu.c:345:
+               MINOR(dev),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#248: FILE: fs/proc/task_mmu.c:346:
+               ino,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: fs/proc/task_mmu.c:346:
+               ino,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#249: FILE: fs/proc/task_mmu.c:347:
+               shift,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: fs/proc/task_mmu.c:347:
+               shift,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#250: FILE: fs/proc/task_mmu.c:348:
+               mss.resident,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: fs/proc/task_mmu.c:348:
+               mss.resident,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#251: FILE: fs/proc/task_mmu.c:349:
+               mss.shared_clean,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: fs/proc/task_mmu.c:349:
+               mss.shared_clean,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#252: FILE: fs/proc/task_mmu.c:350:
+               mss.shared_dirty,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: fs/proc/task_mmu.c:350:
+               mss.shared_dirty,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#253: FILE: fs/proc/task_mmu.c:351:
+               mss.private_clean,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: fs/proc/task_mmu.c:351:
+               mss.private_clean,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#254: FILE: fs/proc/task_mmu.c:352:
+               mss.private_dirty$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: fs/proc/task_mmu.c:352:
+               mss.private_dirty$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: fs/proc/task_mmu.c:353:
+       );$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: fs/proc/task_mmu.c:355:
+       if (file) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#257: FILE: fs/proc/task_mmu.c:355:
+       if (file) {
+               seq_puts(m, "_file ");

ERROR:CODE_INDENT: code indent should use tabs where possible
#258: FILE: fs/proc/task_mmu.c:356:
+               seq_puts(m, "_file ");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: fs/proc/task_mmu.c:356:
+               seq_puts(m, "_file ");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#259: FILE: fs/proc/task_mmu.c:357:
+               seq_path(m, file->f_vfsmnt, file->f_dentry, "\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: fs/proc/task_mmu.c:357:
+               seq_path(m, file->f_vfsmnt, file->f_dentry, "\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: fs/proc/task_mmu.c:358:
+       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#260: FILE: fs/proc/task_mmu.c:358:
+       } else {
+               if (mm) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#261: FILE: fs/proc/task_mmu.c:359:
+               if (mm) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: fs/proc/task_mmu.c:359:
+               if (mm) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#261: FILE: fs/proc/task_mmu.c:359:
+               if (mm) {
+                       if (vma->vm_start <= mm->start_brk &&

ERROR:CODE_INDENT: code indent should use tabs where possible
#262: FILE: fs/proc/task_mmu.c:360:
+                       if (vma->vm_start <= mm->start_brk &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: fs/proc/task_mmu.c:360:
+                       if (vma->vm_start <= mm->start_brk &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#262: FILE: fs/proc/task_mmu.c:360:
+                       if (vma->vm_start <= mm->start_brk &&
[...]
+                               seq_puts(m, "_heap");

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#263: FILE: fs/proc/task_mmu.c:360:
vma->vm_end >= mm->brk) {

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:CODE_INDENT: code indent should use tabs where possible
#264: FILE: fs/proc/task_mmu.c:361:
+                               seq_puts(m, "_heap");$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#264: FILE: fs/proc/task_mmu.c:361:
+                       if (vma->vm_start <= mm->start_brk &&
+                               seq_puts(m, "_heap");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: fs/proc/task_mmu.c:361:
+                               seq_puts(m, "_heap");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#265: FILE: fs/proc/task_mmu.c:362:
+                       } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: fs/proc/task_mmu.c:362:
+                       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#265: FILE: fs/proc/task_mmu.c:362:
+                       } else {
+                               if (vma->vm_start <= mm->start_stack

ERROR:CODE_INDENT: code indent should use tabs where possible
#266: FILE: fs/proc/task_mmu.c:363:
+                               if (vma->vm_start <= mm->start_stack$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: fs/proc/task_mmu.c:363:
+                               if (vma->vm_start <= mm->start_stack$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#266: FILE: fs/proc/task_mmu.c:363:
+                               if (vma->vm_start <= mm->start_stack
[...]
+                                       seq_puts(m, "_stack");

ERROR:CODE_INDENT: code indent should use tabs where possible
#268: FILE: fs/proc/task_mmu.c:364:
+                                       seq_puts(m, "_stack");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: fs/proc/task_mmu.c:364:
+                                       seq_puts(m, "_stack");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#269: FILE: fs/proc/task_mmu.c:365:
+                               } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: fs/proc/task_mmu.c:365:
+                               } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#269: FILE: fs/proc/task_mmu.c:365:
+                               } else {
+                                       seq_puts(m, "_other");

ERROR:CODE_INDENT: code indent should use tabs where possible
#270: FILE: fs/proc/task_mmu.c:366:
+                                       seq_puts(m, "_other");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: fs/proc/task_mmu.c:366:
+                                       seq_puts(m, "_other");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#271: FILE: fs/proc/task_mmu.c:367:
+                               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: fs/proc/task_mmu.c:367:
+                               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#272: FILE: fs/proc/task_mmu.c:368:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: fs/proc/task_mmu.c:368:
+                       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#273: FILE: fs/proc/task_mmu.c:369:
+               } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: fs/proc/task_mmu.c:369:
+               } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#273: FILE: fs/proc/task_mmu.c:369:
+               } else {
+                       seq_puts(m, "_vdso");

ERROR:CODE_INDENT: code indent should use tabs where possible
#274: FILE: fs/proc/task_mmu.c:370:
+                       seq_puts(m, "_vdso");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: fs/proc/task_mmu.c:370:
+                       seq_puts(m, "_vdso");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#275: FILE: fs/proc/task_mmu.c:371:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: fs/proc/task_mmu.c:371:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: fs/proc/task_mmu.c:372:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: fs/proc/task_mmu.c:374:
+       seq_putc(m, '\n');$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: fs/proc/task_mmu.c:376:
+       if (m->count < m->size)  /* vma is copied successfully */$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#280: FILE: fs/proc/task_mmu.c:376:
+       if (m->count < m->size)  /* vma is copied successfully */
+               m->version = (vma != get_gate_vma(task))? vma->vm_start: 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#281: FILE: fs/proc/task_mmu.c:377:
+               m->version = (vma != get_gate_vma(task))? vma->vm_start: 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: fs/proc/task_mmu.c:377:
+               m->version = (vma != get_gate_vma(task))? vma->vm_start: 0;$

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#281: FILE: fs/proc/task_mmu.c:377:
+               m->version = (vma != get_gate_vma(task))? vma->vm_start: 0;
                                                        ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#281: FILE: fs/proc/task_mmu.c:377:
+               m->version = (vma != get_gate_vma(task))? vma->vm_start: 0;
                                                                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: fs/proc/task_mmu.c:378:
+       return 0;$

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#292: FILE: fs/proc/task_mmu.c:476:
+struct seq_operations proc_pid_pmap_op = {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: fs/proc/task_mmu.c:477:
+       .start  = m_start,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: fs/proc/task_mmu.c:478:
+       .next   = m_next,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: fs/proc/task_mmu.c:479:
+       .stop   = m_stop,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: fs/proc/task_mmu.c:480:
+       .show   = show_pmap$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000112677.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 46 errors, 114 warnings, 4 checks, 228 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000112677.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
