WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#48: FILE: drivers/misc/Kconfig:31:
+config HPLCD
+	tristate "Device driver HP LCD brightness"
+	depends on X86 && EXPERIMENTAL
+	default n
+	---help---
+	Provides a sysfs interface to read the screen brightness on HP laptops
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#71: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#76: FILE: drivers/misc/hplcd.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#91: FILE: drivers/misc/hplcd.c:16:
+ * this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#92: FILE: drivers/misc/hplcd.c:17:
+ * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA$

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#102: FILE: drivers/misc/hplcd.c:27:
+#include <asm/io.h>

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#105: FILE: drivers/misc/hplcd.c:30:
+static struct platform_device *pdev = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:MISPLACED_INIT: __initdata should be placed after hplcd_device_table[]
#107: FILE: drivers/misc/hplcd.c:32:
+static struct dmi_system_id __initdata hplcd_device_table[] = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#108: FILE: drivers/misc/hplcd.c:33:
+^I{ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#117: FILE: drivers/misc/hplcd.c:42:
+static ssize_t store_enable(struct device *dev, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#119: FILE: drivers/misc/hplcd.c:44:
+			    const char * buf,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#123: FILE: drivers/misc/hplcd.c:48:
+	char *last = NULL;
+	if (simple_strtoul(buf, &last, 0) >0) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '>' (ctx:WxV)
#123: FILE: drivers/misc/hplcd.c:48:
+	if (simple_strtoul(buf, &last, 0) >0) {
 	                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#123: FILE: drivers/misc/hplcd.c:48:
+	if (simple_strtoul(buf, &last, 0) >0) {
[...]
+	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#123: FILE: drivers/misc/hplcd.c:48:
+	if (simple_strtoul(buf, &last, 0) >0) {

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

ERROR:TRAILING_WHITESPACE: trailing whitespace
#128: FILE: drivers/misc/hplcd.c:53:
+^I$

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#143: FILE: drivers/misc/hplcd.c:68:
+	if (enable==0) {
 	          ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#143: FILE: drivers/misc/hplcd.c:68:
+	if (enable==0) {
+		return snprintf(buf, PAGE_SIZE, "NA\n");
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#151: FILE: drivers/misc/hplcd.c:76:
+^I$

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#164: FILE: drivers/misc/hplcd.c:89:
+	if (enable==0) {
 	          ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#164: FILE: drivers/misc/hplcd.c:89:
+	if (enable==0) {
+		return snprintf(buf, PAGE_SIZE, "NA\n");
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#172: FILE: drivers/misc/hplcd.c:97:
+^I$

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_enable' to 'enable_show' 'store_enable' to 'enable_store'
#178: FILE: drivers/misc/hplcd.c:103:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_ac_brt' to 'ac_brt_show'
#181: FILE: drivers/misc/hplcd.c:106:
+static DEVICE_ATTR(ac_brt, 0644, show_ac_brt, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_dc_brt' to 'dc_brt_show'
#182: FILE: drivers/misc/hplcd.c:107:
+static DEVICE_ATTR(dc_brt, 0644, show_dc_brt, NULL);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#209: FILE: drivers/misc/hplcd.c:134:
+	if (rc = platform_driver_register(&hplcd_driver))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#213: FILE: drivers/misc/hplcd.c:138:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#219: FILE: drivers/misc/hplcd.c:144:
+	if (rc = sysfs_create_group(&pdev->dev.kobj, &hplcd_attribute_group))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000107909.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 13 warnings, 0 checks, 179 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000107909.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
