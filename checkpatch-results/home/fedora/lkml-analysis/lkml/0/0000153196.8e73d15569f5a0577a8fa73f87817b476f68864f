WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#61: FILE: :7:
+#include <linux/bootmem.h>

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#69: FILE: :575:
+	unsigned i;

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#79: FILE: :639:
&doublefault_tss);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#80: FILE: :640:
+#if EXCEPTION_STACK_ORDER > THREAD_ORDER

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#81: FILE: :641:
+# error Assertion failed: EXCEPTION_STACK_ORDER <= THREAD_ORDER

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#82: FILE: :642:
+#endif

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#83: FILE: :643:
+	for (i = 0; i < N_EXCEPTION_TSS; ++i) {

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#84: FILE: :644:
+		unsigned long stack;

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#85: FILE: :645:
+

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#86: FILE: :646:
+		/* Set up exception handling TSS */

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#87: FILE: :647:
+		exception_tss[cpu][i].esp2 = cpu;

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#88: FILE: :648:
+		exception_tss[cpu][i].esi = (unsigned

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#90: FILE: :649:
+

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#91: FILE: :650:
+		/* Set up exception handling stacks */

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#92: FILE: :651:
+#ifdef CONFIG_SMP

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#93: FILE: :652:
+		if (cpu) {

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#94: FILE: :653:
+			stack = __get_free_pages(GFP_ATOMIC,

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#96: FILE: :654:
+			if (!stack)

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#97: FILE: :655:
+				panic("Cannot allocate exception stack

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#99: FILE: :656:
+				      i,

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#100: FILE: :657:
+				      cpu);

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#101: FILE: :658:
+		}

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#102: FILE: :659:
+		else

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#103: FILE: :660:
+#endif

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#104: FILE: :661:
+			stack = (unsigned

ERROR:TRAILING_WHITESPACE: trailing whitespace
#106: FILE: :662:
+^I^I^I                                      $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#106: FILE: :662:
+			                                      

ERROR:TRAILING_WHITESPACE: trailing whitespace
#108: FILE: :663:
+^I^I^I                                      $

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#108: FILE: :663:
+			                                      

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#110: FILE: :664:
+		stack += EXCEPTION_STKSZ;

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#111: FILE: :665:
+		exception_tss[cpu][i].esp = exception_tss[cpu][i].esp0 =

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#113: FILE: :666:
+#ifdef CONFIG_SMP

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#114: FILE: :667:
+		if (cpu) {

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#115: FILE: :668:
+			unsigned j;

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#116: FILE: :669:
+

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#117: FILE: :670:
+			for (j = EXCEPTION_STACK_ORDER; j <

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#119: FILE: :671:
+				/* set_page_refs sets the page count

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#121: FILE: :672:
+				   page, but since we split the

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#123: FILE: :673:
+				   we need to adjust the page count

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#125: FILE: :674:
+				   pieces. */

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#126: FILE: :675:
+				struct page * page = virt_to_page((void

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#128: FILE: :676:
+

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#129: FILE: :677:
+				BUG_ON(page_count(page));

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#130: FILE: :678:
+				set_page_count(page, 1);

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#131: FILE: :679:
+				free_pages(stack, j);

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#132: FILE: :680:
+				stack += (PAGE_SIZE << j);

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#133: FILE: :681:
+			}

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#134: FILE: :682:
+		}

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#135: FILE: :683:
+		else

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#136: FILE: :684:
+#endif

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#137: FILE: :685:
+		if (EXCEPTION_STACK_ORDER > THREAD_ORDER)

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#138: FILE: :686:
+			free_bootmem(stack, THREAD_SIZE -

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#140: FILE: :687:
+

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#141: FILE: :688:
+		/* Set up exception handling TSS pointer in the GDT */

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#142: FILE: :689:
+		__set_tss_desc(cpu, GDT_ENTRY_EXCEPTION_TSS + i,

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#144: FILE: :690:
+	}

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#164: FILE: :12:
+extern unsigned long max_low_pfn;

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#165: FILE: :13:
+#define ptr_ok(x, l) ((x) >= PAGE_OFFSET \

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#166: FILE: :14:
+                      && (x) + (l) <= PAGE_OFFSET + max_low_pfn *

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#173: FILE: :16:
+void doublefault_fn(void)

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#183: FILE: :24:
+	printk("double fault, gdt at %08lx [%d bytes]\n", gdt,

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#187: FILE: :26:
+	if (ptr_ok(gdt, gdt_desc.size)) {

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#195: FILE: :33:
+		if (ptr_ok(tss, *(u16 *)gdt)) {

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#207: FILE: :40:
+			printk("esi = %08lx, edi = %08lx, ebp =

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#209: FILE: :41:
+				t->esi, t->edi, t->ebp);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#276: FILE: arch/i386/kernel/traps.c:65:
+void doublefault_fn(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#280: FILE: arch/i386/kernel/traps.c:68:
+	[0 ... NR_CPUS-1] = {
 	              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#281: FILE: arch/i386/kernel/traps.c:69:
+		[0 ... N_EXCEPTION_TSS-1] = {
 		                      ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#291: FILE: arch/i386/kernel/traps.c:78:
+			.eflags	  = X86_EFLAGS_SF | 0x2, /* 0x2 bit is
+		},

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: space required after that ',' (ctx:VxV)
#304: FILE: arch/i386/kernel/traps.c:1104:
+	set_task_gate(8,GDT_ENTRY_EXCEPTION_TSS + DOUBLEFAULT_TSS);
 	               ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#332: FILE: arch/i386/kernel/traps.c:485:
+extern struct tss_struct exception_tss[NR_CPUS][N_EXCEPTION_TSS];

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/cache.h> instead of <asm/cache.h>
#349: FILE: arch/i386/kernel/traps.c:4:
+#include <asm/cache.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#384: FILE: arch/i386/kernel/traps.c:93:
+#define GDT_ENTRIES ((31 + N_EXCEPTION_TSS + L1_CACHE_BYTES / 8 - 1) &

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000153196.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 65 warnings, 3 checks, 276 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000153196.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
