WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
Change the interrupt time NTP code, breaking out the leapsecond processing and

WARNING:BAD_SIGN_OFF: Duplicate signature
#43: 
Signed-off-by: John Stultz <johnstul@us.ibm.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#83: FILE: include/linux/timex.h:293:
+extern long ntp_get_ppm_adjustment(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#88: FILE: include/linux/timex.h:298:
+extern void ntp_advance(unsigned long interval_ns);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#93: FILE: include/linux/timex.h:303:
+extern int ntp_leapsecond(struct timespec now);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#95: FILE: include/linux/timex.h:305:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#156: FILE: kernel/timer.c:601:
+#define END_OF_DAY(x)		((x) + SEC_PER_DAY - ((x) % SEC_PER_DAY) - 1)

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#177: FILE: kernel/timer.c:622:
+	static time_t leaptime = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#185: FILE: kernel/timer.c:630:
+	switch (time_state) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#200: FILE: kernel/timer.c:645:
+			printk(KERN_NOTICE "Clock: inserting leap second 23:59:60 UTC\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#209: FILE: kernel/timer.c:654:
+			printk(KERN_NOTICE "Clock: deleting leap second 23:59:59 UTC\n");

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#245: FILE: kernel/timer.c:767:
+	tick_adj_ppm = ((USEC_PER_SEC + USER_HZ/2)/USER_HZ) - tick_usec;
 	                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#245: FILE: kernel/timer.c:767:
+	tick_adj_ppm = ((USEC_PER_SEC + USER_HZ/2)/USER_HZ) - tick_usec;
 	                                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#286: FILE: kernel/timer.c:863:
+	singleshot_adj_ppm = time_adjust_step*(1000000/HZ);
 	                                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#286: FILE: kernel/timer.c:863:
+	singleshot_adj_ppm = time_adjust_step*(1000000/HZ);
 	                                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#338: FILE: kernel/timer.c:933:
+	time_interpolator_update(leapsecond*NSEC_PER_SEC);
 	                                   ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000102210.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 4 warnings, 11 checks, 275 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000102210.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
