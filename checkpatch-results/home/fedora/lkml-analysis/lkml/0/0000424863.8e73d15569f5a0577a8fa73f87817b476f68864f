WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#72: 
diff -urP -I \$Id:.*Exp \$ -X /usr/src/patch.exclude linux-2.5.41-bk2-kb/include/linux/hrtime.h linux/include/linux/hrtime.h

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#76: FILE: include/linux/hrtime.h:1:
+#ifndef _HRTIME_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#79: FILE: include/linux/hrtime.h:4:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#84: FILE: include/linux/hrtime.h:9:
+ * will work as long as the CONFIG is not set.^IOnce an $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#85: FILE: include/linux/hrtime.h:10:
+ * arch defines the CONFIG, it had better have the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#96: FILE: include/linux/hrtime.h:21:
+^Iunsigned long _arch_to_usec; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#98: FILE: include/linux/hrtime.h:23:
+^Iunsigned long _usec_to_arch; $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#103: FILE: include/linux/hrtime.h:28:
+};
+extern struct timer_conversion_bits timer_conversion_bits;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#105: FILE: include/linux/hrtime.h:30:
+ * The following four values are not used for machines $

WARNING:TYPO_SPELLING: 'caculated' may be misspelled - perhaps 'calculated'?
#107: FILE: include/linux/hrtime.h:32:
+ * are caculated at boot time. They are used to 
        ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#107: FILE: include/linux/hrtime.h:32:
+ * are caculated at boot time. They are used to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#110: FILE: include/linux/hrtime.h:35:
+ * divisors, however.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#112: FILE: include/linux/hrtime.h:37:
+#define arch_to_usec timer_conversion_bits._arch_to_usec $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#114: FILE: include/linux/hrtime.h:39:
+#define usec_to_arch timer_conversion_bits._usec_to_arch $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#117: FILE: include/linux/hrtime.h:42:
+#define arch_to_latch timer_conversion_bits._arch_to_latch $

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#125: FILE: include/linux/hrtime.h:50:
+ * The actual function will be called with the offset in "arch" (parm 2)
                                                                  ^^^^

WARNING:TYPO_SPELLING: 'boundry' may be misspelled - perhaps 'boundary'?
#126: FILE: include/linux/hrtime.h:51:
+ * defined sub_jiffie units from the reference jiffie boundry (parm 1)to
                                                       ^^^^^^^

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#126: FILE: include/linux/hrtime.h:51:
+ * defined sub_jiffie units from the reference jiffie boundry (parm 1)to
                                                                ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#135: FILE: include/linux/hrtime.h:60:
+ * time has passed.  In this case a "close" in time should be used to $

WARNING:TYPO_SPELLING: 'ususally' may be misspelled - perhaps 'usually'?
#137: FILE: include/linux/hrtime.h:62:
+ * should just call do_timer(). If the interrupt code ususally does stuff
                                                       ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#139: FILE: include/linux/hrtime.h:64:
+ * indicate that a new jiffie has started.  This flag is to keep this code $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#143: FILE: include/linux/hrtime.h:68:
+#define schedule_next_int(s,d,a) 0
                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#143: FILE: include/linux/hrtime.h:68:
+#define schedule_next_int(s,d,a) 0
                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#149: FILE: include/linux/hrtime.h:74:
+ * a timer has expired.^I Since no sub_expire value will be used if "arch" $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#163: FILE: include/linux/hrtime.h:88:
+ * worst case timer interrupt.^II.e. it may be that a call to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#167: FILE: include/linux/hrtime.h:92:
+ * calculate the worst case loop time from timer set up to int to $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#178: FILE: include/linux/hrtime.h:103:
+
+

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#201: FILE: include/linux/hrtime.h:126:
+#define update_jiffies() (*(u64 *)&jiffies_64)++

ERROR:SPACING: space required after that ',' (ctx:VxV)
#207: FILE: include/linux/hrtime.h:132:
+#define schedule_next_int(a,b,c)
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#207: FILE: include/linux/hrtime.h:132:
+#define schedule_next_int(a,b,c)
                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#210: FILE: include/linux/hrtime.h:135:
+ * If we included a high-res file, we may have gotten a more efficient $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#211: FILE: include/linux/hrtime.h:136:
+ * u64/u32, u64%u32 routine.  The one in div64.h actually handles a $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#217: FILE: include/linux/hrtime.h:142:
+ * $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#224: FILE: include/linux/hrtime.h:149:
+#define div_long_long_rem(dividend,divisor,remainder) ({ \
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#224: FILE: include/linux/hrtime.h:149:
+#define div_long_long_rem(dividend,divisor,remainder) ({ \
                                           ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'remainder' may be better as '(remainder)' to avoid precedence issues
#224: FILE: include/linux/hrtime.h:149:
+#define div_long_long_rem(dividend,divisor,remainder) ({ \
+		       u64 result = dividend;		\
+		       *remainder = do_div(result,divisor); \
+		       result; })

WARNING:TABSTOP: Statements should start on a tabstop
#225: FILE: include/linux/hrtime.h:150:
+		       u64 result = dividend;		\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#226: FILE: include/linux/hrtime.h:151:
+		       *remainder = do_div(result,divisor); \
 		                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#247: FILE: include/linux/signal.h:230:
+#define PT_REGS_ENTRY(type,name,p1_type,p1, p2_type,p2) \
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#247: FILE: include/linux/signal.h:230:
+#define PT_REGS_ENTRY(type,name,p1_type,p1, p2_type,p2) \
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#247: FILE: include/linux/signal.h:230:
+#define PT_REGS_ENTRY(type,name,p1_type,p1, p2_type,p2) \
                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#247: FILE: include/linux/signal.h:230:
+#define PT_REGS_ENTRY(type,name,p1_type,p1, p2_type,p2) \
                                                    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#247: FILE: include/linux/signal.h:230:
+#define PT_REGS_ENTRY(type,name,p1_type,p1, p2_type,p2) \
+type name(p1_type p1,p2_type p2)\
+{

ERROR:SPACING: space required after that ',' (ctx:VxV)
#248: FILE: include/linux/signal.h:231:
+type name(p1_type p1,p2_type p2)\
                     ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#255: FILE: include/linux/signal.h:238:
+#define NANOSLEEP_ENTRY(a) asmlinkage long sys_nanosleep( struct timespec* rqtp, \

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#255: FILE: include/linux/signal.h:238:
+#define NANOSLEEP_ENTRY(a) asmlinkage long sys_nanosleep( struct timespec* rqtp, \

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#256: FILE: include/linux/signal.h:239:
+							  struct timespec * rmtp) \

ERROR:TRAILING_WHITESPACE: trailing whitespace
#266: FILE: include/linux/signal.h:249:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: include/linux/signal.h:249:
+ $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#329: FILE: include/linux/time.h:140:
+extern int do_sys_settimeofday(struct timeval *tv, struct timezone *tz);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#361: FILE: include/linux/timer.h:50:
+extern void update_real_wall_time(void);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#439: FILE: kernel/timer.c:20:
+ *  2002-10-01^IHigh res timers code by George Anzinger $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#469: FILE: kernel/timer.c:51:
+#define IF_SMP(a) $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#498: FILE: kernel/timer.c:63:
 
+

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#509: FILE: kernel/timer.c:68:
+	volatile struct timer_list * volatile running_timer;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#554: FILE: kernel/timer.c:79:
+ static inline void internal_add_timer(tvec_base_t *base, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#554: FILE: kernel/timer.c:79:
+ static inline void internal_add_timer(tvec_base_t *base, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#555: FILE: kernel/timer.c:80:
+ ^I^I^I^I      struct timer_list *timer)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#555: FILE: kernel/timer.c:80:
+ ^I^I^I^I      struct timer_list *timer)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#555: FILE: kernel/timer.c:80:
+ static inline void internal_add_timer(tvec_base_t *base, 
+ 				      struct timer_list *timer)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#555: FILE: kernel/timer.c:80:
+ ^I^I^I^I      struct timer_list *timer)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#556: FILE: kernel/timer.c:81:
+  {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#557: FILE: kernel/timer.c:82:
+ ^I/*$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#557: FILE: kernel/timer.c:82:
+ ^I/*$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#557: FILE: kernel/timer.c:82:
+ ^I/*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#558: FILE: kernel/timer.c:83:
+ ^I * must be cli-ed when calling this$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#558: FILE: kernel/timer.c:83:
+ ^I * must be cli-ed when calling this$

ERROR:CODE_INDENT: code indent should use tabs where possible
#559: FILE: kernel/timer.c:84:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#559: FILE: kernel/timer.c:84:
+ ^I */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#560: FILE: kernel/timer.c:85:
+  ^Iunsigned long expires = timer->expires;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#560: FILE: kernel/timer.c:85:
+  ^Iunsigned long expires = timer->expires;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#560: FILE: kernel/timer.c:85:
+  ^Iunsigned long expires = timer->expires;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#561: FILE: kernel/timer.c:86:
+ ^IIF_HIGH_RES(int sub_expires = timer->sub_expires;)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#561: FILE: kernel/timer.c:86:
+ ^IIF_HIGH_RES(int sub_expires = timer->sub_expires;)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#561: FILE: kernel/timer.c:86:
+ ^IIF_HIGH_RES(int sub_expires = timer->sub_expires;)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#562: FILE: kernel/timer.c:87:
+ ^I^Iint indx;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#562: FILE: kernel/timer.c:87:
+ ^I^Iint indx;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#562: FILE: kernel/timer.c:87:
+ ^I^Iint indx;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#563: FILE: kernel/timer.c:88:
+ ^Istruct list_head *pos,*list_start;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#563: FILE: kernel/timer.c:88:
+ ^Istruct list_head *pos,*list_start;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#563: FILE: kernel/timer.c:88:
+ ^Istruct list_head *pos,*list_start;$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#563: FILE: kernel/timer.c:88:
+ 	struct list_head *pos,*list_start;
  	                     ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#563: FILE: kernel/timer.c:88:
+ 	struct list_head *pos,*list_start;
  	                      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#564: FILE: kernel/timer.c:89:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#564: FILE: kernel/timer.c:89:
+  $

ERROR:CODE_INDENT: code indent should use tabs where possible
#565: FILE: kernel/timer.c:90:
+ ^Iif ( time_before(expires, base->timer_jiffies) ){$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#565: FILE: kernel/timer.c:90:
+ ^Iif ( time_before(expires, base->timer_jiffies) ){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#565: FILE: kernel/timer.c:90:
+ ^Iif ( time_before(expires, base->timer_jiffies) ){$

ERROR:SPACING: space required before the open brace '{'
#565: FILE: kernel/timer.c:90:
+ 	if ( time_before(expires, base->timer_jiffies) ){

ERROR:SPACING: space prohibited after that open parenthesis '('
#565: FILE: kernel/timer.c:90:
+ 	if ( time_before(expires, base->timer_jiffies) ){

ERROR:SPACING: space prohibited before that close parenthesis ')'
#565: FILE: kernel/timer.c:90:
+ 	if ( time_before(expires, base->timer_jiffies) ){

ERROR:CODE_INDENT: code indent should use tabs where possible
#566: FILE: kernel/timer.c:91:
+ ^I^I/*$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#566: FILE: kernel/timer.c:91:
+ ^I^I/*$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#566: FILE: kernel/timer.c:91:
+ ^I^I/*$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#567: FILE: kernel/timer.c:92:
+ ^I^I * already expired, schedule for next tick $

ERROR:CODE_INDENT: code indent should use tabs where possible
#567: FILE: kernel/timer.c:92:
+ ^I^I * already expired, schedule for next tick $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#567: FILE: kernel/timer.c:92:
+ ^I^I * already expired, schedule for next tick $

ERROR:CODE_INDENT: code indent should use tabs where possible
#568: FILE: kernel/timer.c:93:
+ ^I^I * would like to do better here$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#568: FILE: kernel/timer.c:93:
+ ^I^I * would like to do better here$

ERROR:CODE_INDENT: code indent should use tabs where possible
#569: FILE: kernel/timer.c:94:
+ ^I^I * Actually this now works just fine with the$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#569: FILE: kernel/timer.c:94:
+ ^I^I * Actually this now works just fine with the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#570: FILE: kernel/timer.c:95:
+ ^I^I * back up of timer_jiffies in "run_timer_list".$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#570: FILE: kernel/timer.c:95:
+ ^I^I * back up of timer_jiffies in "run_timer_list".$

ERROR:CODE_INDENT: code indent should use tabs where possible
#571: FILE: kernel/timer.c:96:
+ ^I^I * Note that this puts the timer on a list other$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#571: FILE: kernel/timer.c:96:
+ ^I^I * Note that this puts the timer on a list other$

ERROR:CODE_INDENT: code indent should use tabs where possible
#572: FILE: kernel/timer.c:97:
+ ^I^I * than the one it idexes to.  We don't want to$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#572: FILE: kernel/timer.c:97:
+ ^I^I * than the one it idexes to.  We don't want to$

ERROR:CODE_INDENT: code indent should use tabs where possible
#573: FILE: kernel/timer.c:98:
+ ^I^I * change the expires value in the timer as it is$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#573: FILE: kernel/timer.c:98:
+ ^I^I * change the expires value in the timer as it is$

ERROR:CODE_INDENT: code indent should use tabs where possible
#574: FILE: kernel/timer.c:99:
+ ^I^I * used by the repeat code in setitimer and the$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#574: FILE: kernel/timer.c:99:
+ ^I^I * used by the repeat code in setitimer and the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#575: FILE: kernel/timer.c:100:
+ ^I^I * POSIX timers code.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#575: FILE: kernel/timer.c:100:
+ ^I^I * POSIX timers code.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#576: FILE: kernel/timer.c:101:
+ ^I^I^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#576: FILE: kernel/timer.c:101:
+ ^I^I^I */$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#576: FILE: kernel/timer.c:101:
+ 		 * POSIX timers code.
+ 			 */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#577: FILE: kernel/timer.c:102:
+ ^I^Iexpires = base->timer_jiffies;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#577: FILE: kernel/timer.c:102:
+ ^I^Iexpires = base->timer_jiffies;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#577: FILE: kernel/timer.c:102:
+ ^I^Iexpires = base->timer_jiffies;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#578: FILE: kernel/timer.c:103:
+ ^I^IIF_HIGH_RES(sub_expires = 0);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#578: FILE: kernel/timer.c:103:
+ ^I^IIF_HIGH_RES(sub_expires = 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#578: FILE: kernel/timer.c:103:
+ ^I^IIF_HIGH_RES(sub_expires = 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#579: FILE: kernel/timer.c:104:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#579: FILE: kernel/timer.c:104:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#579: FILE: kernel/timer.c:104:
+ ^I}$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#580: FILE: kernel/timer.c:105:
+ ^I^I^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#580: FILE: kernel/timer.c:105:
+ ^I^I^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#580: FILE: kernel/timer.c:105:
+ ^I^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#581: FILE: kernel/timer.c:106:
+ ^Iindx =^Iexpires & NEW_TVEC_MASK;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#581: FILE: kernel/timer.c:106:
+ ^Iindx =^Iexpires & NEW_TVEC_MASK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#581: FILE: kernel/timer.c:106:
+ ^Iindx =^Iexpires & NEW_TVEC_MASK;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#582: FILE: kernel/timer.c:107:
+ ^Iif ((expires - base->timer_jiffies) <= NEW_TVEC_SIZE) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#582: FILE: kernel/timer.c:107:
+ ^Iif ((expires - base->timer_jiffies) <= NEW_TVEC_SIZE) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#582: FILE: kernel/timer.c:107:
+ ^Iif ((expires - base->timer_jiffies) <= NEW_TVEC_SIZE) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#584: FILE: kernel/timer.c:109:
+ ^I^Iunsigned long jiffies_f;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#584: FILE: kernel/timer.c:109:
+ ^I^Iunsigned long jiffies_f;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#584: FILE: kernel/timer.c:109:
+ ^I^Iunsigned long jiffies_f;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#585: FILE: kernel/timer.c:110:
+  ^I^I/*$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#585: FILE: kernel/timer.c:110:
+  ^I^I/*$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#585: FILE: kernel/timer.c:110:
+  ^I^I/*$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#586: FILE: kernel/timer.c:111:
+ ^I^I * The high diff bits are the same, goes to the head of $

ERROR:CODE_INDENT: code indent should use tabs where possible
#586: FILE: kernel/timer.c:111:
+ ^I^I * The high diff bits are the same, goes to the head of $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#586: FILE: kernel/timer.c:111:
+ ^I^I * The high diff bits are the same, goes to the head of $

ERROR:CODE_INDENT: code indent should use tabs where possible
#587: FILE: kernel/timer.c:112:
+ ^I^I * the list, sort on sub_expire.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#587: FILE: kernel/timer.c:112:
+ ^I^I * the list, sort on sub_expire.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#588: FILE: kernel/timer.c:113:
+  ^I^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#588: FILE: kernel/timer.c:113:
+  ^I^I */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#589: FILE: kernel/timer.c:114:
+ ^I^Ifor (pos = (list_start = &base->tv[indx])->next; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#589: FILE: kernel/timer.c:114:
+ ^I^Ifor (pos = (list_start = &base->tv[indx])->next; $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#589: FILE: kernel/timer.c:114:
+ ^I^Ifor (pos = (list_start = &base->tv[indx])->next; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#589: FILE: kernel/timer.c:114:
+ ^I^Ifor (pos = (list_start = &base->tv[indx])->next; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#590: FILE: kernel/timer.c:115:
+ ^I^I     pos != list_start; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#590: FILE: kernel/timer.c:115:
+ ^I^I     pos != list_start; $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#590: FILE: kernel/timer.c:115:
+ ^I^I     pos != list_start; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#590: FILE: kernel/timer.c:115:
+ ^I^I     pos != list_start; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#591: FILE: kernel/timer.c:116:
+ ^I^I     pos = pos->next){$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#591: FILE: kernel/timer.c:116:
+ ^I^I     pos = pos->next){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#591: FILE: kernel/timer.c:116:
+ ^I^I     pos = pos->next){$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#592: FILE: kernel/timer.c:117:
+ ^I^I^Istruct timer_list *tmr = $

ERROR:CODE_INDENT: code indent should use tabs where possible
#592: FILE: kernel/timer.c:117:
+ ^I^I^Istruct timer_list *tmr = $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#592: FILE: kernel/timer.c:117:
+ ^I^I^Istruct timer_list *tmr = $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#592: FILE: kernel/timer.c:117:
+ ^I^I^Istruct timer_list *tmr = $

ERROR:CODE_INDENT: code indent should use tabs where possible
#593: FILE: kernel/timer.c:118:
+ ^I^I^I^Ilist_entry(pos,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#593: FILE: kernel/timer.c:118:
+ ^I^I^I^Ilist_entry(pos,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#593: FILE: kernel/timer.c:118:
+ ^I^I^I^Ilist_entry(pos,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#594: FILE: kernel/timer.c:119:
+ ^I^I^I^I^I   struct timer_list,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#594: FILE: kernel/timer.c:119:
+ ^I^I^I^I^I   struct timer_list,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#594: FILE: kernel/timer.c:119:
+ 				list_entry(pos,
+ 					   struct timer_list,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#594: FILE: kernel/timer.c:119:
+ ^I^I^I^I^I   struct timer_list,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#595: FILE: kernel/timer.c:120:
+ ^I^I^I^I^I   entry);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#595: FILE: kernel/timer.c:120:
+ ^I^I^I^I^I   entry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#595: FILE: kernel/timer.c:120:
+ ^I^I^I^I^I   entry);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#596: FILE: kernel/timer.c:121:
+ ^I^I^Iif ((tmr->sub_expires >= sub_expires) ||$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#596: FILE: kernel/timer.c:121:
+ ^I^I^Iif ((tmr->sub_expires >= sub_expires) ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#596: FILE: kernel/timer.c:121:
+ ^I^I^Iif ((tmr->sub_expires >= sub_expires) ||$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmr->sub_expires >= sub_expires'
#596: FILE: kernel/timer.c:121:
+ 			if ((tmr->sub_expires >= sub_expires) ||
+ 			    (tmr->expires != expires)){

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmr->expires != expires'
#596: FILE: kernel/timer.c:121:
+ 			if ((tmr->sub_expires >= sub_expires) ||
+ 			    (tmr->expires != expires)){

ERROR:CODE_INDENT: code indent should use tabs where possible
#597: FILE: kernel/timer.c:122:
+ ^I^I^I    (tmr->expires != expires)){$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#597: FILE: kernel/timer.c:122:
+ ^I^I^I    (tmr->expires != expires)){$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#597: FILE: kernel/timer.c:122:
+ 			if ((tmr->sub_expires >= sub_expires) ||
+ 			    (tmr->expires != expires)){

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#597: FILE: kernel/timer.c:122:
+ ^I^I^I    (tmr->expires != expires)){$

ERROR:SPACING: space required before the open brace '{'
#597: FILE: kernel/timer.c:122:
+ 			    (tmr->expires != expires)){

ERROR:CODE_INDENT: code indent should use tabs where possible
#598: FILE: kernel/timer.c:123:
+ ^I^I^I^Ibreak;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#598: FILE: kernel/timer.c:123:
+ ^I^I^I^Ibreak;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#598: FILE: kernel/timer.c:123:
+ ^I^I^I^Ibreak;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#599: FILE: kernel/timer.c:124:
+ ^I^I^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#599: FILE: kernel/timer.c:124:
+ ^I^I^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#599: FILE: kernel/timer.c:124:
+ ^I^I^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#600: FILE: kernel/timer.c:125:
+ ^I^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#600: FILE: kernel/timer.c:125:
+ ^I^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#600: FILE: kernel/timer.c:125:
+ ^I^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#601: FILE: kernel/timer.c:126:
+ ^I^Ilist_add_tail(&timer->entry, pos);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#601: FILE: kernel/timer.c:126:
+ ^I^Ilist_add_tail(&timer->entry, pos);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#601: FILE: kernel/timer.c:126:
+ ^I^Ilist_add_tail(&timer->entry, pos);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#602: FILE: kernel/timer.c:127:
+ ^I^I/*$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#602: FILE: kernel/timer.c:127:
+ ^I^I/*$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#602: FILE: kernel/timer.c:127:
+ ^I^I/*$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#603: FILE: kernel/timer.c:128:
+ ^I^I * Notes to me.^I Use jiffies here instead of $

ERROR:CODE_INDENT: code indent should use tabs where possible
#603: FILE: kernel/timer.c:128:
+ ^I^I * Notes to me.^I Use jiffies here instead of $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#603: FILE: kernel/timer.c:128:
+ ^I^I * Notes to me.^I Use jiffies here instead of $

ERROR:CODE_INDENT: code indent should use tabs where possible
#604: FILE: kernel/timer.c:129:
+ ^I^I * timer_jiffies to prevent adding unneeded interrupts.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#604: FILE: kernel/timer.c:129:
+ ^I^I * timer_jiffies to prevent adding unneeded interrupts.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#605: FILE: kernel/timer.c:130:
+ ^I^I * Running_timer is NULL if we are NOT currently $

ERROR:CODE_INDENT: code indent should use tabs where possible
#605: FILE: kernel/timer.c:130:
+ ^I^I * Running_timer is NULL if we are NOT currently $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#605: FILE: kernel/timer.c:130:
+ ^I^I * Running_timer is NULL if we are NOT currently $

WARNING:TYPO_SPELLING: 'activly' may be misspelled - perhaps 'actively'?
#606: FILE: kernel/timer.c:131:
+ 		 * activly dispatching timers.	Since we are under
  		   ^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#606: FILE: kernel/timer.c:131:
+ ^I^I * activly dispatching timers.^ISince we are under$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#606: FILE: kernel/timer.c:131:
+ ^I^I * activly dispatching timers.^ISince we are under$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#607: FILE: kernel/timer.c:132:
+ ^I^I * the same spin lock, it being false means that $

ERROR:CODE_INDENT: code indent should use tabs where possible
#607: FILE: kernel/timer.c:132:
+ ^I^I * the same spin lock, it being false means that $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#607: FILE: kernel/timer.c:132:
+ ^I^I * the same spin lock, it being false means that $

ERROR:CODE_INDENT: code indent should use tabs where possible
#608: FILE: kernel/timer.c:133:
+ ^I^I * it has dropped the spinlock to call the timer$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#608: FILE: kernel/timer.c:133:
+ ^I^I * it has dropped the spinlock to call the timer$

ERROR:CODE_INDENT: code indent should use tabs where possible
#609: FILE: kernel/timer.c:134:
+ ^I^I * function, which could well be who called us.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#609: FILE: kernel/timer.c:134:
+ ^I^I * function, which could well be who called us.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#610: FILE: kernel/timer.c:135:
+ ^I^I * In any case, we don't need a new interrupt as$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#610: FILE: kernel/timer.c:135:
+ ^I^I * In any case, we don't need a new interrupt as$

ERROR:CODE_INDENT: code indent should use tabs where possible
#611: FILE: kernel/timer.c:136:
+ ^I^I * the timer dispach code (run_timer_list) will$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#611: FILE: kernel/timer.c:136:
+ ^I^I * the timer dispach code (run_timer_list) will$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#612: FILE: kernel/timer.c:137:
+ ^I^I * pick this up when the function it is calling $

ERROR:CODE_INDENT: code indent should use tabs where possible
#612: FILE: kernel/timer.c:137:
+ ^I^I * pick this up when the function it is calling $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#612: FILE: kernel/timer.c:137:
+ ^I^I * pick this up when the function it is calling $

ERROR:CODE_INDENT: code indent should use tabs where possible
#613: FILE: kernel/timer.c:138:
+ ^I^I * returns.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#613: FILE: kernel/timer.c:138:
+ ^I^I * returns.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#614: FILE: kernel/timer.c:139:
+ ^I^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#614: FILE: kernel/timer.c:139:
+ ^I^I */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#615: FILE: kernel/timer.c:140:
+ ^I^Iif ( expires == (jiffies_f = jiffies) && $

ERROR:CODE_INDENT: code indent should use tabs where possible
#615: FILE: kernel/timer.c:140:
+ ^I^Iif ( expires == (jiffies_f = jiffies) && $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#615: FILE: kernel/timer.c:140:
+ ^I^Iif ( expires == (jiffies_f = jiffies) && $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#615: FILE: kernel/timer.c:140:
+ ^I^Iif ( expires == (jiffies_f = jiffies) && $

ERROR:SPACING: space prohibited after that open parenthesis '('
#615: FILE: kernel/timer.c:140:
+ 		if ( expires == (jiffies_f = jiffies) && 

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'base->running_timer == NULL'
#615: FILE: kernel/timer.c:140:
+ 		if ( expires == (jiffies_f = jiffies) && 
+ 		     list_start->next == &timer->entry &&
+ 		     (base->running_timer == NULL)) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#615: FILE: kernel/timer.c:140:
+ 		if ( expires == (jiffies_f = jiffies) && 

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#616: FILE: kernel/timer.c:141:
+ ^I^I     list_start->next == &timer->entry &&$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#616: FILE: kernel/timer.c:141:
+ ^I^I     list_start->next == &timer->entry &&$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#616: FILE: kernel/timer.c:141:
+ 		if ( expires == (jiffies_f = jiffies) && 
+ 		     list_start->next == &timer->entry &&

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#616: FILE: kernel/timer.c:141:
+ ^I^I     list_start->next == &timer->entry &&$

ERROR:CODE_INDENT: code indent should use tabs where possible
#617: FILE: kernel/timer.c:142:
+ ^I^I     (base->running_timer == NULL)) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#617: FILE: kernel/timer.c:142:
+ ^I^I     (base->running_timer == NULL)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#617: FILE: kernel/timer.c:142:
+ ^I^I     (base->running_timer == NULL)) {$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!base->running_timer"
#617: FILE: kernel/timer.c:142:
+ 		     (base->running_timer == NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#618: FILE: kernel/timer.c:143:
+ ^I^I^Ischedule_next_int(jiffies_f, sub_expires,1);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#618: FILE: kernel/timer.c:143:
+ ^I^I^Ischedule_next_int(jiffies_f, sub_expires,1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#618: FILE: kernel/timer.c:143:
+ ^I^I^Ischedule_next_int(jiffies_f, sub_expires,1);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#618: FILE: kernel/timer.c:143:
+ 			schedule_next_int(jiffies_f, sub_expires,1);
  			                                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#619: FILE: kernel/timer.c:144:
+ ^I^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#619: FILE: kernel/timer.c:144:
+ ^I^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#619: FILE: kernel/timer.c:144:
+ ^I^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#621: FILE: kernel/timer.c:146:
+ ^I^Ipos = (&base->tv[indx])->next;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#621: FILE: kernel/timer.c:146:
+ ^I^Ipos = (&base->tv[indx])->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#621: FILE: kernel/timer.c:146:
+ ^I^Ipos = (&base->tv[indx])->next;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#622: FILE: kernel/timer.c:147:
+ ^I^Ilist_add_tail(&timer->entry, pos);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#622: FILE: kernel/timer.c:147:
+ ^I^Ilist_add_tail(&timer->entry, pos);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#622: FILE: kernel/timer.c:147:
+ ^I^Ilist_add_tail(&timer->entry, pos);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#624: FILE: kernel/timer.c:149:
+ ^I}else{$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#624: FILE: kernel/timer.c:149:
+ ^I}else{$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#624: FILE: kernel/timer.c:149:
+ ^I}else{$

ERROR:SPACING: space required before the open brace '{'
#624: FILE: kernel/timer.c:149:
+ 	}else{

ERROR:SPACING: space required after that close brace '}'
#624: FILE: kernel/timer.c:149:
+ 	}else{

ERROR:CODE_INDENT: code indent should use tabs where possible
#625: FILE: kernel/timer.c:150:
+ ^I^I/*$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#625: FILE: kernel/timer.c:150:
+ ^I^I/*$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#625: FILE: kernel/timer.c:150:
+ ^I^I/*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#626: FILE: kernel/timer.c:151:
+ ^I^I * The high diff bits differ, search from the tail$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#626: FILE: kernel/timer.c:151:
+ ^I^I * The high diff bits differ, search from the tail$

ERROR:CODE_INDENT: code indent should use tabs where possible
#627: FILE: kernel/timer.c:152:
+ ^I^I * The for will pick up an empty list.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#627: FILE: kernel/timer.c:152:
+ ^I^I * The for will pick up an empty list.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#628: FILE: kernel/timer.c:153:
+ ^I^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#628: FILE: kernel/timer.c:153:
+ ^I^I */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#629: FILE: kernel/timer.c:154:
+ ^I^Ifor (pos = (list_start = &base->tv[indx])->prev; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#629: FILE: kernel/timer.c:154:
+ ^I^Ifor (pos = (list_start = &base->tv[indx])->prev; $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#629: FILE: kernel/timer.c:154:
+ ^I^Ifor (pos = (list_start = &base->tv[indx])->prev; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#629: FILE: kernel/timer.c:154:
+ ^I^Ifor (pos = (list_start = &base->tv[indx])->prev; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#630: FILE: kernel/timer.c:155:
+ ^I^I     pos != list_start; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#630: FILE: kernel/timer.c:155:
+ ^I^I     pos != list_start; $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#630: FILE: kernel/timer.c:155:
+ ^I^I     pos != list_start; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#630: FILE: kernel/timer.c:155:
+ ^I^I     pos != list_start; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#631: FILE: kernel/timer.c:156:
+ ^I^I     pos = pos->prev){$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#631: FILE: kernel/timer.c:156:
+ ^I^I     pos = pos->prev){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#631: FILE: kernel/timer.c:156:
+ ^I^I     pos = pos->prev){$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#632: FILE: kernel/timer.c:157:
+ ^I^I^Istruct timer_list *tmr = $

ERROR:CODE_INDENT: code indent should use tabs where possible
#632: FILE: kernel/timer.c:157:
+ ^I^I^Istruct timer_list *tmr = $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#632: FILE: kernel/timer.c:157:
+ ^I^I^Istruct timer_list *tmr = $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#632: FILE: kernel/timer.c:157:
+ ^I^I^Istruct timer_list *tmr = $

ERROR:CODE_INDENT: code indent should use tabs where possible
#633: FILE: kernel/timer.c:158:
+ ^I^I^I^Ilist_entry(pos,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#633: FILE: kernel/timer.c:158:
+ ^I^I^I^Ilist_entry(pos,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#633: FILE: kernel/timer.c:158:
+ ^I^I^I^Ilist_entry(pos,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#634: FILE: kernel/timer.c:159:
+ ^I^I^I^I^I   struct timer_list,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#634: FILE: kernel/timer.c:159:
+ ^I^I^I^I^I   struct timer_list,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#634: FILE: kernel/timer.c:159:
+ 				list_entry(pos,
+ 					   struct timer_list,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#634: FILE: kernel/timer.c:159:
+ ^I^I^I^I^I   struct timer_list,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#635: FILE: kernel/timer.c:160:
+ ^I^I^I^I^I   entry);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#635: FILE: kernel/timer.c:160:
+ ^I^I^I^I^I   entry);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#635: FILE: kernel/timer.c:160:
+ ^I^I^I^I^I   entry);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#636: FILE: kernel/timer.c:161:
+ ^I^I^Iif (time_after(tmr->expires, expires)){$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#636: FILE: kernel/timer.c:161:
+ ^I^I^Iif (time_after(tmr->expires, expires)){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#636: FILE: kernel/timer.c:161:
+ ^I^I^Iif (time_after(tmr->expires, expires)){$

ERROR:SPACING: space required before the open brace '{'
#636: FILE: kernel/timer.c:161:
+ 			if (time_after(tmr->expires, expires)){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#636: FILE: kernel/timer.c:161:
+ 			if (time_after(tmr->expires, expires)){
+ 				continue;
+ 			}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#637: FILE: kernel/timer.c:162:
+ ^I^I^I^Icontinue;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#637: FILE: kernel/timer.c:162:
+ ^I^I^I^Icontinue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#637: FILE: kernel/timer.c:162:
+ ^I^I^I^Icontinue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#638: FILE: kernel/timer.c:163:
+ ^I^I^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#638: FILE: kernel/timer.c:163:
+ ^I^I^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#638: FILE: kernel/timer.c:163:
+ ^I^I^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#639: FILE: kernel/timer.c:164:
+ ^I^I^IIF_HIGH_RES($

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#639: FILE: kernel/timer.c:164:
+ ^I^I^IIF_HIGH_RES($

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#639: FILE: kernel/timer.c:164:
+ ^I^I^IIF_HIGH_RES($

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#639: FILE: kernel/timer.c:164:
+ 			IF_HIGH_RES(

ERROR:CODE_INDENT: code indent should use tabs where possible
#640: FILE: kernel/timer.c:165:
+ ^I^I^I^Iif ((tmr->expires != expires) ||$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#640: FILE: kernel/timer.c:165:
+ ^I^I^I^Iif ((tmr->expires != expires) ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#640: FILE: kernel/timer.c:165:
+ ^I^I^I^Iif ((tmr->expires != expires) ||$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmr->expires != expires'
#640: FILE: kernel/timer.c:165:
+ 				if ((tmr->expires != expires) ||
+ 				    (tmr->sub_expires < sub_expires)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmr->sub_expires < sub_expires'
#640: FILE: kernel/timer.c:165:
+ 				if ((tmr->expires != expires) ||
+ 				    (tmr->sub_expires < sub_expires)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#641: FILE: kernel/timer.c:166:
+ ^I^I^I^I    (tmr->sub_expires < sub_expires)) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#641: FILE: kernel/timer.c:166:
+ ^I^I^I^I    (tmr->sub_expires < sub_expires)) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#641: FILE: kernel/timer.c:166:
+ 				if ((tmr->expires != expires) ||
+ 				    (tmr->sub_expires < sub_expires)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#641: FILE: kernel/timer.c:166:
+ ^I^I^I^I    (tmr->sub_expires < sub_expires)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#642: FILE: kernel/timer.c:167:
+ ^I^I^I^I^Ibreak;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#642: FILE: kernel/timer.c:167:
+ ^I^I^I^I^Ibreak;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#642: FILE: kernel/timer.c:167:
+ ^I^I^I^I^Ibreak;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#643: FILE: kernel/timer.c:168:
+ ^I^I^I^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#643: FILE: kernel/timer.c:168:
+ ^I^I^I^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#643: FILE: kernel/timer.c:168:
+ ^I^I^I^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#644: FILE: kernel/timer.c:169:
+ ^I^I^I^I);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#644: FILE: kernel/timer.c:169:
+ ^I^I^I^I);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#644: FILE: kernel/timer.c:169:
+ ^I^I^I^I);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#645: FILE: kernel/timer.c:170:
+ ^I^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#645: FILE: kernel/timer.c:170:
+ ^I^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#645: FILE: kernel/timer.c:170:
+ ^I^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#646: FILE: kernel/timer.c:171:
+ ^I^Ilist_add(&timer->entry, pos);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#646: FILE: kernel/timer.c:171:
+ ^I^Ilist_add(&timer->entry, pos);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#646: FILE: kernel/timer.c:171:
+ ^I^Ilist_add(&timer->entry, pos);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#647: FILE: kernel/timer.c:172:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#647: FILE: kernel/timer.c:172:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#647: FILE: kernel/timer.c:172:
+ ^I}$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#648: FILE: kernel/timer.c:173:
+ ^I^I^I^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#648: FILE: kernel/timer.c:173:
+ ^I^I^I^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#648: FILE: kernel/timer.c:173:
+ ^I^I^I^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#671: FILE: kernel/timer.c:228:
+	tvec_base_t *new_base;
+	IF_SMP( tvec_base_t *old_base;)

ERROR:SPACING: space prohibited after that open parenthesis '('
#671: FILE: kernel/timer.c:228:
+	IF_SMP( tvec_base_t *old_base;)

CHECK:BRACES: Unbalanced braces around else statement
#695: FILE: kernel/timer.c:267:
+	} else

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#711: FILE: kernel/timer.c:283:
+	IF_SMP(if (old_base && (new_base != old_base))
[...]
+	spin_unlock_irqrestore(&new_base->lock, flags);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#722: FILE: kernel/timer.c:294:
+int mod_timer_hr(struct timer_list *timer, $

WARNING:LINE_SPACING: Missing a blank line after declarations
#727: FILE: kernel/timer.c:299:
+	tvec_base_t *new_base;
+	IF_SMP( tvec_base_t *old_base;)

ERROR:SPACING: space prohibited after that open parenthesis '('
#727: FILE: kernel/timer.c:299:
+	IF_SMP( tvec_base_t *old_base;)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#731: FILE: kernel/timer.c:303:
+^Iif (timer_pending(timer) && $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#740: FILE: kernel/timer.c:312:
+ repeat: $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_base != old_base'
#746: FILE: kernel/timer.c:318:
+	if (old_base && (new_base != old_base)) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#782: FILE: kernel/timer.c:353:
+	IF_SMP(if (old_base && (new_base != old_base))
[...]
 	spin_unlock_irqrestore(&new_base->lock, flags);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#789: FILE: kernel/timer.c:360:
 }
+int mod_timer(struct timer_list *timer, unsigned long expires)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#812: FILE: kernel/timer.c:415:
+int del_timer_sync(struct timer_list * timer)

ERROR:SPACING: space prohibited after that open parenthesis '('
#863: FILE: kernel/timer.c:447:
+	IF_HIGH_RES( unsigned long jiffies_f;

WARNING:TABSTOP: Statements should start on a tabstop
#864: FILE: kernel/timer.c:448:
+		     long sub_jiff = -1;

WARNING:LINE_SPACING: Missing a blank line after declarations
#865: FILE: kernel/timer.c:449:
+		     long sub_jiff = -1;
+		     long sub_jiffie_f);

ERROR:SPACING: space required before the open brace '{'
#872: FILE: kernel/timer.c:456:
+	while ( unlikely(sub_jiffie_f >= cycles_per_jiffies)){

ERROR:SPACING: space prohibited after that open parenthesis '('
#872: FILE: kernel/timer.c:456:
+	while ( unlikely(sub_jiffie_f >= cycles_per_jiffies)){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#883: FILE: kernel/timer.c:466:
+^I^Ihead = base->tv + $

WARNING:LINE_SPACING: Missing a blank line after declarations
#883: FILE: kernel/timer.c:466:
+		struct list_head *head, *curr;
+		head = base->tv + 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#920: FILE: kernel/timer.c:486:
+^I^I^I * drop one of the tests.  Since we may get $

ERROR:SPACING: spaces required around that '||' (ctx:VxE)
#926: FILE: kernel/timer.c:492:
+			if (time_before(timer->expires, jiffies_f)||
 			                                          ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'timer->expires == jiffies_f'
#926: FILE: kernel/timer.c:492:
+			if (time_before(timer->expires, jiffies_f)||
+			    ((timer->expires == jiffies_f) &&
+			     timer->sub_expires <= sub_jiffie_f))

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#933: FILE: kernel/timer.c:499:
+				data= timer->data;
 				    ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#941: FILE: kernel/timer.c:503:
+				timer->entry.next = timer->entry.prev = NULL;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 33)
#949: FILE: kernel/timer.c:511:
+			else{
[...]
+				 if (timer->expires == jiffies_f ){

ERROR:SPACING: space required before the open brace '{'
#949: FILE: kernel/timer.c:511:
+			else{

CHECK:BRACES: Unbalanced braces around else statement
#949: FILE: kernel/timer.c:511:
+			else{

WARNING:TABSTOP: Statements should start on a tabstop
#957: FILE: kernel/timer.c:519:
+				 if (timer->expires == jiffies_f ){

ERROR:SPACING: space required before the open brace '{'
#957: FILE: kernel/timer.c:519:
+				 if (timer->expires == jiffies_f ){

ERROR:SPACING: space prohibited before that close parenthesis ')'
#957: FILE: kernel/timer.c:519:
+				 if (timer->expires == jiffies_f ){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#957: FILE: kernel/timer.c:519:
+				 if (timer->expires == jiffies_f ){
+					sub_jiff = timer->sub_expires;
+				}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#975: FILE: kernel/timer.c:531:
+^I * also needs adjusting. $

ERROR:SPACING: space required before the open brace '{'
#984: FILE: kernel/timer.c:536:
+	IF_HIGH_RES(if (schedule_next_int( jiffies_f, sub_jiff, 0)){

ERROR:SPACING: space prohibited after that open parenthesis '('
#984: FILE: kernel/timer.c:536:
+	IF_HIGH_RES(if (schedule_next_int( jiffies_f, sub_jiff, 0)){

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#984: FILE: kernel/timer.c:536:
+	IF_HIGH_RES(if (schedule_next_int( jiffies_f, sub_jiff, 0)){
[...]
+		});

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1002: FILE: kernel/timer.c:826:
+ * Here is where we need to sort out the sub-jiffie interrupts from the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1024: FILE: kernel/timer.c:846:
+^I/* $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1025: FILE: kernel/timer.c:847:
+         * If high-res, we come here more often that 1/HZ.  Don't pass$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1027: FILE: kernel/timer.c:849:
+         */$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1029: FILE: kernel/timer.c:851:
+	if (test_and_clear_bit(cpu, (volatile unsigned long *)&new_jiffie()))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1030: FILE: kernel/timer.c:852:
+#endif^I $

WARNING:INDENTED_LABEL: labels should not be indented
#1054: FILE: kernel/timer.c:883:
+	expires: LOAD_FREQ,

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#1055: FILE: kernel/timer.c:884:
+	function:(void (*)(unsigned long))calc_load,
 	        ^

WARNING:INDENTED_LABEL: labels should not be indented
#1055: FILE: kernel/timer.c:884:
+	function:(void (*)(unsigned long))calc_load,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1056: FILE: kernel/timer.c:885:
+	entry: {0,0} };
 	     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1056: FILE: kernel/timer.c:885:
+	entry: {0,0} };
 	         ^

WARNING:INDENTED_LABEL: labels should not be indented
#1056: FILE: kernel/timer.c:885:
+	entry: {0,0} };

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1057: FILE: kernel/timer.c:886:
+^I^I^I^I       $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1082: FILE: kernel/timer.c:902:
 
+

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1110: FILE: kernel/timer.c:941:
 }
+#ifdef CONFIG_HIGH_RES_TIMERS

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1115: FILE: kernel/timer.c:946:
+^I * To get the time of day really right, we need to make sure $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1115: FILE: kernel/timer.c:946:
+       /*
+	 * To get the time of day really right, we need to make sure 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1117: FILE: kernel/timer.c:948:
+^I * So we provide this for the high res code.  Must be called $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1142: FILE: kernel/timer.c:969:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1143: FILE: kernel/timer.c:970:
+^I * SMP process accounting uses the local APIC timer $

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1145: FILE: kernel/timer.c:972:
+	if (!SMP )

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1182: FILE: kernel/timer.c:1178:
+#if 0  $

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1182: FILE: kernel/timer.c:1178:
+#if 0  

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1184: FILE: kernel/timer.c:1180:
+// correct below.  $

WARNING:TYPO_SPELLING: 'paramerts' may be misspelled - perhaps 'parameters'?
#1188: FILE: kernel/timer.c:1184:
+// Some systems may find these paramerts in other ways than as entry parms, 
                                ^^^^^^^^^

WARNING:TYPO_SPELLING: 'parms' may be misspelled - perhaps 'params'?
#1188: FILE: kernel/timer.c:1184:
+// Some systems may find these paramerts in other ways than as entry parms, 
                                                                      ^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1188: FILE: kernel/timer.c:1184:
+// Some systems may find these paramerts in other ways than as entry parms, $

WARNING:TYPO_SPELLING: 'paramerters' may be misspelled - perhaps 'parameters'?
#1190: FILE: kernel/timer.c:1186:
+// first parameter, where as other archs pass it as one of the paramerters.
                                                                ^^^^^^^^^^^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1196: FILE: kernel/timer.c:1190:
+	NANOSLEEP_ENTRY(	struct timespec t;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1201: FILE: kernel/timer.c:1195:
+^I^I// the above macro.  Also any regs needed for the _do_signal() macro $

WARNING:TYPO_SPELLING: 'shoule' may be misspelled - perhaps 'should'?
#1202: FILE: kernel/timer.c:1196:
+		// shoule be set up here.
 		   ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1204: FILE: kernel/timer.c:1198:
+^I^I//asmlinkage long sys_nanosleep(struct timespec *rqtp, $

ERROR:SPACING: space required before the open parenthesis '('
#1220: FILE: kernel/timer.c:1214:
+	} while((expire = schedule_timeout(expire)) && !_do_signal());

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000424863.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 194 errors, 184 warnings, 29 checks, 1119 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000424863.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
