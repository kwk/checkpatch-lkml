WARNING:TYPO_SPELLING: 'ducument' may be misspelled - perhaps 'document'?
#37: 
      typos: s/ducument/document/
               ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'granuality' may be misspelled - perhaps 'granularity'?
#85: 
      Fix comments: s/granuality/granularity/
                      ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'Suposse' may be misspelled - perhaps 'Suppose'?
#99: 
      fix typo "Suposse" -> "Suppose"
                ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#328: FILE: Documentation/fujitsu/frv/kernel-ABI.txt:102:
+^ICCCR.CC3^I^ICleared by exception prologue $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#333: FILE: Documentation/fujitsu/frv/kernel-ABI.txt:106:
+^ISCR2^I^IMMU^ISave for EAR0 (destroyed by icache insns $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#350: FILE: Documentation/fujitsu/frv/kernel-ABI.txt:121:
+^IGR8^I^IFunction call arg #1^I^IReturn value $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#352: FILE: Documentation/fujitsu/frv/kernel-ABI.txt:123:
+^IGR9^I^IFunction call arg #2^I^IReturn value MSW $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#359: FILE: Documentation/fujitsu/frv/kernel-ABI.txt:129:
+^IGR28-GR31^ISpecial^I^I^I^IOnly accessed $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#382: FILE: Documentation/fujitsu/frv/kernel-ABI.txt:148:
+^IGR31^I^I^ICurrent debug exception frame pointer $

WARNING:TYPO_SPELLING: 'Futhermore' may be misspelled - perhaps 'Furthermore'?
#401: FILE: Documentation/fujitsu/frv/kernel-ABI.txt:159:
+Futhermore, break.S is so complicated because single-step mode does not
 ^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#475: FILE: Documentation/fujitsu/frv/kernel-ABI.txt:222:
+^IICC2.Z would be shifted into the save variable and masked off $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#511: FILE: Documentation/fujitsu/frv/kernel-ABI.txt:248:
+ (9) The trap #2 handler would simply enable hardware interrupts $

WARNING:TYPO_SPELLING: 'parm' may be misspelled - perhaps 'param'?
#553: FILE: Documentation/kernel-parameters.txt:25:
+"echo -n ${value} > /sys/module/${modulename}/parameters/${parm}".
                                                            ^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#658: FILE: drivers/md/dm-target.c:81:
+	BUG_ON(ti->use < 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#672: FILE: drivers/md/raid1.c:1561:
+	BUG_ON(conf->r1buf_pool);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#682: FILE: drivers/md/raid1.c:1734:
+			BUG_ON(sync_blocks < (PAGE_SIZE>>9));

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#682: FILE: drivers/md/raid1.c:1734:
+			BUG_ON(sync_blocks < (PAGE_SIZE>>9));
 			                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#696: FILE: drivers/md/raid10.c:1120:
+	BUG_ON(i == conf->copies);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#706: FILE: drivers/md/raid10.c:1520:
+	BUG_ON(conf->r10buf_pool);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#722: FILE: drivers/md/raid5.c:76:
+		BUG_ON(!list_empty(&sh->lru));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#723: FILE: drivers/md/raid5.c:77:
+		BUG_ON(atomic_read(&conf->active_stripes)==0);

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#723: FILE: drivers/md/raid5.c:77:
+		BUG_ON(atomic_read(&conf->active_stripes)==0);
 		                                         ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#735: FILE: drivers/md/raid5.c:185:
+	BUG_ON(atomic_read(&sh->count) != 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#736: FILE: drivers/md/raid5.c:186:
+	BUG_ON(test_bit(STRIPE_HANDLE, &sh->state));

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 26)
#743: FILE: drivers/md/raid5.c:267:
 			if (atomic_read(&sh->count)) {
+			  BUG_ON(!list_empty(&sh->lru));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#746: FILE: drivers/md/raid5.c:268:
+			  BUG_ON(!list_empty(&sh->lru));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#756: FILE: drivers/md/raid5.c:463:
+	BUG_ON(atomic_read(&sh->count));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#766: FILE: drivers/md/raid5.c:879:
+		BUG_ON(!test_bit(R5_UPTODATE, &sh->dev[pd_idx].flags));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#775: FILE: drivers/md/raid5.c:892:
+				BUG_ON(sh->dev[i].written);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#784: FILE: drivers/md/raid5.c:908:
+				BUG_ON(sh->dev[i].written);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#794: FILE: drivers/md/raid5.c:991:
+	BUG_ON(*bip && bi->bi_next && (*bip) != bi->bi_next);

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#804: FILE: drivers/md/raid5.c:1425:
+			BUG_ON(uptodate != disks);
 			       ^^^^^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#804: FILE: drivers/md/raid5.c:1425:
+			BUG_ON(uptodate != disks);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#814: FILE: drivers/md/raid5.c:2090:
+		BUG_ON(atomic_read(&sh->count)!= 1);

ERROR:SPACING: spaces required around that '!=' (ctx:VxW)
#814: FILE: drivers/md/raid5.c:2090:
+		BUG_ON(atomic_read(&sh->count)!= 1);
 		                              ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#830: FILE: drivers/md/raid6main.c:94:
+		BUG_ON(!list_empty(&sh->lru));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#831: FILE: drivers/md/raid6main.c:95:
+		BUG_ON(atomic_read(&conf->active_stripes)==0);

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#831: FILE: drivers/md/raid6main.c:95:
+		BUG_ON(atomic_read(&conf->active_stripes)==0);
 		                                         ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#843: FILE: drivers/md/raid6main.c:203:
+	BUG_ON(atomic_read(&sh->count) != 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#844: FILE: drivers/md/raid6main.c:204:
+	BUG_ON(test_bit(STRIPE_HANDLE, &sh->state));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#854: FILE: drivers/md/raid6main.c:283:
+				BUG_ON(!list_empty(&sh->lru));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#860: FILE: drivers/md/raid6main.c:287:
+				BUG_ON(list_empty(&sh->lru));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#870: FILE: drivers/md/raid6main.c:350:
+	BUG_ON(atomic_read(&sh->count));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#879: FILE: drivers/md/raid6main.c:776:
+				BUG_ON(sh->dev[i].written);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#889: FILE: drivers/md/raid6main.c:966:
+	BUG_ON(*bip && bi->bi_next && (*bip) != bi->bi_next);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#899: FILE: drivers/md/raid6main.c:1901:
+		BUG_ON(atomic_read(&sh->count)!= 1);

ERROR:SPACING: spaces required around that '!=' (ctx:VxW)
#899: FILE: drivers/md/raid6main.c:1901:
+		BUG_ON(atomic_read(&sh->count)!= 1);
 		                              ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#945: FILE: drivers/net/8139cp.c:542:
+		BUG_ON(!skb);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#955: FILE: drivers/net/8139cp.c:725:
+		BUG_ON(!skb);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#965: FILE: drivers/net/8139cp.c:1551:
+	BUG_ON(i != CP_NUM_STATS);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#975: FILE: drivers/net/8139cp.c:1856:
+	BUG_ON(!dev);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#989: FILE: drivers/net/arcnet/arcnet.c:768:
+	BUG_ON(!lp);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1003: FILE: drivers/net/b44.c:611:
+		BUG_ON(skb == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#1003: FILE: drivers/net/b44.c:611:
+		BUG_ON(skb == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1017: FILE: drivers/net/chelsio/sge.c:1096:
+			BUG_ON(!e->Sop || !e->Eop);

CHECK:CAMELCASE: Avoid CamelCase: <Sop>
#1017: FILE: drivers/net/chelsio/sge.c:1096:
+			BUG_ON(!e->Sop || !e->Eop);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Eop>
#1017: FILE: drivers/net/chelsio/sge.c:1096:
+			BUG_ON(!e->Sop || !e->Eop);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1031: FILE: drivers/net/e1000/e1000_main.c:3311:
+		BUG_ON(i == adapter->num_rx_queues);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1045: FILE: drivers/net/eql.c:206:
+	BUG_ON(!list_empty(&eql->queue.all_slaves));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1059: FILE: drivers/net/irda/sa1100_ir.c:698:
+		BUG_ON(si->txskb);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1074: FILE: drivers/net/ne2k-pci.c:648:
+	BUG_ON(!dev);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1088: FILE: drivers/net/ns83820.c:571:
+	BUG_ON(NULL != dev->rx_info.skbs[next_empty]);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1088: FILE: drivers/net/ns83820.c:571:
+	BUG_ON(NULL != dev->rx_info.skbs[next_empty]);

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1102: FILE: drivers/net/starfire.c:2125:
+	BUG_ON(!dev);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1117: FILE: drivers/net/tg3.c:2969:
+		BUG_ON(skb == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#1117: FILE: drivers/net/tg3.c:2969:
+		BUG_ON(skb == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1127: FILE: drivers/net/tg3.c:2980:
+			BUG_ON(sw_idx == hw_idx);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1132: FILE: drivers/net/tg3.c:2983:
+			BUG_ON(ri->skb != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ri->skb"
#1132: FILE: drivers/net/tg3.c:2983:
+			BUG_ON(ri->skb != NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1143: FILE: drivers/net/tg3.c:4934:
+	BUG_ON(offset == TX_CPU_BASE &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1144: FILE: drivers/net/tg3.c:4935:
+	BUG_ON(offset == TX_CPU_BASE &&
+	    (tp->tg3_flags2 & TG3_FLG2_5705_PLUS));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1158: FILE: drivers/net/tokenring/abyss.c:441:
+	BUG_ON(!dev);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1172: FILE: drivers/net/tokenring/madgemc.c:738:
+	BUG_ON(!dev);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1186: FILE: drivers/net/wireless/ipw2200.c:5576:
+		BUG_ON(i == -1);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1196: FILE: drivers/net/wireless/ipw2200.c:5589:
+		BUG_ON(i == -1);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1206: FILE: drivers/net/wireless/ipw2200.c:6716:
+		BUG_ON(!(network->capability & WLAN_CAPABILITY_IBSS));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1220: FILE: drivers/net/yellowfin.c:1444:
+	BUG_ON(!dev);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1235: FILE: drivers/s390/block/dasd_erp.c:35:
+	BUG_ON( magic == NULL || datasize > PAGE_SIZE ||

ERROR:SPACING: space prohibited after that open parenthesis '('
#1235: FILE: drivers/s390/block/dasd_erp.c:35:
+	BUG_ON( magic == NULL || datasize > PAGE_SIZE ||

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!magic"
#1235: FILE: drivers/s390/block/dasd_erp.c:35:
+	BUG_ON( magic == NULL || datasize > PAGE_SIZE ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1236: FILE: drivers/s390/block/dasd_erp.c:36:
+	BUG_ON( magic == NULL || datasize > PAGE_SIZE ||
+	     (cplength*sizeof(struct ccw1)) > PAGE_SIZE);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1236: FILE: drivers/s390/block/dasd_erp.c:36:
+	     (cplength*sizeof(struct ccw1)) > PAGE_SIZE);
 	              ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1246: FILE: drivers/s390/block/dasd_erp.c:127:
+	BUG_ON(cqr->refers == NULL || cqr->function == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cqr->refers"
#1246: FILE: drivers/s390/block/dasd_erp.c:127:
+	BUG_ON(cqr->refers == NULL || cqr->function == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cqr->function"
#1246: FILE: drivers/s390/block/dasd_erp.c:127:
+	BUG_ON(cqr->refers == NULL || cqr->function == NULL);

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#1259: FILE: drivers/s390/char/sclp_rw.c:27:
+ * (as it is specified as the maximum size in the the SCLP documentation)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1274: FILE: drivers/s390/char/tape_block.c:201:
+	BUG_ON(device == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!device"
#1274: FILE: drivers/s390/char/tape_block.c:201:
+	BUG_ON(device == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1284: FILE: drivers/s390/char/tape_block.c:308:
+	BUG_ON(!device);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1294: FILE: drivers/s390/char/tape_block.c:440:
+	BUG_ON(!disk);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1298: FILE: drivers/s390/char/tape_block.c:442:
+	BUG_ON(!device);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1313: FILE: drivers/s390/net/lcs.c:678:
+	BUG_ON(buffer->state != BUF_STATE_LOCKED &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1314: FILE: drivers/s390/net/lcs.c:679:
+	BUG_ON(buffer->state != BUF_STATE_LOCKED &&
+		buffer->state != BUF_STATE_PROCESSED);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1324: FILE: drivers/s390/net/lcs.c:703:
+	BUG_ON(buffer->state != BUF_STATE_READY);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1335: FILE: drivers/s390/net/lcs.c:735:
+	BUG_ON(buffer->state != BUF_STATE_LOCKED &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1336: FILE: drivers/s390/net/lcs.c:736:
+	BUG_ON(buffer->state != BUF_STATE_LOCKED &&
+		buffer->state != BUF_STATE_PROCESSED);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1402: FILE: fs/direct-io.c:932:
+			BUG_ON(dio->block_in_file > dio->final_block_in_request);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1416: FILE: fs/dquot.c:593:
+	BUG_ON(!list_empty(&dquot->dq_free));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1426: FILE: fs/dquot.c:668:
+	BUG_ON(!dquot->dq_sb);	/* Has somebody invalidated entry under us? */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1439: FILE: fs/exec.c:564:
+		BUG_ON(active_mm != old_mm);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1453: FILE: fs/fcntl.c:456:
+			BUG_ON((reason & __SI_MASK) != __SI_POLL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1467: FILE: fs/freevxfs/vxfs_olt.c:45:
+	BUG_ON(infp->vsi_fshino);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1476: FILE: fs/freevxfs/vxfs_olt.c:52:
+	BUG_ON(infp->vsi_iext);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1485: FILE: fs/freevxfs/vxfs_olt.c:59:
+	BUG_ON(sbp->s_blocksize % bsize);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1499: FILE: fs/hfsplus/bnode.c:469:
+	BUG_ON(!*p);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1509: FILE: fs/hfsplus/bnode.c:624:
+		BUG_ON(!atomic_read(&node->refcnt));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1523: FILE: fs/hfsplus/btree.c:272:
+	BUG_ON(!node->this);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1537: FILE: fs/inode.c:175:
+	BUG_ON(inode_has_buffers(inode));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1551: FILE: fs/inode.c:251:
+	BUG_ON(inode->i_data.nrpages);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1552: FILE: fs/inode.c:252:
+	BUG_ON(!(inode->i_state & I_FREEING));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1553: FILE: fs/inode.c:253:
+	BUG_ON(inode->i_state & I_CLEAR);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1563: FILE: fs/inode.c:1053:
+	BUG_ON(inode->i_state != I_CLEAR);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1577: FILE: fs/jffs2/background.c:38:
+	BUG_ON(c->gc_task);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1591: FILE: fs/smbfs/file.c:181:
+	BUG_ON(!mapping);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1595: FILE: fs/smbfs/file.c:183:
+	BUG_ON(!inode);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1622: FILE: fs/sysfs/inode.c:178:
+	BUG_ON(!sd || !sd->s_element);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1636: FILE: fs/sysv/dir.c:256:
+	BUG_ON(err);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1646: FILE: fs/sysv/dir.c:355:
+	BUG_ON(err);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1660: FILE: fs/udf/inode.c:315:
+	BUG_ON(bh);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1665: FILE: fs/udf/inode.c:318:
+	BUG_ON(!phys);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1706: FILE: ipc/shm.c:95:
+	BUG_ON(!shp);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1717: FILE: ipc/shm.c:146:
+	BUG_ON(!shp);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1727: FILE: ipc/shm.c:286:
+		BUG_ON(shp==NULL);

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1727: FILE: ipc/shm.c:286:
+		BUG_ON(shp==NULL);
 		          ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!shp"
#1727: FILE: ipc/shm.c:286:
+		BUG_ON(shp==NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1738: FILE: ipc/shm.c:777:
+	BUG_ON(!shp);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1752: FILE: ipc/util.c:269:
+	BUG_ON(lid >= ids->entries->size);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1762: FILE: ipc/util.c:277:
+	BUG_ON(p==NULL);

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#1762: FILE: ipc/util.c:277:
+	BUG_ON(p==NULL);
 	        ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p"
#1762: FILE: ipc/util.c:277:
+	BUG_ON(p==NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1789: FILE: kernel/printk.c:363:
+	BUG_ON(((long)(start - end)) > 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1799: FILE: kernel/printk.c:710:
+	BUG_ON(in_interrupt());

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1813: FILE: kernel/ptrace.c:33:
+	BUG_ON(!list_empty(&child->ptrace_list));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1827: FILE: kernel/signal.c:772:
+	BUG_ON(!irqs_disabled());

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1837: FILE: kernel/signal.c:1386:
+		BUG_ON(q->info.si_code != SI_TIMER);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1879: FILE: kernel/timer.c:1482:
+	BUG_ON(ti->frequency == 0 || ti->mask == 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1893: FILE: mm/highmem.c:77:
+		BUG_ON(pte_none(pkmap_page_table[i]));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1903: FILE: mm/highmem.c:160:
+	BUG_ON(pkmap_count[PKMAP_NR(vaddr)] < 2);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1913: FILE: mm/highmem.c:175:
+	BUG_ON(!vaddr);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1923: FILE: mm/highmem.c:220:
+	BUG_ON(!page_pool);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1933: FILE: mm/highmem.c:263:
+	BUG_ON(!isa_page_pool);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1947: FILE: mm/mmap.c:297:
+	BUG_ON(bug);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1957: FILE: mm/mmap.c:434:
+	BUG_ON(__vma && __vma->vm_start < vma->vm_end);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1967: FILE: mm/mmap.c:814:
+	BUG_ON(find_vma_prev(vma->vm_mm, vma->vm_start, &near) != vma);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1994: FILE: mm/slab.c:1300:
+	BUG_ON(!cache_cache.num);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2004: FILE: mm/slab.c:1976:
+	BUG_ON(flags & ~CREATE_MASK);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2014: FILE: mm/slab.c:2207:
+		BUG_ON(slabp->inuse);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2024: FILE: mm/slab.c:2248:
+	BUG_ON(!cachep || in_interrupt());

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2034: FILE: mm/slab.c:2276:
+	BUG_ON(!cachep || in_interrupt());

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2044: FILE: mm/slab.c:2475:
+	BUG_ON(flags & ~(SLAB_DMA | SLAB_LEVEL_MASK | SLAB_NO_GROW));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2058: FILE: mm/swap_state.c:151:
+	BUG_ON(!PageLocked(page));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2072: FILE: mm/vmalloc.c:324:
+			BUG_ON(!area->pages[i]);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000088260.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 120 warnings, 17 checks, 1501 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000088260.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
