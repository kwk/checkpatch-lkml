WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#65: FILE: drivers/ide/hpt366.c:15:
+ * ^IAdrian Sun <asun@cobalt.com>$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#71: FILE: drivers/ide/hpt366.c:21:
+ * ^IDuncan Laurie <duncan@cobalt.com>$

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#82: FILE: drivers/ide/hpt366.c:42:
+#include <asm/uaccess.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#97: FILE: drivers/ide/hpt366.c:192:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#101: FILE: drivers/ide/hpt366.c:196:
+^I$

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#121: FILE: drivers/ide/hpt366.c:216:
+byte hpt366_proc = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#124: FILE: drivers/ide/hpt366.c:219:
+extern char *ide_xfer_verbose (byte xfer_rate);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#124: FILE: drivers/ide/hpt366.c:219:
+extern char *ide_xfer_verbose (byte xfer_rate);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:STATIC_CONST_CHAR_ARRAY: char * array declaration might be better as static const
#167: FILE: drivers/ide/hpt366.c:229:
+	char *chipset_nums[] = {"366", "366", "368", "370", "370A"};

WARNING:SPLIT_STRING: quoted string split across lines
#171: FILE: drivers/ide/hpt366.c:233:
+	p += sprintf(p, "\n                             "
+		"HighPoint HPT366/368/370\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#185: FILE: drivers/ide/hpt366.c:247:
+		p += sprintf(p, "--------------- Primary Channel "
+				"--------------- Secondary Channel "

WARNING:SPLIT_STRING: quoted string split across lines
#186: FILE: drivers/ide/hpt366.c:248:
+				"--------------- Secondary Channel "
+				"--------------\n");

WARNING:SPLIT_STRING: quoted string split across lines
#192: FILE: drivers/ide/hpt366.c:254:
+		p += sprintf(p, "Enabled:        %s"
+				"                             %s\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#198: FILE: drivers/ide/hpt366.c:260:
+			u8 cbl;
+			cbl = inb_p(iobase + 0x7b);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#203: FILE: drivers/ide/hpt366.c:265:
+			p += sprintf(p, "Cable:          ATA-%d"
+					"                          ATA-%d\n",

WARNING:SPLIT_STRING: quoted string split across lines
#210: FILE: drivers/ide/hpt366.c:272:
+		p += sprintf(p, "--------------- drive0 --------- drive1 "
+				"------- drive0 ---------- drive1 -------\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#211: FILE: drivers/ide/hpt366.c:273:
+^I^Ip += sprintf(p, "DMA capable:    %s              %s" $

WARNING:SPLIT_STRING: quoted string split across lines
#212: FILE: drivers/ide/hpt366.c:274:
+		p += sprintf(p, "DMA capable:    %s              %s" 
+				"            %s               %s\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#213: FILE: drivers/ide/hpt366.c:275:
+^I^I^I(c0 & 0x20) ? "yes" : "no ", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#215: FILE: drivers/ide/hpt366.c:277:
+^I^I^I(c1 & 0x20) ? "yes" : "no ", $

WARNING:LINE_SPACING: Missing a blank line after declarations
#220: FILE: drivers/ide/hpt366.c:282:
+			u8 c2, c3;
+			c0 = inb_p(iobase + 0x63);

WARNING:SPLIT_STRING: quoted string split across lines
#226: FILE: drivers/ide/hpt366.c:288:
+			p += sprintf(p, "Mode:           %s             %s"
+					"           %s              %s\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#227: FILE: drivers/ide/hpt366.c:289:
+^I^I^I^I(c0 & 0x10) ? "UDMA" : (c0 & 0x20) ? "DMA " : $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#238: FILE: drivers/ide/hpt366.c:300:
+^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#265: FILE: drivers/ide/hpt366.c:405:
+^Istruct pci_dev *dev ^I= HWIF(drive)->pci_dev;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#266: FILE: drivers/ide/hpt366.c:406:
+^Iint bus_freq ^I^I= dev->bus->bus_speed;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#289: FILE: drivers/ide/hpt366.c:418:
+^I * $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#297: FILE: drivers/ide/hpt366.c:426:
+	if (bus_freq == 66 || (speed == XFER_UDMA_5 && direction)) {
+		reg5bh &= ~(0x02);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#306: FILE: drivers/ide/hpt366.c:433:
+^I * the channel to which this drive is attached.  Values depend on $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#316: FILE: drivers/ide/hpt366.c:442:
+^I^I$

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#317: FILE: drivers/ide/hpt366.c:443:
+		if (bus_freq <= 49) {
[...]
+		} else {
[...]

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#323: FILE: drivers/ide/hpt366.c:449:
+			printk("HPT366: I don't know how to handle a %d MHz "

WARNING:SPLIT_STRING: quoted string split across lines
#324: FILE: drivers/ide/hpt366.c:450:
+			printk("HPT366: I don't know how to handle a %d MHz "
+				"bus - setting up for %d MHz\n", bus_freq, n);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#331: FILE: drivers/ide/hpt366.c:457:
+		list_conf = pci_bus_clock_list(speed, direction,
+			thirty_three_base_hpt370);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#334: FILE: drivers/ide/hpt366.c:460:
+		list_conf = pci_bus_clock_list(speed, direction,
+			sixty_six_base_hpt370);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#339: FILE: drivers/ide/hpt366.c:465:
+^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#340: FILE: drivers/ide/hpt366.c:466:
+	if (speed < XFER_MW_DMA_0) {
+		list_conf &= ~0x80000000; /* Disable on-chip PIO FIFO/buffer */
+	}

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#401: FILE: drivers/ide/hpt366.c:790:
+		udelay(10);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#403: FILE: drivers/ide/hpt366.c:792:
+		udelay(10);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#406: FILE: drivers/ide/hpt366.c:795:
+	if (hwif->channel) {
[...]
+	} else {
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#422: FILE: drivers/ide/hpt366.c:809:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#441: FILE: drivers/ide/hpt366.c:828:
+^Iif (hwif->channel) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#444: FILE: drivers/ide/hpt366.c:831:
+^I^Iresetmask = 0x80; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#445: FILE: drivers/ide/hpt366.c:832:
+^I} else { $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#456: FILE: drivers/ide/hpt366.c:843:
+	 * make sure that the drive knows that it has failed if it's off */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#504: FILE: drivers/ide/hpt366.c:889:
+		 * drives on each channel */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000531303.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 26 warnings, 4 checks, 447 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000531303.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
