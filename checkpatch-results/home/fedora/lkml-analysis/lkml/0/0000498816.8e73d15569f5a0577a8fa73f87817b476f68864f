WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
	ftp://ftp.us.kernel.org/pub/linux/kernel/people/andrea/patches/v2.4/2.4.15pre6/zone-watermarks-1

WARNING:NEW_TYPEDEFS: do not add new typedefs
#69: FILE: include/linux/mmzone.h:33:
+typedef struct zone_watermarks_s {

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'zone' - possible side-effects?
#110: FILE: include/linux/mmzone.h:135:
+#define zone_idx(zone)			((zone) - (zone)->zone_pgdat->node_zones)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#126: FILE: mm/page_alloc.c:33:
+static int lower_zone_reserve_ratio[MAX_NR_ZONES-1] = { 128, 8 };
                                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#201: FILE: mm/page_alloc.c:533:
+^I^I^Iprintk("Zone:%s freepages:%6lukB\n", $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#201: FILE: mm/page_alloc.c:533:
+			printk("Zone:%s freepages:%6lukB\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#202: FILE: mm/page_alloc.c:534:
+			printk("Zone:%s freepages:%6lukB\n", 
 					zone->name,

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#235: FILE: mm/page_alloc.c:726:
+		zone->watermarks[j].low = mask*2;
 		                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#236: FILE: mm/page_alloc.c:727:
+		zone->watermarks[j].high = mask*3;
 		                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#238: FILE: mm/page_alloc.c:729:
+		for (idx = j-1; idx >= 0; idx--) {
 		            ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#239: FILE: mm/page_alloc.c:730:
+			zone_t * lower_zone = pgdat->node_zones + idx;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#241: FILE: mm/page_alloc.c:732:
+			unsigned long lower_zone_reserve;
+			if (!lower_zone->size)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#246: FILE: mm/page_alloc.c:737:
+			lower_zone->watermarks[j].low = mask*2;
 			                                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#247: FILE: mm/page_alloc.c:738:
+			lower_zone->watermarks[j].high = mask*3;
 			                                     ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#269: FILE: mm/page_alloc.c:828:
+	while (get_option(&str, &lower_zone_reserve_ratio[j++]) == 2);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#270: FILE: mm/page_alloc.c:829:
+	printk("setup_lower_zone_reserve: ");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'setup_lower_zone_reserve', this function's name, in a string
#270: FILE: mm/page_alloc.c:829:
+	printk("setup_lower_zone_reserve: ");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#271: FILE: mm/page_alloc.c:830:
+	for (j = 0; j < MAX_NR_ZONES-1; j++) printk("%d  ", lower_zone_reserve_ratio[j]);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#271: FILE: mm/page_alloc.c:830:
+	for (j = 0; j < MAX_NR_ZONES-1; j++) printk("%d  ", lower_zone_reserve_ratio[j]);
 	                            ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#271: FILE: mm/page_alloc.c:830:
+	for (j = 0; j < MAX_NR_ZONES-1; j++) printk("%d  ", lower_zone_reserve_ratio[j]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#272: FILE: mm/page_alloc.c:831:
+	printk("\n");

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#276: FILE: mm/page_alloc.c:835:
+__setup("lower_zone_reserve=", setup_lower_zone_reserve);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#285: FILE: mm/vmscan.c:609:
+	zone_t * first_zone;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000498816.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 8 warnings, 10 checks, 221 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000498816.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
