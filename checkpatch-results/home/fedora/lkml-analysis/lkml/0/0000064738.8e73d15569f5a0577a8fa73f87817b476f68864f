WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#373: FILE: arch/i386/kernel/machine_kexec.c:136:
+extern const unsigned char relocate_new_kernel[];

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#376: FILE: arch/i386/kernel/machine_kexec.c:138:
+extern const unsigned int relocate_new_kernel_size;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#488: FILE: arch/powerpc/kernel/machine_kexec_32.c:33:
+	extern const unsigned char relocate_new_kernel[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#489: FILE: arch/powerpc/kernel/machine_kexec_32.c:34:
+	extern const unsigned int relocate_new_kernel_size;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#529: FILE: arch/ppc/kernel/machine_kexec.c:28:
+extern const unsigned char relocate_new_kernel[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#530: FILE: arch/ppc/kernel/machine_kexec.c:29:
+extern const unsigned int relocate_new_kernel_size;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#544: FILE: arch/s390/kernel/machine_kexec.c:30:
+extern const unsigned char relocate_kernel[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#545: FILE: arch/s390/kernel/machine_kexec.c:31:
+extern const unsigned long long relocate_kernel_len;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#572: FILE: arch/sh/kernel/machine_kexec.c:28:
+extern const unsigned char relocate_new_kernel[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#573: FILE: arch/sh/kernel/machine_kexec.c:29:
+extern const unsigned int relocate_new_kernel_size;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#626: FILE: arch/x86_64/kernel/machine_kexec.c:152:
+extern const unsigned char relocate_new_kernel[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#627: FILE: arch/x86_64/kernel/machine_kexec.c:153:
+extern const unsigned long relocate_new_kernel_size;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#688: FILE: drivers/atm/firestream.c:954:
+		   successfully. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#740: FILE: drivers/char/ipmi/ipmi_msghandler.c:3680:
+static int has_panicked = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1161: FILE: drivers/scsi/NCR5380.c:503:
+ * Purpose : decide whether a command would normally disconnect or $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#1174: FILE: drivers/scsi/advansys.c:12377:
+                ASC_PRINT("AscInitFromEEP: Successfully re-wrote EEPROM.\n");$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1174: FILE: drivers/scsi/advansys.c:12377:
+                ASC_PRINT("AscInitFromEEP: Successfully re-wrote EEPROM.\n");$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'AscInitFromEEP', this function's name, in a string
#1174: FILE: drivers/scsi/advansys.c:12377:
+                ASC_PRINT("AscInitFromEEP: Successfully re-wrote EEPROM.\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1341: FILE: drivers/usb/storage/usb.h:163:
+static inline struct Scsi_Host *us_to_host(struct us_data *us) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#1341: FILE: drivers/usb/storage/usb.h:163:
+static inline struct Scsi_Host *us_to_host(struct us_data *us) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1345: FILE: drivers/usb/storage/usb.h:166:
 }
+static inline struct us_data *host_to_us(struct Scsi_Host *host) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1345: FILE: drivers/usb/storage/usb.h:166:
+static inline struct us_data *host_to_us(struct Scsi_Host *host) {

WARNING:TYPO_SPELLING: 'avaliable' may be misspelled - perhaps 'available'?
#1397: FILE: fs/jfs/jfs_extent.c:129:
+	 * if this fails (xlen contiguous free blocks not avaliable), it'll
 	                                                  ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'avaliable' may be misspelled - perhaps 'available'?
#1406: FILE: fs/jfs/jfs_extent.c:496:
+ *		contiguous free blocks not avaliable), we'll try to allocate
   		                           ^^^^^^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1424: FILE: fs/jfs/jfs_extent.c:589:
+ *^I^I(nnew).  if this fails ^I(new contiguous free blocks not$

WARNING:TYPO_SPELLING: 'dynamicly' may be misspelled - perhaps 'dynamically'?
#1572: FILE: sound/core/seq/seq_memory.h:34:
+/* design note: the pool is a contiguous block of memory, if we dynamicly
                                                                 ^^^^^^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000064738.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 19 warnings, 2 checks, 1036 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000064738.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
