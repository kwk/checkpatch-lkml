WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
diff -ur linux-2.4.28/arch/i386/config.in linux-2.4.28-patched/arch/i386/config.in

ERROR:TRAILING_WHITESPACE: trailing whitespace
#62: FILE: Documentation/Configure.help:29125:
+  Saying yes here makes the kernel writing core dump files in a $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#530: FILE: fs/binfmt_elf.c:509:
+static __u32 crc32 (__u32 crc, const unsigned char *buf, unsigned len)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#530: FILE: fs/binfmt_elf.c:509:
+static __u32 crc32 (__u32 crc, const unsigned char *buf, unsigned len)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#535: FILE: fs/binfmt_elf.c:514:
+^Iif (buf == 0) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#547: FILE: fs/binfmt_elf.c:526:
+^I^Ic ^= *buf4++; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#548: FILE: fs/binfmt_elf.c:527:
+^I^Ic = crc_table[3][c & 0xff] ^ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#549: FILE: fs/binfmt_elf.c:528:
+^I^I^Icrc_table[2][(c >> 8) & 0xff] ^ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#550: FILE: fs/binfmt_elf.c:529:
+^I^I^Icrc_table[1][(c >> 16) & 0xff] ^ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#551: FILE: fs/binfmt_elf.c:530:
+^I^I^Icrc_table[0][c >> 24]; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#552: FILE: fs/binfmt_elf.c:531:
+^I^Ic ^= *buf4++; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#553: FILE: fs/binfmt_elf.c:532:
+^I^Ic = crc_table[3][c & 0xff] ^ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#554: FILE: fs/binfmt_elf.c:533:
+^I^I^Icrc_table[2][(c >> 8) & 0xff] ^ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#555: FILE: fs/binfmt_elf.c:534:
+^I^I^Icrc_table[1][(c >> 16) & 0xff] ^ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#556: FILE: fs/binfmt_elf.c:535:
+^I^I^Icrc_table[0][c >> 24]; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#557: FILE: fs/binfmt_elf.c:536:
+^I^Ic ^= *buf4++; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#558: FILE: fs/binfmt_elf.c:537:
+^I^Ic = crc_table[3][c & 0xff] ^ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#559: FILE: fs/binfmt_elf.c:538:
+^I^I^Icrc_table[2][(c >> 8) & 0xff] ^ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#560: FILE: fs/binfmt_elf.c:539:
+^I^I^Icrc_table[1][(c >> 16) & 0xff] ^ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#561: FILE: fs/binfmt_elf.c:540:
+^I^I^Icrc_table[0][c >> 24]; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#562: FILE: fs/binfmt_elf.c:541:
+^I^Ic ^= *buf4++; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#563: FILE: fs/binfmt_elf.c:542:
+^I^Ic = crc_table[3][c & 0xff] ^ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#564: FILE: fs/binfmt_elf.c:543:
+^I^I^Icrc_table[2][(c >> 8) & 0xff] ^ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#565: FILE: fs/binfmt_elf.c:544:
+^I^I^Icrc_table[1][(c >> 16) & 0xff] ^ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#566: FILE: fs/binfmt_elf.c:545:
+^I^I^Icrc_table[0][c >> 24]; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#567: FILE: fs/binfmt_elf.c:546:
+^I^Ic ^= *buf4++; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#568: FILE: fs/binfmt_elf.c:547:
+^I^Ic = crc_table[3][c & 0xff] ^ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#569: FILE: fs/binfmt_elf.c:548:
+^I^I^Icrc_table[2][(c >> 8) & 0xff] ^ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#570: FILE: fs/binfmt_elf.c:549:
+^I^I^Icrc_table[1][(c >> 16) & 0xff] ^ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#571: FILE: fs/binfmt_elf.c:550:
+^I^I^Icrc_table[0][c >> 24]; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#572: FILE: fs/binfmt_elf.c:551:
+^I^Ic ^= *buf4++; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#573: FILE: fs/binfmt_elf.c:552:
+^I^Ic = crc_table[3][c & 0xff] ^ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#574: FILE: fs/binfmt_elf.c:553:
+^I^I^Icrc_table[2][(c >> 8) & 0xff] ^ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#575: FILE: fs/binfmt_elf.c:554:
+^I^I^Icrc_table[1][(c >> 16) & 0xff] ^ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#576: FILE: fs/binfmt_elf.c:555:
+^I^I^Icrc_table[0][c >> 24]; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#577: FILE: fs/binfmt_elf.c:556:
+^I^Ic ^= *buf4++; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#578: FILE: fs/binfmt_elf.c:557:
+^I^Ic = crc_table[3][c & 0xff] ^ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#579: FILE: fs/binfmt_elf.c:558:
+^I^I^Icrc_table[2][(c >> 8) & 0xff] ^ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#580: FILE: fs/binfmt_elf.c:559:
+^I^I^Icrc_table[1][(c >> 16) & 0xff] ^ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#581: FILE: fs/binfmt_elf.c:560:
+^I^I^Icrc_table[0][c >> 24]; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#582: FILE: fs/binfmt_elf.c:561:
+^I^Ic ^= *buf4++; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#583: FILE: fs/binfmt_elf.c:562:
+^I^Ic = crc_table[3][c & 0xff] ^ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#584: FILE: fs/binfmt_elf.c:563:
+^I^I^Icrc_table[2][(c >> 8) & 0xff] ^ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#585: FILE: fs/binfmt_elf.c:564:
+^I^I^Icrc_table[1][(c >> 16) & 0xff] ^ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#592: FILE: fs/binfmt_elf.c:571:
+^I^Ic ^= *buf4++; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#593: FILE: fs/binfmt_elf.c:572:
+^I^Ic = crc_table[3][c & 0xff] ^ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#594: FILE: fs/binfmt_elf.c:573:
+^I^I^Icrc_table[2][(c >> 8) & 0xff] ^ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#595: FILE: fs/binfmt_elf.c:574:
+^I^I^Icrc_table[1][(c >> 16) & 0xff] ^ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#601: FILE: fs/binfmt_elf.c:580:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#601: FILE: fs/binfmt_elf.c:580:
+  $

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#602: FILE: fs/binfmt_elf.c:581:
+	if (len) do {

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#605: FILE: fs/binfmt_elf.c:584:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#622: FILE: fs/binfmt_elf.c:1474:
+ * gz writing support $

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#629: FILE: fs/binfmt_elf.c:1479:
+	const int OUT_BUF_SIZE = 100*1024;
 	                            ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#634: FILE: fs/binfmt_elf.c:1484:
+		printk(KERN_WARNING "Failed to allocate deflate buffer");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#634: FILE: fs/binfmt_elf.c:1484:
+	if (!out_buf) {
+		printk(KERN_WARNING "Failed to allocate deflate buffer");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#638: FILE: fs/binfmt_elf.c:1488:
+	*crc = crc32 (*crc, addr, nr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#647: FILE: fs/binfmt_elf.c:1497:
+^I^Iif (zlib_deflate (zstr, Z_NO_FLUSH) == Z_OK) { $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#647: FILE: fs/binfmt_elf.c:1497:
+		if (zlib_deflate (zstr, Z_NO_FLUSH) == Z_OK) { 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#649: FILE: fs/binfmt_elf.c:1499:
+^I^I^Iall_fine = (file->f_op->write (file, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#649: FILE: fs/binfmt_elf.c:1499:
+			all_fine = (file->f_op->write (file, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#650: FILE: fs/binfmt_elf.c:1500:
+^I^I^I^I^I^I       out_buf, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#651: FILE: fs/binfmt_elf.c:1501:
+^I^I^I^I^I^I       OUT_BUF_SIZE - zstr->avail_out, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#652: FILE: fs/binfmt_elf.c:1502:
+^I^I^I^I^I^I       &file->f_pos) $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#657: FILE: fs/binfmt_elf.c:1507:
+	vfree (out_buf);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#661: FILE: fs/binfmt_elf.c:1511:
+static int gz_finish (struct file *file, z_streamp zstr)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#663: FILE: fs/binfmt_elf.c:1513:
+	const int OUT_BUF_SIZE = 100*1024;
 	                            ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#669: FILE: fs/binfmt_elf.c:1519:
+		printk(KERN_WARNING "Failed to allocate deflate buffer");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#669: FILE: fs/binfmt_elf.c:1519:
+	if (!out_buf) {
+		printk(KERN_WARNING "Failed to allocate deflate buffer");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#680: FILE: fs/binfmt_elf.c:1530:
+		ret = zlib_deflate (zstr, Z_FINISH);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#681: FILE: fs/binfmt_elf.c:1531:
+^I^Iif ((ret == Z_OK) || (ret == Z_STREAM_END)) { $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ret == Z_OK'
#681: FILE: fs/binfmt_elf.c:1531:
+		if ((ret == Z_OK) || (ret == Z_STREAM_END)) { 

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ret == Z_STREAM_END'
#681: FILE: fs/binfmt_elf.c:1531:
+		if ((ret == Z_OK) || (ret == Z_STREAM_END)) { 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#683: FILE: fs/binfmt_elf.c:1533:
+^I^I^Iall_fine = (file->f_op->write (file, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#683: FILE: fs/binfmt_elf.c:1533:
+			all_fine = (file->f_op->write (file, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#684: FILE: fs/binfmt_elf.c:1534:
+^I^I^I^I^I^I      out_buf, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#685: FILE: fs/binfmt_elf.c:1535:
+^I^I^I^I^I^I      OUT_BUF_SIZE - zstr->avail_out, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#686: FILE: fs/binfmt_elf.c:1536:
+^I^I^I^I^I^I      &file->f_pos) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#687: FILE: fs/binfmt_elf.c:1537:
+^I^I^I^I    == (OUT_BUF_SIZE - zstr->avail_out)); $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#691: FILE: fs/binfmt_elf.c:1541:
+	vfree (out_buf);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'buf' - possible side-effects?
#723: FILE: fs/binfmt_elf.c:1637:
+#define PAD_GZ(nr, buf, crc, str) \
+        do { \
+	        int cur=(nr); \
+         	while (cur>1024) { \
+                        gz_dump_write(file, (buf), 1024, (crc), (str)); \
+                        cur-=1024; \
+                } \
+                if (cur) { \
+                        gz_dump_write(file, (buf), cur, (crc), (str)); \
+                } \
+        } while(0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'crc' - possible side-effects?
#723: FILE: fs/binfmt_elf.c:1637:
+#define PAD_GZ(nr, buf, crc, str) \
+        do { \
+	        int cur=(nr); \
+         	while (cur>1024) { \
+                        gz_dump_write(file, (buf), 1024, (crc), (str)); \
+                        cur-=1024; \
+                } \
+                if (cur) { \
+                        gz_dump_write(file, (buf), cur, (crc), (str)); \
+                } \
+        } while(0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'str' - possible side-effects?
#723: FILE: fs/binfmt_elf.c:1637:
+#define PAD_GZ(nr, buf, crc, str) \
+        do { \
+	        int cur=(nr); \
+         	while (cur>1024) { \
+                        gz_dump_write(file, (buf), 1024, (crc), (str)); \
+                        cur-=1024; \
+                } \
+                if (cur) { \
+                        gz_dump_write(file, (buf), cur, (crc), (str)); \
+                } \
+        } while(0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#724: FILE: fs/binfmt_elf.c:1638:
+        do { \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#724: FILE: fs/binfmt_elf.c:1638:
+        do { \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#725: FILE: fs/binfmt_elf.c:1639:
+^I        int cur=(nr); \$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#725: FILE: fs/binfmt_elf.c:1639:
+	        int cur=(nr); \
 	               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#726: FILE: fs/binfmt_elf.c:1640:
+         ^Iwhile (cur>1024) { \$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#726: FILE: fs/binfmt_elf.c:1640:
+         ^Iwhile (cur>1024) { \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#726: FILE: fs/binfmt_elf.c:1640:
+         ^Iwhile (cur>1024) { \$

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#726: FILE: fs/binfmt_elf.c:1640:
+         	while (cur>1024) { \
          	          ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#727: FILE: fs/binfmt_elf.c:1641:
+                        gz_dump_write(file, (buf), 1024, (crc), (str)); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#727: FILE: fs/binfmt_elf.c:1641:
+                        gz_dump_write(file, (buf), 1024, (crc), (str)); \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#728: FILE: fs/binfmt_elf.c:1642:
+                        cur-=1024; \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#728: FILE: fs/binfmt_elf.c:1642:
+                        cur-=1024; \$

ERROR:SPACING: spaces required around that '-=' (ctx:VxV)
#728: FILE: fs/binfmt_elf.c:1642:
+                        cur-=1024; \
                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#729: FILE: fs/binfmt_elf.c:1643:
+                } \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#729: FILE: fs/binfmt_elf.c:1643:
+                } \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#730: FILE: fs/binfmt_elf.c:1644:
+                if (cur) { \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#730: FILE: fs/binfmt_elf.c:1644:
+                if (cur) { \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#731: FILE: fs/binfmt_elf.c:1645:
+                        gz_dump_write(file, (buf), cur, (crc), (str)); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#731: FILE: fs/binfmt_elf.c:1645:
+                        gz_dump_write(file, (buf), cur, (crc), (str)); \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#732: FILE: fs/binfmt_elf.c:1646:
+                } \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#732: FILE: fs/binfmt_elf.c:1646:
+                } \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#733: FILE: fs/binfmt_elf.c:1647:
+        } while(0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#733: FILE: fs/binfmt_elf.c:1647:
+        } while(0)$

ERROR:SPACING: space required before the open parenthesis '('
#733: FILE: fs/binfmt_elf.c:1647:
+        } while(0)

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#735: FILE: fs/binfmt_elf.c:1649:
+#define DUMP_GZ(addr, nr, crc, str)	\
+	do { if (!gz_dump_write(file, (addr), (nr), (crc), (str))) return 0; } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#736: FILE: fs/binfmt_elf.c:1650:
+	do { if (!gz_dump_write(file, (addr), (nr), (crc), (str))) return 0; } while(0)

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#742: FILE: fs/binfmt_elf.c:1656:
+#define DUMP_WRITE(addr, nr)	\
+	do { if (!dump_write(file, (addr), (nr))) return 0; } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#743: FILE: fs/binfmt_elf.c:1657:
+	do { if (!dump_write(file, (addr), (nr))) return 0; } while(0)

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#746: FILE: fs/binfmt_elf.c:1660:
+static int writenote_gz(struct memelfnote *men, struct file *file, char *buf, __u32 *crc, z_streamp zstr)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#768: FILE: fs/binfmt_elf.c:1682:
+}
+#undef DUMP_GZ

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#780: FILE: fs/binfmt_elf.c:1706:
+#define DUMP_GZ(addr, nr, crc, str)	\
+	if ((size += (nr)) > limit || !gz_dump_write(file, (addr), (nr), (crc), (str))) \
+		goto end_coredump;

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'nr' - possible side-effects?
#780: FILE: fs/binfmt_elf.c:1706:
+#define DUMP_GZ(addr, nr, crc, str)	\
+	if ((size += (nr)) > limit || !gz_dump_write(file, (addr), (nr), (crc), (str))) \
+		goto end_coredump;

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#780: FILE: fs/binfmt_elf.c:1706:
+#define DUMP_GZ(addr, nr, crc, str)	\
+	if ((size += (nr)) > limit || !gz_dump_write(file, (addr), (nr), (crc), (str))) \
+		goto end_coredump;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#780: FILE: fs/binfmt_elf.c:1706:
+#define DUMP_GZ(addr, nr, crc, str)	\
+	if ((size += (nr)) > limit || !gz_dump_write(file, (addr), (nr), (crc), (str))) \
+		goto end_coredump;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#781: FILE: fs/binfmt_elf.c:1707:
+	if ((size += (nr)) > limit || !gz_dump_write(file, (addr), (nr), (crc), (str))) \

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#804: FILE: fs/binfmt_elf.c:1747:
+^I  0x1f, 0x8b, Z_DEFLATED, 0, 0, 0, 0, 0, 0, 0x03 }; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#805: FILE: fs/binfmt_elf.c:1748:
+^Iunsigned char *empty_buf;^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#808: FILE: fs/binfmt_elf.c:1751:
+        if (!deflate_workspace) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#808: FILE: fs/binfmt_elf.c:1751:
+        if (!deflate_workspace) {$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#809: FILE: fs/binfmt_elf.c:1752:
+		printk(KERN_WARNING "Failed to allocate deflate workspace\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#809: FILE: fs/binfmt_elf.c:1752:
+        if (!deflate_workspace) {
+		printk(KERN_WARNING "Failed to allocate deflate workspace\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#811: FILE: fs/binfmt_elf.c:1754:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#811: FILE: fs/binfmt_elf.c:1754:
+        }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#814: FILE: fs/binfmt_elf.c:1757:
+^Iif (Z_OK != zlib_deflateInit2(&gz_stream, $

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#814: FILE: fs/binfmt_elf.c:1757:
+	if (Z_OK != zlib_deflateInit2(&gz_stream, 

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:CAMELCASE: Avoid CamelCase: <zlib_deflateInit2>
#814: FILE: fs/binfmt_elf.c:1757:
+	if (Z_OK != zlib_deflateInit2(&gz_stream, 

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#820: FILE: fs/binfmt_elf.c:1763:
+		printk(KERN_WARNING "deflateInit failed\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#822: FILE: fs/binfmt_elf.c:1765:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#822: FILE: fs/binfmt_elf.c:1765:
+        }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#823: FILE: fs/binfmt_elf.c:1766:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#825: FILE: fs/binfmt_elf.c:1768:
+        if (!empty_buf) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#825: FILE: fs/binfmt_elf.c:1768:
+        if (!empty_buf) {$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#826: FILE: fs/binfmt_elf.c:1769:
+		printk(KERN_WARNING "Failed to allocate 1024 bytes for dummy buffer\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#826: FILE: fs/binfmt_elf.c:1769:
+        if (!empty_buf) {
+		printk(KERN_WARNING "Failed to allocate 1024 bytes for dummy buffer\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#828: FILE: fs/binfmt_elf.c:1771:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#828: FILE: fs/binfmt_elf.c:1771:
+        }$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#829: FILE: fs/binfmt_elf.c:1772:
+	memset (empty_buf, 0, 1024);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#830: FILE: fs/binfmt_elf.c:1773:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#831: FILE: fs/binfmt_elf.c:1774:
+	crc = crc32 (0,0,0); /* init */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#831: FILE: fs/binfmt_elf.c:1774:
+	crc = crc32 (0,0,0); /* init */
 	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#831: FILE: fs/binfmt_elf.c:1774:
+	crc = crc32 (0,0,0); /* init */
 	                ^

ERROR:SPACING: space required before the open parenthesis '('
#878: FILE: fs/binfmt_elf.c:1976:
+	for(i = 0; i < numnote; i++) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#879: FILE: fs/binfmt_elf.c:1977:
+#ifdef CONFIG_GZIP_COREDUMPS^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#888: FILE: fs/binfmt_elf.c:1985:
+#ifdef CONFIG_GZIP_COREDUMPS^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#889: FILE: fs/binfmt_elf.c:1986:
+	PAD_GZ (dataoff-gz_stream.total_in, empty_buf, &crc, &gz_stream);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#889: FILE: fs/binfmt_elf.c:1986:
+	PAD_GZ (dataoff-gz_stream.total_in, empty_buf, &crc, &gz_stream);
 	               ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 26)
#899: FILE: fs/binfmt_elf.c:2007:
 			if (get_user_pages(current, current->mm, addr, 1, 0, 1,
[...]
+			  PAD_GZ(PAGE_SIZE, empty_buf, &crc, &gz_stream);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#902: FILE: fs/binfmt_elf.c:2008:
+^I^I^I^I^I   &page, &vma) <= 0) {^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#906: FILE: fs/binfmt_elf.c:2012:
+			  DUMP_SEEK (file->f_pos + PAGE_SIZE);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#911: FILE: fs/binfmt_elf.c:2015:
+^I^I^I^Iif (page == ZERO_PAGE(addr)) {^I$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 34)
#911: FILE: fs/binfmt_elf.c:2015:
+				if (page == ZERO_PAGE(addr)) {	
[...]
+				  PAD_GZ(PAGE_SIZE, empty_buf, &crc, &gz_stream);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#915: FILE: fs/binfmt_elf.c:2019:
+				  DUMP_SEEK (file->f_pos + PAGE_SIZE);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#944: FILE: fs/binfmt_elf.c:2048:
+	gz_finish (file, &gz_stream);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#945: FILE: fs/binfmt_elf.c:2049:
+	zlib_deflateEnd (&gz_stream);

CHECK:CAMELCASE: Avoid CamelCase: <zlib_deflateEnd>
#945: FILE: fs/binfmt_elf.c:2049:
+	zlib_deflateEnd (&gz_stream);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#955: FILE: fs/binfmt_elf.c:2059:
+	dump_write (file, gz_magic, 8);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#961: FILE: fs/binfmt_elf.c:2065:
+	vfree (deflate_workspace);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#962: FILE: fs/binfmt_elf.c:2066:
+	vfree (empty_buf);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000218498.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 95 errors, 54 warnings, 12 checks, 911 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000218498.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
