WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
diff -rup linux-2.6.19.1-devel/arch/x86_64/kernel/acpi/sleep.c linux-2.6.19.1/arch/x86_64/kernel/acpi/sleep.c

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#51: FILE: arch/x86_64/kernel/acpi/sleep.c:61:
+extern unsigned long acpi_copy_wakeup_routine(unsigned long);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#51: FILE: arch/x86_64/kernel/acpi/sleep.c:61:
+extern unsigned long acpi_copy_wakeup_routine(unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#65: FILE: arch/x86_64/kernel/x8664_ksyms.c:38:
+extern void  __read_lock_failed(rwlock_t *rw);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#77: FILE: include/asm-x86_64/hw_irq.h:94:
+extern void send_IPI_self(int vector);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000005090.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 4 warnings, 1 checks, 50 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000005090.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
