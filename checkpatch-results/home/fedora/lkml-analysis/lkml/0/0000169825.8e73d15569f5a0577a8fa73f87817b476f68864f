WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
> > I don't think its ugly, necessarily.  I do worry about the flash memory=

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#93: FILE: scsi/sata_sil.c:54:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#95: FILE: scsi/sata_sil.c:56:
+	SIL_GPIO                =3D 0x54,
 	                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#106: FILE: scsi/sata_sil.c:80:
+static void sil_host_stop (struct ata_host_set *host_set);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#116: FILE: scsi/sata_sil.c:155:
+	.bmdma_start            =3D sil_bmdma_start,
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#117: FILE: scsi/sata_sil.c:156:
+	.bmdma_stop		=3D sil_bmdma_stop,
 	           		^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#126: FILE: scsi/sata_sil.c:167:
+	.host_stop		=3D sil_host_stop,
 	          		^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#134: FILE: scsi/sata_sil.c:209:
 };
+struct sil_host_priv {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#145: FILE: scsi/sata_sil.c:226:
 }
+static void sil_bmdma_start(struct ata_queued_cmd *qc)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#147: FILE: scsi/sata_sil.c:228:
+	struct sil_host_priv* hpriv =3D qc->ap->host_set->private_data;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#147: FILE: scsi/sata_sil.c:228:
+	struct sil_host_priv* hpriv =3D qc->ap->host_set->private_data;
 	                            ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#148: FILE: scsi/sata_sil.c:229:
+	struct sil_host_priv* hpriv =3D qc->ap->host_set->private_data;
+	if (hpriv->use_gpio) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#149: FILE: scsi/sata_sil.c:230:
+		void* mmio_base =3D qc->ap->host_set->mmio_base;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#149: FILE: scsi/sata_sil.c:230:
+		void* mmio_base =3D qc->ap->host_set->mmio_base;
 		                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#150: FILE: scsi/sata_sil.c:231:
+		u32 gpio =3D readl(mmio_base + SIL_GPIO);
 		         ^

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#153: FILE: scsi/sata_sil.c:234:
+		gpio |=3D 0xff;
 		     ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#163: FILE: scsi/sata_sil.c:244:
+	struct sil_host_priv* hpriv =3D ap->host_set->private_data;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#163: FILE: scsi/sata_sil.c:244:
+	struct sil_host_priv* hpriv =3D ap->host_set->private_data;
 	                            ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#168: FILE: scsi/sata_sil.c:249:
+		void* mmio_base =3D ap->host_set->mmio_base;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#168: FILE: scsi/sata_sil.c:249:
+		void* mmio_base =3D ap->host_set->mmio_base;
 		                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#169: FILE: scsi/sata_sil.c:250:
+		u32 gpio =3D readl(mmio_base + SIL_GPIO);
 		         ^

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#172: FILE: scsi/sata_sil.c:253:
+		gpio |=3D 0xff00;
 		     ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#178: FILE: scsi/sata_sil.c:259:
+static void sil_host_stop (struct ata_host_set *host_set)

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#181: FILE: scsi/sata_sil.c:262:
+	if (host_set->private_data)
+		kfree(host_set->private_data);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#186: FILE: scsi/sata_sil.c:267:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#194: FILE: scsi/sata_sil.c:405:
+	struct sil_host_priv *hpriv =3D NULL;
 	                            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#202: FILE: scsi/sata_sil.c:443:
+	hpriv =3D kmalloc(sizeof(*hpriv), GFP_KERNEL);
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#204: FILE: scsi/sata_sil.c:445:
+		rc =3D -ENOMEM;
 		   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#204: FILE: scsi/sata_sil.c:445:
+		rc =3D -ENOMEM;
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#221: FILE: scsi/sata_sil.c:471:
+	probe_ent->private_data =3D hpriv;
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#230: FILE: scsi/sata_sil.c:517:
+	tmp =3D readl(mmio_base + SIL_GPIO);
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#231: FILE: scsi/sata_sil.c:518:
+	if ((ent->driver_data =3D=3D sil_3112) && ((tmp & 0xff) =3D=3D 0xff)) {
 	                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#231: FILE: scsi/sata_sil.c:518:
+	if ((ent->driver_data =3D=3D sil_3112) && ((tmp & 0xff) =3D=3D 0xff)) {
 	                         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#231: FILE: scsi/sata_sil.c:518:
+	if ((ent->driver_data =3D=3D sil_3112) && ((tmp & 0xff) =3D=3D 0xff)) {
 	                                                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#231: FILE: scsi/sata_sil.c:518:
+	if ((ent->driver_data =3D=3D sil_3112) && ((tmp & 0xff) =3D=3D 0xff)) {
 	                                                           ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#231: FILE: scsi/sata_sil.c:518:
+	if ((ent->driver_data =3D=3D sil_3112) && ((tmp & 0xff) =3D=3D 0xff)) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#231: FILE: scsi/sata_sil.c:518:
+	if ((ent->driver_data =3D=3D sil_3112) && ((tmp & 0xff) =3D=3D 0xff)) {
+		hpriv->use_gpio =3D 1;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#232: FILE: scsi/sata_sil.c:519:
+		hpriv->use_gpio =3D 1;
 		                ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#242: FILE: scsi/sata_sil.c:542:
+err_out_free_hpriv:
                   ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000169825.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 29 errors, 7 warnings, 4 checks, 148 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000169825.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
