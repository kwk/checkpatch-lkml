WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#50: 
diff -ur linux-2.5.10/Documentation/filesystems/Locking linux-2.5.10-dirty/Documentation/filesystems/Locking

ERROR:TRAILING_WHITESPACE: trailing whitespace
#58: FILE: Documentation/filesystems/Locking:257:
+readdir: ^Ino^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#112: FILE: fs/adfs/dir.c:39:
+^Ilock_kernel();^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#141: FILE: fs/affs/dir.c:68:
+^I$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#396: FILE: fs/ext3/dir.c:34:
+	readdir:	ext3_readdir,		/* we take BKL. needed?*/
 	       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#396: FILE: fs/ext3/dir.c:34:
+	readdir:	ext3_readdir,		/* we take BKL. needed?*/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#440: FILE: fs/fat/dir.c:368:
+^I$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#459: FILE: fs/fat/dir.c:386:
+	if (cpos & (sizeof(struct msdos_dir_entry)-1)) {
 	                                          ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#621: FILE: fs/hfs/dir_dbl.c:202:
+^I^I^Igoto out;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#676: FILE: fs/hfs/dir_nat.c:192:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#784: FILE: fs/hpfs/dir.c:81:
+		if (!(fno = hpfs_map_fnode(inode->i_sb, inode->i_ino, &bh))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1059: FILE: fs/jfs/jfs_dtree.c:2940:
+^I^I^I^I^Iunlock_kernel();^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1084: FILE: fs/jfs/jfs_dtree.c:2963:
+			if ((rc = dtReadFirst(ip, &btstack))) {

CHECK:CAMELCASE: Avoid CamelCase: <dtReadFirst>
#1084: FILE: fs/jfs/jfs_dtree.c:2963:
+			if ((rc = dtReadFirst(ip, &btstack))) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1370: FILE: fs/openpromfs/inode.c:766:
+		if (filldir(dirent, ".", 1, i, ino, DT_DIR) < 0) goto out;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1409: FILE: fs/openpromfs/inode.c:807:
+^I^I^I^I^I^Ifilp->f_pos, j, DT_REG) < 0) goto out; $

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(base_stuff)
#1492: FILE: fs/proc/base.c:697:
+			if (i>=sizeof(base_stuff)/sizeof(base_stuff[0])) {

The ARRAY_SIZE(foo) macro should be preferred over
sizeof(foo)/sizeof(foo[0]) for finding number of elements in an
array.

The macro is defined in include/linux/kernel.h::

  #define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#1492: FILE: fs/proc/base.c:697:
+			if (i>=sizeof(base_stuff)/sizeof(base_stuff[0])) {
 			     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1492: FILE: fs/proc/base.c:697:
+			if (i>=sizeof(base_stuff)/sizeof(base_stuff[0])) {
 			                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1578: FILE: fs/proc/generic.c:357:
+^Ireturn ret;^I$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1604: FILE: fs/proc/root.c:114:
+	ret = proc_pid_readdir(filp, dirent, filldir);
 	                       ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1668: FILE: fs/reiserfs/dir.c:50:
+    int ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1670: FILE: fs/reiserfs/dir.c:52:
+    lock_kernel();$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1675: FILE: fs/reiserfs/dir.c:68:
 	if (search_res == IO_ERROR) {
[...]
+	    ret = -EIO;

WARNING:TABSTOP: Statements should start on a tabstop
#1680: FILE: fs/reiserfs/dir.c:72:
+	    goto out;

WARNING:SPACING: space prohibited before semicolon
#1689: FILE: fs/reiserfs/dir.c:124:
+			ret = -ENOMEM ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1700: FILE: fs/reiserfs/dir.c:189:
+    unlock_kernel();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1701: FILE: fs/reiserfs/dir.c:190:
+    return ret;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1713: FILE: fs/romfs/inode.c:277:
+^I$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1983: FILE: fs/umsdos/rdir.c:73:
+	ret = fat_readdir (filp, &bufk, rdir_filldir);
 	                   ^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1983: FILE: fs/umsdos/rdir.c:73:
+	ret = fat_readdir (filp, &bufk, rdir_filldir);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000462213.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 13 warnings, 3 checks, 1649 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000462213.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
