WARNING:REPEATED_WORD: Possible repeated word: 'stuff'
#36: 
> Split the various locked versions stuff stuff like set_adc_rate out as

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
> __set_adc_rate which doesnt take the lock, and set_adc_rate which takes the

WARNING:TYPO_SPELLING: 'doesnt' may be misspelled - perhaps 'doesn't'?
#37: 
> __set_adc_rate which doesnt take the lock, and set_adc_rate which takes the
                       ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'tought' may be misspelled - perhaps 'thought'?
#47: 
I tought to implement this, but first I tryied to correct the problem.
  ^^^^^^

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#54: FILE: drivers/sound/cmpci.c:1:
*/

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#97: FILE: drivers/sound/cmpci.c:498:
+static void set_fmt_unlocked(struct cm_state *s, unsigned char mask, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#99: FILE: drivers/sound/cmpci.c:499:
+static void set_fmt_unlocked(struct cm_state *s, unsigned char mask, 
 {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#109: FILE: drivers/sound/cmpci.c:506:
+static void set_fmt(struct cm_state *s, unsigned char mask, unsigned char $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#115: FILE: drivers/sound/cmpci.c:511:
+	set_fmt_unlocked(s,mask,data);
 	                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#115: FILE: drivers/sound/cmpci.c:511:
+	set_fmt_unlocked(s,mask,data);
 	                       ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#124: FILE: drivers/sound/cmpci.c:538:
+static void set_spdifout_unlocked(struct cm_state *s, unsigned rate)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#139: FILE: drivers/sound/cmpci.c:560:
+static void set_spdifout(struct cm_state *s, unsigned rate)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#144: FILE: drivers/sound/cmpci.c:565:
+	set_spdifout_unlocked(s,rate);
 	                       ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#153: FILE: drivers/sound/cmpci.c:585:
+static void set_ac3_unlocked(struct cm_state *s, unsigned rate)

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#167: FILE: drivers/sound/cmpci.c:627:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#169: FILE: drivers/sound/cmpci.c:629:
+static void set_ac3(struct cm_state *s, unsigned rate)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#175: FILE: drivers/sound/cmpci.c:635:
+	set_ac3_unlocked(s,rate);
 	                  ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#183: FILE: drivers/sound/cmpci.c:666:
+static void set_adc_rate_unlocked(struct cm_state *s, unsigned rate)

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(rate_lookup)
#192: FILE: drivers/sound/cmpci.c:675:
+	for (i = 0; i < sizeof(rate_lookup) / sizeof(rate_lookup[0]); i++) {

The ARRAY_SIZE(foo) macro should be preferred over
sizeof(foo)/sizeof(foo[0]) for finding number of elements in an
array.

The macro is defined in include/linux/kernel.h::

  #define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: drivers/sound/cmpci.c:680:
+^I    ^I}$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#197: FILE: drivers/sound/cmpci.c:680:
+^I    ^I}$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#225: FILE: drivers/sound/cmpci.c:736:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#242: FILE: drivers/sound/cmpci.c:802:
+extern inline void enable_dac_unlocked(struct cm_state *s)

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#256: FILE: drivers/sound/cmpci.c:815:
+extern inline void enable_dac(struct cm_state *s)

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#265: FILE: drivers/sound/cmpci.c:824:
+extern inline void stop_adc_unlocked(struct cm_state *s)

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#276: FILE: drivers/sound/cmpci.c:833:
+extern inline void stop_adc(struct cm_state *s)

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#284: FILE: drivers/sound/cmpci.c:841:
+
+}

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#286: FILE: drivers/sound/cmpci.c:843:
+extern inline void stop_dac_unlocked(struct cm_state *s)

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#300: FILE: drivers/sound/cmpci.c:854:
+extern inline void stop_dac(struct cm_state *s)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#330: FILE: drivers/sound/cmpci.c:880:
+}^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#338: FILE: drivers/sound/cmpci.c:887:
+ ^I^Ienable_dac_unlocked(s);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#338: FILE: drivers/sound/cmpci.c:887:
+ ^I^Ienable_dac_unlocked(s);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: drivers/sound/cmpci.c:887:
+ ^I^Ienable_dac_unlocked(s);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#354: FILE: drivers/sound/cmpci.c:898:
+//}^I$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#388: FILE: drivers/sound/cmpci.c:927:
 	if ((channels > 2) && (channels <= s->max_channels)
[...]
+	    set_spdifout_unlocked(s, 0);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#406: FILE: drivers/sound/cmpci.c:954:
+		if (ret) return ret;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#416: FILE: drivers/sound/cmpci.c:963:
+^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#513: FILE: drivers/sound/cmpci.c:1955:
+^I^I^I ^Ispin_lock_irqsave(&s->lock, flags);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#513: FILE: drivers/sound/cmpci.c:1955:
+^I^I^I ^Ispin_lock_irqsave(&s->lock, flags);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000532370.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 21 warnings, 4 checks, 441 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000532370.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
