WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#53: 
--- linux-2.6.7.orig/arch/x86_64/kernel/Makefile	2004-09-07 18:48:57.000000000 +0530

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#256: FILE: arch/x86_64/kernel/vsyscall/vsyscall.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#300: FILE: arch/x86_64/kernel/vsyscall/vsyscall.c:45:
+#include <asm/pgtable.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#304: FILE: arch/x86_64/kernel/vsyscall/vsyscall.c:49:
+#include <asm/io.h>

ERROR:SPACING: space required after that ',' (ctx:VxV)
#306: FILE: arch/x86_64/kernel/vsyscall/vsyscall.c:51:
+#define __vsyscall(nr) __attribute__ ((unused,__section__(".vsyscall_" #nr)))
                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#306: FILE: arch/x86_64/kernel/vsyscall/vsyscall.c:51:
+#define __vsyscall(nr) __attribute__ ((unused,__section__(".vsyscall_" #nr)))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".vsyscall_" #nr) over __attribute__((__section__(".vsyscall_" #nr)))
#306: FILE: arch/x86_64/kernel/vsyscall/vsyscall.c:51:
+#define __vsyscall(nr) __attribute__ ((unused,__section__(".vsyscall_" #nr)))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#306: FILE: arch/x86_64/kernel/vsyscall/vsyscall.c:51:
+#define __vsyscall(nr) __attribute__ ((unused,__section__(".vsyscall_" #nr)))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#307: FILE: arch/x86_64/kernel/vsyscall/vsyscall.c:52:
+#define force_inline __attribute__((always_inline)) inline

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __always_inline over __attribute__((always_inline))
#307: FILE: arch/x86_64/kernel/vsyscall/vsyscall.c:52:
+#define force_inline __attribute__((always_inline)) inline

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#314: FILE: arch/x86_64/kernel/vsyscall/vsyscall.c:59:
+static force_inline void timeval_normalize(struct timeval * tv)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#319: FILE: arch/x86_64/kernel/vsyscall/vsyscall.c:64:
+	if (__sec)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#326: FILE: arch/x86_64/kernel/vsyscall/vsyscall.c:71:
+static force_inline void do_vgettimeofday(struct timeval * tv)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#333: FILE: arch/x86_64/kernel/vsyscall/vsyscall.c:78:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#341: FILE: arch/x86_64/kernel/vsyscall/vsyscall.c:86:
+			if (t < __vxtime.last_tsc) t = __vxtime.last_tsc;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#344: FILE: arch/x86_64/kernel/vsyscall/vsyscall.c:89:
+^I^I^I/* See comment in x86_64 do_gettimeofday. */ $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#356: FILE: arch/x86_64/kernel/vsyscall/vsyscall.c:101:
+static force_inline void do_get_tz(struct timezone * tz)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#361: FILE: arch/x86_64/kernel/vsyscall/vsyscall.c:106:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#365: FILE: arch/x86_64/kernel/vsyscall/vsyscall.c:110:
+^Iasm volatile("syscall" $

WARNING:LINE_SPACING: Missing a blank line after declarations
#365: FILE: arch/x86_64/kernel/vsyscall/vsyscall.c:110:
+	int ret;
+	asm volatile("syscall" 

ERROR:SPACING: space required after that ',' (ctx:VxV)
#367: FILE: arch/x86_64/kernel/vsyscall/vsyscall.c:112:
+		: "0" (__NR_gettimeofday),"D" (tv),"S" (tz) : __syscall_clobber );
 		                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#367: FILE: arch/x86_64/kernel/vsyscall/vsyscall.c:112:
+		: "0" (__NR_gettimeofday),"D" (tv),"S" (tz) : __syscall_clobber );
 		                                  ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#367: FILE: arch/x86_64/kernel/vsyscall/vsyscall.c:112:
+		: "0" (__NR_gettimeofday),"D" (tv),"S" (tz) : __syscall_clobber );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#374: FILE: arch/x86_64/kernel/vsyscall/vsyscall.c:119:
+^Iasm volatile("syscall" $

WARNING:LINE_SPACING: Missing a blank line after declarations
#374: FILE: arch/x86_64/kernel/vsyscall/vsyscall.c:119:
+	long secs;
+	asm volatile("syscall" 

ERROR:SPACING: space required after that ',' (ctx:VxV)
#376: FILE: arch/x86_64/kernel/vsyscall/vsyscall.c:121:
+		: "0" (__NR_time),"D" (t) : __syscall_clobber);
 		                 ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#380: FILE: arch/x86_64/kernel/vsyscall/vsyscall.c:125:
+static int __vsyscall(0) vgettimeofday(struct timeval * tv, struct timezone * tz)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#380: FILE: arch/x86_64/kernel/vsyscall/vsyscall.c:125:
+static int __vsyscall(0) vgettimeofday(struct timeval * tv, struct timezone * tz)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#382: FILE: arch/x86_64/kernel/vsyscall/vsyscall.c:127:
+	if (unlikely(!__sysctl_vsyscall))
+	return gettimeofday(tv,tz); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#383: FILE: arch/x86_64/kernel/vsyscall/vsyscall.c:128:
+^Ireturn gettimeofday(tv,tz); $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#383: FILE: arch/x86_64/kernel/vsyscall/vsyscall.c:128:
+	return gettimeofday(tv,tz); 
 	                      ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#392: FILE: arch/x86_64/kernel/vsyscall/vsyscall.c:137:
+ * unlikely */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#398: FILE: arch/x86_64/kernel/vsyscall/vsyscall.c:143:
+^I^I*t = __xtime.tv_sec;^I^I$

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#404: FILE: arch/x86_64/kernel/vsyscall/vsyscall.c:149:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#409: FILE: arch/x86_64/kernel/vsyscall/vsyscall.c:154:
+	return -ENOSYS;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#411: FILE: arch/x86_64/kernel/vsyscall/vsyscall.c:156:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#415: FILE: arch/x86_64/kernel/vsyscall/vsyscall.c:160:
+	extern char __vsyscall_0;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: No space is necessary after a cast
#423: FILE: arch/x86_64/kernel/vsyscall/vsyscall.c:168:
+	if ((unsigned long) &vgettimeofday != VSYSCALL_ADDR(__NR_vgettimeofday))

CHECK:SPACING: No space is necessary after a cast
#425: FILE: arch/x86_64/kernel/vsyscall/vsyscall.c:170:
+	if ((unsigned long) &vtime != VSYSCALL_ADDR(__NR_vtime))

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#435: FILE: arch/x86_64/kernel/vsyscall/vsyscall.c:180:
+__initcall(vsyscall_init);

WARNING:DEPRECATED_VARIABLE: Use of EXTRA_CFLAGS is deprecated, please use `ccflags-y instead.
#441: FILE: arch/x86_64/kernel/vsyscall/Makefile:1:
+EXTRA_CFLAGS	:= -g0

EXTRA_{A,C,CPP,LD}FLAGS are deprecated and should be replaced by the new
flags added via commit f77bf01425b1 ("kbuild: introduce ccflags-y,
asflags-y and ldflags-y").

The following conversion scheme maybe used::

  EXTRA_AFLAGS    ->  asflags-y
  EXTRA_CFLAGS    ->  ccflags-y
  EXTRA_CPPFLAGS  ->  cppflags-y
  EXTRA_LDFLAGS   ->  ldflags-y

See:

  1. https://lore.kernel.org/lkml/20070930191054.GA15876@uranus.ravnborg.org/
  2. https://lore.kernel.org/lkml/1313384834-24433-12-git-send-email-lacombar@gmail.com/
  3. https://www.kernel.org/doc/html/latest/kbuild/makefiles.html#compilation-flags

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000252100.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 14 warnings, 6 checks, 193 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000252100.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
