WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#62: FILE: include/net/maclist.h:1:
+#ifndef _MACLIST_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#71: FILE: include/net/maclist.h:10:
+extern int maclist_add(const u8 id_to_add[6]);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#76: FILE: include/net/maclist.h:15:
+extern int maclist_count(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#82: FILE: include/net/maclist.h:21:
+extern int maclist_read(u8 (*buffer_for_id)[6], int index_of_id_to_return);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#82: FILE: include/net/maclist.h:21:
+extern int maclist_read(u8 (*buffer_for_id)[6], int index_of_id_to_return);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#88: FILE: drivers/net/maclist.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#89: FILE: drivers/net/maclist.c:2:
+ * drivers/net/maclist.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:NEW_TYPEDEFS: do not add new typedefs
#137: FILE: drivers/net/maclist.c:50:
+typedef struct maclist_entry {

WARNING:REPEATED_WORD: Possible repeated word: 'first'
#138: FILE: drivers/net/maclist.c:51:
+	struct maclist_entry *next;  /* Linked list, first first */

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#148: FILE: drivers/net/maclist.c:61:
+static maclist_entry_t *maclist_list = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#151: FILE: drivers/net/maclist.c:64:
+/*
+ * External interfaces.

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#156: FILE: drivers/net/maclist.c:69:
+int maclist_add(const u8 new_id[6]) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#160: FILE: drivers/net/maclist.c:73:
+		printk(KERN_ERR MACLIST_NAME ": invalid ethernet address\n");

WARNING:SIZEOF_PARENTHESIS: sizeof *new_entry should be sizeof(*new_entry)
#163: FILE: drivers/net/maclist.c:76:
+	new_entry = kmalloc(sizeof *new_entry, GFP_KERNEL);

WARNING:SIZEOF_PARENTHESIS: sizeof new_entry->id should be sizeof(new_entry->id)
#167: FILE: drivers/net/maclist.c:80:
+	memcpy(new_entry->id, new_id, sizeof new_entry->id);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#178: FILE: drivers/net/maclist.c:91:
+/*
+ * Return the current entry count (valid in any context).

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#180: FILE: drivers/net/maclist.c:93:
+int maclist_count(void) {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#194: FILE: drivers/net/maclist.c:107:
+/*
+ * Return the ID from the n'th entry (valid in any context),

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#197: FILE: drivers/net/maclist.c:110:
+int maclist_read(u8 (*id)[6], int n) {

WARNING:SIZEOF_PARENTHESIS: sizeof *id should be sizeof(*id)
#206: FILE: drivers/net/maclist.c:119:
+		memcpy(id, entry->id, sizeof *id);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#210: FILE: drivers/net/maclist.c:123:
+	printk(KERN_ERR MACLIST_NAME ": id does not exist\n");

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#216: FILE: drivers/net/maclist.c:129:
+/*
+ * Parameter parsing.  The option string is a list of MAC

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#220: FILE: drivers/net/maclist.c:133:
+static int __init maclist_setup(char *param) {

WARNING:SIZEOF_PARENTHESIS: sizeof id should be sizeof(id)
#224: FILE: drivers/net/maclist.c:137:
+	memset(id, 0, sizeof id);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#226: FILE: drivers/net/maclist.c:139:
+	if (param) do {

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LINE_SPACING: Missing a blank line after declarations
#228: FILE: drivers/net/maclist.c:141:
+		int digit = -1;
+		switch (*param) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#229: FILE: drivers/net/maclist.c:142:
+		case '0': digit = 0; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#230: FILE: drivers/net/maclist.c:143:
+		case '1': digit = 1; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#231: FILE: drivers/net/maclist.c:144:
+		case '2': digit = 2; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#232: FILE: drivers/net/maclist.c:145:
+		case '3': digit = 3; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#233: FILE: drivers/net/maclist.c:146:
+		case '4': digit = 4; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#234: FILE: drivers/net/maclist.c:147:
+		case '5': digit = 5; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#235: FILE: drivers/net/maclist.c:148:
+		case '6': digit = 6; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#236: FILE: drivers/net/maclist.c:149:
+		case '7': digit = 7; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#237: FILE: drivers/net/maclist.c:150:
+		case '8': digit = 8; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#238: FILE: drivers/net/maclist.c:151:
+		case '9': digit = 9; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#239: FILE: drivers/net/maclist.c:152:
+		case 'a': case 'A': digit = 10; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#240: FILE: drivers/net/maclist.c:153:
+		case 'b': case 'B': digit = 11; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#241: FILE: drivers/net/maclist.c:154:
+		case 'c': case 'C': digit = 12; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#242: FILE: drivers/net/maclist.c:155:
+		case 'd': case 'D': digit = 13; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#243: FILE: drivers/net/maclist.c:156:
+		case 'e': case 'E': digit = 14; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#244: FILE: drivers/net/maclist.c:157:
+		case 'f': case 'F': digit = 15; break;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#247: FILE: drivers/net/maclist.c:160:
+				bytes = (bytes+1) & ~1;
 				              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#255: FILE: drivers/net/maclist.c:168:
+			/*fall through*/

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#261: FILE: drivers/net/maclist.c:174:
+			printk(KERN_ERR MACLIST_NAME ": invalid character <%c[%d]>\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#262: FILE: drivers/net/maclist.c:175:
+			printk(KERN_ERR MACLIST_NAME ": invalid character <%c[%d]>\n",
+					*param, *param);

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#267: FILE: drivers/net/maclist.c:180:
+			id[bytes>>1] = (id[bytes>>1] << 4) + digit; break;
 			        ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#267: FILE: drivers/net/maclist.c:180:
+			id[bytes>>1] = (id[bytes>>1] << 4) + digit; break;
 			                        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#274: FILE: drivers/net/maclist.c:187:
+			int rc = maclist_add(id);
+			if (rc)

WARNING:SIZEOF_PARENTHESIS: sizeof id should be sizeof(id)
#278: FILE: drivers/net/maclist.c:191:
+			memset(id, 0, sizeof id);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#289: FILE: drivers/net/maclist.c:202:
+/*
+ * procfs support, if compiled in.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#293: FILE: drivers/net/maclist.c:206:
+/*
+ * Character device read

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#295: FILE: drivers/net/maclist.c:208:
+static int maclist_getchar(off_t n) {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#312: FILE: drivers/net/maclist.c:225:
+	b = n/3;
 	     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#313: FILE: drivers/net/maclist.c:226:
+	switch (n - b*3) {
 	             ^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#321: FILE: drivers/net/maclist.c:234:
+/*
+ * The extensively undocumented proc_read_t callback is implemented here.

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#339: FILE: drivers/net/maclist.c:252:
+static int maclist_proc_read(char *buffer, char **start, off_t offset,
+		int count, int *peof, void *dat) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#340: FILE: drivers/net/maclist.c:253:
+static int maclist_proc_read(char *buffer, char **start, off_t offset,
+		int count, int *peof, void *dat) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#348: FILE: drivers/net/maclist.c:261:
+		int ch = maclist_getchar(offset++);
+		if (ch == -1) {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#361: FILE: drivers/net/maclist.c:274:
+/*
+ * Finally, the init/exit functions.

WARNING:LINE_SPACING: Missing a blank line after declarations
#374: FILE: drivers/net/maclist.c:287:
+		maclist_entry_t *head = list;
+		list = head->next;

WARNING:SIZEOF_PARENTHESIS: sizeof ids should be sizeof(ids)
#381: FILE: drivers/net/maclist.c:294:
+module_param_string(ids, ids, sizeof ids, 0);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#384: FILE: drivers/net/maclist.c:297:
+__setup("maclist_ids=", maclist_setup);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#395: FILE: drivers/net/maclist.c:308:
+	(void)create_proc_read_entry(MACLIST_NAME, S_IRUGO, proc_net, maclist_proc_read, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000102728.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 24 errors, 29 warnings, 11 checks, 365 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000102728.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
