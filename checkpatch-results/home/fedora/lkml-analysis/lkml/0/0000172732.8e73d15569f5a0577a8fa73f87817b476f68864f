WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#49: FILE: drivers/media/dvb/frontends/Kconfig:43:
+config DVB_S5H1420
+	tristate "Samsung S5H1420 based"
+	depends on DVB_CORE
+	help
+	  A DVB-S tuner module. Say Y when you want to support this frontend.
+
 comment "DVB-T (terrestrial) frontends"
 	depends on DVB_CORE
 

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#72: FILE: drivers/media/dvb/frontends/s5h1420.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#73: FILE: drivers/media/dvb/frontends/s5h1420.c:2:
+/*
+Driver for Samsung S5H1420 QPSK Demodulator

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#89: FILE: drivers/media/dvb/frontends/s5h1420.c:18:
+along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#90: FILE: drivers/media/dvb/frontends/s5h1420.c:19:
+Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#104: FILE: drivers/media/dvb/frontends/s5h1420.c:33:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#109: FILE: drivers/media/dvb/frontends/s5h1420.c:38:
+	struct i2c_adapter* i2c;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct dvb_frontend_ops should normally be const
#110: FILE: drivers/media/dvb/frontends/s5h1420.c:39:
+	struct dvb_frontend_ops ops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#111: FILE: drivers/media/dvb/frontends/s5h1420.c:40:
+	const struct s5h1420_config* config;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#121: FILE: drivers/media/dvb/frontends/s5h1420.c:50:
+static u32 s5h1420_getsymbolrate(struct s5h1420_state* state);

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#122: FILE: drivers/media/dvb/frontends/s5h1420.c:51:
+static int s5h1420_get_tune_settings(struct dvb_frontend* fe, struct dvb_frontend_tune_settings* fesettings);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#122: FILE: drivers/media/dvb/frontends/s5h1420.c:51:
+static int s5h1420_get_tune_settings(struct dvb_frontend* fe, struct dvb_frontend_tune_settings* fesettings);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#122: FILE: drivers/media/dvb/frontends/s5h1420.c:51:
+static int s5h1420_get_tune_settings(struct dvb_frontend* fe, struct dvb_frontend_tune_settings* fesettings);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#124: FILE: drivers/media/dvb/frontends/s5h1420.c:53:
+
+

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#125: FILE: drivers/media/dvb/frontends/s5h1420.c:54:
+static int debug = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#126: FILE: drivers/media/dvb/frontends/s5h1420.c:55:
+#define dprintk if (debug) printk

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#128: FILE: drivers/media/dvb/frontends/s5h1420.c:57:
+static int s5h1420_writereg (struct s5h1420_state* state, u8 reg, u8 data)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#128: FILE: drivers/media/dvb/frontends/s5h1420.c:57:
+static int s5h1420_writereg (struct s5h1420_state* state, u8 reg, u8 data)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#130: FILE: drivers/media/dvb/frontends/s5h1420.c:59:
+	u8 buf [] = { reg, data };

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#131: FILE: drivers/media/dvb/frontends/s5h1420.c:60:
+	struct i2c_msg msg = { .addr = state->config->demod_address, .flags = 0, .buf = buf, .len = 2 };

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#134: FILE: drivers/media/dvb/frontends/s5h1420.c:63:
+	if ((err = i2c_transfer (state->i2c, &msg, 1)) != 1) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#134: FILE: drivers/media/dvb/frontends/s5h1420.c:63:
+	if ((err = i2c_transfer (state->i2c, &msg, 1)) != 1) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#135: FILE: drivers/media/dvb/frontends/s5h1420.c:64:
+		dprintk ("%s: writereg error (err == %i, reg == 0x%02x, data == 0x%02x)\n", __FUNCTION__, err, reg, data);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#135: FILE: drivers/media/dvb/frontends/s5h1420.c:64:
+		dprintk ("%s: writereg error (err == %i, reg == 0x%02x, data == 0x%02x)\n", __FUNCTION__, err, reg, data);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#135: FILE: drivers/media/dvb/frontends/s5h1420.c:64:
+		dprintk ("%s: writereg error (err == %i, reg == 0x%02x, data == 0x%02x)\n", __FUNCTION__, err, reg, data);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#142: FILE: drivers/media/dvb/frontends/s5h1420.c:71:
+static u8 s5h1420_readreg (struct s5h1420_state* state, u8 reg)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#142: FILE: drivers/media/dvb/frontends/s5h1420.c:71:
+static u8 s5h1420_readreg (struct s5h1420_state* state, u8 reg)

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#145: FILE: drivers/media/dvb/frontends/s5h1420.c:74:
+	u8 b0 [] = { reg };

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#146: FILE: drivers/media/dvb/frontends/s5h1420.c:75:
+	u8 b1 [] = { 0 };

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#147: FILE: drivers/media/dvb/frontends/s5h1420.c:76:
+	struct i2c_msg msg1 = { .addr = state->config->demod_address, .flags = 0, .buf = b0, .len = 1 };

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#148: FILE: drivers/media/dvb/frontends/s5h1420.c:77:
+	struct i2c_msg msg2 = { .addr = state->config->demod_address, .flags = I2C_M_RD, .buf = b1, .len = 1 };

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#150: FILE: drivers/media/dvb/frontends/s5h1420.c:79:
+	if ((ret = i2c_transfer (state->i2c, &msg1, 1)) != 1)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#150: FILE: drivers/media/dvb/frontends/s5h1420.c:79:
+	if ((ret = i2c_transfer (state->i2c, &msg1, 1)) != 1)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#153: FILE: drivers/media/dvb/frontends/s5h1420.c:82:
+	if ((ret = i2c_transfer (state->i2c, &msg2, 1)) != 1)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#153: FILE: drivers/media/dvb/frontends/s5h1420.c:82:
+	if ((ret = i2c_transfer (state->i2c, &msg2, 1)) != 1)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#159: FILE: drivers/media/dvb/frontends/s5h1420.c:88:
+static int s5h1420_set_voltage (struct dvb_frontend* fe, fe_sec_voltage_t voltage)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#159: FILE: drivers/media/dvb/frontends/s5h1420.c:88:
+static int s5h1420_set_voltage (struct dvb_frontend* fe, fe_sec_voltage_t voltage)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#161: FILE: drivers/media/dvb/frontends/s5h1420.c:90:
+	struct s5h1420_state* state = fe->demodulator_priv;

ERROR:SPACING: space required before the open parenthesis '('
#163: FILE: drivers/media/dvb/frontends/s5h1420.c:92:
+	switch(voltage) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#180: FILE: drivers/media/dvb/frontends/s5h1420.c:109:
+static int s5h1420_set_tone (struct dvb_frontend* fe, fe_sec_tone_mode_t tone)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#180: FILE: drivers/media/dvb/frontends/s5h1420.c:109:
+static int s5h1420_set_tone (struct dvb_frontend* fe, fe_sec_tone_mode_t tone)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#182: FILE: drivers/media/dvb/frontends/s5h1420.c:111:
+	struct s5h1420_state* state = fe->demodulator_priv;

ERROR:SPACING: space required before the open parenthesis '('
#184: FILE: drivers/media/dvb/frontends/s5h1420.c:113:
+	switch(tone) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#197: FILE: drivers/media/dvb/frontends/s5h1420.c:126:
+static int s5h1420_send_master_cmd (struct dvb_frontend* fe, struct dvb_diseqc_master_cmd* cmd)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#197: FILE: drivers/media/dvb/frontends/s5h1420.c:126:
+static int s5h1420_send_master_cmd (struct dvb_frontend* fe, struct dvb_diseqc_master_cmd* cmd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#197: FILE: drivers/media/dvb/frontends/s5h1420.c:126:
+static int s5h1420_send_master_cmd (struct dvb_frontend* fe, struct dvb_diseqc_master_cmd* cmd)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#199: FILE: drivers/media/dvb/frontends/s5h1420.c:128:
+	struct s5h1420_state* state = fe->demodulator_priv;

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#208: FILE: drivers/media/dvb/frontends/s5h1420.c:137:
+	msleep(15);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#211: FILE: drivers/media/dvb/frontends/s5h1420.c:140:
+	for(i=0; i< cmd->msg_len; i++) {
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxW)
#211: FILE: drivers/media/dvb/frontends/s5h1420.c:140:
+	for(i=0; i< cmd->msg_len; i++) {
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#211: FILE: drivers/media/dvb/frontends/s5h1420.c:140:
+	for(i=0; i< cmd->msg_len; i++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#211: FILE: drivers/media/dvb/frontends/s5h1420.c:140:
+	for(i=0; i< cmd->msg_len; i++) {
+		s5h1420_writereg(state, 0x3c + i, cmd->msg[i]);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#216: FILE: drivers/media/dvb/frontends/s5h1420.c:145:
+	s5h1420_writereg(state, 0x3b, s5h1420_readreg(state, 0x3b) | ((cmd->msg_len-1) << 4) | 0x08);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#216: FILE: drivers/media/dvb/frontends/s5h1420.c:145:
+	s5h1420_writereg(state, 0x3b, s5h1420_readreg(state, 0x3b) | ((cmd->msg_len-1) << 4) | 0x08);
 	                                                                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#219: FILE: drivers/media/dvb/frontends/s5h1420.c:148:
+	timeout = jiffies + ((100*HZ) / 1000);
 	                         ^

ERROR:SPACING: space required before the open parenthesis '('
#220: FILE: drivers/media/dvb/frontends/s5h1420.c:149:
+	while(time_before(jiffies, timeout)) {

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#224: FILE: drivers/media/dvb/frontends/s5h1420.c:153:
+		msleep(5);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#231: FILE: drivers/media/dvb/frontends/s5h1420.c:160:
+	msleep(15);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#235: FILE: drivers/media/dvb/frontends/s5h1420.c:164:
+static int s5h1420_recv_slave_reply (struct dvb_frontend* fe, struct dvb_diseqc_slave_reply* reply)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#235: FILE: drivers/media/dvb/frontends/s5h1420.c:164:
+static int s5h1420_recv_slave_reply (struct dvb_frontend* fe, struct dvb_diseqc_slave_reply* reply)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#235: FILE: drivers/media/dvb/frontends/s5h1420.c:164:
+static int s5h1420_recv_slave_reply (struct dvb_frontend* fe, struct dvb_diseqc_slave_reply* reply)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#237: FILE: drivers/media/dvb/frontends/s5h1420.c:166:
+	struct s5h1420_state* state = fe->demodulator_priv;

WARNING:TYPO_SPELLING: 'recieve' may be misspelled - perhaps 'receive'?
#244: FILE: drivers/media/dvb/frontends/s5h1420.c:173:
+	/* setup for DISEQC recieve */
 	                    ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LONG_LINE_COMMENT: line length of 114 exceeds 100 columns
#246: FILE: drivers/media/dvb/frontends/s5h1420.c:175:
+	s5h1420_writereg(state, 0x3b, 0x82); /* FIXME: guess - do we need to set DIS_RDY(0x08) in receive mode? */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#247: FILE: drivers/media/dvb/frontends/s5h1420.c:176:
+	msleep(15);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#250: FILE: drivers/media/dvb/frontends/s5h1420.c:179:
+	timeout = jiffies + ((reply->timeout*HZ) / 1000);
 	                                    ^

ERROR:SPACING: space required before the open parenthesis '('
#251: FILE: drivers/media/dvb/frontends/s5h1420.c:180:
+	while(time_before(jiffies, timeout)) {

WARNING:LONG_LINE_COMMENT: line length of 114 exceeds 100 columns
#252: FILE: drivers/media/dvb/frontends/s5h1420.c:181:
+		if (!(s5h1420_readreg(state, 0x3b) & 0x80)) /* FIXME: do we test DIS_RDY(0x08) or RCV_EN(0x80)? */

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#255: FILE: drivers/media/dvb/frontends/s5h1420.c:184:
+		msleep(5);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#263: FILE: drivers/media/dvb/frontends/s5h1420.c:192:
+	 * beyond "error flag for diseqc receive data :( */

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#278: FILE: drivers/media/dvb/frontends/s5h1420.c:207:
+	for(i=0; i< length; i++) {
 	     ^

ERROR:SPACING: spaces required around that '<' (ctx:VxW)
#278: FILE: drivers/media/dvb/frontends/s5h1420.c:207:
+	for(i=0; i< length; i++) {
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#278: FILE: drivers/media/dvb/frontends/s5h1420.c:207:
+	for(i=0; i< length; i++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#278: FILE: drivers/media/dvb/frontends/s5h1420.c:207:
+	for(i=0; i< length; i++) {
+		reply->msg[i] = s5h1420_readreg(state, 0x3c + i);
+	}

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#285: FILE: drivers/media/dvb/frontends/s5h1420.c:214:
+	msleep(15);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#289: FILE: drivers/media/dvb/frontends/s5h1420.c:218:
+static int s5h1420_send_burst (struct dvb_frontend* fe, fe_sec_mini_cmd_t minicmd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#289: FILE: drivers/media/dvb/frontends/s5h1420.c:218:
+static int s5h1420_send_burst (struct dvb_frontend* fe, fe_sec_mini_cmd_t minicmd)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#291: FILE: drivers/media/dvb/frontends/s5h1420.c:220:
+	struct s5h1420_state* state = fe->demodulator_priv;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#301: FILE: drivers/media/dvb/frontends/s5h1420.c:230:
+	if (minicmd == SEC_MINI_B) {
+		s5h1420_writereg(state, 0x3b, s5h1420_readreg(state, 0x3b) | 0x04);
+	}

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#304: FILE: drivers/media/dvb/frontends/s5h1420.c:233:
+	msleep(15);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#310: FILE: drivers/media/dvb/frontends/s5h1420.c:239:
+	timeout = jiffies + ((20*HZ) / 1000);
 	                        ^

ERROR:SPACING: space required before the open parenthesis '('
#311: FILE: drivers/media/dvb/frontends/s5h1420.c:240:
+	while(time_before(jiffies, timeout)) {

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#315: FILE: drivers/media/dvb/frontends/s5h1420.c:244:
+		msleep(5);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#322: FILE: drivers/media/dvb/frontends/s5h1420.c:251:
+	msleep(15);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#326: FILE: drivers/media/dvb/frontends/s5h1420.c:255:
+static fe_status_t s5h1420_get_status_bits(struct s5h1420_state* state)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#341: FILE: drivers/media/dvb/frontends/s5h1420.c:270:
+	if (status == (FE_HAS_SIGNAL|FE_HAS_CARRIER|FE_HAS_VITERBI|FE_HAS_SYNC))
 	                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#341: FILE: drivers/media/dvb/frontends/s5h1420.c:270:
+	if (status == (FE_HAS_SIGNAL|FE_HAS_CARRIER|FE_HAS_VITERBI|FE_HAS_SYNC))
 	                                           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#341: FILE: drivers/media/dvb/frontends/s5h1420.c:270:
+	if (status == (FE_HAS_SIGNAL|FE_HAS_CARRIER|FE_HAS_VITERBI|FE_HAS_SYNC))
 	                                                          ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#347: FILE: drivers/media/dvb/frontends/s5h1420.c:276:
+static int s5h1420_read_status(struct dvb_frontend* fe, fe_status_t* status)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#347: FILE: drivers/media/dvb/frontends/s5h1420.c:276:
+static int s5h1420_read_status(struct dvb_frontend* fe, fe_status_t* status)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#349: FILE: drivers/media/dvb/frontends/s5h1420.c:278:
+	struct s5h1420_state* state = fe->demodulator_priv;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!status"
#352: FILE: drivers/media/dvb/frontends/s5h1420.c:281:
+	if (status == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#359: FILE: drivers/media/dvb/frontends/s5h1420.c:288:
+	/* fix for FEC 5/6 inversion issue - if it doesn't quite lock, invert the inversion,
+	wait a bit and check again */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#359: FILE: drivers/media/dvb/frontends/s5h1420.c:288:
+	wait a bit and check again */

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#360: FILE: drivers/media/dvb/frontends/s5h1420.c:289:
+	if (*status == (FE_HAS_SIGNAL|FE_HAS_CARRIER|FE_HAS_VITERBI)) {
 	                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#360: FILE: drivers/media/dvb/frontends/s5h1420.c:289:
+	if (*status == (FE_HAS_SIGNAL|FE_HAS_CARRIER|FE_HAS_VITERBI)) {
 	                                            ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!state->postlocked'
#375: FILE: drivers/media/dvb/frontends/s5h1420.c:304:
+	if ((*status & FE_HAS_LOCK) && (!state->postlocked)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#376: FILE: drivers/media/dvb/frontends/s5h1420.c:305:
+	if ((*status & FE_HAS_LOCK) && (!state->postlocked)) {
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#379: FILE: drivers/media/dvb/frontends/s5h1420.c:308:
+		u32 tmp = s5h1420_getsymbolrate(state);
+		switch(s5h1420_readreg(state, 0x32) & 0x07) {

ERROR:SPACING: space required before the open parenthesis '('
#379: FILE: drivers/media/dvb/frontends/s5h1420.c:308:
+		switch(s5h1420_readreg(state, 0x32) & 0x07) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#436: FILE: drivers/media/dvb/frontends/s5h1420.c:365:
+static int s5h1420_read_ber(struct dvb_frontend* fe, u32* ber)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#436: FILE: drivers/media/dvb/frontends/s5h1420.c:365:
+static int s5h1420_read_ber(struct dvb_frontend* fe, u32* ber)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#438: FILE: drivers/media/dvb/frontends/s5h1420.c:367:
+	struct s5h1420_state* state = fe->demodulator_priv;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#445: FILE: drivers/media/dvb/frontends/s5h1420.c:374:
+static int s5h1420_read_signal_strength(struct dvb_frontend* fe, u16* strength)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#445: FILE: drivers/media/dvb/frontends/s5h1420.c:374:
+static int s5h1420_read_signal_strength(struct dvb_frontend* fe, u16* strength)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#447: FILE: drivers/media/dvb/frontends/s5h1420.c:376:
+	struct s5h1420_state* state = fe->demodulator_priv;

CHECK:SPACING: No space is necessary after a cast
#451: FILE: drivers/media/dvb/frontends/s5h1420.c:380:
+	return (int) ((val << 8) | val);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#454: FILE: drivers/media/dvb/frontends/s5h1420.c:383:
+static int s5h1420_read_ucblocks(struct dvb_frontend* fe, u32* ucblocks)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#454: FILE: drivers/media/dvb/frontends/s5h1420.c:383:
+static int s5h1420_read_ucblocks(struct dvb_frontend* fe, u32* ucblocks)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#456: FILE: drivers/media/dvb/frontends/s5h1420.c:385:
+	struct s5h1420_state* state = fe->demodulator_priv;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#463: FILE: drivers/media/dvb/frontends/s5h1420.c:392:
+static void s5h1420_reset(struct s5h1420_state* state)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#465: FILE: drivers/media/dvb/frontends/s5h1420.c:394:
+	s5h1420_writereg (state, 0x01, 0x08);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#466: FILE: drivers/media/dvb/frontends/s5h1420.c:395:
+	s5h1420_writereg (state, 0x01, 0x00);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#467: FILE: drivers/media/dvb/frontends/s5h1420.c:396:
+	udelay(10);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#470: FILE: drivers/media/dvb/frontends/s5h1420.c:399:
+static void s5h1420_setsymbolrate(struct s5h1420_state* state, struct dvb_frontend_parameters *p)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#474: FILE: drivers/media/dvb/frontends/s5h1420.c:403:
+	val = (p->u.qpsk.symbol_rate / 1000) * (1<<24);
 	                                         ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#475: FILE: drivers/media/dvb/frontends/s5h1420.c:404:
+	if (p->u.qpsk.symbol_rate <= 21000000) {
+		val *= 2;
+	}

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#487: FILE: drivers/media/dvb/frontends/s5h1420.c:416:
+static u32 s5h1420_getsymbolrate(struct s5h1420_state* state)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#502: FILE: drivers/media/dvb/frontends/s5h1420.c:431:
+	do_div(val, ((1<<24) * sampling));
 	               ^

CHECK:SPACING: No space is necessary after a cast
#504: FILE: drivers/media/dvb/frontends/s5h1420.c:433:
+	return (u32) (val * 1000);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#507: FILE: drivers/media/dvb/frontends/s5h1420.c:436:
+static void s5h1420_setfreqoffset(struct s5h1420_state* state, int freqoffset)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#512: FILE: drivers/media/dvb/frontends/s5h1420.c:441:
+	 * divide fclk by 1000000 to get the correct value. */

CHECK:SPACING: No space is necessary after a cast
#513: FILE: drivers/media/dvb/frontends/s5h1420.c:442:
+	val = -(int) ((freqoffset * (1<<24)) / (state->fclk / 1000000));

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#513: FILE: drivers/media/dvb/frontends/s5h1420.c:442:
+	val = -(int) ((freqoffset * (1<<24)) / (state->fclk / 1000000));
 	                              ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#522: FILE: drivers/media/dvb/frontends/s5h1420.c:451:
+static int s5h1420_getfreqoffset(struct s5h1420_state* state)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#536: FILE: drivers/media/dvb/frontends/s5h1420.c:465:
+	 * divide fclk by 1000000 to get the correct value. */

ERROR:SPACING: space prohibited after that '-' (ctx:WxW)
#537: FILE: drivers/media/dvb/frontends/s5h1420.c:466:
+	val = - ((val * (state->fclk/1000000)) / (1<<24));
 	      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#537: FILE: drivers/media/dvb/frontends/s5h1420.c:466:
+	val = - ((val * (state->fclk/1000000)) / (1<<24));
 	                            ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#537: FILE: drivers/media/dvb/frontends/s5h1420.c:466:
+	val = - ((val * (state->fclk/1000000)) / (1<<24));
 	                                           ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#542: FILE: drivers/media/dvb/frontends/s5h1420.c:471:
+static void s5h1420_setfec(struct s5h1420_state* state, struct dvb_frontend_parameters *p)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->u.qpsk.fec_inner == FEC_AUTO'
#544: FILE: drivers/media/dvb/frontends/s5h1420.c:473:
+	if ((p->u.qpsk.fec_inner == FEC_AUTO) || (p->inversion == INVERSION_AUTO)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->inversion == INVERSION_AUTO'
#544: FILE: drivers/media/dvb/frontends/s5h1420.c:473:
+	if ((p->u.qpsk.fec_inner == FEC_AUTO) || (p->inversion == INVERSION_AUTO)) {

ERROR:SPACING: space required before the open parenthesis '('
#548: FILE: drivers/media/dvb/frontends/s5h1420.c:477:
+		switch(p->u.qpsk.fec_inner) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#585: FILE: drivers/media/dvb/frontends/s5h1420.c:514:
+static fe_code_rate_t s5h1420_getfec(struct s5h1420_state* state)

ERROR:SPACING: space required before the open parenthesis '('
#587: FILE: drivers/media/dvb/frontends/s5h1420.c:516:
+	switch(s5h1420_readreg(state, 0x32) & 0x07) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#610: FILE: drivers/media/dvb/frontends/s5h1420.c:539:
+static void s5h1420_setinversion(struct s5h1420_state* state, struct dvb_frontend_parameters *p)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->u.qpsk.fec_inner == FEC_AUTO'
#612: FILE: drivers/media/dvb/frontends/s5h1420.c:541:
+	if ((p->u.qpsk.fec_inner == FEC_AUTO) || (p->inversion == INVERSION_AUTO)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->inversion == INVERSION_AUTO'
#612: FILE: drivers/media/dvb/frontends/s5h1420.c:541:
+	if ((p->u.qpsk.fec_inner == FEC_AUTO) || (p->inversion == INVERSION_AUTO)) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#626: FILE: drivers/media/dvb/frontends/s5h1420.c:555:
+static fe_spectral_inversion_t s5h1420_getinversion(struct s5h1420_state* state)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#634: FILE: drivers/media/dvb/frontends/s5h1420.c:563:
+static int s5h1420_set_frontend(struct dvb_frontend* fe, struct dvb_frontend_parameters *p)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#636: FILE: drivers/media/dvb/frontends/s5h1420.c:565:
+	struct s5h1420_state* state = fe->demodulator_priv;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'frequency_delta < fesettings.max_drift'
#644: FILE: drivers/media/dvb/frontends/s5h1420.c:573:
+	if ((frequency_delta > -fesettings.max_drift) && (frequency_delta < fesettings.max_drift) &&
+	    (frequency_delta != 0) &&
+	    (state->fec_inner == p->u.qpsk.fec_inner) &&
+	    (state->symbol_rate == p->u.qpsk.symbol_rate)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'frequency_delta != 0'
#644: FILE: drivers/media/dvb/frontends/s5h1420.c:573:
+	if ((frequency_delta > -fesettings.max_drift) && (frequency_delta < fesettings.max_drift) &&
+	    (frequency_delta != 0) &&
+	    (state->fec_inner == p->u.qpsk.fec_inner) &&
+	    (state->symbol_rate == p->u.qpsk.symbol_rate)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'state->fec_inner == p->u.qpsk.fec_inner'
#644: FILE: drivers/media/dvb/frontends/s5h1420.c:573:
+	if ((frequency_delta > -fesettings.max_drift) && (frequency_delta < fesettings.max_drift) &&
+	    (frequency_delta != 0) &&
+	    (state->fec_inner == p->u.qpsk.fec_inner) &&
+	    (state->symbol_rate == p->u.qpsk.symbol_rate)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'state->symbol_rate == p->u.qpsk.symbol_rate'
#644: FILE: drivers/media/dvb/frontends/s5h1420.c:573:
+	if ((frequency_delta > -fesettings.max_drift) && (frequency_delta < fesettings.max_drift) &&
+	    (frequency_delta != 0) &&
+	    (state->fec_inner == p->u.qpsk.fec_inner) &&
+	    (state->symbol_rate == p->u.qpsk.symbol_rate)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#648: FILE: drivers/media/dvb/frontends/s5h1420.c:577:
+	    (state->symbol_rate == p->u.qpsk.symbol_rate)) {
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#658: FILE: drivers/media/dvb/frontends/s5h1420.c:587:
+		s5h1420_writereg (state, 0x02, s5h1420_readreg(state,0x02) | 1);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#658: FILE: drivers/media/dvb/frontends/s5h1420.c:587:
+		s5h1420_writereg (state, 0x02, s5h1420_readreg(state,0x02) | 1);
 		                                                    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#660: FILE: drivers/media/dvb/frontends/s5h1420.c:589:
+		s5h1420_writereg (state, 0x02, s5h1420_readreg(state,0x02) & 0xfe);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#660: FILE: drivers/media/dvb/frontends/s5h1420.c:589:
+		s5h1420_writereg (state, 0x02, s5h1420_readreg(state,0x02) & 0xfe);
 		                                                    ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#714: FILE: drivers/media/dvb/frontends/s5h1420.c:643:
+static int s5h1420_get_frontend(struct dvb_frontend* fe, struct dvb_frontend_parameters *p)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#716: FILE: drivers/media/dvb/frontends/s5h1420.c:645:
+	struct s5h1420_state* state = fe->demodulator_priv;

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#726: FILE: drivers/media/dvb/frontends/s5h1420.c:655:
+static int s5h1420_get_tune_settings(struct dvb_frontend* fe, struct dvb_frontend_tune_settings* fesettings)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#726: FILE: drivers/media/dvb/frontends/s5h1420.c:655:
+static int s5h1420_get_tune_settings(struct dvb_frontend* fe, struct dvb_frontend_tune_settings* fesettings)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#726: FILE: drivers/media/dvb/frontends/s5h1420.c:655:
+static int s5h1420_get_tune_settings(struct dvb_frontend* fe, struct dvb_frontend_tune_settings* fesettings)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#757: FILE: drivers/media/dvb/frontends/s5h1420.c:686:
+static int s5h1420_init (struct dvb_frontend* fe)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#757: FILE: drivers/media/dvb/frontends/s5h1420.c:686:
+static int s5h1420_init (struct dvb_frontend* fe)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#759: FILE: drivers/media/dvb/frontends/s5h1420.c:688:
+	struct s5h1420_state* state = fe->demodulator_priv;

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#763: FILE: drivers/media/dvb/frontends/s5h1420.c:692:
+	msleep(10);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#768: FILE: drivers/media/dvb/frontends/s5h1420.c:697:
+		s5h1420_writereg (state, 0x02, s5h1420_readreg(state,0x02) | 1);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#768: FILE: drivers/media/dvb/frontends/s5h1420.c:697:
+		s5h1420_writereg (state, 0x02, s5h1420_readreg(state,0x02) | 1);
 		                                                    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#770: FILE: drivers/media/dvb/frontends/s5h1420.c:699:
+		s5h1420_writereg (state, 0x02, s5h1420_readreg(state,0x02) & 0xfe);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#770: FILE: drivers/media/dvb/frontends/s5h1420.c:699:
+		s5h1420_writereg (state, 0x02, s5h1420_readreg(state,0x02) & 0xfe);
 		                                                    ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#776: FILE: drivers/media/dvb/frontends/s5h1420.c:705:
+static int s5h1420_sleep(struct dvb_frontend* fe)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#778: FILE: drivers/media/dvb/frontends/s5h1420.c:707:
+	struct s5h1420_state* state = fe->demodulator_priv;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#783: FILE: drivers/media/dvb/frontends/s5h1420.c:712:
+static void s5h1420_release(struct dvb_frontend* fe)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#785: FILE: drivers/media/dvb/frontends/s5h1420.c:714:
+	struct s5h1420_state* state = fe->demodulator_priv;

WARNING:LINE_SPACING: Missing a blank line after declarations
#786: FILE: drivers/media/dvb/frontends/s5h1420.c:715:
+	struct s5h1420_state* state = fe->demodulator_priv;
+	kfree(state);

WARNING:CONST_STRUCT: struct dvb_frontend_ops should normally be const
#789: FILE: drivers/media/dvb/frontends/s5h1420.c:718:
+static struct dvb_frontend_ops s5h1420_ops;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#791: FILE: drivers/media/dvb/frontends/s5h1420.c:720:
+struct dvb_frontend* s5h1420_attach(const struct s5h1420_config* config, struct i2c_adapter* i2c)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#791: FILE: drivers/media/dvb/frontends/s5h1420.c:720:
+struct dvb_frontend* s5h1420_attach(const struct s5h1420_config* config, struct i2c_adapter* i2c)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#791: FILE: drivers/media/dvb/frontends/s5h1420.c:720:
+struct dvb_frontend* s5h1420_attach(const struct s5h1420_config* config, struct i2c_adapter* i2c)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#793: FILE: drivers/media/dvb/frontends/s5h1420.c:722:
+	struct s5h1420_state* state = NULL;

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*state)...) over kmalloc(sizeof(struct s5h1420_state)...)
#797: FILE: drivers/media/dvb/frontends/s5h1420.c:726:
+	state = kmalloc(sizeof(struct s5h1420_state), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!state"
#798: FILE: drivers/media/dvb/frontends/s5h1420.c:727:
+	if (state == NULL)

WARNING:CONST_STRUCT: struct dvb_frontend_ops should normally be const
#804: FILE: drivers/media/dvb/frontends/s5h1420.c:733:
+	memcpy(&state->ops, &s5h1420_ops, sizeof(struct dvb_frontend_ops));

WARNING:CONST_STRUCT: struct dvb_frontend_ops should normally be const
#826: FILE: drivers/media/dvb/frontends/s5h1420.c:755:
+static struct dvb_frontend_ops s5h1420_ops = {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#827: FILE: drivers/media/dvb/frontends/s5h1420.c:756:
+static struct dvb_frontend_ops s5h1420_ops = {
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#871: FILE: drivers/media/dvb/frontends/s5h1420.c:800:
+EXPORT_SYMBOL(s5h1420_attach);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#877: FILE: drivers/media/dvb/frontends/s5h1420.h:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#878: FILE: drivers/media/dvb/frontends/s5h1420.h:2:
+/*
+    Driver for S5H1420 QPSK Demodulators

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#894: FILE: drivers/media/dvb/frontends/s5h1420.h:18:
+    along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#895: FILE: drivers/media/dvb/frontends/s5h1420.h:19:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#905: FILE: drivers/media/dvb/frontends/s5h1420.h:29:
+struct s5h1420_config
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#910: FILE: drivers/media/dvb/frontends/s5h1420.h:34:
+	int (*pll_init)(struct dvb_frontend* fe);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#911: FILE: drivers/media/dvb/frontends/s5h1420.h:35:
+	int (*pll_set)(struct dvb_frontend* fe, struct dvb_frontend_parameters* params, u32* freqout);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#911: FILE: drivers/media/dvb/frontends/s5h1420.h:35:
+	int (*pll_set)(struct dvb_frontend* fe, struct dvb_frontend_parameters* params, u32* freqout);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#911: FILE: drivers/media/dvb/frontends/s5h1420.h:35:
+	int (*pll_set)(struct dvb_frontend* fe, struct dvb_frontend_parameters* params, u32* freqout);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#911: FILE: drivers/media/dvb/frontends/s5h1420.h:35:
+	int (*pll_set)(struct dvb_frontend* fe, struct dvb_frontend_parameters* params, u32* freqout);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#914: FILE: drivers/media/dvb/frontends/s5h1420.h:38:
+extern struct dvb_frontend* s5h1420_attach(const struct s5h1420_config* config,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#914: FILE: drivers/media/dvb/frontends/s5h1420.h:38:
+extern struct dvb_frontend* s5h1420_attach(const struct s5h1420_config* config,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#914: FILE: drivers/media/dvb/frontends/s5h1420.h:38:
+extern struct dvb_frontend* s5h1420_attach(const struct s5h1420_config* config,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:CODE_INDENT: code indent should use tabs where possible
#915: FILE: drivers/media/dvb/frontends/s5h1420.h:39:
+             struct i2c_adapter* i2c);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#915: FILE: drivers/media/dvb/frontends/s5h1420.h:39:
+extern struct dvb_frontend* s5h1420_attach(const struct s5h1420_config* config,
+             struct i2c_adapter* i2c);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#915: FILE: drivers/media/dvb/frontends/s5h1420.h:39:
+             struct i2c_adapter* i2c);$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#915: FILE: drivers/media/dvb/frontends/s5h1420.h:39:
+             struct i2c_adapter* i2c);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#976: FILE: drivers/media/dvb/ttpci/budget.c:181:
+static int lnbp21_set_voltage(struct dvb_frontend* fe, fe_sec_voltage_t voltage)

CHECK:SPACING: No space is necessary after a cast
#978: FILE: drivers/media/dvb/ttpci/budget.c:183:
+	struct budget* budget = (struct budget*) fe->dvb->priv;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#978: FILE: drivers/media/dvb/ttpci/budget.c:183:
+	struct budget* budget = (struct budget*) fe->dvb->priv;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#978: FILE: drivers/media/dvb/ttpci/budget.c:183:
+	struct budget* budget = (struct budget*) fe->dvb->priv;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#982: FILE: drivers/media/dvb/ttpci/budget.c:187:
+	if (i2c_transfer (&budget->i2c_adap, &msg, 1) != 1) return -EIO;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#982: FILE: drivers/media/dvb/ttpci/budget.c:187:
+	if (i2c_transfer (&budget->i2c_adap, &msg, 1) != 1) return -EIO;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required before the open parenthesis '('
#984: FILE: drivers/media/dvb/ttpci/budget.c:189:
+	switch(voltage) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#999: FILE: drivers/media/dvb/ttpci/budget.c:204:
+	if (i2c_transfer (&budget->i2c_adap, &msg, 1) != 1) return -EIO;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#999: FILE: drivers/media/dvb/ttpci/budget.c:204:
+	if (i2c_transfer (&budget->i2c_adap, &msg, 1) != 1) return -EIO;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1004: FILE: drivers/media/dvb/ttpci/budget.c:209:
+static int lnbp21_enable_high_lnb_voltage(struct dvb_frontend* fe, int arg)

CHECK:SPACING: No space is necessary after a cast
#1006: FILE: drivers/media/dvb/ttpci/budget.c:211:
+	struct budget* budget = (struct budget*) fe->dvb->priv;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1006: FILE: drivers/media/dvb/ttpci/budget.c:211:
+	struct budget* budget = (struct budget*) fe->dvb->priv;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1006: FILE: drivers/media/dvb/ttpci/budget.c:211:
+	struct budget* budget = (struct budget*) fe->dvb->priv;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1010: FILE: drivers/media/dvb/ttpci/budget.c:215:
+	if (i2c_transfer (&budget->i2c_adap, &msg, 1) != 1) return -EIO;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1010: FILE: drivers/media/dvb/ttpci/budget.c:215:
+	if (i2c_transfer (&budget->i2c_adap, &msg, 1) != 1) return -EIO;

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1012: FILE: drivers/media/dvb/ttpci/budget.c:217:
+	if (arg) {
[...]
+	} else {
[...]

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1019: FILE: drivers/media/dvb/ttpci/budget.c:224:
+	if (i2c_transfer (&budget->i2c_adap, &msg, 1) != 1) return -EIO;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1019: FILE: drivers/media/dvb/ttpci/budget.c:224:
+	if (i2c_transfer (&budget->i2c_adap, &msg, 1) != 1) return -EIO;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1024: FILE: drivers/media/dvb/ttpci/budget.c:229:
+static void lnbp21_init(struct budget* budget)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1029: FILE: drivers/media/dvb/ttpci/budget.c:234:
+	i2c_transfer (&budget->i2c_adap, &msg, 1);

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#1039: FILE: drivers/media/dvb/ttpci/budget.c:455:
+static int s5h1420_pll_set(struct dvb_frontend* fe, struct dvb_frontend_parameters* params, u32* freqout)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1039: FILE: drivers/media/dvb/ttpci/budget.c:455:
+static int s5h1420_pll_set(struct dvb_frontend* fe, struct dvb_frontend_parameters* params, u32* freqout)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1039: FILE: drivers/media/dvb/ttpci/budget.c:455:
+static int s5h1420_pll_set(struct dvb_frontend* fe, struct dvb_frontend_parameters* params, u32* freqout)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1039: FILE: drivers/media/dvb/ttpci/budget.c:455:
+static int s5h1420_pll_set(struct dvb_frontend* fe, struct dvb_frontend_parameters* params, u32* freqout)

CHECK:SPACING: No space is necessary after a cast
#1041: FILE: drivers/media/dvb/ttpci/budget.c:457:
+	struct budget* budget = (struct budget*) fe->dvb->priv;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1041: FILE: drivers/media/dvb/ttpci/budget.c:457:
+	struct budget* budget = (struct budget*) fe->dvb->priv;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1041: FILE: drivers/media/dvb/ttpci/budget.c:457:
+	struct budget* budget = (struct budget*) fe->dvb->priv;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1060: FILE: drivers/media/dvb/ttpci/budget.c:476:
+	if (i2c_transfer (&budget->i2c_adap, &msg, 1) != 1) return -EIO;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1060: FILE: drivers/media/dvb/ttpci/budget.c:476:
+	if (i2c_transfer (&budget->i2c_adap, &msg, 1) != 1) return -EIO;

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#1083: FILE: drivers/media/dvb/ttpci/budget.c:556:
+			budget->dvb_frontend->ops->enable_high_lnb_voltage = lnbp21_enable_high_lnb_voltage;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000172732.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 115 errors, 71 warnings, 40 checks, 1020 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000172732.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
