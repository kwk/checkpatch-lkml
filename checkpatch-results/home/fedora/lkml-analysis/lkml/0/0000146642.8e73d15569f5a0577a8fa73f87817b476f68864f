CHECK:CAMELCASE: Avoid CamelCase: <AllocationPointer>
#40: FILE: drivers/block/DAC960.c:321:
+	  AllocationPointer = kzalloc(CommandGroupByteCount, GFP_ATOMIC);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <CommandGroupByteCount>
#40: FILE: drivers/block/DAC960.c:321:
+	  AllocationPointer = kzalloc(CommandGroupByteCount, GFP_ATOMIC);

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_Controller_T>
#53: FILE: drivers/block/DAC960.c:2728:
+	kzalloc(sizeof(DAC960_Controller_T), GFP_ATOMIC);

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_V2_PhysicalDeviceInfo_T>
#76: FILE: drivers/block/DAC960.c:4799:
+		kzalloc(sizeof(DAC960_V2_PhysicalDeviceInfo_T), GFP_ATOMIC);

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_SCSI_Inquiry_UnitSerialNumber_T>
#80: FILE: drivers/block/DAC960.c:4802:
+		  kzalloc(sizeof(DAC960_SCSI_Inquiry_UnitSerialNumber_T),

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_V2_LogicalDeviceInfo_T>
#102: FILE: drivers/block/DAC960.c:4965:
+		kzalloc(sizeof(DAC960_V2_LogicalDeviceInfo_T), GFP_ATOMIC);

CHECK:CAMELCASE: Avoid CamelCase: <ReportLunData_struct>
#126: FILE: drivers/block/cciss.c:2736:
+	ld_buff = kzalloc(sizeof(ReportLunData_struct), GFP_KERNEL);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#190: FILE: drivers/block/cpqarray.c:428:
+	hba[i]->cmd_pool_bits = kzalloc(

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#207: FILE: drivers/block/cpqarray.c:1657:
+	id_ldrive = (id_log_drv_t *)kzalloc(sizeof(id_log_drv_t), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#215: FILE: drivers/block/cpqarray.c:1664:
+	id_ctlr_buf = (id_ctlr_t *)kzalloc(sizeof(id_ctlr_t), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#224: FILE: drivers/block/cpqarray.c:1672:
+	id_lstatus_buf = (sense_log_drv_stat_t *)kzalloc(sizeof(sense_log_drv_stat_t), GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#233: FILE: drivers/block/cpqarray.c:1681:
+	sense_config_buf = (config_t *)kzalloc(sizeof(config_t), GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#263: FILE: drivers/block/ll_rw_blk.c:796:
+	tag_map = kzalloc(nr_ulongs * sizeof(unsigned long), GFP_ATOMIC);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#280: FILE: drivers/block/loop.c:1253:
+	loop_dev = kzalloc(max_loop * sizeof(struct loop_device), GFP_KERNEL);

CHECK:CAMELCASE: Avoid CamelCase: <Interface>
#303: FILE: drivers/block/paride/bpck6.c:227:
+	Interface *p = kzalloc(sizeof(Interface), GFP_KERNEL);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxW)
#318: FILE: drivers/block/scsi_ioctl.c:369:
+		buffer = kzalloc(bytes, q->bounce_gfp | GFP_USER| __GFP_NOWARN);
 		                                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#354: FILE: drivers/block/ub.c:1827:
+	if ((cmd = kzalloc(ALLOC_SIZE, GFP_KERNEL)) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#365: FILE: drivers/block/ub.c:1881:
+	if ((cmd = kzalloc(ALLOC_SIZE, GFP_KERNEL)) == NULL)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#376: FILE: drivers/block/ub.c:2174:
+	if ((sc = kzalloc(sizeof(struct ub_dev), GFP_KERNEL)) == NULL)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*sc)...) over kzalloc(sizeof(struct ub_dev)...)
#376: FILE: drivers/block/ub.c:2174:
+	if ((sc = kzalloc(sizeof(struct ub_dev), GFP_KERNEL)) == NULL)

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#387: FILE: drivers/block/ub.c:2288:
+	if ((lun = kzalloc(sizeof(struct ub_lun), GFP_KERNEL)) == NULL)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*lun)...) over kzalloc(sizeof(struct ub_lun)...)
#387: FILE: drivers/block/ub.c:2288:
+	if ((lun = kzalloc(sizeof(struct ub_lun), GFP_KERNEL)) == NULL)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000146642.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 6 warnings, 12 checks, 300 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000146642.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
