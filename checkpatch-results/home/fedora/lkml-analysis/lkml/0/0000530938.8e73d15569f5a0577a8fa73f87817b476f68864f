WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
name_to_kdev_t(), no? If this was done the md= code would have worked as is,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#72: FILE: md.c:3535:
+	printk (KERN_INFO "md: md driver %d.%d.%d MAX_MD_DEVS=%d, MD_SB_DISKS=%d\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#72: FILE: md.c:3535:
+	printk (KERN_INFO "md: md driver %d.%d.%d MAX_MD_DEVS=%d, MD_SB_DISKS=%d\n",

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#73: FILE: md.c:3536:
+	printk (KERN_INFO "md: md driver %d.%d.%d MAX_MD_DEVS=%d, MD_SB_DISKS=%d\n",
 			MD_MAJOR_VERSION, MD_MINOR_VERSION,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#81: FILE: md.c:3610:
+	printk(KERN_INFO "md: Autodetecting RAID arrays.\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#116: FILE: md.c:3677:
+		printk ("md: md=%d, Minor device number too high.\n", minor);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#116: FILE: md.c:3677:
+		printk ("md: md=%d, Minor device number too high.\n", minor);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#122: FILE: md.c:3680:
+		printk ("md: md=%d, Specified more then once. Replacing previous definition.\n", minor);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#122: FILE: md.c:3680:
+		printk ("md: md=%d, Specified more then once. Replacing previous definition.\n", minor);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#122: FILE: md.c:3680:
+		printk ("md: md=%d, Specified more then once. Replacing previous definition.\n", minor);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#150: FILE: md.c:3717:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#152: FILE: md.c:3719:
+^I^I^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#173: FILE: md.c:3735:
+		if ((devname = md_setup_args.device_names[minor]) == 0)	continue;

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#173: FILE: md.c:3735:
+		if ((devname = md_setup_args.device_names[minor]) == 0)	continue;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#174: FILE: md.c:3736:
+^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#176: FILE: md.c:3738:
+		for (i = 0; i < MD_SB_DISKS && devname != 0; i++) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#179: FILE: md.c:3741:
+^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#180: FILE: md.c:3742:
+			if ((p = strchr(devname, ',')) != NULL) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#185: FILE: md.c:3747:
+			handle = devfs_find_handle(NULL, devname, MAJOR (dev), MINOR (dev),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#185: FILE: md.c:3747:
+			handle = devfs_find_handle(NULL, devname, MAJOR (dev), MINOR (dev),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#186: FILE: md.c:3748:
+			handle = devfs_find_handle(NULL, devname, MAJOR (dev), MINOR (dev),
+						    DEVFS_SPECIAL_BLK, 1);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#188: FILE: md.c:3750:
+				unsigned major, minor;

WARNING:LINE_SPACING: Missing a blank line after declarations
#189: FILE: md.c:3751:
+				unsigned major, minor;
+				devfs_get_maj_min(handle, &major, &minor);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#193: FILE: md.c:3755:
+				printk ("md: Unknown device name: %s\n", devname);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#193: FILE: md.c:3755:
+				printk ("md: Unknown device name: %s\n", devname);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#196: FILE: md.c:3758:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#199: FILE: md.c:3761:
+^I^I^I$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#200: FILE: md.c:3762:
+			if (moredev == 1) { *p++ = ','; moredev = 0; }

CHECK:SPACING: No space is necessary after a cast
#203: FILE: md.c:3765:
+		md_setup_args.devices[minor][i] = (kdev_t) 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#204: FILE: md.c:3766:
+^I^I$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#205: FILE: md.c:3767:
+		if (md_setup_args.device_set[minor] == 0)	continue;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#206: FILE: md.c:3768:
+^I^I$

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#209: FILE: md.c:3770:
+			printk("md: Ignoring md=%d, already autodetected. (Use raid=noautodetect)\n", minor);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#209: FILE: md.c:3770:
+			printk("md: Ignoring md=%d, already autodetected. (Use raid=noautodetect)\n", minor);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#212: FILE: md.c:3773:
+		printk("md: Loading md%d: %s\n", minor, md_setup_args.device_names[minor]);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#213: FILE: md.c:3774:
+^I^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#222: FILE: md.c:3849:
+		printk(KERN_INFO "md: Skipping autodetection of RAID arrays. (raid=noautodetect)\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000530938.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 19 warnings, 4 checks, 160 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000530938.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
