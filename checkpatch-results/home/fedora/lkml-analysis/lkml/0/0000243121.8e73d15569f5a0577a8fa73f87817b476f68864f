WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#65: FILE: drivers/s390/char/vmlogrdr.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#66: FILE: drivers/s390/char/vmlogrdr.c:2:
+ * drivers/s390/char/vmlogrdr.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#83: FILE: drivers/s390/char/vmlogrdr.c:19:
+#include <asm/atomic.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#84: FILE: drivers/s390/char/vmlogrdr.c:20:
+#include <asm/uaccess.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#94: FILE: drivers/s390/char/vmlogrdr.c:30:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#99: FILE: drivers/s390/char/vmlogrdr.c:35:
+MODULE_DESCRIPTION ("Character device driver for reading z/VM "

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#100: FILE: drivers/s390/char/vmlogrdr.c:36:
+MODULE_DESCRIPTION ("Character device driver for reading z/VM "
+		    "system service records.");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#103: FILE: drivers/s390/char/vmlogrdr.c:39:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <iucv_MessagePending>
#130: FILE: drivers/s390/char/vmlogrdr.c:66:
+	iucv_MessagePending local_interrupt_buffer;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#134: FILE: drivers/s390/char/vmlogrdr.c:70:
+	char * buffer;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#135: FILE: drivers/s390/char/vmlogrdr.c:71:
+	char * current_position;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#147: FILE: drivers/s390/char/vmlogrdr.c:83:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#153: FILE: drivers/s390/char/vmlogrdr.c:89:
+static ssize_t vmlogrdr_read (struct file *filp, char *data, size_t count,
                                            ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#153: FILE: drivers/s390/char/vmlogrdr.c:89:
+static ssize_t vmlogrdr_read (struct file *filp, char *data, size_t count,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#154: FILE: drivers/s390/char/vmlogrdr.c:90:
+static ssize_t vmlogrdr_read (struct file *filp, char *data, size_t count,
+			       loff_t * ppos);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#154: FILE: drivers/s390/char/vmlogrdr.c:90:
+			       loff_t * ppos);

WARNING:CONST_STRUCT: struct file_operations should normally be const
#156: FILE: drivers/s390/char/vmlogrdr.c:92:
+static struct file_operations vmlogrdr_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#163: FILE: drivers/s390/char/vmlogrdr.c:99:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <iucvMagic>
#164: FILE: drivers/s390/char/vmlogrdr.c:100:
+static u8 iucvMagic[16] = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#169: FILE: drivers/s390/char/vmlogrdr.c:105:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#177: FILE: drivers/s390/char/vmlogrdr.c:113:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#180: FILE: drivers/s390/char/vmlogrdr.c:116:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <vmlogrdr_iucv_ConnectionComplete>
#182: FILE: drivers/s390/char/vmlogrdr.c:118:
+vmlogrdr_iucv_ConnectionComplete(iucv_ConnectionComplete *eib, void *pgm_data);

CHECK:CAMELCASE: Avoid CamelCase: <iucv_ConnectionComplete>
#182: FILE: drivers/s390/char/vmlogrdr.c:118:
+vmlogrdr_iucv_ConnectionComplete(iucv_ConnectionComplete *eib, void *pgm_data);

CHECK:CAMELCASE: Avoid CamelCase: <vmlogrdr_iucv_ConnectionSevered>
#184: FILE: drivers/s390/char/vmlogrdr.c:120:
+vmlogrdr_iucv_ConnectionSevered(iucv_ConnectionSevered *eib, void *pgm_data);

CHECK:CAMELCASE: Avoid CamelCase: <iucv_ConnectionSevered>
#184: FILE: drivers/s390/char/vmlogrdr.c:120:
+vmlogrdr_iucv_ConnectionSevered(iucv_ConnectionSevered *eib, void *pgm_data);

CHECK:CAMELCASE: Avoid CamelCase: <vmlogrdr_iucv_MessagePending>
#186: FILE: drivers/s390/char/vmlogrdr.c:122:
+vmlogrdr_iucv_MessagePending(iucv_MessagePending *eib, void *pgm_data);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#188: FILE: drivers/s390/char/vmlogrdr.c:124:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <ConnectionComplete>
#190: FILE: drivers/s390/char/vmlogrdr.c:126:
+	.ConnectionComplete = vmlogrdr_iucv_ConnectionComplete,

CHECK:CAMELCASE: Avoid CamelCase: <ConnectionSevered>
#191: FILE: drivers/s390/char/vmlogrdr.c:127:
+	.ConnectionSevered  = vmlogrdr_iucv_ConnectionSevered,

CHECK:CAMELCASE: Avoid CamelCase: <MessagePending>
#192: FILE: drivers/s390/char/vmlogrdr.c:128:
+	.MessagePending     = vmlogrdr_iucv_MessagePending,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#195: FILE: drivers/s390/char/vmlogrdr.c:131:
+
+

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#236: FILE: drivers/s390/char/vmlogrdr.c:172:
+#define MAXMINOR  (sizeof(sys_ser)/sizeof(struct vmlogrdr_priv_t))
                                   ^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#239: FILE: drivers/s390/char/vmlogrdr.c:175:
+static int vmlogrdr_major = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#240: FILE: drivers/s390/char/vmlogrdr.c:176:
+static struct cdev  *vmlogrdr_cdev = NULL;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#243: FILE: drivers/s390/char/vmlogrdr.c:179:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#245: FILE: drivers/s390/char/vmlogrdr.c:181:
+vmlogrdr_iucv_ConnectionComplete (iucv_ConnectionComplete * eib,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#246: FILE: drivers/s390/char/vmlogrdr.c:182:
+vmlogrdr_iucv_ConnectionComplete (iucv_ConnectionComplete * eib,
+				   void * pgm_data)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#246: FILE: drivers/s390/char/vmlogrdr.c:182:
+				   void * pgm_data)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#248: FILE: drivers/s390/char/vmlogrdr.c:184:
+	struct vmlogrdr_priv_t * logptr = pgm_data;

WARNING:LINE_SPACING: Missing a blank line after declarations
#249: FILE: drivers/s390/char/vmlogrdr.c:185:
+	struct vmlogrdr_priv_t * logptr = pgm_data;
+	spin_lock(&logptr->priv_lock);

WARNING:RETURN_VOID: void function return statements are not generally useful
#254: FILE: drivers/s390/char/vmlogrdr.c:190:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#256: FILE: drivers/s390/char/vmlogrdr.c:192:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#258: FILE: drivers/s390/char/vmlogrdr.c:194:
+vmlogrdr_iucv_ConnectionSevered (iucv_ConnectionSevered * eib, void * pgm_data)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#258: FILE: drivers/s390/char/vmlogrdr.c:194:
+vmlogrdr_iucv_ConnectionSevered (iucv_ConnectionSevered * eib, void * pgm_data)

CHECK:SPACING: No space is necessary after a cast
#260: FILE: drivers/s390/char/vmlogrdr.c:196:
+	u8 reason = (u8) eib->ipuser[8];

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#261: FILE: drivers/s390/char/vmlogrdr.c:197:
+	struct vmlogrdr_priv_t * logptr = pgm_data;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#263: FILE: drivers/s390/char/vmlogrdr.c:199:
+	printk (KERN_ERR "vmlogrdr: connection severed with"

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#263: FILE: drivers/s390/char/vmlogrdr.c:199:
+	printk (KERN_ERR "vmlogrdr: connection severed with"

WARNING:SPLIT_STRING: quoted string split across lines
#264: FILE: drivers/s390/char/vmlogrdr.c:200:
+	printk (KERN_ERR "vmlogrdr: connection severed with"
+		" reason %i\n", reason);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#276: FILE: drivers/s390/char/vmlogrdr.c:212:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#278: FILE: drivers/s390/char/vmlogrdr.c:214:
+vmlogrdr_iucv_MessagePending (iucv_MessagePending * eib, void * pgm_data)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#278: FILE: drivers/s390/char/vmlogrdr.c:214:
+vmlogrdr_iucv_MessagePending (iucv_MessagePending * eib, void * pgm_data)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#280: FILE: drivers/s390/char/vmlogrdr.c:216:
+	struct vmlogrdr_priv_t * logptr = pgm_data;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around logptr->local_interrupt_buffer
#288: FILE: drivers/s390/char/vmlogrdr.c:224:
+	memcpy(&(logptr->local_interrupt_buffer), eib, sizeof(*eib));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LINE_SPACING: Please don't use multiple blank lines
#294: FILE: drivers/s390/char/vmlogrdr.c:230:
+
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#295: FILE: drivers/s390/char/vmlogrdr.c:231:
+static int
+vmlogrdr_get_recording_class_AB(void) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#297: FILE: drivers/s390/char/vmlogrdr.c:233:
+	char cp_command[]="QUERY COMMAND RECORDING ";
 	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#300: FILE: drivers/s390/char/vmlogrdr.c:236:
+	int len,i;
 	       ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#302: FILE: drivers/s390/char/vmlogrdr.c:238:
+	printk (KERN_DEBUG "vmlogrdr: query command: %s\n", cp_command);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#302: FILE: drivers/s390/char/vmlogrdr.c:238:
+	printk (KERN_DEBUG "vmlogrdr: query command: %s\n", cp_command);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#304: FILE: drivers/s390/char/vmlogrdr.c:240:
+	printk (KERN_DEBUG "vmlogrdr: response: %s", cp_response);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#304: FILE: drivers/s390/char/vmlogrdr.c:240:
+	printk (KERN_DEBUG "vmlogrdr: response: %s", cp_response);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#305: FILE: drivers/s390/char/vmlogrdr.c:241:
+	len = strnlen(cp_response,sizeof(cp_response));
 	                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#307: FILE: drivers/s390/char/vmlogrdr.c:243:
+	tail=strnchr(cp_response,len,'=');
 	    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#307: FILE: drivers/s390/char/vmlogrdr.c:243:
+	tail=strnchr(cp_response,len,'=');
 	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#307: FILE: drivers/s390/char/vmlogrdr.c:243:
+	tail=strnchr(cp_response,len,'=');
 	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#311: FILE: drivers/s390/char/vmlogrdr.c:247:
+	if (!strncmp("ANY",tail,3))
 	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#311: FILE: drivers/s390/char/vmlogrdr.c:247:
+	if (!strncmp("ANY",tail,3))
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#313: FILE: drivers/s390/char/vmlogrdr.c:249:
+	if (!strncmp("NONE",tail,4))
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#313: FILE: drivers/s390/char/vmlogrdr.c:249:
+	if (!strncmp("NONE",tail,4))
 	                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#319: FILE: drivers/s390/char/vmlogrdr.c:255:
+        for (i=tail-cp_response; i<len; i++)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: drivers/s390/char/vmlogrdr.c:255:
+        for (i=tail-cp_response; i<len; i++)$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#319: FILE: drivers/s390/char/vmlogrdr.c:255:
+        for (i=tail-cp_response; i<len; i++)
               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#319: FILE: drivers/s390/char/vmlogrdr.c:255:
+        for (i=tail-cp_response; i<len; i++)
                    ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#319: FILE: drivers/s390/char/vmlogrdr.c:255:
+        for (i=tail-cp_response; i<len; i++)
                                   ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#320: FILE: drivers/s390/char/vmlogrdr.c:256:
+		if ( cp_response[i]=='A' || cp_response[i]=='B' )
 		                   ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#320: FILE: drivers/s390/char/vmlogrdr.c:256:
+		if ( cp_response[i]=='A' || cp_response[i]=='B' )
 		                                          ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#320: FILE: drivers/s390/char/vmlogrdr.c:256:
+		if ( cp_response[i]=='A' || cp_response[i]=='B' )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#320: FILE: drivers/s390/char/vmlogrdr.c:256:
+		if ( cp_response[i]=='A' || cp_response[i]=='B' )

CHECK:LINE_SPACING: Please don't use multiple blank lines
#325: FILE: drivers/s390/char/vmlogrdr.c:261:
+
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#326: FILE: drivers/s390/char/vmlogrdr.c:262:
+static int
+vmlogrdr_recording(struct vmlogrdr_priv_t * logptr, int action, int purge) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#327: FILE: drivers/s390/char/vmlogrdr.c:263:
+vmlogrdr_recording(struct vmlogrdr_priv_t * logptr, int action, int purge) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#328: FILE: drivers/s390/char/vmlogrdr.c:264:
+vmlogrdr_recording(struct vmlogrdr_priv_t * logptr, int action, int purge) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#336: FILE: drivers/s390/char/vmlogrdr.c:272:
+        onoff = ((action == 1) ? "ON" : "OFF");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#336: FILE: drivers/s390/char/vmlogrdr.c:272:
+        onoff = ((action == 1) ? "ON" : "OFF");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#339: FILE: drivers/s390/char/vmlogrdr.c:275:
+        /*$

WARNING:TYPO_SPELLING: 'previlege' may be misspelled - perhaps 'privilege'?
#341: FILE: drivers/s390/char/vmlogrdr.c:277:
+	 * for guests that have previlege classes A or B.
 	                        ^^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#353: FILE: drivers/s390/char/vmlogrdr.c:289:
+		printk (KERN_DEBUG "vmlogrdr: recording command: %s\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#353: FILE: drivers/s390/char/vmlogrdr.c:289:
+		printk (KERN_DEBUG "vmlogrdr: recording command: %s\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#356: FILE: drivers/s390/char/vmlogrdr.c:292:
+		printk (KERN_DEBUG "vmlogrdr: recording response: %s",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#356: FILE: drivers/s390/char/vmlogrdr.c:292:
+		printk (KERN_DEBUG "vmlogrdr: recording response: %s",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#363: FILE: drivers/s390/char/vmlogrdr.c:299:
+	snprintf(cp_command, sizeof(cp_command), "RECORDING %s %s %s",
+		logptr->recording_name,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#367: FILE: drivers/s390/char/vmlogrdr.c:303:
+	printk (KERN_DEBUG "vmlogrdr: recording command: %s\n", cp_command);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#367: FILE: drivers/s390/char/vmlogrdr.c:303:
+	printk (KERN_DEBUG "vmlogrdr: recording command: %s\n", cp_command);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#369: FILE: drivers/s390/char/vmlogrdr.c:305:
+	printk (KERN_DEBUG "vmlogrdr: recording response: %s",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#369: FILE: drivers/s390/char/vmlogrdr.c:305:
+	printk (KERN_DEBUG "vmlogrdr: recording response: %s",

ERROR:CODE_INDENT: code indent should use tabs where possible
#375: FILE: drivers/s390/char/vmlogrdr.c:311:
+         * 'Command complete'. So I use strstr rather then the strncmp.$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#377: FILE: drivers/s390/char/vmlogrdr.c:313:
+	if (strstr(cp_response,"Command complete"))
 	                      ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#382: FILE: drivers/s390/char/vmlogrdr.c:318:
+
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#384: FILE: drivers/s390/char/vmlogrdr.c:320:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#386: FILE: drivers/s390/char/vmlogrdr.c:322:
+vmlogrdr_open (struct inode *inode, struct file *filp)
                                                  ^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#386: FILE: drivers/s390/char/vmlogrdr.c:322:
+vmlogrdr_open (struct inode *inode, struct file *filp)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#389: FILE: drivers/s390/char/vmlogrdr.c:325:
+	struct vmlogrdr_priv_t * logptr = NULL;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!logptr"
#398: FILE: drivers/s390/char/vmlogrdr.c:334:
+	if (logptr == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#405: FILE: drivers/s390/char/vmlogrdr.c:341:
+		return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:TYPO_SPELLING: 'Besure' may be misspelled - perhaps 'Be sure'?
#407: FILE: drivers/s390/char/vmlogrdr.c:343:
+	/* Besure this device hasn't already been opened */
 	   ^^^^^^

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#412: FILE: drivers/s390/char/vmlogrdr.c:348:
+		return -EBUSY;
+	} else {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#425: FILE: drivers/s390/char/vmlogrdr.c:361:
+	ret=0;
 	   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#427: FILE: drivers/s390/char/vmlogrdr.c:363:
+		ret = vmlogrdr_recording(logptr,1,logptr->autopurge);
 		                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#427: FILE: drivers/s390/char/vmlogrdr.c:363:
+		ret = vmlogrdr_recording(logptr,1,logptr->autopurge);
 		                                 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#429: FILE: drivers/s390/char/vmlogrdr.c:365:
+		printk (KERN_WARNING "vmlogrdr: failed to start "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#429: FILE: drivers/s390/char/vmlogrdr.c:365:
+		printk (KERN_WARNING "vmlogrdr: failed to start "

WARNING:SPLIT_STRING: quoted string split across lines
#430: FILE: drivers/s390/char/vmlogrdr.c:366:
+		printk (KERN_WARNING "vmlogrdr: failed to start "
+			"recording automatically\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#434: FILE: drivers/s390/char/vmlogrdr.c:370:
+	logptr->iucv_handle = iucv_register_program(iucvMagic,
+			logptr->system_service, mask, &vmlogrdr_iucvops,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!logptr->iucv_handle"
#437: FILE: drivers/s390/char/vmlogrdr.c:373:
+	if (logptr->iucv_handle == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#438: FILE: drivers/s390/char/vmlogrdr.c:374:
+		printk (KERN_ERR "vmlogrdr: failed to register with"

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#438: FILE: drivers/s390/char/vmlogrdr.c:374:
+		printk (KERN_ERR "vmlogrdr: failed to register with"

WARNING:SPLIT_STRING: quoted string split across lines
#439: FILE: drivers/s390/char/vmlogrdr.c:375:
+		printk (KERN_ERR "vmlogrdr: failed to register with"
+			"iucv driver\n");

WARNING:MISSING_SPACE: break quoted strings at a space character
#439: FILE: drivers/s390/char/vmlogrdr.c:375:
+		printk (KERN_ERR "vmlogrdr: failed to register with"
+			"iucv driver\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#449: FILE: drivers/s390/char/vmlogrdr.c:385:
+	connect_rc = iucv_connect (&(logptr->pathid), 10, iucvMagic,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around logptr->pathid
#449: FILE: drivers/s390/char/vmlogrdr.c:385:
+	connect_rc = iucv_connect (&(logptr->pathid), 10, iucvMagic,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#450: FILE: drivers/s390/char/vmlogrdr.c:386:
+	connect_rc = iucv_connect (&(logptr->pathid), 10, iucvMagic,
+					logptr->system_service, iucv_host, 0,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#454: FILE: drivers/s390/char/vmlogrdr.c:390:
+		printk (KERN_ERR "vmlogrdr: iucv connection to %s "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#454: FILE: drivers/s390/char/vmlogrdr.c:390:
+		printk (KERN_ERR "vmlogrdr: iucv connection to %s "

WARNING:SPLIT_STRING: quoted string split across lines
#455: FILE: drivers/s390/char/vmlogrdr.c:391:
+		printk (KERN_ERR "vmlogrdr: iucv connection to %s "
+			"failed with rc %i \n", logptr->system_service,

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#455: FILE: drivers/s390/char/vmlogrdr.c:391:
+			"failed with rc %i \n", logptr->system_service,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#465: FILE: drivers/s390/char/vmlogrdr.c:401:
+	wait_event(conn_wait_queue, (logptr->connection_established)
+		   || (logptr->iucv_path_severed));

WARNING:BRACES: braces {} are not necessary for single statement blocks
#466: FILE: drivers/s390/char/vmlogrdr.c:402:
+	if (logptr->iucv_path_severed) {
+		goto not_connected;
+	}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#477: FILE: drivers/s390/char/vmlogrdr.c:413:
+		vmlogrdr_recording(logptr,0,logptr->autopurge);
 		                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#477: FILE: drivers/s390/char/vmlogrdr.c:413:
+		vmlogrdr_recording(logptr,0,logptr->autopurge);
 		                           ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#481: FILE: drivers/s390/char/vmlogrdr.c:417:
+
+

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#482: FILE: drivers/s390/char/vmlogrdr.c:418:
+
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#484: FILE: drivers/s390/char/vmlogrdr.c:420:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#486: FILE: drivers/s390/char/vmlogrdr.c:422:
+vmlogrdr_release (struct inode *inode, struct file *filp)
                                                     ^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#486: FILE: drivers/s390/char/vmlogrdr.c:422:
+vmlogrdr_release (struct inode *inode, struct file *filp)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#490: FILE: drivers/s390/char/vmlogrdr.c:426:
+	struct vmlogrdr_priv_t * logptr = filp->private_data;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#496: FILE: drivers/s390/char/vmlogrdr.c:432:
+		ret = vmlogrdr_recording(logptr,0,logptr->autopurge);
 		                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#496: FILE: drivers/s390/char/vmlogrdr.c:432:
+		ret = vmlogrdr_recording(logptr,0,logptr->autopurge);
 		                                 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#498: FILE: drivers/s390/char/vmlogrdr.c:434:
+			printk (KERN_WARNING "vmlogrdr: failed to stop "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#498: FILE: drivers/s390/char/vmlogrdr.c:434:
+			printk (KERN_WARNING "vmlogrdr: failed to stop "

WARNING:SPLIT_STRING: quoted string split across lines
#499: FILE: drivers/s390/char/vmlogrdr.c:435:
+			printk (KERN_WARNING "vmlogrdr: failed to stop "
+				"recording automatically\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#506: FILE: drivers/s390/char/vmlogrdr.c:442:
+
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#507: FILE: drivers/s390/char/vmlogrdr.c:443:
+static int
+vmlogrdr_receive_data(struct vmlogrdr_priv_t *priv) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#515: FILE: drivers/s390/char/vmlogrdr.c:451:
+	char * buffer;

ERROR:SPACING: space required before the open brace '{'
#519: FILE: drivers/s390/char/vmlogrdr.c:455:
+		if (priv->residual_length){

ERROR:CODE_INDENT: code indent should use tabs where possible
#527: FILE: drivers/s390/char/vmlogrdr.c:463:
+                         * + size of FENCE in the first 4 bytes of the buffer.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#528: FILE: drivers/s390/char/vmlogrdr.c:464:
+^I^I         */$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#532: FILE: drivers/s390/char/vmlogrdr.c:468:
+			temp = (int*)priv->buffer;

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#533: FILE: drivers/s390/char/vmlogrdr.c:469:
+			*temp= iucv_data_count + sizeof(FENCE);
 			     ^

WARNING:TYPO_SPELLING: 'befor' may be misspelled - perhaps 'before'?
#553: FILE: drivers/s390/char/vmlogrdr.c:489:
+		 * record was purged befor we could receive it.
 		                     ^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#564: FILE: drivers/s390/char/vmlogrdr.c:500:
+ ^I^Iuser_data_count += iucv_data_count;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#564: FILE: drivers/s390/char/vmlogrdr.c:500:
+ ^I^Iuser_data_count += iucv_data_count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#564: FILE: drivers/s390/char/vmlogrdr.c:500:
+ ^I^Iuser_data_count += iucv_data_count;$

ERROR:SPACING: space required before the open brace '{'
#566: FILE: drivers/s390/char/vmlogrdr.c:502:
+		if (priv->residual_length == 0){

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#568: FILE: drivers/s390/char/vmlogrdr.c:504:
+			 * now add the fence */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please don't use multiple blank lines
#580: FILE: drivers/s390/char/vmlogrdr.c:516:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#582: FILE: drivers/s390/char/vmlogrdr.c:518:
+vmlogrdr_read (struct file *filp, char *data, size_t count, loff_t * ppos)
                             ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#582: FILE: drivers/s390/char/vmlogrdr.c:518:
+vmlogrdr_read (struct file *filp, char *data, size_t count, loff_t * ppos)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#582: FILE: drivers/s390/char/vmlogrdr.c:518:
+vmlogrdr_read (struct file *filp, char *data, size_t count, loff_t * ppos)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#585: FILE: drivers/s390/char/vmlogrdr.c:521:
+	struct vmlogrdr_priv_t * priv = filp->private_data;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#591: FILE: drivers/s390/char/vmlogrdr.c:527:
+			rc = wait_event_interruptible(read_wait_queue,
+					atomic_read(&priv->receive_ready));

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#614: FILE: drivers/s390/char/vmlogrdr.c:550:
+static ssize_t
+vmlogrdr_autopurge_store(struct device * dev, const char * buf, size_t count) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#615: FILE: drivers/s390/char/vmlogrdr.c:551:
+vmlogrdr_autopurge_store(struct device * dev, const char * buf, size_t count) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#615: FILE: drivers/s390/char/vmlogrdr.c:551:
+vmlogrdr_autopurge_store(struct device * dev, const char * buf, size_t count) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#621: FILE: drivers/s390/char/vmlogrdr.c:557:
+		priv->autopurge=0;
 		               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#624: FILE: drivers/s390/char/vmlogrdr.c:560:
+		priv->autopurge=1;
 		               ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#632: FILE: drivers/s390/char/vmlogrdr.c:568:
+
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#633: FILE: drivers/s390/char/vmlogrdr.c:569:
+static ssize_t
+vmlogrdr_autopurge_show(struct device *dev, char *buf) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#636: FILE: drivers/s390/char/vmlogrdr.c:572:
+	struct vmlogrdr_priv_t *priv = dev->driver_data;
+	return sprintf(buf, "%u\n", priv->autopurge);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'vmlogrdr_autopurge_show' to 'autopurge_show' 'vmlogrdr_autopurge_store' to 'autopurge_store'
#637: FILE: drivers/s390/char/vmlogrdr.c:573:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

CHECK:LINE_SPACING: Please don't use multiple blank lines
#639: FILE: drivers/s390/char/vmlogrdr.c:575:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#643: FILE: drivers/s390/char/vmlogrdr.c:579:
+
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#644: FILE: drivers/s390/char/vmlogrdr.c:580:
+static ssize_t
+vmlogrdr_purge_store(struct device * dev, const char * buf, size_t count) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#645: FILE: drivers/s390/char/vmlogrdr.c:581:
+vmlogrdr_purge_store(struct device * dev, const char * buf, size_t count) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#645: FILE: drivers/s390/char/vmlogrdr.c:581:
+vmlogrdr_purge_store(struct device * dev, const char * buf, size_t count) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#646: FILE: drivers/s390/char/vmlogrdr.c:582:
+vmlogrdr_purge_store(struct device * dev, const char * buf, size_t count) {
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#657: FILE: drivers/s390/char/vmlogrdr.c:593:
+        /*$

WARNING:TYPO_SPELLING: 'previlege' may be misspelled - perhaps 'privilege'?
#659: FILE: drivers/s390/char/vmlogrdr.c:595:
+	 * for guests that have previlege classes A or B.
 	                        ^^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#673: FILE: drivers/s390/char/vmlogrdr.c:609:
+	printk (KERN_DEBUG "vmlogrdr: recording command: %s\n", cp_command);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#673: FILE: drivers/s390/char/vmlogrdr.c:609:
+	printk (KERN_DEBUG "vmlogrdr: recording command: %s\n", cp_command);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#675: FILE: drivers/s390/char/vmlogrdr.c:611:
+	printk (KERN_DEBUG "vmlogrdr: recording response: %s",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#675: FILE: drivers/s390/char/vmlogrdr.c:611:
+	printk (KERN_DEBUG "vmlogrdr: recording response: %s",

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'vmlogrdr_purge_store' to 'purge_store'
#679: FILE: drivers/s390/char/vmlogrdr.c:615:
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#681: FILE: drivers/s390/char/vmlogrdr.c:617:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#684: FILE: drivers/s390/char/vmlogrdr.c:620:
+
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#685: FILE: drivers/s390/char/vmlogrdr.c:621:
+static ssize_t
+vmlogrdr_autorecording_store(struct device *dev, const char *buf,
+			     size_t count) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#693: FILE: drivers/s390/char/vmlogrdr.c:629:
+		priv->autorecording=0;
 		                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#696: FILE: drivers/s390/char/vmlogrdr.c:632:
+		priv->autorecording=1;
 		                   ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#704: FILE: drivers/s390/char/vmlogrdr.c:640:
+
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#705: FILE: drivers/s390/char/vmlogrdr.c:641:
+static ssize_t
+vmlogrdr_autorecording_show(struct device *dev, char *buf) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#708: FILE: drivers/s390/char/vmlogrdr.c:644:
+	struct vmlogrdr_priv_t *priv = dev->driver_data;
+	return sprintf(buf, "%u\n", priv->autorecording);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'vmlogrdr_autorecording_show' to 'autorecording_show' 'vmlogrdr_autorecording_store' to 'autorecording_store'
#709: FILE: drivers/s390/char/vmlogrdr.c:645:
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#711: FILE: drivers/s390/char/vmlogrdr.c:647:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#715: FILE: drivers/s390/char/vmlogrdr.c:651:
+
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#716: FILE: drivers/s390/char/vmlogrdr.c:652:
+static ssize_t
+vmlogrdr_recording_store(struct device * dev, const char * buf, size_t count) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#717: FILE: drivers/s390/char/vmlogrdr.c:653:
+vmlogrdr_recording_store(struct device * dev, const char * buf, size_t count) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#717: FILE: drivers/s390/char/vmlogrdr.c:653:
+vmlogrdr_recording_store(struct device * dev, const char * buf, size_t count) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#718: FILE: drivers/s390/char/vmlogrdr.c:654:
+vmlogrdr_recording_store(struct device * dev, const char * buf, size_t count) {
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#724: FILE: drivers/s390/char/vmlogrdr.c:660:
+		ret = vmlogrdr_recording(priv,0,0);
 		                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#724: FILE: drivers/s390/char/vmlogrdr.c:660:
+		ret = vmlogrdr_recording(priv,0,0);
 		                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#727: FILE: drivers/s390/char/vmlogrdr.c:663:
+		ret = vmlogrdr_recording(priv,1,0);
 		                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#727: FILE: drivers/s390/char/vmlogrdr.c:663:
+		ret = vmlogrdr_recording(priv,1,0);
 		                               ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#737: FILE: drivers/s390/char/vmlogrdr.c:673:
+
+}

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'vmlogrdr_recording_store' to 'recording_store'
#737: FILE: drivers/s390/char/vmlogrdr.c:673:
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#739: FILE: drivers/s390/char/vmlogrdr.c:675:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#742: FILE: drivers/s390/char/vmlogrdr.c:678:
+
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#743: FILE: drivers/s390/char/vmlogrdr.c:679:
+static ssize_t
+vmlogrdr_recording_status_show(struct device_driver *driver, char *buf) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#745: FILE: drivers/s390/char/vmlogrdr.c:681:
+vmlogrdr_recording_status_show(struct device_driver *driver, char *buf) {
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#754: FILE: drivers/s390/char/vmlogrdr.c:690:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#776: FILE: drivers/s390/char/vmlogrdr.c:712:
+
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#777: FILE: drivers/s390/char/vmlogrdr.c:713:
+static int
+vmlogrdr_register_driver(void) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#783: FILE: drivers/s390/char/vmlogrdr.c:719:
+		printk(KERN_ERR "vmlogrdr: failed to register driver.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#790: FILE: drivers/s390/char/vmlogrdr.c:726:
+		printk(KERN_ERR "vmlogrdr: failed to add driver attribute.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#796: FILE: drivers/s390/char/vmlogrdr.c:732:
+		printk(KERN_ERR "vmlogrdr: failed to create class.\n");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#797: FILE: drivers/s390/char/vmlogrdr.c:733:
+		ret=PTR_ERR(vmlogrdr_class);
 		   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#798: FILE: drivers/s390/char/vmlogrdr.c:734:
+		vmlogrdr_class=NULL;
 		              ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#810: FILE: drivers/s390/char/vmlogrdr.c:746:
+
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#811: FILE: drivers/s390/char/vmlogrdr.c:747:
+static void
+vmlogrdr_unregister_driver(void) {

WARNING:RETURN_VOID: void function return statements are not generally useful
#818: FILE: drivers/s390/char/vmlogrdr.c:754:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#820: FILE: drivers/s390/char/vmlogrdr.c:756:
+
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#821: FILE: drivers/s390/char/vmlogrdr.c:757:
+static int
+vmlogrdr_register_device(struct vmlogrdr_priv_t *priv) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*dev)...) over kmalloc(sizeof(struct device)...)
#826: FILE: drivers/s390/char/vmlogrdr.c:762:
+	dev = kmalloc(sizeof(struct device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:BRACES: braces {} should be used on all arms of this statement
#827: FILE: drivers/s390/char/vmlogrdr.c:763:
+	if (dev) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#842: FILE: drivers/s390/char/vmlogrdr.c:778:
+	} else

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#853: FILE: drivers/s390/char/vmlogrdr.c:789:
+	priv->class_device = class_simple_device_add(

ERROR:SPACING: space prohibited before that close parenthesis ')'
#857: FILE: drivers/s390/char/vmlogrdr.c:793:
+				"%s", dev->bus_id );

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#860: FILE: drivers/s390/char/vmlogrdr.c:796:
+		priv->class_device=NULL;
 		                  ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#870: FILE: drivers/s390/char/vmlogrdr.c:806:
+
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#871: FILE: drivers/s390/char/vmlogrdr.c:807:
+static int
+vmlogrdr_unregister_device(struct vmlogrdr_priv_t *priv ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#872: FILE: drivers/s390/char/vmlogrdr.c:808:
+vmlogrdr_unregister_device(struct vmlogrdr_priv_t *priv ) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "priv->device"
#874: FILE: drivers/s390/char/vmlogrdr.c:810:
+	if (priv->device != NULL) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#877: FILE: drivers/s390/char/vmlogrdr.c:813:
+		priv->device=NULL;
 		            ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#882: FILE: drivers/s390/char/vmlogrdr.c:818:
+
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#883: FILE: drivers/s390/char/vmlogrdr.c:819:
+static int
+vmlogrdr_register_cdev(dev_t dev) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#886: FILE: drivers/s390/char/vmlogrdr.c:822:
+	int rc = 0;
+	vmlogrdr_cdev = cdev_alloc();

WARNING:BRACES: braces {} are not necessary for single statement blocks
#887: FILE: drivers/s390/char/vmlogrdr.c:823:
+	if (!vmlogrdr_cdev) {
+		return -ENOMEM;
+	}

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#899: FILE: drivers/s390/char/vmlogrdr.c:835:
+	vmlogrdr_cdev=NULL;
 	             ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#903: FILE: drivers/s390/char/vmlogrdr.c:839:
+
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#904: FILE: drivers/s390/char/vmlogrdr.c:840:
+static void
+vmlogrdr_cleanup(void) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#906: FILE: drivers/s390/char/vmlogrdr.c:842:
+        int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#906: FILE: drivers/s390/char/vmlogrdr.c:842:
+        int i;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#909: FILE: drivers/s390/char/vmlogrdr.c:845:
+		vmlogrdr_cdev=NULL;
 		             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#911: FILE: drivers/s390/char/vmlogrdr.c:847:
+	for (i=0; i < MAXMINOR; ++i ) {
 	      ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#911: FILE: drivers/s390/char/vmlogrdr.c:847:
+	for (i=0; i < MAXMINOR; ++i ) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#918: FILE: drivers/s390/char/vmlogrdr.c:854:
+		vmlogrdr_major=0;
 		              ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#922: FILE: drivers/s390/char/vmlogrdr.c:858:
+
+

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#930: FILE: drivers/s390/char/vmlogrdr.c:866:
+	if (! MACHINE_IS_VM) {
 	    ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#931: FILE: drivers/s390/char/vmlogrdr.c:867:
+		printk (KERN_ERR "vmlogrdr: not running under VM, "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#931: FILE: drivers/s390/char/vmlogrdr.c:867:
+		printk (KERN_ERR "vmlogrdr: not running under VM, "

WARNING:SPLIT_STRING: quoted string split across lines
#932: FILE: drivers/s390/char/vmlogrdr.c:868:
+		printk (KERN_ERR "vmlogrdr: not running under VM, "
+				"driver not loaded.\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#936: FILE: drivers/s390/char/vmlogrdr.c:872:
+        recording_class_AB = vmlogrdr_get_recording_class_AB();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#936: FILE: drivers/s390/char/vmlogrdr.c:872:
+        recording_class_AB = vmlogrdr_get_recording_class_AB();$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#943: FILE: drivers/s390/char/vmlogrdr.c:879:
+	rc=vmlogrdr_register_driver();
 	  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#947: FILE: drivers/s390/char/vmlogrdr.c:883:
+	for (i=0; i < MAXMINOR; ++i ) {
 	      ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#947: FILE: drivers/s390/char/vmlogrdr.c:883:
+	for (i=0; i < MAXMINOR; ++i ) {

CHECK:SPACING: No space is necessary after a cast
#948: FILE: drivers/s390/char/vmlogrdr.c:884:
+		sys_ser[i].buffer = (char *) get_zeroed_page(GFP_KERNEL);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#954: FILE: drivers/s390/char/vmlogrdr.c:890:
+		rc=vmlogrdr_register_device(&sys_ser[i]);
 		  ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#964: FILE: drivers/s390/char/vmlogrdr.c:900:
+	printk (KERN_INFO "vmlogrdr: driver loaded\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#964: FILE: drivers/s390/char/vmlogrdr.c:900:
+	printk (KERN_INFO "vmlogrdr: driver loaded\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#969: FILE: drivers/s390/char/vmlogrdr.c:905:
+	printk (KERN_ERR "vmlogrdr: driver not loaded.\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#969: FILE: drivers/s390/char/vmlogrdr.c:905:
+	printk (KERN_ERR "vmlogrdr: driver not loaded.\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#973: FILE: drivers/s390/char/vmlogrdr.c:909:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#978: FILE: drivers/s390/char/vmlogrdr.c:914:
+	printk (KERN_INFO "vmlogrdr: driver unloaded\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#978: FILE: drivers/s390/char/vmlogrdr.c:914:
+	printk (KERN_INFO "vmlogrdr: driver unloaded\n");

WARNING:RETURN_VOID: void function return statements are not generally useful
#980: FILE: drivers/s390/char/vmlogrdr.c:916:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#982: FILE: drivers/s390/char/vmlogrdr.c:918:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000243121.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 104 errors, 87 warnings, 76 checks, 951 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000243121.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
