WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
diff -uNr linux-2.5.69/arch/i386/kernel/entry.S linux-2.5.69-cred/arch/i386/kernel/entry.S

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#54: FILE: fs/file_table.c:169:
+	if (file->f_token) vfs_token_put(file->f_token);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#66: FILE: fs/open.c:49:
+	error = user_path_walk(path,&nd);
 	                             ^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space required after that ',' (ctx:VxO)
#66: FILE: fs/open.c:49:
+	error = user_path_walk(path,&nd);
 	                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before that '&' (ctx:OxV)
#66: FILE: fs/open.c:49:
+	error = user_path_walk(path,&nd);
 	                            ^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#96: FILE: include/asm-i386/posix_types.h:16:
+typedef int		__kernel_pag_t;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#119: FILE: include/linux/cred.h:1:
+#ifndef _LINUX_CRED_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#128: FILE: include/linux/cred.h:10:
+#include <asm/atomic.h>

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#146: FILE: include/linux/cred.h:28:
+struct vfs_pag
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#155: FILE: include/linux/cred.h:37:
+struct vfs_token
+{

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#164: FILE: include/linux/cred.h:46:
+extern int sys_setpag(pag_t);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pag_t' should also have an identifier name
#164: FILE: include/linux/cred.h:46:
+extern int sys_setpag(pag_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#165: FILE: include/linux/cred.h:47:
+extern int sys_getpag(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#166: FILE: include/linux/cred.h:48:
+extern void vfs_unpag(const char *fsname);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#168: FILE: include/linux/cred.h:50:
+extern void vfs_pag_put(struct vfs_pag *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfs_pag *' should also have an identifier name
#168: FILE: include/linux/cred.h:50:
+extern void vfs_pag_put(struct vfs_pag *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#181: FILE: include/linux/cred.h:63:
+extern int vfs_pag_add_token(const char *fsname,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#188: FILE: include/linux/cred.h:70:
+extern struct vfs_token *vfs_pag_find_token(const char *fsname,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#192: FILE: include/linux/cred.h:74:
+extern void vfs_pag_withdraw_token(struct vfs_token *vtoken);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#194: FILE: include/linux/cred.h:76:
+extern void vfs_token_put(struct vfs_token *vtoken);

WARNING:NEW_TYPEDEFS: do not add new typedefs
#235: FILE: include/linux/types.h:27:
+typedef __kernel_pag_t		pag_t;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#246: FILE: init/main.c:83:
+extern void credentials_init(void);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#262: FILE: kernel/cred.c:1:
+/* cred.c: authentication credentials management

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#293: FILE: kernel/cred.c:32:
+	if ((flags & (SLAB_CTOR_VERIFY|SLAB_CTOR_CONSTRUCTOR)) == SLAB_CTOR_CONSTRUCTOR) {
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#294: FILE: kernel/cred.c:33:
+		memset(vfspag,0,sizeof(*vfspag));
 		             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#294: FILE: kernel/cred.c:33:
+		memset(vfspag,0,sizeof(*vfspag));
 		               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#304: FILE: kernel/cred.c:43:
+	if ((flags & (SLAB_CTOR_VERIFY|SLAB_CTOR_CONSTRUCTOR)) == SLAB_CTOR_CONSTRUCTOR) {
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#305: FILE: kernel/cred.c:44:
+		memset(vtoken,0,sizeof(*vtoken));
 		             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#305: FILE: kernel/cred.c:44:
+		memset(vtoken,0,sizeof(*vtoken));
 		               ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#313: FILE: kernel/cred.c:52:
+	vfs_pag_cache = kmem_cache_create("vfs_pag",
+					      sizeof(struct vfs_pag),

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#340: FILE: kernel/cred.c:79:
+	if (pag>0) {
 	       ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#343: FILE: kernel/cred.c:82:
+		    tsk->vfspag->pag==pag)
 		                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#356: FILE: kernel/cred.c:95:
+			vfspag = rb_entry(parent,struct vfs_pag,node);
 			                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#356: FILE: kernel/cred.c:95:
+			vfspag = rb_entry(parent,struct vfs_pag,node);
 			                                       ^

WARNING:INDENTED_LABEL: labels should not be indented
#369: FILE: kernel/cred.c:108:
+	pag_found:

ERROR:SPACING: space required after that ',' (ctx:VxV)
#370: FILE: kernel/cred.c:109:
+		xvfspag = xchg(&current->vfspag,vfs_pag_get(vfspag));
 		                               ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#373: FILE: kernel/cred.c:112:
+		if (xvfspag) vfs_pag_put(xvfspag);

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#376: FILE: kernel/cred.c:115:
+	else if (pag==0) {
 	            ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#376: FILE: kernel/cred.c:115:
+	}
+	else if (pag==0) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#378: FILE: kernel/cred.c:117:
+		xvfspag = xchg(&current->vfspag,NULL);
 		                               ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#380: FILE: kernel/cred.c:119:
+		if (xvfspag) vfs_pag_put(xvfspag);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 21)
#383: FILE: kernel/cred.c:122:
+	else if (pag!=-1) {
+		     return -EINVAL;

ERROR:SPACING: spaces required around that '!=' (ctx:VxO)
#383: FILE: kernel/cred.c:122:
+	else if (pag!=-1) {
 	            ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#383: FILE: kernel/cred.c:122:
+	else if (pag!=-1) {
 	              ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#383: FILE: kernel/cred.c:122:
+	}
+	else if (pag!=-1) {

WARNING:TABSTOP: Statements should start on a tabstop
#384: FILE: kernel/cred.c:123:
+		     return -EINVAL;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#388: FILE: kernel/cred.c:127:
+	vfspag = kmem_cache_alloc(vfs_pag_cache,SLAB_KERNEL);
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#392: FILE: kernel/cred.c:131:
+	atomic_set(&vfspag->usage,1);
 	                         ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#398: FILE: kernel/cred.c:137:
+	if (vfspag->pag<1)
 	               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#406: FILE: kernel/cred.c:145:
+		xvfspag = rb_entry(parent,struct vfs_pag,node);
 		                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#406: FILE: kernel/cred.c:145:
+		xvfspag = rb_entry(parent,struct vfs_pag,node);
 		                                        ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#418: FILE: kernel/cred.c:157:
+	 * looking for the next unused PAG */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#422: FILE: kernel/cred.c:161:
+		if (vfspag->pag<1)
 		               ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#427: FILE: kernel/cred.c:166:
+		else if (parent->rb_parent->rb_left==parent)
 		                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#436: FILE: kernel/cred.c:175:
+		xvfspag = rb_entry(parent,struct vfs_pag,node);
 		                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#436: FILE: kernel/cred.c:175:
+		xvfspag = rb_entry(parent,struct vfs_pag,node);
 		                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#442: FILE: kernel/cred.c:181:
+	rb_link_node(&vfspag->node,parent,p);
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#442: FILE: kernel/cred.c:181:
+	rb_link_node(&vfspag->node,parent,p);
 	                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#443: FILE: kernel/cred.c:182:
+	rb_insert_color(&vfspag->node,&vfs_pag_tree);
 	                             ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#443: FILE: kernel/cred.c:182:
+	rb_insert_color(&vfspag->node,&vfs_pag_tree);
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#446: FILE: kernel/cred.c:185:
+	xvfspag = xchg(&current->vfspag,vfspag);
 	                               ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#447: FILE: kernel/cred.c:186:
+	if (xvfspag) vfs_pag_put(xvfspag);

ERROR:SPACING: space required after that ',' (ctx:VxO)
#472: FILE: kernel/cred.c:211:
+	if (atomic_dec_and_lock(&vfspag->usage,&vfs_pag_lock)) {
 	                                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#472: FILE: kernel/cred.c:211:
+	if (atomic_dec_and_lock(&vfspag->usage,&vfs_pag_lock)) {
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#473: FILE: kernel/cred.c:212:
+		rb_erase(&vfspag->node,&vfs_pag_tree);
 		                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#473: FILE: kernel/cred.c:212:
+		rb_erase(&vfspag->node,&vfs_pag_tree);
 		                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#477: FILE: kernel/cred.c:216:
+			vtoken = list_entry(vfspag->tokens.next,struct vfs_token,link);
 			                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#477: FILE: kernel/cred.c:216:
+			vtoken = list_entry(vfspag->tokens.next,struct vfs_token,link);
 			                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#482: FILE: kernel/cred.c:221:
+		kmem_cache_free(vfs_pag_cache,vfspag);
 		                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#495: FILE: kernel/cred.c:234:
+		kmem_cache_free(vfs_pag_cache,vtoken);
 		                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#519: FILE: kernel/cred.c:258:
+	vtoken = kmem_cache_alloc(vfs_token_cache,SLAB_KERNEL);
 	                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#527: FILE: kernel/cred.c:266:
+	vtoken->blob = kmalloc(vtoken->size,SLAB_KERNEL);
 	                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#533: FILE: kernel/cred.c:272:
+	atomic_set(&vtoken->usage,1);
 	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#535: FILE: kernel/cred.c:274:
+	memcpy(vtoken->blob,fsname,vtoken->k_off);
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#535: FILE: kernel/cred.c:274:
+	memcpy(vtoken->blob,fsname,vtoken->k_off);
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#536: FILE: kernel/cred.c:275:
+	memcpy(vtoken->blob+vtoken->k_off,key,klen);
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#536: FILE: kernel/cred.c:275:
+	memcpy(vtoken->blob+vtoken->k_off,key,klen);
 	                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#536: FILE: kernel/cred.c:275:
+	memcpy(vtoken->blob+vtoken->k_off,key,klen);
 	                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#537: FILE: kernel/cred.c:276:
+	memcpy(vtoken->blob+vtoken->d_off,key,dlen);
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#537: FILE: kernel/cred.c:276:
+	memcpy(vtoken->blob+vtoken->d_off,key,dlen);
 	                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#537: FILE: kernel/cred.c:276:
+	memcpy(vtoken->blob+vtoken->d_off,key,dlen);
 	                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#540: FILE: kernel/cred.c:279:
+	list_add_tail(&vtoken->link,&vfspag->tokens);
 	                           ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#540: FILE: kernel/cred.c:279:
+	list_add_tail(&vtoken->link,&vfspag->tokens);
 	                            ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#547: FILE: kernel/cred.c:286:
+EXPORT_SYMBOL(vfs_pag_add_token);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#560: FILE: kernel/cred.c:299:
+	if (!vfspag) return NULL;

ERROR:SPACING: space required after that ',' (ctx:VxO)
#564: FILE: kernel/cred.c:303:
+	list_for_each_entry(vtoken,&vfspag->tokens,link) {
 	                          ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#564: FILE: kernel/cred.c:303:
+	list_for_each_entry(vtoken,&vfspag->tokens,link) {
 	                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#564: FILE: kernel/cred.c:303:
+	list_for_each_entry(vtoken,&vfspag->tokens,link) {
 	                                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#565: FILE: kernel/cred.c:304:
+		if (vtoken->d_off-vtoken->k_off == klen &&
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#566: FILE: kernel/cred.c:305:
+		    strcmp(vtoken->blob,fsname)==0 &&
 		                       ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#566: FILE: kernel/cred.c:305:
+		    strcmp(vtoken->blob,fsname)==0 &&
 		                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#567: FILE: kernel/cred.c:306:
+		    memcmp(vtoken->blob+vtoken->k_off,key,klen)==0)
 		                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#567: FILE: kernel/cred.c:306:
+		    memcmp(vtoken->blob+vtoken->k_off,key,klen)==0)
 		                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#567: FILE: kernel/cred.c:306:
+		    memcmp(vtoken->blob+vtoken->k_off,key,klen)==0)
 		                                         ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#567: FILE: kernel/cred.c:306:
+		    memcmp(vtoken->blob+vtoken->k_off,key,klen)==0)
 		                                               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#568: FILE: kernel/cred.c:307:
+^I^I^Igoto found;^I^I    $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#579: FILE: kernel/cred.c:318:
+EXPORT_SYMBOL(vfs_pag_find_token);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#600: FILE: kernel/cred.c:339:
+EXPORT_SYMBOL(vfs_pag_withdraw_token);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#617: FILE: kernel/cred.c:356:
+	list_for_each_safe(_p,_n,&vfspag->tokens) {
 	                     ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#617: FILE: kernel/cred.c:356:
+	list_for_each_safe(_p,_n,&vfspag->tokens) {
 	                        ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#617: FILE: kernel/cred.c:356:
+	list_for_each_safe(_p,_n,&vfspag->tokens) {
 	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#618: FILE: kernel/cred.c:357:
+		vtoken = list_entry(_p,struct vfs_token,link);
 		                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#618: FILE: kernel/cred.c:357:
+		vtoken = list_entry(_p,struct vfs_token,link);
 		                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#620: FILE: kernel/cred.c:359:
+		if (strcmp(fsname,vtoken->blob)==0) {
 		                 ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#620: FILE: kernel/cred.c:359:
+		if (strcmp(fsname,vtoken->blob)==0) {
 		                               ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#637: FILE: kernel/fork.c:888:
+	if (p->vfspag) vfs_pag_get(p->vfspag);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000370622.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 74 errors, 17 warnings, 15 checks, 561 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000370622.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
