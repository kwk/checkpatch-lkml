WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#49: 
diff -urNp --exclude TAGS -X /home/rusty/current-dontdiff --minimal linux-2.5-bk/include/linux/kmod.h working-2.5-bk-kmod-noclean/include/linux/kmod.h

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#66: FILE: include/linux/kmod.h:33:
+extern int exec_usermodehelper(char *program_path, char *argv[], char *envp[])  __deprecated;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#67: FILE: include/linux/kmod.h:34:
+extern int call_usermodehelper(char *path, char *argv[], char *envp[], int wait);

WARNING:STATIC_CONST_CHAR_ARRAY: char * array declaration might be better as static const
#137: FILE: kernel/kmod.c:176:
+	char *argv[] = { modprobe_path, "--", (char*)module_name, NULL };

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#137: FILE: kernel/kmod.c:176:
+	char *argv[] = { modprobe_path, "--", (char*)module_name, NULL };

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:STATIC_CONST_CHAR_ARRAY: char * array declaration might be better as static const
#138: FILE: kernel/kmod.c:177:
+	static char *envp[] = { "HOME=/",

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#169: FILE: kernel/kmod.c:198:
+	max_modprobes = min(max_threads/2, MAX_KMOD_CONCURRENT);
 	                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'request_module', this function's name, in a string
#177: FILE: kernel/kmod.c:204:
+			       "request_module: runaway loop modprobe %s\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:LINE_SPACING: Missing a blank line after declarations
#195: FILE: kernel/kmod.c:214:
+		unsigned long now = jiffies;
+		if (now - last > HZ) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#197: FILE: kernel/kmod.c:216:
+			printk(KERN_DEBUG

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'request_module', this function's name, in a string
#198: FILE: kernel/kmod.c:217:
+			       "request_module: failed %s -- %s. error = %d\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#286: FILE: kernel/kmod.c:302:
+	 * until that is done.  */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:BRACES: braces {} should be used on all arms of this statement
#294: FILE: kernel/kmod.c:310:
+	if (pid < 0) {
[...]
+		complete(sub_info->complete);
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#355: FILE: drivers/base/hotplug.c:117:
+	retval = call_usermodehelper (argv [0], argv, envp, 0);

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#355: FILE: drivers/base/hotplug.c:117:
+	retval = call_usermodehelper (argv [0], argv, envp, 0);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#379: FILE: drivers/input/input.c:386:
+	value = call_usermodehelper(argv [0], argv, envp, 0);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#403: FILE: drivers/pnp/pnpbios/core.c:605:
+	value = call_usermodehelper (argv [0], argv, envp, 0);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#403: FILE: drivers/pnp/pnpbios/core.c:605:
+	value = call_usermodehelper (argv [0], argv, envp, 0);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#427: FILE: net/core/dev.c:2921:
+	return call_usermodehelper(argv [0], argv, envp, 0);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000402687.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 10 warnings, 4 checks, 331 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000402687.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
