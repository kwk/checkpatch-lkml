WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
diff -u -urN linux-2.4.13-ac4-vanilla/fs/partitions/ldm.c linux-2.4.13-ac4-ldm/fs/partitions/ldm.c

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#58: FILE: fs/partitions/ldm.c:21:
  * in the file COPYING); if not, write to the Free Software Foundation,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#59: FILE: fs/partitions/ldm.c:22:
  * Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#83: FILE: fs/partitions/ldm.c:175:
+ */ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#85: FILE: fs/partitions/ldm.c:177:
+static int add_partition_to_list(struct list_head *pl, const struct gendisk *hd,
+		const int disk_minor, const unsigned long start,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'start < 1'
#93: FILE: fs/partitions/ldm.c:185:
+	if ((start < 1) || ((start + size) > hd->part[disk_minor].nr_sects)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#94: FILE: fs/partitions/ldm.c:186:
+		printk(LDM_CRIT "LDM partition exceeds physical disk. "

WARNING:SPLIT_STRING: quoted string split across lines
#95: FILE: fs/partitions/ldm.c:187:
+		printk(LDM_CRIT "LDM partition exceeds physical disk. "
+				"Skipping.\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#98: FILE: fs/partitions/ldm.c:190:
+	lp = (struct ldm_part*)kmalloc(sizeof(struct ldm_part), GFP_KERNEL);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#98: FILE: fs/partitions/ldm.c:190:
+	lp = (struct ldm_part*)kmalloc(sizeof(struct ldm_part), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*lp)...) over kmalloc(sizeof(struct ldm_part)...)
#98: FILE: fs/partitions/ldm.c:190:
+	lp = (struct ldm_part*)kmalloc(sizeof(struct ldm_part), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#100: FILE: fs/partitions/ldm.c:192:
+		printk(LDM_CRIT "Not enough memory! Aborting LDM partition "

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#100: FILE: fs/partitions/ldm.c:192:
+	if (!lp) {
+		printk(LDM_CRIT "Not enough memory! Aborting LDM partition "

WARNING:SPLIT_STRING: quoted string split across lines
#101: FILE: fs/partitions/ldm.c:193:
+		printk(LDM_CRIT "Not enough memory! Aborting LDM partition "
+				"parsing.\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#113: FILE: fs/partitions/ldm.c:205:
+		printk(LDM_CRIT "Duplicate LDM partition entry! Skipping.\n");

CHECK:CAMELCASE: Avoid CamelCase: <Sector>
#143: FILE: fs/partitions/ldm.c:242:
+	Sector sect;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#177: FILE: fs/partitions/ldm.c:295:
+			if (add_partition_to_list(&pl, hd, disk_minor,
 					first_sector + vb->start_sector +

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#190: FILE: fs/partitions/ldm.c:305:
+	printk(" <");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#195: FILE: fs/partitions/ldm.c:310:
+	printk(" >\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000504027.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 10 warnings, 5 checks, 170 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000504027.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
