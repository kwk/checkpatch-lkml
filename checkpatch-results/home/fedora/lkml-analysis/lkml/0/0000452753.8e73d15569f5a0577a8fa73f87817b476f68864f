WARNING:LINE_SPACING: Missing a blank line after declarations
#488: FILE: drivers/ide/ide.c:197:
+			u8 pio = XFER_PIO_4;
+			drive->crc_count = 0;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#491: FILE: drivers/ide/ide.c:200:
+			case XFER_UDMA_7: pio = XFER_UDMA_6;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#493: FILE: drivers/ide/ide.c:202:
+			case XFER_UDMA_6: pio = XFER_UDMA_5;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#495: FILE: drivers/ide/ide.c:204:
+			case XFER_UDMA_5: pio = XFER_UDMA_4;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#497: FILE: drivers/ide/ide.c:206:
+			case XFER_UDMA_4: pio = XFER_UDMA_3;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#499: FILE: drivers/ide/ide.c:208:
+			case XFER_UDMA_3: pio = XFER_UDMA_2;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#501: FILE: drivers/ide/ide.c:210:
+			case XFER_UDMA_2: pio = XFER_UDMA_1;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#503: FILE: drivers/ide/ide.c:212:
+			case XFER_UDMA_1: pio = XFER_UDMA_0;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#603: FILE: drivers/ide/ide-floppy.c:1063:
+	if (test_bit (PC_DMA_RECOMMENDED, &pc->flags) && drive->using_dma)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#718: FILE: drivers/ide/ide-tape.c:2261:
+	if (test_bit (PC_DMA_RECOMMENDED, &pc->flags) && drive->using_dma)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#744: FILE: drivers/ide/ide-taskfile.c:362:
+		if (ar->cmd == WIN_WRITEDMA
+		      || ar->cmd == WIN_WRITEDMA_EXT

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#745: FILE: drivers/ide/ide-taskfile.c:363:
+		      || ar->cmd == WIN_WRITEDMA_EXT
+		      || ar->cmd == WIN_READDMA

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#757: FILE: drivers/ide/ide-taskfile.c:374:
+			printk(KERN_ERR "%s: unknown command %x\n", __FUNCTION__, ar->cmd);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#757: FILE: drivers/ide/ide-taskfile.c:374:
+			printk(KERN_ERR "%s: unknown command %x\n", __FUNCTION__, ar->cmd);

ERROR:SPACING: space required before the open parenthesis '('
#853: FILE: drivers/ide/ide-taskfile.c:623:
+			switch(ar->taskfile.feature) {

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#969: FILE: drivers/ide/ioctl.c:238:
+			if (!drive->id || !(drive->id->capability & 1) || !drive->channel->udma_setup)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1429: FILE: drivers/ide/trm290.c:201:
+
+

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_device *' should also have an identifier name
#1533: FILE: include/linux/ide.h:458:
+	int (*udma_setup)(struct ata_device *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: Unnecessary space before function pointer arguments
#1543: FILE: include/linux/ide.h:463:
+	int (*udma_init) (struct ata_device *, struct request *rq);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_device *' should also have an identifier name
#1543: FILE: include/linux/ide.h:463:
+	int (*udma_init) (struct ata_device *, struct request *rq);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1581: FILE: include/linux/ide.h:793:
+extern void udma_pci_enable(struct ata_device *drive, int on, int verbose);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1582: FILE: include/linux/ide.h:794:
+extern int udma_pci_start(struct ata_device *drive, struct request *rq);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1583: FILE: include/linux/ide.h:795:
+extern int udma_pci_stop(struct ata_device *drive);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1584: FILE: include/linux/ide.h:796:
+extern int udma_pci_init(struct ata_device *drive, struct request *rq);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1585: FILE: include/linux/ide.h:797:
+extern int udma_pci_irq_status(struct ata_device *drive);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1586: FILE: include/linux/ide.h:798:
+extern void udma_pci_timeout(struct ata_device *drive);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1587: FILE: include/linux/ide.h:799:
+extern void udma_pci_irq_lost(struct ata_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_device *' should also have an identifier name
#1587: FILE: include/linux/ide.h:799:
+extern void udma_pci_irq_lost(struct ata_device *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1588: FILE: include/linux/ide.h:800:
+extern int udma_pci_setup(struct ata_device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_device *' should also have an identifier name
#1588: FILE: include/linux/ide.h:800:
+extern int udma_pci_setup(struct ata_device *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000452753.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 11 warnings, 11 checks, 1369 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000452753.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
