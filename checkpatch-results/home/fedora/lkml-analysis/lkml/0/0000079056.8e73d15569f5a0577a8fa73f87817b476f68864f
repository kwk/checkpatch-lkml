CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/nmi.h> instead of <asm/nmi.h>
#37: FILE: arch/i386/kernel/apic.c:39:
+#include <asm/nmi.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/nmi.h> instead of <asm/nmi.h>
#49: FILE: arch/i386/kernel/io_apic.c:41:
+#include <asm/nmi.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/nmi.h> instead of <asm/nmi.h>
#87: FILE: arch/i386/kernel/smpboot.c:55:
+#include <asm/nmi.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/nmi.h> instead of <asm/nmi.h>
#99: FILE: arch/i386/oprofile/op_model_athlon.c:16:
+#include <asm/nmi.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/nmi.h> instead of <asm/nmi.h>
#111: FILE: arch/i386/oprofile/op_model_p4.c:17:
+#include <asm/nmi.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/nmi.h> instead of <asm/nmi.h>
#123: FILE: arch/i386/oprofile/op_model_ppro.c:17:
+#include <asm/nmi.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/nmi.h> instead of <asm/nmi.h>
#135: FILE: arch/x86_64/kernel/io_apic.c:44:
+#include <asm/nmi.h>

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#203: FILE: include/asm-i386/nmi.h:28:
+extern void setup_apic_nmi_watchdog (void);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#203: FILE: include/asm-i386/nmi.h:28:
+extern void setup_apic_nmi_watchdog (void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#204: FILE: include/asm-i386/nmi.h:29:
+extern int reserve_lapic_nmi(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#205: FILE: include/asm-i386/nmi.h:30:
+extern void release_lapic_nmi(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#206: FILE: include/asm-i386/nmi.h:31:
+extern void disable_timer_nmi_watchdog(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#207: FILE: include/asm-i386/nmi.h:32:
+extern void enable_timer_nmi_watchdog(void);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#208: FILE: include/asm-i386/nmi.h:33:
+extern void nmi_watchdog_tick (struct pt_regs * regs);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#208: FILE: include/asm-i386/nmi.h:33:
+extern void nmi_watchdog_tick (struct pt_regs * regs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#208: FILE: include/asm-i386/nmi.h:33:
+extern void nmi_watchdog_tick (struct pt_regs * regs);

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#258: FILE: include/asm-x86_64/nmi.h:8:
+#include <asm/io.h>

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#292: FILE: include/asm-x86_64/nmi.h:60:
+extern void setup_apic_nmi_watchdog (void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#292: FILE: include/asm-x86_64/nmi.h:60:
+extern void setup_apic_nmi_watchdog (void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#293: FILE: include/asm-x86_64/nmi.h:61:
+extern int reserve_lapic_nmi(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#294: FILE: include/asm-x86_64/nmi.h:62:
+extern void release_lapic_nmi(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#295: FILE: include/asm-x86_64/nmi.h:63:
+extern void disable_timer_nmi_watchdog(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#296: FILE: include/asm-x86_64/nmi.h:64:
+extern void enable_timer_nmi_watchdog(void);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#297: FILE: include/asm-x86_64/nmi.h:65:
+extern void nmi_watchdog_tick (struct pt_regs * regs, unsigned reason);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#297: FILE: include/asm-x86_64/nmi.h:65:
+extern void nmi_watchdog_tick (struct pt_regs * regs, unsigned reason);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#297: FILE: include/asm-x86_64/nmi.h:65:
+extern void nmi_watchdog_tick (struct pt_regs * regs, unsigned reason);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#297: FILE: include/asm-x86_64/nmi.h:65:
+extern void nmi_watchdog_tick (struct pt_regs * regs, unsigned reason);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#299: FILE: include/asm-x86_64/nmi.h:67:
+extern void nmi_watchdog_default(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#300: FILE: include/asm-x86_64/nmi.h:68:
+extern int setup_nmi_watchdog(char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#300: FILE: include/asm-x86_64/nmi.h:68:
+extern int setup_nmi_watchdog(char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000079056.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 7 warnings, 21 checks, 244 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000079056.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
