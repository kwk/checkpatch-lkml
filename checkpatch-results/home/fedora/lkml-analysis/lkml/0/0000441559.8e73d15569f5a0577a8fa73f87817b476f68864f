WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
     You can pull this changeset from bk://thebsh.namesys.com/bk/reiser3-linux-2.5

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#37: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#38: 
# Project Name: Linux kernel tree

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#39: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#40: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#41: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#43: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#45: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
# 02/08/06	green@angband.namesys.com	1.470

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
# reiserfs_fs.h, namei.c, bitmap.c:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
#   fix __FUNCTION__ usage, since its use in string literals is deprecated now.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#60: 
--- a/fs/reiserfs/bitmap.c	Tue Aug  6 10:58:15 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#67: FILE: fs/reiserfs/bitmap.c:691:
blocks count.\n");

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#68: FILE: fs/reiserfs/bitmap.c:692:
+     reiserfs_warning("zam-4001:%s inode has negative prealloc blocks $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: fs/reiserfs/bitmap.c:692:
+     reiserfs_warning("zam-4001:%s inode has negative prealloc blocks $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#80: FILE: fs/reiserfs/bitmap.c:708:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: fs/reiserfs/bitmap.c:708:
+ $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#80: FILE: fs/reiserfs/bitmap.c:708:
  	if (!ei->i_prealloc_count) {
+ 

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#95: FILE: fs/reiserfs/namei.c:300:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: fs/reiserfs/namei.c:300:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#108: FILE: fs/reiserfs/namei.c:472:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: fs/reiserfs/namei.c:472:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#110: FILE: fs/reiserfs/namei.c:474:
+                              " unexpected value (%d)\n", __FUNCTION__, retval);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: fs/reiserfs/namei.c:474:
+                              " unexpected value (%d)\n", __FUNCTION__, retval);$

WARNING:SPLIT_STRING: quoted string split across lines
#110: FILE: fs/reiserfs/namei.c:474:
     reiserfs_warning ("zam-7002:%s: \"reiserfs_find_entry\" has returned"
+                              " unexpected value (%d)\n", __FUNCTION__, retval);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#110: FILE: fs/reiserfs/namei.c:474:
+                              " unexpected value (%d)\n", __FUNCTION__, retval);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: include/linux/reiserfs_fs.h:82:
+  reiserfs_panic( 0, "reiserfs[%i]: assertion " #cond " failed at "^I\$

ERROR:SPACING: space prohibited after that open parenthesis '('
#126: FILE: include/linux/reiserfs_fs.h:82:
+  reiserfs_panic( 0, "reiserfs[%i]: assertion " #cond " failed at "	\

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#127: FILE: include/linux/reiserfs_fs.h:83:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: include/linux/reiserfs_fs.h:83:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#129: FILE: include/linux/reiserfs_fs.h:84:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#129: FILE: include/linux/reiserfs_fs.h:84:
+ 
+ 

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: include/linux/reiserfs_fs.h:84:
+ $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000441559.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 27 warnings, 2 checks, 57 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000441559.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
