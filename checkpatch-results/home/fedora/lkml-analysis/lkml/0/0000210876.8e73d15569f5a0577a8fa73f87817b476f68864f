WARNING:TYPO_SPELLING: 'modifed' may be misspelled - perhaps 'modified'?
#46: 
 >> >>         /* modifed, no need to track it any more */
                  ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#52: 
 SCT> Actually, the whole thing can be wrapped in if (jh->b_tcount > 0) {}, I

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#90: FILE: include/linux/journal-head.h:39:
+	unsigned b_modified;

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#143: FILE: include/linux/ext3_jbd.h:178:
+	__ext3_journal_get_undo_access(__FUNCTION__, (handle), (bh))

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#148: FILE: include/linux/ext3_jbd.h:180:
+	__ext3_journal_get_write_access(__FUNCTION__, (handle), (bh))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#162: FILE: include/linux/jbd.h:868:
+extern int	 journal_get_write_access(handle_t *, struct buffer_head *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'handle_t *' should also have an identifier name
#162: FILE: include/linux/jbd.h:868:
+extern int	 journal_get_write_access(handle_t *, struct buffer_head *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct buffer_head *' should also have an identifier name
#162: FILE: include/linux/jbd.h:868:
+extern int	 journal_get_write_access(handle_t *, struct buffer_head *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#166: FILE: include/linux/jbd.h:870:
+extern int	 journal_get_undo_access(handle_t *, struct buffer_head *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'handle_t *' should also have an identifier name
#166: FILE: include/linux/jbd.h:870:
+extern int	 journal_get_undo_access(handle_t *, struct buffer_head *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct buffer_head *' should also have an identifier name
#166: FILE: include/linux/jbd.h:870:
+extern int	 journal_get_undo_access(handle_t *, struct buffer_head *);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#171: FILE: include/linux/jbd.h:873:
+extern void	 journal_release_buffer (handle_t *, struct buffer_head *);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#171: FILE: include/linux/jbd.h:873:
+extern void	 journal_release_buffer (handle_t *, struct buffer_head *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'handle_t *' should also have an identifier name
#171: FILE: include/linux/jbd.h:873:
+extern void	 journal_release_buffer (handle_t *, struct buffer_head *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct buffer_head *' should also have an identifier name
#171: FILE: include/linux/jbd.h:873:
+extern void	 journal_release_buffer (handle_t *, struct buffer_head *);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#184: FILE: fs/jbd/transaction.c:525:
+^I^I^Iint force_copy) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'trasaction' may be misspelled - perhaps 'transaction'?
#325: FILE: fs/jbd/commit.c:233:
+	 * will be tracked for a new trasaction only -bzzz
 	                             ^^^^^^^^^^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#329: FILE: fs/jbd/commit.c:237:
+		new_jh = jh = commit_transaction->t_buffers->b_tnext;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#332: FILE: fs/jbd/commit.c:240:
+			J_ASSERT_JH(new_jh, new_jh->b_modified == 1 ||
+					new_jh->b_modified == 0);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000210876.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 13 warnings, 5 checks, 279 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000210876.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
