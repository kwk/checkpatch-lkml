WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
Recently I have had a problem with Linux proxy arp feature (using with shaper 

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 24)
#54: FILE: arp.c:769:
                } else if (IN_DEV_FORWARD(in_dev)) {
+                        char shflag=0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#55: FILE: arp.c:770:
+                        char shflag=0;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#55: FILE: arp.c:770:
+                        char shflag=0;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#55: FILE: arp.c:770:
+                        char shflag=0;
                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#56: FILE: arp.c:771:
+                        if ( (rt->u.dst.dev) &&$

WARNING:LINE_SPACING: Missing a blank line after declarations
#56: FILE: arp.c:771:
+                        char shflag=0;
+                        if ( (rt->u.dst.dev) &&

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#56: FILE: arp.c:771:
+                        if ( (rt->u.dst.dev) &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 25)
#56: FILE: arp.c:771:
+                        if ( (rt->u.dst.dev) &&
[...]
+                         shflag=1;

ERROR:SPACING: space prohibited after that open parenthesis '('
#56: FILE: arp.c:771:
+                        if ( (rt->u.dst.dev) &&

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rt->u.dst.dev'
#56: FILE: arp.c:771:
+                        if ( (rt->u.dst.dev) &&
+                            (rt->u.dst.dev->priv) &&
+                            (((struct shaper *) rt->u.dst.dev->priv)->dev) &&
+                            (strncmp(rt->u.dst.dev->name,"shaper",6)==0) )

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rt->u.dst.dev->priv'
#56: FILE: arp.c:771:
+                        if ( (rt->u.dst.dev) &&
+                            (rt->u.dst.dev->priv) &&
+                            (((struct shaper *) rt->u.dst.dev->priv)->dev) &&
+                            (strncmp(rt->u.dst.dev->name,"shaper",6)==0) )

ERROR:CODE_INDENT: code indent should use tabs where possible
#57: FILE: arp.c:772:
+                            (rt->u.dst.dev->priv) &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#57: FILE: arp.c:772:
+                            (rt->u.dst.dev->priv) &&$

ERROR:CODE_INDENT: code indent should use tabs where possible
#58: FILE: arp.c:773:
+                            (((struct shaper *) rt->u.dst.dev->priv)->dev) &&$

CHECK:SPACING: No space is necessary after a cast
#58: FILE: arp.c:773:
+                            (((struct shaper *) rt->u.dst.dev->priv)->dev) &&

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#58: FILE: arp.c:773:
+                            (((struct shaper *) rt->u.dst.dev->priv)->dev) &&$

ERROR:CODE_INDENT: code indent should use tabs where possible
#59: FILE: arp.c:774:
+                            (strncmp(rt->u.dst.dev->name,"shaper",6)==0) )$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: arp.c:774:
+                            (strncmp(rt->u.dst.dev->name,"shaper",6)==0) )$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#59: FILE: arp.c:774:
+                            (strncmp(rt->u.dst.dev->name,"shaper",6)==0) )
                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#59: FILE: arp.c:774:
+                            (strncmp(rt->u.dst.dev->name,"shaper",6)==0) )
                                                                  ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#59: FILE: arp.c:774:
+                            (strncmp(rt->u.dst.dev->name,"shaper",6)==0) )
                                                                     ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#59: FILE: arp.c:774:
+                            (strncmp(rt->u.dst.dev->name,"shaper",6)==0) )

ERROR:CODE_INDENT: code indent should use tabs where possible
#60: FILE: arp.c:775:
+                         shflag=1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#60: FILE: arp.c:775:
+                         shflag=1;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#60: FILE: arp.c:775:
+                         shflag=1;
                                ^

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#63: FILE: arp.c:776:
dev &&

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:CODE_INDENT: code indent should use tabs where possible
#64: FILE: arp.c:777:
+                           (addr_type == RTN_UNICAST  &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#64: FILE: arp.c:777:
+                           (addr_type == RTN_UNICAST  &&$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#65: FILE: arp.c:778:
+                           ( ((shflag) && ( ((struct shaper *) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#65: FILE: arp.c:778:
+                           ( ((shflag) && ( ((struct shaper *) $

CHECK:SPACING: No space is necessary after a cast
#65: FILE: arp.c:778:
+                           ( ((shflag) && ( ((struct shaper *) 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#65: FILE: arp.c:778:
+                           ( ((shflag) && ( ((struct shaper *) $

ERROR:SPACING: space prohibited after that open parenthesis '('
#65: FILE: arp.c:778:
+                           ( ((shflag) && ( ((struct shaper *) 

ERROR:CODE_INDENT: code indent should use tabs where possible
#71: FILE: arp.c:780:
+                               n = neigh_event_ns(&arp_tbl, sha, &sip, dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: arp.c:780:
+                               n = neigh_event_ns(&arp_tbl, sha, &sip, dev);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000523364.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 19 errors, 13 warnings, 4 checks, 31 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000523364.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
