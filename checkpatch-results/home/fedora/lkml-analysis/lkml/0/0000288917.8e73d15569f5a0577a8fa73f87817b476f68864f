WARNING:TYPO_SPELLING: 'immediatly' may be misspelled - perhaps 'immediately'?
#39: 
are not allocated immediatly, for example when created via shmget().
                  ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#223: FILE: fs/hugetlbfs/inode.c:71:
+		printk(KERN_WARNING "region_add: existing region missing\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'region_add', this function's name, in a string
#223: FILE: fs/hugetlbfs/inode.c:71:
+		printk(KERN_WARNING "region_add: existing region missing\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#241: FILE: fs/hugetlbfs/inode.c:89:
+		 * which we intend to reuse, free it. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'guarentee' may be misspelled - perhaps 'guarantee'?
#267: FILE: fs/hugetlbfs/inode.c:115:
+	 * size such that we can guarentee to record the reservation. */
 	                         ^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#267: FILE: fs/hugetlbfs/inode.c:115:
+	 * size such that we can guarentee to record the reservation. */

WARNING:TYPO_SPELLING: 'futher' may be misspelled - perhaps 'further'?
#292: FILE: fs/hugetlbfs/inode.c:140:
+		/* We overlap with this area, if it extends futher than
 		                                            ^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#294: FILE: fs/hugetlbfs/inode.c:142:
+		 * existing reservation. */

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#335: FILE: fs/hugetlbfs/inode.c:183:
+#if 0

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#341: FILE: fs/hugetlbfs/inode.c:189:
+		printk(KERN_WARNING "rg<%p> f<%lld> t<%lld>\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#342: FILE: fs/hugetlbfs/inode.c:190:
+		printk(KERN_WARNING "rg<%p> f<%lld> t<%lld>\n",
+				rg, rg->from, rg->to);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#348: FILE: fs/hugetlbfs/inode.c:196:
+ * and check it against both the commitment and quota limits. */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#369: FILE: fs/hugetlbfs/inode.c:217:
+}
+static int hugetlb_acct_commit(struct inode *inode, int from, int to)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#373: FILE: fs/hugetlbfs/inode.c:221:
+}
+static void hugetlb_acct_undo(struct inode *inode, int chg)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#378: FILE: fs/hugetlbfs/inode.c:226:
+}
+static void hugetlb_acct_release(struct inode *inode, int to)

WARNING:LINE_SPACING: Missing a blank line after declarations
#390: FILE: fs/hugetlbfs/inode.c:238:
+	long htlb = atomic_read(&hugetlbzone_resv);
+	return sprintf(buf, "HugePages_Reserved: %5lu\n", htlb);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#411: FILE: fs/hugetlbfs/inode.c:275:
+	chg = hugetlb_acct_prepare(inode, VMACCTPG(vma->vm_pgoff),
+			VMACCTPG(vma->vm_pgoff + (vma_len >> PAGE_SHIFT)));

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 15)
#424: FILE: fs/hugetlbfs/inode.c:286:
+	if (ret == 0) {
+	       if (inode->i_size < len)

CHECK:BRACES: braces {} should be used on all arms of this statement
#424: FILE: fs/hugetlbfs/inode.c:286:
+	if (ret == 0) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TABSTOP: Statements should start on a tabstop
#425: FILE: fs/hugetlbfs/inode.c:287:
+	       if (inode->i_size < len)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 24)
#425: FILE: fs/hugetlbfs/inode.c:287:
+	       if (inode->i_size < len)
+			inode->i_size = len;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#428: FILE: fs/hugetlbfs/inode.c:290:
+		hugetlb_acct_commit(inode, VMACCTPG(vma->vm_pgoff),
+			VMACCTPG(vma->vm_pgoff + (vma_len >> PAGE_SHIFT)));

CHECK:BRACES: Unbalanced braces around else statement
#429: FILE: fs/hugetlbfs/inode.c:291:
+	} else

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#528: FILE: fs/hugetlbfs/inode.c:970:
+	 * shared memory segments. */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#566: FILE: include/linux/hugetlb.h:131:
 }
+int hugetlbfs_report_meminfo(char *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000288917.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 16 warnings, 9 checks, 478 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000288917.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
