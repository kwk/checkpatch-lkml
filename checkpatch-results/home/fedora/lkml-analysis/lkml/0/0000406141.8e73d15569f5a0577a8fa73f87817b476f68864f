WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#61: FILE: kernel/id2ptr.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#62: FILE: kernel/id2ptr.c:2:
+ * kernel/id2ptr.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:TYPO_SPELLING: 'arbitary' may be misspelled - perhaps 'arbitrary'?
#76: FILE: kernel/id2ptr.c:16:
+ * of the desired ID data structure within the block and an arbitary
                                                             ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#97: FILE: kernel/id2ptr.c:37:
+#include <asm/uaccess.h>

CHECK:BIT_MACRO: Prefer using the BIT macro
#130: FILE: kernel/id2ptr.c:70:
+#define KMALLOCSZ		(1 << KMALLOCSZ_INBITS)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#137: FILE: kernel/id2ptr.c:77:
+#define BLKSZ			(1 << BLKSZ_INBITS)

CHECK:BIT_MACRO: Prefer using the BIT macro
#141: FILE: kernel/id2ptr.c:81:
+#define KEYSZ			(1 << KEYSZ_INBITS)

CHECK:BIT_MACRO: Prefer using the BIT macro
#145: FILE: kernel/id2ptr.c:85:
+#define CODESZ			(1 << CODESZ_INBITS)

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#159: FILE: kernel/id2ptr.c:99:
+	spinlock_t lock;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#168: FILE: kernel/id2ptr.c:108:
+	unsigned id;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#169: FILE: kernel/id2ptr.c:109:
+	unsigned ctr;

ERROR:SPACING: space required before the open parenthesis '('
#202: FILE: kernel/id2ptr.c:142:
+	if(likely(!isp->bitmap)) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#202: FILE: kernel/id2ptr.c:142:
+	if(likely(!isp->bitmap)) {
[...]
+	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#218: FILE: kernel/id2ptr.c:158:
+static inline unsigned id_mk(struct iddata *p, unsigned arb)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#218: FILE: kernel/id2ptr.c:158:
+static inline unsigned id_mk(struct iddata *p, unsigned arb)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#220: FILE: kernel/id2ptr.c:160:
+	unsigned base, off, i, key, code, id;

CHECK:SPACING: No space is necessary after a cast
#222: FILE: kernel/id2ptr.c:162:
+	base = (unsigned) ((unsigned long)p - PAGE_OFFSET);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#222: FILE: kernel/id2ptr.c:162:
+	base = (unsigned) ((unsigned long)p - PAGE_OFFSET);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#228: FILE: kernel/id2ptr.c:168:
+	if (unlikely((arb|key|i) == 0))
 	                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#228: FILE: kernel/id2ptr.c:168:
+	if (unlikely((arb|key|i) == 0))
 	                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#229: FILE: kernel/id2ptr.c:169:
+		arb=1; /* do not allow an ID == 0 to be created */
 		   ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#233: FILE: kernel/id2ptr.c:173:
+	BUG_ON(key >= KEYSZ);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#234: FILE: kernel/id2ptr.c:174:
+	BUG_ON(off % sizeof(struct iddata));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#235: FILE: kernel/id2ptr.c:175:
+	BUG_ON(i >= MAX_IDS_PERBLK);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#236: FILE: kernel/id2ptr.c:176:
+	BUG_ON(code >= CODESZ);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#248: FILE: kernel/id2ptr.c:188:
+	unsigned i, base, key;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#252: FILE: kernel/id2ptr.c:192:
+	if (unlikely(!isp->bitmap)) {
+		id_init_finish(isp);
+	}

CHECK:SPACING: No space is necessary after a cast
#263: FILE: kernel/id2ptr.c:203:
+			base = (unsigned) ((unsigned long)p - PAGE_OFFSET);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#263: FILE: kernel/id2ptr.c:203:
+			base = (unsigned) ((unsigned long)p - PAGE_OFFSET);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#265: FILE: kernel/id2ptr.c:205:
+			BUG_ON(base & ~KMALLOCSZ_MASK);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#266: FILE: kernel/id2ptr.c:206:
+			BUG_ON(base & BLKSZ_MASK);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#294: FILE: kernel/id2ptr.c:234:
+static struct iddata *id_lookup_l(struct idspace *isp, unsigned id)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#297: FILE: kernel/id2ptr.c:237:
+	unsigned key, code, i, base;

CHECK:SPACING: No space is necessary after a cast
#303: FILE: kernel/id2ptr.c:243:
+	p = (struct iddata *) ((unsigned long)base + PAGE_OFFSET);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#305: FILE: kernel/id2ptr.c:245:
+	if (unlikely (!isp->bitmap))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!isp->bitmap'
#305: FILE: kernel/id2ptr.c:245:
+	if (unlikely (!isp->bitmap))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LINE_SPACING: Please don't use multiple blank lines
#316: FILE: kernel/id2ptr.c:256:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#321: FILE: kernel/id2ptr.c:261:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#331: FILE: kernel/id2ptr.c:271:
+	unsigned id;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#356: FILE: kernel/id2ptr.c:296:
+	if (unlikely(!isp->bitmap)) {
+		return NULL;
+	}

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#361: FILE: kernel/id2ptr.c:301:
+	p = id_lookup_l(isp, (unsigned)id);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#362: FILE: kernel/id2ptr.c:302:
+	if (unlikely(p == NULL)) {
[...]
+	} else {
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p"
#362: FILE: kernel/id2ptr.c:302:
+	if (unlikely(p == NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#371: FILE: kernel/id2ptr.c:311:
+/*** $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#387: FILE: kernel/id2ptr.c:327:
+	p = id_lookup_l(isp, (unsigned)id);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "p"
#388: FILE: kernel/id2ptr.c:328:
+	if (likely(p != NULL)) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#406: FILE: kernel/id2ptr.c:346:
+void id2ptr_init(struct id *idp, int min_wrap) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#407: FILE: kernel/id2ptr.c:347:
+void id2ptr_init(struct id *idp, int min_wrap) {
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#417: FILE: include/linux/id2ptr.h:1:
+#ifndef LINUX_ID2PTR_H

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#421: FILE: include/linux/id2ptr.h:5:
+ * include/linux/id2ptr.h

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#439: FILE: include/linux/id2ptr.h:23:
+extern void *id2ptr_lookup(struct id *idp, int id);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#440: FILE: include/linux/id2ptr.h:24:
+extern int id2ptr_new(struct id *idp, void *data);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#441: FILE: include/linux/id2ptr.h:25:
+extern int id2ptr_remove(struct id *idp, int id);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#442: FILE: include/linux/id2ptr.h:26:
+extern void id2ptr_init(struct id *idp, int min_wrap);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000406141.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 30 warnings, 20 checks, 381 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000406141.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
