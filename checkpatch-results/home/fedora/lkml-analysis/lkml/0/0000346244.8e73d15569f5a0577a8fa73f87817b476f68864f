WARNING:TYPO_SPELLING: 'endianess' may be misspelled - perhaps 'endianness'?
#32: 
* correct endianess conversion of hardware exposed fields
          ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:NEW_TYPEDEFS: do not add new typedefs
#118: FILE: include/net/irda/vlsi_ir.h:59:
+typedef void irqreturn_t;

WARNING:LINUX_VERSION_CODE: LINUX_VERSION_CODE should be avoided, code should be for the version to which it is merged
#129: FILE: include/net/irda/vlsi_ir.h:70:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#129: FILE: include/net/irda/vlsi_ir.h:70:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,0)
                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#129: FILE: include/net/irda/vlsi_ir.h:70:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,0)
                                            ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#129: FILE: include/net/irda/vlsi_ir.h:70:
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,0)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#137: FILE: include/net/irda/vlsi_ir.h:78:
+#define irda_calc_crc16(fcs,buf,len)	(GOOD_FCS)
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#137: FILE: include/net/irda/vlsi_ir.h:78:
+#define irda_calc_crc16(fcs,buf,len)	(GOOD_FCS)
                                ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#200: FILE: include/net/irda/vlsi_ir.h:665:
+		printk(KERN_ERR "%s: pci busaddr inconsistency!\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#200: FILE: include/net/irda/vlsi_ir.h:665:
+		printk(KERN_ERR "%s: pci busaddr inconsistency!\n", __FUNCTION__);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#251: FILE: drivers/net/irda/vlsi_ir.c:27:
+#define DRIVER_NAME ^I^I"vlsi_ir"$

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#293: FILE: drivers/net/irda/vlsi_ir.c:62:
+static struct pci_device_id vlsi_irda_table [] = {

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

ERROR:TRAILING_WHITESPACE: trailing whitespace
#296: FILE: drivers/net/irda/vlsi_ir.c:65:
+^I^I.class_mask =^IPCI_CLASS_SUBCLASS_MASK << 8, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#299: FILE: drivers/net/irda/vlsi_ir.c:68:
+^I^I.subvendor = ^IPCI_ANY_ID,$

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#334: FILE: drivers/net/irda/vlsi_ir.c:211:
+		(byte&IRMISC_UARTEN) ? "@" : " disabled\n");
 		     ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#346: FILE: drivers/net/irda/vlsi_ir.c:263:
+		(word&IRENABLE_PHYANDCLOCK) ? " PHYANDCLOCK" : "",
 		     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#355: FILE: drivers/net/irda/vlsi_ir.c:367:
+		ERROR("%s: invalid ptr!\n", __FUNCTION__);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#364: FILE: drivers/net/irda/vlsi_ir.c:548:
+		if (rd->buf == NULL

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rd->buf"
#364: FILE: drivers/net/irda/vlsi_ir.c:548:
+		if (rd->buf == NULL

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#365: FILE: drivers/net/irda/vlsi_ir.c:549:
+		if (rd->buf == NULL
+		    ||  !(busaddr = pci_map_single(pdev, rd->buf, len, dir))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#368: FILE: drivers/net/irda/vlsi_ir.c:552:
+				ERROR("%s: failed to create PCI-MAP for %p",
+					__FUNCTION__, rd->buf);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#368: FILE: drivers/net/irda/vlsi_ir.c:552:
+					__FUNCTION__, rd->buf);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#394: FILE: drivers/net/irda/vlsi_ir.c:607:
+		ERROR("%s: insufficient memory for descriptor rings\n", __FUNCTION__);

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#430: FILE: drivers/net/irda/vlsi_ir.c:679:
+	crclen = (idev->mode==IFF_FIR) ? sizeof(u32) : sizeof(u16);
 	                    ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#433: FILE: drivers/net/irda/vlsi_ir.c:682:
+		IRDA_DEBUG(0, "%s: strange frame (len=%d)\n", __FUNCTION__, len);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#446: FILE: drivers/net/irda/vlsi_ir.c:695:
+		le16_to_cpus(rd->buf+len);
 		                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#447: FILE: drivers/net/irda/vlsi_ir.c:696:
+		if (irda_calc_crc16(INIT_FCS,rd->buf,len+crclen) != GOOD_FCS) {
 		                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#447: FILE: drivers/net/irda/vlsi_ir.c:696:
+		if (irda_calc_crc16(INIT_FCS,rd->buf,len+crclen) != GOOD_FCS) {
 		                                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#447: FILE: drivers/net/irda/vlsi_ir.c:696:
+		if (irda_calc_crc16(INIT_FCS,rd->buf,len+crclen) != GOOD_FCS) {
 		                                        ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#448: FILE: drivers/net/irda/vlsi_ir.c:697:
+			IRDA_DEBUG(0, "%s: crc error\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#455: FILE: drivers/net/irda/vlsi_ir.c:704:
+		WARNING("%s: rx packet lost\n", __FUNCTION__);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#463: FILE: drivers/net/irda/vlsi_ir.c:712:
+	memcpy(skb_put(skb,len), rd->buf, len);
 	                  ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#481: FILE: drivers/net/irda/vlsi_ir.c:735:
+				__FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#491: FILE: drivers/net/irda/vlsi_ir.c:794:
+		ERROR("%s: rx ring exhausted!\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#500: FILE: drivers/net/irda/vlsi_ir.c:815:
+				IRDA_DEBUG(0, "%s - dropping rx packet\n", __FUNCTION__);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#509: FILE: drivers/net/irda/vlsi_ir.c:880:
+static int vlsi_set_baud(vlsi_irda_dev_t *idev, unsigned iobase)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#565: FILE: drivers/net/irda/vlsi_ir.c:921:
+	fifocnt = inw(iobase+VLSI_PIO_RCVBCNT) & RCVBCNT_MASK;
 	                    ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#566: FILE: drivers/net/irda/vlsi_ir.c:922:
+	if (fifocnt != 0) {
+		IRDA_DEBUG(0, "%s: rx fifo not empty(%d)\n", __FUNCTION__, fifocnt);
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#567: FILE: drivers/net/irda/vlsi_ir.c:923:
+		IRDA_DEBUG(0, "%s: rx fifo not empty(%d)\n", __FUNCTION__, fifocnt);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#582: FILE: drivers/net/irda/vlsi_ir.c:930:
+	outw(IRENABLE_PHYANDCLOCK, iobase+VLSI_PIO_IRENABLE);
 	                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#592: FILE: drivers/net/irda/vlsi_ir.c:946:
+	if (config != (IRENABLE_PHYANDCLOCK|IRENABLE_ENRXST)) {
 	                                   ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#593: FILE: drivers/net/irda/vlsi_ir.c:947:
+		WARNING("%s: failed to set %s mode!\n", __FUNCTION__,

CHECK:BRACES: braces {} should be used on all arms of this statement
#710: FILE: drivers/net/irda/vlsi_ir.c:1031:
+		if (ring_first(idev->tx_ring) == NULL) {
[...]
+		else
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ring_first"
#710: FILE: drivers/net/irda/vlsi_ir.c:1031:
+		if (ring_first(idev->tx_ring) == NULL) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#715: FILE: drivers/net/irda/vlsi_ir.c:1036:
+		}
+		else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#767: FILE: drivers/net/irda/vlsi_ir.c:1073:
+	if ((mtt = irda_get_mtt(skb)) > 0) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#768: FILE: drivers/net/irda/vlsi_ir.c:1074:
+^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#768: FILE: drivers/net/irda/vlsi_ir.c:1074:
+	if ((mtt = irda_get_mtt(skb)) > 0) {
+	

ERROR:SPACING: space required before the open parenthesis '('
#775: FILE: drivers/net/irda/vlsi_ir.c:1081:
+		for(;;) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#778: FILE: drivers/net/irda/vlsi_ir.c:1084:
+			if (now.tv_sec > ready.tv_sec
+			    ||  (now.tv_sec==ready.tv_sec && now.tv_usec>=ready.tv_usec))

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#778: FILE: drivers/net/irda/vlsi_ir.c:1084:
+			    ||  (now.tv_sec==ready.tv_sec && now.tv_usec>=ready.tv_usec))
 			                   ^

ERROR:SPACING: spaces required around that '>=' (ctx:VxV)
#778: FILE: drivers/net/irda/vlsi_ir.c:1084:
+			    ||  (now.tv_sec==ready.tv_sec && now.tv_usec>=ready.tv_usec))
 			                                                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#779: FILE: drivers/net/irda/vlsi_ir.c:1085:
+^I^I^I    ^Ibreak;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#779: FILE: drivers/net/irda/vlsi_ir.c:1085:
+^I^I^I    ^Ibreak;$

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#780: FILE: drivers/net/irda/vlsi_ir.c:1086:
+			udelay(100);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 25)
#789: FILE: drivers/net/irda/vlsi_ir.c:1109:
 		if (len >= r->len-5)
+			 WARNING("%s: possible buffer overflow with SIR wrapping!\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#792: FILE: drivers/net/irda/vlsi_ir.c:1111:
+			 WARNING("%s: possible buffer overflow with SIR wrapping!\n",
 			 	__FUNCTION__);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#850: FILE: drivers/net/irda/vlsi_ir.c:1155:
+		if (fifocnt != 0) {
+			IRDA_DEBUG(0, "%s: rx fifo not empty(%d)\n", __FUNCTION__, fifocnt);
+		}

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#851: FILE: drivers/net/irda/vlsi_ir.c:1156:
+			IRDA_DEBUG(0, "%s: rx fifo not empty(%d)\n", __FUNCTION__, fifocnt);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#858: FILE: drivers/net/irda/vlsi_ir.c:1161:
+		outw(config | IRCFG_ENTX, iobase+VLSI_PIO_IRCFG);
 		                                ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#859: FILE: drivers/net/irda/vlsi_ir.c:1162:
+		wmb();

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ring_put"
#865: FILE: drivers/net/irda/vlsi_ir.c:1167:
+	if (ring_put(r) == NULL)	/* stop queue if tx ring is full */

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#877: FILE: drivers/net/irda/vlsi_ir.c:1177:
+	WARNING("%s: dropping packet - %s\n", __FUNCTION__, msg);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#915: FILE: drivers/net/irda/vlsi_ir.c:1234:
+			IRDA_DEBUG(0, "%s: rx fifo not empty(%d)\n",
 				__FUNCTION__, fifocnt);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#935: FILE: drivers/net/irda/vlsi_ir.c:1264:
+			IRDA_DEBUG(0, "%s - dropping tx packet\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#945: FILE: drivers/net/irda/vlsi_ir.c:1313:
+				ERROR("%s: no PLL or failed to lock!\n", __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#955: FILE: drivers/net/irda/vlsi_ir.c:1322:
+			IRDA_DEBUG(0, "%s: PLL not locked, fallback to clksrc=%d\n",
 				__FUNCTION__, clksrc);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#964: FILE: drivers/net/irda/vlsi_ir.c:1394:
+		ERROR("%s: no valid clock source\n", __FUNCTION__);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#986: FILE: drivers/net/irda/vlsi_ir.c:1479:
+	outb(0, iobase+VLSI_PIO_IRINTR);
 	              ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#987: FILE: drivers/net/irda/vlsi_ir.c:1480:
+	wmb();

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#988: FILE: drivers/net/irda/vlsi_ir.c:1481:
+	outb(IRINTR_INT_MASK, iobase+VLSI_PIO_IRINTR);
 	                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#999: FILE: drivers/net/irda/vlsi_ir.c:1524:
+		ERROR("%s: failed to restart hw - %s(%s) unusable!\n",
+			__FUNCTION__, PCIDEV_NAME(idev->pdev), ndev->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#999: FILE: drivers/net/irda/vlsi_ir.c:1524:
+			__FUNCTION__, PCIDEV_NAME(idev->pdev), ndev->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1018: FILE: drivers/net/irda/vlsi_ir.c:1568:
+			WARNING("%s: notsupp - cmd=%04x\n", __FUNCTION__, cmd);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1028: FILE: drivers/net/irda/vlsi_ir.c:1584:
+^Iint ^I^Iboguscount = 5;$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1034: FILE: drivers/net/irda/vlsi_ir.c:1589:
+	spin_lock_irqsave(&idev->lock,flags);
 	                             ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#1041: FILE: drivers/net/irda/vlsi_ir.c:1592:
+		mb();

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1042: FILE: drivers/net/irda/vlsi_ir.c:1593:
+		outb(irintr, iobase+VLSI_PIO_IRINTR);	/* acknowledge asap */
 		                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1067: FILE: drivers/net/irda/vlsi_ir.c:1610:
+	spin_unlock_irqrestore(&idev->lock,flags);
 	                                  ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1071: FILE: drivers/net/irda/vlsi_ir.c:1613:
+		MESSAGE("%s: too much work in interrupt!\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1080: FILE: drivers/net/irda/vlsi_ir.c:1626:
+		WARNING("%s: io resource busy\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1090: FILE: drivers/net/irda/vlsi_ir.c:1640:
+		WARNING("%s: couldn't get IRQ: %d\n", __FUNCTION__, ndev->irq);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1099: FILE: drivers/net/irda/vlsi_ir.c:1661:
+	MESSAGE("%s: device %s operational\n", __FUNCTION__, ndev->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1108: FILE: drivers/net/irda/vlsi_ir.c:1695:
+	MESSAGE("%s: device %s stopped\n", __FUNCTION__, ndev->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1118: FILE: drivers/net/irda/vlsi_ir.c:1716:
+		ERROR("%s: aborting due to PCI BM-DMA address limitations\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1134: FILE: drivers/net/irda/vlsi_ir.c:1770:
+		ERROR("%s: bar 0 invalid", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1144: FILE: drivers/net/irda/vlsi_ir.c:1778:
+		ERROR("%s: Unable to allocate device memory.\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1154: FILE: drivers/net/irda/vlsi_ir.c:1794:
+		ERROR("%s: register_netdev failed\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1166: FILE: drivers/net/irda/vlsi_ir.c:1804:
+			WARNING("%s: failed to create proc entry\n", __FUNCTION__);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1177: FILE: drivers/net/irda/vlsi_ir.c:1807:
 		}
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#1177: FILE: drivers/net/irda/vlsi_ir.c:1807:
+		else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1223: FILE: drivers/net/irda/vlsi_ir.c:1872:
+		ERROR("%s - %s: invalid pm state request: %u\n",
+			__FUNCTION__, PCIDEV_NAME(pdev), state);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1223: FILE: drivers/net/irda/vlsi_ir.c:1872:
+			__FUNCTION__, PCIDEV_NAME(pdev), state);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1234: FILE: drivers/net/irda/vlsi_ir.c:1885:
+		ERROR("%s - %s: invalid pm state request: %u\n",
+			__FUNCTION__, PCIDEV_NAME(pdev), state);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1234: FILE: drivers/net/irda/vlsi_ir.c:1885:
+			__FUNCTION__, PCIDEV_NAME(pdev), state);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1239: FILE: drivers/net/irda/vlsi_ir.c:1889:
+		ERROR("%s - %s: no netdevice \n", __FUNCTION__, PCIDEV_NAME(pdev));

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1239: FILE: drivers/net/irda/vlsi_ir.c:1889:
+		ERROR("%s - %s: no netdevice \n", __FUNCTION__, PCIDEV_NAME(pdev));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1250: FILE: drivers/net/irda/vlsi_ir.c:1901:
+			ERROR("%s - %s: invalid suspend request %u -> %u\n",
+				__FUNCTION__, PCIDEV_NAME(pdev), pdev->current_state, state);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1250: FILE: drivers/net/irda/vlsi_ir.c:1901:
+				__FUNCTION__, PCIDEV_NAME(pdev), pdev->current_state, state);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1259: FILE: drivers/net/irda/vlsi_ir.c:1928:
+		ERROR("%s - %s: no netdevice \n", __FUNCTION__, PCIDEV_NAME(pdev));

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1259: FILE: drivers/net/irda/vlsi_ir.c:1928:
+		ERROR("%s - %s: no netdevice \n", __FUNCTION__, PCIDEV_NAME(pdev));

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1267: FILE: drivers/net/irda/vlsi_ir.c:1935:
+		WARNING("%s - %s: already resumed\n", __FUNCTION__, PCIDEV_NAME(pdev));

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1276: FILE: drivers/net/irda/vlsi_ir.c:1954:
+		WARNING("%s - hm, nothing to resume?\n", __FUNCTION__);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000346244.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 54 warnings, 28 checks, 1175 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000346244.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
