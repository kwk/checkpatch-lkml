WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
> > > > +	error =  alloc_chrdev_region(&interface.devno, 0, 1, interface.name);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#74: FILE: kernel/power/user.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#75: FILE: kernel/power/user.c:2:
+ * linux/kernel/power/user.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#110: FILE: kernel/power/user.c:37:
+int snapshot_open(struct inode *inode, struct file *filp)
                                                     ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#120: FILE: kernel/power/user.c:47:
+		return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#122: FILE: kernel/power/user.c:49:
+	nonseekable_open(inode, filp);
 	                        ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#140: FILE: kernel/power/user.c:67:
+int snapshot_release(struct inode *inode, struct file *filp)
                                                        ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#158: FILE: kernel/power/user.c:85:
+static ssize_t snapshot_read(struct file *filp, char __user *buf,
                                           ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: kernel/power/user.c:86:
+                             size_t count, loff_t *offp)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: kernel/power/user.c:86:
+                             size_t count, loff_t *offp)$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#175: FILE: kernel/power/user.c:102:
+static ssize_t snapshot_write(struct file *filp, const char __user *buf,
                                            ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: kernel/power/user.c:103:
+                              size_t count, loff_t *offp)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: kernel/power/user.c:103:
+                              size_t count, loff_t *offp)$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#192: FILE: kernel/power/user.c:119:
+static int snapshot_ioctl(struct inode *inode, struct file *filp,
                                                             ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#193: FILE: kernel/power/user.c:120:
+                          unsigned int cmd, unsigned long arg)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: kernel/power/user.c:120:
+                          unsigned int cmd, unsigned long arg)$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#210: FILE: kernel/power/user.c:137:
+	switch (cmd) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:MEMORY_BARRIER: memory barrier without comment
#269: FILE: kernel/power/user.c:196:
+			mb();

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#342: FILE: kernel/power/user.c:269:
+
+	}

WARNING:CONST_STRUCT: struct file_operations should normally be const
#347: FILE: kernel/power/user.c:274:
+static struct file_operations snapshot_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000119310.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 15 warnings, 2 checks, 294 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000119310.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
