WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
  http://bitmover.com:8888//tmp/v2_logging/athlon.transmeta.com/torvalds-20020205173056-16047-c1d11a41ed024864/cset@1.133.114.2?nav=index.html|ChangeSet@-1h

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#72: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#73: 
# Project Name: Linux kernel tree

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#74: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#75: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#76: 
#	           ChangeSet	1.294   -> 1.295  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#77: 
#	drivers/block/ll_rw_blk.c	1.46    -> 1.47   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#78: 
#	include/linux/blkdev.h	1.31    -> 1.32   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#79: 
#	 include/linux/bio.h	1.12    -> 1.13   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#80: 
#	  include/linux/fs.h	1.81    -> 1.82   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#81: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#82: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#83: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#84: 
# 02/02/13	axboe@burns.home.kernel.dk	1.295

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#85: 
# Misc small changes and fixes to properly support barrier writes for

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#86: 
# journalled file systems. The support was basically already there

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#87: 
# with the bio merge, since it had not been used at all there were a

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#88: 
# few loose ends though.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#89: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#90: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#92: 
--- a/drivers/block/ll_rw_blk.c	Wed Feb 13 13:48:11 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#206: FILE: include/linux/blkdev.h:317:
+extern void blk_queue_ordered(request_queue_t *, int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'request_queue_t *' should also have an identifier name
#206: FILE: include/linux/blkdev.h:317:
+extern void blk_queue_ordered(request_queue_t *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#206: FILE: include/linux/blkdev.h:317:
+extern void blk_queue_ordered(request_queue_t *, int);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#225: FILE: include/linux/fs.h:282:
+#define buffer_ordered(bh)	__buffer_state(bh,Ordered)
                           	                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Ordered>
#225: FILE: include/linux/fs.h:282:
+#define buffer_ordered(bh)	__buffer_state(bh,Ordered)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#283: FILE: drivers/ide/ide.c:389:
+	flush_rq->buffer[0] = (drive->id->cfs_enable_2 & 0x2400) ? WIN_FLUSH_CACHE_EXT : WIN_FLUSH_CACHE;

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:TYPO_SPELLING: 'finsh' may be misspelled - perhaps 'finish'?
#306: FILE: drivers/ide/ide.c:436:
+		 * allowing new requests to finsh and before signalling
 		                            ^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#337: FILE: drivers/ide/ide.c:811:
+^I^Iif (rq->flags & REQ_SPECIAL) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#337: FILE: drivers/ide/ide.c:811:
+		if (rq->flags & REQ_SPECIAL) 
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#339: FILE: drivers/ide/ide.c:813:
+		else {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: drivers/scsi/hosts.c:233:
+    retval->can_order = tpnt->can_order;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#420: FILE: drivers/scsi/hosts.h:289:
+    unsigned can_order:1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#429: FILE: drivers/scsi/hosts.h:391:
+    unsigned can_order:1;$

CHECK:CAMELCASE: Avoid CamelCase: <SHpnt>
#440: FILE: drivers/scsi/scsi.c:218:
+	if (SHpnt->can_order)

CHECK:CAMELCASE: Avoid CamelCase: <SDpnt>
#441: FILE: drivers/scsi/scsi.c:219:
+		blk_queue_ordered(&SDpnt->request_queue, QUEUE_BARRIER_TAG);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#519: FILE: fs/reiserfs/journal.c:120:
+    int ordered = test_and_clear_bit(BH_Ordered, &bh->b_state) ;$

WARNING:SPACING: space prohibited before semicolon
#519: FILE: fs/reiserfs/journal.c:120:
+    int ordered = test_and_clear_bit(BH_Ordered, &bh->b_state) ;

WARNING:LINE_SPACING: Missing a blank line after declarations
#520: FILE: fs/reiserfs/journal.c:121:
+    int ordered = test_and_clear_bit(BH_Ordered, &bh->b_state) ;
+    if (!reiserfs_barrier(s) || ordered) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#520: FILE: fs/reiserfs/journal.c:121:
+    if (!reiserfs_barrier(s) || ordered) {$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#520: FILE: fs/reiserfs/journal.c:121:
+    if (!reiserfs_barrier(s) || ordered) {
+        wait_on_buffer(bh) ;
+    }

ERROR:CODE_INDENT: code indent should use tabs where possible
#521: FILE: fs/reiserfs/journal.c:122:
+        wait_on_buffer(bh) ;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#521: FILE: fs/reiserfs/journal.c:122:
+        wait_on_buffer(bh) ;$

WARNING:SPACING: space prohibited before semicolon
#521: FILE: fs/reiserfs/journal.c:122:
+        wait_on_buffer(bh) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#522: FILE: fs/reiserfs/journal.c:123:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#523: FILE: fs/reiserfs/journal.c:124:
+    return 0 ;$

WARNING:SPACING: space prohibited before semicolon
#523: FILE: fs/reiserfs/journal.c:124:
+    return 0 ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#540: FILE: fs/reiserfs/journal.c:739:
+      barrier_wait_on_buffer(s, tbh) ;$

WARNING:SPACING: space prohibited before semicolon
#540: FILE: fs/reiserfs/journal.c:739:
+      barrier_wait_on_buffer(s, tbh) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#548: FILE: fs/reiserfs/journal.c:759:
+  mark_barrier(s, jl->j_commit_bh);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#552: FILE: fs/reiserfs/journal.c:762:
+  barrier_wait_on_buffer(s, jl->j_commit_bh) ;$

WARNING:SPACING: space prohibited before semicolon
#552: FILE: fs/reiserfs/journal.c:762:
+  barrier_wait_on_buffer(s, jl->j_commit_bh) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#560: FILE: fs/reiserfs/journal.c:854:
+    mark_barrier(p_s_sb, SB_JOURNAL(p_s_sb)->j_header_bh);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#563: FILE: fs/reiserfs/journal.c:856:
+    barrier_wait_on_buffer(p_s_sb, (SB_JOURNAL(p_s_sb)->j_header_bh)) ; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#563: FILE: fs/reiserfs/journal.c:856:
+    barrier_wait_on_buffer(p_s_sb, (SB_JOURNAL(p_s_sb)->j_header_bh)) ; $

WARNING:SPACING: space prohibited before semicolon
#563: FILE: fs/reiserfs/journal.c:856:
+    barrier_wait_on_buffer(p_s_sb, (SB_JOURNAL(p_s_sb)->j_header_bh)) ; 

WARNING:SPACING: space prohibited before semicolon
#572: FILE: fs/reiserfs/journal.c:1077:
+	barrier_wait_on_buffer(s, cn->bh) ;

ERROR:CODE_INDENT: code indent should use tabs where possible
#581: FILE: fs/reiserfs/journal.c:1183:
+                barrier_wait_on_buffer(s, cn->bh) ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#581: FILE: fs/reiserfs/journal.c:1183:
+                barrier_wait_on_buffer(s, cn->bh) ;$

WARNING:SPACING: space prohibited before semicolon
#581: FILE: fs/reiserfs/journal.c:1183:
+                barrier_wait_on_buffer(s, cn->bh) ;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#594: FILE: fs/reiserfs/super.c:385:
+    s->u.reiserfs_sb.s_mount_opt &= ~(1 << REISERFS_BARRIER) ;$

WARNING:SPACING: space prohibited before semicolon
#594: FILE: fs/reiserfs/super.c:385:
+    s->u.reiserfs_sb.s_mount_opt &= ~(1 << REISERFS_BARRIER) ;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#602: FILE: fs/reiserfs/super.c:534:
+	} else if (!strcmp (this_char, "barrier")) {
+	    set_bit (REISERFS_BARRIER, mount_options);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#602: FILE: fs/reiserfs/super.c:534:
+	} else if (!strcmp (this_char, "barrier")) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#603: FILE: fs/reiserfs/super.c:535:
+	    set_bit (REISERFS_BARRIER, mount_options);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#604: FILE: fs/reiserfs/super.c:536:
+	    printk("reiserfs: enabling write barrier code\n") ;

WARNING:SPACING: space prohibited before semicolon
#604: FILE: fs/reiserfs/super.c:536:
+	    printk("reiserfs: enabling write barrier code\n") ;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#622: FILE: include/linux/reiserfs_fs_sb.h:409:
+#define REISERFS_TEST4 15 $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000477072.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 55 warnings, 6 checks, 386 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000477072.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
