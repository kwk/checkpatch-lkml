WARNING:TYPO_SPELLING: 'performace' may be misspelled - perhaps 'performance'?
#25: 
improves reading performace.
                 ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#71: FILE: fs/fuse/dev.c:166:
+void request_send_async(struct fuse_conn *fc, struct fuse_req *req, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#72: FILE: fs/fuse/dev.c:167:
+void request_send_async(struct fuse_conn *fc, struct fuse_req *req, 
+			   fuse_reqend_t end)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#76: FILE: fs/fuse/dev.c:171:
+^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#108: FILE: fs/fuse/dev.c:343:
+		if (req->copy_out)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#110: FILE: fs/fuse/dev.c:345:
+			return req->copy_out(req, buf, nbytes);
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#110: FILE: fs/fuse/dev.c:345:
+		else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#114: FILE: fs/fuse/dev.c:349:
+^I^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#119: FILE: fs/fuse/dev.c:354:
+^I^I^I^I$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#166: FILE: fs/fuse/fuse_i.h:125:
+	unsigned num_pages;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#198: FILE: fs/fuse/fuse_i.h:302:
+void request_send_async(struct fuse_conn *fc, struct fuse_req *req, $

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#278: FILE: fs/fuse/file.c:238:
+	unsigned i;

WARNING:LINE_SPACING: Missing a blank line after declarations
#280: FILE: fs/fuse/file.c:240:
+	unsigned long base_index = req->pages[0]->index;
+	for (i = 0; i < req->num_pages; i++) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#283: FILE: fs/fuse/file.c:243:
+		unsigned count;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#313: FILE: fs/fuse/file.c:273:
+	unsigned i;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#317: FILE: fs/fuse/file.c:277:
+^I$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#329: FILE: fs/fuse/file.c:289:
+	unsigned numpages;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#330: FILE: fs/fuse/file.c:290:
+^I$

CHECK:SPACING: No space is necessary after a cast
#331: FILE: fs/fuse/file.c:291:
+	pos = (loff_t) req->pages[0]->index << PAGE_CACHE_SHIFT;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#333: FILE: fs/fuse/file.c:293:
+^Inumpages = req->pages[req->num_pages - 1]->index + 1 $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#335: FILE: fs/fuse/file.c:295:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#361: FILE: fs/fuse/file.c:321:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#362: FILE: fs/fuse/file.c:322:
+^Iif (req->num_pages && $

WARNING:LINE_SPACING: Missing a blank line after declarations
#367: FILE: fs/fuse/file.c:327:
+		struct fuse_conn *fc = INO_FC(page->mapping->host);
+		fuse_send_readpages(req, data->file, inode);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#368: FILE: fs/fuse/file.c:328:
+		data->req = req = fuse_get_request_nonint(fc);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:SPACING: space prohibited before that '++' (ctx:WxO)
#371: FILE: fs/fuse/file.c:331:
+	req->num_pages ++;
 	               ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#376: FILE: fs/fuse/file.c:336:
+			  struct list_head *pages, unsigned nr_pages)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#385: FILE: fs/fuse/file.c:345:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000229107.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 10 warnings, 5 checks, 351 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000229107.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
