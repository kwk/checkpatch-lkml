WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#21: 
, miklos@szeredi.hu, Janak Desai <janak@us.ibm.com>, linux-fsdevel@vger.kernel.org, linux-kernel@vger.kernel.org

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#48: FILE: fs/pnode.c:671:
+static int vfs_busy(struct vfsmount *mnt, enum pnode_vfs_type flag,
+		void *indata, va_list args)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#54: FILE: fs/pnode.c:677:
+	int ret=0;
 	       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#74: FILE: fs/pnode.c:697:
+int pnode_mount_busy(struct vfspnode *pnode, struct dentry *mntpt,
+		struct dentry *root, struct vfsmount *mnt)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#80: FILE: fs/pnode.c:703:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#82: FILE: fs/pnode.c:705:
+int vfs_umount(struct vfsmount *mnt, enum pnode_vfs_type flag,
+		void *indata, va_list args)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#87: FILE: fs/pnode.c:710:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#97: FILE: fs/pnode.c:720:
+		if (IS_MNT_SHARED(child_mnt) ||
+				IS_MNT_SLAVE(child_mnt)) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#98: FILE: fs/pnode.c:721:
+			BUG_ON(!child_mnt->mnt_pnode);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#107: FILE: fs/pnode.c:730:
+int pnode_umount(struct vfspnode *pnode, struct dentry *dentry,
+			struct dentry *rootdentry)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#128: FILE: fs/namespace.c:406:
+	BUG_ON(!parent_pnode);

WARNING:LINE_SPACING: Missing a blank line after declarations
#153: FILE: fs/namespace.c:437:
+	struct nameidata old_nd;
+	if (mnt != mnt->mnt_parent) {

WARNING:TYPO_SPELLING: 'propogate' may be misspelled - perhaps 'propagate'?
#164: FILE: fs/namespace.c:448:
+void __umount_tree(struct vfsmount *mnt, int propogate)
                                              ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'propogate' may be misspelled - perhaps 'propagate'?
#174: FILE: fs/namespace.c:462:
+		if (propogate && mnt->mnt_parent != mnt &&
 		    ^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#175: FILE: fs/namespace.c:463:
+		if (propogate && mnt->mnt_parent != mnt &&
+			IS_MNT_SHARED(mnt->mnt_parent)) {

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#177: FILE: fs/namespace.c:465:
+			struct vfspnode *parent_pnode
+				= mnt->mnt_parent->mnt_pnode;

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#178: FILE: fs/namespace.c:466:
+			BUG_ON(!parent_pnode);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#180: FILE: fs/namespace.c:468:
+			pnode_umount(parent_pnode,
+				mnt->mnt_mountpoint,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#188: FILE: fs/namespace.c:472:
+				BUG_ON(!mnt->mnt_pnode);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#209: FILE: fs/namespace.c:490:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#211: FILE: fs/namespace.c:492:
+	int mycount = atomic_read(&mnt->mnt_count);
+	return (mycount > count);

ERROR:CODE_INDENT: code indent should use tabs where possible
#241: FILE: fs/namespace.c:1392:
+ ^I^I^I__umount_tree(mnt, 0);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#241: FILE: fs/namespace.c:1392:
+ ^I^I^I__umount_tree(mnt, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: fs/namespace.c:1392:
+ ^I^I^I__umount_tree(mnt, 0);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#253: FILE: include/linux/fs.h:1219:
+extern int do_umount(struct vfsmount *, int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsmount *' should also have an identifier name
#253: FILE: include/linux/fs.h:1219:
+extern int do_umount(struct vfsmount *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#253: FILE: include/linux/fs.h:1219:
+extern int do_umount(struct vfsmount *, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#260: FILE: include/linux/fs.h:1226:
+extern void do_detach_mount(struct vfsmount *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsmount *' should also have an identifier name
#260: FILE: include/linux/fs.h:1226:
+extern void do_detach_mount(struct vfsmount *);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#261: FILE: include/linux/fs.h:1227:
+extern int do_refcount_check(struct vfsmount *, int );

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#261: FILE: include/linux/fs.h:1227:
+extern int do_refcount_check(struct vfsmount *, int );

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsmount *' should also have an identifier name
#261: FILE: include/linux/fs.h:1227:
+extern int do_refcount_check(struct vfsmount *, int );

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#261: FILE: include/linux/fs.h:1227:
+extern int do_refcount_check(struct vfsmount *, int );

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfspnode *' should also have an identifier name
#281: FILE: include/linux/pnode.h:72:
+void pnode_free(struct vfspnode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfspnode *' should also have an identifier name
#282: FILE: include/linux/pnode.h:73:
+int pnode_is_busy(struct vfspnode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfspnode *' should also have an identifier name
#283: FILE: include/linux/pnode.h:74:
+int pnode_umount_vfs(struct vfspnode *, struct dentry *, struct dentry *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#283: FILE: include/linux/pnode.h:74:
+int pnode_umount_vfs(struct vfspnode *, struct dentry *, struct dentry *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#283: FILE: include/linux/pnode.h:74:
+int pnode_umount_vfs(struct vfspnode *, struct dentry *, struct dentry *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#283: FILE: include/linux/pnode.h:74:
+int pnode_umount_vfs(struct vfspnode *, struct dentry *, struct dentry *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfspnode *' should also have an identifier name
#291: FILE: include/linux/pnode.h:92:
+int pnode_umount(struct vfspnode *, struct dentry *, struct dentry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#291: FILE: include/linux/pnode.h:92:
+int pnode_umount(struct vfspnode *, struct dentry *, struct dentry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#291: FILE: include/linux/pnode.h:92:
+int pnode_umount(struct vfspnode *, struct dentry *, struct dentry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfspnode *' should also have an identifier name
#292: FILE: include/linux/pnode.h:93:
+int pnode_mount_busy(struct vfspnode *, struct dentry *, struct dentry *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#292: FILE: include/linux/pnode.h:93:
+int pnode_mount_busy(struct vfspnode *, struct dentry *, struct dentry *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#292: FILE: include/linux/pnode.h:93:
+int pnode_mount_busy(struct vfspnode *, struct dentry *, struct dentry *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsmount *' should also have an identifier name
#292: FILE: include/linux/pnode.h:93:
+int pnode_mount_busy(struct vfspnode *, struct dentry *, struct dentry *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#293: FILE: include/linux/pnode.h:94:
+int pnode_mount_busy(struct vfspnode *, struct dentry *, struct dentry *,
+		struct vfsmount *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000165685.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 29 warnings, 15 checks, 231 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000165685.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
