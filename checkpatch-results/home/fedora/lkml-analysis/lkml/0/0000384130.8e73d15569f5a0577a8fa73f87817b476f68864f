WARNING:TYPO_SPELLING: 'accesible' may be misspelled - perhaps 'accessible'?
#29: 
PC98 has 'page register' to expand DMA accesible address.
                                       ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#345: FILE: include/asm-i386/mach-default/mach_dma.h:1:
+/* $Id: dma.h,v 1.7 1992/12/14 00:29:34 root Exp root $

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#345: FILE: include/asm-i386/mach-default/mach_dma.h:1:
+/* $Id: dma.h,v 1.7 1992/12/14 00:29:34 root Exp root $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#357: FILE: include/asm-i386/mach-default/mach_dma.h:13:
+#include <asm/io.h>		/* need byte IO */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#360: FILE: include/asm-i386/mach-default/mach_dma.h:16:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#385: FILE: include/asm-i386/mach-default/mach_dma.h:41:
+ * DMA transfers are limited to the lower 16MB of _physical_ memory.  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#395: FILE: include/asm-i386/mach-default/mach_dma.h:51:
+ *   P7  ...  P0  A7 ... A0  A7 ... A0   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#404: FILE: include/asm-i386/mach-default/mach_dma.h:60:
+ *   P7  ...  P1 (0) A7 A6  ... A0 A7 A6 ... A0   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#413: FILE: include/asm-i386/mach-default/mach_dma.h:69:
+ * and up to 128K bytes may be transferred on channels 5-7 in one operation. $

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#420: FILE: include/asm-i386/mach-default/mach_dma.h:76:
+#define MAX_DMA_ADDRESS      (PAGE_OFFSET+0x1000000)
                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#481: FILE: include/asm-i386/mach-default/mach_dma.h:137:
+
+

WARNING:INLINE: plain inline is preferred over __inline__
#484: FILE: include/asm-i386/mach-default/mach_dma.h:140:
+static __inline__ unsigned long claim_dma_lock(void)

WARNING:LINE_SPACING: Missing a blank line after declarations
#487: FILE: include/asm-i386/mach-default/mach_dma.h:143:
+	unsigned long flags;
+	spin_lock_irqsave(&dma_spin_lock, flags);

WARNING:INLINE: plain inline is preferred over __inline__
#491: FILE: include/asm-i386/mach-default/mach_dma.h:147:
+static __inline__ void release_dma_lock(unsigned long flags)

WARNING:INLINE: plain inline is preferred over __inline__
#497: FILE: include/asm-i386/mach-default/mach_dma.h:153:
+static __inline__ void enable_dma(unsigned int dmanr)

ERROR:SPACING: spaces required around that '<=' (ctx:VxV)
#499: FILE: include/asm-i386/mach-default/mach_dma.h:155:
+	if (dmanr<=3)
 	         ^

WARNING:INLINE: plain inline is preferred over __inline__
#505: FILE: include/asm-i386/mach-default/mach_dma.h:161:
+static __inline__ void disable_dma(unsigned int dmanr)

ERROR:SPACING: spaces required around that '<=' (ctx:VxV)
#507: FILE: include/asm-i386/mach-default/mach_dma.h:163:
+	if (dmanr<=3)
 	         ^

WARNING:INLINE: plain inline is preferred over __inline__
#520: FILE: include/asm-i386/mach-default/mach_dma.h:176:
+static __inline__ void clear_dma_ff(unsigned int dmanr)

ERROR:SPACING: spaces required around that '<=' (ctx:VxV)
#522: FILE: include/asm-i386/mach-default/mach_dma.h:178:
+	if (dmanr<=3)
 	         ^

WARNING:INLINE: plain inline is preferred over __inline__
#529: FILE: include/asm-i386/mach-default/mach_dma.h:185:
+static __inline__ void set_dma_mode(unsigned int dmanr, char mode)

ERROR:SPACING: spaces required around that '<=' (ctx:VxV)
#531: FILE: include/asm-i386/mach-default/mach_dma.h:187:
+	if (dmanr<=3)
 	         ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#534: FILE: include/asm-i386/mach-default/mach_dma.h:190:
+		dma_outb(mode | (dmanr&3),  DMA2_MODE_REG);
 		                      ^

WARNING:INLINE: plain inline is preferred over __inline__
#542: FILE: include/asm-i386/mach-default/mach_dma.h:198:
+static __inline__ void set_dma_page(unsigned int dmanr, char pagenr)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#544: FILE: include/asm-i386/mach-default/mach_dma.h:200:
+	switch(dmanr) {
+		case 0:
[...]
+		case 1:
[...]
+		case 2:
[...]
+		case 3:
[...]
+		case 5:
[...]
+		case 6:
[...]
+		case 7:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required before the open parenthesis '('
#544: FILE: include/asm-i386/mach-default/mach_dma.h:200:
+	switch(dmanr) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#569: FILE: include/asm-i386/mach-default/mach_dma.h:225:
+
+

WARNING:INLINE: plain inline is preferred over __inline__
#573: FILE: include/asm-i386/mach-default/mach_dma.h:229:
+static __inline__ void set_dma_addr(unsigned int dmanr, unsigned int a)

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#575: FILE: include/asm-i386/mach-default/mach_dma.h:231:
+	set_dma_page(dmanr, a>>16);
 	                     ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#576: FILE: include/asm-i386/mach-default/mach_dma.h:232:
+	if (dmanr <= 3)  {
+	    dma_outb( a & 0xff, ((dmanr&3)<<1) + IO_DMA1_BASE );

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#577: FILE: include/asm-i386/mach-default/mach_dma.h:233:
+	    dma_outb( a & 0xff, ((dmanr&3)<<1) + IO_DMA1_BASE );
 	                               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#577: FILE: include/asm-i386/mach-default/mach_dma.h:233:
+	    dma_outb( a & 0xff, ((dmanr&3)<<1) + IO_DMA1_BASE );
 	                                  ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#577: FILE: include/asm-i386/mach-default/mach_dma.h:233:
+	    dma_outb( a & 0xff, ((dmanr&3)<<1) + IO_DMA1_BASE );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#577: FILE: include/asm-i386/mach-default/mach_dma.h:233:
+	    dma_outb( a & 0xff, ((dmanr&3)<<1) + IO_DMA1_BASE );

ERROR:CODE_INDENT: code indent should use tabs where possible
#578: FILE: include/asm-i386/mach-default/mach_dma.h:234:
+            dma_outb( (a>>8) & 0xff, ((dmanr&3)<<1) + IO_DMA1_BASE );$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#578: FILE: include/asm-i386/mach-default/mach_dma.h:234:
+            dma_outb( (a>>8) & 0xff, ((dmanr&3)<<1) + IO_DMA1_BASE );$

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#578: FILE: include/asm-i386/mach-default/mach_dma.h:234:
+            dma_outb( (a>>8) & 0xff, ((dmanr&3)<<1) + IO_DMA1_BASE );
                         ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#578: FILE: include/asm-i386/mach-default/mach_dma.h:234:
+            dma_outb( (a>>8) & 0xff, ((dmanr&3)<<1) + IO_DMA1_BASE );
                                             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#578: FILE: include/asm-i386/mach-default/mach_dma.h:234:
+            dma_outb( (a>>8) & 0xff, ((dmanr&3)<<1) + IO_DMA1_BASE );
                                                ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#578: FILE: include/asm-i386/mach-default/mach_dma.h:234:
+            dma_outb( (a>>8) & 0xff, ((dmanr&3)<<1) + IO_DMA1_BASE );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#578: FILE: include/asm-i386/mach-default/mach_dma.h:234:
+            dma_outb( (a>>8) & 0xff, ((dmanr&3)<<1) + IO_DMA1_BASE );

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#579: FILE: include/asm-i386/mach-default/mach_dma.h:235:
+	}  else  {
+	    dma_outb( (a>>1) & 0xff, ((dmanr&3)<<2) + IO_DMA2_BASE );

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#580: FILE: include/asm-i386/mach-default/mach_dma.h:236:
+	    dma_outb( (a>>1) & 0xff, ((dmanr&3)<<2) + IO_DMA2_BASE );
 	                ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#580: FILE: include/asm-i386/mach-default/mach_dma.h:236:
+	    dma_outb( (a>>1) & 0xff, ((dmanr&3)<<2) + IO_DMA2_BASE );
 	                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#580: FILE: include/asm-i386/mach-default/mach_dma.h:236:
+	    dma_outb( (a>>1) & 0xff, ((dmanr&3)<<2) + IO_DMA2_BASE );
 	                                       ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#580: FILE: include/asm-i386/mach-default/mach_dma.h:236:
+	    dma_outb( (a>>1) & 0xff, ((dmanr&3)<<2) + IO_DMA2_BASE );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#580: FILE: include/asm-i386/mach-default/mach_dma.h:236:
+	    dma_outb( (a>>1) & 0xff, ((dmanr&3)<<2) + IO_DMA2_BASE );

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#581: FILE: include/asm-i386/mach-default/mach_dma.h:237:
+	    dma_outb( (a>>9) & 0xff, ((dmanr&3)<<2) + IO_DMA2_BASE );
 	                ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#581: FILE: include/asm-i386/mach-default/mach_dma.h:237:
+	    dma_outb( (a>>9) & 0xff, ((dmanr&3)<<2) + IO_DMA2_BASE );
 	                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#581: FILE: include/asm-i386/mach-default/mach_dma.h:237:
+	    dma_outb( (a>>9) & 0xff, ((dmanr&3)<<2) + IO_DMA2_BASE );
 	                                       ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#581: FILE: include/asm-i386/mach-default/mach_dma.h:237:
+	    dma_outb( (a>>9) & 0xff, ((dmanr&3)<<2) + IO_DMA2_BASE );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#581: FILE: include/asm-i386/mach-default/mach_dma.h:237:
+	    dma_outb( (a>>9) & 0xff, ((dmanr&3)<<2) + IO_DMA2_BASE );

CHECK:LINE_SPACING: Please don't use multiple blank lines
#585: FILE: include/asm-i386/mach-default/mach_dma.h:241:
+
+

WARNING:INLINE: plain inline is preferred over __inline__
#594: FILE: include/asm-i386/mach-default/mach_dma.h:250:
+static __inline__ void set_dma_count(unsigned int dmanr, unsigned int count)

ERROR:CODE_INDENT: code indent should use tabs where possible
#596: FILE: include/asm-i386/mach-default/mach_dma.h:252:
+        count--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#596: FILE: include/asm-i386/mach-default/mach_dma.h:252:
+        count--;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#597: FILE: include/asm-i386/mach-default/mach_dma.h:253:
+	if (dmanr <= 3)  {
+	    dma_outb( count & 0xff, ((dmanr&3)<<1) + 1 + IO_DMA1_BASE );

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#598: FILE: include/asm-i386/mach-default/mach_dma.h:254:
+	    dma_outb( count & 0xff, ((dmanr&3)<<1) + 1 + IO_DMA1_BASE );
 	                                   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#598: FILE: include/asm-i386/mach-default/mach_dma.h:254:
+	    dma_outb( count & 0xff, ((dmanr&3)<<1) + 1 + IO_DMA1_BASE );
 	                                      ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#598: FILE: include/asm-i386/mach-default/mach_dma.h:254:
+	    dma_outb( count & 0xff, ((dmanr&3)<<1) + 1 + IO_DMA1_BASE );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#598: FILE: include/asm-i386/mach-default/mach_dma.h:254:
+	    dma_outb( count & 0xff, ((dmanr&3)<<1) + 1 + IO_DMA1_BASE );

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#599: FILE: include/asm-i386/mach-default/mach_dma.h:255:
+	    dma_outb( (count>>8) & 0xff, ((dmanr&3)<<1) + 1 + IO_DMA1_BASE );
 	                    ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#599: FILE: include/asm-i386/mach-default/mach_dma.h:255:
+	    dma_outb( (count>>8) & 0xff, ((dmanr&3)<<1) + 1 + IO_DMA1_BASE );
 	                                        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#599: FILE: include/asm-i386/mach-default/mach_dma.h:255:
+	    dma_outb( (count>>8) & 0xff, ((dmanr&3)<<1) + 1 + IO_DMA1_BASE );
 	                                           ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#599: FILE: include/asm-i386/mach-default/mach_dma.h:255:
+	    dma_outb( (count>>8) & 0xff, ((dmanr&3)<<1) + 1 + IO_DMA1_BASE );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#599: FILE: include/asm-i386/mach-default/mach_dma.h:255:
+	    dma_outb( (count>>8) & 0xff, ((dmanr&3)<<1) + 1 + IO_DMA1_BASE );

ERROR:CODE_INDENT: code indent should use tabs where possible
#600: FILE: include/asm-i386/mach-default/mach_dma.h:256:
+        } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#600: FILE: include/asm-i386/mach-default/mach_dma.h:256:
+        } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#600: FILE: include/asm-i386/mach-default/mach_dma.h:256:
+        } else {
+	    dma_outb( (count>>1) & 0xff, ((dmanr&3)<<2) + 2 + IO_DMA2_BASE );

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#601: FILE: include/asm-i386/mach-default/mach_dma.h:257:
+	    dma_outb( (count>>1) & 0xff, ((dmanr&3)<<2) + 2 + IO_DMA2_BASE );
 	                    ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#601: FILE: include/asm-i386/mach-default/mach_dma.h:257:
+	    dma_outb( (count>>1) & 0xff, ((dmanr&3)<<2) + 2 + IO_DMA2_BASE );
 	                                        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#601: FILE: include/asm-i386/mach-default/mach_dma.h:257:
+	    dma_outb( (count>>1) & 0xff, ((dmanr&3)<<2) + 2 + IO_DMA2_BASE );
 	                                           ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#601: FILE: include/asm-i386/mach-default/mach_dma.h:257:
+	    dma_outb( (count>>1) & 0xff, ((dmanr&3)<<2) + 2 + IO_DMA2_BASE );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#601: FILE: include/asm-i386/mach-default/mach_dma.h:257:
+	    dma_outb( (count>>1) & 0xff, ((dmanr&3)<<2) + 2 + IO_DMA2_BASE );

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#602: FILE: include/asm-i386/mach-default/mach_dma.h:258:
+	    dma_outb( (count>>9) & 0xff, ((dmanr&3)<<2) + 2 + IO_DMA2_BASE );
 	                    ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#602: FILE: include/asm-i386/mach-default/mach_dma.h:258:
+	    dma_outb( (count>>9) & 0xff, ((dmanr&3)<<2) + 2 + IO_DMA2_BASE );
 	                                        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#602: FILE: include/asm-i386/mach-default/mach_dma.h:258:
+	    dma_outb( (count>>9) & 0xff, ((dmanr&3)<<2) + 2 + IO_DMA2_BASE );
 	                                           ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#602: FILE: include/asm-i386/mach-default/mach_dma.h:258:
+	    dma_outb( (count>>9) & 0xff, ((dmanr&3)<<2) + 2 + IO_DMA2_BASE );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#602: FILE: include/asm-i386/mach-default/mach_dma.h:258:
+	    dma_outb( (count>>9) & 0xff, ((dmanr&3)<<2) + 2 + IO_DMA2_BASE );

ERROR:CODE_INDENT: code indent should use tabs where possible
#603: FILE: include/asm-i386/mach-default/mach_dma.h:259:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#603: FILE: include/asm-i386/mach-default/mach_dma.h:259:
+        }$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#606: FILE: include/asm-i386/mach-default/mach_dma.h:262:
+
+

WARNING:INLINE: plain inline is preferred over __inline__
#615: FILE: include/asm-i386/mach-default/mach_dma.h:271:
+static __inline__ int get_dma_residue(unsigned int dmanr)

ERROR:SPACING: spaces required around that '<=' (ctx:VxV)
#617: FILE: include/asm-i386/mach-default/mach_dma.h:273:
+	unsigned int io_port = (dmanr<=3)? ((dmanr&3)<<1) + 1 + IO_DMA1_BASE
 	                             ^

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#617: FILE: include/asm-i386/mach-default/mach_dma.h:273:
+	unsigned int io_port = (dmanr<=3)? ((dmanr&3)<<1) + 1 + IO_DMA1_BASE
 	                                 ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#617: FILE: include/asm-i386/mach-default/mach_dma.h:273:
+	unsigned int io_port = (dmanr<=3)? ((dmanr&3)<<1) + 1 + IO_DMA1_BASE
 	                                          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#617: FILE: include/asm-i386/mach-default/mach_dma.h:273:
+	unsigned int io_port = (dmanr<=3)? ((dmanr&3)<<1) + 1 + IO_DMA1_BASE
 	                                             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#618: FILE: include/asm-i386/mach-default/mach_dma.h:274:
+					 : ((dmanr&3)<<2) + 2 + IO_DMA2_BASE;
 					          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#618: FILE: include/asm-i386/mach-default/mach_dma.h:274:
+					 : ((dmanr&3)<<2) + 2 + IO_DMA2_BASE;
 					             ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#625: FILE: include/asm-i386/mach-default/mach_dma.h:281:
+^I$

ERROR:SPACING: spaces required around that '<=' (ctx:VxV)
#626: FILE: include/asm-i386/mach-default/mach_dma.h:282:
+	return (dmanr<=3)? count : (count<<1);
 	             ^

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#626: FILE: include/asm-i386/mach-default/mach_dma.h:282:
+	return (dmanr<=3)? count : (count<<1);
 	                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#626: FILE: include/asm-i386/mach-default/mach_dma.h:282:
+	return (dmanr<=3)? count : (count<<1);
 	                                 ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#629: FILE: include/asm-i386/mach-default/mach_dma.h:285:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#631: FILE: include/asm-i386/mach-default/mach_dma.h:287:
+extern int request_dma(unsigned int dmanr, const char * device_id);	/* reserve a DMA channel */

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#631: FILE: include/asm-i386/mach-default/mach_dma.h:287:
+extern int request_dma(unsigned int dmanr, const char * device_id);	/* reserve a DMA channel */

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#632: FILE: include/asm-i386/mach-default/mach_dma.h:288:
+extern void free_dma(unsigned int dmanr);	/* release it again */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#639: FILE: include/asm-i386/mach-default/mach_dma.h:295:
+#define isa_dma_bridge_buggy ^I(0)$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#647: FILE: include/asm-i386/mach-pc9800/mach_dma.h:1:
+/* $Id: dma.h,v 1.7 1992/12/14 00:29:34 root Exp root $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#647: FILE: include/asm-i386/mach-pc9800/mach_dma.h:1:
+/* $Id: dma.h,v 1.7 1992/12/14 00:29:34 root Exp root $

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#661: FILE: include/asm-i386/mach-pc9800/mach_dma.h:15:
+#include <asm/io.h>		/* need byte IO */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#664: FILE: include/asm-i386/mach-pc9800/mach_dma.h:18:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#693: FILE: include/asm-i386/mach-pc9800/mach_dma.h:47:
+ *   P7  ...  P0  P7 ... P0   A7 ... A0  A7 ... A0   $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#770: FILE: include/asm-i386/mach-pc9800/mach_dma.h:124:
+
+

WARNING:INLINE: plain inline is preferred over __inline__
#773: FILE: include/asm-i386/mach-pc9800/mach_dma.h:127:
+static __inline__ unsigned long claim_dma_lock(void)

WARNING:LINE_SPACING: Missing a blank line after declarations
#776: FILE: include/asm-i386/mach-pc9800/mach_dma.h:130:
+	unsigned long flags;
+	spin_lock_irqsave(&dma_spin_lock, flags);

WARNING:INLINE: plain inline is preferred over __inline__
#780: FILE: include/asm-i386/mach-pc9800/mach_dma.h:134:
+static __inline__ void release_dma_lock(unsigned long flags)

WARNING:INLINE: plain inline is preferred over __inline__
#786: FILE: include/asm-i386/mach-pc9800/mach_dma.h:140:
+static __inline__ void enable_dma(unsigned int dmanr)

WARNING:INLINE: plain inline is preferred over __inline__
#791: FILE: include/asm-i386/mach-pc9800/mach_dma.h:145:
+static __inline__ void disable_dma(unsigned int dmanr)

WARNING:INLINE: plain inline is preferred over __inline__
#803: FILE: include/asm-i386/mach-pc9800/mach_dma.h:157:
+static __inline__ void clear_dma_ff(unsigned int dmanr)

WARNING:INLINE: plain inline is preferred over __inline__
#809: FILE: include/asm-i386/mach-pc9800/mach_dma.h:163:
+static __inline__ void set_dma_mode(unsigned int dmanr, char mode)

WARNING:INLINE: plain inline is preferred over __inline__
#819: FILE: include/asm-i386/mach-pc9800/mach_dma.h:173:
+static __inline__ void set_dma_page(unsigned int dmanr, unsigned int pagenr)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#821: FILE: include/asm-i386/mach-pc9800/mach_dma.h:175:
+	unsigned char low=pagenr&0xff;
 	                 ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#821: FILE: include/asm-i386/mach-pc9800/mach_dma.h:175:
+	unsigned char low=pagenr&0xff;
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#822: FILE: include/asm-i386/mach-pc9800/mach_dma.h:176:
+	unsigned char hi=pagenr>>8;
 	                ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#822: FILE: include/asm-i386/mach-pc9800/mach_dma.h:176:
+	unsigned char hi=pagenr>>8;
 	                       ^

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#824: FILE: include/asm-i386/mach-pc9800/mach_dma.h:178:
+	switch(dmanr) {
+		case 0:
[...]
+		case 1:
[...]
+		case 2:
[...]
+		case 3:

ERROR:SPACING: space required before the open parenthesis '('
#824: FILE: include/asm-i386/mach-pc9800/mach_dma.h:178:
+	switch(dmanr) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#844: FILE: include/asm-i386/mach-pc9800/mach_dma.h:198:
+
+

WARNING:INLINE: plain inline is preferred over __inline__
#848: FILE: include/asm-i386/mach-pc9800/mach_dma.h:202:
+static __inline__ void set_dma_addr(unsigned int dmanr, unsigned int a)

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#850: FILE: include/asm-i386/mach-pc9800/mach_dma.h:204:
+	set_dma_page(dmanr, a>>16);
 	                     ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#851: FILE: include/asm-i386/mach-pc9800/mach_dma.h:205:
+	dma_outb( a & 0xff, ((dmanr&3)<<2) + IO_DMA1_BASE );
 	                           ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#851: FILE: include/asm-i386/mach-pc9800/mach_dma.h:205:
+	dma_outb( a & 0xff, ((dmanr&3)<<2) + IO_DMA1_BASE );
 	                              ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#851: FILE: include/asm-i386/mach-pc9800/mach_dma.h:205:
+	dma_outb( a & 0xff, ((dmanr&3)<<2) + IO_DMA1_BASE );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#851: FILE: include/asm-i386/mach-pc9800/mach_dma.h:205:
+	dma_outb( a & 0xff, ((dmanr&3)<<2) + IO_DMA1_BASE );

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#852: FILE: include/asm-i386/mach-pc9800/mach_dma.h:206:
+	dma_outb( (a>>8) & 0xff, ((dmanr&3)<<2) + IO_DMA1_BASE );
 	            ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#852: FILE: include/asm-i386/mach-pc9800/mach_dma.h:206:
+	dma_outb( (a>>8) & 0xff, ((dmanr&3)<<2) + IO_DMA1_BASE );
 	                                ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#852: FILE: include/asm-i386/mach-pc9800/mach_dma.h:206:
+	dma_outb( (a>>8) & 0xff, ((dmanr&3)<<2) + IO_DMA1_BASE );
 	                                   ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#852: FILE: include/asm-i386/mach-pc9800/mach_dma.h:206:
+	dma_outb( (a>>8) & 0xff, ((dmanr&3)<<2) + IO_DMA1_BASE );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#852: FILE: include/asm-i386/mach-pc9800/mach_dma.h:206:
+	dma_outb( (a>>8) & 0xff, ((dmanr&3)<<2) + IO_DMA1_BASE );

CHECK:LINE_SPACING: Please don't use multiple blank lines
#855: FILE: include/asm-i386/mach-pc9800/mach_dma.h:209:
+
+

WARNING:INLINE: plain inline is preferred over __inline__
#864: FILE: include/asm-i386/mach-pc9800/mach_dma.h:218:
+static __inline__ void set_dma_count(unsigned int dmanr, unsigned int count)

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#867: FILE: include/asm-i386/mach-pc9800/mach_dma.h:221:
+	dma_outb( count & 0xff, ((dmanr&3)<<2) + 2 + IO_DMA1_BASE );
 	                               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#867: FILE: include/asm-i386/mach-pc9800/mach_dma.h:221:
+	dma_outb( count & 0xff, ((dmanr&3)<<2) + 2 + IO_DMA1_BASE );
 	                                  ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#867: FILE: include/asm-i386/mach-pc9800/mach_dma.h:221:
+	dma_outb( count & 0xff, ((dmanr&3)<<2) + 2 + IO_DMA1_BASE );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#867: FILE: include/asm-i386/mach-pc9800/mach_dma.h:221:
+	dma_outb( count & 0xff, ((dmanr&3)<<2) + 2 + IO_DMA1_BASE );

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#868: FILE: include/asm-i386/mach-pc9800/mach_dma.h:222:
+	dma_outb( (count>>8) & 0xff, ((dmanr&3)<<2) + 2 + IO_DMA1_BASE );
 	                ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#868: FILE: include/asm-i386/mach-pc9800/mach_dma.h:222:
+	dma_outb( (count>>8) & 0xff, ((dmanr&3)<<2) + 2 + IO_DMA1_BASE );
 	                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#868: FILE: include/asm-i386/mach-pc9800/mach_dma.h:222:
+	dma_outb( (count>>8) & 0xff, ((dmanr&3)<<2) + 2 + IO_DMA1_BASE );
 	                                       ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#868: FILE: include/asm-i386/mach-pc9800/mach_dma.h:222:
+	dma_outb( (count>>8) & 0xff, ((dmanr&3)<<2) + 2 + IO_DMA1_BASE );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#868: FILE: include/asm-i386/mach-pc9800/mach_dma.h:222:
+	dma_outb( (count>>8) & 0xff, ((dmanr&3)<<2) + 2 + IO_DMA1_BASE );

CHECK:LINE_SPACING: Please don't use multiple blank lines
#871: FILE: include/asm-i386/mach-pc9800/mach_dma.h:225:
+
+

WARNING:INLINE: plain inline is preferred over __inline__
#880: FILE: include/asm-i386/mach-pc9800/mach_dma.h:234:
+static __inline__ int get_dma_residue(unsigned int dmanr)

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#885: FILE: include/asm-i386/mach-pc9800/mach_dma.h:239:
+	count = 1 + dma_inb(((dmanr&3)<<2) + 2 + IO_DMA1_BASE);
 	                           ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#885: FILE: include/asm-i386/mach-pc9800/mach_dma.h:239:
+	count = 1 + dma_inb(((dmanr&3)<<2) + 2 + IO_DMA1_BASE);
 	                              ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#886: FILE: include/asm-i386/mach-pc9800/mach_dma.h:240:
+	count += dma_inb(((dmanr&3)<<2) + 2 + IO_DMA1_BASE) << 8;
 	                        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#886: FILE: include/asm-i386/mach-pc9800/mach_dma.h:240:
+	count += dma_inb(((dmanr&3)<<2) + 2 + IO_DMA1_BASE) << 8;
 	                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#887: FILE: include/asm-i386/mach-pc9800/mach_dma.h:241:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#891: FILE: include/asm-i386/mach-pc9800/mach_dma.h:245:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#893: FILE: include/asm-i386/mach-pc9800/mach_dma.h:247:
+extern int request_dma(unsigned int dmanr, const char * device_id);	/* reserve a DMA channel */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#893: FILE: include/asm-i386/mach-pc9800/mach_dma.h:247:
+extern int request_dma(unsigned int dmanr, const char * device_id);	/* reserve a DMA channel */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#894: FILE: include/asm-i386/mach-pc9800/mach_dma.h:248:
+extern void free_dma(unsigned int dmanr);	/* release it again */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#901: FILE: include/asm-i386/mach-pc9800/mach_dma.h:255:
+#define isa_dma_bridge_buggy ^I(0)$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000384130.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 51 errors, 39 warnings, 63 checks, 894 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000384130.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
