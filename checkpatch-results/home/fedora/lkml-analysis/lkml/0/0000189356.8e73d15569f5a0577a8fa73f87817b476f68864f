CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#80: FILE: drivers/usb/input/hid-core.c:1580:
+static int hid_get_class_descriptor(struct usb_device *dev, int ifnum,
+		unsigned char type, void *buf, int size)

ERROR:CODE_INDENT: code indent should use tabs where possible
#83: FILE: drivers/usb/input/hid-core.c:1583:
+        char *p = (char*)buf;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: drivers/usb/input/hid-core.c:1583:
+        char *p = (char*)buf;$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#83: FILE: drivers/usb/input/hid-core.c:1583:
+        char *p = (char*)buf;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#85: FILE: drivers/usb/input/hid-core.c:1585:
+	memset(buf,0,size);	// Make sure we parse really received data
 	          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#85: FILE: drivers/usb/input/hid-core.c:1585:
+	memset(buf,0,size);	// Make sure we parse really received data
 	            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#89: FILE: drivers/usb/input/hid-core.c:1589:
+		result = usb_control_msg(dev, usb_rcvctrlpipe(dev, 0),
+				USB_REQ_GET_DESCRIPTOR, USB_RECIP_INTERFACE | USB_DIR_IN,

ERROR:CODE_INDENT: code indent should use tabs where possible
#94: FILE: drivers/usb/input/hid-core.c:1594:
+        // wn_hack: patch wrong descriptor for this device$

ERROR:CODE_INDENT: code indent should use tabs where possible
#95: FILE: drivers/usb/input/hid-core.c:1595:
+        // hardware sends wrong descriptor$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#96: FILE: drivers/usb/input/hid-core.c:1596:
+        // AA, 20050418: should this test be skipped altogether if $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#96: FILE: drivers/usb/input/hid-core.c:1596:
+        // AA, 20050418: should this test be skipped altogether if $

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#97: FILE: drivers/usb/input/hid-core.c:1596:
result < size?

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:CODE_INDENT: code indent should use tabs where possible
#98: FILE: drivers/usb/input/hid-core.c:1597:
+        if (dev->descriptor.idVendor == USB_VENDOR_ID_CHERRY$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: drivers/usb/input/hid-core.c:1597:
+        if (dev->descriptor.idVendor == USB_VENDOR_ID_CHERRY$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#98: FILE: drivers/usb/input/hid-core.c:1597:
+        if (dev->descriptor.idVendor == USB_VENDOR_ID_CHERRY
[...]
+            printk(KERN_DEBUG __FILE__ " : modifying descriptor for 

CHECK:CAMELCASE: Avoid CamelCase: <idVendor>
#98: FILE: drivers/usb/input/hid-core.c:1597:
+        if (dev->descriptor.idVendor == USB_VENDOR_ID_CHERRY

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:TRAILING_WHITESPACE: trailing whitespace
#99: FILE: drivers/usb/input/hid-core.c:1598:
+                && dev->descriptor.idProduct == $

ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: drivers/usb/input/hid-core.c:1598:
+                && dev->descriptor.idProduct == $

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#99: FILE: drivers/usb/input/hid-core.c:1598:
+        if (dev->descriptor.idVendor == USB_VENDOR_ID_CHERRY
+                && dev->descriptor.idProduct == 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: drivers/usb/input/hid-core.c:1598:
+                && dev->descriptor.idProduct == $

CHECK:CAMELCASE: Avoid CamelCase: <idProduct>
#99: FILE: drivers/usb/input/hid-core.c:1598:
+                && dev->descriptor.idProduct == 

ERROR:CODE_INDENT: code indent should use tabs where possible
#101: FILE: drivers/usb/input/hid-core.c:1599:
+                && result > 12$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#101: FILE: drivers/usb/input/hid-core.c:1599:
+                && dev->descriptor.idProduct == 
+                && result > 12

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: drivers/usb/input/hid-core.c:1599:
+                && result > 12$

ERROR:SPACING: space prohibited after that '&&' (ctx:ExW)
#101: FILE: drivers/usb/input/hid-core.c:1599:
+                && result > 12
                 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: drivers/usb/input/hid-core.c:1600:
+                && p[11] == 0x3c$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#102: FILE: drivers/usb/input/hid-core.c:1600:
+                && result > 12
+                && p[11] == 0x3c

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: drivers/usb/input/hid-core.c:1600:
+                && p[11] == 0x3c$

ERROR:CODE_INDENT: code indent should use tabs where possible
#103: FILE: drivers/usb/input/hid-core.c:1601:
+                && p[12] == 0x02) {$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#103: FILE: drivers/usb/input/hid-core.c:1601:
+                && p[11] == 0x3c
+                && p[12] == 0x02) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: drivers/usb/input/hid-core.c:1601:
+                && p[12] == 0x02) {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#104: FILE: drivers/usb/input/hid-core.c:1602:
+            printk(KERN_DEBUG __FILE__ " : modifying descriptor for $

ERROR:CODE_INDENT: code indent should use tabs where possible
#104: FILE: drivers/usb/input/hid-core.c:1602:
+            printk(KERN_DEBUG __FILE__ " : modifying descriptor for $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: drivers/usb/input/hid-core.c:1602:
+            printk(KERN_DEBUG __FILE__ " : modifying descriptor for $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#104: FILE: drivers/usb/input/hid-core.c:1602:
+            printk(KERN_DEBUG __FILE__ " : modifying descriptor for 

ERROR:CODE_INDENT: code indent should use tabs where possible
#106: FILE: drivers/usb/input/hid-core.c:1603:
+            p[11] = p[16] = 0xff;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: drivers/usb/input/hid-core.c:1603:
+            p[11] = p[16] = 0xff;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#107: FILE: drivers/usb/input/hid-core.c:1604:
+            p[12] = p[17] = 0x03;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: drivers/usb/input/hid-core.c:1604:
+            p[12] = p[17] = 0x03;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#108: FILE: drivers/usb/input/hid-core.c:1605:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: drivers/usb/input/hid-core.c:1605:
+        }$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000189356.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 12 warnings, 8 checks, 72 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000189356.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
