WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
> > > A global unique ID won't work out to make all USB mass storage devices

WARNING:TYPO_SPELLING: 'formating' may be misspelled - perhaps 'formatting'?
#37: 
> > > "formating" it.
       ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#87: FILE: drivers/usb/storage/usb.c:748:
+		if (scsi_add_single_device(ss->host, 0, 0, 0))
+		    printk(KERN_WARNING "Unable to connect USB device to the SCSI subsystem\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#88: FILE: drivers/usb/storage/usb.c:749:
+		    printk(KERN_WARNING "Unable to connect USB device to the SCSI subsystem\n");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#89: FILE: drivers/usb/storage/usb.c:750:
+		else
+		    printk(KERN_WARNING "USB device connected to the SCSI subsystem\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#90: FILE: drivers/usb/storage/usb.c:751:
+		    printk(KERN_WARNING "USB device connected to the SCSI subsystem\n");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#99: FILE: drivers/usb/storage/usb.c:1066:
+	if (scsi_remove_single_device(ss->host, 0, 0, 0))
+	    printk(KERN_WARNING "Unable to disconnect USB device from the SCSI subsystem\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#100: FILE: drivers/usb/storage/usb.c:1067:
+	    printk(KERN_WARNING "Unable to disconnect USB device from the SCSI subsystem\n");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#101: FILE: drivers/usb/storage/usb.c:1068:
+	else
+	    printk(KERN_WARNING "USB device disconnected from the SCSI subsystem\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#102: FILE: drivers/usb/storage/usb.c:1069:
+	    printk(KERN_WARNING "USB device disconnected from the SCSI subsystem\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#126: FILE: drivers/scsi/scsi_syms.c:109:
+ * ieee1394 or USB devices, but probably not for normal SCSI... */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#128: FILE: drivers/scsi/scsi_syms.c:111:
+EXPORT_SYMBOL(scsi_remove_single_device);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#137: FILE: drivers/scsi/hosts.h:539:
+ * ieee1394 or USB devices, but probably not for normal SCSI... */

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#138: FILE: drivers/scsi/hosts.h:540:
+extern int scsi_add_single_device(struct Scsi_Host *shpnt,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#138: FILE: drivers/scsi/hosts.h:540:
+extern int scsi_add_single_device(struct Scsi_Host *shpnt,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#139: FILE: drivers/scsi/hosts.h:541:
+extern int scsi_add_single_device(struct Scsi_Host *shpnt,
+	int channel, int id, int lun);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#140: FILE: drivers/scsi/hosts.h:542:
+extern int scsi_remove_single_device(struct Scsi_Host *shpnt,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#141: FILE: drivers/scsi/hosts.h:543:
+extern int scsi_remove_single_device(struct Scsi_Host *shpnt,
+	int channel, int id, int lun);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#152: FILE: drivers/scsi/scsi.c:1557:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#176: FILE: drivers/scsi/scsi.c:1581:
+int scsi_add_single_device(struct Scsi_Host *shpnt, int channel,
+	int id, int lun)

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Device>
#178: FILE: drivers/scsi/scsi.c:1583:
+	Scsi_Device *scd;

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#181: FILE: drivers/scsi/scsi.c:1586:
+	if (shpnt==NULL) {
 	         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#181: FILE: drivers/scsi/scsi.c:1586:
+	if (shpnt==NULL) {
+		return  -ENXIO;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!shpnt"
#181: FILE: drivers/scsi/scsi.c:1586:
+	if (shpnt==NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:REPEATED_WORD: Possible repeated word: 'with'
#189: FILE: drivers/scsi/scsi.c:1594:
+	 * else that might be messing with with the Scsi_Host or other

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#190: FILE: drivers/scsi/scsi.c:1595:
+	 * fundamental data structures.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#194: FILE: drivers/scsi/scsi.c:1599:
+	 * If so, ignore their misguided efforts. */

WARNING:BRACES: braces {} are not necessary for single statement blocks
#196: FILE: drivers/scsi/scsi.c:1601:
+		if ((scd->channel == channel && scd->id == id && scd->lun == lun)) {
+			break;
+		}

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#202: FILE: drivers/scsi/scsi.c:1607:
+		return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#232: FILE: drivers/scsi/scsi.c:1637:
+int scsi_remove_single_device(struct Scsi_Host *shpnt, int channel,
+	int id, int lun)

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Device_Template>
#235: FILE: drivers/scsi/scsi.c:1640:
+	struct Scsi_Device_Template *SDTpnt;

CHECK:CAMELCASE: Avoid CamelCase: <SDTpnt>
#235: FILE: drivers/scsi/scsi.c:1640:
+	struct Scsi_Device_Template *SDTpnt;

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#238: FILE: drivers/scsi/scsi.c:1643:
+	if (shpnt==NULL) {
 	         ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#238: FILE: drivers/scsi/scsi.c:1643:
+	if (shpnt==NULL) {
+		return  -ENODEV;
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!shpnt"
#238: FILE: drivers/scsi/scsi.c:1643:
+	if (shpnt==NULL) {

WARNING:REPEATED_WORD: Possible repeated word: 'with'
#246: FILE: drivers/scsi/scsi.c:1651:
+	 * else that might be messing with with the Scsi_Host or other

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#247: FILE: drivers/scsi/scsi.c:1652:
+	 * fundamental data structures.  */

WARNING:BRACES: braces {} are not necessary for single statement blocks
#252: FILE: drivers/scsi/scsi.c:1657:
+		if ((scd->channel == channel && scd->id == id && scd->lun == lun)) {
+			break;
+		}

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#256: FILE: drivers/scsi/scsi.c:1661:
+	if (scd==NULL) {
 	       ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!scd"
#256: FILE: drivers/scsi/scsi.c:1661:
+	if (scd==NULL) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#263: FILE: drivers/scsi/scsi.c:1668:
+	 * things when they increment/decrement the access_count? */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "SDTpnt"
#270: FILE: drivers/scsi/scsi.c:1675:
+	while (SDTpnt != NULL) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#278: FILE: drivers/scsi/scsi.c:1683:
+		 * can now free all command structures.  */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#281: FILE: drivers/scsi/scsi.c:1686:
+		devfs_unregister (scd->de);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "scd->next"
#285: FILE: drivers/scsi/scsi.c:1690:
+		if (scd->next != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "scd->prev"
#288: FILE: drivers/scsi/scsi.c:1693:
+		if (scd->prev != NULL)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#291: FILE: drivers/scsi/scsi.c:1696:
+		if (shpnt->host_queue == scd) {
+			shpnt->host_queue = scd->next;
+		}

CHECK:SPACING: No space is necessary after a cast
#295: FILE: drivers/scsi/scsi.c:1700:
+		kfree((char *) scd);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#361: FILE: drivers/scsi/scsi.c:1896:
+		if ((err=scsi_add_single_device(HBA_ptr, channel, id, lun))==0)
+		    err = length;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#361: FILE: drivers/scsi/scsi.c:1896:
+		if ((err=scsi_add_single_device(HBA_ptr, channel, id, lun))==0)
 		        ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#361: FILE: drivers/scsi/scsi.c:1896:
+		if ((err=scsi_add_single_device(HBA_ptr, channel, id, lun))==0)
 		                                                           ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#361: FILE: drivers/scsi/scsi.c:1896:
+		if ((err=scsi_add_single_device(HBA_ptr, channel, id, lun))==0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#433: FILE: drivers/scsi/scsi.c:1925:
+		err=scsi_remove_single_device(HBA_ptr, channel, id, lun);
 		   ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000159834.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 28 warnings, 18 checks, 337 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000159834.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
