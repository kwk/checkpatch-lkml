CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#55: FILE: mm/slab.c:205:
+#define BUFCTL_ALLOC	(((kmem_bufctl_t)(~0U))-1)
                     	                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#71: FILE: mm/slab.c:452:
+#define REDZONETIMEOUT		(300*HZ)
                       		    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#81: FILE: mm/slab.c:1939:
+		((unsigned long)cachep/L1_CACHE_BYTES)%REDZONETIMEOUT;
 		                      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#81: FILE: mm/slab.c:1939:
+		((unsigned long)cachep/L1_CACHE_BYTES)%REDZONETIMEOUT;
 		                                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#126: FILE: mm/slab.c:3312:
+	for (i=0;i<cachep->num;i++) {
 	      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#126: FILE: mm/slab.c:3312:
+	for (i=0;i<cachep->num;i++) {
 	        ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#126: FILE: mm/slab.c:3312:
+	for (i=0;i<cachep->num;i++) {
 	          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#126: FILE: mm/slab.c:3312:
+	for (i=0;i<cachep->num;i++) {
 	                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#144: FILE: mm/slab.c:3330:
+		if (slab_bufctl(slabp)[i] == BUFCTL_ALLOC &&
+				(red1 == RED_INACTIVE || red1 == RED_ACTIVE) &&

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#148: FILE: mm/slab.c:3334:
+		printk(KERN_ERR "slab %s: redzone mismatch in slabp %p, objp %p, bufctl 0x%lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#149: FILE: mm/slab.c:3335:
+		printk(KERN_ERR "slab %s: redzone mismatch in slabp %p, objp %p, bufctl 0x%lx\n",
+				cachep->name, slabp, objp, slab_bufctl(slabp)[i]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#155: FILE: mm/slab.c:3341:
+static void print_invalid_slab(const char *list_name, struct kmem_cache *cache,
+			     struct slab *slab)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#157: FILE: mm/slab.c:3343:
+	printk(KERN_ERR "slab %s: invalid slab found in %s list at %p (%d/%d).\n",

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000109187.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 2 warnings, 7 checks, 175 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000109187.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
