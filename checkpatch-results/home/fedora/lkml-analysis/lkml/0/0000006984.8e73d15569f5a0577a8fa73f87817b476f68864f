WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#86: 
[1] http://www2.kernel.org/git/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commitdiff;h=d08b3851da41d0ee60851f2c75b118e1f7a5fc89

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: fs/buffer.c:2835:
+       if (PageDirty(page) || PageWriteback(page))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#96: FILE: fs/buffer.c:2835:
+       if (PageDirty(page) || PageWriteback(page))
                return 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: fs/hugetlbfs/inode.c:179:
+       cancel_dirty_page(page, /* No IO accounting for huge pages? */0);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#143: FILE: include/linux/page-flags.h:256:
+extern void cancel_dirty_page(struct page *page, unsigned int account_size);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: mm/memory.c:1837:
+       pgoff_t index;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: mm/memory.c:1838:
+       unsigned int offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: mm/memory.c:1839:
+       struct page *page;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: mm/memory.c:1841:
+       if (!mapping)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#169: FILE: mm/memory.c:1841:
+       if (!mapping)
+               return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: mm/memory.c:1842:
+               return;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: mm/memory.c:1842:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: mm/memory.c:1843:
+       offset = size & ~PAGE_MASK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: mm/memory.c:1844:
+       if (!offset)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#172: FILE: mm/memory.c:1844:
+       if (!offset)
+               return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: mm/memory.c:1845:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: mm/memory.c:1845:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: mm/memory.c:1846:
+       index = size >> PAGE_SHIFT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: mm/memory.c:1847:
+       page = find_lock_page(mapping, index);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: mm/memory.c:1848:
+       if (page) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#176: FILE: mm/memory.c:1848:
+       if (page) {
+               unsigned int check = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#177: FILE: mm/memory.c:1849:
+               unsigned int check = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: mm/memory.c:1849:
+               unsigned int check = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: mm/memory.c:1850:
+               unsigned char *kaddr = kmap_atomic(page, KM_USER0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: mm/memory.c:1850:
+               unsigned char *kaddr = kmap_atomic(page, KM_USER0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: mm/memory.c:1851:
+               do {$

WARNING:LINE_SPACING: Missing a blank line after declarations
#179: FILE: mm/memory.c:1851:
+               unsigned char *kaddr = kmap_atomic(page, KM_USER0);
+               do {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: mm/memory.c:1851:
+               do {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#179: FILE: mm/memory.c:1851:
+               do {
+                       check += kaddr[offset++];

ERROR:CODE_INDENT: code indent should use tabs where possible
#180: FILE: mm/memory.c:1852:
+                       check += kaddr[offset++];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: mm/memory.c:1852:
+                       check += kaddr[offset++];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: mm/memory.c:1853:
+               } while (offset < PAGE_SIZE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: mm/memory.c:1853:
+               } while (offset < PAGE_SIZE);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#182: FILE: mm/memory.c:1854:
+               kunmap_atomic(kaddr,KM_USER0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: mm/memory.c:1854:
+               kunmap_atomic(kaddr,KM_USER0);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#182: FILE: mm/memory.c:1854:
+               kunmap_atomic(kaddr,KM_USER0);
                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#183: FILE: mm/memory.c:1855:
+               unlock_page(page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: mm/memory.c:1855:
+               unlock_page(page);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#184: FILE: mm/memory.c:1856:
+               page_cache_release(page);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: mm/memory.c:1856:
+               page_cache_release(page);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#185: FILE: mm/memory.c:1857:
+               if (check)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: mm/memory.c:1857:
+               if (check)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#185: FILE: mm/memory.c:1857:
+               if (check)
+                       printk("%s: BADNESS: truncate check %u\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: mm/memory.c:1858:
+                       printk("%s: BADNESS: truncate check %u\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: mm/memory.c:1858:
+                       printk("%s: BADNESS: truncate check %u\n",$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#186: FILE: mm/memory.c:1858:
+                       printk("%s: BADNESS: truncate check %u\n",

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#187: FILE: mm/memory.c:1858:
current->comm, check);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#188: FILE: mm/memory.c:1859:
+                       printk("%s: BADNESS: truncate check %u\n",
+       }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: mm/memory.c:1859:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: mm/memory.c:1895:
+       check_last_page(mapping, inode->i_size);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#258: FILE: mm/truncate.c:56:
+               static unsigned int warncount;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#258: FILE: mm/truncate.c:56:
+       /* If we're cancelling the page, it had better not be mapped
+               static unsigned int warncount;

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#260: FILE: mm/truncate.c:58:
+               WARN_ON(++warncount < 5);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#264: FILE: mm/truncate.c:62:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: mm/truncate.c:83:
+       cancel_dirty_page(page, PAGE_CACHE_SIZE);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#294: FILE: mm/truncate.c:398:
+                       if (!invalidate_complete_page2(mapping, page))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: mm/truncate.c:398:
+                       if (!invalidate_complete_page2(mapping, page))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#294: FILE: mm/truncate.c:398:
+                       if (!invalidate_complete_page2(mapping, page))
                                ret = -EIO;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000006984.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 17 errors, 38 warnings, 3 checks, 176 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000006984.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
