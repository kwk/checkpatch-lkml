WARNING:TYPO_SPELLING: 'menues' may be misspelled - perhaps 'menus'?
#58: 
What's the purpose? Just allow pasting in text editors using menues or
                                                             ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#81: FILE: drivers/char/console.c:2209:
+               case 13:        /* get selection into a buffer */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: drivers/char/console.c:2209:
+               case 13:        /* get selection into a buffer */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#82: FILE: drivers/char/console.c:2210:
+                       return get_selection_buffer(arg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: drivers/char/console.c:2210:
+                       return get_selection_buffer(arg);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#83: FILE: drivers/char/console.c:2211:
+               case 14:        /* get selection length */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: drivers/char/console.c:2211:
+               case 14:        /* get selection length */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#84: FILE: drivers/char/console.c:2212:
+                       return put_user(get_selection_length(), (unsigned int$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: drivers/char/console.c:2212:
+                       return put_user(get_selection_length(), (unsigned int$

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#85: FILE: drivers/char/console.c:2212:
*)((char *)arg + 1));

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: drivers/char/selection.c:297:
+       char *dest;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: drivers/char/selection.c:298:
+       unsigned int length;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: drivers/char/selection.c:300:
+       if (get_user(length, (unsigned int *)(arg + sizeof(char))))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#104: FILE: drivers/char/selection.c:300:
+       if (get_user(length, (unsigned int *)(arg + sizeof(char))))
+               return -EFAULT;

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: drivers/char/selection.c:301:
+               return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: drivers/char/selection.c:301:
+               return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: drivers/char/selection.c:303:
+       dest = (char *)(arg + sizeof(char) + sizeof(unsigned int));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: drivers/char/selection.c:305:
+       if (length > sel_buffer_lth)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#109: FILE: drivers/char/selection.c:305:
+       if (length > sel_buffer_lth)
+               length = sel_buffer_lth;

ERROR:CODE_INDENT: code indent should use tabs where possible
#110: FILE: drivers/char/selection.c:306:
+               length = sel_buffer_lth;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: drivers/char/selection.c:306:
+               length = sel_buffer_lth;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: drivers/char/selection.c:308:
+       if (sel_buffer) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#112: FILE: drivers/char/selection.c:308:
+       if (sel_buffer) {
+               if (copy_to_user(dest, sel_buffer, length))

ERROR:CODE_INDENT: code indent should use tabs where possible
#113: FILE: drivers/char/selection.c:309:
+               if (copy_to_user(dest, sel_buffer, length))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: drivers/char/selection.c:309:
+               if (copy_to_user(dest, sel_buffer, length))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#113: FILE: drivers/char/selection.c:309:
+               if (copy_to_user(dest, sel_buffer, length))
+                       return -EFAULT;

ERROR:CODE_INDENT: code indent should use tabs where possible
#114: FILE: drivers/char/selection.c:310:
+                       return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: drivers/char/selection.c:310:
+                       return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: drivers/char/selection.c:311:
+       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#115: FILE: drivers/char/selection.c:311:
+       } else {
+               length = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#116: FILE: drivers/char/selection.c:312:
+               length = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: drivers/char/selection.c:312:
+               length = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: drivers/char/selection.c:313:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: drivers/char/selection.c:314:
+       __put_user(length, (unsigned long *)(arg + sizeof(char)));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: drivers/char/selection.c:315:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: drivers/char/selection.c:323:
+       return sel_buffer ? sel_buffer_lth : 0;$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#140: FILE: include/linux/selection.h:20:
+extern int get_selection_buffer(const unsigned long arg);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#141: FILE: include/linux/selection.h:21:
+extern unsigned int get_selection_length(void);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000521890.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 26 warnings, 2 checks, 69 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000521890.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
