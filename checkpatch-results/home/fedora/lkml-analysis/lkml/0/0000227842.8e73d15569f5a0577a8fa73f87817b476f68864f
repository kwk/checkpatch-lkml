WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
diff -ruN 828-pagedir-old/kernel/power/pagedir.c 828-pagedir-new/kernel/power/pagedir.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#46: FILE: kernel/power/pagedir.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#47: FILE: kernel/power/pagedir.c:2:
+ * kernel/power/pagedir.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#74: FILE: kernel/power/pagedir.c:29:
+ * Arguments:^Iunsigned long:^I^IThe variable which will contain the $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#75: FILE: kernel/power/pagedir.c:30:
+ * ^I^I^I^I^Ivalue.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#76: FILE: kernel/power/pagedir.c:31:
+ * ^I^Istruct range**:^I^IAddress of the pointer to the current$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#77: FILE: kernel/power/pagedir.c:32:
+ * ^I^I^I^I^Irange.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#78: FILE: kernel/power/pagedir.c:33:
+ * ^I^Istruct rangechain*:^IAddress of the rangechain we are $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#78: FILE: kernel/power/pagedir.c:33:
+ * ^I^Istruct rangechain*:^IAddress of the rangechain we are $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#79: FILE: kernel/power/pagedir.c:34:
+ * ^I^I^I^I^Itraversing.$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#81: FILE: kernel/power/pagedir.c:36:
+static inline void setup_pbe_variable(unsigned long * variable, struct range ** currentrange,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#81: FILE: kernel/power/pagedir.c:36:
+static inline void setup_pbe_variable(unsigned long * variable, struct range ** currentrange,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#82: FILE: kernel/power/pagedir.c:37:
+static inline void setup_pbe_variable(unsigned long * variable, struct range ** currentrange,
+		struct rangechain * chain)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#82: FILE: kernel/power/pagedir.c:37:
+		struct rangechain * chain)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#94: FILE: kernel/power/pagedir.c:49:
+ * Arguments:^Istruct pbe2 *:^IAddress of the page backup entry we're $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#95: FILE: kernel/power/pagedir.c:50:
+ * ^I^I^I^Ipopulating.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#96: FILE: kernel/power/pagedir.c:51:
+ * ^I^Istruct pagedir: Pagedir providing the data.$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#98: FILE: kernel/power/pagedir.c:53:
+void get_first_pbe(struct pbe2 * pbe, struct pagedir * pagedir)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#98: FILE: kernel/power/pagedir.c:53:
+void get_first_pbe(struct pbe2 * pbe, struct pagedir * pagedir)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#105: FILE: kernel/power/pagedir.c:60:
+^Isetup_pbe_variable((unsigned long *) &pbe->origaddress, $

CHECK:SPACING: No space is necessary after a cast
#105: FILE: kernel/power/pagedir.c:60:
+	setup_pbe_variable((unsigned long *) &pbe->origaddress, 

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#106: FILE: kernel/power/pagedir.c:61:
+	setup_pbe_variable((unsigned long *) &pbe->origaddress, 
+			&pbe->currentorigrange, &pagedir->origranges);

CHECK:SPACING: No space is necessary after a cast
#107: FILE: kernel/power/pagedir.c:62:
+	setup_pbe_variable((unsigned long *) &pbe->address,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#108: FILE: kernel/power/pagedir.c:63:
+	setup_pbe_variable((unsigned long *) &pbe->address,
+			&pbe->currentdestrange, &pagedir->destranges);

CHECK:SPACING: No space is necessary after a cast
#111: FILE: kernel/power/pagedir.c:66:
+	currentorig = (unsigned long) pbe->origaddress;

CHECK:SPACING: No space is necessary after a cast
#112: FILE: kernel/power/pagedir.c:67:
+	currentaddress = (unsigned long) pbe->address;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'currentaddress < 0'
#117: FILE: kernel/power/pagedir.c:72:
+	if ((currentaddress < 0) || (currentaddress > max_mapnr))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'currentaddress > max_mapnr'
#117: FILE: kernel/power/pagedir.c:72:
+	if ((currentaddress < 0) || (currentaddress > max_mapnr))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#119: FILE: kernel/power/pagedir.c:74:
+		panic("Argh! Destination range value %ld is invalid!",
+				currentaddress);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#127: FILE: kernel/power/pagedir.c:82:
+void get_next_pbe(struct pbe2 * pbe)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#138: FILE: kernel/power/pagedir.c:93:
+^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#146: FILE: kernel/power/pagedir.c:101:
+ * ^ILocal Page Flags routines.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#148: FILE: kernel/power/pagedir.c:103:
+ * ^IRather than using the rare and precious flags in struct page, we allocate$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#149: FILE: kernel/power/pagedir.c:104:
+ * ^Iour own bitmaps dynamically.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#150: FILE: kernel/power/pagedir.c:105:
+ * $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#158: FILE: kernel/power/pagedir.c:113:
+ * ^I^Ionce did) because we can't be sure what side effects it has. On$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#159: FILE: kernel/power/pagedir.c:114:
+ * ^I^Imy old Duron, with 3DNOW, kernel_fpu_begin increments preempt$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#160: FILE: kernel/power/pagedir.c:115:
+ * ^I^Icount, making our preempt count at resume time 4 instead of 3.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#161: FILE: kernel/power/pagedir.c:116:
+ * ^I^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#161: FILE: kernel/power/pagedir.c:116:
+ * ^I^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#162: FILE: kernel/power/pagedir.c:117:
+ * ^I^IWe don't want to call kmap_atomic unconditionally because it has$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#163: FILE: kernel/power/pagedir.c:118:
+ * ^I^Ithe side effect of incrementing the preempt count, which will$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#164: FILE: kernel/power/pagedir.c:119:
+ * ^I^Ileave it one too high post resume (the page containing the$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#165: FILE: kernel/power/pagedir.c:120:
+ * ^I^Ipreempt count will be copied after its incremented. This is$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#166: FILE: kernel/power/pagedir.c:121:
+ * ^I^Iessentially the same problem.$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#178: FILE: kernel/power/pagedir.c:133:
+		unsigned long * origpage;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#179: FILE: kernel/power/pagedir.c:134:
+		unsigned long * copypage = page_address(pbe.address);

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: kernel/power/pagedir.c:136:
+^I       ^Iif (PageHighMem(pbe.origaddress))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#181: FILE: kernel/power/pagedir.c:136:
+^I       ^Iif (PageHighMem(pbe.origaddress))$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#186: FILE: kernel/power/pagedir.c:141:
+		for (loop=0; loop < (PAGE_SIZE / sizeof(unsigned long)); loop++)
 		         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#188: FILE: kernel/power/pagedir.c:143:
+^I       ^Iif (PageHighMem(pbe.origaddress))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#188: FILE: kernel/power/pagedir.c:143:
+^I       ^Iif (PageHighMem(pbe.origaddress))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#206: FILE: kernel/power/pagedir.c:161:
+^I       ^Iif (!PageHighMem(pbe.origaddress)) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#206: FILE: kernel/power/pagedir.c:161:
+^I       ^Iif (!PageHighMem(pbe.origaddress)) {$

WARNING:LINE_SPACING: Missing a blank line after declarations
#222: FILE: kernel/power/pagedir.c:177:
+	int i;
+	for (i = 0; i < max_mapnr; i++)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#233: FILE: kernel/power/pagedir.c:188:
+void free_pagedir(struct pagedir * p)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'free_pagedir', this function's name, in a string
#235: FILE: kernel/power/pagedir.c:190:
+	PRINTFREEMEM("at start of free_pagedir");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#239: FILE: kernel/power/pagedir.c:194:
+		struct range * rangepointer;

WARNING:LINE_SPACING: Missing a blank line after declarations
#241: FILE: kernel/power/pagedir.c:196:
+		unsigned long pagenumber;
+		range_for_each(&p->allocdranges, rangepointer, pagenumber) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#242: FILE: kernel/power/pagedir.c:197:
+			ClearPageNosave(mem_map+pagenumber);
 			                       ^

CHECK:SPACING: No space is necessary after a cast
#243: FILE: kernel/power/pagedir.c:198:
+			free_page((unsigned long) page_address(mem_map+pagenumber));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#243: FILE: kernel/power/pagedir.c:198:
+			free_page((unsigned long) page_address(mem_map+pagenumber));
 			                                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#252: FILE: kernel/power/pagedir.c:207:
+^I$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'free_pagedir', this function's name, in a string
#257: FILE: kernel/power/pagedir.c:212:
+	PRINTFREEMEM("at end of free_pagedir");

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#267: FILE: kernel/power/pagedir.c:222:
+ * ^I^Istruct page *^I^IThe page to look for.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#269: FILE: kernel/power/pagedir.c:224:
+ * ^I^I^I^I^IBit 0: Source page$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#270: FILE: kernel/power/pagedir.c:225:
+ * ^I^I^I^I^IBit 1: Dest page$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#271: FILE: kernel/power/pagedir.c:226:
+ * ^I^I^I^I^IBit 2: Allocated$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#272: FILE: kernel/power/pagedir.c:227:
+ * ^I^I^I^I^I(Should only result in 0, 1, 2 or 6).$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#275: FILE: kernel/power/pagedir.c:230:
+int PageInPagedir(struct pagedir * p, struct page * page)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#275: FILE: kernel/power/pagedir.c:230:
+int PageInPagedir(struct pagedir * p, struct page * page)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#281: FILE: kernel/power/pagedir.c:236:
+		struct range * rangepointer;

WARNING:LINE_SPACING: Missing a blank line after declarations
#283: FILE: kernel/power/pagedir.c:238:
+		unsigned long pagenumber;
+		range_for_each(&p->origranges, rangepointer, pagenumber) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#293: FILE: kernel/power/pagedir.c:248:
+		struct range * rangepointer;

WARNING:LINE_SPACING: Missing a blank line after declarations
#295: FILE: kernel/power/pagedir.c:250:
+		unsigned long pagenumber;
+		range_for_each(&p->destranges, rangepointer, pagenumber) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#305: FILE: kernel/power/pagedir.c:260:
+		struct range * rangepointer;

WARNING:LINE_SPACING: Missing a blank line after declarations
#307: FILE: kernel/power/pagedir.c:262:
+		unsigned long pagenumber;
+		range_for_each(&p->allocdranges, rangepointer, pagenumber) {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#321: FILE: kernel/power/pagedir.c:276:
+ * ^I^Icase where it is bigger than pagedir2.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#322: FILE: kernel/power/pagedir.c:277:
+ * Arguments:^Istruct pagedir *: ^IThe pagedir for which we should $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#322: FILE: kernel/power/pagedir.c:277:
+ * Arguments:^Istruct pagedir *: ^IThe pagedir for which we should $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#323: FILE: kernel/power/pagedir.c:278:
+ * ^I^I^I^I^Iallocate memory.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#324: FILE: kernel/power/pagedir.c:279:
+ * ^I^Iint:^I^I^ISize of pageset 1.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#325: FILE: kernel/power/pagedir.c:280:
+ * ^I^Iint:^I^I^ISize of pageset 2.$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#328: FILE: kernel/power/pagedir.c:283:
+int allocate_extra_pagedir_memory(struct pagedir * p, int pageset_size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#329: FILE: kernel/power/pagedir.c:284:
+int allocate_extra_pagedir_memory(struct pagedir * p, int pageset_size,
+		int alloc_from)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'allocate_extra_pagedir_memory', this function's name, in a string
#336: FILE: kernel/power/pagedir.c:291:
+	PRINTFREEMEM("at start of allocate_extra_pagedir_memory");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#342: FILE: kernel/power/pagedir.c:297:
+		int num_added = 0, numnosaveallocated=0;
 		                                     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#344: FILE: kernel/power/pagedir.c:299:
+^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#352: FILE: kernel/power/pagedir.c:307:
+			struct page * newpage;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#354: FILE: kernel/power/pagedir.c:309:
+^I^I^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#367: FILE: kernel/power/pagedir.c:322:
+				suspend_message(SUSPEND_PAGESETS, SUSPEND_VERBOSE, 1,
+					"   Allocated (extra) memory for pages"

WARNING:SPLIT_STRING: quoted string split across lines
#368: FILE: kernel/power/pagedir.c:323:
+					"   Allocated (extra) memory for pages"
+					" from %d-%d (%d pages).\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#369: FILE: kernel/power/pagedir.c:324:
+^I^I^I^I^Iorigallocd + 1, pageset_size, $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#371: FILE: kernel/power/pagedir.c:326:
+				printk("Couldn't get enough yet."

WARNING:SPLIT_STRING: quoted string split across lines
#372: FILE: kernel/power/pagedir.c:327:
+				printk("Couldn't get enough yet."
+						" %d pages short.\n",

WARNING:SPLIT_STRING: quoted string split across lines
#375: FILE: kernel/power/pagedir.c:330:
+				PRINTFREEMEM("at abort of "
+					"allocate_extra_pagedir_memory");

ERROR:SPACING: spaces required around that '+=' (ctx:VxW)
#390: FILE: kernel/power/pagedir.c:345:
+			num_added+= (1 << order);
 			         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#393: FILE: kernel/power/pagedir.c:348:
+		suspend_message(SUSPEND_PAGESETS, SUSPEND_VERBOSE, 1,
+			"   Allocated (extra) memory for pages "

WARNING:SPLIT_STRING: quoted string split across lines
#394: FILE: kernel/power/pagedir.c:349:
+			"   Allocated (extra) memory for pages "
+			"from %d-%d (%d pages).\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#395: FILE: kernel/power/pagedir.c:350:
+^I^I^Iorigallocd + 1, pageset_size, $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'allocate_extra_pagedir_memory', this function's name, in a string
#402: FILE: kernel/power/pagedir.c:357:
+	PRINTFREEMEM("at end of allocate_extra_pagedir_memory");

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#409: FILE: kernel/power/pagedir.c:364:
+ * ^I^Ibeing able to be written out in a separate pagedir.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#410: FILE: kernel/power/pagedir.c:365:
+ * ^I^IHighMem pages are simply marked as pageset2. They won't be$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#411: FILE: kernel/power/pagedir.c:366:
+ * ^I^Ineeded during suspend.$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#417: FILE: kernel/power/pagedir.c:372:
+	struct zone * zone;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#424: FILE: kernel/power/pagedir.c:379:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#427: FILE: kernel/power/pagedir.c:382:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#439: FILE: kernel/power/pagedir.c:394:
+^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#444: FILE: kernel/power/pagedir.c:399:
+			struct page * page;

WARNING:LINE_SPACING: Missing a blank line after declarations
#445: FILE: kernel/power/pagedir.c:400:
+			struct page * page;
+			list_for_each_entry(page, &zone->inactive_list, lru)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#449: FILE: kernel/power/pagedir.c:404:
+			struct page * page;

WARNING:LINE_SPACING: Missing a blank line after declarations
#450: FILE: kernel/power/pagedir.c:405:
+			struct page * page;
+			list_for_each_entry(page, &zone->active_list, lru)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#456: FILE: kernel/power/pagedir.c:411:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#463: FILE: kernel/power/pagedir.c:418:
+			struct page * page;

WARNING:LINE_SPACING: Missing a blank line after declarations
#464: FILE: kernel/power/pagedir.c:419:
+			struct page * page;
+			page = virt_to_page(get_rangepages_list_entry(i));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#468: FILE: kernel/power/pagedir.c:423:
+				suspend_message(SUSPEND_PAGESETS, SUSPEND_ERROR, 1,
+					"Pagedir[%d] was marked as pageset2 -"

WARNING:SPLIT_STRING: quoted string split across lines
#469: FILE: kernel/power/pagedir.c:424:
+					"Pagedir[%d] was marked as pageset2 -"
+					" unmarking.\n", i);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#479: FILE: kernel/power/pagedir.c:434:
+		if (PageSlab(mem_map+i)) {
 		                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#480: FILE: kernel/power/pagedir.c:435:
+			if (TestAndClearPagePageset2(mem_map+i)) {
 			                                    ^

CHECK:CAMELCASE: Avoid CamelCase: <TestAndClearPagePageset2>
#480: FILE: kernel/power/pagedir.c:435:
+			if (TestAndClearPagePageset2(mem_map+i)) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#482: FILE: kernel/power/pagedir.c:437:
+				printk(

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#482: FILE: kernel/power/pagedir.c:437:
+				printk(

WARNING:SPLIT_STRING: quoted string split across lines
#484: FILE: kernel/power/pagedir.c:439:
+					"Found page %d is slab page "
+						"but marked pageset 2.\n", i);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#495: FILE: kernel/power/pagedir.c:450:
+void warmup_collision_cache(void) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#497: FILE: kernel/power/pagedir.c:452:
+	struct range * rangepointer = NULL;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#499: FILE: kernel/power/pagedir.c:454:
+^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#507: FILE: kernel/power/pagedir.c:462:
+		ClearPageInUse(mem_map+i);
 		                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#510: FILE: kernel/power/pagedir.c:465:
+		SetPageInUse(mem_map+pagenumber);
 		                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#514: FILE: kernel/power/pagedir.c:469:
+ * $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#516: FILE: kernel/power/pagedir.c:471:
+ * ^I^Iwith pages where we're going to restore from the loaded pages$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#517: FILE: kernel/power/pagedir.c:472:
+ * ^I^Ilater.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#519: FILE: kernel/power/pagedir.c:474:
+ * ^I^Ihappen).$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#526: FILE: kernel/power/pagedir.c:481:
+	struct page * pageaddr = NULL;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#533: FILE: kernel/power/pagedir.c:488:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#534: FILE: kernel/power/pagedir.c:489:
+	for(i=0; i < pagedir_resume.pageset_size; i++) {
 	     ^

ERROR:SPACING: space required before the open parenthesis '('
#534: FILE: kernel/power/pagedir.c:489:
+	for(i=0; i < pagedir_resume.pageset_size; i++) {

CHECK:SPACING: No space is necessary after a cast
#535: FILE: kernel/power/pagedir.c:490:
+		while ((this = (void *) get_zeroed_page(GFP_ATOMIC))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#538: FILE: kernel/power/pagedir.c:493:
+			if (!PageInUse(pageaddr)) {
+				break;
+			}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE_STRING: line length of 104 exceeds 100 columns
#545: FILE: kernel/power/pagedir.c:500:
+			abort_suspend("Error: Ran out of memory seeking locations for reloading data.");

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required before the open parenthesis '('
#554: FILE: kernel/power/pagedir.c:509:
+	while(eaten_memory) {

CHECK:SPACING: No space is necessary after a cast
#557: FILE: kernel/power/pagedir.c:512:
+		free_page((unsigned long) this);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#559: FILE: kernel/power/pagedir.c:514:
+^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#569: FILE: kernel/power/pagedir.c:524:
+void set_chain_names(struct pagedir * p)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#576: FILE: kernel/power/pagedir.c:531:
+EXPORT_SYMBOL(get_first_pbe);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#577: FILE: kernel/power/pagedir.c:532:
+EXPORT_SYMBOL(get_next_pbe);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000227842.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 54 errors, 65 warnings, 26 checks, 532 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000227842.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
