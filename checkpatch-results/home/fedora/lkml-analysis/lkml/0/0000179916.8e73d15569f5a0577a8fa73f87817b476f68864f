WARNING:TYPO_SPELLING: 'explicitely' may be misspelled - perhaps 'explicitly'?
#40: 
thread_info data, now it gets it explicitely from the original task.
                                 ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: No space is necessary after a cast
#103: FILE: include/asm-cris/thread_info.h:70:
+#define alloc_thread_stack(tsk) ((void *) __get_free_pages(GFP_KERNEL,1))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#103: FILE: include/asm-cris/thread_info.h:70:
+#define alloc_thread_stack(tsk) ((void *) __get_free_pages(GFP_KERNEL,1))
                                                                      ^

CHECK:SPACING: No space is necessary after a cast
#136: FILE: include/asm-um/thread_info.h:56:
+	((void *) kmalloc(THREAD_SIZE, GFP_KERNEL))

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#136: FILE: include/asm-um/thread_info.h:56:
+	((void *) kmalloc(THREAD_SIZE, GFP_KERNEL))

CHECK:SPACING: No space is necessary after a cast
#154: FILE: include/asm-sh64/thread_info.h:64:
+#define alloc_thread_stack(ti) ((void *) __get_free_pages(GFP_KERNEL,1))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#154: FILE: include/asm-sh64/thread_info.h:64:
+#define alloc_thread_stack(ti) ((void *) __get_free_pages(GFP_KERNEL,1))
                                                                     ^

CHECK:SPACING: No space is necessary after a cast
#169: FILE: include/asm-sh/thread_info.h:61:
+#define alloc_thread_stack(ti) ((void *) __get_free_pages(GFP_KERNEL,1))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#169: FILE: include/asm-sh/thread_info.h:61:
+#define alloc_thread_stack(ti) ((void *) __get_free_pages(GFP_KERNEL,1))
                                                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#232: FILE: include/asm-sparc64/thread_info.h:170:
+	free_pages((unsigned long)(stk),__THREAD_INFO_ORDER)
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#248: FILE: include/asm-s390/thread_info.h:83:
+#define free_thread_stack(stk) free_pages((unsigned long)(stk),THREAD_ORDER)
                                                               ^

CHECK:SPACING: No space is necessary after a cast
#291: FILE: include/asm-ia64/thread_info.h:56:
+#define alloc_thread_stack(tsk)	((void *) ((char *) (tsk) + IA64_TASK_SIZE))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#383: FILE: include/asm-m68k/thread_info.h:30:
+#define alloc_thread_stack(tsk)   ((void *)__get_free_pages(GFP_KERNEL,0))
                                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#384: FILE: include/asm-m68k/thread_info.h:31:
+#define free_thread_stack(stk)  free_pages((unsigned long)(stk),0)
                                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#388: FILE: include/asm-m68k/thread_info.h:33:
+#define alloc_thread_stack(tsk)   ((void *)__get_free_pages(GFP_KERNEL,1))
                                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#389: FILE: include/asm-m68k/thread_info.h:34:
+#define free_thread_stack(stk)  free_pages((unsigned long)(stk),1)
                                                                ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#403: FILE: include/asm-arm/thread_info.h:95:
+extern void *alloc_thread_stack(struct task_struct *task);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#404: FILE: include/asm-arm/thread_info.h:96:
+extern void free_thread_stack(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#404: FILE: include/asm-arm/thread_info.h:96:
+extern void free_thread_stack(void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:SPACING: No space is necessary after a cast
#420: FILE: include/asm-x86_64/thread_info.h:77:
+	((void *) __get_free_pages(GFP_KERNEL,THREAD_ORDER))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#420: FILE: include/asm-x86_64/thread_info.h:77:
+	((void *) __get_free_pages(GFP_KERNEL,THREAD_ORDER))
 	                                     ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#464: FILE: include/asm-arm26/thread_info.h:87:
+extern void *alloc_thread_stack(struct task_struct *task);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#465: FILE: include/asm-arm26/thread_info.h:88:
+extern void free_thread_stack(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#465: FILE: include/asm-arm26/thread_info.h:88:
+extern void free_thread_stack(void *);

CHECK:SPACING: No space is necessary after a cast
#481: FILE: include/asm-alpha/thread_info.h:55:
+  ((void *) __get_free_pages(GFP_KERNEL,1))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#481: FILE: include/asm-alpha/thread_info.h:55:
+  ((void *) __get_free_pages(GFP_KERNEL,1))$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#481: FILE: include/asm-alpha/thread_info.h:55:
+  ((void *) __get_free_pages(GFP_KERNEL,1))
                                        ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000179916.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 5 warnings, 11 checks, 494 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000179916.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
