ERROR:SPACING: space required before the open parenthesis '('
#57: FILE: ipc/msg.c:383:
+		if(cmd == MSG_STAT && msqid >= msg_ids.entries->size)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#69: FILE: ipc/sem.c:526:
+		if(semid >= sem_ids.entries->size)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#89: FILE: ipc/util.c:76:
+	ids->entries = ipc_rcu_alloc(sizeof(struct kern_ipc_perm *)*size +
 	                                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#101: FILE: ipc/util.c:85:
+	for(i=0;i<size;i++)
 	     ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#101: FILE: ipc/util.c:85:
+	for(i=0;i<size;i++)
 	       ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#101: FILE: ipc/util.c:85:
+	for(i=0;i<size;i++)
 	         ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#101: FILE: ipc/util.c:85:
+	for(i=0;i<size;i++)
 	              ^

ERROR:SPACING: space required before the open parenthesis '('
#101: FILE: ipc/util.c:85:
+	for(i=0;i<size;i++)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#121: FILE: ipc/util.c:123:
+	struct ipc_id_ary* new;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#122: FILE: ipc/util.c:124:
+	struct ipc_id_ary* old;

ERROR:SPACING: space required before the open parenthesis '('
#129: FILE: ipc/util.c:130:
+	if(newsize <= size)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#133: FILE: ipc/util.c:133:
+	new = ipc_rcu_alloc(sizeof(struct kern_ipc_perm *)*newsize +
 	                                                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#142: FILE: ipc/util.c:138:
+	memcpy(new->p, ids->entries->p, sizeof(struct kern_ipc_perm *)*size +
 	                                                              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#144: FILE: ipc/util.c:140:
+	for(i=size;i<newsize;i++) {
 	     ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#144: FILE: ipc/util.c:140:
+	for(i=size;i<newsize;i++) {
 	          ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#144: FILE: ipc/util.c:140:
+	for(i=size;i<newsize;i++) {
 	            ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#144: FILE: ipc/util.c:140:
+	for(i=size;i<newsize;i++) {
 	                    ^

ERROR:SPACING: space required before the open parenthesis '('
#144: FILE: ipc/util.c:140:
+	for(i=size;i<newsize;i++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#144: FILE: ipc/util.c:140:
+	for(i=size;i<newsize;i++) {
+		new->p[i] = NULL;
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#173: FILE: ipc/util.c:180:
+		if(ids->entries->p[id] == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ids->entries->p[id]"
#173: FILE: ipc/util.c:180:
+		if(ids->entries->p[id] == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required before the open parenthesis '('
#191: FILE: ipc/util.c:221:
+	if(lid >= ids->entries->size)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ids->entries->p[lid]"
#210: FILE: ipc/util.c:239:
+		} while (ids->entries->p[lid] == NULL);

ERROR:SPACING: space required before the open parenthesis '('
#219: FILE: ipc/util.c:498:
+	if(lid >= ids->entries->size)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#231: FILE: ipc/util.c:508:
+	struct ipc_id_ary* entries;

ERROR:SPACING: space required before the open parenthesis '('
#236: FILE: ipc/util.c:512:
+	if(lid >= entries->size) {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#281: FILE: ipc/util.h:30:
+	struct ipc_id_ary* entries;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000251034.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 1 warnings, 5 checks, 211 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000251034.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
