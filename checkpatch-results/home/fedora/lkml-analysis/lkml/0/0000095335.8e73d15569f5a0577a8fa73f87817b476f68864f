WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
Add a /proc node for the VMI sub-arch, which gives information on the VMI ROM

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#49: FILE: arch/i386/mach-vmi/proc.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#68: FILE: arch/i386/mach-vmi/proc.c:20:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#69: FILE: arch/i386/mach-vmi/proc.c:21:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#83: FILE: arch/i386/mach-vmi/proc.c:35:
+#include <asm/processor.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#86: FILE: arch/i386/mach-vmi/proc.c:38:
+extern VROMHeader *vmi_rom;
                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <VROMHeader>
#86: FILE: arch/i386/mach-vmi/proc.c:38:
+extern VROMHeader *vmi_rom;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <devID>
#95: FILE: arch/i386/mach-vmi/proc.c:47:
+	long devID;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#98: FILE: arch/i386/mach-vmi/proc.c:50:
+} __attribute__((packed));

ERROR:CODE_INDENT: code indent should use tabs where possible
#103: FILE: arch/i386/mach-vmi/proc.c:55:
+        unsigned long long tsc;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: arch/i386/mach-vmi/proc.c:55:
+        unsigned long long tsc;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#104: FILE: arch/i386/mach-vmi/proc.c:56:
+        asm volatile("rdtsc" : "=&A" (tsc));$

WARNING:LINE_SPACING: Missing a blank line after declarations
#104: FILE: arch/i386/mach-vmi/proc.c:56:
+        unsigned long long tsc;
+        asm volatile("rdtsc" : "=&A" (tsc));

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: arch/i386/mach-vmi/proc.c:56:
+        asm volatile("rdtsc" : "=&A" (tsc));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: arch/i386/mach-vmi/proc.c:57:
+        return tsc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: arch/i386/mach-vmi/proc.c:57:
+        return tsc;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#113: FILE: arch/i386/mach-vmi/proc.c:65:
+	int i;
+	for (i = 0; i < 1000; i++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#128: FILE: arch/i386/mach-vmi/proc.c:80:
+	int i;
+	for (i = 0; i < 1000; i++) {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#130: FILE: arch/i386/mach-vmi/proc.c:82:
+		asm volatile(

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#131: FILE: arch/i386/mach-vmi/proc.c:83:
+			"1:	mov %%eax,0	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#132: FILE: arch/i386/mach-vmi/proc.c:84:
+			"2:			\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#134: FILE: arch/i386/mach-vmi/proc.c:86:
+			"	.align 4	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#135: FILE: arch/i386/mach-vmi/proc.c:87:
+			"	.long 1b,2b	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#136: FILE: arch/i386/mach-vmi/proc.c:88:
+			".previous		\n"

ERROR:TRAILING_WHITESPACE: trailing whitespace
#147: FILE: arch/i386/mach-vmi/proc.c:99:
+^Iif (!hypervisor_found) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#151: FILE: arch/i386/mach-vmi/proc.c:103:
+^Iseq_printf(m, "Kernel VMI API version %d.%d\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#152: FILE: arch/i386/mach-vmi/proc.c:104:
+	seq_printf(m, "Kernel VMI API version %d.%d\n", 
+		    VMI_API_REV_MAJOR, MIN_VMI_API_REV_MINOR);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#155: FILE: arch/i386/mach-vmi/proc.c:107:
+^I^I^I vmi_rom->APIVersionMajor, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#155: FILE: arch/i386/mach-vmi/proc.c:107:
+		seq_printf(m, "VMI ROM API version: %d.%d\n",
+			 vmi_rom->APIVersionMajor, 

CHECK:CAMELCASE: Avoid CamelCase: <APIVersionMajor>
#155: FILE: arch/i386/mach-vmi/proc.c:107:
+			 vmi_rom->APIVersionMajor, 

CHECK:CAMELCASE: Avoid CamelCase: <APIVersionMinor>
#156: FILE: arch/i386/mach-vmi/proc.c:108:
+			 vmi_rom->APIVersionMinor);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#158: FILE: arch/i386/mach-vmi/proc.c:110:
+		seq_printf(m, "        rom size: %d\n",
+			 vmi_rom->romLength * 512);

CHECK:CAMELCASE: Avoid CamelCase: <romLength>
#158: FILE: arch/i386/mach-vmi/proc.c:110:
+			 vmi_rom->romLength * 512);

CHECK:CAMELCASE: Avoid CamelCase: <pnpHeaderOffset>
#160: FILE: arch/i386/mach-vmi/proc.c:112:
+		if (vmi_rom->pnpHeaderOffset) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#162: FILE: arch/i386/mach-vmi/proc.c:114:
+				((char *)vmi_rom+vmi_rom->pnpHeaderOffset);
 				                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#164: FILE: arch/i386/mach-vmi/proc.c:116:
+			seq_printf(m, "        manufacturer: %s\n",
+				 (char *)vmi_rom+h->manufacturer_offset);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#164: FILE: arch/i386/mach-vmi/proc.c:116:
+				 (char *)vmi_rom+h->manufacturer_offset);
 				                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#166: FILE: arch/i386/mach-vmi/proc.c:118:
+			seq_printf(m, "        product: %s\n",
+				 (char *)vmi_rom+h->product_offset);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#166: FILE: arch/i386/mach-vmi/proc.c:118:
+				 (char *)vmi_rom+h->product_offset);
 				                ^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#182: FILE: arch/i386/mach-vmi/proc.c:134:
+static struct file_operations proc_vmi_info_operations = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#189: FILE: arch/i386/mach-vmi/proc.c:141:
+#define VDEF(call) #call ,
                          ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#189: FILE: arch/i386/mach-vmi/proc.c:141:
+#define VDEF(call) #call ,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: arch/i386/mach-vmi/proc.c:143:
+   VMI_CALLS$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#193: FILE: arch/i386/mach-vmi/proc.c:145:
+};
+#undef VDEF

CHECK:CAMELCASE: Avoid CamelCase: <nativeEIP>
#198: FILE: arch/i386/mach-vmi/proc.c:150:
+		   vmi_call_name[a->vmi_call], a->nativeEIP, a->native_size,

CHECK:CAMELCASE: Avoid CamelCase: <translationEIP>
#199: FILE: arch/i386/mach-vmi/proc.c:151:
+		   a->translationEIP, a->translation_size, a->nop_size);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#206: FILE: arch/i386/mach-vmi/proc.c:158:
+^Istruct vmi_annotation *a; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#208: FILE: arch/i386/mach-vmi/proc.c:160:
+^Ifor (a = start; a < end; a++) { $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#208: FILE: arch/i386/mach-vmi/proc.c:160:
+	for (a = start; a < end; a++) { 
+		print_annotation(m, a);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#212: FILE: arch/i386/mach-vmi/proc.c:164:
+} $

WARNING:CONST_STRUCT: struct file_operations should normally be const
#219: FILE: arch/i386/mach-vmi/proc.c:171:
+static struct file_operations proc_vmi_annotations_operations = {

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#242: FILE: arch/i386/mach-vmi/proc.c:194:
+__initcall(proc_vmi_init);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000095335.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 19 warnings, 20 checks, 199 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000095335.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
