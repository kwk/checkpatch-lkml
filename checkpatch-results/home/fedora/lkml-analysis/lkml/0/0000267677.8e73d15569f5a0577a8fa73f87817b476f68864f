WARNING:CONST_STRUCT: struct address_space_operations should normally be const
#65: FILE: mm/memhotplug.c:72:
+extern struct address_space_operations ext2_aops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#66: FILE: mm/memhotplug.c:73:
+extern struct address_space_operations ext2_nobh_aops;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:CONST_STRUCT: struct address_space_operations should normally be const
#66: FILE: mm/memhotplug.c:73:
+extern struct address_space_operations ext2_nobh_aops;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "mapping"
#82: FILE: mm/memhotplug.c:104:
+	if (PagePrivate(page) && PageDirty(page) && mapping != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#103: FILE: mm/memhotplug.c:174:
+	bh = head = page_buffers(page);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#120: FILE: mm/memhotplug.c:191:
+		BUG_ON(bh->b_page != page);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#147: FILE: mm/memhotplug.c:412:
+		BUG_ON(mapping != newpage->mapping);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#149: FILE: mm/memhotplug.c:414:
+		bh = head = page_buffers(newpage);

WARNING:LINE_SPACING: Missing a blank line after declarations
#175: FILE: mm/memhotplug.c:562:
+		int i;
+		p = kmap_atomic(newpage, KM_USER0);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#176: FILE: mm/memhotplug.c:563:
+		for(i = 0; i < PAGE_SIZE / sizeof(int); i++)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#180: FILE: mm/memhotplug.c:567:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#197: FILE: mm/memhotplug.c:619:
+		printk("flags: %lx -> %lx\n, %p, %p\n", saved_pflags,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#198: FILE: mm/memhotplug.c:620:
+		printk("flags: %lx -> %lx\n, %p, %p\n", saved_pflags,
+		    newpage->flags, page, newpage);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#209: FILE: mm/memhotplug.c:652:
+		BUG();

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000267677.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 8 warnings, 4 checks, 168 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000267677.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
