WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#43: FILE: drivers/infiniband/Kconfig:3:
+config INFINIBAND
+	tristate "InfiniBand support"
+	default n
+	---help---
+	  Core support for InfiniBand (IB).  Make sure to also select
+	  any protocols you wish to use as well as drivers for your
+	  InfiniBand hardware.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:DEPRECATED_VARIABLE: Use of EXTRA_CFLAGS is deprecated, please use `ccflags-y instead.
#59: FILE: drivers/infiniband/core/Makefile:1:
+EXTRA_CFLAGS += -Idrivers/infiniband/include

EXTRA_{A,C,CPP,LD}FLAGS are deprecated and should be replaced by the new
flags added via commit f77bf01425b1 ("kbuild: introduce ccflags-y,
asflags-y and ldflags-y").

The following conversion scheme maybe used::

  EXTRA_AFLAGS    ->  asflags-y
  EXTRA_CFLAGS    ->  ccflags-y
  EXTRA_CPPFLAGS  ->  cppflags-y
  EXTRA_LDFLAGS   ->  ldflags-y

See:

  1. https://lore.kernel.org/lkml/20070930191054.GA15876@uranus.ravnborg.org/
  2. https://lore.kernel.org/lkml/1313384834-24433-12-git-send-email-lacombar@gmail.com/
  3. https://www.kernel.org/doc/html/latest/kbuild/makefiles.html#compilation-flags

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#75: FILE: drivers/infiniband/core/cache.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#76: FILE: drivers/infiniband/core/cache.c:2:
+/*
+  This software is available to you under a choice of one of two

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#95: FILE: drivers/infiniband/core/cache.c:21:
+  $Id: cache.c 1257 2004-11-17 23:12:18Z roland $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:SIZEOF_PARENTHESIS: sizeof *tprops should be sizeof(*tprops)
#239: FILE: drivers/infiniband/core/cache.c:165:
+	tprops = kmalloc(sizeof *tprops, GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#245: FILE: drivers/infiniband/core/cache.c:171:
+		printk(KERN_WARNING "ib_query_port failed (%d) for %s\n",

WARNING:SIZEOF_PARENTHESIS: sizeof *pkey_cache should be sizeof(*pkey_cache)
#250: FILE: drivers/infiniband/core/cache.c:176:
+	pkey_cache = kmalloc(sizeof *pkey_cache + tprops->pkey_tbl_len *

WARNING:SIZEOF_PARENTHESIS: sizeof *pkey_cache->table should be sizeof(*pkey_cache->table)
#251: FILE: drivers/infiniband/core/cache.c:177:
+			     sizeof *pkey_cache->table, GFP_KERNEL);

WARNING:SIZEOF_PARENTHESIS: sizeof *gid_cache should be sizeof(*gid_cache)
#258: FILE: drivers/infiniband/core/cache.c:184:
+	gid_cache = kmalloc(sizeof *gid_cache + tprops->gid_tbl_len *

WARNING:SIZEOF_PARENTHESIS: sizeof *gid_cache->table should be sizeof(*gid_cache->table)
#259: FILE: drivers/infiniband/core/cache.c:185:
+			    sizeof *gid_cache->table, GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#269: FILE: drivers/infiniband/core/cache.c:195:
+			printk(KERN_WARNING "ib_query_pkey failed (%d) for %s (index %d)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#278: FILE: drivers/infiniband/core/cache.c:204:
+			printk(KERN_WARNING "ib_query_gid failed (%d) for %s (index %d)\n",

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#285: FILE: drivers/infiniband/core/cache.c:211:
+	old_gid_cache  = device->cache.gid_cache [port - start_port(device)];

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#289: FILE: drivers/infiniband/core/cache.c:215:
+	rcu_assign_pointer(device->cache.gid_cache [port - start_port(device)],

WARNING:SIZEOF_PARENTHESIS: sizeof *work should be sizeof(*work)
#324: FILE: drivers/infiniband/core/cache.c:250:
+		work = kmalloc(sizeof *work, GFP_ATOMIC);

WARNING:SIZEOF_PARENTHESIS: sizeof *device->cache.pkey_cache should be sizeof(*device->cache.pkey_cache)
#339: FILE: drivers/infiniband/core/cache.c:265:
+		kmalloc(sizeof *device->cache.pkey_cache *

WARNING:SIZEOF_PARENTHESIS: sizeof *device->cache.pkey_cache should be sizeof(*device->cache.pkey_cache)
#342: FILE: drivers/infiniband/core/cache.c:268:
+		kmalloc(sizeof *device->cache.pkey_cache *

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#346: FILE: drivers/infiniband/core/cache.c:272:
+		printk(KERN_WARNING "Couldn't allocate cache "

WARNING:SPLIT_STRING: quoted string split across lines
#347: FILE: drivers/infiniband/core/cache.c:273:
+		printk(KERN_WARNING "Couldn't allocate cache "
+		       "for %s\n", device->name);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#353: FILE: drivers/infiniband/core/cache.c:279:
+		device->cache.gid_cache [p] = NULL;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#408: FILE: drivers/infiniband/core/cache.c:334:
+/*
+  Local Variables:

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#416: FILE: drivers/infiniband/core/core_priv.h:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#417: FILE: drivers/infiniband/core/core_priv.h:2:
+/*
+  This software is available to you under a choice of one of two

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#436: FILE: drivers/infiniband/core/core_priv.h:21:
+  $Id: core_priv.h 1179 2004-11-09 05:04:42Z roland $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#459: FILE: drivers/infiniband/core/core_priv.h:44:
+/*
+  Local Variables:

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#467: FILE: drivers/infiniband/core/device.c:1:
+/*

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#487: FILE: drivers/infiniband/core/device.c:21:
+ * $Id: device.c 1179 2004-11-09 05:04:42Z roland $

ERROR:POINTER_LOCATION: "foo *            bar" should be "foo *bar"
#507: FILE: drivers/infiniband/core/device.c:41:
+	void *            data;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SIZEOF_PARENTHESIS: sizeof mandatory_table should be sizeof(mandatory_table)
#551: FILE: drivers/infiniband/core/device.c:85:
+	for (i = 0; i < sizeof mandatory_table / sizeof mandatory_table[0]; ++i) {

CHECK:SPACING: No space is necessary after a cast
#552: FILE: drivers/infiniband/core/device.c:86:
+		if (!*(void **) ((void *) device + mandatory_table[i].offset)) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#553: FILE: drivers/infiniband/core/device.c:87:
+			printk(KERN_WARNING "Device %s is missing mandatory function %s\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#573: FILE: drivers/infiniband/core/device.c:107:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#581: FILE: drivers/infiniband/core/device.c:115:
+	inuse = (long *) get_zeroed_page(GFP_KERNEL);

WARNING:NAKED_SSCANF: unchecked sscanf return value
#586: FILE: drivers/infiniband/core/device.c:120:
+		if (!sscanf(device->name, name, &i))
+			continue;

WARNING:SIZEOF_PARENTHESIS: sizeof buf should be sizeof(buf)
#590: FILE: drivers/infiniband/core/device.c:124:
+		snprintf(buf, sizeof buf, name, i);

CHECK:SPACING: No space is necessary after a cast
#596: FILE: drivers/infiniband/core/device.c:130:
+	free_page((unsigned long) inuse);

WARNING:SIZEOF_PARENTHESIS: sizeof buf should be sizeof(buf)
#597: FILE: drivers/infiniband/core/device.c:131:
+	snprintf(buf, sizeof buf, name, i);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#602: FILE: drivers/infiniband/core/device.c:136:
+	strlcpy(name, buf, IB_DEVICE_NAME_MAX);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#610: FILE: drivers/infiniband/core/device.c:144:
+	BUG_ON(size < sizeof (struct ib_device));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#610: FILE: drivers/infiniband/core/device.c:144:
+	BUG_ON(size < sizeof (struct ib_device));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#629: FILE: drivers/infiniband/core/device.c:163:
+	BUG_ON(device->reg_state != IB_DEV_UNREGISTERED);

WARNING:SIZEOF_PARENTHESIS: sizeof *context should be sizeof(*context)
#640: FILE: drivers/infiniband/core/device.c:174:
+	context = kmalloc(sizeof *context, GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#642: FILE: drivers/infiniband/core/device.c:176:
+		printk(KERN_WARNING "Couldn't allocate client context for %s/%s\n",

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#642: FILE: drivers/infiniband/core/device.c:176:
+	if (!context) {
+		printk(KERN_WARNING "Couldn't allocate client context for %s/%s\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#681: FILE: drivers/infiniband/core/device.c:215:
+		printk(KERN_WARNING "Couldn't register device %s with driver model\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#803: FILE: drivers/infiniband/core/device.c:337:
+	printk(KERN_WARNING "No client context found for %s/%s\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#857: FILE: drivers/infiniband/core/device.c:391:
+int ib_query_port(struct ib_device *device, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#858: FILE: drivers/infiniband/core/device.c:392:
+^I^I  u8 port_num, $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#903: FILE: drivers/infiniband/core/device.c:437:
+		printk(KERN_WARNING "Couldn't create InfiniBand device class\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#907: FILE: drivers/infiniband/core/device.c:441:
+		printk(KERN_WARNING "Couldn't set up InfiniBand P_Key/GID cache\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#924: FILE: drivers/infiniband/core/device.c:458:
+/*
+  Local Variables:

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#932: FILE: drivers/infiniband/core/fmr_pool.c:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#933: FILE: drivers/infiniband/core/fmr_pool.c:2:
+/*
+  This software is available to you under a choice of one of two

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#952: FILE: drivers/infiniband/core/fmr_pool.c:21:
+  $Id: fmr_pool.c 1082 2004-10-27 20:32:50Z roland $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#974: FILE: drivers/infiniband/core/fmr_pool.c:43:
+/*
+  If an FMR is not in use, then the list member will point to either

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1002: FILE: drivers/infiniband/core/fmr_pool.c:71:
+	spinlock_t                pool_lock;

ERROR:POINTER_LOCATION: "foo *              bar" should be "foo *bar"
#1013: FILE: drivers/infiniband/core/fmr_pool.c:82:
+						   void *              arg);

CHECK:SPACING: No space is necessary after a cast
#1026: FILE: drivers/infiniband/core/fmr_pool.c:95:
+	return jhash_2words((u32) first_page,

CHECK:SPACING: No space is necessary after a cast
#1027: FILE: drivers/infiniband/core/fmr_pool.c:96:
+			    (u32) (first_page >> 32),

WARNING:SIZEOF_PARENTHESIS: sizeof *page_list should be sizeof(*page_list)
#1050: FILE: drivers/infiniband/core/fmr_pool.c:119:
+			    page_list_len * sizeof *page_list))

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#1071: FILE: drivers/infiniband/core/fmr_pool.c:140:
+		if (fmr->ref_count !=0) {
 		                   ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1072: FILE: drivers/infiniband/core/fmr_pool.c:141:
+			printk(KERN_WARNING "Unmapping FMR 0x%08x with ref count %d",

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1084: FILE: drivers/infiniband/core/fmr_pool.c:153:
+	if (list_empty(&unmap_list)) {
+		return;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1090: FILE: drivers/infiniband/core/fmr_pool.c:159:
+		printk(KERN_WARNING "ib_unmap_fmr returned %d", ret);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1133: FILE: drivers/infiniband/core/fmr_pool.c:202:
+	if (!params) {
+		return -EINVAL;
+	}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1142: FILE: drivers/infiniband/core/fmr_pool.c:211:
+		printk(KERN_WARNING "Device %s does not support fast memory regions",

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1144: FILE: drivers/infiniband/core/fmr_pool.c:213:
+		return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:SIZEOF_PARENTHESIS: sizeof *pool should be sizeof(*pool)
#1147: FILE: drivers/infiniband/core/fmr_pool.c:216:
+	pool = kmalloc(sizeof *pool, GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1149: FILE: drivers/infiniband/core/fmr_pool.c:218:
+		printk(KERN_WARNING "couldn't allocate pool struct");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1149: FILE: drivers/infiniband/core/fmr_pool.c:218:
+	if (!pool) {
+		printk(KERN_WARNING "couldn't allocate pool struct");

WARNING:SIZEOF_PARENTHESIS: sizeof *pool->cache_bucket should be sizeof(*pool->cache_bucket)
#1163: FILE: drivers/infiniband/core/fmr_pool.c:232:
+			kmalloc(IB_FMR_HASH_SIZE * sizeof *pool->cache_bucket,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1166: FILE: drivers/infiniband/core/fmr_pool.c:235:
+			printk(KERN_WARNING "Failed to allocate cache in pool");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1189: FILE: drivers/infiniband/core/fmr_pool.c:258:
+		printk(KERN_WARNING "couldn't start cleanup thread");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1203: FILE: drivers/infiniband/core/fmr_pool.c:272:
+			fmr = kmalloc(sizeof *fmr + params->max_pages_per_fmr * sizeof (u64),

WARNING:SIZEOF_PARENTHESIS: sizeof *fmr should be sizeof(*fmr)
#1203: FILE: drivers/infiniband/core/fmr_pool.c:272:
+			fmr = kmalloc(sizeof *fmr + params->max_pages_per_fmr * sizeof (u64),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1206: FILE: drivers/infiniband/core/fmr_pool.c:275:
+				printk(KERN_WARNING "failed to allocate fmr struct for FMR %d", i);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1206: FILE: drivers/infiniband/core/fmr_pool.c:275:
+			if (!fmr) {
+				printk(KERN_WARNING "failed to allocate fmr struct for FMR %d", i);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1217: FILE: drivers/infiniband/core/fmr_pool.c:286:
+				printk(KERN_WARNING "fmr_create failed for FMR %d", i);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1262: FILE: drivers/infiniband/core/fmr_pool.c:331:
+		printk(KERN_WARNING "pool still has %d regions registered",

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1278: FILE: drivers/infiniband/core/fmr_pool.c:347:
+	/* It's OK if someone else bumps req_ser again here -- we'll
+	   just wait a little longer. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1278: FILE: drivers/infiniband/core/fmr_pool.c:347:
+	   just wait a little longer. */

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1313: FILE: drivers/infiniband/core/fmr_pool.c:382:
+		if (fmr->ref_count == 1) {
+			list_del(&fmr->list);
+		}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1340: FILE: drivers/infiniband/core/fmr_pool.c:409:
+		printk(KERN_WARNING "fmr_map returns %d",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1386: FILE: drivers/infiniband/core/fmr_pool.c:455:
+		printk(KERN_WARNING "FMR %p has ref count %d < 0",

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1397: FILE: drivers/infiniband/core/fmr_pool.c:466:
+/*
+  Local Variables:

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1405: FILE: drivers/infiniband/core/packer.c:1:
+/*

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1425: FILE: drivers/infiniband/core/packer.c:21:
+ * $Id: packer.c 1027 2004-10-20 03:59:00Z roland $

CHECK:SPACING: No space is necessary after a cast
#1433: FILE: drivers/infiniband/core/packer.c:29:
+	case 1: return                *(u8  *) (structure + offset);

CHECK:SPACING: No space is necessary after a cast
#1434: FILE: drivers/infiniband/core/packer.c:30:
+	case 2: return be16_to_cpup((__be16 *) (structure + offset));

CHECK:SPACING: No space is necessary after a cast
#1435: FILE: drivers/infiniband/core/packer.c:31:
+	case 4: return be32_to_cpup((__be32 *) (structure + offset));

CHECK:SPACING: No space is necessary after a cast
#1436: FILE: drivers/infiniband/core/packer.c:32:
+	case 8: return be64_to_cpup((__be64 *) (structure + offset));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1438: FILE: drivers/infiniband/core/packer.c:34:
+		printk(KERN_WARNING "Field size %d bits not handled\n", size * 8);

CHECK:SPACING: No space is necessary after a cast
#1466: FILE: drivers/infiniband/core/packer.c:62:
+			addr = (__be32 *) buf + desc[i].offset_words;

CHECK:SPACING: No space is necessary after a cast
#1483: FILE: drivers/infiniband/core/packer.c:79:
+			addr = (__be64 *) ((__be32 *) buf + desc[i].offset_words);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1488: FILE: drivers/infiniband/core/packer.c:84:
+				printk(KERN_WARNING "Structure field %s of size %d "

WARNING:SPLIT_STRING: quoted string split across lines
#1489: FILE: drivers/infiniband/core/packer.c:85:
+				printk(KERN_WARNING "Structure field %s of size %d "
+				       "bits is not byte-aligned\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1494: FILE: drivers/infiniband/core/packer.c:90:
+^I^I^I^Imemcpy(buf + desc[i].offset_words * 4 + $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1499: FILE: drivers/infiniband/core/packer.c:95:
+^I^I^I^Imemset(buf + desc[i].offset_words * 4 + $

CHECK:SPACING: No space is necessary after a cast
#1511: FILE: drivers/infiniband/core/packer.c:107:
+	case 8:  *(    u8 *) (structure + offset) = val; break;

ERROR:SPACING: space prohibited after that open parenthesis '('
#1511: FILE: drivers/infiniband/core/packer.c:107:
+	case 8:  *(    u8 *) (structure + offset) = val; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1511: FILE: drivers/infiniband/core/packer.c:107:
+	case 8:  *(    u8 *) (structure + offset) = val; break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:SPACING: No space is necessary after a cast
#1512: FILE: drivers/infiniband/core/packer.c:108:
+	case 16: *(__be16 *) (structure + offset) = cpu_to_be16(val); break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1512: FILE: drivers/infiniband/core/packer.c:108:
+	case 16: *(__be16 *) (structure + offset) = cpu_to_be16(val); break;

CHECK:SPACING: No space is necessary after a cast
#1513: FILE: drivers/infiniband/core/packer.c:109:
+	case 32: *(__be32 *) (structure + offset) = cpu_to_be32(val); break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1513: FILE: drivers/infiniband/core/packer.c:109:
+	case 32: *(__be32 *) (structure + offset) = cpu_to_be32(val); break;

CHECK:SPACING: No space is necessary after a cast
#1514: FILE: drivers/infiniband/core/packer.c:110:
+	case 64: *(__be64 *) (structure + offset) = cpu_to_be64(val); break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1514: FILE: drivers/infiniband/core/packer.c:110:
+	case 64: *(__be64 *) (structure + offset) = cpu_to_be64(val); break;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1516: FILE: drivers/infiniband/core/packer.c:112:
+		printk(KERN_WARNING "Field size %d bits not handled\n", size * 8);

CHECK:SPACING: No space is necessary after a cast
#1539: FILE: drivers/infiniband/core/packer.c:135:
+			addr = (__be32 *) buf + desc[i].offset_words;

CHECK:SPACING: No space is necessary after a cast
#1553: FILE: drivers/infiniband/core/packer.c:149:
+			addr = (__be64 *) buf + desc[i].offset_words;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1562: FILE: drivers/infiniband/core/packer.c:158:
+				printk(KERN_WARNING "Structure field %s of size %d "

WARNING:SPLIT_STRING: quoted string split across lines
#1563: FILE: drivers/infiniband/core/packer.c:159:
+				printk(KERN_WARNING "Structure field %s of size %d "
+				       "bits is not byte-aligned\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1577: FILE: drivers/infiniband/core/packer.c:173:
+/*
+  Local Variables:

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1585: FILE: drivers/infiniband/core/sysfs.c:1:
+/*

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1605: FILE: drivers/infiniband/core/sysfs.c:21:
+ * $Id: sysfs.c 1257 2004-11-17 23:12:18Z roland $

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ib_port *' should also have an identifier name
#1624: FILE: drivers/infiniband/core/sysfs.c:40:
+	ssize_t (*show)(struct ib_port *, struct port_attribute *, char *buf);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct port_attribute *' should also have an identifier name
#1624: FILE: drivers/infiniband/core/sysfs.c:40:
+	ssize_t (*show)(struct ib_port *, struct port_attribute *, char *buf);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ib_port *' should also have an identifier name
#1625: FILE: drivers/infiniband/core/sysfs.c:41:
+	ssize_t (*store)(struct ib_port *, struct port_attribute *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct port_attribute *' should also have an identifier name
#1625: FILE: drivers/infiniband/core/sysfs.c:41:
+	ssize_t (*store)(struct ib_port *, struct port_attribute *,

WARNING:CONST_STRUCT: struct sysfs_ops should normally be const
#1653: FILE: drivers/infiniband/core/sysfs.c:69:
+static struct sysfs_ops port_sysfs_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#1663: FILE: drivers/infiniband/core/sysfs.c:79:
+	static const char *state_name[] = {

CHECK:SPACING: No space is necessary after a cast
#1777: FILE: drivers/infiniband/core/sysfs.c:193:
+		       be16_to_cpu(((u16 *) gid.raw)[0]),

CHECK:SPACING: No space is necessary after a cast
#1778: FILE: drivers/infiniband/core/sysfs.c:194:
+		       be16_to_cpu(((u16 *) gid.raw)[1]),

CHECK:SPACING: No space is necessary after a cast
#1779: FILE: drivers/infiniband/core/sysfs.c:195:
+		       be16_to_cpu(((u16 *) gid.raw)[2]),

CHECK:SPACING: No space is necessary after a cast
#1780: FILE: drivers/infiniband/core/sysfs.c:196:
+		       be16_to_cpu(((u16 *) gid.raw)[3]),

CHECK:SPACING: No space is necessary after a cast
#1781: FILE: drivers/infiniband/core/sysfs.c:197:
+		       be16_to_cpu(((u16 *) gid.raw)[4]),

CHECK:SPACING: No space is necessary after a cast
#1782: FILE: drivers/infiniband/core/sysfs.c:198:
+		       be16_to_cpu(((u16 *) gid.raw)[5]),

CHECK:SPACING: No space is necessary after a cast
#1783: FILE: drivers/infiniband/core/sysfs.c:199:
+		       be16_to_cpu(((u16 *) gid.raw)[6]),

CHECK:SPACING: No space is necessary after a cast
#1784: FILE: drivers/infiniband/core/sysfs.c:200:
+		       be16_to_cpu(((u16 *) gid.raw)[7]));

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1804: FILE: drivers/infiniband/core/sysfs.c:220:
+	.attr  = __ATTR(_name, S_IRUGO, show_pma_counter, NULL),	\

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SIZEOF_PARENTHESIS: sizeof *in_mad should be sizeof(*in_mad)
#1822: FILE: drivers/infiniband/core/sysfs.c:238:
+	in_mad  = kmalloc(sizeof *in_mad, GFP_KERNEL);

WARNING:SIZEOF_PARENTHESIS: sizeof *in_mad should be sizeof(*in_mad)
#1823: FILE: drivers/infiniband/core/sysfs.c:239:
+	out_mad = kmalloc(sizeof *in_mad, GFP_KERNEL);

WARNING:SIZEOF_PARENTHESIS: sizeof *in_mad should be sizeof(*in_mad)
#1829: FILE: drivers/infiniband/core/sysfs.c:245:
+	memset(in_mad, 0, sizeof *in_mad);

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1873: FILE: drivers/infiniband/core/sysfs.c:289:
+static PORT_PMA_ATTR(symbol_error		    ,  0, 16,  32);
                                  		    ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1874: FILE: drivers/infiniband/core/sysfs.c:290:
+static PORT_PMA_ATTR(link_error_recovery	    ,  1,  8,  48);
                                         	    ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1875: FILE: drivers/infiniband/core/sysfs.c:291:
+static PORT_PMA_ATTR(link_downed		    ,  2,  8,  56);
                                 		    ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1876: FILE: drivers/infiniband/core/sysfs.c:292:
+static PORT_PMA_ATTR(port_rcv_errors		    ,  3, 16,  64);
                                     		    ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1878: FILE: drivers/infiniband/core/sysfs.c:294:
+static PORT_PMA_ATTR(port_rcv_switch_relay_errors   ,  5, 16,  96);
                                                     ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1879: FILE: drivers/infiniband/core/sysfs.c:295:
+static PORT_PMA_ATTR(port_xmit_discards		    ,  6, 16, 112);
                                        		    ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1880: FILE: drivers/infiniband/core/sysfs.c:296:
+static PORT_PMA_ATTR(port_xmit_constraint_errors    ,  7,  8, 128);
                                                     ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1881: FILE: drivers/infiniband/core/sysfs.c:297:
+static PORT_PMA_ATTR(port_rcv_constraint_errors	    ,  8,  8, 136);
                                                	    ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1882: FILE: drivers/infiniband/core/sysfs.c:298:
+static PORT_PMA_ATTR(local_link_integrity_errors    ,  9,  4, 152);
                                                     ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1884: FILE: drivers/infiniband/core/sysfs.c:300:
+static PORT_PMA_ATTR(VL15_dropped		    , 11, 16, 176);
                                  		    ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1885: FILE: drivers/infiniband/core/sysfs.c:301:
+static PORT_PMA_ATTR(port_xmit_data		    , 12, 32, 192);
                                    		    ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1886: FILE: drivers/infiniband/core/sysfs.c:302:
+static PORT_PMA_ATTR(port_rcv_data		    , 13, 32, 224);
                                   		    ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1887: FILE: drivers/infiniband/core/sysfs.c:303:
+static PORT_PMA_ATTR(port_xmit_packets		    , 14, 32, 256);
                                       		    ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1888: FILE: drivers/infiniband/core/sysfs.c:304:
+static PORT_PMA_ATTR(port_rcv_packets		    , 15, 32, 288);
                                      		    ^

CHECK:SPACING: No space is necessary after a cast
#1978: FILE: drivers/infiniband/core/sysfs.c:394:
+		(struct port_table_attribute ***) attr;

WARNING:SIZEOF_PARENTHESIS: sizeof *tab_attr should be sizeof(*tab_attr)
#1982: FILE: drivers/infiniband/core/sysfs.c:398:
+	*tab_attr = kmalloc((1 + len) * sizeof *tab_attr, GFP_KERNEL);

WARNING:SIZEOF_PARENTHESIS: sizeof *tab_attr should be sizeof(*tab_attr)
#1986: FILE: drivers/infiniband/core/sysfs.c:402:
+	memset(*tab_attr, 0, (1 + len) * sizeof *tab_attr);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#2006: FILE: drivers/infiniband/core/sysfs.c:422:
+		(*tab_attr)[i]->attr.attr.mode  = S_IRUGO;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2010: FILE: drivers/infiniband/core/sysfs.c:426:
+^I}^I$

WARNING:SIZEOF_PARENTHESIS: sizeof *p should be sizeof(*p)
#2037: FILE: drivers/infiniband/core/sysfs.c:453:
+	p = kmalloc(sizeof *p, GFP_KERNEL);

WARNING:SIZEOF_PARENTHESIS: sizeof *p should be sizeof(*p)
#2040: FILE: drivers/infiniband/core/sysfs.c:456:
+	memset(p, 0, sizeof *p);

CHECK:SPACING: No space is necessary after a cast
#2131: FILE: drivers/infiniband/core/sysfs.c:547:
+		       be16_to_cpu(((u16 *) &attr.sys_image_guid)[0]),

CHECK:SPACING: No space is necessary after a cast
#2132: FILE: drivers/infiniband/core/sysfs.c:548:
+		       be16_to_cpu(((u16 *) &attr.sys_image_guid)[1]),

CHECK:SPACING: No space is necessary after a cast
#2133: FILE: drivers/infiniband/core/sysfs.c:549:
+		       be16_to_cpu(((u16 *) &attr.sys_image_guid)[2]),

CHECK:SPACING: No space is necessary after a cast
#2134: FILE: drivers/infiniband/core/sysfs.c:550:
+		       be16_to_cpu(((u16 *) &attr.sys_image_guid)[3]));

CHECK:SPACING: No space is necessary after a cast
#2148: FILE: drivers/infiniband/core/sysfs.c:564:
+		       be16_to_cpu(((u16 *) &attr.node_guid)[0]),

CHECK:SPACING: No space is necessary after a cast
#2149: FILE: drivers/infiniband/core/sysfs.c:565:
+		       be16_to_cpu(((u16 *) &attr.node_guid)[1]),

CHECK:SPACING: No space is necessary after a cast
#2150: FILE: drivers/infiniband/core/sysfs.c:566:
+		       be16_to_cpu(((u16 *) &attr.node_guid)[2]),

CHECK:SPACING: No space is necessary after a cast
#2151: FILE: drivers/infiniband/core/sysfs.c:567:
+		       be16_to_cpu(((u16 *) &attr.node_guid)[3]));

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#2154: FILE: drivers/infiniband/core/sysfs.c:570:
+static CLASS_DEVICE_ATTR(sys_image_guid, S_IRUGO, show_sys_image_guid, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#2155: FILE: drivers/infiniband/core/sysfs.c:571:
+static CLASS_DEVICE_ATTR(node_guid, S_IRUGO, show_node_guid, NULL);

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#2176: FILE: drivers/infiniband/core/sysfs.c:592:
+	strlcpy(class_dev->class_id, device->name, BUS_ID_SIZE);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2272: FILE: drivers/infiniband/core/ud_header.c:1:
+/*

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#2292: FILE: drivers/infiniband/core/ud_header.c:21:
+ * $Id: ud_header.c 1027 2004-10-20 03:59:00Z roland $

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'field' - possible side-effects?
#2299: FILE: drivers/infiniband/core/ud_header.c:28:
+#define STRUCT_FIELD(header, field) \
+	.struct_offset_bytes = offsetof(struct ib_unpacked_ ## header, field),      \
+	.struct_size_bytes   = sizeof ((struct ib_unpacked_ ## header *) 0)->field, \
+	.field_name          = #header ":" #field

CHECK:SPACING: No space is necessary after a cast
#2301: FILE: drivers/infiniband/core/ud_header.c:30:
+	.struct_size_bytes   = sizeof ((struct ib_unpacked_ ## header *) 0)->field, \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2301: FILE: drivers/infiniband/core/ud_header.c:30:
+	.struct_size_bytes   = sizeof ((struct ib_unpacked_ ## header *) 0)->field, \

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2440: FILE: drivers/infiniband/core/ud_header.c:169:
+void ib_ud_header_init(int     ^I^I    payload_bytes,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2441: FILE: drivers/infiniband/core/ud_header.c:170:
+^I^I       int    ^I^I    grh_present,$

WARNING:SIZEOF_PARENTHESIS: sizeof *header should be sizeof(*header)
#2446: FILE: drivers/infiniband/core/ud_header.c:175:
+	memset(header, 0, sizeof *header);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#2452: FILE: drivers/infiniband/core/ud_header.c:181:
+	if (grh_present) {
+		header_len += IB_GRH_BYTES;
+	}

WARNING:SIZEOF_PARENTHESIS: sizeof header->immediate_data should be sizeof(header->immediate_data)
#2515: FILE: drivers/infiniband/core/ud_header.c:244:
+		memcpy(buf + len, &header->immediate_data, sizeof header->immediate_data);

WARNING:SIZEOF_PARENTHESIS: sizeof header->immediate_data should be sizeof(header->immediate_data)
#2516: FILE: drivers/infiniband/core/ud_header.c:245:
+		len += sizeof header->immediate_data;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2531: FILE: drivers/infiniband/core/ud_header.c:260:
+		printk(KERN_WARNING "Invalid LRH.link_version %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2548: FILE: drivers/infiniband/core/ud_header.c:277:
+			printk(KERN_WARNING "Invalid GRH.ip_version %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2553: FILE: drivers/infiniband/core/ud_header.c:282:
+			printk(KERN_WARNING "Invalid GRH.next_header 0x%02x\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2560: FILE: drivers/infiniband/core/ud_header.c:289:
+		printk(KERN_WARNING "Invalid LRH.link_next_header %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2577: FILE: drivers/infiniband/core/ud_header.c:306:
+		printk(KERN_WARNING "Invalid BTH.opcode 0x%02x\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2583: FILE: drivers/infiniband/core/ud_header.c:312:
+		printk(KERN_WARNING "Invalid BTH.transport_header_version %d\n",

WARNING:SIZEOF_PARENTHESIS: sizeof header->immediate_data should be sizeof(header->immediate_data)
#2593: FILE: drivers/infiniband/core/ud_header.c:322:
+		memcpy(&header->immediate_data, buf, sizeof header->immediate_data);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2600: FILE: drivers/infiniband/core/ud_header.c:329:
+/*
+  Local Variables:

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2608: FILE: drivers/infiniband/core/verbs.c:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2609: FILE: drivers/infiniband/core/verbs.c:2:
+/*
+  This software is available to you under a choice of one of two

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#2686: FILE: drivers/infiniband/core/verbs.c:79:
+		-ENOSYS;

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#2694: FILE: drivers/infiniband/core/verbs.c:87:
+		-ENOSYS;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2722: FILE: drivers/infiniband/core/verbs.c:115:
+^I^Iqp->device     ^I  = pd->device;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2723: FILE: drivers/infiniband/core/verbs.c:116:
+^I^Iqp->pd         ^I  = pd;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2724: FILE: drivers/infiniband/core/verbs.c:117:
+^I^Iqp->send_cq    ^I  = qp_init_attr->send_cq;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2725: FILE: drivers/infiniband/core/verbs.c:118:
+^I^Iqp->recv_cq    ^I  = qp_init_attr->recv_cq;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2726: FILE: drivers/infiniband/core/verbs.c:119:
+^I^Iqp->srq^I       ^I  = qp_init_attr->srq;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2753: FILE: drivers/infiniband/core/verbs.c:146:
+^Ireturn qp->device->query_qp ? $

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#2755: FILE: drivers/infiniband/core/verbs.c:148:
+		-ENOSYS;

ERROR:CODE_INDENT: code indent should use tabs where possible
#2817: FILE: drivers/infiniband/core/verbs.c:210:
+                 int           cqe)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2817: FILE: drivers/infiniband/core/verbs.c:210:
+                 int           cqe)$

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#2822: FILE: drivers/infiniband/core/verbs.c:215:
+		return -ENOSYS;

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#2885: FILE: drivers/infiniband/core/verbs.c:278:
+		return -ENOSYS;

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#2908: FILE: drivers/infiniband/core/verbs.c:301:
+		mr->device->query_mr(mr, mr_attr) : -ENOSYS;

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#2936: FILE: drivers/infiniband/core/verbs.c:329:
+		return ERR_PTR(-ENOSYS);

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#2972: FILE: drivers/infiniband/core/verbs.c:365:
+		return ERR_PTR(-ENOSYS);

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#3017: FILE: drivers/infiniband/core/verbs.c:410:
+		-ENOSYS;

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#3025: FILE: drivers/infiniband/core/verbs.c:418:
+		-ENOSYS;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000228295.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 32 errors, 135 warnings, 38 checks, 2957 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000228295.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
