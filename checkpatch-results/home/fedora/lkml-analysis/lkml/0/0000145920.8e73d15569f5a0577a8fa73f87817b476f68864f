WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
when dealing with a BIOS that make assumptions about how the system is setup.

WARNING:TYPO_SPELLING: 'interrups' may be misspelled - perhaps 'interrupts'?
#39: 
io_apic that delivers isa interrups is always known to the kernel
                          ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mp_irqs[i].mpc_irqtype == type'
#85: FILE: arch/i386/kernel/io_apic.c:771:
+		if ((mp_bus_id_to_type[lbus] == MP_BUS_ISA ||
+		     mp_bus_id_to_type[lbus] == MP_BUS_EISA ||
+		     mp_bus_id_to_type[lbus] == MP_BUS_MCA ||
+		     mp_bus_id_to_type[lbus] == MP_BUS_NEC98
+		    ) &&
+		    (mp_irqs[i].mpc_irqtype == type) &&
+		    (mp_irqs[i].mpc_srcbusirq == irq))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mp_irqs[i].mpc_srcbusirq == irq'
#85: FILE: arch/i386/kernel/io_apic.c:771:
+		if ((mp_bus_id_to_type[lbus] == MP_BUS_ISA ||
+		     mp_bus_id_to_type[lbus] == MP_BUS_EISA ||
+		     mp_bus_id_to_type[lbus] == MP_BUS_MCA ||
+		     mp_bus_id_to_type[lbus] == MP_BUS_NEC98
+		    ) &&
+		    (mp_irqs[i].mpc_irqtype == type) &&
+		    (mp_irqs[i].mpc_srcbusirq == irq))

WARNING:LINE_SPACING: Missing a blank line after declarations
#96: FILE: arch/i386/kernel/io_apic.c:782:
+		int apic;
+		for(apic = 0; apic < nr_ioapics; apic++) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#96: FILE: arch/i386/kernel/io_apic.c:782:
+		for(apic = 0; apic < nr_ioapics; apic++) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#97: FILE: arch/i386/kernel/io_apic.c:783:
+^I^I^Iif (mp_ioapics[apic].mpc_apicid == mp_irqs[i].mpc_dstapic) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <setup_ExtINT_IRQ0_pin>
#113: FILE: arch/i386/kernel/io_apic.c:1286:
+static void __init setup_ExtINT_IRQ0_pin(unsigned int apic, unsigned int pin, int vector)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#123: FILE: arch/i386/kernel/io_apic.c:1320:
+	io_apic_write(apic, 0x11+2*pin, *(((int *)&entry)+1));
 	                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#123: FILE: arch/i386/kernel/io_apic.c:1320:
+	io_apic_write(apic, 0x11+2*pin, *(((int *)&entry)+1));
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#123: FILE: arch/i386/kernel/io_apic.c:1320:
+	io_apic_write(apic, 0x11+2*pin, *(((int *)&entry)+1));
 	                                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#124: FILE: arch/i386/kernel/io_apic.c:1321:
+	io_apic_write(apic, 0x10+2*pin, *(((int *)&entry)+0));
 	                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#124: FILE: arch/i386/kernel/io_apic.c:1321:
+	io_apic_write(apic, 0x10+2*pin, *(((int *)&entry)+0));
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#124: FILE: arch/i386/kernel/io_apic.c:1321:
+	io_apic_write(apic, 0x10+2*pin, *(((int *)&entry)+0));
 	                                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#149: FILE: arch/i386/kernel/io_apic.c:1647:
+		nr_ioapic_registers[apic] = reg_01.bits.entries+1;
 		                                               ^

ERROR:SPACING: space required before the open parenthesis '('
#151: FILE: arch/i386/kernel/io_apic.c:1649:
+	for(apic = 0; apic < nr_ioapics; apic++) {

WARNING:TYPO_SPELLING: 'ExtINT' may be misspelled - perhaps 'Extinct'?
#153: FILE: arch/i386/kernel/io_apic.c:1651:
+		/* See if any of the pins is in ExtINT mode */
 		                                ^^^^^^

ERROR:SPACING: space required before the open parenthesis '('
#154: FILE: arch/i386/kernel/io_apic.c:1652:
+		for(pin = 0; pin < nr_ioapic_registers[i]; pin++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#156: FILE: arch/i386/kernel/io_apic.c:1654:
+			struct IO_APIC_route_entry entry;
+			spin_lock_irqsave(&ioapic_lock, flags);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#161: FILE: arch/i386/kernel/io_apic.c:1659:
+
+

WARNING:TYPO_SPELLING: 'ExtInt' may be misspelled - perhaps 'Extinct'?
#162: FILE: arch/i386/kernel/io_apic.c:1660:
+			/* If the interrupt line is enabled and in ExtInt mode 
 			                                           ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#162: FILE: arch/i386/kernel/io_apic.c:1660:
+^I^I^I/* If the interrupt line is enabled and in ExtInt mode $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'entry.mask == 0'
#165: FILE: arch/i386/kernel/io_apic.c:1663:
+			if ((entry.mask == 0) && (entry.delivery_mode == dest_ExtINT)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'entry.delivery_mode == dest_ExtINT'
#165: FILE: arch/i386/kernel/io_apic.c:1663:
+			if ((entry.mask == 0) && (entry.delivery_mode == dest_ExtINT)) {

CHECK:CAMELCASE: Avoid CamelCase: <dest_ExtINT>
#165: FILE: arch/i386/kernel/io_apic.c:1663:
+			if ((entry.mask == 0) && (entry.delivery_mode == dest_ExtINT)) {

WARNING:TYPO_SPELLING: 'ExtINT' may be misspelled - perhaps 'Extinct'?
#173: FILE: arch/i386/kernel/io_apic.c:1671:
+	/* Look to see what if the MP table has reported the ExtINT */
 	                                                     ^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <mp_ExtINT>
#178: FILE: arch/i386/kernel/io_apic.c:1676:
+	i8259_pin  = find_isa_irq_pin(0, mp_ExtINT);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i8259_pin >= 0'
#181: FILE: arch/i386/kernel/io_apic.c:1679:
+	if ((ioapic_i8259.pin == -1) && (i8259_pin >= 0)) {

WARNING:TYPO_SPELLING: 'ExtINT' may be misspelled - perhaps 'Extinct'?
#182: FILE: arch/i386/kernel/io_apic.c:1680:
+		printk(KERN_WARNING "ExtINT not setup in hardware but reported by MP table\n");
 		                     ^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#182: FILE: arch/i386/kernel/io_apic.c:1680:
+		printk(KERN_WARNING "ExtINT not setup in hardware but reported by MP table\n");

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#187: FILE: arch/i386/kernel/io_apic.c:1685:
+	if (((ioapic_i8259.apic != i8259_apic) || (ioapic_i8259.pin != i8259_pin)) &&
+		(i8259_pin >= 0) && (ioapic_i8259.pin >= 0))
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ioapic_i8259.apic != i8259_apic'
#187: FILE: arch/i386/kernel/io_apic.c:1685:
+	if (((ioapic_i8259.apic != i8259_apic) || (ioapic_i8259.pin != i8259_pin)) &&
+		(i8259_pin >= 0) && (ioapic_i8259.pin >= 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ioapic_i8259.pin != i8259_pin'
#187: FILE: arch/i386/kernel/io_apic.c:1685:
+	if (((ioapic_i8259.apic != i8259_apic) || (ioapic_i8259.pin != i8259_pin)) &&
+		(i8259_pin >= 0) && (ioapic_i8259.pin >= 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i8259_pin >= 0'
#187: FILE: arch/i386/kernel/io_apic.c:1685:
+	if (((ioapic_i8259.apic != i8259_apic) || (ioapic_i8259.pin != i8259_pin)) &&
+		(i8259_pin >= 0) && (ioapic_i8259.pin >= 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ioapic_i8259.pin >= 0'
#187: FILE: arch/i386/kernel/io_apic.c:1685:
+	if (((ioapic_i8259.apic != i8259_apic) || (ioapic_i8259.pin != i8259_pin)) &&
+		(i8259_pin >= 0) && (ioapic_i8259.pin >= 0))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#188: FILE: arch/i386/kernel/io_apic.c:1686:
+	if (((ioapic_i8259.apic != i8259_apic) || (ioapic_i8259.pin != i8259_pin)) &&
+		(i8259_pin >= 0) && (ioapic_i8259.pin >= 0))

WARNING:TYPO_SPELLING: 'ExtINT' may be misspelled - perhaps 'Extinct'?
#190: FILE: arch/i386/kernel/io_apic.c:1688:
+		printk(KERN_WARNING "ExtINT in hardware and MP table differ\n");
 		                     ^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#190: FILE: arch/i386/kernel/io_apic.c:1688:
+		printk(KERN_WARNING "ExtINT in hardware and MP table differ\n");

WARNING:TYPO_SPELLING: 'ExtInt' may be misspelled - perhaps 'Extinct'?
#217: FILE: arch/i386/kernel/io_apic.c:1723:
+		entry.delivery_mode   = dest_ExtINT; /* ExtInt */
 		                                        ^^^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#227: FILE: arch/i386/kernel/io_apic.c:1732:
+		io_apic_write(ioapic_i8259.apic, 0x11+2*ioapic_i8259.pin,
 		                                     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#227: FILE: arch/i386/kernel/io_apic.c:1732:
+		io_apic_write(ioapic_i8259.apic, 0x11+2*ioapic_i8259.pin,
 		                                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#228: FILE: arch/i386/kernel/io_apic.c:1733:
+		io_apic_write(ioapic_i8259.apic, 0x11+2*ioapic_i8259.pin,
+			*(((int *)&entry)+1));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#228: FILE: arch/i386/kernel/io_apic.c:1733:
+			*(((int *)&entry)+1));
 			                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#229: FILE: arch/i386/kernel/io_apic.c:1734:
+		io_apic_write(ioapic_i8259.apic, 0x10+2*ioapic_i8259.pin,
 		                                     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#229: FILE: arch/i386/kernel/io_apic.c:1734:
+		io_apic_write(ioapic_i8259.apic, 0x10+2*ioapic_i8259.pin,
 		                                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#230: FILE: arch/i386/kernel/io_apic.c:1735:
+		io_apic_write(ioapic_i8259.apic, 0x10+2*ioapic_i8259.pin,
+			*(((int *)&entry)+0));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#230: FILE: arch/i386/kernel/io_apic.c:1735:
+			*(((int *)&entry)+0));
 			                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#312: FILE: arch/i386/kernel/io_apic.c:2277:
+^Iprintk(KERN_INFO "..TIMER: vector=0x%02X apic1=%d pin1=%d apic2=%d pin2=%d\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#312: FILE: arch/i386/kernel/io_apic.c:2277:
+	printk(KERN_INFO "..TIMER: vector=0x%02X apic1=%d pin1=%d apic2=%d pin2=%d\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#313: FILE: arch/i386/kernel/io_apic.c:2278:
+	printk(KERN_INFO "..TIMER: vector=0x%02X apic1=%d pin1=%d apic2=%d pin2=%d\n", 
+		vector, apic1, pin1, apic2, pin2);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000145920.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 13 warnings, 30 checks, 282 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000145920.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
