WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#87: FILE: drivers/pci/hotplug/acpiphp_ibm.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#107: FILE: drivers/pci/hotplug/acpiphp_ibm.c:21:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#108: FILE: drivers/pci/hotplug/acpiphp_ibm.c:22:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#120: FILE: drivers/pci/hotplug/acpiphp_ibm.c:34:
+#include <asm/uaccess.h>

ERROR:NON_OCTAL_PERMISSIONS: Use 4 digit octal (0777) not decimal permissions
#136: FILE: drivers/pci/hotplug/acpiphp_ibm.c:50:
+module_param(debug, bool, 644);
Permission bits should use 4 digit octal permissions (like 0700 or 0444).
Avoid using any other base like decimal.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#144: FILE: drivers/pci/hotplug/acpiphp_ibm.c:58:
+		printk(KERN_DEBUG "%s: " format,	\

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#145: FILE: drivers/pci/hotplug/acpiphp_ibm.c:59:
+				MY_NAME , ## arg);	\
 				        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#193: FILE: drivers/pci/hotplug/acpiphp_ibm.c:107:
+static ssize_t ibm_read_apci_table(struct kobject *kobj,
+		char *buffer, loff_t pos, size_t size);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#205: FILE: drivers/pci/hotplug/acpiphp_ibm.c:119:
+		    .mode = S_IRUGO,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#210: FILE: drivers/pci/hotplug/acpiphp_ibm.c:124:
+static struct acpiphp_attention_info ibm_attention_info = $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#210: FILE: drivers/pci/hotplug/acpiphp_ibm.c:124:
+};
+static struct acpiphp_attention_info ibm_attention_info = 

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#211: FILE: drivers/pci/hotplug/acpiphp_ibm.c:125:
+static struct acpiphp_attention_info ibm_attention_info = 
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#217: FILE: drivers/pci/hotplug/acpiphp_ibm.c:131:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#229: FILE: drivers/pci/hotplug/acpiphp_ibm.c:143:
+^Iunion acpi_object args[2]; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#231: FILE: drivers/pci/hotplug/acpiphp_ibm.c:145:
+^Iacpi_status stat; $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#237: FILE: drivers/pci/hotplug/acpiphp_ibm.c:151:
+	dbg("%s: set slot %d attention status to %d\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#238: FILE: drivers/pci/hotplug/acpiphp_ibm.c:152:
+	dbg("%s: set slot %d attention status to %d\n", __FUNCTION__,
+			acpi_slot->sun, (status ? 1 : 0));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#263: FILE: drivers/pci/hotplug/acpiphp_ibm.c:177:
+ * $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#286: FILE: drivers/pci/hotplug/acpiphp_ibm.c:200:
+	while (ind < size && (des->generic.type != 0x82 ||
+			des->slot.slot_id != acpi_slot->sun))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#297: FILE: drivers/pci/hotplug/acpiphp_ibm.c:211:
+	dbg("%s: get slot %d attention status is %d retval=%x\n",
+			__FUNCTION__, acpi_slot->sun, *status, retval);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#297: FILE: drivers/pci/hotplug/acpiphp_ibm.c:211:
+			__FUNCTION__, acpi_slot->sun, *status, retval);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#328: FILE: drivers/pci/hotplug/acpiphp_ibm.c:242:
+	dbg("%s: Received notification %02x\n", __FUNCTION__, event);

CHECK:BRACES: braces {} should be used on all arms of this statement
#330: FILE: drivers/pci/hotplug/acpiphp_ibm.c:244:
+	if (subevent == 0x80) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#331: FILE: drivers/pci/hotplug/acpiphp_ibm.c:245:
+		dbg("%s: generationg bus event\n", __FUNCTION__);

CHECK:BRACES: Unbalanced braces around else statement
#333: FILE: drivers/pci/hotplug/acpiphp_ibm.c:247:
+	} else

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#361: FILE: drivers/pci/hotplug/acpiphp_ibm.c:275:
+		err("%s:  APCI evaluation failed\n", __FUNCTION__);

CHECK:SPACING: No space is necessary after a cast
#365: FILE: drivers/pci/hotplug/acpiphp_ibm.c:279:
+	package = (union acpi_object *) buffer.pointer;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'package->type != ACPI_TYPE_PACKAGE'
#366: FILE: drivers/pci/hotplug/acpiphp_ibm.c:280:
+	if(!(package) ||
+			(package->type != ACPI_TYPE_PACKAGE) ||
+			!(package->package.elements)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space required before the open parenthesis '('
#366: FILE: drivers/pci/hotplug/acpiphp_ibm.c:280:
+	if(!(package) ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#367: FILE: drivers/pci/hotplug/acpiphp_ibm.c:281:
+	if(!(package) ||
+			(package->type != ACPI_TYPE_PACKAGE) ||

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#369: FILE: drivers/pci/hotplug/acpiphp_ibm.c:283:
+		err("%s:  Invalid APCI object\n", __FUNCTION__);

ERROR:SPACING: space required before the open parenthesis '('
#373: FILE: drivers/pci/hotplug/acpiphp_ibm.c:287:
+	for(size = 0, i = 0; i < package->package.count; i++) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#375: FILE: drivers/pci/hotplug/acpiphp_ibm.c:289:
+			err("%s:  Invalid APCI element %d\n", __FUNCTION__, i);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bufp"
#381: FILE: drivers/pci/hotplug/acpiphp_ibm.c:295:
+	if (bufp == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#386: FILE: drivers/pci/hotplug/acpiphp_ibm.c:300:
+	dbg("%s: element count: %i, ASL table size: %i, &table = 0x%p\n",
+			__FUNCTION__, package->package.count, size, lbuf);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#386: FILE: drivers/pci/hotplug/acpiphp_ibm.c:300:
+			__FUNCTION__, package->package.count, size, lbuf);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#397: FILE: drivers/pci/hotplug/acpiphp_ibm.c:311:
+	for (i=0; i<package->package.count; i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#397: FILE: drivers/pci/hotplug/acpiphp_ibm.c:311:
+	for (i=0; i<package->package.count; i++) {
 	           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#399: FILE: drivers/pci/hotplug/acpiphp_ibm.c:313:
+		memcpy(&lbuf[size],
+				package->package.elements[i].buffer.pointer,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#424: FILE: drivers/pci/hotplug/acpiphp_ibm.c:338:
+static ssize_t ibm_read_apci_table(struct kobject *kobj,
+		char *buffer, loff_t pos, size_t size)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#428: FILE: drivers/pci/hotplug/acpiphp_ibm.c:342:
+^I$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#429: FILE: drivers/pci/hotplug/acpiphp_ibm.c:343:
+	dbg("%s: pos = %d, size = %d\n", __FUNCTION__, (int)pos, size);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#455: FILE: drivers/pci/hotplug/acpiphp_ibm.c:369:
+^Iacpi_status status; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#456: FILE: drivers/pci/hotplug/acpiphp_ibm.c:370:
+^Istruct acpi_device_info info; $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#464: FILE: drivers/pci/hotplug/acpiphp_ibm.c:378:
+		err("%s:  Failed to get device information", __FUNCTION__);

ERROR:SPACING: space required before the open parenthesis '('
#469: FILE: drivers/pci/hotplug/acpiphp_ibm.c:383:
+	if(info.current_status && (info.valid & ACPI_VALID_HID) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#470: FILE: drivers/pci/hotplug/acpiphp_ibm.c:384:
+	if(info.current_status && (info.valid & ACPI_VALID_HID) &&
+			(!strcmp(info.hardware_id.value, IBM_HARDWARE_ID1) ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#473: FILE: drivers/pci/hotplug/acpiphp_ibm.c:387:
+		dbg("found hardware: %s, handle: %x\n", info.hardware_id.value,
+				(unsigned int)handle);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#476: FILE: drivers/pci/hotplug/acpiphp_ibm.c:390:
+^I^I * and returns this value to the caller of $

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#492: FILE: drivers/pci/hotplug/acpiphp_ibm.c:406:
+	dbg("%s\n", __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#495: FILE: drivers/pci/hotplug/acpiphp_ibm.c:409:
+	if (acpi_walk_namespace(ACPI_TYPE_DEVICE, ACPI_ROOT_OBJECT,
+			ACPI_UINT32_MAX, ibm_find_acpi_device,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#497: FILE: drivers/pci/hotplug/acpiphp_ibm.c:411:
+		err("%s: acpi_walk_namespace failed\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#501: FILE: drivers/pci/hotplug/acpiphp_ibm.c:415:
+	dbg("%s: found IBM aPCI device\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#503: FILE: drivers/pci/hotplug/acpiphp_ibm.c:417:
+		err("%s: acpi_bus_get_device failed\n", __FUNCTION__);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#513: FILE: drivers/pci/hotplug/acpiphp_ibm.c:427:
+	status = acpi_install_notify_handler(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#520: FILE: drivers/pci/hotplug/acpiphp_ibm.c:434:
+		err("%s:  Failed to register notification handler\n",
+				__FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#520: FILE: drivers/pci/hotplug/acpiphp_ibm.c:434:
+				__FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#541: FILE: drivers/pci/hotplug/acpiphp_ibm.c:455:
+	dbg("%s\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#544: FILE: drivers/pci/hotplug/acpiphp_ibm.c:458:
+		err("%s: attention info deregistration failed", __FUNCTION__);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#546: FILE: drivers/pci/hotplug/acpiphp_ibm.c:460:
+	   status = acpi_remove_notify_handler(

WARNING:TABSTOP: Statements should start on a tabstop
#550: FILE: drivers/pci/hotplug/acpiphp_ibm.c:464:
+	   if (ACPI_FAILURE(status))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (11, 19)
#550: FILE: drivers/pci/hotplug/acpiphp_ibm.c:464:
+	   if (ACPI_FAILURE(status))
+		   err("%s:  Notification handler removal failed\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#552: FILE: drivers/pci/hotplug/acpiphp_ibm.c:466:
+		   err("%s:  Notification handler removal failed\n",
+				   __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#552: FILE: drivers/pci/hotplug/acpiphp_ibm.c:466:
+				   __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#556: FILE: drivers/pci/hotplug/acpiphp_ibm.c:470:
+		err("%s: removal of sysfs file apci_table failed\n",
+				__FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#556: FILE: drivers/pci/hotplug/acpiphp_ibm.c:470:
+				__FUNCTION__);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000269296.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 25 warnings, 23 checks, 499 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000269296.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
