WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#70: FILE: lne390.c:97:
+static unsigned char irq_reverse_map[] __initdata = {0xff, 0xff, 0xff, 7, 0xff, 6, 0xff, 5, 0xff, 4, 3, 2, 1, 0xff, 0xff, 0};

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#80: FILE: lne390.c:227:
+	 * space */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#103: FILE: lne390.c:367:
+	 * operations to access the buffer ... we must use something else here. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#106: FILE: lne390.c:370:
+	const void *from = buf;
+	count -= 4;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#108: FILE: lne390.c:372:
+		__raw_writel(*(const u16 *)from | (*(const u16 *)(from+2))<<16, (unsigned long) shmem);

CHECK:SPACING: No space is necessary after a cast
#108: FILE: lne390.c:372:
+		__raw_writel(*(const u16 *)from | (*(const u16 *)(from+2))<<16, (unsigned long) shmem);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#108: FILE: lne390.c:372:
+		__raw_writel(*(const u16 *)from | (*(const u16 *)(from+2))<<16, (unsigned long) shmem);
 		                                                      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#108: FILE: lne390.c:372:
+		__raw_writel(*(const u16 *)from | (*(const u16 *)(from+2))<<16, (unsigned long) shmem);
 		                                                          ^

CHECK:SPACING: No space is necessary after a cast
#110: FILE: lne390.c:374:
+		(unsigned long) shmem += 4;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#149: FILE: lne390.c:429:
+		 * done in the EISA Configuration Utility! */

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#152: FILE: lne390.c:432:
+		if (activate[this_dev]) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#153: FILE: lne390.c:433:
+^I^I^Iif (inb_p(dev->base_addr + LNE390_ID_PORT) == 0xff) return -ENODEV; $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#153: FILE: lne390.c:433:
+			if (inb_p(dev->base_addr + LNE390_ID_PORT) == 0xff) return -ENODEV; 

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LONG_LINE: line length of 205 exceeds 100 columns
#155: FILE: lne390.c:435:
+				printk (KERN_ERR "The lne390 shared mem buffer must be on a 16-bit boundary,\nwill try to initialize 0x%lx instead of 0x%lx\n", dev->mem_start & 0xffff0000, dev->mem_start);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#155: FILE: lne390.c:435:
+				printk (KERN_ERR "The lne390 shared mem buffer must be on a 16-bit boundary,\nwill try to initialize 0x%lx instead of 0x%lx\n", dev->mem_start & 0xffff0000, dev->mem_start);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#155: FILE: lne390.c:435:
+				printk (KERN_ERR "The lne390 shared mem buffer must be on a 16-bit boundary,\nwill try to initialize 0x%lx instead of 0x%lx\n", dev->mem_start & 0xffff0000, dev->mem_start);

WARNING:LONG_LINE: line length of 165 exceeds 100 columns
#158: FILE: lne390.c:438:
+			printk("Trying to activate LNE390 card in slot %d with irq %d and shared mem at 0x%lx\n", (int)dev->base_addr>>12, dev->irq, dev->mem_start);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#158: FILE: lne390.c:438:
+			printk("Trying to activate LNE390 card in slot %d with irq %d and shared mem at 0x%lx\n", (int)dev->base_addr>>12, dev->irq, dev->mem_start);

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#158: FILE: lne390.c:438:
+			printk("Trying to activate LNE390 card in slot %d with irq %d and shared mem at 0x%lx\n", (int)dev->base_addr>>12, dev->irq, dev->mem_start);
 			                                                                                                             ^

WARNING:LONG_LINE: line length of 127 exceeds 100 columns
#161: FILE: lne390.c:441:
+			if ((dev->irq < 16) && (irq_reverse_map[dev->irq]!=0xff)) lne390_config = irq_reverse_map[dev->irq]<<3;

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#161: FILE: lne390.c:441:
+			if ((dev->irq < 16) && (irq_reverse_map[dev->irq]!=0xff)) lne390_config = irq_reverse_map[dev->irq]<<3;
 			                                                 ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#161: FILE: lne390.c:441:
+			if ((dev->irq < 16) && (irq_reverse_map[dev->irq]!=0xff)) lne390_config = irq_reverse_map[dev->irq]<<3;
 			                                                                                                   ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev->irq < 16'
#161: FILE: lne390.c:441:
+			if ((dev->irq < 16) && (irq_reverse_map[dev->irq]!=0xff)) lne390_config = irq_reverse_map[dev->irq]<<3;

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'irq_reverse_map[dev->irq]!=0xff'
#161: FILE: lne390.c:441:
+			if ((dev->irq < 16) && (irq_reverse_map[dev->irq]!=0xff)) lne390_config = irq_reverse_map[dev->irq]<<3;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#161: FILE: lne390.c:441:
+			if ((dev->irq < 16) && (irq_reverse_map[dev->irq]!=0xff)) lne390_config = irq_reverse_map[dev->irq]<<3;

CHECK:BRACES: braces {} should be used on all arms of this statement
#161: FILE: lne390.c:441:
+			if ((dev->irq < 16) && (irq_reverse_map[dev->irq]!=0xff)) lne390_config = irq_reverse_map[dev->irq]<<3;
[...]
+			else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#162: FILE: lne390.c:442:
+			else {

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#163: FILE: lne390.c:443:
+				printk(KERN_ERR "Sorry, the irq of lne390 cards can not be mapped to %d\n", dev->irq);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#163: FILE: lne390.c:443:
+				printk(KERN_ERR "Sorry, the irq of lne390 cards can not be mapped to %d\n", dev->irq);

WARNING:LINE_SPACING: Missing a blank line after declarations
#169: FILE: lne390.c:449:
+			int revision = (inl(dev->base_addr + LNE390_ID_PORT) >> 24) & 0x01;
+			if (revision) {

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#170: FILE: lne390.c:450:
+				for (index = 0; (index < 8) && (dev->mem_start >> 16 != shmem_mapB[index]); index++);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#170: FILE: lne390.c:450:
+				for (index = 0; (index < 8) && (dev->mem_start >> 16 != shmem_mapB[index]); index++);

CHECK:CAMELCASE: Avoid CamelCase: <shmem_mapB>
#170: FILE: lne390.c:450:
+				for (index = 0; (index < 8) && (dev->mem_start >> 16 != shmem_mapB[index]); index++);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:BRACES: braces {} should be used on all arms of this statement
#171: FILE: lne390.c:451:
+				if (index > 7) {
[...]
+				else lne390_config = lne390_config | index;
[...]

WARNING:LONG_LINE: line length of 130 exceeds 100 columns
#172: FILE: lne390.c:452:
+					printk (KERN_ERR "The lne390B adapter can not map shared mem at 0x%lx\n", dev->mem_start);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#172: FILE: lne390.c:452:
+					printk (KERN_ERR "The lne390B adapter can not map shared mem at 0x%lx\n", dev->mem_start);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#172: FILE: lne390.c:452:
+					printk (KERN_ERR "The lne390B adapter can not map shared mem at 0x%lx\n", dev->mem_start);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#175: FILE: lne390.c:455:
+				else lne390_config = lne390_config | index;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#175: FILE: lne390.c:455:
+				}
+				else lne390_config = lne390_config | index;

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#177: FILE: lne390.c:457:
+			}
+			else {

CHECK:BRACES: Unbalanced braces around else statement
#177: FILE: lne390.c:457:
+			else {

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#178: FILE: lne390.c:458:
+				for (index = 0; (index < 8) && (dev->mem_start >> 16 != shmem_mapA[index]); index++);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#178: FILE: lne390.c:458:
+				for (index = 0; (index < 8) && (dev->mem_start >> 16 != shmem_mapA[index]); index++);

CHECK:CAMELCASE: Avoid CamelCase: <shmem_mapA>
#178: FILE: lne390.c:458:
+				for (index = 0; (index < 8) && (dev->mem_start >> 16 != shmem_mapA[index]); index++);

CHECK:BRACES: braces {} should be used on all arms of this statement
#179: FILE: lne390.c:459:
+				if (index > 7) {
[...]
+				else lne390_config = lne390_config | index;
[...]

WARNING:LONG_LINE: line length of 130 exceeds 100 columns
#180: FILE: lne390.c:460:
+					printk (KERN_ERR "The lne390A adapter can not map shared mem at 0x%lx\n", dev->mem_start);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#180: FILE: lne390.c:460:
+					printk (KERN_ERR "The lne390A adapter can not map shared mem at 0x%lx\n", dev->mem_start);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#180: FILE: lne390.c:460:
+					printk (KERN_ERR "The lne390A adapter can not map shared mem at 0x%lx\n", dev->mem_start);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#183: FILE: lne390.c:463:
+				else lne390_config = lne390_config | index;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#183: FILE: lne390.c:463:
+				}
+				else lne390_config = lne390_config | index;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#187: FILE: lne390.c:467:
+			outb (0x0, dev->base_addr + LNE390_RESET_PORT);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#188: FILE: lne390.c:468:
+			outb (0x1, dev->base_addr + LNE390_RESET_PORT);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#189: FILE: lne390.c:469:
+			outb (lne390_config, dev->base_addr + LNE390_CFG2);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#190: FILE: lne390.c:470:
+			printk ("lne390 in slot %d has been activated\n", dev->base_addr>>12);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#190: FILE: lne390.c:470:
+			printk ("lne390 in slot %d has been activated\n", dev->base_addr>>12);

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#190: FILE: lne390.c:470:
+			printk ("lne390 in slot %d has been activated\n", dev->base_addr>>12);
 			                                                                ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000330919.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 28 warnings, 17 checks, 124 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000330919.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
