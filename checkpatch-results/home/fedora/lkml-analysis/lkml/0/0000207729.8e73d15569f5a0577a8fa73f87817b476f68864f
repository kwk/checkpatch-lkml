WARNING:REPEATED_WORD: Possible repeated word: 'to'
#36: 
good to to see this one to be integrated into the -mm tree, too.

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#45: 
Timo Hönig <thoenig at suse dot de>
      ^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#54: 
diff -urN linux-2.6.11-rc3_a/drivers/acpi/Kconfig linux-2.6.11-rc3_b/drivers/acpi/Kconfig

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#61: FILE: drivers/acpi/Kconfig:245:
+config ACPI_PCC
+        tristate "Panasonic Laptop Extras"
+        depends on X86
+        depends on ACPI_INTERPRETER
+        default m
+           ---help---
+           This driver implements hotkey functionality and access to
+	   various hardware (e.g. LCD brightness) for the
+           Panasonic R1 (N variant), R2, R3, T2, W2, and Y2 laptops.
+
+           Further details and user space tools are available at
+           <http://www.da-cha.org/letsnote/>.
+
+	   If you have one of the above listed Panasonic laptops
+	   say Y or M here.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#93: FILE: drivers/acpi/pcc_acpi.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#102: FILE: drivers/acpi/pcc_acpi.c:10:
+ *  it under the terms of the GNU General Public License version 2 as $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#111: FILE: drivers/acpi/pcc_acpi.c:19:
+ *  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#112: FILE: drivers/acpi/pcc_acpi.c:20:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#127: FILE: drivers/acpi/pcc_acpi.c:35:
+#include <asm/uaccess.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#143: FILE: drivers/acpi/pcc_acpi.c:51:
+#define PCC_ERR    KERN_ERR    PCC_LOG $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#143: FILE: drivers/acpi/pcc_acpi.c:51:
+#define PCC_ERR    KERN_ERR    PCC_LOG 

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#144: FILE: drivers/acpi/pcc_acpi.c:52:
+#define PCC_INFO   KERN_INFO   PCC_LOG

ERROR:TRAILING_WHITESPACE: trailing whitespace
#155: FILE: drivers/acpi/pcc_acpi.c:63:
+ * $

ERROR:CODE_INDENT: code indent should use tabs where possible
#158: FILE: drivers/acpi/pcc_acpi.c:66:
+                 SINF_LCD_TYPE, SINF_AC_MAX_BRIGHT,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: drivers/acpi/pcc_acpi.c:66:
+                 SINF_LCD_TYPE, SINF_AC_MAX_BRIGHT,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#165: FILE: drivers/acpi/pcc_acpi.c:73:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#166: FILE: drivers/acpi/pcc_acpi.c:74:
+static int __devinit acpi_pcc_hotkey_add (struct acpi_device *device);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#166: FILE: drivers/acpi/pcc_acpi.c:74:
+static int __devinit acpi_pcc_hotkey_add (struct acpi_device *device);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#167: FILE: drivers/acpi/pcc_acpi.c:75:
+static int __devexit acpi_pcc_hotkey_remove (struct acpi_device *device,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#167: FILE: drivers/acpi/pcc_acpi.c:75:
+static int __devexit acpi_pcc_hotkey_remove (struct acpi_device *device,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#168: FILE: drivers/acpi/pcc_acpi.c:76:
+static int __devexit acpi_pcc_hotkey_remove (struct acpi_device *device,
+						int type);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#214: FILE: drivers/acpi/pcc_acpi.c:122:
+	if (status != AE_OK) {
+		return -1;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#217: FILE: drivers/acpi/pcc_acpi.c:125:
+^I$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#229: FILE: drivers/acpi/pcc_acpi.c:137:
+		return(s);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#231: FILE: drivers/acpi/pcc_acpi.c:139:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#231: FILE: drivers/acpi/pcc_acpi.c:139:
+	else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#232: FILE: drivers/acpi/pcc_acpi.c:140:
+		printk(PCC_ERR "acpi_pcc_get_sqty() evaluation error \

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#232: FILE: drivers/acpi/pcc_acpi.c:140:
+		printk(PCC_ERR "acpi_pcc_get_sqty() evaluation error \

ERROR:TRAILING_WHITESPACE: trailing whitespace
#238: FILE: drivers/acpi/pcc_acpi.c:146:
+static int acpi_pcc_retrieve_biosdata(struct acpi_hotkey *hotkey, u32* sinf) $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#238: FILE: drivers/acpi/pcc_acpi.c:146:
+static int acpi_pcc_retrieve_biosdata(struct acpi_hotkey *hotkey, u32* sinf) 

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#245: FILE: drivers/acpi/pcc_acpi.c:153:
+	status = acpi_evaluate_object(hotkey->handle, "SINF", 0 , &buffer);
 	                                                        ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#247: FILE: drivers/acpi/pcc_acpi.c:155:
+		printk(PCC_ERR "acpi_pcc_retrieve_biosdata() evaluation error \

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#247: FILE: drivers/acpi/pcc_acpi.c:155:
+		printk(PCC_ERR "acpi_pcc_retrieve_biosdata() evaluation error \

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hkey->type != ACPI_TYPE_PACKAGE'
#253: FILE: drivers/acpi/pcc_acpi.c:161:
+	if (!hkey || (hkey->type != ACPI_TYPE_PACKAGE)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#254: FILE: drivers/acpi/pcc_acpi.c:162:
+		printk(PCC_ERR "acpi_pcc_retrieve_biosdata() invalid \

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#254: FILE: drivers/acpi/pcc_acpi.c:162:
+		printk(PCC_ERR "acpi_pcc_retrieve_biosdata() invalid \

ERROR:TRAILING_WHITESPACE: trailing whitespace
#258: FILE: drivers/acpi/pcc_acpi.c:166:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#260: FILE: drivers/acpi/pcc_acpi.c:168:
+		printk(PCC_ERR "acpi_pcc_retrieve_biosdata() SQTY reports bad \

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#260: FILE: drivers/acpi/pcc_acpi.c:168:
+		printk(PCC_ERR "acpi_pcc_retrieve_biosdata() SQTY reports bad \

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around hkey->package.elements[i]
#267: FILE: drivers/acpi/pcc_acpi.c:175:
+		union acpi_object *element = &(hkey->package.elements[i]);

WARNING:LINE_SPACING: Missing a blank line after declarations
#268: FILE: drivers/acpi/pcc_acpi.c:176:
+		union acpi_object *element = &(hkey->package.elements[i]);
+		if (likely(element->type == ACPI_TYPE_INTEGER)) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#271: FILE: drivers/acpi/pcc_acpi.c:179:
+		}
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#271: FILE: drivers/acpi/pcc_acpi.c:179:
+		else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#272: FILE: drivers/acpi/pcc_acpi.c:180:
+			printk(PCC_ERR "acpi_pcc_retrieve_biosdata() invalid \

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#272: FILE: drivers/acpi/pcc_acpi.c:180:
+			printk(PCC_ERR "acpi_pcc_retrieve_biosdata() invalid \

ERROR:TRAILING_WHITESPACE: trailing whitespace
#280: FILE: drivers/acpi/pcc_acpi.c:188:
+^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#281: FILE: drivers/acpi/pcc_acpi.c:189:
+	if (status != AE_OK) {
+		return -1;
+	}

CHECK:SPACING: No space is necessary after a cast
#290: FILE: drivers/acpi/pcc_acpi.c:198:
+	struct acpi_hotkey *hotkey = (struct acpi_hotkey *) seq->private;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#291: FILE: drivers/acpi/pcc_acpi.c:199:
+	u32* sinf = kmalloc(sizeof(u32) * (hotkey->num_sifr + 1), GFP_KERNEL);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#294: FILE: drivers/acpi/pcc_acpi.c:202:
+		printk(PCC_ERR "acpi_pcc_read_sinf_field() could not allocate \

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#294: FILE: drivers/acpi/pcc_acpi.c:202:
+		printk(PCC_ERR "acpi_pcc_read_sinf_field() could not allocate \

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#294: FILE: drivers/acpi/pcc_acpi.c:202:
+	if (!sinf) {
+		printk(PCC_ERR "acpi_pcc_read_sinf_field() could not allocate \

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#302: FILE: drivers/acpi/pcc_acpi.c:210:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#302: FILE: drivers/acpi/pcc_acpi.c:210:
+	else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#303: FILE: drivers/acpi/pcc_acpi.c:211:
+		printk(PCC_ERR "acpi_pcc_read_sinf_field() could not retrieve \

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#303: FILE: drivers/acpi/pcc_acpi.c:211:
+		printk(PCC_ERR "acpi_pcc_read_sinf_field() could not retrieve \

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#317: FILE: drivers/acpi/pcc_acpi.c:225:
+#define PCC_SINF_READ_F(_name_, FUNC) \
+static int _name_ (struct seq_file *seq, void *offset) \
+{ \
+	return acpi_pcc_read_sinf_field(seq, (FUNC)); \
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#318: FILE: drivers/acpi/pcc_acpi.c:226:
+static int _name_ (struct seq_file *seq, void *offset) \

WARNING:BRACES: braces {} are not necessary for single statement blocks
#337: FILE: drivers/acpi/pcc_acpi.c:245:
+	if (!hotkey || !hotkey->device) {
+		return 0;
+	}

CHECK:SPACING: No space is necessary after a cast
#348: FILE: drivers/acpi/pcc_acpi.c:256:
+	struct acpi_hotkey *hotkey = (struct acpi_hotkey *) seq->private;

CHECK:SPACING: No space is necessary after a cast
#359: FILE: drivers/acpi/pcc_acpi.c:267:
+	struct acpi_hotkey *hotkey = (struct acpi_hotkey *) seq->private;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#361: FILE: drivers/acpi/pcc_acpi.c:269:
+	if (!hotkey || !hotkey->device) {
+		return 0;
+	}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#366: FILE: drivers/acpi/pcc_acpi.c:274:
+	seq_printf(seq, "%s version %s\n", "Panasonic PCC extra driver",
+			ACPI_PCC_VERSION);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#373: FILE: drivers/acpi/pcc_acpi.c:281:
+static ssize_t acpi_pcc_write_single_flag (struct file *file,

ERROR:CODE_INDENT: code indent should use tabs where possible
#374: FILE: drivers/acpi/pcc_acpi.c:282:
+                                           const char __user *buffer,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#374: FILE: drivers/acpi/pcc_acpi.c:282:
+                                           const char __user *buffer,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#375: FILE: drivers/acpi/pcc_acpi.c:283:
+                                           size_t count,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: drivers/acpi/pcc_acpi.c:283:
+                                           size_t count,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#376: FILE: drivers/acpi/pcc_acpi.c:284:
+                                           int sinf_func)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: drivers/acpi/pcc_acpi.c:284:
+                                           int sinf_func)$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#383: FILE: drivers/acpi/pcc_acpi.c:291:
+	if (!hotkey || (count > sizeof(write_string) - 1)) {
+		return -EINVAL;
+        }

ERROR:CODE_INDENT: code indent should use tabs where possible
#385: FILE: drivers/acpi/pcc_acpi.c:293:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: drivers/acpi/pcc_acpi.c:293:
+        }$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#387: FILE: drivers/acpi/pcc_acpi.c:295:
+	if (copy_from_user(write_string, buffer, count)) {
+		return -EFAULT;
+        }

ERROR:CODE_INDENT: code indent should use tabs where possible
#389: FILE: drivers/acpi/pcc_acpi.c:297:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: drivers/acpi/pcc_acpi.c:297:
+        }$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#392: FILE: drivers/acpi/pcc_acpi.c:300:
+	if (sscanf(write_string, "%i", &val) == 1 && (val == 0 || val == 1)) {
+		acpi_pcc_write_sset(hotkey, sinf_func, val);
+	}

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#392: FILE: drivers/acpi/pcc_acpi.c:300:
+	if (sscanf(write_string, "%i", &val) == 1 && (val == 0 || val == 1)) {
+		acpi_pcc_write_sset(hotkey, sinf_func, val);
+	}

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#409: FILE: drivers/acpi/pcc_acpi.c:317:
+	u32* sinf = kmalloc(sizeof(u32) * (hotkey->num_sifr + 1), GFP_KERNEL);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#411: FILE: drivers/acpi/pcc_acpi.c:319:
+	if (!hotkey || (count > sizeof(write_string) - 1)) {
+		return -EINVAL;
+	}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#416: FILE: drivers/acpi/pcc_acpi.c:324:
+		printk(PCC_ERR "acpi_pcc_write_brightness() could not \

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#416: FILE: drivers/acpi/pcc_acpi.c:324:
+		printk(PCC_ERR "acpi_pcc_write_brightness() could not \

ERROR:TRAILING_WHITESPACE: trailing whitespace
#417: FILE: drivers/acpi/pcc_acpi.c:325:
+^I^I^I^Iallocate %li bytes\n", $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#422: FILE: drivers/acpi/pcc_acpi.c:330:
+	if (copy_from_user(write_string, buffer, count)) {
+		return -EFAULT;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#425: FILE: drivers/acpi/pcc_acpi.c:333:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#429: FILE: drivers/acpi/pcc_acpi.c:337:
+		printk(PCC_ERR "acpi_pcc_write_brightness() could not \

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#429: FILE: drivers/acpi/pcc_acpi.c:337:
+		printk(PCC_ERR "acpi_pcc_write_brightness() could not \

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bright >= sinf[min_index]'
#434: FILE: drivers/acpi/pcc_acpi.c:342:
+	if ((sscanf(write_string, "%i", &bright) == 1) &&
+			(bright >= sinf[min_index]) &&
+			(bright <= sinf[max_index])) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bright <= sinf[max_index]'
#434: FILE: drivers/acpi/pcc_acpi.c:342:
+	if ((sscanf(write_string, "%i", &bright) == 1) &&
+			(bright >= sinf[min_index]) &&
+			(bright <= sinf[max_index])) {

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#434: FILE: drivers/acpi/pcc_acpi.c:342:
+	if ((sscanf(write_string, "%i", &bright) == 1) &&
+			(bright >= sinf[min_index]) &&
+			(bright <= sinf[max_index])) {
+		acpi_pcc_write_sset(hotkey, cur_index, bright);
+	}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#435: FILE: drivers/acpi/pcc_acpi.c:343:
+	if ((sscanf(write_string, "%i", &bright) == 1) &&
+			(bright >= sinf[min_index]) &&

ERROR:TRAILING_WHITESPACE: trailing whitespace
#440: FILE: drivers/acpi/pcc_acpi.c:348:
+end: $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#450: FILE: drivers/acpi/pcc_acpi.c:358:
+^I^I^I^I^I SINF_AC_MIN_BRIGHT, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#451: FILE: drivers/acpi/pcc_acpi.c:359:
+^I^I^I^I^I SINF_AC_MAX_BRIGHT, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#460: FILE: drivers/acpi/pcc_acpi.c:368:
+^I^I^I^I^I SINF_DC_MIN_BRIGHT, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#461: FILE: drivers/acpi/pcc_acpi.c:369:
+^I^I^I^I^I SINF_DC_MAX_BRIGHT, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#465: FILE: drivers/acpi/pcc_acpi.c:373:
+static ssize_t acpi_pcc_write_mute (struct file *file,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#472: FILE: drivers/acpi/pcc_acpi.c:380:
+static ssize_t acpi_pcc_write_sticky_key (struct file *file,

WARNING:BRACES: braces {} are not necessary for single statement blocks
#490: FILE: drivers/acpi/pcc_acpi.c:398:
+	if (!hotkey || (count > sizeof(write_string) - 1)) {
+		return -EINVAL;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#494: FILE: drivers/acpi/pcc_acpi.c:402:
+	if (copy_from_user(write_string, buffer, count)) {
+		return -EFAULT;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#497: FILE: drivers/acpi/pcc_acpi.c:405:
+^I$

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#500: FILE: drivers/acpi/pcc_acpi.c:408:
+	if ((sscanf(write_string, "%i", &key_mode) == 1) &&
+	    (key_mode == 0 || key_mode == 1)) {
+		keyinput = (struct pcc_keyinput *) hotkey->input_dev->private;
+		keyinput->key_mode = key_mode;
+	}

CHECK:SPACING: No space is necessary after a cast
#502: FILE: drivers/acpi/pcc_acpi.c:410:
+		keyinput = (struct pcc_keyinput *) hotkey->input_dev->private;

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#521: FILE: drivers/acpi/pcc_acpi.c:429:
+		/*  3 */ -1, /* vga/lcd switch event does not occur on
+			      * hotkey driver.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BRACES: braces {} are not necessary for single statement blocks
#532: FILE: drivers/acpi/pcc_acpi.c:440:
+	if (keyinput->key_mode == 0) {
+		return;
+	}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hkey_num > ARRAY_SIZE(key_map)'
#538: FILE: drivers/acpi/pcc_acpi.c:446:
+	if ((0 > hkey_num) || (hkey_num > ARRAY_SIZE(key_map))) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#538: FILE: drivers/acpi/pcc_acpi.c:446:
+	if ((0 > hkey_num) || (hkey_num > ARRAY_SIZE(key_map))) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#539: FILE: drivers/acpi/pcc_acpi.c:447:
+		printk(PCC_ERR "acpi_pcc_generete_keyinput() hotkey \

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#539: FILE: drivers/acpi/pcc_acpi.c:447:
+		printk(PCC_ERR "acpi_pcc_generete_keyinput() hotkey \

WARNING:RETURN_VOID: void function return statements are not generally useful
#554: FILE: drivers/acpi/pcc_acpi.c:462:
+	return;
+}

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#565: FILE: drivers/acpi/pcc_acpi.c:473:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#565: FILE: drivers/acpi/pcc_acpi.c:473:
+	else {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#566: FILE: drivers/acpi/pcc_acpi.c:474:
+		printk(PCC_ERR "acpi_pcc_hotkey_get_key() error getting \

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#566: FILE: drivers/acpi/pcc_acpi.c:474:
+		printk(PCC_ERR "acpi_pcc_hotkey_get_key() error getting \

WARNING:BRACES: braces {} are not necessary for single statement blocks
#570: FILE: drivers/acpi/pcc_acpi.c:478:
+	if (status != AE_OK) {
+		return -1;
+	}

CHECK:SPACING: No space is necessary after a cast
#579: FILE: drivers/acpi/pcc_acpi.c:487:
+	struct acpi_hotkey *hotkey = (struct acpi_hotkey *) data;

ERROR:SPACING: space required before the open parenthesis '('
#581: FILE: drivers/acpi/pcc_acpi.c:489:
+	switch(event) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#585: FILE: drivers/acpi/pcc_acpi.c:493:
+^I^I^I *   e.g. '"pcc HKEY 00000080 00000084"' when Fn+F4 is $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#591: FILE: drivers/acpi/pcc_acpi.c:499:
+			acpi_bus_generate_event(hotkey->device, event,
+					hotkey->status);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#593: FILE: drivers/acpi/pcc_acpi.c:501:
+^I^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#601: FILE: drivers/acpi/pcc_acpi.c:509:
+
+	}

WARNING:RETURN_VOID: void function return statements are not generally useful
#604: FILE: drivers/acpi/pcc_acpi.c:512:
+	return;
+}

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#607: FILE: drivers/acpi/pcc_acpi.c:515:
+#define SEQ_OPEN_FS(_open_func_name_, _show_func_name_) \
+    static int _open_func_name_(struct inode *inode, struct file *file) \
+{ \
+            return single_open(file, _show_func_name_, PDE(inode)->data); \
+}

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#608: FILE: drivers/acpi/pcc_acpi.c:516:
+    static int _open_func_name_(struct inode *inode, struct file *file) \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#610: FILE: drivers/acpi/pcc_acpi.c:518:
+            return single_open(file, _show_func_name_, PDE(inode)->data); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#610: FILE: drivers/acpi/pcc_acpi.c:518:
+            return single_open(file, _show_func_name_, PDE(inode)->data); \$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#615: FILE: drivers/acpi/pcc_acpi.c:523:
+SEQ_OPEN_FS(acpi_pcc_numbatteries_open_fs, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#620: FILE: drivers/acpi/pcc_acpi.c:528:
+    ^I    acpi_pcc_ac_brightness_max_show);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#620: FILE: drivers/acpi/pcc_acpi.c:528:
+    ^I    acpi_pcc_ac_brightness_max_show);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#620: FILE: drivers/acpi/pcc_acpi.c:528:
+SEQ_OPEN_FS(acpi_pcc_ac_brightness_max_open_fs,
+    	    acpi_pcc_ac_brightness_max_show);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#620: FILE: drivers/acpi/pcc_acpi.c:528:
+    ^I    acpi_pcc_ac_brightness_max_show);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#636: FILE: drivers/acpi/pcc_acpi.c:544:
+            acpi_pcc_sticky_key_show);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#636: FILE: drivers/acpi/pcc_acpi.c:544:
+            acpi_pcc_sticky_key_show);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#640: FILE: drivers/acpi/pcc_acpi.c:548:
+            .open    = _open_func_name_, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#640: FILE: drivers/acpi/pcc_acpi.c:548:
+            .open    = _open_func_name_, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#641: FILE: drivers/acpi/pcc_acpi.c:549:
+            .read    = seq_read,         \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#641: FILE: drivers/acpi/pcc_acpi.c:549:
+            .read    = seq_read,         \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#642: FILE: drivers/acpi/pcc_acpi.c:550:
+            .llseek  = seq_lseek,        \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#642: FILE: drivers/acpi/pcc_acpi.c:550:
+            .llseek  = seq_lseek,        \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#643: FILE: drivers/acpi/pcc_acpi.c:551:
+            .release = single_release,   \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#643: FILE: drivers/acpi/pcc_acpi.c:551:
+            .release = single_release,   \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#648: FILE: drivers/acpi/pcc_acpi.c:556:
+            .open    = _open_func_name_ , \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#648: FILE: drivers/acpi/pcc_acpi.c:556:
+            .open    = _open_func_name_ , \$

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#648: FILE: drivers/acpi/pcc_acpi.c:556:
+            .open    = _open_func_name_ , \
                                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#649: FILE: drivers/acpi/pcc_acpi.c:557:
+            .read    = seq_read,          \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#649: FILE: drivers/acpi/pcc_acpi.c:557:
+            .read    = seq_read,          \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#650: FILE: drivers/acpi/pcc_acpi.c:558:
+            .write   = _write_func_name_, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#650: FILE: drivers/acpi/pcc_acpi.c:558:
+            .write   = _write_func_name_, \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#651: FILE: drivers/acpi/pcc_acpi.c:559:
+            .llseek  = seq_lseek,         \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#651: FILE: drivers/acpi/pcc_acpi.c:559:
+            .llseek  = seq_lseek,         \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#652: FILE: drivers/acpi/pcc_acpi.c:560:
+            .release = single_release,    \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#652: FILE: drivers/acpi/pcc_acpi.c:560:
+            .release = single_release,    \$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#655: FILE: drivers/acpi/pcc_acpi.c:563:
+typedef struct file_operations fops_t;

WARNING:CONST_STRUCT: struct file_operations should normally be const
#655: FILE: drivers/acpi/pcc_acpi.c:563:
+typedef struct file_operations fops_t;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#658: FILE: drivers/acpi/pcc_acpi.c:566:
+static fops_t acpi_pcc_numbatteries_fops = \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#659: FILE: drivers/acpi/pcc_acpi.c:567:
+	SEQ_FILEOPS_R (acpi_pcc_numbatteries_open_fs);

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#662: FILE: drivers/acpi/pcc_acpi.c:570:
+static fops_t acpi_pcc_lcdtype_fops = \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#663: FILE: drivers/acpi/pcc_acpi.c:571:
+	SEQ_FILEOPS_R (acpi_pcc_lcdtype_open_fs);

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#666: FILE: drivers/acpi/pcc_acpi.c:574:
+static fops_t acpi_pcc_mute_fops = \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#671: FILE: drivers/acpi/pcc_acpi.c:579:
+static fops_t acpi_pcc_ac_brightness_fops = \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#674: FILE: drivers/acpi/pcc_acpi.c:582:
+static fops_t acpi_pcc_ac_brightness_max_fops = \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#676: FILE: drivers/acpi/pcc_acpi.c:584:
+static fops_t acpi_pcc_ac_brightness_min_fops = \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#678: FILE: drivers/acpi/pcc_acpi.c:586:
+static fops_t acpi_pcc_dc_brightness_fops = \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#681: FILE: drivers/acpi/pcc_acpi.c:589:
+static fops_t acpi_pcc_dc_brightness_max_fops = \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#683: FILE: drivers/acpi/pcc_acpi.c:591:
+static fops_t acpi_pcc_dc_brightness_min_fops = \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#687: FILE: drivers/acpi/pcc_acpi.c:595:
+static fops_t acpi_pcc_sticky_key_fops = \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#692: FILE: drivers/acpi/pcc_acpi.c:600:
+static fops_t acpi_pcc_keyinput_fops = \

ERROR:CODE_INDENT: code indent should use tabs where possible
#694: FILE: drivers/acpi/pcc_acpi.c:602:
+^I   ^I       acpi_pcc_write_keyinput);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#694: FILE: drivers/acpi/pcc_acpi.c:602:
+^I   ^I       acpi_pcc_write_keyinput);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#694: FILE: drivers/acpi/pcc_acpi.c:602:
+	SEQ_FILEOPS_RW(acpi_pcc_keyinput_open_fs,
+	   	       acpi_pcc_write_keyinput);

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#697: FILE: drivers/acpi/pcc_acpi.c:605:
+static fops_t acpi_pcc_version_fops = \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#698: FILE: drivers/acpi/pcc_acpi.c:606:
+	SEQ_FILEOPS_R (acpi_pcc_version_open_fs);

WARNING:NEW_TYPEDEFS: do not add new typedefs
#700: FILE: drivers/acpi/pcc_acpi.c:608:
+typedef struct _ProcItem

CHECK:CAMELCASE: Avoid CamelCase: <_ProcItem>
#700: FILE: drivers/acpi/pcc_acpi.c:608:
+typedef struct _ProcItem

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#701: FILE: drivers/acpi/pcc_acpi.c:609:
+typedef struct _ProcItem
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#702: FILE: drivers/acpi/pcc_acpi.c:610:
+	const char* name;

WARNING:CONST_STRUCT: struct file_operations should normally be const
#703: FILE: drivers/acpi/pcc_acpi.c:611:
+	struct file_operations *fops;

CHECK:CAMELCASE: Avoid CamelCase: <ProcItem>
#705: FILE: drivers/acpi/pcc_acpi.c:613:
+} ProcItem;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#709: FILE: drivers/acpi/pcc_acpi.c:617:
+ProcItem pcc_proc_items_sifr[] =
+{

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#710: FILE: drivers/acpi/pcc_acpi.c:618:
+	{ "num_batteries",      &acpi_pcc_numbatteries_fops,     S_IRUGO },

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#711: FILE: drivers/acpi/pcc_acpi.c:619:
+	{ "lcd_type",           &acpi_pcc_lcdtype_fops,          S_IRUGO },

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#712: FILE: drivers/acpi/pcc_acpi.c:620:
+	{ "ac_brightness_max" , &acpi_pcc_ac_brightness_max_fops,S_IRUGO },
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#712: FILE: drivers/acpi/pcc_acpi.c:620:
+	{ "ac_brightness_max" , &acpi_pcc_ac_brightness_max_fops,S_IRUGO },
 	                                                        ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#712: FILE: drivers/acpi/pcc_acpi.c:620:
+	{ "ac_brightness_max" , &acpi_pcc_ac_brightness_max_fops,S_IRUGO },

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#713: FILE: drivers/acpi/pcc_acpi.c:621:
+	{ "ac_brightness_min" , &acpi_pcc_ac_brightness_min_fops,S_IRUGO },
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#713: FILE: drivers/acpi/pcc_acpi.c:621:
+	{ "ac_brightness_min" , &acpi_pcc_ac_brightness_min_fops,S_IRUGO },
 	                                                        ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#713: FILE: drivers/acpi/pcc_acpi.c:621:
+	{ "ac_brightness_min" , &acpi_pcc_ac_brightness_min_fops,S_IRUGO },

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#714: FILE: drivers/acpi/pcc_acpi.c:622:
+	{ "ac_brightness" ,     &acpi_pcc_ac_brightness_fops,    S_IFREG |
 	                  ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#715: FILE: drivers/acpi/pcc_acpi.c:623:
+								 S_IRUGO |

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#716: FILE: drivers/acpi/pcc_acpi.c:624:
+								 S_IWUSR },

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#717: FILE: drivers/acpi/pcc_acpi.c:625:
+	{ "dc_brightness_max" , &acpi_pcc_dc_brightness_max_fops,S_IRUGO },
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#717: FILE: drivers/acpi/pcc_acpi.c:625:
+	{ "dc_brightness_max" , &acpi_pcc_dc_brightness_max_fops,S_IRUGO },
 	                                                        ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#717: FILE: drivers/acpi/pcc_acpi.c:625:
+	{ "dc_brightness_max" , &acpi_pcc_dc_brightness_max_fops,S_IRUGO },

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#718: FILE: drivers/acpi/pcc_acpi.c:626:
+	{ "dc_brightness_min" , &acpi_pcc_dc_brightness_min_fops,S_IRUGO },
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#718: FILE: drivers/acpi/pcc_acpi.c:626:
+	{ "dc_brightness_min" , &acpi_pcc_dc_brightness_min_fops,S_IRUGO },
 	                                                        ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#718: FILE: drivers/acpi/pcc_acpi.c:626:
+	{ "dc_brightness_min" , &acpi_pcc_dc_brightness_min_fops,S_IRUGO },

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#719: FILE: drivers/acpi/pcc_acpi.c:627:
+	{ "dc_brightness" ,     &acpi_pcc_dc_brightness_fops,    S_IFREG |
 	                  ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#720: FILE: drivers/acpi/pcc_acpi.c:628:
+								 S_IRUGO |

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#721: FILE: drivers/acpi/pcc_acpi.c:629:
+								 S_IWUSR },

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#723: FILE: drivers/acpi/pcc_acpi.c:631:
+								 S_IRUGO |

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#724: FILE: drivers/acpi/pcc_acpi.c:632:
+								 S_IWUSR },

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#729: FILE: drivers/acpi/pcc_acpi.c:637:
+ProcItem pcc_proc_items[] =
+{

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#731: FILE: drivers/acpi/pcc_acpi.c:639:
+								 S_IRUGO |

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#732: FILE: drivers/acpi/pcc_acpi.c:640:
+								 S_IWUSR },

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#734: FILE: drivers/acpi/pcc_acpi.c:642:
+								 S_IRUGO |

ERROR:CODE_INDENT: code indent should use tabs where possible
#735: FILE: drivers/acpi/pcc_acpi.c:643:
+^I^I^I^I^I^I^I ^I S_IWUSR },$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#735: FILE: drivers/acpi/pcc_acpi.c:643:
+^I^I^I^I^I^I^I ^I S_IWUSR },$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#735: FILE: drivers/acpi/pcc_acpi.c:643:
+							 	 S_IWUSR },

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#736: FILE: drivers/acpi/pcc_acpi.c:644:
+	{ "version",            &acpi_pcc_version_fops,          S_IRUGO },

ERROR:TRAILING_WHITESPACE: trailing whitespace
#741: FILE: drivers/acpi/pcc_acpi.c:649:
+                                      ProcItem *proc_items, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#741: FILE: drivers/acpi/pcc_acpi.c:649:
+                                      ProcItem *proc_items, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#741: FILE: drivers/acpi/pcc_acpi.c:649:
+                                      ProcItem *proc_items, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#742: FILE: drivers/acpi/pcc_acpi.c:650:
+                                      int num)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#742: FILE: drivers/acpi/pcc_acpi.c:650:
+                                      int num)$

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#744: FILE: drivers/acpi/pcc_acpi.c:652:
+	struct acpi_hotkey *hotkey = \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#745: FILE: drivers/acpi/pcc_acpi.c:653:
+		(struct acpi_hotkey*)acpi_driver_data(device);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#746: FILE: drivers/acpi/pcc_acpi.c:654:
+	struct proc_dir_entry* proc;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#747: FILE: drivers/acpi/pcc_acpi.c:655:
+	ProcItem* item;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#750: FILE: drivers/acpi/pcc_acpi.c:658:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#753: FILE: drivers/acpi/pcc_acpi.c:661:
+^I^I^I^I^I hotkey->proc_dir_entry); $

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#759: FILE: drivers/acpi/pcc_acpi.c:667:
+		}
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#759: FILE: drivers/acpi/pcc_acpi.c:667:
+		else {

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#775: FILE: drivers/acpi/pcc_acpi.c:683:
+	struct acpi_hotkey *hotkey = \

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#776: FILE: drivers/acpi/pcc_acpi.c:684:
+		(struct acpi_hotkey*)acpi_driver_data(device);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#777: FILE: drivers/acpi/pcc_acpi.c:685:
+	struct proc_dir_entry* acpi_pcc_dir;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#782: FILE: drivers/acpi/pcc_acpi.c:690:
+		printk(PCC_ERR "acpi_pcc_proc_init() could not create proc \

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#782: FILE: drivers/acpi/pcc_acpi.c:690:
+		printk(PCC_ERR "acpi_pcc_proc_init() could not create proc \

ERROR:CODE_INDENT: code indent should use tabs where possible
#793: FILE: drivers/acpi/pcc_acpi.c:701:
+^I^I^I              sizeof(pcc_proc_items)/sizeof(ProcItem));$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#793: FILE: drivers/acpi/pcc_acpi.c:701:
+			              sizeof(pcc_proc_items)/sizeof(ProcItem));
 			                                    ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#805: FILE: drivers/acpi/pcc_acpi.c:713:
+                                          ProcItem *proc_items,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#805: FILE: drivers/acpi/pcc_acpi.c:713:
+                                          ProcItem *proc_items,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#806: FILE: drivers/acpi/pcc_acpi.c:714:
+                                          int num)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#806: FILE: drivers/acpi/pcc_acpi.c:714:
+                                          int num)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#808: FILE: drivers/acpi/pcc_acpi.c:716:
+^Istruct acpi_hotkey *hotkey = $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#809: FILE: drivers/acpi/pcc_acpi.c:717:
+		(struct acpi_hotkey*)acpi_driver_data(device);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#810: FILE: drivers/acpi/pcc_acpi.c:718:
+	ProcItem* item;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "item->name"
#813: FILE: drivers/acpi/pcc_acpi.c:721:
+	for (item = proc_items, i = 0; item->name != NULL &&

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#814: FILE: drivers/acpi/pcc_acpi.c:722:
+^I^I^I^I        i < num; ++item, ++i) {$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#814: FILE: drivers/acpi/pcc_acpi.c:722:
+	for (item = proc_items, i = 0; item->name != NULL &&
+				        i < num; ++item, ++i) {

WARNING:RETURN_VOID: void function return statements are not generally useful
#819: FILE: drivers/acpi/pcc_acpi.c:727:
+	return;
+}

WARNING:RETURN_VOID: void function return statements are not generally useful
#830: FILE: drivers/acpi/pcc_acpi.c:738:
+	return;
+}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#837: FILE: drivers/acpi/pcc_acpi.c:745:
+	hotk_input_dev = kmalloc(sizeof(struct input_dev),GFP_KERNEL);
 	                                                 ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*hotk_input_dev)...) over kmalloc(sizeof(struct input_dev)...)
#837: FILE: drivers/acpi/pcc_acpi.c:745:
+	hotk_input_dev = kmalloc(sizeof(struct input_dev),GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#840: FILE: drivers/acpi/pcc_acpi.c:748:
+		printk(PCC_ERR "acpi_pcc_init_input() could not allocate \

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#840: FILE: drivers/acpi/pcc_acpi.c:748:
+		printk(PCC_ERR "acpi_pcc_init_input() could not allocate \

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#840: FILE: drivers/acpi/pcc_acpi.c:748:
+	if (!hotk_input_dev) {
+		printk(PCC_ERR "acpi_pcc_init_input() could not allocate \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#845: FILE: drivers/acpi/pcc_acpi.c:753:
+	pcc_keyinput = kmalloc(sizeof(struct pcc_keyinput),GFP_KERNEL);
 	                                                  ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*pcc_keyinput)...) over kmalloc(sizeof(struct pcc_keyinput)...)
#845: FILE: drivers/acpi/pcc_acpi.c:753:
+	pcc_keyinput = kmalloc(sizeof(struct pcc_keyinput),GFP_KERNEL);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#848: FILE: drivers/acpi/pcc_acpi.c:756:
+		printk(PCC_ERR "acpi_pcc_init_input() could not allocate \

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#848: FILE: drivers/acpi/pcc_acpi.c:756:
+		printk(PCC_ERR "acpi_pcc_init_input() could not allocate \

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#848: FILE: drivers/acpi/pcc_acpi.c:756:
+	if (!pcc_keyinput) {
+		printk(PCC_ERR "acpi_pcc_init_input() could not allocate \

ERROR:TRAILING_WHITESPACE: trailing whitespace
#856: FILE: drivers/acpi/pcc_acpi.c:764:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#856: FILE: drivers/acpi/pcc_acpi.c:764:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#858: FILE: drivers/acpi/pcc_acpi.c:766:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#858: FILE: drivers/acpi/pcc_acpi.c:766:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#867: FILE: drivers/acpi/pcc_acpi.c:775:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#867: FILE: drivers/acpi/pcc_acpi.c:775:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#871: FILE: drivers/acpi/pcc_acpi.c:779:
+^Ihotk_input_dev->id.vendor = 0x0001; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#876: FILE: drivers/acpi/pcc_acpi.c:784:
+^Ipcc_keyinput->hotkey = hotkey; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#877: FILE: drivers/acpi/pcc_acpi.c:785:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#877: FILE: drivers/acpi/pcc_acpi.c:785:
+  $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#888: FILE: drivers/acpi/pcc_acpi.c:796:
+static int acpi_pcc_hotkey_add (struct acpi_device *device)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#894: FILE: drivers/acpi/pcc_acpi.c:802:
+	if (!device) {
+		return -EINVAL;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#899: FILE: drivers/acpi/pcc_acpi.c:807:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#901: FILE: drivers/acpi/pcc_acpi.c:809:
+		printk(PCC_ERR "acpi_pcc_hotkey_add() num_sifr too large \

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#901: FILE: drivers/acpi/pcc_acpi.c:809:
+		printk(PCC_ERR "acpi_pcc_hotkey_add() num_sifr too large \

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*hotkey)...) over kmalloc(sizeof(struct acpi_hotkey)...)
#906: FILE: drivers/acpi/pcc_acpi.c:814:
+	hotkey = kmalloc(sizeof(struct acpi_hotkey), GFP_KERNEL);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#909: FILE: drivers/acpi/pcc_acpi.c:817:
+		printk(PCC_ERR "acpi_pcc_hotkey_add() could not allocate \

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#909: FILE: drivers/acpi/pcc_acpi.c:817:
+		printk(PCC_ERR "acpi_pcc_hotkey_add() could not allocate \

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#909: FILE: drivers/acpi/pcc_acpi.c:817:
+	if (!hotkey) {
+		printk(PCC_ERR "acpi_pcc_hotkey_add() could not allocate \

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#923: FILE: drivers/acpi/pcc_acpi.c:831:
+	status = acpi_install_notify_handler (

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#930: FILE: drivers/acpi/pcc_acpi.c:838:
+		printk(PCC_ERR "acpi_pcc_hotkey_add() error installing notify \

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#930: FILE: drivers/acpi/pcc_acpi.c:838:
+		printk(PCC_ERR "acpi_pcc_hotkey_add() error installing notify \

ERROR:TRAILING_WHITESPACE: trailing whitespace
#932: FILE: drivers/acpi/pcc_acpi.c:840:
+^I^Ikfree(hotkey); $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#939: FILE: drivers/acpi/pcc_acpi.c:847:
+		printk(PCC_ERR "acpi_pcc_hotkey_add() error installing input \

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#939: FILE: drivers/acpi/pcc_acpi.c:847:
+		printk(PCC_ERR "acpi_pcc_hotkey_add() error installing input \

ERROR:TRAILING_WHITESPACE: trailing whitespace
#941: FILE: drivers/acpi/pcc_acpi.c:849:
+^I^Ikfree(hotkey); $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#953: FILE: drivers/acpi/pcc_acpi.c:861:
+	if (!device || !hotkey) {
+		return -EINVAL;
+	}

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#961: FILE: drivers/acpi/pcc_acpi.c:869:
+				       sizeof(pcc_proc_items)/sizeof(ProcItem));
 				                             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#966: FILE: drivers/acpi/pcc_acpi.c:874:
+	status = acpi_remove_notify_handler(hotkey->handle,
+		    ACPI_DEVICE_NOTIFY, acpi_pcc_hotkey_notify);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#969: FILE: drivers/acpi/pcc_acpi.c:877:
+		printk(PCC_ERR "acpi_pcc_hotkey_remove() error removing \

WARNING:LINE_CONTINUATIONS: Avoid line continuations in quoted strings
#969: FILE: drivers/acpi/pcc_acpi.c:877:
+		printk(PCC_ERR "acpi_pcc_hotkey_remove() error removing \

ERROR:SPACING: space required before the open parenthesis '('
#975: FILE: drivers/acpi/pcc_acpi.c:883:
+	if(status != AE_OK) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#975: FILE: drivers/acpi/pcc_acpi.c:883:
+	if(status != AE_OK) {
+		return -1;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#987: FILE: drivers/acpi/pcc_acpi.c:895:
+	if (device == NULL || hotkey == NULL) {
+		return -EINVAL;
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!device"
#987: FILE: drivers/acpi/pcc_acpi.c:895:
+	if (device == NULL || hotkey == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hotkey"
#987: FILE: drivers/acpi/pcc_acpi.c:895:
+	if (device == NULL || hotkey == NULL) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#991: FILE: drivers/acpi/pcc_acpi.c:899:
+	printk(PCC_INFO "acpi_pcc_hotkey_resume() sticky mode restore: %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'acpi_pcc_hotkey_resume', this function's name, in a string
#991: FILE: drivers/acpi/pcc_acpi.c:899:
+	printk(PCC_INFO "acpi_pcc_hotkey_resume() sticky mode restore: %d\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#992: FILE: drivers/acpi/pcc_acpi.c:900:
+	printk(PCC_INFO "acpi_pcc_hotkey_resume() sticky mode restore: %d\n",
+			hotkey->sticky_mode);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#997: FILE: drivers/acpi/pcc_acpi.c:905:
+	if (status != AE_OK) {
+		return -EINVAL;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1007: FILE: drivers/acpi/pcc_acpi.c:915:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1007: FILE: drivers/acpi/pcc_acpi.c:915:
+ $

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1008: FILE: drivers/acpi/pcc_acpi.c:916:
+	if (acpi_disabled) {
+		return -ENODEV;
+	}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1014: FILE: drivers/acpi/pcc_acpi.c:922:
+		printk(PCC_ERR "error registering hotkey driver\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1023: FILE: drivers/acpi/pcc_acpi.c:931:
+^Iacpi_bus_unregister_driver(&acpi_pcc_driver); $

WARNING:RETURN_VOID: void function return statements are not generally useful
#1026: FILE: drivers/acpi/pcc_acpi.c:934:
+	return;
+}

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000207729.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 98 errors, 160 warnings, 39 checks, 964 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000207729.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
