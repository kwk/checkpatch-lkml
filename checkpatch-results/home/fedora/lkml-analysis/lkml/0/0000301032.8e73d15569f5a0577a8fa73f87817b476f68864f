WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#83: 
diff -urN linux.orig/drivers/char/ipmi/ipmi_kcs_intf.c linux-a1/drivers/char/ipmi/ipmi_kcs_intf.c

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#151: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:205:
+		err = kcs_smi_handlers.start_transaction(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#189: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:289:
+		kcs_smi_handlers.start_transaction(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#203: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:308:
+		kcs_smi_handlers.start_transaction(

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#217: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:333:
 		kcs_info->curr_msg->rsp_size
+			= kcs_smi_handlers.get_result(

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#217: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:333:
+			= kcs_smi_handlers.get_result(

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#249: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:391:
 		kcs_info->curr_msg->rsp_size
+			= kcs_smi_handlers.get_result(kcs_info->kcs_sm,

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#262: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:416:
 		kcs_info->curr_msg->rsp_size
+			= kcs_smi_handlers.get_result(kcs_info->kcs_sm,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#282: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:453:
+			kcs_smi_handlers.start_transaction(

ERROR:SPACING: space required after that ',' (ctx:VxV)
#283: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:454:
+			    kcs_info->kcs_sm, msg,3);
 			                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#317: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:493:
+	while (kcs_result == SI_SM_CALL_WITHOUT_DELAY)
 	{
+		kcs_result = kcs_smi_handlers.event(kcs_info->kcs_sm, 0);
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#331: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:503:
 	}
+	else if (kcs_result == SI_SM_HOSED)

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'kcs_result == SI_SM_IDLE'
#370: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:540:
+	if ((kcs_result == SI_SM_IDLE)
 	    && (atomic_read(&kcs_info->req_events)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: No space is necessary after a cast
#390: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:563:
+	struct kcs_info    *kcs_info = (struct kcs_info *) send_info;

CHECK:SPACING: No space is necessary after a cast
#415: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:616:
+	struct kcs_info    *kcs_info = (struct kcs_info *) send_info;

CHECK:SPACING: No space is necessary after a cast
#438: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:680:
+	struct kcs_info    *kcs_info = (struct kcs_info *) data;

CHECK:BRACES: braces {} should be used on all arms of this statement
#499: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:807:
+		if (kcs_result == SI_SM_CALL_WITH_DELAY) {
[...]
-		else if (kcs_result == KCS_CALL_WITHOUT_DELAY)
[...]
+			kcs_result = kcs_smi_handlers.event(data, 0);
[...]

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#505: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:812:
 		}
+		else if (kcs_result == SI_SM_CALL_WITHOUT_DELAY)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#505: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:812:
+		else if (kcs_result == SI_SM_CALL_WITHOUT_DELAY)
 		{
+			kcs_result = kcs_smi_handlers.event(data, 0);
 		}

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#534: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:870:
+	return inb(info->port+offset);
 	                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#542: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:878:
+	outb(b, info->port+offset);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#549: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:885:
+	return readb(info->addr+offset);
 	                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#557: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:893:
+	writeb(b, info->addr+offset);
 	                    ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around new_kcs->io
#590: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:967:
+	kcs_smi_handlers.init_data(new_kcs->kcs_sm, &(new_kcs->io));

CHECK:CAMELCASE: Avoid CamelCase: <Signature>
#609: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1072:
+	s8	Signature[4];

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Length>
#610: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1073:
+	u32	Length;

CHECK:CAMELCASE: Avoid CamelCase: <Revision>
#611: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1074:
+	u8	Revision;

CHECK:CAMELCASE: Avoid CamelCase: <Checksum>
#612: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1075:
+	u8	Checksum;

CHECK:CAMELCASE: Avoid CamelCase: <OEMTableID>
#614: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1077:
+	s8	OEMTableID[8];

CHECK:CAMELCASE: Avoid CamelCase: <OEMRevision>
#615: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1078:
+	s8	OEMRevision[4];

CHECK:CAMELCASE: Avoid CamelCase: <CreatorID>
#616: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1079:
+	s8	CreatorID[4];

CHECK:CAMELCASE: Avoid CamelCase: <CreatorRevision>
#617: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1080:
+	s8	CreatorRevision[4];

CHECK:CAMELCASE: Avoid CamelCase: <InterfaceType>
#618: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1081:
+	u8	InterfaceType[2];

CHECK:CAMELCASE: Avoid CamelCase: <SpecificationRevision>
#619: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1082:
+	s16	SpecificationRevision;

CHECK:CAMELCASE: Avoid CamelCase: <InterruptType>
#626: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1088:
+	u8	InterruptType;

CHECK:CAMELCASE: Avoid CamelCase: <Reserved>
#634: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1094:
+	s16	Reserved;

ERROR:CODE_INDENT: code indent should use tabs where possible
#639: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1097:
+           APIC/SAPIC interrupt. */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#639: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1097:
+           APIC/SAPIC interrupt. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:CAMELCASE: Avoid CamelCase: <GlobalSystemInterrupt>
#640: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1098:
+	u32	GlobalSystemInterrupt;

CHECK:CAMELCASE: Avoid CamelCase: <SPMITable>
#657: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1111:
+	struct SPMITable  *spmi;

WARNING:SPLIT_STRING: quoted string split across lines
#668: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1135:
 		printk("ipmi_kcs_intf: Found ACPI-specified state machine"
+		       " at I/O address 0x%x\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#669: FILE: drivers/char/ipmi/ipmi_kcs_intf.c:1136:
+		       (unsigned int) spmi->addr.address);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#989: FILE: drivers/char/ipmi/ipmi_kcs_sm.c:477:
+	/* It's impossible for the KCS status register to be all 1's,
+	   (assuming a properly functioning, self-initialized BMC)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#991: FILE: drivers/char/ipmi/ipmi_kcs_sm.c:479:
+	   test that first. */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#993: FILE: drivers/char/ipmi/ipmi_kcs_sm.c:481:
+^I^Ireturn 1; $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1005: FILE: drivers/char/ipmi/ipmi_kcs_sm.c:491:
+struct si_sm_handlers kcs_smi_handlers =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#1105: FILE: drivers/char/ipmi/ipmi_msghandler.c:56:
+static struct proc_dir_entry *proc_ipmi_root = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1111: FILE: drivers/char/ipmi/ipmi_msghandler.c:61:
+   the max message timer.  This is in milliseconds. */

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1130: FILE: drivers/char/ipmi/ipmi_msghandler.c:121:
+struct ipmi_channel
+{

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1151: FILE: drivers/char/ipmi/ipmi_msghandler.c:202:
+	/* When we are scanning the channels for an SMI, this will
+	   tell which channel we are scanning. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1151: FILE: drivers/char/ipmi/ipmi_msghandler.c:202:
+	   tell which channel we are scanning. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1180: FILE: drivers/char/ipmi/ipmi_msghandler.c:231:
+           incremented. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1180: FILE: drivers/char/ipmi/ipmi_msghandler.c:231:
+	/* When a message times out (runs out of retransmits) this is
+           incremented. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1180: FILE: drivers/char/ipmi/ipmi_msghandler.c:231:
+           incremented. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1184: FILE: drivers/char/ipmi/ipmi_msghandler.c:235:
+           *not* included in the above count (they are expected to$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1184: FILE: drivers/char/ipmi/ipmi_msghandler.c:235:
+	/* This is like above, but for broadcasts.  Broadcasts are
+           *not* included in the above count (they are expected to

ERROR:CODE_INDENT: code indent should use tabs where possible
#1185: FILE: drivers/char/ipmi/ipmi_msghandler.c:236:
+           time out). */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1185: FILE: drivers/char/ipmi/ipmi_msghandler.c:236:
+           time out). */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1205: FILE: drivers/char/ipmi/ipmi_msghandler.c:256:
+           incremented. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1205: FILE: drivers/char/ipmi/ipmi_msghandler.c:256:
+	/* When a message times out (runs out of retransmits) this is
+           incremented. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1205: FILE: drivers/char/ipmi/ipmi_msghandler.c:256:
+           incremented. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#1244: FILE: drivers/char/ipmi/ipmi_msghandler.c:370:
+		struct ipmi_smi_watcher *w;
+		w = list_entry(entry, struct ipmi_smi_watcher, link);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1262: FILE: drivers/char/ipmi/ipmi_msghandler.c:410:
+		struct ipmi_lan_addr *lan_addr1
+			= (struct ipmi_lan_addr *) addr1;

CHECK:SPACING: No space is necessary after a cast
#1262: FILE: drivers/char/ipmi/ipmi_msghandler.c:410:
+			= (struct ipmi_lan_addr *) addr1;

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1264: FILE: drivers/char/ipmi/ipmi_msghandler.c:412:
+		struct ipmi_lan_addr *lan_addr2
+		    = (struct ipmi_lan_addr *) addr2;

CHECK:SPACING: No space is necessary after a cast
#1264: FILE: drivers/char/ipmi/ipmi_msghandler.c:412:
+		    = (struct ipmi_lan_addr *) addr2;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1267: FILE: drivers/char/ipmi/ipmi_msghandler.c:415:
+		return ((lan_addr1->remote_SWID == lan_addr2->remote_SWID)
+			&& (lan_addr1->local_SWID == lan_addr2->local_SWID)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1268: FILE: drivers/char/ipmi/ipmi_msghandler.c:416:
+			&& (lan_addr1->local_SWID == lan_addr2->local_SWID)
+			&& (lan_addr1->session_handle

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1270: FILE: drivers/char/ipmi/ipmi_msghandler.c:418:
+			    == lan_addr2->session_handle)
+			&& (lan_addr1->lun == lan_addr2->lun));

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1281: FILE: drivers/char/ipmi/ipmi_msghandler.c:451:
+		if (len < sizeof(struct ipmi_lan_addr)) {
+			return -EINVAL;
+		}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1341: FILE: drivers/char/ipmi/ipmi_msghandler.c:599:
+
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around intf->seq_lock
#1344: FILE: drivers/char/ipmi/ipmi_msghandler.c:602:
+	spin_lock_irqsave(&(intf->seq_lock), flags);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1346: FILE: drivers/char/ipmi/ipmi_msghandler.c:604:
+           while a message is outstanding. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1346: FILE: drivers/char/ipmi/ipmi_msghandler.c:604:
+	/* We do this verification because the user can be deleted
+           while a message is outstanding. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1346: FILE: drivers/char/ipmi/ipmi_msghandler.c:604:
+           while a message is outstanding. */

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1347: FILE: drivers/char/ipmi/ipmi_msghandler.c:605:
+	if ((intf->seq_table[seq].inuse)
+	    && (intf->seq_table[seq].seqid == seqid))
+	{

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'intf->seq_table[seq].inuse'
#1347: FILE: drivers/char/ipmi/ipmi_msghandler.c:605:
+	if ((intf->seq_table[seq].inuse)
+	    && (intf->seq_table[seq].seqid == seqid))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'intf->seq_table[seq].seqid == seqid'
#1347: FILE: drivers/char/ipmi/ipmi_msghandler.c:605:
+	if ((intf->seq_table[seq].inuse)
+	    && (intf->seq_table[seq].seqid == seqid))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1348: FILE: drivers/char/ipmi/ipmi_msghandler.c:606:
+	if ((intf->seq_table[seq].inuse)
+	    && (intf->seq_table[seq].seqid == seqid))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around intf->seq_table[seq]
#1350: FILE: drivers/char/ipmi/ipmi_msghandler.c:608:
+		struct seq_table *ent = &(intf->seq_table[seq]);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around intf->seq_lock
#1356: FILE: drivers/char/ipmi/ipmi_msghandler.c:614:
+	spin_unlock_irqrestore(&(intf->seq_lock), flags);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_msg->data[4]
#1391: FILE: drivers/char/ipmi/ipmi_msghandler.c:962:
+	smi_msg->data[6] = ipmb_checksum(&(smi_msg->data[4]), 2);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_msg->data[10]
#1398: FILE: drivers/char/ipmi/ipmi_msghandler.c:969:
+		memcpy(&(smi_msg->data[10]), msg->data,

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1404: FILE: drivers/char/ipmi/ipmi_msghandler.c:975:
+	smi_msg->data[smi_msg->data_size]
+		= ipmb_checksum(&(smi_msg->data[7]),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around smi_msg->data[7]
#1404: FILE: drivers/char/ipmi/ipmi_msghandler.c:975:
+		= ipmb_checksum(&(smi_msg->data[7]),

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1405: FILE: drivers/char/ipmi/ipmi_msghandler.c:976:
+				smi_msg->data_size-7);
 				                  ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1408: FILE: drivers/char/ipmi/ipmi_msghandler.c:979:
+	/* Add on the checksum size and the offset from the
+	   broadcast. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1408: FILE: drivers/char/ipmi/ipmi_msghandler.c:979:
+	   broadcast. */

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1520: FILE: drivers/char/ipmi/ipmi_msghandler.c:1103:
+		if (intf->channels[addr->channel].medium
+		    != IPMI_CHANNEL_MEDIUM_IPMB)
+		{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1530: FILE: drivers/char/ipmi/ipmi_msghandler.c:1113:
+		if (retries < 0) {
+		    if (addr->addr_type == IPMI_IPMB_BROADCAST_ADDR_TYPE)

WARNING:TABSTOP: Statements should start on a tabstop
#1531: FILE: drivers/char/ipmi/ipmi_msghandler.c:1114:
+		    if (addr->addr_type == IPMI_IPMB_BROADCAST_ADDR_TYPE)

WARNING:TABSTOP: Statements should start on a tabstop
#1533: FILE: drivers/char/ipmi/ipmi_msghandler.c:1116:
+		    else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1548: FILE: drivers/char/ipmi/ipmi_msghandler.c:1127:
 
+

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1550: FILE: drivers/char/ipmi/ipmi_msghandler.c:1129:
+		if (retry_time_ms == 0)
+		    retry_time_ms = 1000;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1583: FILE: drivers/char/ipmi/ipmi_msghandler.c:1164:
+			/* Save the receive message so we can use it
+			   to deliver the response. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1583: FILE: drivers/char/ipmi/ipmi_msghandler.c:1164:
+			   to deliver the response. */

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1623: FILE: drivers/char/ipmi/ipmi_msghandler.c:1228:
+		if ((intf->channels[addr->channel].medium
+		    != IPMI_CHANNEL_MEDIUM_8023LAN)
+		    && (intf->channels[addr->channel].medium
+			!= IPMI_CHANNEL_MEDIUM_ASYNC))
+		{

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'intf->channels[addr->channel].medium
 		    != IPMI_CHANNEL_MEDIUM_8023LAN'
#1623: FILE: drivers/char/ipmi/ipmi_msghandler.c:1228:
+		if ((intf->channels[addr->channel].medium
+		    != IPMI_CHANNEL_MEDIUM_8023LAN)
+		    && (intf->channels[addr->channel].medium
+			!= IPMI_CHANNEL_MEDIUM_ASYNC))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'intf->channels[addr->channel].medium
 			!= IPMI_CHANNEL_MEDIUM_ASYNC'
#1623: FILE: drivers/char/ipmi/ipmi_msghandler.c:1228:
+		if ((intf->channels[addr->channel].medium
+		    != IPMI_CHANNEL_MEDIUM_8023LAN)
+		    && (intf->channels[addr->channel].medium
+			!= IPMI_CHANNEL_MEDIUM_ASYNC))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1625: FILE: drivers/char/ipmi/ipmi_msghandler.c:1230:
+		    != IPMI_CHANNEL_MEDIUM_8023LAN)
+		    && (intf->channels[addr->channel].medium

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1638: FILE: drivers/char/ipmi/ipmi_msghandler.c:1243:
+		if (retry_time_ms == 0)
+		    retry_time_ms = 1000;

CHECK:SPACING: No space is necessary after a cast
#1650: FILE: drivers/char/ipmi/ipmi_msghandler.c:1255:
+		lan_addr = (struct ipmi_lan_addr *) addr;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1663: FILE: drivers/char/ipmi/ipmi_msghandler.c:1268:
+                           from msgid. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1663: FILE: drivers/char/ipmi/ipmi_msghandler.c:1268:
+			/* It's a response, so use the user's sequence
+                           from msgid. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1663: FILE: drivers/char/ipmi/ipmi_msghandler.c:1268:
+                           from msgid. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1671: FILE: drivers/char/ipmi/ipmi_msghandler.c:1276:
+			/* Save the receive message so we can use it
+			   to deliver the response. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1671: FILE: drivers/char/ipmi/ipmi_msghandler.c:1276:
+			   to deliver the response. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around intf->seq_lock
#1676: FILE: drivers/char/ipmi/ipmi_msghandler.c:1281:
+			spin_lock_irqsave(&(intf->seq_lock), flags);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1683: FILE: drivers/char/ipmi/ipmi_msghandler.c:1288:
+                           timeout and 4 retries. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1683: FILE: drivers/char/ipmi/ipmi_msghandler.c:1288:
+			/* Create a sequence number with a 1 second
+                           timeout and 4 retries. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1683: FILE: drivers/char/ipmi/ipmi_msghandler.c:1288:
+                           timeout and 4 retries. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1693: FILE: drivers/char/ipmi/ipmi_msghandler.c:1298:
+				/* We have used up all the sequence numbers,
+				   probably, so abort. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1693: FILE: drivers/char/ipmi/ipmi_msghandler.c:1298:
+				   probably, so abort. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around intf->seq_lock
#1694: FILE: drivers/char/ipmi/ipmi_msghandler.c:1299:
+				spin_unlock_irqrestore(&(intf->seq_lock),

ERROR:CODE_INDENT: code indent should use tabs where possible
#1700: FILE: drivers/char/ipmi/ipmi_msghandler.c:1305:
+                           so that when the send message response$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1700: FILE: drivers/char/ipmi/ipmi_msghandler.c:1305:
+			/* Store the sequence number in the message,
+                           so that when the send message response

ERROR:CODE_INDENT: code indent should use tabs where possible
#1701: FILE: drivers/char/ipmi/ipmi_msghandler.c:1306:
+                           comes back we can start the timer. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1701: FILE: drivers/char/ipmi/ipmi_msghandler.c:1306:
+                           comes back we can start the timer. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1707: FILE: drivers/char/ipmi/ipmi_msghandler.c:1312:
+			/* Copy the message into the recv message data, so we
+			   can retransmit it later if necessary. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1707: FILE: drivers/char/ipmi/ipmi_msghandler.c:1312:
+			   can retransmit it later if necessary. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1714: FILE: drivers/char/ipmi/ipmi_msghandler.c:1319:
+                           to copy the completed message into the$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1714: FILE: drivers/char/ipmi/ipmi_msghandler.c:1319:
+			/* We don't unlock until here, because we need
+                           to copy the completed message into the

ERROR:CODE_INDENT: code indent should use tabs where possible
#1715: FILE: drivers/char/ipmi/ipmi_msghandler.c:1320:
+                           recv_msg before we release the lock.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1716: FILE: drivers/char/ipmi/ipmi_msghandler.c:1321:
+                           Otherwise, race conditions may bite us.  I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1717: FILE: drivers/char/ipmi/ipmi_msghandler.c:1322:
+                           know that's pretty paranoid, but I prefer$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1718: FILE: drivers/char/ipmi/ipmi_msghandler.c:1323:
+                           to be correct. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1718: FILE: drivers/char/ipmi/ipmi_msghandler.c:1323:
+                           to be correct. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around intf->seq_lock
#1719: FILE: drivers/char/ipmi/ipmi_msghandler.c:1324:
+			spin_unlock_irqrestore(&(intf->seq_lock), flags);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1739: FILE: drivers/char/ipmi/ipmi_msghandler.c:1338:
+		int m;
+		for (m=0; m<smi_msg->data_size; m++)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1739: FILE: drivers/char/ipmi/ipmi_msghandler.c:1338:
+		for (m=0; m<smi_msg->data_size; m++)
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1739: FILE: drivers/char/ipmi/ipmi_msghandler.c:1338:
+		for (m=0; m<smi_msg->data_size; m++)
 		           ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1740: FILE: drivers/char/ipmi/ipmi_msghandler.c:1339:
+			printk(" %2.2x", smi_msg->data[m]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1741: FILE: drivers/char/ipmi/ipmi_msghandler.c:1340:
+		printk("\n");

CHECK:SPACING: No space is necessary after a cast
#1835: FILE: drivers/char/ipmi/ipmi_msghandler.c:1444:
+	char       *out = (char *) page;

CHECK:SPACING: No space is necessary after a cast
#1844: FILE: drivers/char/ipmi/ipmi_msghandler.c:1453:
+	char       *out = (char *) page;

CHECK:SPACING: No space is necessary after a cast
#1854: FILE: drivers/char/ipmi/ipmi_msghandler.c:1463:
+	char       *out = (char *) page;

CHECK:SPACING: No space is necessary after a cast
#1910: FILE: drivers/char/ipmi/ipmi_msghandler.c:1519:
+	return (out - ((char *) page));

CHECK:BRACES: braces {} should be used on all arms of this statement
#1921: FILE: drivers/char/ipmi/ipmi_msghandler.c:1530:
+	if (!file)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1923: FILE: drivers/char/ipmi/ipmi_msghandler.c:1532:
+	else {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1940: FILE: drivers/char/ipmi/ipmi_msghandler.c:1549:
+	if (!smi->proc_dir)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1942: FILE: drivers/char/ipmi/ipmi_msghandler.c:1551:
+	else {

CHECK:SPACING: No space is necessary after a cast
#1982: FILE: drivers/char/ipmi/ipmi_msghandler.c:1591:
+			      (struct ipmi_addr *) &si,

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2000: FILE: drivers/char/ipmi/ipmi_msghandler.c:1609:
+	if ((msg->rsp[0] == (IPMI_NETFN_APP_RESPONSE << 2))
+	    && (msg->rsp[1] == IPMI_GET_CHANNEL_INFO_CMD))
+	{

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msg->rsp[1] == IPMI_GET_CHANNEL_INFO_CMD'
#2000: FILE: drivers/char/ipmi/ipmi_msghandler.c:1609:
+	if ((msg->rsp[0] == (IPMI_NETFN_APP_RESPONSE << 2))
+	    && (msg->rsp[1] == IPMI_GET_CHANNEL_INFO_CMD))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2001: FILE: drivers/char/ipmi/ipmi_msghandler.c:1610:
+	if ((msg->rsp[0] == (IPMI_NETFN_APP_RESPONSE << 2))
+	    && (msg->rsp[1] == IPMI_GET_CHANNEL_INFO_CMD))

WARNING:INDENTED_LABEL: labels should not be indented
#2016: FILE: drivers/char/ipmi/ipmi_msghandler.c:1625:
+	next_channel:

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2025: FILE: drivers/char/ipmi/ipmi_msghandler.c:1634:
+			printk(KERN_WARNING "ipmi_msghandler: Error sending"

WARNING:SPLIT_STRING: quoted string split across lines
#2026: FILE: drivers/char/ipmi/ipmi_msghandler.c:1635:
+			printk(KERN_WARNING "ipmi_msghandler: Error sending"
+			       "channel information: 0x%x\n",

WARNING:MISSING_SPACE: break quoted strings at a space character
#2026: FILE: drivers/char/ipmi/ipmi_msghandler.c:1635:
+			printk(KERN_WARNING "ipmi_msghandler: Error sending"
+			       "channel information: 0x%x\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around new_intf->counter_lock
#2062: FILE: drivers/char/ipmi/ipmi_msghandler.c:1701:
+			spin_lock_init(&(new_intf->counter_lock));

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2084: FILE: drivers/char/ipmi/ipmi_msghandler.c:1719:
+		if ((version_major > 1)
+		    || ((version_major == 1) && (version_minor >= 5)))
+		{

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'version_major > 1'
#2084: FILE: drivers/char/ipmi/ipmi_msghandler.c:1719:
+		if ((version_major > 1)
+		    || ((version_major == 1) && (version_minor >= 5)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'version_major == 1'
#2084: FILE: drivers/char/ipmi/ipmi_msghandler.c:1719:
+		if ((version_major > 1)
+		    || ((version_major == 1) && (version_minor >= 5)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'version_minor >= 5'
#2084: FILE: drivers/char/ipmi/ipmi_msghandler.c:1719:
+		if ((version_major > 1)
+		    || ((version_major == 1) && (version_minor >= 5)))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2085: FILE: drivers/char/ipmi/ipmi_msghandler.c:1720:
+		if ((version_major > 1)
+		    || ((version_major == 1) && (version_minor >= 5)))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2088: FILE: drivers/char/ipmi/ipmi_msghandler.c:1723:
+			/* Start scanning the channels to see what is
+			   available. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2088: FILE: drivers/char/ipmi/ipmi_msghandler.c:1723:
+			   available. */

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#2096: FILE: drivers/char/ipmi/ipmi_msghandler.c:1731:
+			(*intf)->channels[0].protocol
+				= IPMI_CHANNEL_PROTOCOL_IPMB;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2099: FILE: drivers/char/ipmi/ipmi_msghandler.c:1734:
+			/* Call all the watcher interfaces to tell
+			   them that a new interface is available. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2099: FILE: drivers/char/ipmi/ipmi_msghandler.c:1734:
+			   them that a new interface is available. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#2101: FILE: drivers/char/ipmi/ipmi_msghandler.c:1736:
+  ^I^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2101: FILE: drivers/char/ipmi/ipmi_msghandler.c:1736:
+  ^I^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2101: FILE: drivers/char/ipmi/ipmi_msghandler.c:1736:
+  ^I^I}$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2141: FILE: drivers/char/ipmi/ipmi_msghandler.c:1849:
+	 * completion code. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#2229: FILE: drivers/char/ipmi/ipmi_msghandler.c:1972:
+		int m;
+		printk("Invalid command:");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2229: FILE: drivers/char/ipmi/ipmi_msghandler.c:1972:
+		printk("Invalid command:");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2230: FILE: drivers/char/ipmi/ipmi_msghandler.c:1973:
+		for (m=0; m<msg->data_size; m++)
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#2230: FILE: drivers/char/ipmi/ipmi_msghandler.c:1973:
+		for (m=0; m<msg->data_size; m++)
 		           ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2231: FILE: drivers/char/ipmi/ipmi_msghandler.c:1974:
+			printk(" %2.2x", msg->data[m]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2232: FILE: drivers/char/ipmi/ipmi_msghandler.c:1975:
+		printk("\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2261: FILE: drivers/char/ipmi/ipmi_msghandler.c:2003:
+			/* Extract the rest of the message information
+			   from the IPMB header.*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2261: FILE: drivers/char/ipmi/ipmi_msghandler.c:2003:
+			   from the IPMB header.*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2270: FILE: drivers/char/ipmi/ipmi_msghandler.c:2012:
+			/* We chop off 10, not 9 bytes because the checksum
+			   at the end also needs to be removed. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2270: FILE: drivers/char/ipmi/ipmi_msghandler.c:2012:
+			   at the end also needs to be removed. */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2285: FILE: drivers/char/ipmi/ipmi_msghandler.c:2031:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2287: FILE: drivers/char/ipmi/ipmi_msghandler.c:2033:
+	 * completion code. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2310: FILE: drivers/char/ipmi/ipmi_msghandler.c:2056:
+	/* It's a response from a remote entity.  Look up the sequence
+	   number and handle the response. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2310: FILE: drivers/char/ipmi/ipmi_msghandler.c:2056:
+	   number and handle the response. */

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2311: FILE: drivers/char/ipmi/ipmi_msghandler.c:2057:
+	if (intf_find_seq(intf,
+			  msg->rsp[9] >> 2,
+			  msg->rsp[3] & 0x0f,
+			  msg->rsp[10],
+			  (msg->rsp[6] >> 2) & (~1),
+			  (struct ipmi_addr *) &(lan_addr),
+			  &recv_msg))
+	{

CHECK:SPACING: No space is necessary after a cast
#2316: FILE: drivers/char/ipmi/ipmi_msghandler.c:2062:
+			  (struct ipmi_addr *) &(lan_addr),

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2320: FILE: drivers/char/ipmi/ipmi_msghandler.c:2066:
+		/* We were unable to find the sequence number,
+		   so just nuke the message. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2320: FILE: drivers/char/ipmi/ipmi_msghandler.c:2066:
+		   so just nuke the message. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around msg->rsp[11]
#2328: FILE: drivers/char/ipmi/ipmi_msghandler.c:2074:
+	       &(msg->rsp[11]),

ERROR:CODE_INDENT: code indent should use tabs where possible
#2331: FILE: drivers/char/ipmi/ipmi_msghandler.c:2077:
+           for netfn, which needs to be the response that was$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2331: FILE: drivers/char/ipmi/ipmi_msghandler.c:2077:
+	/* The other fields matched, so no need to set them, except
+           for netfn, which needs to be the response that was

ERROR:CODE_INDENT: code indent should use tabs where possible
#2332: FILE: drivers/char/ipmi/ipmi_msghandler.c:2078:
+           returned, not the request value. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2332: FILE: drivers/char/ipmi/ipmi_msghandler.c:2078:
+           returned, not the request value. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around intf->cmd_rcvr_lock
#2374: FILE: drivers/char/ipmi/ipmi_msghandler.c:2120:
+	read_lock(&(intf->cmd_rcvr_lock));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2375: FILE: drivers/char/ipmi/ipmi_msghandler.c:2121:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around intf->cmd_rcvrs
#2380: FILE: drivers/char/ipmi/ipmi_msghandler.c:2126:
+		list_for_each(entry, &(intf->cmd_rcvrs)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rcvr->netfn == netfn'
#2382: FILE: drivers/char/ipmi/ipmi_msghandler.c:2128:
+			if ((rcvr->netfn == netfn) && (rcvr->cmd == cmd)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rcvr->cmd == cmd'
#2382: FILE: drivers/char/ipmi/ipmi_msghandler.c:2128:
+			if ((rcvr->netfn == netfn) && (rcvr->cmd == cmd)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around intf->cmd_rcvr_lock
#2388: FILE: drivers/char/ipmi/ipmi_msghandler.c:2134:
+	read_unlock(&(intf->cmd_rcvr_lock));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!user"
#2390: FILE: drivers/char/ipmi/ipmi_msghandler.c:2136:
+	if (user == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2397: FILE: drivers/char/ipmi/ipmi_msghandler.c:2143:
+		rv = 0; /* Don't do anything with these messages, just
+			   allow them to be freed. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2397: FILE: drivers/char/ipmi/ipmi_msghandler.c:2143:
+			   allow them to be freed. */

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#2405: FILE: drivers/char/ipmi/ipmi_msghandler.c:2151:
+		if (! recv_msg) {
 		    ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#2407: FILE: drivers/char/ipmi/ipmi_msghandler.c:2153:
+                           message, so requeue it for handling$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2407: FILE: drivers/char/ipmi/ipmi_msghandler.c:2153:
+			/* We couldn't allocate memory for the
+                           message, so requeue it for handling

ERROR:CODE_INDENT: code indent should use tabs where possible
#2408: FILE: drivers/char/ipmi/ipmi_msghandler.c:2154:
+                           later. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2408: FILE: drivers/char/ipmi/ipmi_msghandler.c:2154:
+                           later. */

CHECK:SPACING: No space is necessary after a cast
#2412: FILE: drivers/char/ipmi/ipmi_msghandler.c:2158:
+			lan_addr = (struct ipmi_lan_addr *) &recv_msg->addr;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2422: FILE: drivers/char/ipmi/ipmi_msghandler.c:2168:
+			/* Extract the rest of the message information
+			   from the IPMB header.*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2422: FILE: drivers/char/ipmi/ipmi_msghandler.c:2168:
+			   from the IPMB header.*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2431: FILE: drivers/char/ipmi/ipmi_msghandler.c:2177:
+			/* We chop off 12, not 11 bytes because the checksum
+			   at the end also needs to be removed. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2431: FILE: drivers/char/ipmi/ipmi_msghandler.c:2177:
+			   at the end also needs to be removed. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around msg->rsp[11]
#2434: FILE: drivers/char/ipmi/ipmi_msghandler.c:2180:
+			       &(msg->rsp[11]),

WARNING:LINE_SPACING: Missing a blank line after declarations
#2500: FILE: drivers/char/ipmi/ipmi_msghandler.c:2375:
+	int m;
+	printk("Recv:");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2500: FILE: drivers/char/ipmi/ipmi_msghandler.c:2375:
+	printk("Recv:");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2501: FILE: drivers/char/ipmi/ipmi_msghandler.c:2376:
+	for (m=0; m<msg->rsp_size; m++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#2501: FILE: drivers/char/ipmi/ipmi_msghandler.c:2376:
+	for (m=0; m<msg->rsp_size; m++)
 	           ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2502: FILE: drivers/char/ipmi/ipmi_msghandler.c:2377:
+		printk(" %2.2x", msg->rsp[m]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2503: FILE: drivers/char/ipmi/ipmi_msghandler.c:2378:
+	printk("\n");

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2516: FILE: drivers/char/ipmi/ipmi_msghandler.c:2383:
+	} else if ((msg->rsp[0] == ((IPMI_NETFN_APP_REQUEST|1) << 2))
+		   && (msg->rsp[1] == IPMI_SEND_MSG_CMD)
+		   && (msg->user_data != NULL))
+	{

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2516: FILE: drivers/char/ipmi/ipmi_msghandler.c:2383:
+	} else if ((msg->rsp[0] == ((IPMI_NETFN_APP_REQUEST|1) << 2))
 	                                                   ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2517: FILE: drivers/char/ipmi/ipmi_msghandler.c:2384:
+	} else if ((msg->rsp[0] == ((IPMI_NETFN_APP_REQUEST|1) << 2))
+		   && (msg->rsp[1] == IPMI_SEND_MSG_CMD)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2518: FILE: drivers/char/ipmi/ipmi_msghandler.c:2385:
+		   && (msg->rsp[1] == IPMI_SEND_MSG_CMD)
+		   && (msg->user_data != NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "msg->user_data"
#2518: FILE: drivers/char/ipmi/ipmi_msghandler.c:2385:
+		   && (msg->user_data != NULL))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2521: FILE: drivers/char/ipmi/ipmi_msghandler.c:2388:
+		/* It's a response to a response we sent.  For this we
+		   deliver a send message response to the user. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2521: FILE: drivers/char/ipmi/ipmi_msghandler.c:2388:
+		   deliver a send message response to the user. */

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2541: FILE: drivers/char/ipmi/ipmi_msghandler.c:2408:
+	} else if ((msg->rsp[0] == ((IPMI_NETFN_APP_REQUEST|1) << 2))
+		   && (msg->rsp[1] == IPMI_GET_MSG_CMD))
+	{

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2541: FILE: drivers/char/ipmi/ipmi_msghandler.c:2408:
+	} else if ((msg->rsp[0] == ((IPMI_NETFN_APP_REQUEST|1) << 2))
 	                                                   ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2542: FILE: drivers/char/ipmi/ipmi_msghandler.c:2409:
+	} else if ((msg->rsp[0] == ((IPMI_NETFN_APP_REQUEST|1) << 2))
+		   && (msg->rsp[1] == IPMI_GET_MSG_CMD))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2564: FILE: drivers/char/ipmi/ipmi_msghandler.c:2423:
+				/* It's a response, so find the
+				   requesting message and send it up. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2564: FILE: drivers/char/ipmi/ipmi_msghandler.c:2423:
+				   requesting message and send it up. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2568: FILE: drivers/char/ipmi/ipmi_msghandler.c:2427:
+				/* It's a command to the SMS from some other
+				   entity.  Handle that. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2568: FILE: drivers/char/ipmi/ipmi_msghandler.c:2427:
+				   entity.  Handle that. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2577: FILE: drivers/char/ipmi/ipmi_msghandler.c:2436:
+				/* It's a response, so find the
+				   requesting message and send it up. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2577: FILE: drivers/char/ipmi/ipmi_msghandler.c:2436:
+				   requesting message and send it up. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2581: FILE: drivers/char/ipmi/ipmi_msghandler.c:2440:
+				/* It's a command to the SMS from some other
+				   entity.  Handle that. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2581: FILE: drivers/char/ipmi/ipmi_msghandler.c:2440:
+				   entity.  Handle that. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2588: FILE: drivers/char/ipmi/ipmi_msghandler.c:2447:
+			 * free the message. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msg->data_size >= 2'
#2611: FILE: drivers/char/ipmi/ipmi_msghandler.c:2475:
+	if ((msg->data_size >= 2)
+	    && (msg->data[0] == (IPMI_NETFN_APP_REQUEST << 2))
+	    && (msg->data[1] == IPMI_SEND_MSG_CMD)
+	    && (msg->user_data == NULL)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msg->data[1] == IPMI_SEND_MSG_CMD'
#2611: FILE: drivers/char/ipmi/ipmi_msghandler.c:2475:
+	if ((msg->data_size >= 2)
+	    && (msg->data[0] == (IPMI_NETFN_APP_REQUEST << 2))
+	    && (msg->data[1] == IPMI_SEND_MSG_CMD)
+	    && (msg->user_data == NULL)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msg->user_data == NULL'
#2611: FILE: drivers/char/ipmi/ipmi_msghandler.c:2475:
+	if ((msg->data_size >= 2)
+	    && (msg->data[0] == (IPMI_NETFN_APP_REQUEST << 2))
+	    && (msg->data[1] == IPMI_SEND_MSG_CMD)
+	    && (msg->user_data == NULL)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2612: FILE: drivers/char/ipmi/ipmi_msghandler.c:2476:
+	if ((msg->data_size >= 2)
+	    && (msg->data[0] == (IPMI_NETFN_APP_REQUEST << 2))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2613: FILE: drivers/char/ipmi/ipmi_msghandler.c:2477:
+	    && (msg->data[0] == (IPMI_NETFN_APP_REQUEST << 2))
+	    && (msg->data[1] == IPMI_SEND_MSG_CMD)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2614: FILE: drivers/char/ipmi/ipmi_msghandler.c:2478:
+	    && (msg->data[1] == IPMI_SEND_MSG_CMD)
+	    && (msg->user_data == NULL)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!msg->user_data"
#2614: FILE: drivers/char/ipmi/ipmi_msghandler.c:2478:
+	    && (msg->user_data == NULL)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#2616: FILE: drivers/char/ipmi/ipmi_msghandler.c:2480:
+                   the timer for these.  The user_data will not be$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2616: FILE: drivers/char/ipmi/ipmi_msghandler.c:2480:
+		/* This is the local response to a command send, start
+                   the timer for these.  The user_data will not be

ERROR:CODE_INDENT: code indent should use tabs where possible
#2617: FILE: drivers/char/ipmi/ipmi_msghandler.c:2481:
+                   NULL if this is a response send, and we will let$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2618: FILE: drivers/char/ipmi/ipmi_msghandler.c:2482:
+                   response sends just go through. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2618: FILE: drivers/char/ipmi/ipmi_msghandler.c:2482:
+                   response sends just go through. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#2621: FILE: drivers/char/ipmi/ipmi_msghandler.c:2485:
+                   that mean basically we can try again later), we$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2621: FILE: drivers/char/ipmi/ipmi_msghandler.c:2485:
+		/* Check for errors, if we get certain errors (ones
+                   that mean basically we can try again later), we

ERROR:CODE_INDENT: code indent should use tabs where possible
#2622: FILE: drivers/char/ipmi/ipmi_msghandler.c:2486:
+                   ignore them and start the timer.  Otherwise we$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2623: FILE: drivers/char/ipmi/ipmi_msghandler.c:2487:
+                   report the error immediately. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2623: FILE: drivers/char/ipmi/ipmi_msghandler.c:2487:
+                   report the error immediately. */

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2624: FILE: drivers/char/ipmi/ipmi_msghandler.c:2488:
+		if ((msg->rsp_size >= 3) && (msg->rsp[2] != 0)
+		    && (msg->rsp[2] != IPMI_NODE_BUSY_ERR)
+		    && (msg->rsp[2] != IPMI_LOST_ARBITRATION_ERR))
+		{

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msg->rsp_size >= 3'
#2624: FILE: drivers/char/ipmi/ipmi_msghandler.c:2488:
+		if ((msg->rsp_size >= 3) && (msg->rsp[2] != 0)
+		    && (msg->rsp[2] != IPMI_NODE_BUSY_ERR)
+		    && (msg->rsp[2] != IPMI_LOST_ARBITRATION_ERR))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msg->rsp[2] != 0'
#2624: FILE: drivers/char/ipmi/ipmi_msghandler.c:2488:
+		if ((msg->rsp_size >= 3) && (msg->rsp[2] != 0)
+		    && (msg->rsp[2] != IPMI_NODE_BUSY_ERR)
+		    && (msg->rsp[2] != IPMI_LOST_ARBITRATION_ERR))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msg->rsp[2] != IPMI_NODE_BUSY_ERR'
#2624: FILE: drivers/char/ipmi/ipmi_msghandler.c:2488:
+		if ((msg->rsp_size >= 3) && (msg->rsp[2] != 0)
+		    && (msg->rsp[2] != IPMI_NODE_BUSY_ERR)
+		    && (msg->rsp[2] != IPMI_LOST_ARBITRATION_ERR))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'msg->rsp[2] != IPMI_LOST_ARBITRATION_ERR'
#2624: FILE: drivers/char/ipmi/ipmi_msghandler.c:2488:
+		if ((msg->rsp_size >= 3) && (msg->rsp[2] != 0)
+		    && (msg->rsp[2] != IPMI_NODE_BUSY_ERR)
+		    && (msg->rsp[2] != IPMI_LOST_ARBITRATION_ERR))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2625: FILE: drivers/char/ipmi/ipmi_msghandler.c:2489:
+		if ((msg->rsp_size >= 3) && (msg->rsp[2] != 0)
+		    && (msg->rsp[2] != IPMI_NODE_BUSY_ERR)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2626: FILE: drivers/char/ipmi/ipmi_msghandler.c:2490:
+		    && (msg->rsp[2] != IPMI_NODE_BUSY_ERR)
+		    && (msg->rsp[2] != IPMI_LOST_ARBITRATION_ERR))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2636: FILE: drivers/char/ipmi/ipmi_msghandler.c:2500:
+				  == IPMI_CHANNEL_MEDIUM_8023LAN)
+				 || (intf->channels[chan].medium

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2697: FILE: drivers/char/ipmi/ipmi_msghandler.c:2720:
+/* Request events from the queue every second (this is the number of
+   IPMI_TIMEOUT_TIMES between event requests).  Hopefully, in the

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2699: FILE: drivers/char/ipmi/ipmi_msghandler.c:2722:
+   the queue and this silliness can go away. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2792: FILE: drivers/char/ipmi/ipmi_msghandler.c:3060:
+	printk(KERN_INFO "ipmi message handler version "

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#2800: FILE: drivers/char/ipmi/ipmi_msghandler.c:3068:
+	if (!proc_ipmi_root) {
+	    printk("Unable to create IPMI proc dir");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2801: FILE: drivers/char/ipmi/ipmi_msghandler.c:3069:
+	    printk("Unable to create IPMI proc dir");

WARNING:TABSTOP: Statements should start on a tabstop
#2802: FILE: drivers/char/ipmi/ipmi_msghandler.c:3070:
+	    return -ENOMEM;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2849: FILE: drivers/char/ipmi/ipmi_si_sm.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2881: FILE: drivers/char/ipmi/ipmi_si_sm.h:33:
+ *  with this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2882: FILE: drivers/char/ipmi/ipmi_si_sm.h:34:
+ *  675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2886: FILE: drivers/char/ipmi/ipmi_si_sm.h:38:
+/* This is defined by the state machines themselves, it is an opaque
+   data type for them to use. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2886: FILE: drivers/char/ipmi/ipmi_si_sm.h:38:
+   data type for them to use. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2890: FILE: drivers/char/ipmi/ipmi_si_sm.h:42:
+/* The structure for doing I/O in the state machine.  The state
+   machine doesn't have the actual I/O routines, they are done through

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2891: FILE: drivers/char/ipmi/ipmi_si_sm.h:43:
+   this interface. */

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#2893: FILE: drivers/char/ipmi/ipmi_si_sm.h:45:
+struct si_sm_io
+{

ERROR:CODE_INDENT: code indent should use tabs where possible
#2900: FILE: drivers/char/ipmi/ipmi_si_sm.h:52:
+           state machine shouldn't touch these. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2900: FILE: drivers/char/ipmi/ipmi_si_sm.h:52:
+	/* Generic info used by the actual handling routines, the
+           state machine shouldn't touch these. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2900: FILE: drivers/char/ipmi/ipmi_si_sm.h:52:
+           state machine shouldn't touch these. */

ERROR:OPEN_BRACE: open brace '{' following enum go on the same line
#2907: FILE: drivers/char/ipmi/ipmi_si_sm.h:59:
+enum si_sm_result
+{

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2914: FILE: drivers/char/ipmi/ipmi_si_sm.h:66:
+	SI_SM_ATTN		/* The hardware is asserting attn and the
+				   state machine is idle. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2914: FILE: drivers/char/ipmi/ipmi_si_sm.h:66:
+				   state machine is idle. */

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#2919: FILE: drivers/char/ipmi/ipmi_si_sm.h:71:
+struct si_sm_handlers
+{

ERROR:CODE_INDENT: code indent should use tabs where possible
#2921: FILE: drivers/char/ipmi/ipmi_si_sm.h:73:
+           upper layer can print it. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2921: FILE: drivers/char/ipmi/ipmi_si_sm.h:73:
+	/* Put the version number of the state machine here so the
+           upper layer can print it. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2921: FILE: drivers/char/ipmi/ipmi_si_sm.h:73:
+           upper layer can print it. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#2925: FILE: drivers/char/ipmi/ipmi_si_sm.h:77:
+           reserve for the space. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2925: FILE: drivers/char/ipmi/ipmi_si_sm.h:77:
+	/* Initialize the data and return the amount of I/O space to
+           reserve for the space. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2925: FILE: drivers/char/ipmi/ipmi_si_sm.h:77:
+           reserve for the space. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2930: FILE: drivers/char/ipmi/ipmi_si_sm.h:82:
+	/* Start a new transaction in the state machine.  This will
+	   return -2 if the state machine is not idle, -1 if the size

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2932: FILE: drivers/char/ipmi/ipmi_si_sm.h:84:
+	   is successfully completed. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2937: FILE: drivers/char/ipmi/ipmi_si_sm.h:89:
+	/* Return the results after the transaction.  This will return
+	   -1 if the buffer is too small, zero if no transaction is

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2938: FILE: drivers/char/ipmi/ipmi_si_sm.h:90:
+	   present, or the actual length of the result data. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2943: FILE: drivers/char/ipmi/ipmi_si_sm.h:95:
+	/* Call this periodically (for a polled interface) or upon
+	   receiving an interrupt (for a interrupt-driven interface).

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2947: FILE: drivers/char/ipmi/ipmi_si_sm.h:99:
+	   significant.  Time is in microseconds. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#2951: FILE: drivers/char/ipmi/ipmi_si_sm.h:103:
+           on failure. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2951: FILE: drivers/char/ipmi/ipmi_si_sm.h:103:
+	/* Attempt to detect an SMI.  Returns 0 on success or nonzero
+           on failure. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2951: FILE: drivers/char/ipmi/ipmi_si_sm.h:103:
+           on failure. */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000301032.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 59 errors, 127 warnings, 107 checks, 2675 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000301032.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
