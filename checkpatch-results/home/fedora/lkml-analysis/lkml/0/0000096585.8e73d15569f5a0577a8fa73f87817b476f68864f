WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:LINE_SPACING: Missing a blank line after declarations
#53: FILE: net/sunrpc/svcauth_unix.c:113:
+	struct ip_map *new = container_of(cnew, struct ip_map, h);
+	return strcmp(orig->m_class, new->m_class) == 0

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#54: FILE: net/sunrpc/svcauth_unix.c:114:
+	return strcmp(orig->m_class, new->m_class) == 0
+		&& orig->m_addr.s_addr == new->m_addr.s_addr;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#57: FILE: net/sunrpc/svcauth_unix.c:116:
 }
+static void ip_map_init(struct cache_head *cnew, struct cache_head *citem)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#66: FILE: net/sunrpc/svcauth_unix.c:124:
 }
+static void update(struct cache_head *cnew, struct cache_head *citem)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#75: FILE: net/sunrpc/svcauth_unix.c:133:
 }
+static struct cache_head *ip_map_alloc(void)

WARNING:LINE_SPACING: Missing a blank line after declarations
#78: FILE: net/sunrpc/svcauth_unix.c:136:
+	struct ip_map *i = kmalloc(sizeof(*i), GFP_KERNEL);
+	if (i)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#130: FILE: net/sunrpc/svcauth_unix.c:215:
+	ipmp = ip_map_lookup(class,addr);
 	                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#131: FILE: net/sunrpc/svcauth_unix.c:216:
+	if (ipmp) {
[...]
 	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#133: FILE: net/sunrpc/svcauth_unix.c:218:
+		err = ip_map_update(ipmp,
+			     container_of(dom, struct unix_domain, h),

CHECK:BRACES: braces {} should be used on all arms of this statement
#189: FILE: net/sunrpc/svcauth_unix.c:301:
+	if (!udom)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#191: FILE: net/sunrpc/svcauth_unix.c:303:
+	else {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000096585.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 4 warnings, 8 checks, 230 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000096585.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
