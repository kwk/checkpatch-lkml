WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
ra.prev_page should be properly setup on entrance, and readahead_cache_hit()

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#54: FILE: include/linux/mm.h:1038:
+			struct file_ra_state *ra, struct file *filp,
 			                                       ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#54: FILE: include/linux/mm.h:1038:
+page_cache_readahead_adaptive(struct address_space *mapping,
+			struct file_ra_state *ra, struct file *filp,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!page"
#76: FILE: mm/filemap.c:880:
+			if (unlikely(page == NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#79: FILE: mm/filemap.c:883:
+						filp, prev_page, NULL,
 						^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#79: FILE: mm/filemap.c:883:
+				page_cache_readahead_adaptive(mapping, &ra,
+						filp, prev_page, NULL,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#86: FILE: mm/filemap.c:890:
+						filp, prev_page, page,
 						^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#86: FILE: mm/filemap.c:890:
+				page_cache_readahead_adaptive(mapping, &ra,
+						filp, prev_page, page,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#133: FILE: mm/filemap.c:1359:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#142: FILE: mm/filemap.c:1368:
+			page_cache_readahead_adaptive(mapping, ra,
+						file, NULL, NULL,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#147: FILE: mm/filemap.c:1373:
+			page_cache_readahead_adaptive(mapping, ra,
+						file, NULL, page,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#188: FILE: mm/readahead.c:1684:
+ * @mapping, @ra, @filp: the same as page_cache_readahead()
                    ^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#192: FILE: mm/readahead.c:1688:
+ * ^I^I[@begin_index, @end_index) is the read the caller is performing$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#193: FILE: mm/readahead.c:1689:
+ *^I ^I@index indicates the page to be read now$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#210: FILE: mm/readahead.c:1706:
+			struct file_ra_state *ra, struct file *filp,
 			                                       ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#210: FILE: mm/readahead.c:1706:
+page_cache_readahead_adaptive(struct address_space *mapping,
+			struct file_ra_state *ra, struct file *filp,

ERROR:SPACING: space required before the open parenthesis '('
#222: FILE: mm/readahead.c:1718:
+		if(!TestClearPageReadahead(page))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#226: FILE: mm/readahead.c:1722:
+			ra_account(ra, RA_EVENT_IO_CONGESTION,
+							end_index - index);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#233: FILE: mm/readahead.c:1729:
+		ra_account(ra, RA_EVENT_LOOKAHEAD_HIT,
+				ra->readahead_index - ra->lookahead_index);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#250: FILE: mm/readahead.c:1746:
+		return initial_readahead(mapping, filp, ra, size);
 		                                  ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#256: FILE: mm/readahead.c:1752:
+	if (!debug_option(disable_stateful_method) &&
+			index == ra->lookahead_index && ra_cache_hit_ok(ra))

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#257: FILE: mm/readahead.c:1753:
+		return state_based_readahead(mapping, filp, ra, page,
 		                                      ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#264: FILE: mm/readahead.c:1760:
+		return thrashing_recovery_readahead(mapping, filp, ra,
 		                                             ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#271: FILE: mm/readahead.c:1767:
+	if (!page && begin_index == index &&
+				try_read_backward(ra, index, size, ra_max))

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#272: FILE: mm/readahead.c:1768:
+		return ra_dispatch(ra, mapping, filp);
 		                                ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#278: FILE: mm/readahead.c:1774:
+	ret = try_context_based_readahead(mapping, ra, prev_page, page,
+							index, ra_min, ra_max);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#280: FILE: mm/readahead.c:1776:
+		return ra_dispatch(ra, mapping, filp);
 		                                ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#287: FILE: mm/readahead.c:1783:
+		ra_account(ra, RA_EVENT_LOOKAHEAD_NOACTION,
+						ra->readahead_index - index);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#295: FILE: mm/readahead.c:1791:
+		return ra_dispatch(ra, mapping, filp);
 		                                ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#304: FILE: mm/readahead.c:1800:
+	size = __do_page_cache_readahead(mapping, filp, index, size, 0);
 	                                          ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#308: FILE: mm/readahead.c:1804:
+	dprintk("random_read(ino=%lu, pages=%lu, index=%lu-%lu-%lu) = %lu\n",
+			mapping->host->i_ino, mapping->nrpages,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000073841.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 15 warnings, 15 checks, 283 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000073841.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
