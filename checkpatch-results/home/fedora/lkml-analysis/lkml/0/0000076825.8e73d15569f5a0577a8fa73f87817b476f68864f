WARNING:UNKNOWN_COMMIT_ID: Unknown commit id '716f8954fb3029ca2df52a986b60af8d06f093ee', maybe rebased or not pulled?
#43: 
Linus' git tree at commit 716f8954fb3029ca2df52a986b60af8d06f093ee

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#69: FILE: drivers/md/raid5.c:868:
+	int ops=0, start=0, rcw_complete=0, rmw_complete=0;
 	       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#69: FILE: drivers/md/raid5.c:868:
+	int ops=0, start=0, rcw_complete=0, rmw_complete=0;
 	                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#69: FILE: drivers/md/raid5.c:868:
+	int ops=0, start=0, rcw_complete=0, rmw_complete=0;
 	                                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#69: FILE: drivers/md/raid5.c:868:
+	int ops=0, start=0, rcw_complete=0, rmw_complete=0;
 	                                                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#71: FILE: drivers/md/raid5.c:870:
+^IPRINTK("%s, stripe %llu, state %lx\n", $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#72: FILE: drivers/md/raid5.c:871:
+	PRINTK("%s, stripe %llu, state %lx\n", 
+		__FUNCTION__, (unsigned long long)sh->sector, sh->state);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#72: FILE: drivers/md/raid5.c:871:
+		__FUNCTION__, (unsigned long long)sh->sector, sh->state);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#78: FILE: drivers/md/raid5.c:877:
+	if (!(test_bit(STRIPE_OP_RCW, &sh->state) ||
+		test_bit(STRIPE_OP_RMW, &sh->state))) {

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#79: FILE: drivers/md/raid5.c:878:
+		if (rcw==0)
 		       ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#79: FILE: drivers/md/raid5.c:878:
+		if (rcw==0)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#81: FILE: drivers/md/raid5.c:880:
+		else {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#82: FILE: drivers/md/raid5.c:881:
+			BUG_ON(!test_bit(R5_UPTODATE, &sh->dev[pd_idx].flags));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:CODE_INDENT: code indent should use tabs where possible
#87: FILE: drivers/md/raid5.c:886:
+^I      ^I^I    test_bit(STRIPE_OP_RMW, &sh->state)))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#87: FILE: drivers/md/raid5.c:886:
+^I      ^I^I    test_bit(STRIPE_OP_RMW, &sh->state)))$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#88: FILE: drivers/md/raid5.c:887:
+		BUG();

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#91: FILE: drivers/md/raid5.c:890:
+		for (i=disks ; i-- ;) {
 		      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#93: FILE: drivers/md/raid5.c:892:
+			struct r5dev *dev = &sh->dev[i];
+			if (i==pd_idx)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#93: FILE: drivers/md/raid5.c:892:
+			if (i==pd_idx)
 			     ^

CHECK:CAMELCASE: Avoid CamelCase: <R5_WantRMWXorPre>
#102: FILE: drivers/md/raid5.c:901:
+				set_bit(R5_WantRMWXorPre, &dev->flags);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <R5_WantRMWDrain>
#107: FILE: drivers/md/raid5.c:906:
+				set_bit(R5_WantRMWDrain, &dev->flags);

CHECK:CAMELCASE: Avoid CamelCase: <R5_WantRMWXorPost>
#112: FILE: drivers/md/raid5.c:911:
+				set_bit(R5_WantRMWXorPost, &dev->flags);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#118: FILE: drivers/md/raid5.c:917:
+^I^I^I^I/* synchronous block_ops routines may be done $

CHECK:BRACES: Unbalanced braces around else statement
#124: FILE: drivers/md/raid5.c:923:
+				else {

CHECK:CAMELCASE: Avoid CamelCase: <R5_WantRMWCompletion>
#125: FILE: drivers/md/raid5.c:924:
+					set_bit(R5_WantRMWCompletion,

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#135: FILE: drivers/md/raid5.c:934:
+		for (i=disks ; i-- ;) {
 		      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#136: FILE: drivers/md/raid5.c:935:
+			int pd_start=0;
 			            ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#142: FILE: drivers/md/raid5.c:941:
+			if (start && i!=pd_idx && dev->towrite) {
 			              ^

CHECK:CAMELCASE: Avoid CamelCase: <R5_WantRCWDrain>
#144: FILE: drivers/md/raid5.c:943:
+				set_bit(R5_WantRCWDrain, &dev->flags);

CHECK:CAMELCASE: Avoid CamelCase: <R5_WantZero>
#150: FILE: drivers/md/raid5.c:949:
+					set_bit(R5_WantZero, &sh->dev[pd_idx].flags);

CHECK:CAMELCASE: Avoid CamelCase: <R5_WantRCWXor>
#157: FILE: drivers/md/raid5.c:956:
+				set_bit(R5_WantRCWXor, &dev->flags);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#162: FILE: drivers/md/raid5.c:961:
+^I^I^I^I/* synchronous block_ops routines may be done $

CHECK:BRACES: Unbalanced braces around else statement
#168: FILE: drivers/md/raid5.c:967:
+				else {

CHECK:CAMELCASE: Avoid CamelCase: <R5_WantRCWCompletion>
#169: FILE: drivers/md/raid5.c:968:
+					set_bit(R5_WantRCWCompletion,

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#231: FILE: drivers/md/raid5.c:1205:
+	int overlap=0, rmw_complete=0, rcw_complete=0;
 	           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#231: FILE: drivers/md/raid5.c:1205:
+	int overlap=0, rmw_complete=0, rcw_complete=0;
 	                           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#231: FILE: drivers/md/raid5.c:1205:
+	int overlap=0, rmw_complete=0, rcw_complete=0;
 	                                           ^

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#240: FILE: drivers/md/raid5.c:1214:
+	/* it is safe to read the state bits outside the stripe lock because the
+	 * the stripe will be on the wait_for_block_ops queue or pending in the

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#244: FILE: drivers/md/raid5.c:1218:
+		PRINTK("%s: stripe %llu STRIPE_OP_RMW\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#245: FILE: drivers/md/raid5.c:1219:
+		PRINTK("%s: stripe %llu STRIPE_OP_RMW\n", __FUNCTION__,
+			(unsigned long long)sh->sector);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#249: FILE: drivers/md/raid5.c:1223:
+		for (i=disks ; i-- ;) {
 		      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#251: FILE: drivers/md/raid5.c:1225:
+			struct r5dev *dev = &sh->dev[i];
+			if (test_bit(R5_WantRMWXorPre, &dev->flags)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#251: FILE: drivers/md/raid5.c:1225:
+			if (test_bit(R5_WantRMWXorPre, &dev->flags)) {
[...]
+			} else if (test_bit(R5_WantRMWDrain, &dev->flags)) {
[...]
+			} else if (test_bit(R5_WantRMWXorPost, &dev->flags)) {
[...]
+			} else if (test_bit(R5_WantCompletion, &dev->flags))
[...]

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#261: FILE: drivers/md/raid5.c:1235:
+				BUG_ON(dev->written);

CHECK:CAMELCASE: Avoid CamelCase: <R5_WantCompletion>
#272: FILE: drivers/md/raid5.c:1246:
+			} else if (test_bit(R5_WantCompletion, &dev->flags))

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#276: FILE: drivers/md/raid5.c:1250:
+		PRINTK("%s: stripe %llu STRIPE_OP_RCW\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#277: FILE: drivers/md/raid5.c:1251:
+		PRINTK("%s: stripe %llu STRIPE_OP_RCW\n", __FUNCTION__,
+			(unsigned long long)sh->sector);

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#281: FILE: drivers/md/raid5.c:1255:
+		for (i= disks; i-- ;) {
 		      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#283: FILE: drivers/md/raid5.c:1257:
+			struct r5dev *dev = &sh->dev[i];
+			if (i==pd_idx && test_bit(R5_WantZero, &dev->flags)) {

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#283: FILE: drivers/md/raid5.c:1257:
+			if (i==pd_idx && test_bit(R5_WantZero, &dev->flags)) {
 			     ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#283: FILE: drivers/md/raid5.c:1257:
+			if (i==pd_idx && test_bit(R5_WantZero, &dev->flags)) {
[...]
+			} else if (test_bit(R5_WantRCWDrain, &dev->flags)) {
[...]
+			} else if (test_bit(R5_WantRCWXor, &dev->flags)) {
[...]
+			} else if (test_bit(R5_WantCompletion, &dev->flags))
[...]

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#292: FILE: drivers/md/raid5.c:1266:
+				BUG_ON(dev->written);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#307: FILE: drivers/md/raid5.c:1281:
+
+		}

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#317: FILE: drivers/md/raid5.c:1291:
+	if (! --sh->op_count) {
 	    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#321: FILE: drivers/md/raid5.c:1295:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#328: FILE: drivers/md/raid5.c:1302:
+		for (i= disks; i-- ;) {
 		      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#330: FILE: drivers/md/raid5.c:1304:
+			struct r5dev *dev = &sh->dev[i];
+			if (test_and_clear_bit(R5_Overlap, &dev->flags))

CHECK:CAMELCASE: Avoid CamelCase: <R5_Overlap>
#330: FILE: drivers/md/raid5.c:1304:
+			if (test_and_clear_bit(R5_Overlap, &dev->flags))

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#358: FILE: drivers/md/raid5.c:1339:
+	int block_ops=0;
 	             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#415: FILE: drivers/md/raid5.c:1613:
+	if (to_write || test_bit(STRIPE_OP_RCW, &sh->state) ||
+			test_bit(STRIPE_OP_RMW, &sh->state)) {

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#436: FILE: drivers/md/raid5.c:1685:
+		/* ...or, if we have previously started write operations we can now advance the state */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: spaces required around that '||' (ctx:WxV)
#437: FILE: drivers/md/raid5.c:1686:
+		if ((locked == 0 && (rcw == 0 ||rmw == 0) &&
 		                              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#438: FILE: drivers/md/raid5.c:1687:
+		if ((locked == 0 && (rcw == 0 ||rmw == 0) &&
+		    !test_bit(STRIPE_BIT_DELAY, &sh->state)) ||

WARNING:LINE_SPACING: Missing a blank line after declarations
#441: FILE: drivers/md/raid5.c:1690:
+			int block_ops_prev = block_ops;
+			block_ops += handle_write_operations(sh, rcw);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#444: FILE: drivers/md/raid5.c:1693:
+				for (i=disks; i--;)
 				      ^

CHECK:CAMELCASE: Avoid CamelCase: <R5_Wantwrite>
#448: FILE: drivers/md/raid5.c:1697:
+						set_bit(R5_Wantwrite, &sh->dev[i].flags);

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#449: FILE: drivers/md/raid5.c:1698:
+						if (!test_bit(R5_Insync, &sh->dev[i].flags)

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

CHECK:CAMELCASE: Avoid CamelCase: <R5_Insync>
#449: FILE: drivers/md/raid5.c:1698:
+						if (!test_bit(R5_Insync, &sh->dev[i].flags)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#450: FILE: drivers/md/raid5.c:1699:
+						if (!test_bit(R5_Insync, &sh->dev[i].flags)
+						    || (i==sh->pd_idx && failed == 0))

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#450: FILE: drivers/md/raid5.c:1699:
+						    || (i==sh->pd_idx && failed == 0))
 						         ^

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#455: FILE: drivers/md/raid5.c:1704:
+					if (atomic_read(&conf->preread_active_stripes) < IO_THRESHOLD)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#478: FILE: drivers/md/raid5.c:1862:
+^I^I/* in the memory allocation failure case $

CHECK:BRACES: braces {} should be used on all arms of this statement
#482: FILE: drivers/md/raid5.c:1866:
+		if (unlikely(!sw)) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#486: FILE: drivers/md/raid5.c:1870:
+		} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#508: FILE: drivers/md/raid5.c:1943:
+	PRINTK("stripe %llu woke up from block op wait queue\n",
+		(unsigned long long)sh->sector);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#521: FILE: drivers/md/raid5.c:2587:
+	if ((conf->block_ops_queue = __create_workqueue(conf->workqueue_name, 1))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#583: FILE: include/linux/raid/raid5.h:135:
+ * asynchronous engine and release the lock, as long as it maintains the completion $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#584: FILE: include/linux/raid/raid5.h:136:
+ * order of events.  The operations state machine sends a completion request when it $

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#605: FILE: include/linux/raid/raid5.h:165:
+	struct mutex *lock;

CHECK:CAMELCASE: Avoid CamelCase: <R5_WantBioDrain>
#620: FILE: include/linux/raid/raid5.h:183:
+#define	R5_WantBioDrain		12	/* Drain the write data out of the bio(s) */

CHECK:CAMELCASE: Avoid CamelCase: <R5_WantBioFill>
#621: FILE: include/linux/raid/raid5.h:184:
+#define	R5_WantBioFill		13	/* Copy read data into bio(s) */

CHECK:CAMELCASE: Avoid CamelCase: <R5_WantCheckGen>
#630: FILE: include/linux/raid/raid5.h:193:
+#define	R5_WantCheckGen		R5_WantRCWXor

CHECK:CAMELCASE: Avoid CamelCase: <R5_WantCheckVerify>
#631: FILE: include/linux/raid/raid5.h:194:
+#define	R5_WantCheckVerify	18	/* Verify the parity sums to zero */

CHECK:CAMELCASE: Avoid CamelCase: <R5_WantComputeBlockPrep>
#632: FILE: include/linux/raid/raid5.h:195:
+#define	R5_WantComputeBlockPrep	19	/* Hold off state transitions until DD ready */

CHECK:CAMELCASE: Avoid CamelCase: <R5_WantComputeBlockXor>
#633: FILE: include/linux/raid/raid5.h:196:
+#define	R5_WantComputeBlockXor	20	/* Recover block via xor */

CHECK:CAMELCASE: Avoid CamelCase: <R5_Consistent>
#634: FILE: include/linux/raid/raid5.h:197:
+#define	R5_Consistent		21	/* Block is HW DMA-able */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#658: FILE: include/linux/raid/raid5.h:277:
+	void (*do_block_ops)(void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000076825.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 31 errors, 19 warnings, 37 checks, 590 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000076825.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
