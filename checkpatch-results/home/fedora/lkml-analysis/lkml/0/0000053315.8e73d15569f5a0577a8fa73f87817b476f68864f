WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#65: FILE: arch/i386/kernel/acpi/boot.c:485:
+		extern void eisa_set_level_irq(unsigned int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#65: FILE: arch/i386/kernel/acpi/boot.c:485:
+		extern void eisa_set_level_irq(unsigned int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: drivers/char/cyclades.c:1020:
+  int intr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: drivers/char/cyclades.c:1026:
+    intr = probe_irq_off(probe_irq_on());$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: drivers/char/cyclades.c:1050:
+    intr = probe_irq_off(irqs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: drivers/char/cyclades.c:1063:
+    return (intr > 0) ? intr : 0;$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#149: FILE: drivers/char/cyclades.c:1092:
+	printk("cyy_interrupt: spurious interrupt %d\n\r", intr);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'cyy_interrupt', this function's name, in a string
#149: FILE: drivers/char/cyclades.c:1092:
+	printk("cyy_interrupt: spurious interrupt %d\n\r", intr);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#165: FILE: drivers/char/cyclades.c:1823:
+	printk("cyz_interrupt: spurious interrupt %d\n\r", intr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#173: FILE: drivers/char/cyclades.c:1830:
+	printk("cyz_interrupt: board not yet loaded (IRQ%d).\n\r", intr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#185: FILE: drivers/char/esp.c:619:
+static irqreturn_t rs_interrupt_single(int intr, void *dev_id,
 					struct pt_regs *regs)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#193: FILE: drivers/char/esp.c:626:
+	printk("rs_interrupt_single(%d)...", intr);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rs_interrupt_single', this function's name, in a string
#193: FILE: drivers/char/esp.c:626:
+	printk("rs_interrupt_single(%d)...", intr);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#204: FILE: drivers/char/synclink.c:1701:
+ * ^Iintr^I^Iinterrupt number that caused interrupt$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#220: FILE: drivers/char/synclink.c:1715:
+			__FILE__,__LINE__,intr);
 			        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#220: FILE: drivers/char/synclink.c:1715:
+			__FILE__,__LINE__,intr);
 			                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#229: FILE: drivers/char/synclink.c:1745:
+				__FILE__,__LINE__,info->device_name, intr);
 				        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#229: FILE: drivers/char/synclink.c:1745:
+				__FILE__,__LINE__,info->device_name, intr);
 				                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#238: FILE: drivers/char/synclink.c:1768:
+			__FILE__,__LINE__,intr);
 			        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#238: FILE: drivers/char/synclink.c:1768:
+			__FILE__,__LINE__,intr);
 			                 ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#282: FILE: drivers/isdn/pcbit/module.c:36:
+extern int pcbit_init_dev(int board, int mem_base, int intr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#302: FILE: drivers/isdn/pcbit/drv.c:138:
+^Iif (request_irq(intr, &pcbit_irq_handler, 0, pcbit_devname[board], dev) != 0) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#349: FILE: drivers/mmc/wbsd.c:1548:
+static int __devinit wbsd_request_irq(struct wbsd_host *host, int intr)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#370: FILE: drivers/mmc/wbsd.c:1602:
 static int __devinit wbsd_request_resources(struct wbsd_host *host,

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#418: FILE: drivers/mmc/wbsd.c:1744:
+static int __devinit wbsd_init(struct device *dev, int base, int intr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#419: FILE: drivers/mmc/wbsd.c:1745:
+static int __devinit wbsd_init(struct device *dev, int base, int intr,
+	int dma, int pnp)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#433: FILE: drivers/mmc/wbsd.c:1880:
 static int __devinit

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#457: FILE: drivers/mmc/wbsd.c:1900:
 static void __devexit wbsd_pnp_remove(struct pnp_dev *dev)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#478: FILE: include/linux/interrupt.h:103:
+extern void disable_irq_nosync(unsigned int i);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#479: FILE: include/linux/interrupt.h:104:
+extern void disable_irq(unsigned int i);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#480: FILE: include/linux/interrupt.h:105:
+extern void enable_irq(unsigned int i);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#520: FILE: include/linux/interrupt.h:143:
+extern int set_irq_wake(unsigned int i, unsigned int on);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#597: FILE: include/linux/irq.h:181:
+extern int setup_irq(unsigned int intr, struct irqaction *new);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#690: FILE: include/linux/irq.h:266:
+extern void set_balance_irq_affinity(unsigned int intr, cpumask_t mask);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#700: FILE: include/linux/irq.h:274:
+extern int select_smp_affinity(unsigned int intr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#712: FILE: include/linux/irq.h:285:
+extern int handle_IRQ_event(unsigned int intr, struct pt_regs *regs,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#725: FILE: include/linux/irq.h:296:
+handle_fasteoi_irq(unsigned int intr, struct irq_desc *desc,
 			 struct pt_regs *regs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#748: FILE: include/linux/irq.h:320:
+extern fastcall unsigned int __do_IRQ(unsigned int intr, struct pt_regs *regs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#772: FILE: include/linux/irq.h:339:
+extern void note_interrupt(unsigned int intr, struct irq_desc *desc,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#786: FILE: include/linux/irq.h:352:
+extern int can_request_irq(unsigned int intr, unsigned long irqflags);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#837: FILE: include/linux/irq.h:395:
+extern int set_irq_chip(unsigned int intr, struct irq_chip *chip);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#838: FILE: include/linux/irq.h:396:
+extern int set_irq_data(unsigned int intr, void *data);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#839: FILE: include/linux/irq.h:397:
+extern int set_irq_chip_data(unsigned int intr, void *data);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#840: FILE: include/linux/irq.h:398:
+extern int set_irq_type(unsigned int intr, unsigned int type);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#851: FILE: include/linux/random.h:45:
+extern void rand_initialize_irq(int intr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#856: FILE: include/linux/random.h:49:
+extern void add_interrupt_randomness(int intr);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000053315.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 19 warnings, 20 checks, 727 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000053315.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
