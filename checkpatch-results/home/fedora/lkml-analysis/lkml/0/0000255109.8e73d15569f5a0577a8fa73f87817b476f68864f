ERROR:TRAILING_WHITESPACE: trailing whitespace
#116: FILE: arch/s390/Kconfig:127:
+choice $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#116: FILE: arch/s390/Kconfig:127:
+choice 
+	prompt "Processor type"
+	default MARCH_G5
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#120: FILE: arch/s390/Kconfig:131:
+config MARCH_G5
+	bool "S/390 model G5 and G6"
+	depends on ARCH_S390_31
+	help
+	  Select this to build a 31 bit kernel that works
+	  on all S/390 and zSeries machines.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#127: FILE: arch/s390/Kconfig:138:
+config MARCH_Z900
+	bool "IBM eServer zSeries model z800 and z900"
+	help
+	  Select this to optimize for zSeries machines. This
+	  will enable some optimizations that are not available
+	  on older 31 bit only CPUs.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#134: FILE: arch/s390/Kconfig:145:
+config MARCH_Z990
+	bool "IBM eServer zSeries model z890 and z990"
+	help
+	  Select this enable optimizations for model z890/z990.
+	  This will be slightly faster but does not work on
+	  older machines such as the z900.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#141: FILE: arch/s390/Kconfig:152:
+endchoice $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#168: FILE: arch/s390/Kconfig:179:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxB)
#305: FILE: arch/s390/kernel/asm-offsets.c:43:
+	DEFINE(__SF_BACKCHAIN, offsetof(struct stack_frame, back_chain),);
 	                                                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxB)
#306: FILE: arch/s390/kernel/asm-offsets.c:44:
+	DEFINE(__SF_GPRS, offsetof(struct stack_frame, gprs),);
 	                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxB)
#307: FILE: arch/s390/kernel/asm-offsets.c:45:
+	DEFINE(__SF_EMPTY, offsetof(struct stack_frame, empty1),);
 	                                                       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#345: FILE: arch/s390/kernel/entry.S:102:
+#endif^I$

WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#420: FILE: arch/s390/kernel/entry.S:322:
+        stosm   __SF_EMPTY(%r15),0x03     # reenable interrupts
                                             ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#429: FILE: arch/s390/kernel/entry.S:473:
+	stosm	__SF_EMPTY(%r15),0x03	# reenable interrupts
 	     	                     	  ^^^^^^^^

WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#445: FILE: arch/s390/kernel/entry.S:515:
+        stosm   __SF_EMPTY(%r15),0x03  # reenable interrupts
                                          ^^^^^^^^

WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#467: FILE: arch/s390/kernel/entry.S:548:
+        stosm   __SF_EMPTY(%r15),0x03  # reenable interrupts
                                          ^^^^^^^^

WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#479: FILE: arch/s390/kernel/entry.S:559:
+        stosm   __SF_EMPTY(%r15),0x03  # reenable interrupts
                                          ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#565: FILE: arch/s390/kernel/entry64.S:101:
+#endif^I$

WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#634: FILE: arch/s390/kernel/entry64.S:520:
+	stosm	__SF_EMPTY(%r15),0x03	# reenable interrupts
 	     	                     	  ^^^^^^^^

WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#651: FILE: arch/s390/kernel/entry64.S:562:
+        stosm   __SF_EMPTY(%r15),0x03   # reenable interrupts
                                           ^^^^^^^^

WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#674: FILE: arch/s390/kernel/entry64.S:593:
+	stosm   __SF_EMPTY(%r15),0x03	# reenable interrupts
 	                             	  ^^^^^^^^

WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#692: FILE: arch/s390/kernel/entry64.S:604:
+	stosm   __SF_EMPTY(%r15),0x03	# reenable interrupts
 	                             	  ^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#806: FILE: arch/s390/kernel/process.c:63:
+	sf = (struct stack_frame *) tsk->thread.ksp;

CHECK:SPACING: No space is necessary after a cast
#807: FILE: arch/s390/kernel/process.c:64:
+	sf = (struct stack_frame *) sf->back_chain;

ERROR:CODE_INDENT: code indent should use tabs where possible
#817: FILE: arch/s390/kernel/process.c:232:
+        struct fake_frame$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#817: FILE: arch/s390/kernel/process.c:232:
+        struct fake_frame$

WARNING:TABSTOP: Statements should start on a tabstop
#827: FILE: arch/s390/kernel/process.c:234:
+	    struct stack_frame sf;

ERROR:CODE_INDENT: code indent should use tabs where possible
#832: FILE: arch/s390/kernel/process.c:238:
+        frame = ((struct fake_frame *)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#832: FILE: arch/s390/kernel/process.c:238:
+        frame = ((struct fake_frame *)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#841: FILE: arch/s390/kernel/process.c:246:
+        frame->sf.back_chain = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#841: FILE: arch/s390/kernel/process.c:246:
+        frame->sf.back_chain = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#845: FILE: arch/s390/kernel/process.c:249:
+        frame->sf.gprs[8] = (unsigned long) ret_from_fork;$

CHECK:SPACING: No space is necessary after a cast
#845: FILE: arch/s390/kernel/process.c:249:
+        frame->sf.gprs[8] = (unsigned long) ret_from_fork;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#845: FILE: arch/s390/kernel/process.c:249:
+        frame->sf.gprs[8] = (unsigned long) ret_from_fork;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#849: FILE: arch/s390/kernel/process.c:252:
+        frame->sf.gprs[9] = (unsigned long) frame;$

CHECK:SPACING: No space is necessary after a cast
#849: FILE: arch/s390/kernel/process.c:252:
+        frame->sf.gprs[9] = (unsigned long) frame;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#849: FILE: arch/s390/kernel/process.c:252:
+        frame->sf.gprs[9] = (unsigned long) frame;$

CHECK:SPACING: No space is necessary after a cast
#871: FILE: arch/s390/kernel/process.c:401:
+	low = (struct stack_frame *) p->thread_info;

CHECK:SPACING: No space is necessary after a cast
#873: FILE: arch/s390/kernel/process.c:403:
+		((unsigned long) p->thread_info + THREAD_SIZE) - 1;

CHECK:SPACING: No space is necessary after a cast
#874: FILE: arch/s390/kernel/process.c:404:
+	sf = (struct stack_frame *) (p->thread.ksp & PSW_ADDR_INSN);

CHECK:SPACING: No space is necessary after a cast
#882: FILE: arch/s390/kernel/process.c:408:
+		sf = (struct stack_frame *) (sf->back_chain & PSW_ADDR_INSN);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#933: FILE: arch/s390/kernel/smp.c:764:
+		stack = __get_free_pages(GFP_KERNEL,ASYNC_ORDER);
 		                                   ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lowcore_ptr[i]"
#934: FILE: arch/s390/kernel/smp.c:765:
+		if (lowcore_ptr[i] == NULL || stack == 0ULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required after that ',' (ctx:VxV)
#941: FILE: arch/s390/kernel/smp.c:771:
+		stack = __get_free_pages(GFP_KERNEL,0);
 		                                   ^

CHECK:SPACING: No space is necessary after a cast
#989: FILE: arch/s390/kernel/traps.c:95:
+		sf = (struct stack_frame *) sp;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#990: FILE: arch/s390/kernel/traps.c:96:
+		printk("([<%016lx>] ", sf->gprs[8] & PSW_ADDR_INSN);

CHECK:SPACING: No space is necessary after a cast
#1000: FILE: arch/s390/kernel/traps.c:106:
+			sf = (struct stack_frame *) sp;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1001: FILE: arch/s390/kernel/traps.c:107:
+			printk(" [<%016lx>] ", sf->gprs[8] & PSW_ADDR_INSN);

CHECK:SPACING: No space is necessary after a cast
#1005: FILE: arch/s390/kernel/traps.c:111:
+		sp = (unsigned long) (sf + 1);

CHECK:SPACING: No space is necessary after a cast
#1008: FILE: arch/s390/kernel/traps.c:114:
+		regs = (struct pt_regs *) sp;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1009: FILE: arch/s390/kernel/traps.c:115:
+		printk(" [<%016lx>] ", regs->psw.addr & PSW_ADDR_INSN);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1016: FILE: arch/s390/kernel/traps.c:122:
+void show_trace(struct task_struct *task, unsigned long * stack)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#1021: FILE: arch/s390/kernel/traps.c:127:
+	sp = (unsigned long) stack;

CHECK:SPACING: No space is necessary after a cast
#1044: FILE: arch/s390/kernel/traps.c:138:
+		__show_trace(sp, (unsigned long) task->thread_info,

CHECK:SPACING: No space is necessary after a cast
#1045: FILE: arch/s390/kernel/traps.c:139:
+			     (unsigned long) task->thread_info + THREAD_SIZE);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1054: FILE: arch/s390/kernel/traps.c:148:
+	register unsigned long * __r15 asm ("15");

CHECK:SPACING: No space is necessary after a cast
#1068: FILE: arch/s390/kernel/traps.c:156:
+		sp = task ? (unsigned long *) task->thread.ksp : __r15;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1076: FILE: arch/s390/kernel/traps.c:633:
+asmlinkage void kernel_stack_overflow(struct pt_regs * regs)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1109: FILE: include/asm-s390/lowcore.h:182:
+	__u8         pad10[0xc60-0xc58];       /* 0xc58 */
 	                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1119: FILE: include/asm-s390/lowcore.h:264:
+	__u8         pad10[0xd80-0xd70];       /* 0xd70 */
 	                        ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000255109.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 22 warnings, 19 checks, 1037 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000255109.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
