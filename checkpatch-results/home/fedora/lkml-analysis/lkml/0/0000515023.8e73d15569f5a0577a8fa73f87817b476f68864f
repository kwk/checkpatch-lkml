WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
diff -urN v2.4.10-pre4/drivers/acorn/block/mfmhd.c work-v2.4.10-pre4/drivers/acorn/block/mfmhd.c

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#47: FILE: drivers/acorn/block/mfmhd.c:1214:
+		return put_user ((u64)mfm[minor].nr_sects << 9, (u64 *)arg);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#62: FILE: drivers/block/DAC960.c:5096:
+    case BLKGETSIZE64:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#63: FILE: drivers/block/DAC960.c:5097:
+      return put_user((u64)Controller->GenericDiskInfo.part[MINOR(Inode->i_rdev)].nr_sects << 9,$

CHECK:CAMELCASE: Avoid CamelCase: <Controller>
#63: FILE: drivers/block/DAC960.c:5097:
+      return put_user((u64)Controller->GenericDiskInfo.part[MINOR(Inode->i_rdev)].nr_sects << 9,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <GenericDiskInfo>
#63: FILE: drivers/block/DAC960.c:5097:
+      return put_user((u64)Controller->GenericDiskInfo.part[MINOR(Inode->i_rdev)].nr_sects << 9,

CHECK:CAMELCASE: Avoid CamelCase: <Inode>
#63: FILE: drivers/block/DAC960.c:5097:
+      return put_user((u64)Controller->GenericDiskInfo.part[MINOR(Inode->i_rdev)].nr_sects << 9,

CHECK:SPACING: No space is necessary after a cast
#64: FILE: drivers/block/DAC960.c:5098:
+		      (u64 *) Argument);

CHECK:CAMELCASE: Avoid CamelCase: <Argument>
#64: FILE: drivers/block/DAC960.c:5098:
+		      (u64 *) Argument);

WARNING:TABSTOP: Statements should start on a tabstop
#75: FILE: drivers/block/acsi.c:1141:
+	  case BLKGETSIZE64:   /* Return device size */

CHECK:SPACING: No space is necessary after a cast
#77: FILE: drivers/block/acsi.c:1143:
+				(u64 *) arg);

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#91: FILE: drivers/block/amiflop.c:1561:
+		return put_user((u64)unit[drive].blocks << 9, (u64 *)param);
+		break;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#117: FILE: drivers/block/cciss.c:406:
+		put_user((u64)hba[ctlr]->hd[MINOR(inode->i_rdev)].nr_sects << 9, (u64*)arg);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#131: FILE: drivers/block/cpqarray.c:1230:
+		return put_user(ida[(ctlr<<CTLR_SHIFT)+MINOR(inode->i_rdev)].nr_sects, (long*)arg);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#131: FILE: drivers/block/cpqarray.c:1230:
+		return put_user(ida[(ctlr<<CTLR_SHIFT)+MINOR(inode->i_rdev)].nr_sects, (long*)arg);
 		                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#131: FILE: drivers/block/cpqarray.c:1230:
+		return put_user(ida[(ctlr<<CTLR_SHIFT)+MINOR(inode->i_rdev)].nr_sects, (long*)arg);
 		                                      ^

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#133: FILE: drivers/block/cpqarray.c:1232:
+		return put_user((u64)(ida[(ctlr<<CTLR_SHIFT)+MINOR(inode->i_rdev)].nr_sects) << 9, (u64*)arg);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#133: FILE: drivers/block/cpqarray.c:1232:
+		return put_user((u64)(ida[(ctlr<<CTLR_SHIFT)+MINOR(inode->i_rdev)].nr_sects) << 9, (u64*)arg);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#133: FILE: drivers/block/cpqarray.c:1232:
+		return put_user((u64)(ida[(ctlr<<CTLR_SHIFT)+MINOR(inode->i_rdev)].nr_sects) << 9, (u64*)arg);
 		                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#133: FILE: drivers/block/cpqarray.c:1232:
+		return put_user((u64)(ida[(ctlr<<CTLR_SHIFT)+MINOR(inode->i_rdev)].nr_sects) << 9, (u64*)arg);
 		                                            ^

CHECK:SPACING: No space is necessary after a cast
#147: FILE: drivers/block/floppy.c:3498:
+			return put_user((u64)g->size << 9, (u64 *) param);

CHECK:SPACING: No space is necessary after a cast
#160: FILE: drivers/block/loop.c:852:
+		err = put_user(loop_sizes[lo->lo_number] << 1, (long *) arg);

CHECK:CAMELCASE: Avoid CamelCase: <Lo_bound>
#163: FILE: drivers/block/loop.c:855:
+		if (lo->lo_state != Lo_bound) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#168: FILE: drivers/block/loop.c:859:
+		err = put_user((u64)loop_sizes[lo->lo_number] << 10, (u64*)arg);

CHECK:SPACING: No space is necessary after a cast
#180: FILE: drivers/block/nbd.c:450:
+		return put_user((u64)nbd_bytesizes[dev], (u64 *) arg);

ERROR:CODE_INDENT: code indent should use tabs where possible
#191: FILE: drivers/block/paride/pd.c:538:
+            case BLKGETSIZE64:$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: drivers/block/paride/pd.c:538:
+            case BLKGETSIZE64:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#192: FILE: drivers/block/paride/pd.c:539:
+                return put_user((u64)pd_hd[dev].nr_sects << 9, (u64 *)arg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: drivers/block/paride/pd.c:539:
+                return put_user((u64)pd_hd[dev].nr_sects << 9, (u64 *)arg);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#208: FILE: drivers/block/paride/pf.c:485:
+                return put_user(PF.capacity,(long *) arg);$

CHECK:SPACING: No space is necessary after a cast
#208: FILE: drivers/block/paride/pf.c:485:
+                return put_user(PF.capacity,(long *) arg);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: drivers/block/paride/pf.c:485:
+                return put_user(PF.capacity,(long *) arg);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#208: FILE: drivers/block/paride/pf.c:485:
+                return put_user(PF.capacity,(long *) arg);
                                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#209: FILE: drivers/block/paride/pf.c:486:
+            case BLKGETSIZE64:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: drivers/block/paride/pf.c:486:
+            case BLKGETSIZE64:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#210: FILE: drivers/block/paride/pf.c:487:
+                return put_user((u64)PF.capacity << 9,(u64 *)arg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: drivers/block/paride/pf.c:487:
+                return put_user((u64)PF.capacity << 9,(u64 *)arg);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#210: FILE: drivers/block/paride/pf.c:487:
+                return put_user((u64)PF.capacity << 9,(u64 *)arg);
                                                      ^

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#222: FILE: drivers/block/ps2esdi.c:1121:
+			return put_user((u64)ps2esdi[MINOR(inode->i_rdev)].nr_sects << 9, (u64 *) arg);

CHECK:SPACING: No space is necessary after a cast
#222: FILE: drivers/block/ps2esdi.c:1121:
+			return put_user((u64)ps2esdi[MINOR(inode->i_rdev)].nr_sects << 9, (u64 *) arg);

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: drivers/block/rd.c:272:
+         ^Icase BLKGETSIZE64:$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#234: FILE: drivers/block/rd.c:272:
+         ^Icase BLKGETSIZE64:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: drivers/block/rd.c:272:
+         ^Icase BLKGETSIZE64:$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#235: FILE: drivers/block/rd.c:273:
+			return put_user((u64)rd_kbsize[minor] << 10, (u64*)arg);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#248: FILE: drivers/block/xd.c:343:
+			return put_user((u64)xd_struct[MINOR(inode->i_rdev)].nr_sects << 9, (u64 *)arg);

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#256: FILE: drivers/i2o/i2o_block.c:1141:
 	switch (cmd) {
[...]
+		case BLKGETSIZE64:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#274: FILE: drivers/ide/hd.c:644:
+         ^Icase BLKGETSIZE64:$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#274: FILE: drivers/ide/hd.c:644:
+         ^Icase BLKGETSIZE64:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: drivers/ide/hd.c:644:
+         ^Icase BLKGETSIZE64:$

CHECK:SPACING: No space is necessary after a cast
#276: FILE: drivers/ide/hd.c:646:
+					(u64 *) arg);

ERROR:CODE_INDENT: code indent should use tabs where possible
#287: FILE: drivers/ide/ide.c:2666:
+^I ^Icase BLKGETSIZE64:$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#287: FILE: drivers/ide/ide.c:2666:
+^I ^Icase BLKGETSIZE64:$

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#288: FILE: drivers/ide/ide.c:2667:
+			return put_user((u64)drive->part[MINOR(inode->i_rdev)&PARTN_MASK].nr_sects << 9, (u64 *) arg);

CHECK:SPACING: No space is necessary after a cast
#288: FILE: drivers/ide/ide.c:2667:
+			return put_user((u64)drive->part[MINOR(inode->i_rdev)&PARTN_MASK].nr_sects << 9, (u64 *) arg);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#288: FILE: drivers/ide/ide.c:2667:
+			return put_user((u64)drive->part[MINOR(inode->i_rdev)&PARTN_MASK].nr_sects << 9, (u64 *) arg);
 			                                                     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#316: FILE: drivers/md/md.c:2495:
+			err = md_put_user((u64)md_hd_struct[minor].nr_sects << 9,
+						(u64 *) arg);

CHECK:SPACING: No space is necessary after a cast
#316: FILE: drivers/md/md.c:2495:
+						(u64 *) arg);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: drivers/mtd/ftl.c:1179:
+    case BLKGETSIZE64:$

CHECK:SPACING: No space is necessary after a cast
#351: FILE: drivers/mtd/mtdblock.c:532:
+		return put_user((mtdblk->mtd->size >> 9), (long *) arg);

CHECK:SPACING: No space is necessary after a cast
#367: FILE: drivers/mtd/mtdblock_ro.c:214:
+		return put_user((mtd->size >> 9), (long *) arg);

ERROR:CODE_INDENT: code indent should use tabs where possible
#385: FILE: drivers/mtd/nftlcore.c:798:
+                                (u64 *)arg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: drivers/mtd/nftlcore.c:798:
+                                (u64 *)arg);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#406: FILE: drivers/s390/block/dasd.c:2197:
+                                      [MINOR (inp->i_rdev)];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#406: FILE: drivers/s390/block/dasd.c:2197:
+                                      [MINOR (inp->i_rdev)];$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#406: FILE: drivers/s390/block/dasd.c:2197:
+                                      [MINOR (inp->i_rdev)];

CHECK:SPACING: spaces preferred around that '*' (ctx:VxW)
#423: FILE: drivers/s390/block/xpram.c:650:
+		return put_user( 1024* xpram_sizes[MINOR(inode->i_rdev)]
 		                     ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#423: FILE: drivers/s390/block/xpram.c:650:
+		return put_user( 1024* xpram_sizes[MINOR(inode->i_rdev)]

CHECK:SPACING: spaces preferred around that '*' (ctx:VxW)
#429: FILE: drivers/s390/block/xpram.c:655:
+		return put_user( (u64)(1024* xpram_sizes[MINOR(inode->i_rdev)]
 		                           ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#429: FILE: drivers/s390/block/xpram.c:655:
+		return put_user( (u64)(1024* xpram_sizes[MINOR(inode->i_rdev)]

ERROR:CODE_INDENT: code indent should use tabs where possible
#430: FILE: drivers/s390/block/xpram.c:656:
+                           / XPRAM_SOFTSECT) << 9,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#430: FILE: drivers/s390/block/xpram.c:656:
+                           / XPRAM_SOFTSECT) << 9,$

CHECK:SPACING: No space is necessary after a cast
#431: FILE: drivers/s390/block/xpram.c:657:
+			   (u64 *) arg);

CHECK:SPACING: No space is necessary after a cast
#443: FILE: drivers/sbus/char/jsflash.c:458:
+		return put_user(jsfd_bytesizes[dev], (u64 *) arg);

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#458: FILE: drivers/scsi/sd.c:232:
+			return put_user((u64)sd[SD_PARTITION(inode->i_rdev)].nr_sects << 9, (u64 *)arg);

CHECK:CAMELCASE: Avoid CamelCase: <scsi_CDs>
#470: FILE: drivers/scsi/sr_ioctl.c:550:
+		return put_user((u64)scsi_CDs[target].capacity << 9, (u64 *)arg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#481: FILE: include/asm-i386/uaccess.h:129:
+extern void __put_user_8(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:TABSTOP: Statements should start on a tabstop
#489: FILE: include/asm-i386/uaccess.h:165:
+	  case 8: {							\

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#490: FILE: include/asm-i386/uaccess.h:166:
+		u32 *__put_ptr = (void*)(ptr);				\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#492: FILE: include/asm-i386/uaccess.h:168:
+		__put_user_asm((u32)__put_val,__put_ptr,retval,"l","","ir"); \
 		                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#492: FILE: include/asm-i386/uaccess.h:168:
+		__put_user_asm((u32)__put_val,__put_ptr,retval,"l","","ir"); \
 		                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#492: FILE: include/asm-i386/uaccess.h:168:
+		__put_user_asm((u32)__put_val,__put_ptr,retval,"l","","ir"); \
 		                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#492: FILE: include/asm-i386/uaccess.h:168:
+		__put_user_asm((u32)__put_val,__put_ptr,retval,"l","","ir"); \
 		                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#492: FILE: include/asm-i386/uaccess.h:168:
+		__put_user_asm((u32)__put_val,__put_ptr,retval,"l","","ir"); \
 		                                                     ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#493: FILE: include/asm-i386/uaccess.h:169:
+		__put_user_asm((u32)(__put_val>>32),__put_ptr+1,retval,"l","","ir"); \
 		                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#493: FILE: include/asm-i386/uaccess.h:169:
+		__put_user_asm((u32)(__put_val>>32),__put_ptr+1,retval,"l","","ir"); \
 		                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#493: FILE: include/asm-i386/uaccess.h:169:
+		__put_user_asm((u32)(__put_val>>32),__put_ptr+1,retval,"l","","ir"); \
 		                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#493: FILE: include/asm-i386/uaccess.h:169:
+		__put_user_asm((u32)(__put_val>>32),__put_ptr+1,retval,"l","","ir"); \
 		                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#493: FILE: include/asm-i386/uaccess.h:169:
+		__put_user_asm((u32)(__put_val>>32),__put_ptr+1,retval,"l","","ir"); \
 		                                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#493: FILE: include/asm-i386/uaccess.h:169:
+		__put_user_asm((u32)(__put_val>>32),__put_ptr+1,retval,"l","","ir"); \
 		                                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#493: FILE: include/asm-i386/uaccess.h:169:
+		__put_user_asm((u32)(__put_val>>32),__put_ptr+1,retval,"l","","ir"); \
 		                                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#507: FILE: include/linux/fs.h:169:
+#define BLKGETSIZE _IO(0x12,96)	/* return device size /512 (long *arg) */
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#515: FILE: include/linux/fs.h:188:
+#define BLKGETSIZE64 _IOR(0x12,114,sizeof(u64))	/* return device size in bytes (u64 *arg) */
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#515: FILE: include/linux/fs.h:188:
+#define BLKGETSIZE64 _IOR(0x12,114,sizeof(u64))	/* return device size in bytes (u64 *arg) */
                                   ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000515023.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 35 errors, 27 warnings, 31 checks, 354 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000515023.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
