WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#64: 
> >> I have a question, why does not it use the kernel's rbtree implementat=

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#92: FILE: block/cscan.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: No space is necessary after a cast
#101: FILE: block/cscan.c:10:
+#define RQ_DATA(rq) ((struct cscan_request *) (rq)->elevator_private)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rb_node"
#104: FILE: block/cscan.c:13:
+#define RB_EMPTY(root)  ((root)->rb_node == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#109: FILE: block/cscan.c:18:
+#define rq_rb_key(rq)           (rq)->sector

CHECK:LINE_SPACING: Please don't use multiple blank lines
#111: FILE: block/cscan.c:20:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#113: FILE: block/cscan.c:22:
+        struct rb_root sort_list[2];$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: block/cscan.c:22:
+        struct rb_root sort_list[2];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#114: FILE: block/cscan.c:23:
+        unsigned int count[2];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: block/cscan.c:23:
+        unsigned int count[2];$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#115: FILE: block/cscan.c:24:
+        $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: block/cscan.c:24:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: block/cscan.c:24:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#116: FILE: block/cscan.c:25:
+        sector_t last_sector;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: block/cscan.c:25:
+        sector_t last_sector;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: block/cscan.c:26:
+        unsigned int first;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: block/cscan.c:26:
+        unsigned int first;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: block/cscan.c:27:
+        mempool_t * crq_pool;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: block/cscan.c:27:
+        mempool_t * crq_pool;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#118: FILE: block/cscan.c:27:
+        mempool_t * crq_pool;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: block/cscan.c:31:
+        struct rb_node rb_node;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: block/cscan.c:31:
+        struct rb_node rb_node;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: block/cscan.c:32:
+        sector_t rb_key;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: block/cscan.c:32:
+        sector_t rb_key;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#124: FILE: block/cscan.c:33:
+        unsigned int queue_id;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: block/cscan.c:33:
+        unsigned int queue_id;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#126: FILE: block/cscan.c:35:
+        struct request * request;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: block/cscan.c:35:
+        struct request * request;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#126: FILE: block/cscan.c:35:
+        struct request * request;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#135: FILE: block/cscan.c:44:
+__rb_insert_request(struct rb_root * root, struct cscan_request * crq) $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#135: FILE: block/cscan.c:44:
+__rb_insert_request(struct rb_root * root, struct cscan_request * crq) 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#135: FILE: block/cscan.c:44:
+__rb_insert_request(struct rb_root * root, struct cscan_request * crq) 

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: block/cscan.c:46:
+        struct rb_node **p = &root->rb_node;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: block/cscan.c:46:
+        struct rb_node **p = &root->rb_node;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#138: FILE: block/cscan.c:47:
+        struct rb_node *parent = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: block/cscan.c:47:
+        struct rb_node *parent = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: block/cscan.c:48:
+        struct cscan_request * __crq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: block/cscan.c:48:
+        struct cscan_request * __crq;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#139: FILE: block/cscan.c:48:
+        struct cscan_request * __crq;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#140: FILE: block/cscan.c:49:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: block/cscan.c:49:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: block/cscan.c:49:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: block/cscan.c:50:
+         while(*p) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: block/cscan.c:50:
+         while(*p) {$

ERROR:SPACING: space required before the open parenthesis '('
#141: FILE: block/cscan.c:50:
+         while(*p) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: block/cscan.c:51:
+                parent = *p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: block/cscan.c:51:
+                parent = *p;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: block/cscan.c:52:
+                __crq = rb_entry(parent,struct cscan_request,rb_node);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: block/cscan.c:52:
+                __crq = rb_entry(parent,struct cscan_request,rb_node);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#143: FILE: block/cscan.c:52:
+                __crq = rb_entry(parent,struct cscan_request,rb_node);
                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#143: FILE: block/cscan.c:52:
+                __crq = rb_entry(parent,struct cscan_request,rb_node);
                                                             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#145: FILE: block/cscan.c:54:
+                if(crq->rb_key < __crq->rb_key) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: block/cscan.c:54:
+                if(crq->rb_key < __crq->rb_key) {$

ERROR:SPACING: space required before the open parenthesis '('
#145: FILE: block/cscan.c:54:
+                if(crq->rb_key < __crq->rb_key) {

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#145: FILE: block/cscan.c:54:
+                if(crq->rb_key < __crq->rb_key) {
[...]
+                } else if(crq->rb_key > __crq->rb_key) {
[...]
+                } else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: block/cscan.c:55:
+                        p = &(*p)->rb_left;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: block/cscan.c:55:
+                        p = &(*p)->rb_left;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: block/cscan.c:56:
+                } else if(crq->rb_key > __crq->rb_key) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: block/cscan.c:56:
+                } else if(crq->rb_key > __crq->rb_key) {$

ERROR:SPACING: space required before the open parenthesis '('
#147: FILE: block/cscan.c:56:
+                } else if(crq->rb_key > __crq->rb_key) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#148: FILE: block/cscan.c:57:
+                        p = &(*p)->rb_right;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: block/cscan.c:57:
+                        p = &(*p)->rb_right;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: block/cscan.c:58:
+                } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: block/cscan.c:58:
+                } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: block/cscan.c:59:
+                        return __crq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: block/cscan.c:59:
+                        return __crq;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: block/cscan.c:60:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: block/cscan.c:60:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: block/cscan.c:61:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: block/cscan.c:61:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: block/cscan.c:62:
+        rb_link_node(&crq->rb_node,parent,p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: block/cscan.c:62:
+        rb_link_node(&crq->rb_node,parent,p);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#153: FILE: block/cscan.c:62:
+        rb_link_node(&crq->rb_node,parent,p);
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#153: FILE: block/cscan.c:62:
+        rb_link_node(&crq->rb_node,parent,p);
                                          ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: block/cscan.c:63:
+        return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: block/cscan.c:63:
+        return NULL;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#155: FILE: block/cscan.c:64:
+} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#158: FILE: block/cscan.c:67:
+cscan_request * rb_insert_request(struct rb_root * root, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#158: FILE: block/cscan.c:67:
+cscan_request * rb_insert_request(struct rb_root * root, 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#158: FILE: block/cscan.c:67:
+cscan_request * rb_insert_request(struct rb_root * root, 

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: block/cscan.c:68:
+                                     struct cscan_request * crq)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#159: FILE: block/cscan.c:68:
+cscan_request * rb_insert_request(struct rb_root * root, 
+                                     struct cscan_request * crq)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: block/cscan.c:68:
+                                     struct cscan_request * crq)$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#159: FILE: block/cscan.c:68:
+                                     struct cscan_request * crq)

ERROR:CODE_INDENT: code indent should use tabs where possible
#161: FILE: block/cscan.c:70:
+        struct cscan_request * ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: block/cscan.c:70:
+        struct cscan_request * ret;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#161: FILE: block/cscan.c:70:
+        struct cscan_request * ret;

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: block/cscan.c:71:
+        if((ret = __rb_insert_request(root,crq)))$

WARNING:LINE_SPACING: Missing a blank line after declarations
#162: FILE: block/cscan.c:71:
+        struct cscan_request * ret;
+        if((ret = __rb_insert_request(root,crq)))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: block/cscan.c:71:
+        if((ret = __rb_insert_request(root,crq)))$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#162: FILE: block/cscan.c:71:
+        if((ret = __rb_insert_request(root,crq)))
                                           ^

ERROR:SPACING: space required before the open parenthesis '('
#162: FILE: block/cscan.c:71:
+        if((ret = __rb_insert_request(root,crq)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#162: FILE: block/cscan.c:71:
+        if((ret = __rb_insert_request(root,crq)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: block/cscan.c:72:
+                goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: block/cscan.c:72:
+                goto out;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: block/cscan.c:73:
+        rb_insert_color(&crq->rb_node,root);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: block/cscan.c:73:
+        rb_insert_color(&crq->rb_node,root);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#164: FILE: block/cscan.c:73:
+        rb_insert_color(&crq->rb_node,root);
                                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#166: FILE: block/cscan.c:75:
+        return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: block/cscan.c:75:
+        return ret;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#170: FILE: block/cscan.c:79:
+cscan_request * rb_find_request(struct rb_root * root, long key) $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#170: FILE: block/cscan.c:79:
+cscan_request * rb_find_request(struct rb_root * root, long key) 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#170: FILE: block/cscan.c:79:
+cscan_request * rb_find_request(struct rb_root * root, long key) 

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: block/cscan.c:81:
+        struct rb_node * n = root->rb_node;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: block/cscan.c:81:
+        struct rb_node * n = root->rb_node;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#172: FILE: block/cscan.c:81:
+        struct rb_node * n = root->rb_node;

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: block/cscan.c:82:
+        struct cscan_request * crq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: block/cscan.c:82:
+        struct cscan_request * crq;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#173: FILE: block/cscan.c:82:
+        struct cscan_request * crq;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#175: FILE: block/cscan.c:84:
+        while(n) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: block/cscan.c:84:
+        while(n) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: block/cscan.c:84:
+        while(n) $

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#175: FILE: block/cscan.c:84:
+        while(n) 
+        {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#175: FILE: block/cscan.c:84:
+        while(n) 

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: block/cscan.c:85:
+        {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: block/cscan.c:85:
+        {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#177: FILE: block/cscan.c:86:
+                crq = rb_entry(n,struct cscan_request,rb_node);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: block/cscan.c:86:
+                crq = rb_entry(n,struct cscan_request,rb_node);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#177: FILE: block/cscan.c:86:
+                crq = rb_entry(n,struct cscan_request,rb_node);
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#177: FILE: block/cscan.c:86:
+                crq = rb_entry(n,struct cscan_request,rb_node);
                                                      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: block/cscan.c:88:
+                if (key > crq->rb_key) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: block/cscan.c:88:
+                if (key > crq->rb_key) {$

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#179: FILE: block/cscan.c:88:
+                if (key > crq->rb_key) {
[...]
+                } else if (key < crq->rb_key) {
[...]
+                } else {
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#180: FILE: block/cscan.c:89:
+                        n = n->rb_right;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: block/cscan.c:89:
+                        n = n->rb_right;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: block/cscan.c:90:
+                } else if (key < crq->rb_key) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: block/cscan.c:90:
+                } else if (key < crq->rb_key) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#182: FILE: block/cscan.c:91:
+                        n = n->rb_left;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: block/cscan.c:91:
+                        n = n->rb_left;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#183: FILE: block/cscan.c:92:
+                } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: block/cscan.c:92:
+                } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#184: FILE: block/cscan.c:93:
+                        return crq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: block/cscan.c:93:
+                        return crq;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#185: FILE: block/cscan.c:94:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: block/cscan.c:94:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: block/cscan.c:95:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: block/cscan.c:95:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#187: FILE: block/cscan.c:96:
+        return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: block/cscan.c:96:
+        return NULL;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#189: FILE: block/cscan.c:98:
+static void $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#189: FILE: block/cscan.c:98:
+}
+static void 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#190: FILE: block/cscan.c:99:
+cscan_remove_request(struct cscan_data * cd, struct cscan_request * crq) $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#190: FILE: block/cscan.c:99:
+cscan_remove_request(struct cscan_data * cd, struct cscan_request * crq) 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#190: FILE: block/cscan.c:99:
+cscan_remove_request(struct cscan_data * cd, struct cscan_request * crq) 

ERROR:CODE_INDENT: code indent should use tabs where possible
#192: FILE: block/cscan.c:101:
+        rb_erase(&crq->rb_node, &cd->sort_list[crq->queue_id]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: block/cscan.c:101:
+        rb_erase(&crq->rb_node, &cd->sort_list[crq->queue_id]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#193: FILE: block/cscan.c:102:
+        RB_CLEAR(&crq->rb_node);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: block/cscan.c:102:
+        RB_CLEAR(&crq->rb_node);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#194: FILE: block/cscan.c:103:
+        cd->count[crq->queue_id]--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: block/cscan.c:103:
+        cd->count[crq->queue_id]--;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#198: FILE: block/cscan.c:107:
+cscan_add_crq_rb(struct cscan_data * cd, struct cscan_request * crq) $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#198: FILE: block/cscan.c:107:
+cscan_add_crq_rb(struct cscan_data * cd, struct cscan_request * crq) 

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#198: FILE: block/cscan.c:107:
+cscan_add_crq_rb(struct cscan_data * cd, struct cscan_request * crq) 

ERROR:CODE_INDENT: code indent should use tabs where possible
#200: FILE: block/cscan.c:109:
+        crq->rb_key = rq_rb_key(crq->request);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: block/cscan.c:109:
+        crq->rb_key = rq_rb_key(crq->request);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#201: FILE: block/cscan.c:110:
+        rb_insert_request(&cd->sort_list[crq->queue_id],crq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: block/cscan.c:110:
+        rb_insert_request(&cd->sort_list[crq->queue_id],crq);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#201: FILE: block/cscan.c:110:
+        rb_insert_request(&cd->sort_list[crq->queue_id],crq);
                                                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: block/cscan.c:111:
+        cd->count[crq->queue_id]++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: block/cscan.c:111:
+        cd->count[crq->queue_id]++;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#205: FILE: block/cscan.c:114:
+static void $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#207: FILE: block/cscan.c:116:
+cscan_merged_requests(request_queue_t *q, struct request *rq,
+				 struct request *next)

WARNING:TABSTOP: Statements should start on a tabstop
#209: FILE: block/cscan.c:118:
+	 struct cscan_data *cd = q->elevator->elevator_data;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#210: FILE: block/cscan.c:119:
+        struct cscan_request * crq;        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#210: FILE: block/cscan.c:119:
+        struct cscan_request * crq;        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: block/cscan.c:119:
+        struct cscan_request * crq;        $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#210: FILE: block/cscan.c:119:
+        struct cscan_request * crq;        

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: block/cscan.c:120:
+        crq = RQ_DATA(next);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#211: FILE: block/cscan.c:120:
+        struct cscan_request * crq;        
+        crq = RQ_DATA(next);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: block/cscan.c:120:
+        crq = RQ_DATA(next);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: block/cscan.c:122:
+        cscan_remove_request(cd,crq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: block/cscan.c:122:
+        cscan_remove_request(cd,crq);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#213: FILE: block/cscan.c:122:
+        cscan_remove_request(cd,crq);
                                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#216: FILE: block/cscan.c:125:
+static int $

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: block/cscan.c:129:
+        struct rb_root * root = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: block/cscan.c:129:
+        struct rb_root * root = NULL;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#220: FILE: block/cscan.c:129:
+        struct rb_root * root = NULL;

ERROR:CODE_INDENT: code indent should use tabs where possible
#222: FILE: block/cscan.c:131:
+        if(rb_first(&cd->sort_list[cd->first])) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: block/cscan.c:131:
+        if(rb_first(&cd->sort_list[cd->first])) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 15)
#222: FILE: block/cscan.c:131:
+        if(rb_first(&cd->sort_list[cd->first])) {
+               root = &cd->sort_list[cd->first]; 

ERROR:SPACING: space required before the open parenthesis '('
#222: FILE: block/cscan.c:131:
+        if(rb_first(&cd->sort_list[cd->first])) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#223: FILE: block/cscan.c:132:
+               root = &cd->sort_list[cd->first]; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#223: FILE: block/cscan.c:132:
+               root = &cd->sort_list[cd->first]; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: block/cscan.c:132:
+               root = &cd->sort_list[cd->first]; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#224: FILE: block/cscan.c:133:
+        } else if(rb_first(&cd->sort_list[1 - cd->first])) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: block/cscan.c:133:
+        } else if(rb_first(&cd->sort_list[1 - cd->first])) {$

ERROR:SPACING: space required before the open parenthesis '('
#224: FILE: block/cscan.c:133:
+        } else if(rb_first(&cd->sort_list[1 - cd->first])) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#225: FILE: block/cscan.c:134:
+                root = &cd->sort_list[1 - cd->first]; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#225: FILE: block/cscan.c:134:
+                root = &cd->sort_list[1 - cd->first]; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: block/cscan.c:134:
+                root = &cd->sort_list[1 - cd->first]; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#226: FILE: block/cscan.c:135:
+                cd->first = 1 - cd->first; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#226: FILE: block/cscan.c:135:
+                cd->first = 1 - cd->first; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: block/cscan.c:135:
+                cd->first = 1 - cd->first; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#227: FILE: block/cscan.c:136:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: block/cscan.c:136:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#231: FILE: block/cscan.c:140:
+                struct request * rq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: block/cscan.c:140:
+                struct request * rq;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#231: FILE: block/cscan.c:140:
+                struct request * rq;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#232: FILE: block/cscan.c:141:
+                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: block/cscan.c:141:
+                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: block/cscan.c:141:
+                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: block/cscan.c:143:
+                rq = crq->request;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: block/cscan.c:143:
+                rq = crq->request;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#235: FILE: block/cscan.c:144:
+                cscan_remove_request(cd,crq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: block/cscan.c:144:
+                cscan_remove_request(cd,crq);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#235: FILE: block/cscan.c:144:
+                cscan_remove_request(cd,crq);
                                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: block/cscan.c:145:
+                cd->last_sector = rq->sector + rq->nr_sectors;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: block/cscan.c:145:
+                cd->last_sector = rq->sector + rq->nr_sectors;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#243: FILE: block/cscan.c:152:
+static void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#247: FILE: block/cscan.c:156:
+        struct cscan_request * crq;        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#247: FILE: block/cscan.c:156:
+        struct cscan_request * crq;        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: block/cscan.c:156:
+        struct cscan_request * crq;        $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#247: FILE: block/cscan.c:156:
+        struct cscan_request * crq;        

ERROR:TRAILING_WHITESPACE: trailing whitespace
#248: FILE: block/cscan.c:157:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#248: FILE: block/cscan.c:157:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: block/cscan.c:157:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#249: FILE: block/cscan.c:158:
+        crq = RQ_DATA(rq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: block/cscan.c:158:
+        crq = RQ_DATA(rq);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#250: FILE: block/cscan.c:159:
+        if(rq->sector > cd->last_sector) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#250: FILE: block/cscan.c:159:
+        if(rq->sector > cd->last_sector) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: block/cscan.c:159:
+        if(rq->sector > cd->last_sector) $

ERROR:SPACING: space required before the open parenthesis '('
#250: FILE: block/cscan.c:159:
+        if(rq->sector > cd->last_sector) 

ERROR:CODE_INDENT: code indent should use tabs where possible
#251: FILE: block/cscan.c:160:
+                crq->queue_id = cd->first;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: block/cscan.c:160:
+                crq->queue_id = cd->first;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#252: FILE: block/cscan.c:161:
+        else $

ERROR:CODE_INDENT: code indent should use tabs where possible
#252: FILE: block/cscan.c:161:
+        else $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: block/cscan.c:161:
+        else $

ERROR:CODE_INDENT: code indent should use tabs where possible
#253: FILE: block/cscan.c:162:
+                crq->queue_id = 1 - cd->first;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: block/cscan.c:162:
+                crq->queue_id = 1 - cd->first;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#254: FILE: block/cscan.c:163:
+        cscan_add_crq_rb(cd,crq);                                 $

ERROR:CODE_INDENT: code indent should use tabs where possible
#254: FILE: block/cscan.c:163:
+        cscan_add_crq_rb(cd,crq);                                 $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: block/cscan.c:163:
+        cscan_add_crq_rb(cd,crq);                                 $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#254: FILE: block/cscan.c:163:
+        cscan_add_crq_rb(cd,crq);                                 
                            ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#257: FILE: block/cscan.c:166:
+static int $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#262: FILE: block/cscan.c:171:
+        return ((rb_first(&cd->sort_list[cd->first]) == NULL) && $

ERROR:CODE_INDENT: code indent should use tabs where possible
#262: FILE: block/cscan.c:171:
+        return ((rb_first(&cd->sort_list[cd->first]) == NULL) && $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: block/cscan.c:171:
+        return ((rb_first(&cd->sort_list[cd->first]) == NULL) && $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rb_first"
#262: FILE: block/cscan.c:171:
+        return ((rb_first(&cd->sort_list[cd->first]) == NULL) && 

ERROR:CODE_INDENT: code indent should use tabs where possible
#263: FILE: block/cscan.c:172:
+                (rb_first(&cd->sort_list[1 - cd->first]) == NULL));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: block/cscan.c:172:
+                (rb_first(&cd->sort_list[1 - cd->first]) == NULL));$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rb_first"
#263: FILE: block/cscan.c:172:
+                (rb_first(&cd->sort_list[1 - cd->first]) == NULL));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#270: FILE: block/cscan.c:179:
+        struct cscan_request * crq = RQ_DATA(rq); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#270: FILE: block/cscan.c:179:
+        struct cscan_request * crq = RQ_DATA(rq); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: block/cscan.c:179:
+        struct cscan_request * crq = RQ_DATA(rq); $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#270: FILE: block/cscan.c:179:
+        struct cscan_request * crq = RQ_DATA(rq); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#271: FILE: block/cscan.c:180:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: block/cscan.c:180:
+       $

ERROR:CODE_INDENT: code indent should use tabs where possible
#272: FILE: block/cscan.c:181:
+        if((crq->queue_id == cd->first) && (rb_prev(&crq->rb_node) == NULL))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: block/cscan.c:181:
+        if((crq->queue_id == cd->first) && (rb_prev(&crq->rb_node) == NULL))$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'crq->queue_id == cd->first'
#272: FILE: block/cscan.c:181:
+        if((crq->queue_id == cd->first) && (rb_prev(&crq->rb_node) == NULL))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space required before the open parenthesis '('
#272: FILE: block/cscan.c:181:
+        if((crq->queue_id == cd->first) && (rb_prev(&crq->rb_node) == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rb_prev"
#272: FILE: block/cscan.c:181:
+        if((crq->queue_id == cd->first) && (rb_prev(&crq->rb_node) == NULL))

ERROR:CODE_INDENT: code indent should use tabs where possible
#273: FILE: block/cscan.c:182:
+                return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: block/cscan.c:182:
+                return NULL;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#274: FILE: block/cscan.c:183:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#274: FILE: block/cscan.c:183:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: block/cscan.c:183:
+        $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#275: FILE: block/cscan.c:184:
+        if( (crq->queue_id == (1 - cd->first)) && $

ERROR:CODE_INDENT: code indent should use tabs where possible
#275: FILE: block/cscan.c:184:
+        if( (crq->queue_id == (1 - cd->first)) && $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: block/cscan.c:184:
+        if( (crq->queue_id == (1 - cd->first)) && $

ERROR:SPACING: space prohibited after that open parenthesis '('
#275: FILE: block/cscan.c:184:
+        if( (crq->queue_id == (1 - cd->first)) && 

ERROR:SPACING: space required before the open parenthesis '('
#275: FILE: block/cscan.c:184:
+        if( (crq->queue_id == (1 - cd->first)) && 

ERROR:CODE_INDENT: code indent should use tabs where possible
#276: FILE: block/cscan.c:185:
+                                (rb_prev(&crq->rb_node) == NULL)){$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#276: FILE: block/cscan.c:185:
+        if( (crq->queue_id == (1 - cd->first)) && 
+                                (rb_prev(&crq->rb_node) == NULL)){

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: block/cscan.c:185:
+                                (rb_prev(&crq->rb_node) == NULL)){$

ERROR:SPACING: space required before the open brace '{'
#276: FILE: block/cscan.c:185:
+                                (rb_prev(&crq->rb_node) == NULL)){

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rb_prev"
#276: FILE: block/cscan.c:185:
+                                (rb_prev(&crq->rb_node) == NULL)){

ERROR:CODE_INDENT: code indent should use tabs where possible
#277: FILE: block/cscan.c:186:
+                if(rb_last(&cd->sort_list[cd->first])){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: block/cscan.c:186:
+                if(rb_last(&cd->sort_list[cd->first])){$

ERROR:SPACING: space required before the open brace '{'
#277: FILE: block/cscan.c:186:
+                if(rb_last(&cd->sort_list[cd->first])){

ERROR:SPACING: space required before the open parenthesis '('
#277: FILE: block/cscan.c:186:
+                if(rb_last(&cd->sort_list[cd->first])){

ERROR:CODE_INDENT: code indent should use tabs where possible
#278: FILE: block/cscan.c:187:
+                ^Icrq = rb_entry_crq(rb_last($

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#278: FILE: block/cscan.c:187:
+                ^Icrq = rb_entry_crq(rb_last($

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: block/cscan.c:187:
+                ^Icrq = rb_entry_crq(rb_last($

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#278: FILE: block/cscan.c:187:
+                	crq = rb_entry_crq(rb_last(

ERROR:CODE_INDENT: code indent should use tabs where possible
#279: FILE: block/cscan.c:188:
+                                &cd->sort_list[cd->first]));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: block/cscan.c:188:
+                                &cd->sort_list[cd->first]));$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#280: FILE: block/cscan.c:189:
+                        return crq->request;                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#280: FILE: block/cscan.c:189:
+                        return crq->request;                                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: block/cscan.c:189:
+                        return crq->request;                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#281: FILE: block/cscan.c:190:
+                } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: block/cscan.c:190:
+                } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#282: FILE: block/cscan.c:191:
+                        return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: block/cscan.c:191:
+                        return NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#283: FILE: block/cscan.c:192:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: block/cscan.c:192:
+                }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#284: FILE: block/cscan.c:193:
+        }            $

ERROR:CODE_INDENT: code indent should use tabs where possible
#284: FILE: block/cscan.c:193:
+        }            $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: block/cscan.c:193:
+        }            $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#285: FILE: block/cscan.c:194:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#285: FILE: block/cscan.c:194:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: block/cscan.c:194:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#286: FILE: block/cscan.c:195:
+        return rb_entry_crq(rb_prev(&crq->rb_node))->request;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: block/cscan.c:195:
+        return rb_entry_crq(rb_prev(&crq->rb_node))->request;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#293: FILE: block/cscan.c:202:
+        struct cscan_request * crq = RQ_DATA(rq); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#293: FILE: block/cscan.c:202:
+        struct cscan_request * crq = RQ_DATA(rq); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: block/cscan.c:202:
+        struct cscan_request * crq = RQ_DATA(rq); $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#293: FILE: block/cscan.c:202:
+        struct cscan_request * crq = RQ_DATA(rq); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#294: FILE: block/cscan.c:203:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: block/cscan.c:203:
+       $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#295: FILE: block/cscan.c:204:
+        if((crq->queue_id == (1 - cd->first)) && $

ERROR:CODE_INDENT: code indent should use tabs where possible
#295: FILE: block/cscan.c:204:
+        if((crq->queue_id == (1 - cd->first)) && $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: block/cscan.c:204:
+        if((crq->queue_id == (1 - cd->first)) && $

ERROR:SPACING: space required before the open parenthesis '('
#295: FILE: block/cscan.c:204:
+        if((crq->queue_id == (1 - cd->first)) && 

ERROR:CODE_INDENT: code indent should use tabs where possible
#296: FILE: block/cscan.c:205:
+                                (rb_next(&crq->rb_node) == NULL))$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#296: FILE: block/cscan.c:205:
+        if((crq->queue_id == (1 - cd->first)) && 
+                                (rb_next(&crq->rb_node) == NULL))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: block/cscan.c:205:
+                                (rb_next(&crq->rb_node) == NULL))$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rb_next"
#296: FILE: block/cscan.c:205:
+                                (rb_next(&crq->rb_node) == NULL))

ERROR:CODE_INDENT: code indent should use tabs where possible
#297: FILE: block/cscan.c:206:
+                return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: block/cscan.c:206:
+                return NULL;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#298: FILE: block/cscan.c:207:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#298: FILE: block/cscan.c:207:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: block/cscan.c:207:
+        $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#299: FILE: block/cscan.c:208:
+        if( (crq->queue_id == cd->first) && $

ERROR:CODE_INDENT: code indent should use tabs where possible
#299: FILE: block/cscan.c:208:
+        if( (crq->queue_id == cd->first) && $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: block/cscan.c:208:
+        if( (crq->queue_id == cd->first) && $

ERROR:SPACING: space prohibited after that open parenthesis '('
#299: FILE: block/cscan.c:208:
+        if( (crq->queue_id == cd->first) && 

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'crq->queue_id == cd->first'
#299: FILE: block/cscan.c:208:
+        if( (crq->queue_id == cd->first) && 
+                                (rb_next(&crq->rb_node) == NULL)){

ERROR:SPACING: space required before the open parenthesis '('
#299: FILE: block/cscan.c:208:
+        if( (crq->queue_id == cd->first) && 

ERROR:CODE_INDENT: code indent should use tabs where possible
#300: FILE: block/cscan.c:209:
+                                (rb_next(&crq->rb_node) == NULL)){$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#300: FILE: block/cscan.c:209:
+        if( (crq->queue_id == cd->first) && 
+                                (rb_next(&crq->rb_node) == NULL)){

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: block/cscan.c:209:
+                                (rb_next(&crq->rb_node) == NULL)){$

ERROR:SPACING: space required before the open brace '{'
#300: FILE: block/cscan.c:209:
+                                (rb_next(&crq->rb_node) == NULL)){

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rb_next"
#300: FILE: block/cscan.c:209:
+                                (rb_next(&crq->rb_node) == NULL)){

ERROR:CODE_INDENT: code indent should use tabs where possible
#301: FILE: block/cscan.c:210:
+                if(rb_first(&cd->sort_list[1 - cd->first])){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: block/cscan.c:210:
+                if(rb_first(&cd->sort_list[1 - cd->first])){$

ERROR:SPACING: space required before the open brace '{'
#301: FILE: block/cscan.c:210:
+                if(rb_first(&cd->sort_list[1 - cd->first])){

ERROR:SPACING: space required before the open parenthesis '('
#301: FILE: block/cscan.c:210:
+                if(rb_first(&cd->sort_list[1 - cd->first])){

ERROR:CODE_INDENT: code indent should use tabs where possible
#302: FILE: block/cscan.c:211:
+                ^Icrq = rb_entry_crq(rb_first($

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#302: FILE: block/cscan.c:211:
+                ^Icrq = rb_entry_crq(rb_first($

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: block/cscan.c:211:
+                ^Icrq = rb_entry_crq(rb_first($

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#302: FILE: block/cscan.c:211:
+                	crq = rb_entry_crq(rb_first(

ERROR:CODE_INDENT: code indent should use tabs where possible
#303: FILE: block/cscan.c:212:
+                                &cd->sort_list[1 - cd->first]));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: block/cscan.c:212:
+                                &cd->sort_list[1 - cd->first]));$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#304: FILE: block/cscan.c:213:
+                        return crq->request;                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#304: FILE: block/cscan.c:213:
+                        return crq->request;                                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: block/cscan.c:213:
+                        return crq->request;                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#305: FILE: block/cscan.c:214:
+                } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: block/cscan.c:214:
+                } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#306: FILE: block/cscan.c:215:
+                        return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: block/cscan.c:215:
+                        return NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#307: FILE: block/cscan.c:216:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: block/cscan.c:216:
+                }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#308: FILE: block/cscan.c:217:
+        }            $

ERROR:CODE_INDENT: code indent should use tabs where possible
#308: FILE: block/cscan.c:217:
+        }            $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: block/cscan.c:217:
+        }            $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#309: FILE: block/cscan.c:218:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#309: FILE: block/cscan.c:218:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#309: FILE: block/cscan.c:218:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#310: FILE: block/cscan.c:219:
+        return rb_entry_crq(rb_next(&crq->rb_node))->request;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#310: FILE: block/cscan.c:219:
+        return rb_entry_crq(rb_next(&crq->rb_node))->request;$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#312: FILE: block/cscan.c:221:
+
+}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#314: FILE: block/cscan.c:223:
+static void $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#315: FILE: block/cscan.c:224:
+cscan_put_request(request_queue_t *q, struct request * rq) $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#315: FILE: block/cscan.c:224:
+cscan_put_request(request_queue_t *q, struct request * rq) 

ERROR:CODE_INDENT: code indent should use tabs where possible
#317: FILE: block/cscan.c:226:
+        struct cscan_data * cd = q->elevator->elevator_data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#317: FILE: block/cscan.c:226:
+        struct cscan_data * cd = q->elevator->elevator_data;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#317: FILE: block/cscan.c:226:
+        struct cscan_data * cd = q->elevator->elevator_data;

ERROR:CODE_INDENT: code indent should use tabs where possible
#318: FILE: block/cscan.c:227:
+        struct cscan_request *crq = RQ_DATA(rq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#318: FILE: block/cscan.c:227:
+        struct cscan_request *crq = RQ_DATA(rq);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#320: FILE: block/cscan.c:229:
+        mempool_free(crq,cd->crq_pool);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: block/cscan.c:229:
+        mempool_free(crq,cd->crq_pool);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#320: FILE: block/cscan.c:229:
+        mempool_free(crq,cd->crq_pool);
                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#321: FILE: block/cscan.c:230:
+        rq->elevator_private = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: block/cscan.c:230:
+        rq->elevator_private = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#326: FILE: block/cscan.c:235:
+                     gfp_t gfp_mask)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#326: FILE: block/cscan.c:235:
+cscan_set_request(request_queue_t *q, struct request *rq, struct bio *bio,
+                     gfp_t gfp_mask)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: block/cscan.c:235:
+                     gfp_t gfp_mask)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#328: FILE: block/cscan.c:237:
+        struct cscan_data * cd = q->elevator->elevator_data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: block/cscan.c:237:
+        struct cscan_data * cd = q->elevator->elevator_data;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#328: FILE: block/cscan.c:237:
+        struct cscan_data * cd = q->elevator->elevator_data;

ERROR:CODE_INDENT: code indent should use tabs where possible
#329: FILE: block/cscan.c:238:
+        struct cscan_request * crq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: block/cscan.c:238:
+        struct cscan_request * crq;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#329: FILE: block/cscan.c:238:
+        struct cscan_request * crq;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#330: FILE: block/cscan.c:239:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#330: FILE: block/cscan.c:239:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: block/cscan.c:239:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#331: FILE: block/cscan.c:240:
+        crq = mempool_alloc(cd->crq_pool,gfp_mask);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: block/cscan.c:240:
+        crq = mempool_alloc(cd->crq_pool,gfp_mask);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#331: FILE: block/cscan.c:240:
+        crq = mempool_alloc(cd->crq_pool,gfp_mask);
                                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#332: FILE: block/cscan.c:241:
+        if(crq) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: block/cscan.c:241:
+        if(crq) {$

ERROR:SPACING: space required before the open parenthesis '('
#332: FILE: block/cscan.c:241:
+        if(crq) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#333: FILE: block/cscan.c:242:
+                memset(crq,0,sizeof(*crq));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: block/cscan.c:242:
+                memset(crq,0,sizeof(*crq));$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#333: FILE: block/cscan.c:242:
+                memset(crq,0,sizeof(*crq));
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#333: FILE: block/cscan.c:242:
+                memset(crq,0,sizeof(*crq));
                             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#334: FILE: block/cscan.c:243:
+                RB_CLEAR(&crq->rb_node);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: block/cscan.c:243:
+                RB_CLEAR(&crq->rb_node);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#335: FILE: block/cscan.c:244:
+                crq->request = rq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: block/cscan.c:244:
+                crq->request = rq;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#336: FILE: block/cscan.c:245:
+                rq->elevator_private = crq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#336: FILE: block/cscan.c:245:
+                rq->elevator_private = crq;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#337: FILE: block/cscan.c:246:
+                return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: block/cscan.c:246:
+                return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#338: FILE: block/cscan.c:247:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: block/cscan.c:247:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#339: FILE: block/cscan.c:248:
+        return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#339: FILE: block/cscan.c:248:
+        return 1;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#342: FILE: block/cscan.c:251:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#343: FILE: block/cscan.c:252:
+static int $

ERROR:CODE_INDENT: code indent should use tabs where possible
#347: FILE: block/cscan.c:256:
+        int i = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: block/cscan.c:256:
+        int i = 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#352: FILE: block/cscan.c:261:
+                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#352: FILE: block/cscan.c:261:
+                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: block/cscan.c:261:
+                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#353: FILE: block/cscan.c:262:
+        cd->first = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: block/cscan.c:262:
+        cd->first = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#354: FILE: block/cscan.c:263:
+        cd->last_sector = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: block/cscan.c:263:
+        cd->last_sector = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#355: FILE: block/cscan.c:264:
+        for(i=0;i<2;i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: block/cscan.c:264:
+        for(i=0;i<2;i++) {$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#355: FILE: block/cscan.c:264:
+        for(i=0;i<2;i++) {
              ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#355: FILE: block/cscan.c:264:
+        for(i=0;i<2;i++) {
                ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#355: FILE: block/cscan.c:264:
+        for(i=0;i<2;i++) {
                  ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#355: FILE: block/cscan.c:264:
+        for(i=0;i<2;i++) {
                    ^

ERROR:SPACING: space required before the open parenthesis '('
#355: FILE: block/cscan.c:264:
+        for(i=0;i<2;i++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#356: FILE: block/cscan.c:265:
+                cd->sort_list[i] = RB_ROOT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#356: FILE: block/cscan.c:265:
+                cd->sort_list[i] = RB_ROOT;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#357: FILE: block/cscan.c:266:
+                cd->count[i]     = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#357: FILE: block/cscan.c:266:
+                cd->count[i]     = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#358: FILE: block/cscan.c:267:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#358: FILE: block/cscan.c:267:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#361: FILE: block/cscan.c:270:
+        cd->crq_pool = mempool_create(BLKDEV_MIN_RQ,mempool_alloc_slab,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#361: FILE: block/cscan.c:270:
+        cd->crq_pool = mempool_create(BLKDEV_MIN_RQ,mempool_alloc_slab,$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#361: FILE: block/cscan.c:270:
+        cd->crq_pool = mempool_create(BLKDEV_MIN_RQ,mempool_alloc_slab,
                                                    ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#362: FILE: block/cscan.c:271:
+                        mempool_free_slab,crq_pool);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#362: FILE: block/cscan.c:271:
+        cd->crq_pool = mempool_create(BLKDEV_MIN_RQ,mempool_alloc_slab,
+                        mempool_free_slab,crq_pool);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: block/cscan.c:271:
+                        mempool_free_slab,crq_pool);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#362: FILE: block/cscan.c:271:
+                        mempool_free_slab,crq_pool);
                                          ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: block/cscan.c:273:
+       if(!cd->crq_pool) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 16)
#364: FILE: block/cscan.c:273:
+       if(!cd->crq_pool) {
+                kfree(cd);

ERROR:SPACING: space required before the open parenthesis '('
#364: FILE: block/cscan.c:273:
+       if(!cd->crq_pool) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#365: FILE: block/cscan.c:274:
+                kfree(cd);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: block/cscan.c:274:
+                kfree(cd);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#366: FILE: block/cscan.c:275:
+                return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: block/cscan.c:275:
+                return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: block/cscan.c:276:
+       }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#371: FILE: block/cscan.c:280:
+static void $

ERROR:CODE_INDENT: code indent should use tabs where possible
#376: FILE: block/cscan.c:285:
+        BUG_ON(rb_first(&cd->sort_list[cd->first]) != NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: block/cscan.c:285:
+        BUG_ON(rb_first(&cd->sort_list[cd->first]) != NULL);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#376: FILE: block/cscan.c:285:
+        BUG_ON(rb_first(&cd->sort_list[cd->first]) != NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rb_first"
#376: FILE: block/cscan.c:285:
+        BUG_ON(rb_first(&cd->sort_list[cd->first]) != NULL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#377: FILE: block/cscan.c:286:
+        BUG_ON(rb_first(&cd->sort_list[1 - cd->first]) != NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: block/cscan.c:286:
+        BUG_ON(rb_first(&cd->sort_list[1 - cd->first]) != NULL);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#377: FILE: block/cscan.c:286:
+        BUG_ON(rb_first(&cd->sort_list[1 - cd->first]) != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rb_first"
#377: FILE: block/cscan.c:286:
+        BUG_ON(rb_first(&cd->sort_list[1 - cd->first]) != NULL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#390: FILE: block/cscan.c:299:
+                .elevator_set_req_fn            = cscan_set_request,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#390: FILE: block/cscan.c:299:
+                .elevator_set_req_fn            = cscan_set_request,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#391: FILE: block/cscan.c:300:
+                .elevator_put_req_fn            = cscan_put_request,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#391: FILE: block/cscan.c:300:
+                .elevator_put_req_fn            = cscan_put_request,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#399: FILE: block/cscan.c:308:
+static int __init $

ERROR:CODE_INDENT: code indent should use tabs where possible
#402: FILE: block/cscan.c:311:
+        int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#402: FILE: block/cscan.c:311:
+        int ret;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#404: FILE: block/cscan.c:313:
+        crq_pool = kmem_cache_create("cscan_crq", sizeof(struct cscan_request),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#404: FILE: block/cscan.c:313:
+        crq_pool = kmem_cache_create("cscan_crq", sizeof(struct cscan_request),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#405: FILE: block/cscan.c:314:
+                                     0, 0, NULL, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#405: FILE: block/cscan.c:314:
+                                     0, 0, NULL, NULL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#406: FILE: block/cscan.c:315:
+        if (!crq_pool)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#406: FILE: block/cscan.c:315:
+        if (!crq_pool)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 17)
#406: FILE: block/cscan.c:315:
+        if (!crq_pool)
+                 return -ENOMEM;

ERROR:CODE_INDENT: code indent should use tabs where possible
#407: FILE: block/cscan.c:316:
+                 return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: block/cscan.c:316:
+                 return -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#409: FILE: block/cscan.c:318:
+        ret = elv_register(&elevator_cscan);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: block/cscan.c:318:
+        ret = elv_register(&elevator_cscan);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#410: FILE: block/cscan.c:319:
+        if(ret)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#410: FILE: block/cscan.c:319:
+        if(ret)$

ERROR:SPACING: space required before the open parenthesis '('
#410: FILE: block/cscan.c:319:
+        if(ret)

ERROR:CODE_INDENT: code indent should use tabs where possible
#411: FILE: block/cscan.c:320:
+                kmem_cache_destroy(crq_pool);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#411: FILE: block/cscan.c:320:
+                kmem_cache_destroy(crq_pool);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#412: FILE: block/cscan.c:321:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#412: FILE: block/cscan.c:321:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#412: FILE: block/cscan.c:321:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#413: FILE: block/cscan.c:322:
+        return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#413: FILE: block/cscan.c:322:
+        return ret;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#416: FILE: block/cscan.c:325:
+static void __exit $

ERROR:CODE_INDENT: code indent should use tabs where possible
#419: FILE: block/cscan.c:328:
+        kmem_cache_destroy(crq_pool);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#419: FILE: block/cscan.c:328:
+        kmem_cache_destroy(crq_pool);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#426: FILE: block/cscan.c:335:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000085857.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 280 errors, 173 warnings, 26 checks, 364 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000085857.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
