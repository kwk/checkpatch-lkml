WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
The following patch implements the registration of PCI Host Bridges as hotplug

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#34: 
# ls /sys/bus/pci/slots

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#41: 
# ls /sys/bus/pci/slots

WARNING:BRACES: braces {} are not necessary for single statement blocks
#134: FILE: drivers/pci/hotplug/rpaphp_pci.c:418:
+	if (!dn) {
+		return 1;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#138: FILE: drivers/pci/hotplug/rpaphp_pci.c:422:
+	if (!phb) {
+		return 1;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#142: FILE: drivers/pci/hotplug/rpaphp_pci.c:426:
+	if (!bus) {
+		return 1;
+	}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#147: FILE: drivers/pci/hotplug/rpaphp_pci.c:431:
+	sprintf(slot->name, "%04x:%02x:%02x.%x", pci_domain_nr(bus),
+			bus->number, 0, 0);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#162: FILE: drivers/pci/hotplug/rpaphp_pci.c:442:
+			err("%s: failed to set phb slot name\n", __FUNCTION__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#170: FILE: drivers/pci/hotplug/rpaphp_pci.c:450:
+			err("%s: no pci_dev for bridge dn %s\n",
+					__FUNCTION__, slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#170: FILE: drivers/pci/hotplug/rpaphp_pci.c:450:
+					__FUNCTION__, slot->name);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#173: FILE: drivers/pci/hotplug/rpaphp_pci.c:453:
+		dbg("%s set slot->name to %s\n",  __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#174: FILE: drivers/pci/hotplug/rpaphp_pci.c:454:
+		dbg("%s set slot->name to %s\n",  __FUNCTION__,
+				pci_name(slot->bridge));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'slot->type == EMBEDDED'
#188: FILE: drivers/pci/hotplug/rpaphp_pci.c:510:
+	if ((slot->type == EMBEDDED) || (slot->type == PHB))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'slot->type == PHB'
#188: FILE: drivers/pci/hotplug/rpaphp_pci.c:510:
+	if ((slot->type == EMBEDDED) || (slot->type == PHB))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#219: FILE: drivers/pci/hotplug/rpaphp_slot.c:260:
+		dbg("%s report POWER_ON for EMBEDDED or PHB slot %s\n",
+			__FUNCTION__, slot->location);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#219: FILE: drivers/pci/hotplug/rpaphp_slot.c:260:
+			__FUNCTION__, slot->location);

CHECK:SPACING: No space is necessary after a cast
#220: FILE: drivers/pci/hotplug/rpaphp_slot.c:261:
+		*value = (u8) POWER_ON;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000240001.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 10 warnings, 7 checks, 144 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000240001.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
