CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#47: FILE: kernel/power/proc.c:37:
+static int suspend_read_proc(char *page, char **start, off_t off, int count,
+		int *eof, void *data)

CHECK:SPACING: No space is necessary after a cast
#50: FILE: kernel/power/proc.c:40:
+	struct suspend_proc_data *proc_data = (struct suspend_proc_data *) data;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#54: FILE: kernel/power/proc.c:44:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#57: FILE: kernel/power/proc.c:47:
+^I$

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#58: FILE: kernel/power/proc.c:48:
+	switch (proc_data->type) {
+		case SUSPEND_PROC_DATA_CUSTOM:
[...]
+		case SUSPEND_PROC_DATA_BIT:
[...]
+		case SUSPEND_PROC_DATA_INTEGER:
[...]
+		case SUSPEND_PROC_DATA_LONG:
[...]
+		case SUSPEND_PROC_DATA_UL:
[...]
+		case SUSPEND_PROC_DATA_STRING:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:BRACES: braces {} should be used on all arms of this statement
#60: FILE: kernel/power/proc.c:50:
+			if (proc_data->data.special.read_proc) {
[...]
+			} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#62: FILE: kernel/power/proc.c:52:
+				read_proc_t *read_proc = proc_data->data.special.read_proc;
+				len = read_proc(page, start, off, count, eof, data);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#63: FILE: kernel/power/proc.c:53:
+			} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#67: FILE: kernel/power/proc.c:57:
+^I^I^Ilen = sprintf(page, "%d\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#68: FILE: kernel/power/proc.c:58:
+			len = sprintf(page, "%d\n", 
+				-test_bit(proc_data->data.bit.bit,

WARNING:LINE_SPACING: Missing a blank line after declarations
#74: FILE: kernel/power/proc.c:64:
+				int *variable = proc_data->data.integer.variable;
+				len = sprintf(page, "%d\n", *variable);

WARNING:LINE_SPACING: Missing a blank line after declarations
#80: FILE: kernel/power/proc.c:70:
+				long *variable = proc_data->data.a_long.variable;
+				len = sprintf(page, "%ld\n", *variable);

WARNING:LINE_SPACING: Missing a blank line after declarations
#86: FILE: kernel/power/proc.c:76:
+				long *variable = proc_data->data.ul.variable;
+				len = sprintf(page, "%lu\n", *variable);

WARNING:LINE_SPACING: Missing a blank line after declarations
#92: FILE: kernel/power/proc.c:82:
+				char *variable = proc_data->data.string.variable;
+				len = sprintf(page, "%s\n", variable);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#99: FILE: kernel/power/proc.c:89:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#102: FILE: kernel/power/proc.c:92:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#107: FILE: kernel/power/proc.c:97:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000064889.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 5 warnings, 5 checks, 73 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000064889.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
