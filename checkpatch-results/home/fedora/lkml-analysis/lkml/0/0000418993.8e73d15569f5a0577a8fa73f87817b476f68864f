WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#24: 
--On Friday, October 18, 2002 15:05:50 -0700 Linus Torvalds <torvalds@transmeta.com> wrote:

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#90: FILE: drivers/char/eventpoll.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'Efficent' may be misspelled - perhaps 'Efficient'?
#91: FILE: drivers/char/eventpoll.c:2:
+ *  drivers/char/eventpoll.c ( Efficent event polling implementation )
                                ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#91: FILE: drivers/char/eventpoll.c:2:
+ *  drivers/char/eventpoll.c ( Efficent event polling implementation )

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:INCLUDE_LINUX: Use #include <linux/bitops.h> instead of <asm/bitops.h>
#124: FILE: drivers/char/eventpoll.c:35:
+#include <asm/bitops.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#125: FILE: drivers/char/eventpoll.c:36:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#127: FILE: drivers/char/eventpoll.c:38:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#129: FILE: drivers/char/eventpoll.c:40:
+#include <asm/atomic.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#132: FILE: drivers/char/eventpoll.c:43:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#139: FILE: drivers/char/eventpoll.c:50:
+#define DPRINTK(x) printk x

CHECK:SPACING: No space is necessary after a cast
#142: FILE: drivers/char/eventpoll.c:53:
+#define DPRINTK(x) (void) 0

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#142: FILE: drivers/char/eventpoll.c:53:
+#define DPRINTK(x) (void) 0

CHECK:SPACING: No space is necessary after a cast
#143: FILE: drivers/char/eventpoll.c:54:
+#define DNPRINTK(n, x) (void) 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#143: FILE: drivers/char/eventpoll.c:54:
+#define DNPRINTK(n, x) (void) 0

CHECK:SPACING: No space is necessary after a cast
#158: FILE: drivers/char/eventpoll.c:69:
+#define DPI_MEM_ALLOC()	(struct epitem *) kmem_cache_alloc(dpi_cache, SLAB_KERNEL)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#158: FILE: drivers/char/eventpoll.c:69:
+#define DPI_MEM_ALLOC()	(struct epitem *) kmem_cache_alloc(dpi_cache, SLAB_KERNEL)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#162: FILE: drivers/char/eventpoll.c:73:
+
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#164: FILE: drivers/char/eventpoll.c:75:
+typedef unsigned long long event_version_t;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#194: FILE: drivers/char/eventpoll.c:105:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#196: FILE: drivers/char/eventpoll.c:107:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#212: FILE: drivers/char/eventpoll.c:123:
+static int write_eventpoll(struct file *file, const char *buffer, size_t count,
+						   loff_t *ppos);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#216: FILE: drivers/char/eventpoll.c:127:
+static int ioctl_eventpoll(struct inode *inode, struct file *file,
+						   unsigned int cmd, unsigned long arg);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#217: FILE: drivers/char/eventpoll.c:128:
+static void eventpoll_mm_open(struct vm_area_struct * vma);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#218: FILE: drivers/char/eventpoll.c:129:
+static void eventpoll_mm_close(struct vm_area_struct * vma);

WARNING:LONG_LINE: line length of 129 exceeds 100 columns
#223: FILE: drivers/char/eventpoll.c:134:
+											  int flags, char *dev_name, void *data);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#223: FILE: drivers/char/eventpoll.c:134:
+static struct super_block *eventpollfs_get_sb(struct file_system_type *fs_type,
+											  int flags, char *dev_name, void *data);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#225: FILE: drivers/char/eventpoll.c:136:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#227: FILE: drivers/char/eventpoll.c:138:
+
+

WARNING:CONST_STRUCT: struct file_operations should normally be const
#231: FILE: drivers/char/eventpoll.c:142:
+static struct file_operations eventpoll_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct vm_operations_struct should normally be const
#240: FILE: drivers/char/eventpoll.c:151:
+static struct vm_operations_struct eventpoll_mmap_ops = {

WARNING:CONST_STRUCT: struct dentry_operations should normally be const
#255: FILE: drivers/char/eventpoll.c:166:
+static struct dentry_operations eventpollfs_dentry_operations = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#259: FILE: drivers/char/eventpoll.c:170:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sys_epoll_create', this function's name, in a string
#269: FILE: drivers/char/eventpoll.c:180:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: sys_epoll_create(%d)\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#270: FILE: drivers/char/eventpoll.c:181:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: sys_epoll_create(%d)\n",
+				 current, maxfds));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#286: FILE: drivers/char/eventpoll.c:197:
+	addr = do_mmap_pgoff(file, 0, EP_MAP_SIZE(maxfds + 1), PROT_READ,
+						 MAP_PRIVATE, 0);

CHECK:SPACING: No space is necessary after a cast
#288: FILE: drivers/char/eventpoll.c:199:
+	error = PTR_ERR((void *) addr);

CHECK:SPACING: No space is necessary after a cast
#289: FILE: drivers/char/eventpoll.c:200:
+	if (IS_ERR((void *) addr))

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sys_epoll_create', this function's name, in a string
#292: FILE: drivers/char/eventpoll.c:203:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: sys_epoll_create(%d) = %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#293: FILE: drivers/char/eventpoll.c:204:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: sys_epoll_create(%d) = %d\n",
+				 current, maxfds, fd));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sys_epoll_create', this function's name, in a string
#300: FILE: drivers/char/eventpoll.c:211:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: sys_epoll_create(%d) = %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#301: FILE: drivers/char/eventpoll.c:212:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: sys_epoll_create(%d) = %d\n",
+				 current, maxfds, error));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#306: FILE: drivers/char/eventpoll.c:217:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sys_epoll_ctl', this function's name, in a string
#315: FILE: drivers/char/eventpoll.c:226:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: sys_epoll_ctl(%d, %d, %d, %u)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#316: FILE: drivers/char/eventpoll.c:227:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: sys_epoll_ctl(%d, %d, %d, %u)\n",
+				 current, epfd, op, fd, events));

CHECK:BRACES: braces {} should be used on all arms of this statement
#348: FILE: drivers/char/eventpoll.c:259:
+		if (dpi) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#351: FILE: drivers/char/eventpoll.c:262:
+		} else

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sys_epoll_ctl', this function's name, in a string
#356: FILE: drivers/char/eventpoll.c:267:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: sys_epoll_ctl(%d, %d, %d, %u) = %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#357: FILE: drivers/char/eventpoll.c:268:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: sys_epoll_ctl(%d, %d, %d, %u) = %d\n",
+				 current, epfd, op, fd, events, error));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#366: FILE: drivers/char/eventpoll.c:277:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sys_epoll_wait', this function's name, in a string
#375: FILE: drivers/char/eventpoll.c:286:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: sys_epoll_wait(%d, %p, %d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#376: FILE: drivers/char/eventpoll.c:287:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: sys_epoll_wait(%d, %p, %d)\n",
+				 current, epfd, events, timeout));

CHECK:SPACING: No space is necessary after a cast
#394: FILE: drivers/char/eventpoll.c:305:
+		eaddr = (void *) (ep->vmabase + dvp.ep_resoff);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sys_epoll_wait', this function's name, in a string
#399: FILE: drivers/char/eventpoll.c:310:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: sys_epoll_wait(%d, %p, %d) = %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#400: FILE: drivers/char/eventpoll.c:311:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: sys_epoll_wait(%d, %p, %d) = %d\n",
+				 current, epfd, events, timeout, error));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#409: FILE: drivers/char/eventpoll.c:320:
+
+

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#464: FILE: drivers/char/eventpoll.c:375:
+	iput(inode);
 	^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#468: FILE: drivers/char/eventpoll.c:379:
+^Ireturn error;^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#471: FILE: drivers/char/eventpoll.c:382:
+
+

CHECK:SPACING: No space is necessary after a cast
#477: FILE: drivers/char/eventpoll.c:388:
+		pages[ii] = (char *) __get_free_pages(GFP_KERNEL, 0);

CHECK:SPACING: No space is necessary after a cast
#481: FILE: drivers/char/eventpoll.c:392:
+				free_pages((unsigned long) pages[ii], 0);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#490: FILE: drivers/char/eventpoll.c:401:
+
+

CHECK:SPACING: No space is necessary after a cast
#497: FILE: drivers/char/eventpoll.c:408:
+		free_pages((unsigned long) pages[ii], 0);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#502: FILE: drivers/char/eventpoll.c:413:
+
+

CHECK:SPACING: No space is necessary after a cast
#522: FILE: drivers/char/eventpoll.c:433:
+	if (!(ep->hash = (struct list_head *) vmalloc(hentries * sizeof(struct list_head))))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#522: FILE: drivers/char/eventpoll.c:433:
+	if (!(ep->hash = (struct list_head *) vmalloc(hentries * sizeof(struct list_head))))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#522: FILE: drivers/char/eventpoll.c:433:
+	if (!(ep->hash = (struct list_head *) vmalloc(hentries * sizeof(struct list_head))))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#531: FILE: drivers/char/eventpoll.c:442:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#553: FILE: drivers/char/eventpoll.c:464:
+
+

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#563: FILE: drivers/char/eventpoll.c:474:
+		if (dpi->pfd.fd == fd) break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#572: FILE: drivers/char/eventpoll.c:483:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#587: FILE: drivers/char/eventpoll.c:498:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ep_hashresize', this function's name, in a string
#596: FILE: drivers/char/eventpoll.c:507:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: ep_hashresize(%p) bits=%u\n", current, ep, hbits));

CHECK:SPACING: No space is necessary after a cast
#601: FILE: drivers/char/eventpoll.c:512:
+	if (!(hash = (struct list_head *) vmalloc(hentries * sizeof(struct list_head)))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#601: FILE: drivers/char/eventpoll.c:512:
+	if (!(hash = (struct list_head *) vmalloc(hentries * sizeof(struct list_head)))) {

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#601: FILE: drivers/char/eventpoll.c:512:
+	if (!(hash = (struct list_head *) vmalloc(hentries * sizeof(struct list_head)))) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#638: FILE: drivers/char/eventpoll.c:549:
+
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#654: FILE: drivers/char/eventpoll.c:565:
+	if (!(dpi = DPI_MEM_ALLOC()))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#670: FILE: drivers/char/eventpoll.c:581:
+	if (!atomic_read(&ep->resize) &&
+		(atomic_read(&ep->hents) >> ep->hbits) > RESIZE_LENGTH &&

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ep_insert', this function's name, in a string
#680: FILE: drivers/char/eventpoll.c:591:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: ep_insert(%p, %d)\n", current, ep, pfd->fd));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#689: FILE: drivers/char/eventpoll.c:600:
+
+

CHECK:SPACING: No space is necessary after a cast
#704: FILE: drivers/char/eventpoll.c:615:
+		pfd = (struct pollfd *) (ep->pages[EVENT_PAGE_INDEX(dpi->index)] +

CHECK:SPACING: No space is necessary after a cast
#707: FILE: drivers/char/eventpoll.c:618:
+			lpfd = (struct pollfd *) (ep->pages[EVENT_PAGE_INDEX(ep->eventcnt)] +

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#708: FILE: drivers/char/eventpoll.c:619:
+									  EVENT_PAGE_OFFSET(ep->eventcnt));

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#711: FILE: drivers/char/eventpoll.c:622:
+			if ((ldpi = ep_find_nl(ep, pfd->fd))) ldpi->index = dpi->index;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#711: FILE: drivers/char/eventpoll.c:622:
+			if ((ldpi = ep_find_nl(ep, pfd->fd))) ldpi->index = dpi->index;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ep_remove', this function's name, in a string
#717: FILE: drivers/char/eventpoll.c:628:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: ep_remove(%p, %d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#718: FILE: drivers/char/eventpoll.c:629:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: ep_remove(%p, %d)\n",
+				 current, ep, dpi->pfd.fd));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#725: FILE: drivers/char/eventpoll.c:636:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#733: FILE: drivers/char/eventpoll.c:644:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: notify(%p, %p, %ld, %ld) ep=%p\n",
+				 current, file, data, event[0], event[1], ep));

CHECK:SPACING: No space is necessary after a cast
#744: FILE: drivers/char/eventpoll.c:655:
+		pfd = (struct pollfd *) (ep->pages[EVENT_PAGE_INDEX(dpi->index)] +

CHECK:SPACING: No space is necessary after a cast
#748: FILE: drivers/char/eventpoll.c:659:
+		pfd = (struct pollfd *) (ep->pages[EVENT_PAGE_INDEX(dpi->index)] +

CHECK:SPACING: No space is necessary after a cast
#754: FILE: drivers/char/eventpoll.c:665:
+			pfd = (struct pollfd *) (ep->pages[EVENT_PAGE_INDEX(dpi->index)] +

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#755: FILE: drivers/char/eventpoll.c:666:
+									 EVENT_PAGE_OFFSET(dpi->index));

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#762: FILE: drivers/char/eventpoll.c:673:
+	if (waitqueue_active(&ep->wq))

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#764: FILE: drivers/char/eventpoll.c:675:
+	if (waitqueue_active(&ep->poll_wait))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#770: FILE: drivers/char/eventpoll.c:681:
+
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#776: FILE: drivers/char/eventpoll.c:687:
+	if (!(ep = kmalloc(sizeof(struct eventpoll), GFP_KERNEL)))

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ep)...) over kmalloc(sizeof(struct eventpoll)...)
#776: FILE: drivers/char/eventpoll.c:687:
+	if (!(ep = kmalloc(sizeof(struct eventpoll), GFP_KERNEL)))

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#780: FILE: drivers/char/eventpoll.c:691:
+	if ((res = ep_init(ep))) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#791: FILE: drivers/char/eventpoll.c:702:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#805: FILE: drivers/char/eventpoll.c:716:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#817: FILE: drivers/char/eventpoll.c:728:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#819: FILE: drivers/char/eventpoll.c:730:
+static int write_eventpoll(struct file *file, const char *buffer, size_t count,
+						   loff_t *ppos)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#832: FILE: drivers/char/eventpoll.c:743:
+	if ((rcount = verify_area(VERIFY_READ, buffer, count)))

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#853: FILE: drivers/char/eventpoll.c:764:
+		}
+		else if (dpi) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#868: FILE: drivers/char/eventpoll.c:779:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: write(%p, %d) = %d\n",
+				 current, ep, count, rcount));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#873: FILE: drivers/char/eventpoll.c:784:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#891: FILE: drivers/char/eventpoll.c:802:
+^I^I^IMAX_SCHEDULE_TIMEOUT: (dvp->ep_timeout * HZ) / 1000; $

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#891: FILE: drivers/char/eventpoll.c:802:
+			MAX_SCHEDULE_TIMEOUT: (dvp->ep_timeout * HZ) / 1000; 
 			                    ^

WARNING:INDENTED_LABEL: labels should not be indented
#891: FILE: drivers/char/eventpoll.c:802:
+			MAX_SCHEDULE_TIMEOUT: (dvp->ep_timeout * HZ) / 1000; 

CHECK:LINE_SPACING: Please don't use multiple blank lines
#928: FILE: drivers/char/eventpoll.c:839:
+
+

CHECK:SPACING: No space is necessary after a cast
#941: FILE: drivers/char/eventpoll.c:852:
+	if ((pages = (char **) vmalloc(2 * (pgalloc + 1) * sizeof(char *))) == NULL)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#941: FILE: drivers/char/eventpoll.c:852:
+	if ((pages = (char **) vmalloc(2 * (pgalloc + 1) * sizeof(char *))) == NULL)

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#941: FILE: drivers/char/eventpoll.c:852:
+	if ((pages = (char **) vmalloc(2 * (pgalloc + 1) * sizeof(char *))) == NULL)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#946: FILE: drivers/char/eventpoll.c:857:
+	if ((res = ep_alloc_pages(pages0, pgalloc)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#949: FILE: drivers/char/eventpoll.c:860:
+	if ((res = ep_alloc_pages(pages1, pgalloc))) {

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#955: FILE: drivers/char/eventpoll.c:866:
+	pgcpy = (ep->numpages + pgalloc) > numpages ? numpages - ep->numpages: pgalloc;
 	                                                                     ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#975: FILE: drivers/char/eventpoll.c:886:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#977: FILE: drivers/char/eventpoll.c:888:
+static int ioctl_eventpoll(struct inode *inode, struct file *file,
+						   unsigned int cmd, unsigned long arg)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#991: FILE: drivers/char/eventpoll.c:902:
+		DNPRINTK(3, (KERN_INFO "[%p] eventpoll: ioctl(%p, EP_ALLOC, %lu) == %d\n",
+					 current, ep, arg, res));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1010: FILE: drivers/char/eventpoll.c:921:
+		DNPRINTK(3, (KERN_INFO "[%p] eventpoll: ioctl(%p, EP_FREE) == %d\n",
+					 current, ep, res));

CHECK:SPACING: No space is necessary after a cast
#1014: FILE: drivers/char/eventpoll.c:925:
+		if (copy_from_user(&dvp, (void *) arg, sizeof(struct evpoll)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1018: FILE: drivers/char/eventpoll.c:929:
+		DNPRINTK(3, (KERN_INFO "[%p] eventpoll: ioctl(%p, EP_POLL, %d)\n",
+					 current, ep, dvp.ep_timeout));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1023: FILE: drivers/char/eventpoll.c:934:
+		DNPRINTK(3, (KERN_INFO "[%p] eventpoll: ioctl(%p, EP_POLL, %d) == %d\n",
+					 current, ep, dvp.ep_timeout, res));

CHECK:SPACING: No space is necessary after a cast
#1025: FILE: drivers/char/eventpoll.c:936:
+		if (res > 0 && copy_to_user((void *) arg, &dvp, sizeof(struct evpoll)))

CHECK:SPACING: No space is necessary after a cast
#1031: FILE: drivers/char/eventpoll.c:942:
+		if (copy_from_user(&pfd, (void *) arg, sizeof(struct pollfd)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1037: FILE: drivers/char/eventpoll.c:948:
+		if (!(dpi = ep_find_nl(ep, pfd.fd)))

WARNING:INDENTED_LABEL: labels should not be indented
#1043: FILE: drivers/char/eventpoll.c:954:
+	is_not_polled:

CHECK:SPACING: No space is necessary after a cast
#1047: FILE: drivers/char/eventpoll.c:958:
+			copy_to_user((void *) arg, &pfd, sizeof(struct pollfd));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1050: FILE: drivers/char/eventpoll.c:961:
+		DNPRINTK(3, (KERN_INFO "[%p] eventpoll: ioctl(%p, EP_ISPOLLED, %d) == %d\n",
+					 current, ep, pfd.fd, res));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1057: FILE: drivers/char/eventpoll.c:968:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1058: FILE: drivers/char/eventpoll.c:969:
+static void eventpoll_mm_open(struct vm_area_struct * vma)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1063: FILE: drivers/char/eventpoll.c:974:
+	if (ep) atomic_inc(&ep->mmapped);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1068: FILE: drivers/char/eventpoll.c:979:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1069: FILE: drivers/char/eventpoll.c:980:
+static void eventpoll_mm_close(struct vm_area_struct * vma)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1080: FILE: drivers/char/eventpoll.c:991:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1089: FILE: drivers/char/eventpoll.c:1000:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: mmap(%p, %lx, %lx)\n",
+				 current, ep, vma->vm_start, vma->vm_pgoff << PAGE_SHIFT));

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#1105: FILE: drivers/char/eventpoll.c:1016:
+		if ((res = remap_page_range(vma, start, __pa(ep->pages0[ii]),
[...]
+    		goto eexit_1;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1105: FILE: drivers/char/eventpoll.c:1016:
+		if ((res = remap_page_range(vma, start, __pa(ep->pages0[ii]),

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1106: FILE: drivers/char/eventpoll.c:1017:
+									PAGE_SIZE, vma->vm_page_prot)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1106: FILE: drivers/char/eventpoll.c:1017:
+		if ((res = remap_page_range(vma, start, __pa(ep->pages0[ii]),
+									PAGE_SIZE, vma->vm_page_prot)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#1107: FILE: drivers/char/eventpoll.c:1018:
+    ^I^Igoto eexit_1;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1107: FILE: drivers/char/eventpoll.c:1018:
+    ^I^Igoto eexit_1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1107: FILE: drivers/char/eventpoll.c:1018:
+    ^I^Igoto eexit_1;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#1111: FILE: drivers/char/eventpoll.c:1022:
+		if ((res = remap_page_range(vma, start, __pa(ep->pages1[ii]),
[...]
+    		goto eexit_1;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1111: FILE: drivers/char/eventpoll.c:1022:
+		if ((res = remap_page_range(vma, start, __pa(ep->pages1[ii]),

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1112: FILE: drivers/char/eventpoll.c:1023:
+									PAGE_SIZE, vma->vm_page_prot)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1112: FILE: drivers/char/eventpoll.c:1023:
+		if ((res = remap_page_range(vma, start, __pa(ep->pages1[ii]),
+									PAGE_SIZE, vma->vm_page_prot)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#1113: FILE: drivers/char/eventpoll.c:1024:
+    ^I^Igoto eexit_1;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1113: FILE: drivers/char/eventpoll.c:1024:
+    ^I^Igoto eexit_1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1113: FILE: drivers/char/eventpoll.c:1024:
+    ^I^Igoto eexit_1;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1123: FILE: drivers/char/eventpoll.c:1034:
+	DNPRINTK(3, (KERN_INFO "[%p] eventpoll: mmap(%p, %lx, %lx) == %d\n",
+				 current, ep, vma->vm_start, vma->vm_pgoff << PAGE_SHIFT, res));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1127: FILE: drivers/char/eventpoll.c:1038:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1130: FILE: drivers/char/eventpoll.c:1041:
+{
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1134: FILE: drivers/char/eventpoll.c:1045:
+
+

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR | S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#1152: FILE: drivers/char/eventpoll.c:1063:
+	inode->i_mode = S_IRUSR | S_IWUSR;

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1155: FILE: drivers/char/eventpoll.c:1066:
+	inode->i_atime = inode->i_mtime = inode->i_ctime = CURRENT_TIME;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1163: FILE: drivers/char/eventpoll.c:1074:
+
+

WARNING:LONG_LINE: line length of 128 exceeds 100 columns
#1165: FILE: drivers/char/eventpoll.c:1076:
+											  int flags, char *dev_name, void *data)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1165: FILE: drivers/char/eventpoll.c:1076:
+static struct super_block *eventpollfs_get_sb(struct file_system_type *fs_type,
+											  int flags, char *dev_name, void *data)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1167: FILE: drivers/char/eventpoll.c:1078:
+{
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1171: FILE: drivers/char/eventpoll.c:1082:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1178: FILE: drivers/char/eventpoll.c:1089:
+	dpi_cache = kmem_cache_create("eventpoll",
+								  sizeof(struct epitem),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1197: FILE: drivers/char/eventpoll.c:1108:
+	printk(KERN_INFO "[%p] eventpoll: driver installed.\n", current);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1225: FILE: drivers/char/eventpoll.c:1136:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1250: FILE: fs/fcblist.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1251: FILE: fs/fcblist.c:2:
+ *  linux/fs/fcblist.c ( File event callbacks handling )

WARNING:INCLUDE_LINUX: Use #include <linux/bitops.h> instead of <asm/bitops.h>
#1271: FILE: fs/fcblist.c:22:
+#include <asm/bitops.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1274: FILE: fs/fcblist.c:25:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1295: FILE: fs/fcblist.c:46:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1314: FILE: fs/fcblist.c:65:
+
+

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#1316: FILE: fs/fcblist.c:67:
+					  void (*cbproc)(struct file *, void *, unsigned long *, long *), void *data)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1316: FILE: fs/fcblist.c:67:
+int file_notify_addcb(struct file *filep,
+					  void (*cbproc)(struct file *, void *, unsigned long *, long *), void *data)

CHECK:SPACING: No space is necessary after a cast
#1321: FILE: fs/fcblist.c:72:
+	if (!(fcbp = (struct fcb_struct *) kmalloc(sizeof(struct fcb_struct), GFP_KERNEL)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1321: FILE: fs/fcblist.c:72:
+	if (!(fcbp = (struct fcb_struct *) kmalloc(sizeof(struct fcb_struct), GFP_KERNEL)))

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#1321: FILE: fs/fcblist.c:72:
+	if (!(fcbp = (struct fcb_struct *) kmalloc(sizeof(struct fcb_struct), GFP_KERNEL)))

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*fcbp)...) over kmalloc(sizeof(struct fcb_struct)...)
#1321: FILE: fs/fcblist.c:72:
+	if (!(fcbp = (struct fcb_struct *) kmalloc(sizeof(struct fcb_struct), GFP_KERNEL)))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1336: FILE: fs/fcblist.c:87:
+
+

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#1338: FILE: fs/fcblist.c:89:
+					  void (*cbproc)(struct file *, void *, unsigned long *, long *))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1338: FILE: fs/fcblist.c:89:
+int file_notify_delcb(struct file *filep,
+					  void (*cbproc)(struct file *, void *, unsigned long *, long *))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1363: FILE: fs/fcblist.c:114:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1408: FILE: fs/file_table.c:107:
+	file_notify_init(filp);
 	                 ^^^^

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#1454: FILE: fs/pipe.c:115:
+			file_send_notify(PIPE_WRITEFILE(*inode), ION_OUT, POLLOUT | POLLWRNORM | POLLWRBAND);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1463: FILE: fs/pipe.c:124:
+		file_send_notify(PIPE_WRITEFILE(*inode), ION_OUT, POLLOUT | POLLWRNORM | POLLWRBAND);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1514: FILE: fs/pipe.c:290:
+ ^Iif (decr && !PIPE_READERS(*inode)) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1514: FILE: fs/pipe.c:290:
+ ^Iif (decr && !PIPE_READERS(*inode)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1514: FILE: fs/pipe.c:290:
+ ^Iif (decr && !PIPE_READERS(*inode)) {$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1573: FILE: include/linux/eventpoll.h:1:
+/*

WARNING:TYPO_SPELLING: 'Efficent' may be misspelled - perhaps 'Efficient'?
#1574: FILE: include/linux/eventpoll.h:2:
+ *  include/linux/eventpoll.h ( Efficent event polling implementation )
                                 ^^^^^^^^

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1574: FILE: include/linux/eventpoll.h:2:
+ *  include/linux/eventpoll.h ( Efficent event polling implementation )

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1589: FILE: include/linux/eventpoll.h:17:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1600: FILE: include/linux/eventpoll.h:28:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1615: FILE: include/linux/eventpoll.h:43:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1620: FILE: include/linux/eventpoll.h:48:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1628: FILE: include/linux/fcblist.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1629: FILE: include/linux/fcblist.h:2:
+ *  include/linux/fcblist.h ( File event callbacks handling )

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1650: FILE: include/linux/fcblist.h:23:
+
+

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#1667: FILE: include/linux/fcblist.h:40:
+	void (*cbproc)(struct file *, void *, unsigned long *, long *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1667: FILE: include/linux/fcblist.h:40:
+	void (*cbproc)(struct file *, void *, unsigned long *, long *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long *' should also have an identifier name
#1667: FILE: include/linux/fcblist.h:40:
+	void (*cbproc)(struct file *, void *, unsigned long *, long *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long *' should also have an identifier name
#1667: FILE: include/linux/fcblist.h:40:
+	void (*cbproc)(struct file *, void *, unsigned long *, long *);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1672: FILE: include/linux/fcblist.h:45:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1676: FILE: include/linux/fcblist.h:49:
+
+

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#1680: FILE: include/linux/fcblist.h:53:
+					  void (*cbproc)(struct file *, void *, unsigned long *, long *), void *data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1680: FILE: include/linux/fcblist.h:53:
+int file_notify_addcb(struct file *filep,
+					  void (*cbproc)(struct file *, void *, unsigned long *, long *), void *data);

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#1683: FILE: include/linux/fcblist.h:56:
+					  void (*cbproc)(struct file *, void *, unsigned long *, long *));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1683: FILE: include/linux/fcblist.h:56:
+int file_notify_delcb(struct file *filep,
+					  void (*cbproc)(struct file *, void *, unsigned long *, long *));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1687: FILE: include/linux/fcblist.h:60:
+
+

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1694: FILE: include/linux/fcblist.h:67:
+static inline void file_send_notify(struct file *filep, long ioevt, long plevt) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#1722: FILE: include/linux/list.h:322:
+#define list_first(head)	(((head)->next != (head)) ? (head)->next: (struct list_head *) 0)

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1722: FILE: include/linux/list.h:322:
+#define list_first(head)	(((head)->next != (head)) ? (head)->next: (struct list_head *) 0)
                         	                                        ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'head' - possible side-effects?
#1722: FILE: include/linux/list.h:322:
+#define list_first(head)	(((head)->next != (head)) ? (head)->next: (struct list_head *) 0)

CHECK:SPACING: No space is necessary after a cast
#1723: FILE: include/linux/list.h:323:
+#define list_last(head)	(((head)->prev != (head)) ? (head)->prev: (struct list_head *) 0)

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1723: FILE: include/linux/list.h:323:
+#define list_last(head)	(((head)->prev != (head)) ? (head)->prev: (struct list_head *) 0)
                        	                                        ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'head' - possible side-effects?
#1723: FILE: include/linux/list.h:323:
+#define list_last(head)	(((head)->prev != (head)) ? (head)->prev: (struct list_head *) 0)

CHECK:SPACING: No space is necessary after a cast
#1724: FILE: include/linux/list.h:324:
+#define list_next(pos, head)	(((pos)->next != (head)) ? (pos)->next: (struct list_head *) 0)

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1724: FILE: include/linux/list.h:324:
+#define list_next(pos, head)	(((pos)->next != (head)) ? (pos)->next: (struct list_head *) 0)
                             	                                      ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pos' - possible side-effects?
#1724: FILE: include/linux/list.h:324:
+#define list_next(pos, head)	(((pos)->next != (head)) ? (pos)->next: (struct list_head *) 0)

CHECK:SPACING: No space is necessary after a cast
#1725: FILE: include/linux/list.h:325:
+#define list_prev(pos, head)	(((pos)->prev != (head)) ? (pos)->prev: (struct list_head *) 0)

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1725: FILE: include/linux/list.h:325:
+#define list_prev(pos, head)	(((pos)->prev != (head)) ? (pos)->prev: (struct list_head *) 0)
                             	                                      ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pos' - possible side-effects?
#1725: FILE: include/linux/list.h:325:
+#define list_prev(pos, head)	(((pos)->prev != (head)) ? (pos)->prev: (struct list_head *) 0)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1785: FILE: include/net/sock.h:775:
+			file_send_notify(sk->socket->file, ion_band_table[band - POLL_IN],
+					poll_band_table[band - POLL_IN]);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000418993.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 38 errors, 66 warnings, 118 checks, 1671 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000418993.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
