ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#58: FILE: arch/i386/kernel/semaphore.c:57:
+fastcall void __sched __down(struct semaphore * sem)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#67: FILE: arch/i386/kernel/semaphore.c:94:
+fastcall int __sched __down_interruptible(struct semaphore * sem)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#76: FILE: arch/i386/kernel/semaphore.c:157:
+fastcall int __down_trylock(struct semaphore * sem)

WARNING:TYPO_SPELLING: 'whish' may be misspelled - perhaps 'wish'?
#88: FILE: arch/i386/kernel/semaphore.c:187:
+ * registers (%eax, %edx and %ecx) except %eax whish is either a return
                                                ^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#129: FILE: include/asm-i386/linkage.h:4:
+#define asmlinkage CPP_ASMLINKAGE __attribute__((regparm(3)))

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#149: FILE: include/asm-i386/semaphore.h:90:
+fastcall void __down_failed(void /* special register calling convention */);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#150: FILE: include/asm-i386/semaphore.h:91:
+fastcall int  __down_failed_interruptible(void  /* params in registers */);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#151: FILE: include/asm-i386/semaphore.h:92:
+fastcall int  __down_failed_trylock(void  /* params in registers */);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#152: FILE: include/asm-i386/semaphore.h:93:
+fastcall void __up_wakeup(void /* special register calling convention */);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#154: FILE: include/asm-i386/semaphore.h:95:
+fastcall void __down(struct semaphore * sem);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#155: FILE: include/asm-i386/semaphore.h:96:
+fastcall int  __down_interruptible(struct semaphore * sem);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#156: FILE: include/asm-i386/semaphore.h:97:
+fastcall int  __down_trylock(struct semaphore * sem);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#157: FILE: include/asm-i386/semaphore.h:98:
+fastcall void __up(struct semaphore * sem);

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#174: FILE: include/asm-i386/semaphore.h:120:
+		:"memory","ax");
 		^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#174: FILE: include/asm-i386/semaphore.h:120:
+		:"memory","ax");
 		         ^

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#222: FILE: include/asm-i386/semaphore.h:195:
+		:"memory","ax");
 		^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#222: FILE: include/asm-i386/semaphore.h:195:
+		:"memory","ax");
 		         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: include/linux/spinlock.h:30:
+        ".endif\n"$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: include/linux/spinlock.h:30:
+        ".endif\n"$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000235811.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 6 warnings, 0 checks, 169 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000235811.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
