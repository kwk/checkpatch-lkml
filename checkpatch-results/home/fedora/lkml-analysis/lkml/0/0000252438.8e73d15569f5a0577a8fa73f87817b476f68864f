CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rsv->_rsv_start > group_last_block'
#56: FILE: fs/ext3/balloc.c:173:
+	if ((rsv->_rsv_start > group_last_block) ||
+	    (rsv->_rsv_end < group_first_block))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rsv->_rsv_end < group_first_block'
#56: FILE: fs/ext3/balloc.c:173:
+	if ((rsv->_rsv_start > group_last_block) ||
+	    (rsv->_rsv_end < group_first_block))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'goal >= 0'
#61: FILE: fs/ext3/balloc.c:176:
+	if ((goal >= 0) && ((goal + group_first_block < rsv->_rsv_start)
+		|| (goal + group_first_block > rsv->_rsv_end)))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#62: FILE: fs/ext3/balloc.c:177:
+	if ((goal >= 0) && ((goal + group_first_block < rsv->_rsv_start)
+		|| (goal + group_first_block > rsv->_rsv_end)))

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#180: FILE: fs/ext3/balloc.c:703:
+static struct reserve_window_node *find_next_reservable_window(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#206: FILE: fs/ext3/balloc.c:815:
+static int alloc_new_reservation(struct reserve_window_node *my_rsv,
 		int goal, struct super_block *sb,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#242: FILE: fs/ext3/balloc.c:979:
+			int goal, struct reserve_window_node * my_rsv,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ret < 0'
#252: FILE: fs/ext3/balloc.c:1038:
+		if (rsv_is_empty(&my_rsv->rsv_window) || (ret < 0) ||
+			!goal_in_my_reservation(&my_rsv->rsv_window, 
+						goal, group, sb)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#253: FILE: fs/ext3/balloc.c:1039:
+^I^I^I!goal_in_my_reservation(&my_rsv->rsv_window, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#253: FILE: fs/ext3/balloc.c:1039:
+		if (rsv_is_empty(&my_rsv->rsv_window) || (ret < 0) ||
+			!goal_in_my_reservation(&my_rsv->rsv_window, 

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#297: FILE: include/linux/ext3_fs.h:723:
+extern void rsv_window_add(struct super_block *sb, struct reserve_window_node *rsv);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000252438.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 0 warnings, 9 checks, 285 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000252438.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
