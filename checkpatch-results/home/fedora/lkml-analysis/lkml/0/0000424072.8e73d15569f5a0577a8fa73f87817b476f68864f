WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
diff -urNp fat_show_opt/Documentation/filesystems/vfat.txt fat_dmask/Documentation/filesystems/vfat.txt

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#66: FILE: fs/fat/inode.c:294:
+	opts->fs_umask = opts->fs_dmask = current->fs->umask;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#74: FILE: fs/fat/inode.c:372:
+		else if (!strcmp(this_char,"dmask")) {
 		                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#74: FILE: fs/fat/inode.c:372:
 		}
+		else if (!strcmp(this_char,"dmask")) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#75: FILE: fs/fat/inode.c:373:
+			if (!value || !*value) ret = 0;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:BRACES: Unbalanced braces around else statement
#76: FILE: fs/fat/inode.c:374:
+			else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxO)
#77: FILE: fs/fat/inode.c:375:
+				opts->fs_dmask = simple_strtoul(value,&value,8);
 				                                     ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#77: FILE: fs/fat/inode.c:375:
+				opts->fs_dmask = simple_strtoul(value,&value,8);
 				                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#77: FILE: fs/fat/inode.c:375:
+				opts->fs_dmask = simple_strtoul(value,&value,8);
 				                                            ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#77: FILE: fs/fat/inode.c:375:
+				opts->fs_dmask = simple_strtoul(value,&value,8);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#78: FILE: fs/fat/inode.c:376:
+				if (*value) ret = 0;

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXUGO' are not preferred. Consider using octal permissions '0777'.
#89: FILE: fs/fat/inode.c:541:
+	inode->i_mode = (S_IRWXUGO & ~sbi->options.fs_dmask) | S_IFDIR;

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#100: FILE: fs/fat/inode.c:1169:
+		inode->i_mode = MSDOS_MKMODE(de->attr,
+			S_IRWXUGO & ~sbi->options.fs_dmask) | S_IFDIR;

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXUGO' are not preferred. Consider using octal permissions '0777'.
#100: FILE: fs/fat/inode.c:1169:
+			S_IRWXUGO & ~sbi->options.fs_dmask) | S_IFDIR;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#139: FILE: fs/fat/inode.c:1319:
+^I^Iif (sbi->options.quiet)  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXUGO' are not preferred. Consider using octal permissions '0777'.
#155: FILE: fs/fat/inode.c:1331:
+	inode->i_mode &= S_IFMT | (S_IRWXUGO & ~mask);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000424072.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 5 warnings, 3 checks, 115 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000424072.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
