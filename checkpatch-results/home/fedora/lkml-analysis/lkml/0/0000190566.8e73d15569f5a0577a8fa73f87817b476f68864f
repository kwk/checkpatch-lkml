CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#53: FILE: drivers/block/as-iosched.c:1881:
+	ad->hash = kmalloc_node(sizeof(struct list_head)*AS_HASH_ENTRIES, GFP_KERNEL, q->node);
 	                                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc_node(sizeof(*ad->hash)...) over kmalloc_node(sizeof(struct list_head)...)
#53: FILE: drivers/block/as-iosched.c:1881:
+	ad->hash = kmalloc_node(sizeof(struct list_head)*AS_HASH_ENTRIES, GFP_KERNEL, q->node);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:SPACING: space required after that ',' (ctx:VxV)
#60: FILE: drivers/block/as-iosched.c:1887:
+	ad->arq_pool = mempool_create_node(BLKDEV_MIN_RQ,mempool_alloc_slab, mempool_free_slab,
 	                                                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#61: FILE: drivers/block/as-iosched.c:1888:
+	ad->arq_pool = mempool_create_node(BLKDEV_MIN_RQ,mempool_alloc_slab, mempool_free_slab,
+						arq_pool, q->node);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#80: FILE: drivers/block/deadline-iosched.c:719:
+	dd->hash = kmalloc_node(sizeof(struct list_head)*DL_HASH_ENTRIES, GFP_KERNEL, q->node);
 	                                                ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc_node(sizeof(*dd->hash)...) over kmalloc_node(sizeof(struct list_head)...)
#80: FILE: drivers/block/deadline-iosched.c:719:
+	dd->hash = kmalloc_node(sizeof(struct list_head)*DL_HASH_ENTRIES, GFP_KERNEL, q->node);

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#87: FILE: drivers/block/deadline-iosched.c:725:
+	dd->drq_pool = mempool_create_node(BLKDEV_MIN_RQ, mempool_alloc_slab, mempool_free_slab, drq_pool, q->node);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc_node(sizeof(*disk)...) over kmalloc_node(sizeof(struct gendisk)...)
#108: FILE: drivers/block/genhd.c:593:
+	struct gendisk *disk = kmalloc_node(sizeof(struct gendisk), GFP_KERNEL, node_id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#139: FILE: drivers/block/ll_rw_blk.c:1648:
+	rl->rq_pool = mempool_create_node(BLKDEV_MIN_RQ, mempool_alloc_slab, mempool_free_slab,
+						request_cachep, q->node);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#156: FILE: drivers/block/ll_rw_blk.c:1665:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#226: FILE: drivers/ide/ide-probe.c:980:
+	q = blk_init_queue_node(do_ide_request, &ide_lock, pcibus_to_node(drive->hwif->pci_dev->bus));

WARNING:LONG_LINE: line length of 128 exceeds 100 columns
#235: FILE: drivers/ide/ide-probe.c:1097:
+		hwgroup = kmalloc_node(sizeof(ide_hwgroup_t), GFP_KERNEL, pcibus_to_node(&hwif->drives[0]->hwif->pci_dev->bus));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#255: FILE: include/linux/blkdev.h:616:
+extern request_queue_t *blk_init_queue_node(request_fn_proc *rfn, spinlock_t *lock, int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#255: FILE: include/linux/blkdev.h:616:
+extern request_queue_t *blk_init_queue_node(request_fn_proc *rfn, spinlock_t *lock, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#263: FILE: include/linux/blkdev.h:649:
+request_queue_t *blk_alloc_queue_node(int,int);
                                          ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#263: FILE: include/linux/blkdev.h:649:
+request_queue_t *blk_alloc_queue_node(int,int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#263: FILE: include/linux/blkdev.h:649:
+request_queue_t *blk_alloc_queue_node(int,int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#275: FILE: include/linux/genhd.h:406:
+extern struct gendisk *alloc_disk_node(int minors, int node_id);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#300: FILE: include/linux/mempool.h:25:
+extern mempool_t * mempool_create_node(int min_nr, mempool_alloc_t *alloc_fn,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#300: FILE: include/linux/mempool.h:25:
+extern mempool_t * mempool_create_node(int min_nr, mempool_alloc_t *alloc_fn,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#301: FILE: include/linux/mempool.h:26:
+extern mempool_t * mempool_create_node(int min_nr, mempool_alloc_t *alloc_fn,
+				mempool_free_t *free_fn, void *pool_data, int nid);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#319: FILE: mm/mempool.c:58:
+	return  mempool_create_node(min_nr,alloc_fn,free_fn, pool_data,-1);
 	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#319: FILE: mm/mempool.c:58:
+	return  mempool_create_node(min_nr,alloc_fn,free_fn, pool_data,-1);
 	                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#319: FILE: mm/mempool.c:58:
+	return  mempool_create_node(min_nr,alloc_fn,free_fn, pool_data,-1);
 	                                                              ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#319: FILE: mm/mempool.c:58:
+	return  mempool_create_node(min_nr,alloc_fn,free_fn, pool_data,-1);
 	                                                               ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#324: FILE: mm/mempool.c:62:
+mempool_t * mempool_create_node(int min_nr, mempool_alloc_t *alloc_fn,

WARNING:LINE_SPACING: Missing a blank line after declarations
#328: FILE: mm/mempool.c:66:
+	mempool_t *pool;
+	pool = kmalloc_node(sizeof(*pool), GFP_KERNEL, node_id);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000190566.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 7 warnings, 12 checks, 246 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000190566.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
