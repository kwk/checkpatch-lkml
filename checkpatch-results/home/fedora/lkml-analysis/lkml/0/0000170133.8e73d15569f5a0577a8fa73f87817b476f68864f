WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
> hardware module (available on some ATCA board) used with telecom expension

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#95: FILE: drivers/char/tlclk.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#114: FILE: drivers/char/tlclk.c:20:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#115: FILE: drivers/char/tlclk.c:21:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#133: FILE: drivers/char/tlclk.c:39:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#140: FILE: drivers/char/tlclk.c:46:
+#include <asm/io.h>		/* inb/outb */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#148: FILE: drivers/char/tlclk.c:54:
+#define TLCLK_BASE 0xa08            $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#150: FILE: drivers/char/tlclk.c:56:
+#define TLCLK_REG1 (TLCLK_BASE+1)
                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#151: FILE: drivers/char/tlclk.c:57:
+#define TLCLK_REG2 (TLCLK_BASE+2)
                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#152: FILE: drivers/char/tlclk.c:58:
+#define TLCLK_REG3 (TLCLK_BASE+3)
                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#153: FILE: drivers/char/tlclk.c:59:
+#define TLCLK_REG4 (TLCLK_BASE+4)
                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#154: FILE: drivers/char/tlclk.c:60:
+#define TLCLK_REG5 (TLCLK_BASE+5)
                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#155: FILE: drivers/char/tlclk.c:61:
+#define TLCLK_REG6 (TLCLK_BASE+6)
                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#156: FILE: drivers/char/tlclk.c:62:
+#define TLCLK_REG7 (TLCLK_BASE+7)
                               ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'port' - possible side-effects?
#158: FILE: drivers/char/tlclk.c:64:
+#define SET_PORT_BITS(port, mask, val) outb(((inb(port) & mask) | val), port)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'mask' may be better as '(mask)' to avoid precedence issues
#158: FILE: drivers/char/tlclk.c:64:
+#define SET_PORT_BITS(port, mask, val) outb(((inb(port) & mask) | val), port)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'val' may be better as '(val)' to avoid precedence issues
#158: FILE: drivers/char/tlclk.c:64:
+#define SET_PORT_BITS(port, mask, val) outb(((inb(port) & mask) | val), port)

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#183: FILE: drivers/char/tlclk.c:89:
+irqreturn_t tlclk_interrupt(int irq, void *dev_id, struct pt_regs *regs);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#187: FILE: drivers/char/tlclk.c:93:
+/*
+*  Function : Module I/O functions

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#193: FILE: drivers/char/tlclk.c:99:
+	    struct file *filp, unsigned int cmd, unsigned long arg)
 	                 ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: No space is necessary after a cast
#197: FILE: drivers/char/tlclk.c:103:
+	val = (unsigned char) arg;

WARNING:LINE_SPACING: Missing a blank line after declarations
#197: FILE: drivers/char/tlclk.c:103:
+	unsigned char val;
+	val = (unsigned char) arg;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'transistion' may be misspelled - perhaps 'transition'?
#213: FILE: drivers/char/tlclk.c:119:
+		/* GENERATING 0 to 1 transistion */
 		                     ^^^^^^^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val == CLK_8kHz'
#240: FILE: drivers/char/tlclk.c:146:
+		if ((val == CLK_8kHz) || (val == CLK_16_384MHz)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val == CLK_16_384MHz'
#240: FILE: drivers/char/tlclk.c:146:
+		if ((val == CLK_8kHz) || (val == CLK_16_384MHz)) {

CHECK:CAMELCASE: Avoid CamelCase: <CLK_8kHz>
#240: FILE: drivers/char/tlclk.c:146:
+		if ((val == CLK_8kHz) || (val == CLK_16_384MHz)) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <CLK_16_384MHz>
#240: FILE: drivers/char/tlclk.c:146:
+		if ((val == CLK_8kHz) || (val == CLK_16_384MHz)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#240: FILE: drivers/char/tlclk.c:146:
+		if ((val == CLK_8kHz) || (val == CLK_16_384MHz)) {
[...]
+		} else if (val >= CLK_8_592MHz) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:CAMELCASE: Avoid CamelCase: <CLK_8_592MHz>
#243: FILE: drivers/char/tlclk.c:149:
+		} else if (val >= CLK_8_592MHz) {

CHECK:BRACES: Unbalanced braces around else statement
#259: FILE: drivers/char/tlclk.c:165:
+		} else

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val == CLK_8kHz'
#263: FILE: drivers/char/tlclk.c:169:
+		if ((val == CLK_8kHz) || (val == CLK_16_384MHz)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'val == CLK_16_384MHz'
#263: FILE: drivers/char/tlclk.c:169:
+		if ((val == CLK_8kHz) || (val == CLK_16_384MHz)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#263: FILE: drivers/char/tlclk.c:169:
+		if ((val == CLK_8kHz) || (val == CLK_16_384MHz)) {
[...]
+		} else if (val >= CLK_8_592MHz) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#282: FILE: drivers/char/tlclk.c:188:
+		} else

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#308: FILE: drivers/char/tlclk.c:214:
+		return (inb(TLCLK_REG2) & 0xf0);
+		break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#311: FILE: drivers/char/tlclk.c:217:
+		return inb(TLCLK_REG6);
+		break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#314: FILE: drivers/char/tlclk.c:220:
+		return ((inb(TLCLK_REG1) & 0x08) >> 3);
+		break;

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#321: FILE: drivers/char/tlclk.c:227:
+/*
+*  Function : Module Opening

ERROR:TRAILING_WHITESPACE: trailing whitespace
#322: FILE: drivers/char/tlclk.c:228:
+*  Description : Called when a program open the $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#326: FILE: drivers/char/tlclk.c:232:
+tlclk_open(struct inode *inode, struct file *filp)
                                              ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#329: FILE: drivers/char/tlclk.c:235:
+^I/* Make sure there is no interrupt pending will $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#330: FILE: drivers/char/tlclk.c:236:
+	   *  initialising interrupt handler */

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#330: FILE: drivers/char/tlclk.c:236:
+	/* Make sure there is no interrupt pending will 
+	   *  initialising interrupt handler */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#335: FILE: drivers/char/tlclk.c:241:
+	printk("\ntelclock: Reserving IRQ%d...\n", telclk_interrupt);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#337: FILE: drivers/char/tlclk.c:243:
+		printk(KERN_ERR

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#346: FILE: drivers/char/tlclk.c:252:
+/*
+*  Function : Module Releasing

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#350: FILE: drivers/char/tlclk.c:256:
+tlclk_release(struct inode *inode, struct file *filp)
                                                 ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#357: FILE: drivers/char/tlclk.c:263:
+tlclk_read(struct file * filp, char *buf, size_t count, loff_t * f_pos)
                          ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#357: FILE: drivers/char/tlclk.c:263:
+tlclk_read(struct file * filp, char *buf, size_t count, loff_t * f_pos)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#357: FILE: drivers/char/tlclk.c:263:
+tlclk_read(struct file * filp, char *buf, size_t count, loff_t * f_pos)

WARNING:LINE_SPACING: Missing a blank line after declarations
#360: FILE: drivers/char/tlclk.c:266:
+	int count0 = sizeof(struct tlclk_alarms);
+	wait_event_interruptible(wq, got_event);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#366: FILE: drivers/char/tlclk.c:272:
+^I$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#371: FILE: drivers/char/tlclk.c:277:
+tlclk_write(struct file * filp, const char *buf, size_t count, loff_t * f_pos)
                           ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#371: FILE: drivers/char/tlclk.c:277:
+tlclk_write(struct file * filp, const char *buf, size_t count, loff_t * f_pos)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#371: FILE: drivers/char/tlclk.c:277:
+tlclk_write(struct file * filp, const char *buf, size_t count, loff_t * f_pos)

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#377: FILE: drivers/char/tlclk.c:283:
+/*
+* This is where you set what function is called when an action is done to your

WARNING:CONST_STRUCT: struct file_operations should normally be const
#380: FILE: drivers/char/tlclk.c:286:
+static struct file_operations tlclk_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#388: FILE: drivers/char/tlclk.c:294:
+};
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#389: FILE: drivers/char/tlclk.c:295:
+* Function : Module Initialisation                      $

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#389: FILE: drivers/char/tlclk.c:295:
+/*
+* Function : Module Initialisation                      

ERROR:TRAILING_WHITESPACE: trailing whitespace
#390: FILE: drivers/char/tlclk.c:296:
+* Description : Called at module loading, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#399: FILE: drivers/char/tlclk.c:305:
+	devfs_handle = devfs_register(NULL, "telclock",
+					DEVFS_FL_AUTO_DEVNUM, TLCLK_MAJOR,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUGO' are not preferred. Consider using octal permissions '0666'.
#401: FILE: drivers/char/tlclk.c:307:
+					S_IFCHR | S_IRUGO | S_IWUGO,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#409: FILE: drivers/char/tlclk.c:315:
+		printk(KERN_ERR "telclock: can't get major! %d\n", tlclk_major);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*alarm_events)...) over kmalloc(sizeof(struct tlclk_alarms)...)
#414: FILE: drivers/char/tlclk.c:320:
+	alarm_events = kmalloc(sizeof(struct tlclk_alarms), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:TRAILING_WHITESPACE: trailing whitespace
#415: FILE: drivers/char/tlclk.c:321:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#418: FILE: drivers/char/tlclk.c:324:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#423: FILE: drivers/char/tlclk.c:329:
+	printk(KERN_WARNING "telclock: Reserving I/O region...\n");

ERROR:SPACING: space prohibited after that open parenthesis '('
#425: FILE: drivers/char/tlclk.c:331:
+	if ( !request_region(TLCLK_BASE, 8, "telclock") ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#425: FILE: drivers/char/tlclk.c:331:
+	if ( !request_region(TLCLK_BASE, 8, "telclock") ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#426: FILE: drivers/char/tlclk.c:332:
+		printk(KERN_ERR "telclock: request_region failed!\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#443: FILE: drivers/char/tlclk.c:349:
+/*
+*  Function : Module Cleaning

ERROR:TRAILING_WHITESPACE: trailing whitespace
#457: FILE: drivers/char/tlclk.c:363:
+^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#458: FILE: drivers/char/tlclk.c:364:
+	
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#459: FILE: drivers/char/tlclk.c:365:
+}
+static void

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#475: FILE: drivers/char/tlclk.c:381:
+}
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#476: FILE: drivers/char/tlclk.c:382:
+/*
+*  Function : Interrupt Handler

WARNING:LINE_SPACING: Missing a blank line after declarations
#483: FILE: drivers/char/tlclk.c:389:
+	unsigned long flags;
+	spin_lock_irqsave(&event_lock, flags);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#487: FILE: drivers/char/tlclk.c:393:
+^I$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#546: FILE: drivers/char/tlclk.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#565: FILE: drivers/char/tlclk.h:20:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#566: FILE: drivers/char/tlclk.h:21:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#571: FILE: drivers/char/tlclk.h:26:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#571: FILE: drivers/char/tlclk.h:26:
+ $

CHECK:CAMELCASE: Avoid CamelCase: <REF_CLK1_8kHz>
#602: FILE: drivers/char/tlclk.h:57:
+#define REF_CLK1_8kHz 0x00

CHECK:CAMELCASE: Avoid CamelCase: <REF_CLK2_19_44MHz>
#603: FILE: drivers/char/tlclk.h:58:
+#define REF_CLK2_19_44MHz 0x02

CHECK:CAMELCASE: Avoid CamelCase: <CLK_1_544MHz>
#618: FILE: drivers/char/tlclk.h:73:
+#define CLK_1_544MHz 0x00

CHECK:CAMELCASE: Avoid CamelCase: <CLK_2_048MHz>
#619: FILE: drivers/char/tlclk.h:74:
+#define CLK_2_048MHz 0x01

CHECK:CAMELCASE: Avoid CamelCase: <CLK_4_096MHz>
#620: FILE: drivers/char/tlclk.h:75:
+#define CLK_4_096MHz 0x02

CHECK:CAMELCASE: Avoid CamelCase: <CLK_6_312MHz>
#621: FILE: drivers/char/tlclk.h:76:
+#define CLK_6_312MHz 0x03

CHECK:CAMELCASE: Avoid CamelCase: <CLK_8_192MHz>
#622: FILE: drivers/char/tlclk.h:77:
+#define CLK_8_192MHz 0x04

CHECK:CAMELCASE: Avoid CamelCase: <CLK_19_440MHz>
#623: FILE: drivers/char/tlclk.h:78:
+#define CLK_19_440MHz 0x06

CHECK:CAMELCASE: Avoid CamelCase: <CLK_11_184MHz>
#626: FILE: drivers/char/tlclk.h:81:
+#define CLK_11_184MHz 0x09

CHECK:CAMELCASE: Avoid CamelCase: <CLK_34_368MHz>
#627: FILE: drivers/char/tlclk.h:82:
+#define CLK_34_368MHz 0x0b

CHECK:CAMELCASE: Avoid CamelCase: <CLK_44_736MHz>
#628: FILE: drivers/char/tlclk.h:83:
+#define CLK_44_736MHz 0x0a

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000170133.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 35 warnings, 39 checks, 637 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000170133.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
