WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
> However there is not a lot of commonality between the various nopage()s and

WARNING:LONG_LINE: line length of 128 exceeds 100 columns
#98: FILE: arch/ia64/ia32/binfmt_elf32.c:60:
+ia32_install_shared_page (struct mm_struct *mm, struct vm_area_struct *vma, unsigned long address, int write_access, pmd_t *pmd)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#98: FILE: arch/ia64/ia32/binfmt_elf32.c:60:
+ia32_install_shared_page (struct mm_struct *mm, struct vm_area_struct *vma, unsigned long address, int write_access, pmd_t *pmd)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#118: FILE: arch/sparc64/mm/hugetlbpage.c:637:
+hugetlb_nopage(struct mm_struct * mm, struct vm_area_struct *vma,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#119: FILE: arch/sparc64/mm/hugetlbpage.c:638:
+	       unsigned long address, int write_access, pmd_t * pmd)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#150: FILE: drivers/char/agp/alpha-agp.c:28:
+	if (pa == (unsigned long)-EINVAL) return VM_FAULT_SIGBUS;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#182: FILE: drivers/char/drm/drmP.h:623:
+extern int DRM(vm_nopage)(struct mm_struct *mm,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#187: FILE: drivers/char/drm/drmP.h:628:
+extern int DRM(vm_shm_nopage)(struct mm_struct *mm,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#192: FILE: drivers/char/drm/drmP.h:633:
+extern int DRM(vm_dma_nopage)(struct mm_struct *mm,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#197: FILE: drivers/char/drm/drmP.h:638:
+extern int DRM(vm_sg_nopage)(struct mm_struct *mm,

ERROR:CODE_INDENT: code indent should use tabs where possible
#229: FILE: drivers/char/drm/drm_vm.h:120:
+^I^I^I^I        pmd, page);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#254: FILE: drivers/char/drm/drm_vm.h:139:
+	if (address > vma->vm_end) return VM_FAULT_SIGBUS; /* Disallow mremap */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#255: FILE: drivers/char/drm/drm_vm.h:140:
+^Iif (!map)    ^I^I   return VM_FAULT_OOM;  /* Nothing allocated */$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#255: FILE: drivers/char/drm/drm_vm.h:140:
+	if (!map)    		   return VM_FAULT_OOM;  /* Nothing allocated */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#293: FILE: drivers/char/drm/drm_vm.h:242:
+	if (!dma)		   return VM_FAULT_SIGBUS; /* Error */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#294: FILE: drivers/char/drm/drm_vm.h:243:
+	if (address > vma->vm_end) return VM_FAULT_SIGBUS; /* Disallow mremap */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#295: FILE: drivers/char/drm/drm_vm.h:244:
+	if (!dma->pagelist)	   return VM_FAULT_OOM ; /* Nothing allocated */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#325: FILE: drivers/char/drm/drm_vm.h:272:
+	if (!entry)                return VM_FAULT_SIGBUS; /* Error */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#326: FILE: drivers/char/drm/drm_vm.h:273:
+	if (address > vma->vm_end) return VM_FAULT_SIGBUS; /* Disallow mremap */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#327: FILE: drivers/char/drm/drm_vm.h:274:
+	if (!entry->pagelist)      return VM_FAULT_OOM ; /* Nothing allocated */

CHECK:SPACING: No space is necessary after a cast
#375: FILE: drivers/ieee1394/dma.c:206:
+	page = vmalloc_to_page((void*) kernel_virt_addr);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#375: FILE: drivers/ieee1394/dma.c:206:
+	page = vmalloc_to_page((void*) kernel_virt_addr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#463: FILE: drivers/sgi/char/graphics.c:215:
+sgi_graphics_nopage (struct mm_struct *mm, struct vm_area_struct *vma,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#510: FILE: include/linux/mm.h:145:
+	int (*nopage)(struct mm_struct * mm, struct vm_area_struct * area,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#510: FILE: include/linux/mm.h:145:
+	int (*nopage)(struct mm_struct * mm, struct vm_area_struct * area,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#534: FILE: include/linux/mm.h:400:
+int shmem_nopage(struct mm_struct * mm, struct vm_area_struct * vma,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#534: FILE: include/linux/mm.h:400:
+int shmem_nopage(struct mm_struct * mm, struct vm_area_struct * vma,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#535: FILE: include/linux/mm.h:401:
+		 unsigned long address, int write_access, pmd_t * pmd);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#543: FILE: include/linux/mm.h:419:
+extern int install_new_page(struct mm_struct *mm, struct vm_area_struct *vma,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#545: FILE: include/linux/mm.h:421:
+			    pmd_t *pmd, struct page * new_page);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#554: FILE: include/linux/mm.h:560:
+int filemap_nopage(struct mm_struct *, struct vm_area_struct *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vm_area_struct *' should also have an identifier name
#554: FILE: include/linux/mm.h:560:
+int filemap_nopage(struct mm_struct *, struct vm_area_struct *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#554: FILE: include/linux/mm.h:560:
+int filemap_nopage(struct mm_struct *, struct vm_area_struct *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#554: FILE: include/linux/mm.h:560:
+int filemap_nopage(struct mm_struct *, struct vm_area_struct *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pmd_t *' should also have an identifier name
#554: FILE: include/linux/mm.h:560:
+int filemap_nopage(struct mm_struct *, struct vm_area_struct *,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#578: FILE: mm/filemap.c:985:
+int filemap_nopage(struct mm_struct * mm, struct vm_area_struct * area,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#578: FILE: mm/filemap.c:985:
+int filemap_nopage(struct mm_struct * mm, struct vm_area_struct * area,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#579: FILE: mm/filemap.c:986:
+		   unsigned long address, int write_access, pmd_t * pmd)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#678: FILE: mm/memory.c:1425:
+		 pmd_t *pmd, struct page * new_page)

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#705: FILE: mm/shmem.c:953:
+		return (error == -ENOMEM)? VM_FAULT_OOM: VM_FAULT_SIGBUS;
 		                         ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#705: FILE: mm/shmem.c:953:
+		return (error == -ENOMEM)? VM_FAULT_OOM: VM_FAULT_SIGBUS;
 		                                       ^

WARNING:LONG_LINE: line length of 141 exceeds 100 columns
#721: FILE: sound/core/pcm_native.c:2696:
+static int snd_pcm_mmap_status_nopage(struct mm_struct *mm, struct vm_area_struct *area, unsigned long address, int write_access, pmd_t *pmd)

WARNING:LONG_LINE: line length of 142 exceeds 100 columns
#745: FILE: sound/core/pcm_native.c:2750:
+static int snd_pcm_mmap_control_nopage(struct mm_struct *mm, struct vm_area_struct *area, unsigned long address, int write_access, pmd_t *pmd)

WARNING:LONG_LINE: line length of 139 exceeds 100 columns
#769: FILE: sound/core/pcm_native.c:2816:
+static int snd_pcm_mmap_data_nopage(struct mm_struct *mm, struct vm_area_struct *area, unsigned long address, int write_access, pmd_t *pmd)

WARNING:LONG_LINE: line length of 135 exceeds 100 columns
#816: FILE: sound/oss/emu10k1/audio.c:973:
+static int emu10k1_mm_nopage (struct mm_struct * mm, struct vm_area_struct * vma, unsigned long address, int write_access, pmd_t * pmd)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#816: FILE: sound/oss/emu10k1/audio.c:973:
+static int emu10k1_mm_nopage (struct mm_struct * mm, struct vm_area_struct * vma, unsigned long address, int write_access, pmd_t * pmd)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#816: FILE: sound/oss/emu10k1/audio.c:973:
+static int emu10k1_mm_nopage (struct mm_struct * mm, struct vm_area_struct * vma, unsigned long address, int write_access, pmd_t * pmd)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#816: FILE: sound/oss/emu10k1/audio.c:973:
+static int emu10k1_mm_nopage (struct mm_struct * mm, struct vm_area_struct * vma, unsigned long address, int write_access, pmd_t * pmd)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#816: FILE: sound/oss/emu10k1/audio.c:973:
+static int emu10k1_mm_nopage (struct mm_struct * mm, struct vm_area_struct * vma, unsigned long address, int write_access, pmd_t * pmd)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#849: FILE: sound/oss/via82cxxx_audio.c:1849:
+static int via_mm_nopage (struct mm_struct *mm, struct vm_area_struct * vma,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#849: FILE: sound/oss/via82cxxx_audio.c:1849:
+static int via_mm_nopage (struct mm_struct *mm, struct vm_area_struct * vma,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#860: FILE: sound/oss/via82cxxx_audio.c:1866:
+		DPRINTK ("EXIT, returning VM_FAULT_SIGBUS\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#866: FILE: sound/oss/via82cxxx_audio.c:1870:
+		DPRINTK ("EXIT, returning VM_FAULT_OOM\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#876: FILE: sound/oss/via82cxxx_audio.c:1898:
+	DPRINTK ("EXIT, installing page %p for cpuaddr %lXh\n",

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000368072.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 29 errors, 19 warnings, 6 checks, 695 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000368072.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
