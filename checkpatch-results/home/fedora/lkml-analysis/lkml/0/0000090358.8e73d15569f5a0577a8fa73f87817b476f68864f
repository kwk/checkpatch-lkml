WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#102: FILE: drivers/char/epca.c:489:
+		BUG_ON(ch->count < 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#129: FILE: drivers/char/tty_io.c:546:
+	BUG_ON(disc < N_TTY || disc >= NR_LDISCS);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#136: FILE: drivers/char/tty_io.c:550:
+	BUG_ON(ld->refcount == 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#147: FILE: drivers/char/tty_io.c:646:
+	BUG_ON(ld == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ld"
#147: FILE: drivers/char/tty_io.c:646:
+	BUG_ON(ld == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#162: FILE: drivers/input/serio/hp_sdc_mlc.c:273:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#164: FILE: drivers/input/serio/hp_sdc_mlc.c:275:
+	BUG_ON((mlc->opacket & (HIL_CTRL_APE | HIL_CTRL_IPF)) == HIL_CTRL_APE);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#165: FILE: drivers/input/serio/hp_sdc_mlc.c:276:
+^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#179: FILE: drivers/isdn/hisax/hisax_fcpcipnp.c:390:
+	BUG_ON(skb->len == 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#190: FILE: drivers/isdn/hisax/hisax_fcpcipnp.c:632:
+		BUG_ON(bcs->tx_skb);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#204: FILE: drivers/isdn/hisax/hisax_isac.c:479:
+	BUG_ON(!isac->tx_skb);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#209: FILE: drivers/isdn/hisax/hisax_isac.c:482:
+	BUG_ON(count <= 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#219: FILE: drivers/isdn/hisax/hisax_isac.c:860:
+		BUG_ON(isac->tx_skb);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#234: FILE: drivers/isdn/hisax/st5481_b.c:359:
+		BUG_ON(bcs->b_out.tx_skb);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#249: FILE: drivers/isdn/hisax/st5481_d.c:599:
+		BUG_ON(adapter->d_out.tx_skb);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#263: FILE: drivers/isdn/i4l/isdn_ppp.c:977:
+	BUG_ON(net_dev->local->master); // we're called with the master device always

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#273: FILE: drivers/isdn/i4l/isdn_ppp.c:2529:
+	BUG_ON(!stat); // if we have a compressor, stat has been set as well

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#287: FILE: drivers/md/dm-path-selector.c:89:
+	BUG_ON(psi->use < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#301: FILE: drivers/md/dm-table.c:355:
+	BUG_ON(d->bdev);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#311: FILE: drivers/md/dm-table.c:429:
+	BUG_ON(!t);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#342: FILE: drivers/mtd/maps/dilnetpc.c:222:
+			BUG_ON(vpp_counter < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#353: FILE: drivers/mtd/maps/dilnetpc.c:244:
+			BUG_ON(vpp_counter < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#367: FILE: drivers/mtd/mtd_blkdevs.c:453:
+	BUG_ON(!list_empty(&tr->devs));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#381: FILE: drivers/mtd/mtdconcat.c:480:
+	BUG_ON(i >= concat->num_subdev);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#391: FILE: drivers/mtd/mtdconcat.c:502:
+			BUG_ON(err == -EINVAL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#405: FILE: drivers/s390/block/dasd_devmap.c:440:
+			BUG_ON(devmap->device != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "devmap->device"
#405: FILE: drivers/s390/block/dasd_devmap.c:440:
+			BUG_ON(devmap->device != NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#415: FILE: drivers/s390/block/dasd_devmap.c:549:
+	BUG_ON(IS_ERR(devmap));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#429: FILE: fs/buffer.c:799:
+		BUG_ON(mapping->assoc_mapping != buffer_mapping);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#439: FILE: fs/buffer.c:1116:
+	BUG_ON(!PageLocked(page));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#449: FILE: fs/buffer.c:1523:
+	BUG_ON(offset >= PAGE_SIZE);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#492: FILE: fs/dcache.c:792:
+	BUG_ON(!list_empty(&entry->d_alias));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#506: FILE: fs/ext2/dir.c:419:
+	BUG_ON(err);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#516: FILE: fs/ext2/dir.c:556:
+	BUG_ON(err);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#530: FILE: fs/hfs/bnode.c:309:
+	BUG_ON(!*p);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#540: FILE: fs/hfs/bnode.c:417:
+	BUG_ON(node);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#550: FILE: fs/hfs/bnode.c:460:
+		BUG_ON(!atomic_read(&node->refcnt));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#564: FILE: fs/hfs/btree.c:39:
+	BUG_ON(!(tree->inode->i_state & I_NEW));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#590: FILE: ipc/sem.c:230:
+		BUG_ON(sma==NULL);

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#590: FILE: ipc/sem.c:230:
+		BUG_ON(sma==NULL);
 		          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sma"
#590: FILE: ipc/sem.c:230:
+		BUG_ON(sma==NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#600: FILE: ipc/sem.c:1183:
+		BUG_ON(queue.prev != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "queue.prev"
#600: FILE: ipc/sem.c:1183:
+		BUG_ON(queue.prev != NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#614: FILE: kernel/fork.c:772:
+	BUG_ON(!files);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#630: FILE: mm/memory.c:2355:
+	BUG_ON(addr >= end);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#631: FILE: mm/memory.c:2356:
+	BUG_ON(end > vma->vm_end);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#646: FILE: mm/mempool.c:187:
+	BUG_ON(pool->curr_nr != pool->min_nr);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000090358.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 40 warnings, 4 checks, 411 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000090358.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
