WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
o Core changes for Kconfigurable memory and IO resources. By default resources

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#91: FILE: include/linux/ioport.h:106:
+int adjust_resource(struct resource *res, resource_size_t start,
+			resource_size_t size);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#100: FILE: include/linux/ioport.h:116:
+extern struct resource * __request_region(struct resource *,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#100: FILE: include/linux/ioport.h:116:
+extern struct resource * __request_region(struct resource *,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct resource *' should also have an identifier name
#100: FILE: include/linux/ioport.h:116:
+extern struct resource * __request_region(struct resource *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#101: FILE: include/linux/ioport.h:117:
+extern struct resource * __request_region(struct resource *,
+					resource_size_t start,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#111: FILE: include/linux/ioport.h:125:
+extern int __check_region(struct resource *, resource_size_t, resource_size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct resource *' should also have an identifier name
#111: FILE: include/linux/ioport.h:125:
+extern int __check_region(struct resource *, resource_size_t, resource_size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'resource_size_t' should also have an identifier name
#111: FILE: include/linux/ioport.h:125:
+extern int __check_region(struct resource *, resource_size_t, resource_size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'resource_size_t' should also have an identifier name
#111: FILE: include/linux/ioport.h:125:
+extern int __check_region(struct resource *, resource_size_t, resource_size_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#112: FILE: include/linux/ioport.h:126:
+extern void __release_region(struct resource *, resource_size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct resource *' should also have an identifier name
#112: FILE: include/linux/ioport.h:126:
+extern void __release_region(struct resource *, resource_size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'resource_size_t' should also have an identifier name
#112: FILE: include/linux/ioport.h:126:
+extern void __release_region(struct resource *, resource_size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'resource_size_t' should also have an identifier name
#112: FILE: include/linux/ioport.h:126:
+extern void __release_region(struct resource *, resource_size_t,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#113: FILE: include/linux/ioport.h:127:
+extern void __release_region(struct resource *, resource_size_t,
+				resource_size_t);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#117: FILE: include/linux/ioport.h:130:
+static inline int __deprecated check_region(resource_size_t s,
+						resource_size_t n)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#218: FILE: kernel/resource.c:484:
+struct resource * __request_region(struct resource *parent,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#230: FILE: kernel/resource.c:523:
+int __check_region(struct resource *parent, resource_size_t start,
+			resource_size_t n)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#240: FILE: kernel/resource.c:539:
+void __release_region(struct resource *parent, resource_size_t start,
+			resource_size_t n)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000079882.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 8 warnings, 9 checks, 177 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000079882.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
