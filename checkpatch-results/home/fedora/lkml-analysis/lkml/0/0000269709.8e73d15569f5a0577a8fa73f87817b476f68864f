CHECK:SPACING: No space is necessary after a cast
#88: FILE: drivers/block/ll_rw_blk.c:1877:
+	uaddr = (unsigned long) ubuf;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#97: FILE: drivers/block/ll_rw_blk.c:1884:
+		rq->bio = rq->biotail = bio;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#112: FILE: drivers/block/ll_rw_blk.c:1887:
+		rq->buffer = rq->data = NULL;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#116: FILE: drivers/block/ll_rw_blk.c:1891:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#121: FILE: drivers/block/ll_rw_blk.c:1896:
+	return (struct request *) bio;

WARNING:LINE_SPACING: Missing a blank line after declarations
#222: FILE: fs/bio.c:396:
+			char *addr = page_address(bvec->bv_page) + bvec->bv_offset;
+			if (!ret && copy_to_user(uaddr, addr, bvec->bv_len))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#289: FILE: fs/bio.c:463:
+^I ^I^I * for a write, copy in data to kernel pages$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#289: FILE: fs/bio.c:463:
+^I ^I^I * for a write, copy in data to kernel pages$

CHECK:SPACING: No space is necessary after a cast
#294: FILE: fs/bio.c:468:
+				if (copy_from_user(addr, (char *) uaddr, bvec->bv_len))

WARNING:LINE_SPACING: Missing a blank line after declarations
#294: FILE: fs/bio.c:468:
+				char *addr = page_address(bvec->bv_page) + bvec->bv_offset;
+				if (copy_from_user(addr, (char *) uaddr, bvec->bv_len))

CHECK:SPACING: No space is necessary after a cast
#299: FILE: fs/bio.c:473:
+		bio->bi_private = (void *) uaddr;

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#438: FILE: fs/bio.c:980:
+EXPORT_SYMBOL(bio_uncopy_user);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#455: FILE: include/linux/bio.h:271:
+extern void bio_unmap_user(struct bio *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bio *' should also have an identifier name
#455: FILE: include/linux/bio.h:271:
+extern void bio_unmap_user(struct bio *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#458: FILE: include/linux/bio.h:274:
+extern struct bio *bio_copy_user(struct request_queue *, unsigned long, unsigned int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request_queue *' should also have an identifier name
#458: FILE: include/linux/bio.h:274:
+extern struct bio *bio_copy_user(struct request_queue *, unsigned long, unsigned int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#458: FILE: include/linux/bio.h:274:
+extern struct bio *bio_copy_user(struct request_queue *, unsigned long, unsigned int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#458: FILE: include/linux/bio.h:274:
+extern struct bio *bio_copy_user(struct request_queue *, unsigned long, unsigned int, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#458: FILE: include/linux/bio.h:274:
+extern struct bio *bio_copy_user(struct request_queue *, unsigned long, unsigned int, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#459: FILE: include/linux/bio.h:275:
+extern int bio_uncopy_user(struct bio *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bio *' should also have an identifier name
#459: FILE: include/linux/bio.h:275:
+extern int bio_uncopy_user(struct bio *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#471: FILE: include/linux/blkdev.h:538:
+extern int blk_rq_unmap_user(struct request *, struct bio *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct request *' should also have an identifier name
#471: FILE: include/linux/blkdev.h:538:
+extern int blk_rq_unmap_user(struct request *, struct bio *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bio *' should also have an identifier name
#471: FILE: include/linux/blkdev.h:538:
+extern int blk_rq_unmap_user(struct request *, struct bio *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#471: FILE: include/linux/blkdev.h:538:
+extern int blk_rq_unmap_user(struct request *, struct bio *, unsigned int);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000269709.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 13 warnings, 10 checks, 394 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000269709.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
