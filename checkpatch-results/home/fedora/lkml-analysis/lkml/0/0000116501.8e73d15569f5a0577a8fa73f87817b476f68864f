CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#75: FILE: drivers/block/aoe/aoecmd.c:204:
+	sl = sl_tail = NULL;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:SIZEOF_PARENTHESIS: sizeof *h should be sizeof(*h)
#83: FILE: drivers/block/aoe/aoecmd.c:212:
+		skb = new_skb(ifp, sizeof *h + sizeof *ch);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#84: FILE: drivers/block/aoe/aoecmd.c:213:
+		if (skb == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#85: FILE: drivers/block/aoe/aoecmd.c:214:
+			printk(KERN_INFO "aoe: aoecmd_cfg: skb alloc failure\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sl_tail"
#88: FILE: drivers/block/aoe/aoecmd.c:217:
+		if (sl_tail == NULL)

CHECK:SPACING: No space is necessary after a cast
#90: FILE: drivers/block/aoe/aoecmd.c:219:
+		h = (struct aoe_hdr *) skb->mac.raw;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SIZEOF_PARENTHESIS: sizeof *h should be sizeof(*h)
#91: FILE: drivers/block/aoe/aoecmd.c:220:
+		memset(h, 0, sizeof *h + sizeof *ch);

WARNING:SIZEOF_PARENTHESIS: sizeof h->dst should be sizeof(h->dst)
#93: FILE: drivers/block/aoe/aoecmd.c:222:
+		memset(h->dst, 0xff, sizeof h->dst);

WARNING:SIZEOF_PARENTHESIS: sizeof h->src should be sizeof(h->src)
#94: FILE: drivers/block/aoe/aoecmd.c:223:
+		memcpy(h->src, ifp->dev_addr, sizeof h->src);

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_be16 should be cpu_to_be16
#95: FILE: drivers/block/aoe/aoecmd.c:224:
+		h->type = __constant_cpu_to_be16(ETH_P_AOE);

Use of __constant_<foo> form is discouraged for the following functions::

  __constant_cpu_to_be[x]
  __constant_cpu_to_le[x]
  __constant_be[x]_to_cpu
  __constant_le[x]_to_cpu
  __constant_htons
  __constant_ntohs

Using any of these outside of include/uapi/ is not preferred as using the
function without __constant_ is identical when the argument is a
constant.

In big endian systems, the macros like __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to the same expression::

  #define __constant_cpu_to_be32(x) ((__force __be32)(__u32)(x))
  #define __cpu_to_be32(x)          ((__force __be32)(__u32)(x))

In little endian systems, the macros __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to __constant_swab32 and __swab32.  __swab32
has a __builtin_constant_p check::

  #define __swab32(x)				\
    (__builtin_constant_p((__u32)(x)) ?	\
    ___constant_swab32(x) :			\
    __fswab32(x))

So ultimately they have a special case for constants.
Similar is the case with all of the macros in the list.  Thus
using the __constant_... forms are unnecessarily verbose and
not preferred outside of include/uapi.

See: https://lore.kernel.org/lkml/1400106425.12666.6.camel@joe-AO725/

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "tail"
#106: FILE: drivers/block/aoe/aoecmd.c:235:
+	if (tail != NULL)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000116501.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 6 warnings, 5 checks, 113 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000116501.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
