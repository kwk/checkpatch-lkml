WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
1.  Creates a new directory (drivers/efi) into which I propose current and future drivers that interact with EFI firmware be placed.  This enables architectures that employ EFI compliant firmware to use the same drivers and avoid the maintenance hassle of multiple copies.  

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#529: FILE: drivers/efi/efivars.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#555: FILE: drivers/efi/efivars.c:27:
+ *  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#556: FILE: drivers/efi/efivars.c:28:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#562: FILE: drivers/efi/efivars.c:34:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#601: FILE: drivers/efi/efivars.c:73:
+#include <asm/uaccess.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#616: FILE: drivers/efi/efivars.c:88:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NEW_TYPEDEFS: do not add new typedefs
#624: FILE: drivers/efi/efivars.c:96:
+typedef struct _efi_variable_t {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#625: FILE: drivers/efi/efivars.c:97:
+	efi_char16_t  VariableName[1024/sizeof(efi_char16_t)];
 	                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <VariableName>
#625: FILE: drivers/efi/efivars.c:97:
+	efi_char16_t  VariableName[1024/sizeof(efi_char16_t)];

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <VendorGuid>
#626: FILE: drivers/efi/efivars.c:98:
+	efi_guid_t    VendorGuid;

CHECK:CAMELCASE: Avoid CamelCase: <DataSize>
#627: FILE: drivers/efi/efivars.c:99:
+	unsigned long DataSize;

CHECK:CAMELCASE: Avoid CamelCase: <Data>
#628: FILE: drivers/efi/efivars.c:100:
+	__u8          Data[1024];

CHECK:CAMELCASE: Avoid CamelCase: <Status>
#629: FILE: drivers/efi/efivars.c:101:
+	efi_status_t  Status;

CHECK:CAMELCASE: Avoid CamelCase: <Attributes>
#630: FILE: drivers/efi/efivars.c:102:
+	__u32         Attributes;

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#631: FILE: drivers/efi/efivars.c:103:
+} __attribute__((packed)) efi_variable_t;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#633: FILE: drivers/efi/efivars.c:105:
+
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#634: FILE: drivers/efi/efivars.c:106:
+typedef struct _efivar_entry_t {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#641: FILE: drivers/efi/efivars.c:113:
+/*
+  efivars_lock protects two things:

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LINE_SPACING: Missing a blank line after declarations
#659: FILE: drivers/efi/efivars.c:131:
+	unsigned long length = 0;
+	while (*data++ != 0 && length < maxlength)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#669: FILE: drivers/efi/efivars.c:141:
+	return utf8_strlen(data, maxlength/sizeof(efi_char16_t)) * sizeof(efi_char16_t);
 	                                  ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#672: FILE: drivers/efi/efivars.c:144:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#677: FILE: drivers/efi/efivars.c:149:
+	if (len <= off+count) *eof = 1;
 	              ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#677: FILE: drivers/efi/efivars.c:149:
+	if (len <= off+count) *eof = 1;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#680: FILE: drivers/efi/efivars.c:152:
+	if (len>count) len = count;
 	       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#680: FILE: drivers/efi/efivars.c:152:
+	if (len>count) len = count;

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#681: FILE: drivers/efi/efivars.c:153:
+	if (len<0) len = 0;
 	       ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#681: FILE: drivers/efi/efivars.c:153:
+	if (len<0) len = 0;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#699: FILE: drivers/efi/efivars.c:171:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#704: FILE: drivers/efi/efivars.c:176:
+        short_name = kmalloc(short_name_size+1, GFP_KERNEL);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#704: FILE: drivers/efi/efivars.c:176:
+        short_name = kmalloc(short_name_size+1, GFP_KERNEL);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#704: FILE: drivers/efi/efivars.c:176:
+        short_name = kmalloc(short_name_size+1, GFP_KERNEL);
                                             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#705: FILE: drivers/efi/efivars.c:177:
+        new_efivar = kmalloc(sizeof(efivar_entry_t), GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#705: FILE: drivers/efi/efivars.c:177:
+        new_efivar = kmalloc(sizeof(efivar_entry_t), GFP_KERNEL);$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#708: FILE: drivers/efi/efivars.c:180:
+		if (short_name)        kfree(short_name);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#709: FILE: drivers/efi/efivars.c:181:
+		if (new_efivar)        kfree(new_efivar);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#712: FILE: drivers/efi/efivars.c:184:
+	memset(short_name, 0, short_name_size+1);
 	                                     ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around new_efivar->var.VendorGuid
#717: FILE: drivers/efi/efivars.c:189:
+	memcpy(&(new_efivar->var.VendorGuid), vendor_guid, sizeof(efi_guid_t));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#720: FILE: drivers/efi/efivars.c:192:
+	/* Convert Unicode to normal chars (assume top bits are 0),
+	   ala UTF-8 */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#720: FILE: drivers/efi/efivars.c:192:
+	   ala UTF-8 */

CHECK:SPACING: No space is necessary after a cast
#721: FILE: drivers/efi/efivars.c:193:
+	for (i=0; i< (int) (variable_name_size / sizeof(efi_char16_t)); i++) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#721: FILE: drivers/efi/efivars.c:193:
+	for (i=0; i< (int) (variable_name_size / sizeof(efi_char16_t)); i++) {
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxW)
#721: FILE: drivers/efi/efivars.c:193:
+	for (i=0; i< (int) (variable_name_size / sizeof(efi_char16_t)); i++) {
 	           ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#721: FILE: drivers/efi/efivars.c:193:
+	for (i=0; i< (int) (variable_name_size / sizeof(efi_char16_t)); i++) {
+		short_name[i] = variable_name[i] & 0xFF;
+	}

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#726: FILE: drivers/efi/efivars.c:198:
+	/* This is ugly, but necessary to separate one vendor's
+	   private variables from another's.         */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#726: FILE: drivers/efi/efivars.c:198:
+	   private variables from another's.         */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#734: FILE: drivers/efi/efivars.c:206:
+	if (!new_efivar->entry) return 1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#741: FILE: drivers/efi/efivars.c:213:
+        spin_lock(&efivars_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#741: FILE: drivers/efi/efivars.c:213:
+        spin_lock(&efivars_lock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#742: FILE: drivers/efi/efivars.c:214:
+        list_add(&new_efivar->list, &efivar_list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#742: FILE: drivers/efi/efivars.c:214:
+        list_add(&new_efivar->list, &efivar_list);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#743: FILE: drivers/efi/efivars.c:215:
+        spin_unlock(&efivars_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#743: FILE: drivers/efi/efivars.c:215:
+        spin_unlock(&efivars_lock);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#748: FILE: drivers/efi/efivars.c:220:
+
+

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#764: FILE: drivers/efi/efivars.c:236:
+	if (!page || !data) return -EINVAL;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#797: FILE: drivers/efi/efivars.c:269:
+	int found=0;
 	         ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#803: FILE: drivers/efi/efivars.c:275:
+	efi_variable_t *var_data;
+	if (!data || count != size) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#804: FILE: drivers/efi/efivars.c:276:
+		printk(KERN_WARNING "efivars: improper struct of size 0x%lx passed.\n", count);

ERROR:CODE_INDENT: code indent should use tabs where possible
#814: FILE: drivers/efi/efivars.c:286:
+                kfree(var_data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#814: FILE: drivers/efi/efivars.c:286:
+                kfree(var_data);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#821: FILE: drivers/efi/efivars.c:293:
+	/* Since the data ptr we've currently got is probably for
+	   a different variable find the right variable.

ERROR:SPACING: space prohibited after that open parenthesis '('
#829: FILE: drivers/efi/efivars.c:301:
+		if ( strsize1 == strsize2 &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#830: FILE: drivers/efi/efivars.c:302:
+		if ( strsize1 == strsize2 &&
+		     !memcmp(&(search_efivar->var.VariableName),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around search_efivar->var.VariableName
#830: FILE: drivers/efi/efivars.c:302:
+		     !memcmp(&(search_efivar->var.VariableName),

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#838: FILE: drivers/efi/efivars.c:310:
+	if (found) efivar = search_efivar;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#847: FILE: drivers/efi/efivars.c:319:
+		printk(KERN_WARNING "set_variable() failed: status=%lx\n", status);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#853: FILE: drivers/efi/efivars.c:325:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#875: FILE: drivers/efi/efivars.c:347:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#880: FILE: drivers/efi/efivars.c:352:
+{
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#886: FILE: drivers/efi/efivars.c:358:
+	printk(KERN_INFO "EFI Variables Facility v%s\n", EFIVARS_VERSION);

ERROR:CODE_INDENT: code indent should use tabs where possible
#888: FILE: drivers/efi/efivars.c:360:
+        /* Since efi.c happens before procfs is available,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#889: FILE: drivers/efi/efivars.c:361:
+           we create the directory here if it doesn't$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#889: FILE: drivers/efi/efivars.c:361:
+        /* Since efi.c happens before procfs is available,
+           we create the directory here if it doesn't

ERROR:CODE_INDENT: code indent should use tabs where possible
#890: FILE: drivers/efi/efivars.c:362:
+           already exist.  There's probably a better way$

ERROR:CODE_INDENT: code indent should use tabs where possible
#891: FILE: drivers/efi/efivars.c:363:
+           to do this.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#892: FILE: drivers/efi/efivars.c:364:
+        */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#893: FILE: drivers/efi/efivars.c:365:
+        if (!efi_dir)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#893: FILE: drivers/efi/efivars.c:365:
+        if (!efi_dir)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#894: FILE: drivers/efi/efivars.c:366:
+                efi_dir = proc_mkdir("efi", NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#894: FILE: drivers/efi/efivars.c:366:
+                efi_dir = proc_mkdir("efi", NULL);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#899: FILE: drivers/efi/efivars.c:371:
+	/* Per EFI spec, the maximum storage allocated for both
+	   the variable name and variable data is 1024 bytes.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#905: FILE: drivers/efi/efivars.c:377:
+		variable_name_size=1024;
 		                  ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#911: FILE: drivers/efi/efivars.c:383:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#921: FILE: drivers/efi/efivars.c:393:
+			printk(KERN_WARNING "get_next_variable: status=%lx\n", status);

ERROR:CODE_INDENT: code indent should use tabs where possible
#938: FILE: drivers/efi/efivars.c:410:
+        spin_lock(&efivars_lock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#938: FILE: drivers/efi/efivars.c:410:
+        spin_lock(&efivars_lock);$

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#981: FILE: drivers/efi/Kconfig:7:
+config EFI
+	bool "EFI Driver Support"
+	---help---
+	  EFI (Extensible Firmware Interface) support for Linux enables 
+	  the use of drivers that provide architecturally independent 
+	  functionality.  This support is applicable to architectures 
+	  that support EFI.  
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#984: FILE: drivers/efi/Kconfig:10:
+^I  EFI (Extensible Firmware Interface) support for Linux enables $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#985: FILE: drivers/efi/Kconfig:11:
+^I  the use of drivers that provide architecturally independent $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#986: FILE: drivers/efi/Kconfig:12:
+^I  functionality.  This support is applicable to architectures $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#987: FILE: drivers/efi/Kconfig:13:
+^I  that support EFI.  $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#989: FILE: drivers/efi/Kconfig:15:
+config EFI_VARS
+	tristate "/proc/efi/vars support"
+	depends on PROC_FS && EFI
+	---help---
+	  If you say Y here, you are able to get EFI (Extensible Firmware
+	  Interface) variable information in /proc/efi/vars.  You may read,
+	  write, create, and destroy EFI variables through this interface.
+
+ 	  To use this option, you have to check that the "/proc file system
+	  support (CONFIG_PROC_FS) is enabled, too.
+
+endmenu

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000347061.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 36 errors, 32 warnings, 24 checks, 505 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000347061.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
