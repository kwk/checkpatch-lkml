WARNING:TYPO_SPELLING: 'apreciate' may be misspelled - perhaps 'appreciate'?
#50: 
I'd apreciate any comments.
    ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#66: 
//  EXTRAVERSION =
    ^^^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#74: FILE: include/linux/mm.h:435:
+int enum_user_pages(struct task_struct *tsk, struct mm_struct *mm, unsigned long start,
+		unsigned int len, int write, struct page **pages, struct vm_area_struct **vmas);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#91: FILE: mm/memory.c:408:
+static struct page * follow_page(struct mm_struct *mm, unsigned long address, int write) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#91: FILE: mm/memory.c:408:
+static struct page * follow_page(struct mm_struct *mm, unsigned long address, int write) 

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#107: FILE: mm/memory.c:451:
+int enum_user_pages(struct task_struct *tsk, struct mm_struct *mm, unsigned long start,
+		unsigned int len, int write, struct page **pages, struct vm_area_struct **vmas)

WARNING:LINE_SPACING: Missing a blank line after declarations
#110: FILE: mm/memory.c:454:
+	int i = 0;
+	do {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#111: FILE: mm/memory.c:455:
+		struct vm_area_struct *	vma;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#115: FILE: mm/memory.c:459:
+			if (i) return i;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#119: FILE: mm/memory.c:463:
+			if (i) return i;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#122: FILE: mm/memory.c:466:
+			if (i) return i;

WARNING:LINE_SPACING: Missing a blank line after declarations
#129: FILE: mm/memory.c:473:
+			struct page *map;
+			while (!(map = follow_page(mm, start, write))) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#139: FILE: mm/memory.c:483:
+					if (i) return i;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#142: FILE: mm/memory.c:486:
+					if (i) return i;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#149: FILE: mm/memory.c:493:
+				if (pages[i]) get_page(pages[i]);

ERROR:SPACING: space required before the open parenthesis '('
#156: FILE: mm/memory.c:500:
+		} while(len && start < vma->vm_end);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#158: FILE: mm/memory.c:502:
+	} while(len);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#189: FILE: mm/memory.c:524:
+	pgcount = (va + len + PAGE_SIZE - 1)/PAGE_SIZE - va/PAGE_SIZE;
 	                                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#189: FILE: mm/memory.c:524:
+	pgcount = (va + len + PAGE_SIZE - 1)/PAGE_SIZE - va/PAGE_SIZE;
 	                                                   ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#191: FILE: mm/memory.c:526:
+	if (!pgcount) BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#191: FILE: mm/memory.c:526:
+	if (!pgcount) BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#258: FILE: mm/memory.c:541:
+	err = enum_user_pages(current, mm, va & ~PAGE_MASK, pgcount,
+			(rw==READ), iobuf->maplist, NULL);

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#258: FILE: mm/memory.c:541:
+			(rw==READ), iobuf->maplist, NULL);
 			   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#260: FILE: mm/memory.c:543:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#263: FILE: mm/memory.c:546:
+		dprintk ("map_user_kiobuf: end %d\n", err);

WARNING:TYPO_SPELLING: 'superflous' may be misspelled - perhaps 'superfluous'?
#267: FILE: mm/memory.c:550:
+		/* FIXME: flush superflous for rw==READ,
 		                ^^^^^^^^^^

ERROR:SPACING: space required before the open parenthesis '('
#271: FILE: mm/memory.c:554:
+	} while(pgcount);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#316: FILE: mm/memory.c:1452:
+		struct vm_area_struct * vma;

WARNING:LINE_SPACING: Missing a blank line after declarations
#317: FILE: mm/memory.c:1453:
+		struct vm_area_struct * vma;
+		vma = find_vma(current->mm, addr);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#320: FILE: mm/memory.c:1456:
+			BUG();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#322: FILE: mm/memory.c:1458:
+			BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#325: FILE: mm/memory.c:1461:
+	ret = enum_user_pages(current, current->mm, addr,
+			(end+PAGE_SIZE-1)/PAGE_SIZE-addr/PAGE_SIZE,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#325: FILE: mm/memory.c:1461:
+			(end+PAGE_SIZE-1)/PAGE_SIZE-addr/PAGE_SIZE,
 			    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#325: FILE: mm/memory.c:1461:
+			(end+PAGE_SIZE-1)/PAGE_SIZE-addr/PAGE_SIZE,
 			              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#325: FILE: mm/memory.c:1461:
+			(end+PAGE_SIZE-1)/PAGE_SIZE-addr/PAGE_SIZE,
 			                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#325: FILE: mm/memory.c:1461:
+			(end+PAGE_SIZE-1)/PAGE_SIZE-addr/PAGE_SIZE,
 			                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#325: FILE: mm/memory.c:1461:
+			(end+PAGE_SIZE-1)/PAGE_SIZE-addr/PAGE_SIZE,
 			                                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#340: FILE: kernel/ptrace.c:89:
+ * Source/target buffer must be kernel space, $

WARNING:TYPO_SPELLING: 'sucessfully' may be misspelled - perhaps 'successfully'?
#468: FILE: kernel/ptrace.c:110:
+	/* ignore errors, just check how much was sucessfully transfered */
 	                                          ^^^^^^^^^^^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#478: FILE: kernel/ptrace.c:120:
+		offset = addr & (PAGE_SIZE-1);
 		                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#479: FILE: kernel/ptrace.c:121:
+		if (bytes > PAGE_SIZE-offset)
 		                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#480: FILE: kernel/ptrace.c:122:
+			bytes = PAGE_SIZE-offset;
 			                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#501: FILE: kernel/ptrace.c:142:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000510425.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 11 warnings, 14 checks, 423 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000510425.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
