WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*smbus)...) over kzalloc(sizeof(struct amd_smbus)...)
#38: FILE: drivers/i2c/busses/i2c-amd8111.c:346:
+	smbus = kzalloc(sizeof(struct amd_smbus), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:SPACING: space required before the open brace '{'
#53: FILE: drivers/i2c/busses/i2c-ibm_iic.c:675:
+	if (!(dev = kzalloc(sizeof(*dev), GFP_KERNEL))){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#53: FILE: drivers/i2c/busses/i2c-ibm_iic.c:675:
+	if (!(dev = kzalloc(sizeof(*dev), GFP_KERNEL))){

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*new_adapter)...) over kzalloc(sizeof(struct i2c_adapter)...)
#71: FILE: drivers/i2c/busses/i2c-iop3xx.c:443:
+	new_adapter = kzalloc(sizeof(struct i2c_adapter), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*adapter_data)...) over kzalloc(sizeof(struct i2c_algo_iop3xx_data)...)
#79: FILE: drivers/i2c/busses/i2c-iop3xx.c:449:
+	adapter_data = kzalloc(sizeof(struct i2c_algo_iop3xx_data), GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#96: FILE: drivers/i2c/busses/i2c-keywest.c:538:
+	iface = (struct keywest_iface *) kzalloc(tsize, GFP_KERNEL);

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#96: FILE: drivers/i2c/busses/i2c-keywest.c:538:
+	iface = (struct keywest_iface *) kzalloc(tsize, GFP_KERNEL);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#114: FILE: drivers/i2c/busses/i2c-mpc.c:299:
+	if (!(i2c = kzalloc(sizeof(*i2c), GFP_KERNEL))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#114: FILE: drivers/i2c/busses/i2c-mpc.c:299:
+	if (!(i2c = kzalloc(sizeof(*i2c), GFP_KERNEL))) {
 		return -ENOMEM;
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*drv_data)...) over kzalloc(sizeof(struct mv64xxx_i2c_data)...)
#129: FILE: drivers/i2c/busses/i2c-mv64xxx.c:503:
+	drv_data = kzalloc(sizeof(struct mv64xxx_i2c_data), GFP_KERNEL);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#147: FILE: drivers/i2c/busses/i2c-nforce2.c:316:
+	if (!(smbuses = (void *)kzalloc(2*sizeof(struct nforce2_smbus),
 	                                 ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#147: FILE: drivers/i2c/busses/i2c-nforce2.c:316:
+	if (!(smbuses = (void *)kzalloc(2*sizeof(struct nforce2_smbus),

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#147: FILE: drivers/i2c/busses/i2c-nforce2.c:316:
+	if (!(smbuses = (void *)kzalloc(2*sizeof(struct nforce2_smbus),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#148: FILE: drivers/i2c/busses/i2c-nforce2.c:317:
+	if (!(smbuses = (void *)kzalloc(2*sizeof(struct nforce2_smbus),
 				       	GFP_KERNEL)))

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*adapter)...) over kzalloc(sizeof(struct i2c_par)...)
#162: FILE: drivers/i2c/busses/i2c-parport.c:158:
+	adapter = kzalloc(sizeof(struct i2c_par), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*iface)...) over kzalloc(sizeof(struct smu_iface)...)
#179: FILE: drivers/i2c/busses/i2c-pmac-smu.c:214:
+	iface = kzalloc(sizeof(struct smu_iface), GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#196: FILE: drivers/i2c/busses/i2c-prosavage.c:244:
+        pci_set_drvdata(dev, kzalloc(sizeof(struct s_i2c_chip), GFP_KERNEL)); $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#196: FILE: drivers/i2c/busses/i2c-prosavage.c:244:
+        pci_set_drvdata(dev, kzalloc(sizeof(struct s_i2c_chip), GFP_KERNEL)); $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: drivers/i2c/busses/i2c-prosavage.c:244:
+        pci_set_drvdata(dev, kzalloc(sizeof(struct s_i2c_chip), GFP_KERNEL)); $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#234: FILE: drivers/i2c/chips/ds1337.c:246:
+	if (!(data = kzalloc(sizeof(struct ds1337_data), GFP_KERNEL))) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*data)...) over kzalloc(sizeof(struct ds1337_data)...)
#234: FILE: drivers/i2c/chips/ds1337.c:246:
+	if (!(data = kzalloc(sizeof(struct ds1337_data), GFP_KERNEL))) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*client)...) over kzalloc(sizeof(struct i2c_client)...)
#250: FILE: drivers/i2c/chips/ds1374.c:196:
+	client = kzalloc(sizeof(struct i2c_client), GFP_KERNEL);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#266: FILE: drivers/i2c/chips/eeprom.c:174:
+	if (!(data = kzalloc(sizeof(struct eeprom_data), GFP_KERNEL))) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*data)...) over kzalloc(sizeof(struct eeprom_data)...)
#266: FILE: drivers/i2c/chips/eeprom.c:174:
+	if (!(data = kzalloc(sizeof(struct eeprom_data), GFP_KERNEL))) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*client)...) over kzalloc(sizeof(struct i2c_client)...)
#282: FILE: drivers/i2c/chips/m41t00.c:177:
+	client = kzalloc(sizeof(struct i2c_client), GFP_KERNEL);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#298: FILE: drivers/i2c/chips/max6875.c:182:
+	if (!(data = kzalloc(sizeof(struct max6875_data), GFP_KERNEL)))

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*data)...) over kzalloc(sizeof(struct max6875_data)...)
#298: FILE: drivers/i2c/chips/max6875.c:182:
+	if (!(data = kzalloc(sizeof(struct max6875_data), GFP_KERNEL)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#312: FILE: drivers/i2c/chips/pca9539.c:125:
+	if (!(data = kzalloc(sizeof(struct pca9539_data), GFP_KERNEL))) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*data)...) over kzalloc(sizeof(struct pca9539_data)...)
#312: FILE: drivers/i2c/chips/pca9539.c:125:
+	if (!(data = kzalloc(sizeof(struct pca9539_data), GFP_KERNEL))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#328: FILE: drivers/i2c/chips/pcf8574.c:130:
+	if (!(data = kzalloc(sizeof(struct pcf8574_data), GFP_KERNEL))) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*data)...) over kzalloc(sizeof(struct pcf8574_data)...)
#328: FILE: drivers/i2c/chips/pcf8574.c:130:
+	if (!(data = kzalloc(sizeof(struct pcf8574_data), GFP_KERNEL))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#344: FILE: drivers/i2c/chips/pcf8591.c:181:
+	if (!(data = kzalloc(sizeof(struct pcf8591_data), GFP_KERNEL))) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*data)...) over kzalloc(sizeof(struct pcf8591_data)...)
#344: FILE: drivers/i2c/chips/pcf8591.c:181:
+	if (!(data = kzalloc(sizeof(struct pcf8591_data), GFP_KERNEL))) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*d)...) over kzalloc(sizeof(struct rtc8564_data)...)
#360: FILE: drivers/i2c/chips/rtc8564.c:151:
+	d = kzalloc(sizeof(struct rtc8564_data), GFP_KERNEL);

WARNING:SIZEOF_PARENTHESIS: sizeof *tps should be sizeof(*tps)
#377: FILE: drivers/i2c/chips/tps65010.c:503:
+	tps = kzalloc(sizeof *tps, GFP_KERNEL);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000146623.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 6 warnings, 18 checks, 282 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000146623.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
