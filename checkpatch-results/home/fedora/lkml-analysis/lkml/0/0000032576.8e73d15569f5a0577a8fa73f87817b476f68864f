WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#55: FILE: drivers/spi/Kconfig:78:
+config SPI_IMX
+	tristate "Freescale iMX SPI controller driver"
+	depends on SPI_MASTER && ARCH_IMX && EXPERIMENTAL
+	help
+	  This is the iMX SPI controller driver.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#81: FILE: drivers/spi/spi_imx.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#82: FILE: drivers/spi/spi_imx.c:2:
+ * drivers/spi/spi_imx.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#114: FILE: drivers/spi/spi_imx.c:34:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/delay.h> instead of <asm/delay.h>
#117: FILE: drivers/spi/spi_imx.c:37:
+#include <asm/delay.h>

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#150: FILE: drivers/spi/spi_imx.c:70:
+#define SPI_CONTROL_SSCTL_0	(0x0 << 6)      /* Master: /SS stays low
+							between SPI burst

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#152: FILE: drivers/spi/spi_imx.c:72:
+							BIT_COUNT */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#154: FILE: drivers/spi/spi_imx.c:74:
+#define SPI_CONTROL_SSCTL_1	(0x1 << 6)      /* Master: /SS insert pulse
+							between SPI burst

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#156: FILE: drivers/spi/spi_imx.c:76:
+							/SS rising edge */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#168: FILE: drivers/spi/spi_imx.c:88:
+#define SPI_CONTROL_DRCTL_1	(0x1 << 11)     /* /SPI_RDY falling edge
+							triggers input */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#168: FILE: drivers/spi/spi_imx.c:88:
+							triggers input */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#170: FILE: drivers/spi/spi_imx.c:90:
+#define SPI_CONTROL_DRCTL_2	(0x2 << 11)     /* /SPI_RDY active low level
+							triggers input */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#170: FILE: drivers/spi/spi_imx.c:90:
+							triggers input */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#189: FILE: drivers/spi/spi_imx.c:109:
+#define SPI_INTEN_TE		(0x1 << 8)      /* TXFIFO Empty Interrupt
+							Enable */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#189: FILE: drivers/spi/spi_imx.c:109:
+							Enable */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#191: FILE: drivers/spi/spi_imx.c:111:
+#define SPI_INTEN_TH		(0x1 << 9)      /* TXFIFO Half Interrupt
+							Enable */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#191: FILE: drivers/spi/spi_imx.c:111:
+							Enable */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#193: FILE: drivers/spi/spi_imx.c:113:
+#define SPI_INTEN_TF		(0x1 << 10)     /* TXFIFO Full Interrupt
+							Enable */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#193: FILE: drivers/spi/spi_imx.c:113:
+							Enable */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#195: FILE: drivers/spi/spi_imx.c:115:
+#define SPI_INTEN_RE		(0x1 << 11)     /* RXFIFO Data Ready Interrupt
+							Enable */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#195: FILE: drivers/spi/spi_imx.c:115:
+							Enable */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#197: FILE: drivers/spi/spi_imx.c:117:
+#define SPI_INTEN_RH		(0x1 << 12)     /* RXFIFO Half Interrupt
+							Enable */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#197: FILE: drivers/spi/spi_imx.c:117:
+							Enable */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#199: FILE: drivers/spi/spi_imx.c:119:
+#define SPI_INTEN_RF		(0x1 << 13)     /* RXFIFO Full Interrupt
+							Enable */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#199: FILE: drivers/spi/spi_imx.c:119:
+							Enable */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#201: FILE: drivers/spi/spi_imx.c:121:
+#define SPI_INTEN_RO		(0x1 << 14)     /* RXFIFO Overflow Interrupt
+							Enable */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#201: FILE: drivers/spi/spi_imx.c:121:
+							Enable */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#203: FILE: drivers/spi/spi_imx.c:123:
+#define SPI_INTEN_BO		(0x1 << 15)     /* Bit Count Overflow
+							Interrupt Enable */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#203: FILE: drivers/spi/spi_imx.c:123:
+							Interrupt Enable */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#216: FILE: drivers/spi/spi_imx.c:136:
+#define SPI_PERIOD_MAX_WAIT	(0x7FFF)	/* Max Wait Between
+							Transactions */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#216: FILE: drivers/spi/spi_imx.c:136:
+							Transactions */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#219: FILE: drivers/spi/spi_imx.c:139:
+#define SPI_PERIOD_CSRC_BCLK	(0x0 << 15)	/* Period Clock Source is
+							Bit Clock */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#219: FILE: drivers/spi/spi_imx.c:139:
+							Bit Clock */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#221: FILE: drivers/spi/spi_imx.c:141:
+#define SPI_PERIOD_CSRC_32768	(0x1 << 15)	/* Period Clock Source is
+							32.768 KHz Clock */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#221: FILE: drivers/spi/spi_imx.c:141:
+							32.768 KHz Clock */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#229: FILE: drivers/spi/spi_imx.c:149:
+#define SPI_DMA_RHDEN		(0x1 << 12)	/* RXFIFO Half DMA Request
+							Enable */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#229: FILE: drivers/spi/spi_imx.c:149:
+							Enable */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#231: FILE: drivers/spi/spi_imx.c:151:
+#define SPI_DMA_RFDEN		(0x1 << 13)     /* RXFIFO Full DMA Request
+							Enable */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#231: FILE: drivers/spi/spi_imx.c:151:
+							Enable */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#233: FILE: drivers/spi/spi_imx.c:153:
+#define SPI_DMA_TEDEN		(0x1 << 14)     /* TXFIFO Empty DMA Request
+							Enable */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#233: FILE: drivers/spi/spi_imx.c:153:
+							Enable */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#235: FILE: drivers/spi/spi_imx.c:155:
+#define SPI_DMA_THDEN		(0x1 << 15)     /* TXFIFO Half DMA Request
+							Enable */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#235: FILE: drivers/spi/spi_imx.c:155:
+							Enable */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#255: FILE: drivers/spi/spi_imx.c:175:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'lenght' may be misspelled - perhaps 'length'?
#262: FILE: drivers/spi/spi_imx.c:182:
+/* DMA burst lenght for half full/empty request trigger */
              ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#266: FILE: drivers/spi/spi_imx.c:186:
+/* Dummy char output to achieve reads.
+   Choosing something different from all zeors or all ones may help

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#267: FILE: drivers/spi/spi_imx.c:187:
+   pattern recognition for oscilloscope analysis. */

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#277: FILE: drivers/spi/spi_imx.c:197:
+ * @v : new value for the field correctly bit-alligned
+*/

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#278: FILE: drivers/spi/spi_imx.c:198:
+#define u32_EDIT(r, m, v)		r = (r & ~(m)) | (v)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'r' - possible side-effects?
#278: FILE: drivers/spi/spi_imx.c:198:
+#define u32_EDIT(r, m, v)		r = (r & ~(m)) | (v)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#281: FILE: drivers/spi/spi_imx.c:201:
+#define START_STATE			((void*)0)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#282: FILE: drivers/spi/spi_imx.c:202:
+#define RUNNING_STATE			((void*)1)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#283: FILE: drivers/spi/spi_imx.c:203:
+#define DONE_STATE			((void*)2)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#284: FILE: drivers/spi/spi_imx.c:204:
+#define ERROR_STATE			((void*)-1)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#293: FILE: drivers/spi/spi_imx.c:213:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#324: FILE: drivers/spi/spi_imx.c:244:
+
+

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'channel' - possible side-effects?
#348: FILE: drivers/spi/spi_imx.c:268:
+#define PRINT_DMA_CH_REGS(dev, channel)	\
+	dev_dbg(dev,			\
+		"DMA(%d)\n"		\
+		"    SAR    = 0x%08X\n"	\
+		"    DAR    = 0x%08X\n"	\
+		"    CNTR   = 0x%08X\n"	\
+		"    CCR    = 0x%08X\n"	\
+		"    RSSR   = 0x%08X\n"	\
+		"    BLR    = 0x%08X\n"	\
+		"    RTOR   = 0x%08X\n"	\
+		"    BUCR   = 0x%08X\n",\
+		channel,		\
+		SAR(channel),		\
+		DAR(channel),		\
+		CNTR(channel),		\
+		CCR(channel),		\
+		RSSR(channel),		\
+		BLR(channel),		\
+		RTOR(channel),		\
+		BUCR(channel))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'regs' - possible side-effects?
#369: FILE: drivers/spi/spi_imx.c:289:
+#define PRINT_SPI_REGS(dev, regs)		\
+	dev_dbg(dev,				\
+		"SPI_REGS\n"			\
+		"    CONTROL    = 0x%08X\n"	\
+		"    INT_STATUS = 0x%08X\n"	\
+		"    TEST       = 0x%08X\n"	\
+		"    PERIOD     = 0x%08X\n"	\
+		"    DMA        = 0x%08X\n",	\
+		rd_CONTROL(regs),		\
+		rd_INT_STATUS(regs),		\
+		rd_TEST(regs),			\
+		rd_PERIOD(regs),			\
+		rd_DMA(regs))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#384: FILE: drivers/spi/spi_imx.c:304:
+
+

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#409: FILE: drivers/spi/spi_imx.c:329:
+	spinlock_t lock;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#463: FILE: drivers/spi/spi_imx.c:383:
+};
+/*-------------------------------------------------------------------------*/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#465: FILE: drivers/spi/spi_imx.c:385:
+
+

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#472: FILE: drivers/spi/spi_imx.c:392:
+	volatile u32 d;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'flush', this function's name, in a string
#474: FILE: drivers/spi/spi_imx.c:394:
+	dev_dbg(&drv_data->pdev->dev, "flush\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'restore_state', this function's name, in a string
#494: FILE: drivers/spi/spi_imx.c:414:
+		"restore_state\n"

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#528: FILE: drivers/spi/spi_imx.c:448:
+	tx = (u8*)drv_data->tx;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#529: FILE: drivers/spi/spi_imx.c:449:
+	tx_end = (u8*)drv_data->tx_end;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dummy_writer', this function's name, in a string
#537: FILE: drivers/spi/spi_imx.c:457:
+		"dummy_writer\n"

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#546: FILE: drivers/spi/spi_imx.c:466:
+	if (n > 0) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#571: FILE: drivers/spi/spi_imx.c:491:
+	tx = (u8*)drv_data->tx;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#572: FILE: drivers/spi/spi_imx.c:492:
+	tx_end = (u8*)drv_data->tx_end;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'fifo_avail_space > SPI_FIFO_OVERFLOW_MARGIN'
#575: FILE: drivers/spi/spi_imx.c:495:
+	if (drv_data->rx && (fifo_avail_space > SPI_FIFO_OVERFLOW_MARGIN))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'u8_writer', this function's name, in a string
#580: FILE: drivers/spi/spi_imx.c:500:
+		"u8_writer\n"

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#612: FILE: drivers/spi/spi_imx.c:532:
+	rx = (u8*)drv_data->rx;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#613: FILE: drivers/spi/spi_imx.c:533:
+	rx_end = (u8*)drv_data->rx_end;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'u8_reader', this function's name, in a string
#618: FILE: drivers/spi/spi_imx.c:538:
+		"u8_reader\n"

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#647: FILE: drivers/spi/spi_imx.c:567:
+	tx = (u16*)drv_data->tx;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#648: FILE: drivers/spi/spi_imx.c:568:
+	tx_end = (u16*)drv_data->tx_end;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'fifo_avail_space > SPI_FIFO_OVERFLOW_MARGIN'
#651: FILE: drivers/spi/spi_imx.c:571:
+	if (drv_data->rx && (fifo_avail_space > SPI_FIFO_OVERFLOW_MARGIN))

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'u16_writer', this function's name, in a string
#656: FILE: drivers/spi/spi_imx.c:576:
+		"u16_writer\n"

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#690: FILE: drivers/spi/spi_imx.c:610:
+	rx = (u16*)drv_data->rx;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#691: FILE: drivers/spi/spi_imx.c:611:
+	rx_end = (u16*)drv_data->rx_end;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'u16_reader', this function's name, in a string
#696: FILE: drivers/spi/spi_imx.c:616:
+		"u16_reader\n"

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#725: FILE: drivers/spi/spi_imx.c:645:
+			list_entry(trans->transfer_list.next,
+					struct spi_transfer,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#743: FILE: drivers/spi/spi_imx.c:663:
+	if (!drv_data->master_info->enable_dma ||
+			!drv_data->cur_chip->enable_dma)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#751: FILE: drivers/spi/spi_imx.c:671:
+			/* The caller provided at least dma and cpu virtual
+			   address for write; pump_transfers() will consider the

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#753: FILE: drivers/spi/spi_imx.c:673:
+			   NULL */

WARNING:TYPO_SPELLING: 'performe' may be misspelled - perhaps 'perform'?
#758: FILE: drivers/spi/spi_imx.c:678:
+			   performe read only transfer -->
 			   ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#758: FILE: drivers/spi/spi_imx.c:678:
+			/* The caller provided dma and cpu virtual address to
+			   performe read only transfer -->

WARNING:TYPO_SPELLING: 'achive' may be misspelled - perhaps 'achieve'?
#760: FILE: drivers/spi/spi_imx.c:680:
+			   achive reads */
 			   ^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#760: FILE: drivers/spi/spi_imx.c:680:
+			   achive reads */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#764: FILE: drivers/spi/spi_imx.c:684:
+			drv_data->tx_dma = dma_map_single(dev,
+							buf,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#773: FILE: drivers/spi/spi_imx.c:693:
+			/* Flags transfer as rd_only for pump_transfers() DMA
+			   regs programming (should be redundant) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#773: FILE: drivers/spi/spi_imx.c:693:
+			   regs programming (should be redundant) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#784: FILE: drivers/spi/spi_imx.c:704:
+	/* NULL rx means write-only transfer and no map needed
+	   since rx DMA will not be used */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#784: FILE: drivers/spi/spi_imx.c:704:
+	   since rx DMA will not be used */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#787: FILE: drivers/spi/spi_imx.c:707:
+		drv_data->rx_dma = dma_map_single(

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!drv_data->tx"
#797: FILE: drivers/spi/spi_imx.c:717:
+	if (drv_data->tx == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'achive' may be misspelled - perhaps 'achieve'?
#799: FILE: drivers/spi/spi_imx.c:719:
+		   writes to achive reads */
 		             ^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#799: FILE: drivers/spi/spi_imx.c:719:
+		/* Read only message --> use drv_data->dummy_dma_buf for dummy
+		   writes to achive reads */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#799: FILE: drivers/spi/spi_imx.c:719:
+		   writes to achive reads */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#807: FILE: drivers/spi/spi_imx.c:727:
+	drv_data->tx_dma = dma_map_single(dev,
+					buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#813: FILE: drivers/spi/spi_imx.c:733:
+			dma_unmap_single(dev,
+					drv_data->rx_dma,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#832: FILE: drivers/spi/spi_imx.c:752:
+		dma_unmap_single(dev,
+				drv_data->rx_dma,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#839: FILE: drivers/spi/spi_imx.c:759:
+		dma_unmap_single(dev,
+				drv_data->tx_dma,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#852: FILE: drivers/spi/spi_imx.c:772:
+	/* Bring SPI to sleep; restore_state() and pump_transfer()
+	   will do new setup */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#852: FILE: drivers/spi/spi_imx.c:772:
+	   will do new setup */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#869: FILE: drivers/spi/spi_imx.c:789:
+static void dma_err_handler(

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dma_err_handler', this function's name, in a string
#875: FILE: drivers/spi/spi_imx.c:795:
+	dev_dbg(&drv_data->pdev->dev, "dma_err_handler\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#883: FILE: drivers/spi/spi_imx.c:803:
+		dev_err(&drv_data->pdev->dev,
+				"dma_err_handler - flush failed\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dma_err_handler', this function's name, in a string
#883: FILE: drivers/spi/spi_imx.c:803:
+				"dma_err_handler - flush failed\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dma_tx_handler', this function's name, in a string
#895: FILE: drivers/spi/spi_imx.c:815:
+	dev_dbg(&drv_data->pdev->dev, "dma_tx_handler\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#901: FILE: drivers/spi/spi_imx.c:821:
+	wr_INT_STATUS(rd_INT_STATUS(drv_data->regs) | SPI_INTEN_TE,
+			drv_data->regs);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dma_transfer', this function's name, in a string
#921: FILE: drivers/spi/spi_imx.c:841:
+				"dma_transfer - flush failed\n");

WARNING:TYPO_SPELLING: 'overun' may be misspelled - perhaps 'overrun'?
#924: FILE: drivers/spi/spi_imx.c:844:
+				"dma_transfer - fifo overun\n");
 				                     ^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#924: FILE: drivers/spi/spi_imx.c:844:
+		dev_warn(&drv_data->pdev->dev,
+				"dma_transfer - fifo overun\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dma_transfer', this function's name, in a string
#924: FILE: drivers/spi/spi_imx.c:844:
+				"dma_transfer - fifo overun\n");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#938: FILE: drivers/spi/spi_imx.c:858:
+			while ((rd_CONTROL(regs) & SPI_CONTROL_XCH) && limit--);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dma_transfer', this function's name, in a string
#942: FILE: drivers/spi/spi_imx.c:862:
+					"dma_transfer - end of tx failed\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dma_transfer', this function's name, in a string
#945: FILE: drivers/spi/spi_imx.c:865:
+					"dma_transfer - end of tx\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dma_transfer', this function's name, in a string
#952: FILE: drivers/spi/spi_imx.c:872:
+				"dma_transfer - test = 0x%08X\n",

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#956: FILE: drivers/spi/spi_imx.c:876:
+					SPI_TEST_RXCNT_LSB)*drv_data->n_bytes;
 					                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dma_transfer', this function's name, in a string
#964: FILE: drivers/spi/spi_imx.c:884:
+					"dma_transfer - flush failed\n");

WARNING:TYPO_SPELLING: 'transfered' may be misspelled - perhaps 'transferred'?
#967: FILE: drivers/spi/spi_imx.c:887:
+		/* End of transfer, update total byte transfered */
 		                                      ^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#971: FILE: drivers/spi/spi_imx.c:891:
+		/* Release chip select if requested, transfer delays are
+		   handled in pump_transfers() */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#971: FILE: drivers/spi/spi_imx.c:891:
+		   handled in pump_transfers() */

WARNING:TYPO_SPELLING: 'Opps' may be misspelled - perhaps 'Oops'?
#984: FILE: drivers/spi/spi_imx.c:904:
+	/* Opps problem detected */
 	   ^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'interrupt_wronly_transfer', this function's name, in a string
#999: FILE: drivers/spi/spi_imx.c:919:
+			"interrupt_wronly_transfer - status = 0x%08X\n", status);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'interrupt_wronly_transfer', this function's name, in a string
#1006: FILE: drivers/spi/spi_imx.c:926:
+				"interrupt_wronly_transfer - end of tx\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'interrupt_wronly_transfer', this function's name, in a string
#1010: FILE: drivers/spi/spi_imx.c:930:
+					"interrupt_wronly_transfer - "

WARNING:SPLIT_STRING: quoted string split across lines
#1011: FILE: drivers/spi/spi_imx.c:931:
+					"interrupt_wronly_transfer - "
+					"flush failed\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:TYPO_SPELLING: 'transfered' may be misspelled - perhaps 'transferred'?
#1013: FILE: drivers/spi/spi_imx.c:933:
+			/* End of transfer, update total byte transfered */
 			                                      ^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1017: FILE: drivers/spi/spi_imx.c:937:
+			/* Release chip select if requested, transfer delays are
+			   handled in pump_transfers */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1017: FILE: drivers/spi/spi_imx.c:937:
+			   handled in pump_transfers */

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'interrupt_transfer', this function's name, in a string
#1051: FILE: drivers/spi/spi_imx.c:971:
+			"interrupt_transfer - status = 0x%08X\n", status);

WARNING:TYPO_SPELLING: 'overun' may be misspelled - perhaps 'overrun'?
#1057: FILE: drivers/spi/spi_imx.c:977:
+				"interrupt_transfer - fifo overun\n"
 				                           ^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1057: FILE: drivers/spi/spi_imx.c:977:
+			dev_warn(&drv_data->pdev->dev,
+				"interrupt_transfer - fifo overun\n"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'interrupt_transfer', this function's name, in a string
#1057: FILE: drivers/spi/spi_imx.c:977:
+				"interrupt_transfer - fifo overun\n"

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'interrupt_transfer', this function's name, in a string
#1065: FILE: drivers/spi/spi_imx.c:985:
+					"interrupt_transfer - flush failed\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'interrupt_transfer', this function's name, in a string
#1079: FILE: drivers/spi/spi_imx.c:999:
+				"interrupt_transfer - end of tx\n");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1083: FILE: drivers/spi/spi_imx.c:1003:
+			while ((drv_data->read(drv_data) == 0) && limit--);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'interrupt_transfer', this function's name, in a string
#1087: FILE: drivers/spi/spi_imx.c:1007:
+					"interrupt_transfer - "

WARNING:SPLIT_STRING: quoted string split across lines
#1088: FILE: drivers/spi/spi_imx.c:1008:
+					"interrupt_transfer - "
+					"trailing byte read failed\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'interrupt_transfer', this function's name, in a string
#1091: FILE: drivers/spi/spi_imx.c:1011:
+					"interrupt_transfer - end of rx\n");

WARNING:TYPO_SPELLING: 'transfered' may be misspelled - perhaps 'transferred'?
#1093: FILE: drivers/spi/spi_imx.c:1013:
+			/* End of transfer, update total byte transfered */
 			                                      ^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1097: FILE: drivers/spi/spi_imx.c:1017:
+			/* Release chip select if requested, transfer delays are
+			   handled in pump_transfers */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1097: FILE: drivers/spi/spi_imx.c:1017:
+			   handled in pump_transfers */

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'spi_int', this function's name, in a string
#1125: FILE: drivers/spi/spi_imx.c:1045:
+			"spi_int - bad message state\n");

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#1143: FILE: drivers/spi/spi_imx.c:1063:
+	for (div = SPI_PERCLK2_DIV_MIN;
[...]
+			if (quantized_hz <= speed_hz)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1186: FILE: drivers/spi/spi_imx.c:1106:
+		previous = list_entry(transfer->transfer_list.prev,
+					struct spi_transfer,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1246: FILE: drivers/spi/spi_imx.c:1166:
+	/* DMA cannot read/write SPI FIFOs other than 16 bits at a time; hence
+	   if bits_per_word is less or equal 8 PIO transfers are performed.

WARNING:TYPO_SPELLING: 'convinient' may be misspelled - perhaps 'convenient'?
#1247: FILE: drivers/spi/spi_imx.c:1167:
+	   Moreover DMA is convinient for transfer length bigger than FIFOs
 	                   ^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1248: FILE: drivers/spi/spi_imx.c:1168:
+	   byte size. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'drv_data->n_bytes == 2'
#1249: FILE: drivers/spi/spi_imx.c:1169:
+	if ((drv_data->n_bytes == 2) &&
+		(drv_data->len > SPI_FIFO_DEPTH*SPI_FIFO_BYTE_WIDTH) &&
+		map_dma_buffers(drv_data)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1250: FILE: drivers/spi/spi_imx.c:1170:
+	if ((drv_data->n_bytes == 2) &&
+		(drv_data->len > SPI_FIFO_DEPTH*SPI_FIFO_BYTE_WIDTH) &&

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1250: FILE: drivers/spi/spi_imx.c:1170:
+		(drv_data->len > SPI_FIFO_DEPTH*SPI_FIFO_BYTE_WIDTH) &&
 		                               ^

WARNING:TYPO_SPELLING: 'achive' may be misspelled - perhaps 'achieve'?
#1283: FILE: drivers/spi/spi_imx.c:1203:
+			   dummy write to achive read */
 			                  ^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1283: FILE: drivers/spi/spi_imx.c:1203:
+			/* Read only transfer -> fixed source address for
+			   dummy write to achive read */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1283: FILE: drivers/spi/spi_imx.c:1203:
+			   dummy write to achive read */

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1290: FILE: drivers/spi/spi_imx.c:1210:
+		imx_dma_setup_single(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1305: FILE: drivers/spi/spi_imx.c:1225:
+			imx_dma_setup_single(

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1317: FILE: drivers/spi/spi_imx.c:1237:
+			/* Set SPI to request DMA service on both
+			   Rx and Tx half fifo watermark */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1317: FILE: drivers/spi/spi_imx.c:1237:
+			   Rx and Tx half fifo watermark */

CHECK:BRACES: Unbalanced braces around else statement
#1319: FILE: drivers/spi/spi_imx.c:1239:
+		} else

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1321: FILE: drivers/spi/spi_imx.c:1241:
+			/* Write only access -> set SPI to request DMA
+			   service on Tx half fifo watermark */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1321: FILE: drivers/spi/spi_imx.c:1241:
+			   service on Tx half fifo watermark */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1373: FILE: drivers/spi/spi_imx.c:1293:
+	drv_data->cur_msg = list_entry(drv_data->queue.next,
+					struct spi_message, queue);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1381: FILE: drivers/spi/spi_imx.c:1301:
+	drv_data->cur_transfer = list_entry(drv_data->cur_msg->transfers.next,
+						struct spi_transfer,

WARNING:SPLIT_STRING: quoted string split across lines
#1409: FILE: drivers/spi/spi_imx.c:1329:
+				"message rejected : "
+				"invalid transfer bits_per_word (%d bits)\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'transfer', this function's name, in a string
#1409: FILE: drivers/spi/spi_imx.c:1329:
+				"invalid transfer bits_per_word (%d bits)\n",

WARNING:SPLIT_STRING: quoted string split across lines
#1418: FILE: drivers/spi/spi_imx.c:1338:
+					"message rejected : "
+					"device min speed (%d Hz) exceeds "

WARNING:SPLIT_STRING: quoted string split across lines
#1419: FILE: drivers/spi/spi_imx.c:1339:
+					"device min speed (%d Hz) exceeds "
+					"required transfer speed (%d Hz)\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'transfer', this function's name, in a string
#1419: FILE: drivers/spi/spi_imx.c:1339:
+					"required transfer speed (%d Hz)\n",

WARNING:SPLIT_STRING: quoted string split across lines
#1426: FILE: drivers/spi/spi_imx.c:1346:
+					"message rejected : "
+					"transfer speed (%d Hz) exceeds "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'transfer', this function's name, in a string
#1426: FILE: drivers/spi/spi_imx.c:1346:
+					"transfer speed (%d Hz) exceeds "

WARNING:SPLIT_STRING: quoted string split across lines
#1427: FILE: drivers/spi/spi_imx.c:1347:
+					"transfer speed (%d Hz) exceeds "
+					"device max speed (%d Hz)\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1462: FILE: drivers/spi/spi_imx.c:1382:
+/* On first setup bad values must free chip_data memory since will cause
+   spi_new_device to fail. Bad value setup from protocol driver are simply not

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1463: FILE: drivers/spi/spi_imx.c:1383:
+   applied and notified to the calling driver. */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chip"
#1477: FILE: drivers/spi/spi_imx.c:1397:
+	if (chip == NULL) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*chip)...) over kzalloc(sizeof(struct chip_data)...)
#1480: FILE: drivers/spi/spi_imx.c:1400:
+		chip = kzalloc(sizeof(struct chip_data), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1482: FILE: drivers/spi/spi_imx.c:1402:
+		if (!chip) {
+			dev_err(&spi->dev,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'setup', this function's name, in a string
#1483: FILE: drivers/spi/spi_imx.c:1403:
+				"setup - cannot allocate controller state");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chip_info"
#1488: FILE: drivers/spi/spi_imx.c:1408:
+		if (chip_info == NULL) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*chip_info)...) over kzalloc(sizeof(struct spi_imx_chip)...)
#1490: FILE: drivers/spi/spi_imx.c:1410:
+			chip_info = kzalloc(sizeof(struct spi_imx_chip),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1491: FILE: drivers/spi/spi_imx.c:1411:
+			chip_info = kzalloc(sizeof(struct spi_imx_chip),
+						GFP_KERNEL);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1493: FILE: drivers/spi/spi_imx.c:1413:
+			if (!chip_info) {
+				dev_err(&spi->dev,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'setup', this function's name, in a string
#1494: FILE: drivers/spi/spi_imx.c:1414:
+					"setup - "

WARNING:SPLIT_STRING: quoted string split across lines
#1495: FILE: drivers/spi/spi_imx.c:1415:
+					"setup - "
+					"cannot allocate controller data");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'setup', this function's name, in a string
#1524: FILE: drivers/spi/spi_imx.c:1444:
+				"setup - "

WARNING:SPLIT_STRING: quoted string split across lines
#1525: FILE: drivers/spi/spi_imx.c:1445:
+				"setup - "
+				"HW doesn't support LSB first transfer\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'setup', this function's name, in a string
#1529: FILE: drivers/spi/spi_imx.c:1449:
+				"setup - "

WARNING:SPLIT_STRING: quoted string split across lines
#1530: FILE: drivers/spi/spi_imx.c:1450:
+				"setup - "
+				"HW doesn't support LSB first transfer, "

WARNING:SPLIT_STRING: quoted string split across lines
#1531: FILE: drivers/spi/spi_imx.c:1451:
+				"HW doesn't support LSB first transfer, "
+				"default to MSB first\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1537: FILE: drivers/spi/spi_imx.c:1457:
+		u32_EDIT(chip->control,
+				SPI_CONTROL_SSPOL, SPI_CONTROL_SSPOL_1);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'setup', this function's name, in a string
#1564: FILE: drivers/spi/spi_imx.c:1484:
+			"setup - "

WARNING:SPLIT_STRING: quoted string split across lines
#1565: FILE: drivers/spi/spi_imx.c:1485:
+			"setup - "
+			"invalid bits_per_word (%d)\n",

CHECK:BRACES: braces {} should be used on all arms of this statement
#1567: FILE: drivers/spi/spi_imx.c:1487:
+		if (first_setup)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1569: FILE: drivers/spi/spi_imx.c:1489:
+		else {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'setup', this function's name, in a string
#1592: FILE: drivers/spi/spi_imx.c:1512:
+			"setup - "

WARNING:SPLIT_STRING: quoted string split across lines
#1593: FILE: drivers/spi/spi_imx.c:1513:
+			"setup - "
+			"HW min speed (%d Hz) exceeds required "

WARNING:SPLIT_STRING: quoted string split across lines
#1594: FILE: drivers/spi/spi_imx.c:1514:
+			"HW min speed (%d Hz) exceeds required "
+			"max speed (%d Hz)\n",

WARNING:TYPO_SPELLING: 'succeded' may be misspelled - perhaps 'succeeded'?
#1619: FILE: drivers/spi/spi_imx.c:1539:
+		"setup succeded\n"
 		       ^^^^^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'setup', this function's name, in a string
#1619: FILE: drivers/spi/spi_imx.c:1539:
+		"setup succeded\n"

WARNING:LINE_SPACING: Missing a blank line after declarations
#1642: FILE: drivers/spi/spi_imx.c:1562:
+	struct chip_data *chip = spi_get_ctldata((struct spi_device *)spi);
+	kfree(chip);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1654: FILE: drivers/spi/spi_imx.c:1574:
+	tasklet_init(&drv_data->pump_transfers,
+			pump_transfers,	(unsigned long)drv_data);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1657: FILE: drivers/spi/spi_imx.c:1577:
+	drv_data->workqueue = create_singlethread_workqueue(

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!drv_data->workqueue"
#1659: FILE: drivers/spi/spi_imx.c:1579:
+	if (drv_data->workqueue == NULL)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1690: FILE: drivers/spi/spi_imx.c:1610:
+	unsigned limit = 500;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1698: FILE: drivers/spi/spi_imx.c:1618:
+	 * friends on every SPI message. Do this instead */

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#1702: FILE: drivers/spi/spi_imx.c:1622:
+		msleep(10);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!platform_info"
#1737: FILE: drivers/spi/spi_imx.c:1657:
+	if (platform_info == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1771: FILE: drivers/spi/spi_imx.c:1691:
+	drv_data->ioarea = request_mem_region(res->start,
+						res->end - res->start + 1,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!drv_data->ioarea"
#1773: FILE: drivers/spi/spi_imx.c:1693:
+	if (drv_data->ioarea == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!drv_data->regs"
#1779: FILE: drivers/spi/spi_imx.c:1699:
+	if (drv_data->regs == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1805: FILE: drivers/spi/spi_imx.c:1725:
+		status = imx_dma_request_by_prio(&drv_data->rx_channel,
+			"spi_imx_rx", DMA_PRIO_HIGH);

CHECK:BRACES: Unbalanced braces around else statement
#1811: FILE: drivers/spi/spi_imx.c:1731:
+		} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1813: FILE: drivers/spi/spi_imx.c:1733:
+			imx_dma_setup_handlers(drv_data->rx_channel, NULL,
+						dma_err_handler, drv_data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1817: FILE: drivers/spi/spi_imx.c:1737:
+		status = imx_dma_request_by_prio(&drv_data->tx_channel,
+						"spi_imx_tx", DMA_PRIO_MEDIUM);

CHECK:BRACES: Unbalanced braces around else statement
#1823: FILE: drivers/spi/spi_imx.c:1743:
+		} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1825: FILE: drivers/spi/spi_imx.c:1745:
+			imx_dma_setup_handlers(drv_data->tx_channel,
+						dma_tx_handler, dma_err_handler,

WARNING:TYPO_SPELLING: 'succeded' may be misspelled - perhaps 'succeeded'?
#1874: FILE: drivers/spi/spi_imx.c:1794:
+	dev_dbg(dev, "probe succeded\n");
 	                    ^^^^^^^^

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1906: FILE: drivers/spi/spi_imx.c:1826:
+static int __devexit spi_imx_remove(struct platform_device *pdev)

WARNING:TYPO_SPELLING: 'succeded' may be misspelled - perhaps 'succeeded'?
#1951: FILE: drivers/spi/spi_imx.c:1871:
+	dev_dbg(&pdev->dev, "remove succeded\n");
 	                            ^^^^^^^^

WARNING:TYPO_SPELLING: 'succeded' may be misspelled - perhaps 'succeeded'?
#1964: FILE: drivers/spi/spi_imx.c:1884:
+	dev_dbg(&pdev->dev, "shutdown succeded\n");
 	                              ^^^^^^^^

WARNING:TYPO_SPELLING: 'Contoller' may be misspelled - perhaps 'Controller'?
#2041: FILE: drivers/spi/spi_imx.c:1961:
+MODULE_DESCRIPTION("iMX SPI Contoller Driver");
                             ^^^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2048: FILE: include/asm-arm/arch-imx/spi_imx.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#2049: FILE: include/asm-arm/arch-imx/spi_imx.h:2:
+ * include/asm-arm/arch-imx/spi_imx.h

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2068: FILE: include/asm-arm/arch-imx/spi_imx.h:21:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2069: FILE: include/asm-arm/arch-imx/spi_imx.h:22:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2083: FILE: include/asm-arm/arch-imx/spi_imx.h:36:
+ * @enable_dma: if true enables DMA driven transfers.
+*/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#2103: FILE: include/asm-arm/arch-imx/spi_imx.h:56:
+ *	I/O port to control HW generation of devices chip-select.
+*/

CHECK:BIT_MACRO: Prefer using the BIT macro
#2111: FILE: include/asm-arm/arch-imx/spi_imx.h:64:
+#define SPI_CS_ASSERT			(1 << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#2112: FILE: include/asm-arm/arch-imx/spi_imx.h:65:
+#define SPI_CS_DEASSERT			(1 << 1)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000032576.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 19 errors, 154 warnings, 60 checks, 2049 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000032576.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
