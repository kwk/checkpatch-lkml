WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#24: 
   For cramfsck.c it also fixes a segfault that occured in the error
                                                ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space prohibited before that close parenthesis ')'
#65: FILE: mkcramfs.c:74:
+		  + (1 << CRAMFS_SIZE_WIDTH) * 4 / blksize /* block pointers */ )

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#72: FILE: mkcramfs.c:80:
+static time_t newest_time = 0; /* Newest file in the filesystem */

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:BRACES: braces {} are not necessary for single statement blocks
#114: FILE: mkcramfs.c:289:
+		if (st.st_mtime > newest_time) {
+			newest_time = st.st_mtime;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#117: FILE: mkcramfs.c:292:
+		if (st.st_ctime > newest_time) {
+			newest_time = st.st_ctime;
+		}

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#130: FILE: mkcramfs.c:404:
+		printf("Edition timestamp: %lu = %s\n", (unsigned long)opt_edition, ctime(&newest_time));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:BRACES: braces {} are not necessary for single statement blocks
#158: FILE: mkcramfs.c:743:
+			if (blksize <= 0) {
+				die(MKFS_ERROR,0,"wrong block size\n");
+			}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#159: FILE: mkcramfs.c:744:
+				die(MKFS_ERROR,0,"wrong block size\n");
 				              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#159: FILE: mkcramfs.c:744:
+				die(MKFS_ERROR,0,"wrong block size\n");
 				                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#214: FILE: cramfsck.c:100:
+static char outbuffer[MAX_PAGE_CACHE_SIZE*2];
                                          ^

CHECK:SPACING: No space is necessary after a cast
#252: FILE: cramfsck.c:207:
+				time_t fstime = (time_t) super.fsid.edition;

WARNING:LINE_SPACING: Missing a blank line after declarations
#253: FILE: cramfsck.c:208:
+				time_t fstime = (time_t) super.fsid.edition;
+				printf("Edition timestamp: %d = %s\n",

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#275: FILE: cramfsck.c:361:
+	stream.avail_out = blksize*2;
 	                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#280: FILE: cramfsck.c:365:
+	if (len > blksize*2) {
 	                 ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#280: FILE: cramfsck.c:365:
+	if (len > blksize*2) {
 		die(FSCK_UNCORRECTED, 0, "data block too large");
 	}

WARNING:LONG_LINE_STRING: line length of 105 exceeds 100 columns
#287: FILE: cramfsck.c:370:
+		die(FSCK_UNCORRECTED, 0, "decompression error %p(%d): %s\n\tTry a different blocksize? ",

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:CAMELCASE: Avoid CamelCase: <zError>
#288: FILE: cramfsck.c:371:
+		    src, len, zError(err));

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:BRACES: braces {} are not necessary for single statement blocks
#339: FILE: cramfsck.c:690:
+			if (blksize > MAX_PAGE_CACHE_SIZE || blksize == 0) {
+				die(FSCK_USAGE, 0, "Invalid blocksize");
+			}

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000461630.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 9 warnings, 5 checks, 286 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000461630.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
