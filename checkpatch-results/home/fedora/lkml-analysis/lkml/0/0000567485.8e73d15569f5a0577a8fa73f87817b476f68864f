WARNING:LEADING_SPACE: please, no spaces at the start of a line
#58: FILE: linux/drivers/net/3c503.c:127:
+    for (i = 0; netcard_portlist[i]; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#59: FILE: linux/drivers/net/3c503.c:128:
+	if (el2_probe1(dev, netcard_portlist[i]) == 0)
 	    return 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: linux/drivers/net/3c503.c:140:
+    int i, iobase_reg, membase_reg, saved_406, wordlength, retval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: linux/drivers/net/3c503.c:141:
+    static unsigned version_printed;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#72: FILE: linux/drivers/net/3c503.c:141:
+    static unsigned version_printed;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: linux/drivers/net/3c503.c:144:
+    if (!request_region(ioaddr, EL2_IO_EXTENT, dev->name))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: linux/drivers/net/3c503.c:187:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: linux/drivers/net/3c503.c:313:
+    release_region(ioaddr, EL2_IO_EXTENT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: linux/drivers/net/3c503.c:314:
+    return retval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: linux/drivers/net/3c503.c:320:
+    int retval = -EAGAIN;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#150: FILE: linux/drivers/net/3c503.c:333:
+		if (*irqp == autoirq_report(0)	/* It's a good IRQ line! */
[...]
 		    break;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#150: FILE: linux/drivers/net/3c503.c:333:
+		if (*irqp == autoirq_report(0)	/* It's a good IRQ line! */

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#151: FILE: linux/drivers/net/3c503.c:334:
+^I^I    && ((retval = request_irq(dev->irq = *irqp, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#151: FILE: linux/drivers/net/3c503.c:334:
+		if (*irqp == autoirq_report(0)	/* It's a good IRQ line! */
+		    && ((retval = request_irq(dev->irq = *irqp, 

WARNING:TABSTOP: Statements should start on a tabstop
#159: FILE: linux/drivers/net/3c503.c:341:
+	    return retval;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#164: FILE: linux/drivers/net/3c503.c:344:
+	if ((retval = request_irq(dev->irq, ei_interrupt, 0, dev->name, dev))) {
+	    return retval;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#164: FILE: linux/drivers/net/3c503.c:344:
+	if ((retval = request_irq(dev->irq, ei_interrupt, 0, dev->name, dev))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#164: FILE: linux/drivers/net/3c503.c:344:
+	if ((retval = request_irq(dev->irq, ei_interrupt, 0, dev->name, dev))) {
+	    return retval;
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TABSTOP: Statements should start on a tabstop
#165: FILE: linux/drivers/net/3c503.c:345:
+	    return retval;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#193: FILE: linux/drivers/net/ac3200.c:172:
+	if ((retval = request_irq(dev->irq, ei_interrupt, 0, dev->name, dev))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#210: FILE: linux/drivers/net/ac3200.c:264:
+	if ((retval = request_irq(dev->irq, ei_interrupt, 0, dev->name, dev)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#239: FILE: linux/drivers/net/cs89x0.c:1031:
+			if (request_irq (i, NULL, 0, dev->name, dev) != -EBUSY) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#243: FILE: linux/drivers/net/cs89x0.c:1034:
+				if (request_irq (dev->irq = i, &net_interrupt, 0, dev->name, dev) == 0)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#243: FILE: linux/drivers/net/cs89x0.c:1034:
+				if (request_irq (dev->irq = i, &net_interrupt, 0, dev->name, dev) == 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#243: FILE: linux/drivers/net/cs89x0.c:1034:
+				if (request_irq (dev->irq = i, &net_interrupt, 0, dev->name, dev) == 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#293: FILE: linux/drivers/net/e2100.c:260:
+	if ((retval = request_irq(dev->irq, ei_interrupt, 0, dev->name, dev)))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#311: FILE: linux/drivers/net/hp.c:104:
+	static unsigned version_printed;

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#325: FILE: linux/drivers/net/hp.c:158:
+					&& request_irq (irq, ei_interrupt, 0, dev->name, dev) == 0) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#325: FILE: linux/drivers/net/hp.c:158:
 				if (irq == autoirq_report(0)		 /* It's a good IRQ line! */
+					&& request_irq (irq, ei_interrupt, 0, dev->name, dev) == 0) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#325: FILE: linux/drivers/net/hp.c:158:
+					&& request_irq (irq, ei_interrupt, 0, dev->name, dev) == 0) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#334: FILE: linux/drivers/net/hp.c:173:
+		if ((retval = request_irq(dev->irq, ei_interrupt, 0, dev->name, dev))) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#353: FILE: linux/drivers/net/hp-plus.c:144:
+	static unsigned version_printed;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#370: FILE: linux/drivers/net/hp-plus.c:254:
+	if ((retval = request_irq(dev->irq, ei_interrupt, 0, dev->name, dev))) {
+	    return retval;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#370: FILE: linux/drivers/net/hp-plus.c:254:
+	if ((retval = request_irq(dev->irq, ei_interrupt, 0, dev->name, dev))) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#370: FILE: linux/drivers/net/hp-plus.c:254:
+	if ((retval = request_irq(dev->irq, ei_interrupt, 0, dev->name, dev))) {
+	    return retval;
 	}

WARNING:TABSTOP: Statements should start on a tabstop
#371: FILE: linux/drivers/net/hp-plus.c:255:
+	    return retval;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#406: FILE: linux/drivers/net/lne390.c:198:
+	if ((ret = request_irq(dev->irq, ei_interrupt, 0, dev->name, dev))) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#472: FILE: linux/drivers/net/ne.c:298:
+	static unsigned version_printed;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#479: FILE: linux/drivers/net/ne.c:303:
+	if ((reg0 = inb_p(ioaddr)) == 0xFF) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#536: FILE: linux/drivers/net/ne.c:495:
+        ^Iretval = -ENOMEM;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#536: FILE: linux/drivers/net/ne.c:495:
+        ^Iretval = -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#536: FILE: linux/drivers/net/ne.c:495:
+        ^Iretval = -ENOMEM;$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#555: FILE: linux/drivers/net/ne.c:504:
+		printk (" unable to get IRQ %d (irqval=%d).\n", dev->irq, retval);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#555: FILE: linux/drivers/net/ne.c:504:
+		printk (" unable to get IRQ %d (irqval=%d).\n", dev->irq, retval);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#610: FILE: linux/drivers/net/wd.c:108:
+	static unsigned version_printed;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#621: FILE: linux/drivers/net/wd.c:117:
 		|| inb(ioaddr + 9) == 0xff
+		|| (checksum & 0xff) != 0xFF) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#640: FILE: linux/drivers/net/wd.c:253:
+	if ((retval = request_irq(dev->irq, ei_interrupt, 0, dev->name, dev))) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000567485.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 13 errors, 31 warnings, 3 checks, 522 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000567485.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
