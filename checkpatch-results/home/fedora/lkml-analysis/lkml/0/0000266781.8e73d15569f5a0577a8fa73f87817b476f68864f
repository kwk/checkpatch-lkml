WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
----- Forwarded message from Mail Delivery System <Mailer-Daemon@bilge> -----

WARNING:BAD_SIGN_OFF: email address 'paulus@au1.ibm.com, paulus@samba.org' might be better as 'paulus@au1.ibm.com paulus@samba.org'
#38: 
To: paulus@au1.ibm.com, paulus@samba.org

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: Unexpected content after email: 'paulus@au1.ibm.com, paulus@samba.org', should be: 'paulus@au1.ibm.com (paulus@samba.org)'
#38: 
To: paulus@au1.ibm.com, paulus@samba.org

WARNING:BAD_SIGN_OFF: email address 'linuxppc64-dev@lists.linuxppc.org, linux-kernel@vger.kernel.org,' might be better as 'linuxppc64-dev@lists.linuxppc.org linux-kernel@vger.kernel.org,'
#39: 
Cc: linuxppc64-dev@lists.linuxppc.org, linux-kernel@vger.kernel.org,

WARNING:BAD_SIGN_OFF: Unexpected content after email: 'linuxppc64-dev@lists.linuxppc.org, linux-kernel@vger.kernel.org,', should be: 'linuxppc64-dev@lists.linuxppc.org (linux-kernel@vger.kernel.org,)'
#39: 
Cc: linuxppc64-dev@lists.linuxppc.org, linux-kernel@vger.kernel.org,

WARNING:TYPO_SPELLING: 'accomodate' may be misspelled - perhaps 'accommodate'?
#67: 
> Thus, I had to restructure the eeh code to accomodate this, which
                                             ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#98: FILE: arch/ppc64/kernel/eeh.c:411:
+^I^Ipanic("EEH: MMIO failure (%d) on device:%s %s\n", $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#128: FILE: arch/ppc64/kernel/eeh.c:464:
+^I^Iif (event->dev) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#157: FILE: arch/ppc64/kernel/eeh.c:500:
+ * routine if the result of a read was all 0xff's and you want to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#159: FILE: arch/ppc64/kernel/eeh.c:502:
+ * will query firmware for the EEH status. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#194: FILE: arch/ppc64/kernel/eeh.c:519:
+^Iif (!dn) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#217: FILE: arch/ppc64/kernel/eeh.c:557:
+^I^I                      1 /* Temporary Error */);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_WHITESPACE: trailing whitespace
#239: FILE: arch/ppc64/kernel/eeh.c:577:
+^I^I^Iif (dev) $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#240: FILE: arch/ppc64/kernel/eeh.c:578:
+				pci_dev_get (dev);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#269: FILE: arch/ppc64/kernel/eeh.c:617:
+ * routine if the result of a read was all 0xff's and you want to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#271: FILE: arch/ppc64/kernel/eeh.c:619:
+ * will query firmware for the EEH status. $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#288: FILE: arch/ppc64/kernel/eeh.c:636:
+	eeh_dn_check_failure (dn, dev);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#289: FILE: arch/ppc64/kernel/eeh.c:637:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'size == 2'
#302: FILE: arch/ppc64/kernel/pSeries_pci.c:72:
+	if ((size == 2) && (where & 0x1))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'size == 4'
#304: FILE: arch/ppc64/kernel/pSeries_pci.c:74:
+	if ((size == 4) && (where & 0x3))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#315: FILE: arch/ppc64/kernel/pSeries_pci.c:87:
+^Iif (ret) $

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#318: FILE: arch/ppc64/kernel/pSeries_pci.c:90:
+	if ((EEH_POSSIBLE_IO_ERROR(returnval, u8) && (size==1)) ||
 	                                                  ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'size==1'
#318: FILE: arch/ppc64/kernel/pSeries_pci.c:90:
+	if ((EEH_POSSIBLE_IO_ERROR(returnval, u8) && (size==1)) ||
+	    (EEH_POSSIBLE_IO_ERROR(returnval, u16) && (size==2)) ||
+	    (EEH_POSSIBLE_IO_ERROR(returnval, u32) && (size==4))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'size==2'
#318: FILE: arch/ppc64/kernel/pSeries_pci.c:90:
+	if ((EEH_POSSIBLE_IO_ERROR(returnval, u8) && (size==1)) ||
+	    (EEH_POSSIBLE_IO_ERROR(returnval, u16) && (size==2)) ||
+	    (EEH_POSSIBLE_IO_ERROR(returnval, u32) && (size==4))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'size==4'
#318: FILE: arch/ppc64/kernel/pSeries_pci.c:90:
+	if ((EEH_POSSIBLE_IO_ERROR(returnval, u8) && (size==1)) ||
+	    (EEH_POSSIBLE_IO_ERROR(returnval, u16) && (size==2)) ||
+	    (EEH_POSSIBLE_IO_ERROR(returnval, u32) && (size==4))) {

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#319: FILE: arch/ppc64/kernel/pSeries_pci.c:91:
+	    (EEH_POSSIBLE_IO_ERROR(returnval, u16) && (size==2)) ||
 	                                                   ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#320: FILE: arch/ppc64/kernel/pSeries_pci.c:92:
+	    (EEH_POSSIBLE_IO_ERROR(returnval, u32) && (size==4))) {
 	                                                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#321: FILE: arch/ppc64/kernel/pSeries_pci.c:93:
+^I^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#321: FILE: arch/ppc64/kernel/pSeries_pci.c:93:
+	    (EEH_POSSIBLE_IO_ERROR(returnval, u32) && (size==4))) {
+		

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#322: FILE: arch/ppc64/kernel/pSeries_pci.c:94:
+		if (eeh_dn_check_failure (dn, NULL))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#335: FILE: arch/ppc64/kernel/pSeries_pci.c:125:
+^Iif ((size == 2) && (where & 0x1)) $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'size == 2'
#335: FILE: arch/ppc64/kernel/pSeries_pci.c:125:
+	if ((size == 2) && (where & 0x1)) 

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'size == 4'
#337: FILE: arch/ppc64/kernel/pSeries_pci.c:127:
+	if ((size == 4) && (where & 0x3))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#348: FILE: arch/ppc64/kernel/pSeries_pci.c:138:
+^Iif (ret) $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#362: FILE: include/asm-ppc64/eeh.h:48:
+int eeh_dn_check_failure (struct device_node *dn, struct pci_dev *dev);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000266781.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 17 errors, 10 warnings, 8 checks, 263 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000266781.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
