WARNING:SPACING: space prohibited between function name and open parenthesis '('
#106: FILE: arch/x86_64/ia32/sys_ia32.c:1162:
+	set_fs (KERNEL_DS);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#107: FILE: arch/x86_64/ia32/sys_ia32.c:1163:
+	ret = sys_waitid(which, pid, (siginfo_t __user *) &info, options);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#108: FILE: arch/x86_64/ia32/sys_ia32.c:1164:
+	set_fs (old_fs);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#112: FILE: arch/x86_64/ia32/sys_ia32.c:1168:
+	BUG_ON(info.si_code & __SI_MASK);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#195: FILE: include/asm-x86_64/unistd.h:557:
+#define __NR_waitid^I ^I247$

ERROR:CODE_INDENT: code indent should use tabs where possible
#210: FILE: include/linux/syscalls.h:166:
+^I^I^I   ^Istruct siginfo __user *infop, int options);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#210: FILE: include/linux/syscalls.h:166:
+^I^I^I   ^Istruct siginfo __user *infop, int options);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#210: FILE: include/linux/syscalls.h:166:
+asmlinkage long sys_waitid(int which, pid_t pid,
+			   	struct siginfo __user *infop, int options);

ERROR:CODE_INDENT: code indent should use tabs where possible
#244: FILE: include/linux/sched.h:272:
+  ^Iint^I^I^Istop_state;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#244: FILE: include/linux/sched.h:272:
+  ^Iint^I^I^Istop_state;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: include/linux/sched.h:272:
+  ^Iint^I^I^Istop_state;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#259: FILE: kernel/exit.c:975:
+	int retval = getrusage(p, RUSAGE_BOTH, &infop->si_rusage);
+	put_task_struct(p);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#297: FILE: kernel/exit.c:1012:
+		int why, status;
+		if (unlikely(p->state != TASK_ZOMBIE))

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#307: FILE: kernel/exit.c:1022:
+		}
+		else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#307: FILE: kernel/exit.c:1022:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#336: FILE: kernel/exit.c:1062:
+		int why;
+		if ((status & 0x7f) == 0) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#340: FILE: kernel/exit.c:1066:
+		}
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#340: FILE: kernel/exit.c:1066:
+		else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#377: FILE: kernel/exit.c:1143:
+		int why = (p->ptrace & PT_PTRACED) ? CLD_TRAPPED : CLD_STOPPED;
+		exit_code = p->exit_code;

WARNING:INDENTED_LABEL: labels should not be indented
#393: FILE: kernel/exit.c:1177:
+	bail_ref:

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#456: FILE: kernel/exit.c:1260:
+				retval = wait_task_zombie(

WARNING:INDENTED_LABEL: labels should not be indented
#466: FILE: kernel/exit.c:1269:
+			check_continued:

WARNING:LINE_SPACING: Missing a blank line after declarations
#474: FILE: kernel/exit.c:1277:
+					pid_t pid, uid;
+					if (!(options & WNOWAIT))

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#481: FILE: kernel/exit.c:1284:
+					retval = wait_noreap_copyout(

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#484: FILE: kernel/exit.c:1287:
+					BUG_ON(retval == 0);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#517: FILE: kernel/exit.c:1332:
+	if (options & ~(WNOHANG|WNOWAIT|WEXITED|WSTOPPED|WCONTINUED))
 	                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#517: FILE: kernel/exit.c:1332:
+	if (options & ~(WNOHANG|WNOWAIT|WEXITED|WSTOPPED|WCONTINUED))
 	                               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#517: FILE: kernel/exit.c:1332:
+	if (options & ~(WNOHANG|WNOWAIT|WEXITED|WSTOPPED|WCONTINUED))
 	                                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#517: FILE: kernel/exit.c:1332:
+	if (options & ~(WNOHANG|WNOWAIT|WEXITED|WSTOPPED|WCONTINUED))
 	                                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#519: FILE: kernel/exit.c:1334:
+	if (!(options & (WEXITED|WSTOPPED|WCONTINUED)))
 	                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#519: FILE: kernel/exit.c:1334:
+	if (!(options & (WEXITED|WSTOPPED|WCONTINUED)))
 	                                 ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#542: FILE: kernel/exit.c:1357:
+asmlinkage long sys_wait4(pid_t pid,unsigned int * stat_addr, int options, struct rusage * ru)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#542: FILE: kernel/exit.c:1357:
+asmlinkage long sys_wait4(pid_t pid,unsigned int * stat_addr, int options, struct rusage * ru)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#542: FILE: kernel/exit.c:1357:
+asmlinkage long sys_wait4(pid_t pid,unsigned int * stat_addr, int options, struct rusage * ru)
                                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#544: FILE: kernel/exit.c:1359:
+	if (options & ~(WNOHANG|WUNTRACED|__WNOTHREAD|__WCLONE|__WALL))
 	                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#544: FILE: kernel/exit.c:1359:
+	if (options & ~(WNOHANG|WUNTRACED|__WNOTHREAD|__WCLONE|__WALL))
 	                                 ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#544: FILE: kernel/exit.c:1359:
+	if (options & ~(WNOHANG|WUNTRACED|__WNOTHREAD|__WCLONE|__WALL))
 	                                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#544: FILE: kernel/exit.c:1359:
+	if (options & ~(WNOHANG|WUNTRACED|__WNOTHREAD|__WCLONE|__WALL))
 	                                                      ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#586: FILE: kernel/signal.c:713:
+				do_notify_parent_cldstop(

CHECK:BRACES: braces {} should be used on all arms of this statement
#611: FILE: kernel/signal.c:1562:
+	if (info.si_status == 0) {
[...]
+	else
[...]

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#615: FILE: kernel/signal.c:1566:
+	}
+	else

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#633: FILE: kernel/signal.c:1641:
+		current->exit_code = current->signal->group_exit_code = signr;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#677: FILE: kernel/sys.c:1544:
 
+

CHECK:SPACING: No space is necessary after a cast
#680: FILE: kernel/sys.c:1547:
+	memset((char *) r, 0, sizeof *r);

WARNING:SIZEOF_PARENTHESIS: sizeof *r should be sizeof(*r)
#680: FILE: kernel/sys.c:1547:
+	memset((char *) r, 0, sizeof *r);

WARNING:LINE_SPACING: Missing a blank line after declarations
#730: FILE: kernel/sys.c:1579:
+	struct rusage r;
+	k_getrusage(p, who, &r);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000260044.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 17 warnings, 21 checks, 598 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000260044.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
