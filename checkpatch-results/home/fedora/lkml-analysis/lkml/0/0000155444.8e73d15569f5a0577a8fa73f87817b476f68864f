WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#46: FILE: fs/gfs2/jdata.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#62: FILE: fs/gfs2/jdata.c:17:
+#include <asm/uaccess.h>

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#184: FILE: fs/gfs2/jdata.c:139:
+	uint64_t lblock, dblock;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#185: FILE: fs/gfs2/jdata.c:140:
+	uint32_t extlen = 0;

CHECK:BRACES: braces {} should be used on all arms of this statement
#230: FILE: fs/gfs2/jdata.c:185:
+		if (dblock) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#236: FILE: fs/gfs2/jdata.c:191:
+		} else

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#318: FILE: fs/gfs2/jdata.c:273:
+		ip->i_di.di_mtime = ip->i_di.di_ctime = get_seconds();

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#343: FILE: fs/gfs2/jdata.c:298:
+	uint64_t lblock, dblock;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#344: FILE: fs/gfs2/jdata.c:299:
+	uint32_t extlen = 0;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#390: FILE: fs/gfs2/jdata.c:345:
+		error = gfs2_jdata_get_buffer(ip, dblock,
+				(amount == sdp->sd_jbsize) ? TRUE : new,

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#415: FILE: fs/gfs2/jdata.c:370:
+	ip->i_di.di_mtime = ip->i_di.di_ctime = get_seconds();

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#432: FILE: fs/gfs2/jdata.h:1:
+/*

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#458: FILE: fs/gfs2/jdata.h:27:
+		    uint64_t offset, unsigned int size,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#468: FILE: fs/gfs2/jdata.h:37:
+		     uint64_t offset, unsigned int size,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#472: FILE: fs/gfs2/jdata.h:41:
+				      uint64_t offset, unsigned int size)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#478: FILE: fs/gfs2/jdata.h:47:
+				       uint64_t offset, unsigned int size)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#487: FILE: fs/gfs2/lops.c:1:
+/*

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#656: FILE: fs/gfs2/lops.c:170:
+	uint64_t blkno;

ERROR:CODE_INDENT: code indent should use tabs where possible
#713: FILE: fs/gfs2/lops.c:227:
+^I        jd->jd_jid, sdp->sd_replayed_blocks, sdp->sd_found_blocks);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#802: FILE: fs/gfs2/lops.c:316:
+	uint64_t blkno;

ERROR:CODE_INDENT: code indent should use tabs where possible
#854: FILE: fs/gfs2/lops.c:368:
+^I        jd->jd_jid, sdp->sd_found_revokes);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#874: FILE: fs/gfs2/lops.c:388:
+^Igfs2_log_unlock(sdp);^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#916: FILE: fs/gfs2/lops.c:430:
+		if (bh) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#924: FILE: fs/gfs2/lops.c:438:
+		} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#936: FILE: fs/gfs2/lops.c:450:
+		if (bh) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#941: FILE: fs/gfs2/lops.c:455:
+		} else

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1000: FILE: fs/gfs2/lops.h:1:
+/*

WARNING:LINE_SPACING: Missing a blank line after declarations
#1037: FILE: fs/gfs2/lops.h:38:
+	int x;
+	for (x = 0; gfs2_log_ops[x]; x++)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#1045: FILE: fs/gfs2/lops.h:46:
+	int x;
+	for (x = 0; gfs2_log_ops[x]; x++)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1053: FILE: fs/gfs2/lops.h:54:
+	int x;
+	for (x = 0; gfs2_log_ops[x]; x++)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1063: FILE: fs/gfs2/lops.h:64:
+	int x;
+	for (x = 0; gfs2_log_ops[x]; x++)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1073: FILE: fs/gfs2/lops.h:74:
+	int x, error;
+	for (x = 0; gfs2_log_ops[x]; x++)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1088: FILE: fs/gfs2/lops.h:89:
+	int x;
+	for (x = 0; gfs2_log_ops[x]; x++)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1098: FILE: fs/gfs2/main.c:1:
+/*

ERROR:CODE_INDENT: code indent should use tabs where possible
#1151: FILE: fs/gfs2/main.c:54:
+^I^I^I^I^I        0, 0, NULL, NULL);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1159: FILE: fs/gfs2/main.c:62:
+	printk("GFS2 (built %s %s) installed\n", __DATE__, __TIME__);

ERROR:DATE_TIME: Use of the '__DATE__' macro makes the build non-deterministic
#1159: FILE: fs/gfs2/main.c:62:
+	printk("GFS2 (built %s %s) installed\n", __DATE__, __TIME__);

It is generally desirable that building the same source code with
the same set of tools is reproducible, i.e. the output is always
exactly the same.

The kernel does *not* use the ``__DATE__`` and ``__TIME__`` macros,
and enables warnings if they are used as they can lead to
non-deterministic builds.

See: https://www.kernel.org/doc/html/latest/kbuild/reproducible-builds.html#timestamps

ERROR:DATE_TIME: Use of the '__TIME__' macro makes the build non-deterministic
#1159: FILE: fs/gfs2/main.c:62:
+	printk("GFS2 (built %s %s) installed\n", __DATE__, __TIME__);

WARNING:NEEDLESS_IF: kmem_cache_destroy(NULL) is safe and this check is probably not required
#1165: FILE: fs/gfs2/main.c:68:
+	if (gfs2_bufdata_cachep)
+		kmem_cache_destroy(gfs2_bufdata_cachep);

WARNING:NEEDLESS_IF: kmem_cache_destroy(NULL) is safe and this check is probably not required
#1168: FILE: fs/gfs2/main.c:71:
+	if (gfs2_inode_cachep)
+		kmem_cache_destroy(gfs2_inode_cachep);

WARNING:NEEDLESS_IF: kmem_cache_destroy(NULL) is safe and this check is probably not required
#1171: FILE: fs/gfs2/main.c:74:
+	if (gfs2_glock_cachep)
+		kmem_cache_destroy(gfs2_glock_cachep);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1203: FILE: fs/gfs2/meta_io.c:1:
+/*

CHECK:CAMELCASE: Avoid CamelCase: <PRIu64>
#1266: FILE: fs/gfs2/meta_io.c:64:
+	fs_warn(sdp, "blkno = %"PRIu64", bh->b_count = %d\n",

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1266: FILE: fs/gfs2/meta_io.c:64:
+	fs_warn(sdp, "blkno = %"PRIu64", bh->b_count = %d\n",

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1276: FILE: fs/gfs2/meta_io.c:74:
+^Ifs_warn(sdp, "gl = (%u, %"PRIu64")\n", $

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1276: FILE: fs/gfs2/meta_io.c:74:
+	fs_warn(sdp, "gl = (%u, %"PRIu64")\n", 

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1290: FILE: fs/gfs2/meta_io.c:88:
+		fs_warn(sdp, "ip = %"PRIu64"/%"PRIu64"\n",

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1324: FILE: fs/gfs2/meta_io.c:122:
+	head = bh = page_buffers(page);

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#1336: FILE: fs/gfs2/meta_io.c:134:
+				yield();

ERROR:WHILE_AFTER_BRACE: while should follow close brace '}'
#1358: FILE: fs/gfs2/meta_io.c:156:
+	}
+	while (bh != head);

while should follow the closing bracket on the same line::

  do {
          ...
  } while(something);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:CONST_STRUCT: struct address_space_operations should normally be const
#1364: FILE: fs/gfs2/meta_io.c:162:
+static struct address_space_operations aspace_aops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#1401: FILE: fs/gfs2/meta_io.c:199:
+	iput(aspace);
 	^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space required after that ',' (ctx:VxB)
#1427: FILE: fs/gfs2/meta_io.c:225:
+			gfs2_assert(sdp, bd->bd_ail == ai,);
 			                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxB)
#1472: FILE: fs/gfs2/meta_io.c:270:
+		gfs2_assert(sdp, bd->bd_ail == ai,);
 		                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxB)
#1505: FILE: fs/gfs2/meta_io.c:303:
+		gfs2_assert(sdp, bd->bd_ail == ai,);
 		                                 ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#1528: FILE: fs/gfs2/meta_io.c:326:
+	uint64_t blkno;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#1618: FILE: fs/gfs2/meta_io.c:416:
+				  uint64_t blkno, int create)

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#1635: FILE: fs/gfs2/meta_io.c:433:
+			yield();

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 32)
#1647: FILE: fs/gfs2/meta_io.c:445:
+	for (bh = page_buffers(page); bufnum--; bh = bh->b_this_page)
+		/* Do nothing */;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1685: FILE: fs/gfs2/meta_io.c:483:
+	struct buffer_head *bh;
+	bh = getbuf(gl->gl_sbd, gl->gl_aspace, blkno, CREATE);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1738: FILE: fs/gfs2/meta_io.c:536:
+			struct gfs2_trans *tr = get_transaction;
+			if (tr && tr->tr_touched)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1802: FILE: fs/gfs2/meta_io.c:600:
+	/* If this buffer is in the AIL and it has already been written
+	   to in-place disk block, remove it from the AIL. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1802: FILE: fs/gfs2/meta_io.c:600:
+	   to in-place disk block, remove it from the AIL. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#1845: FILE: fs/gfs2/meta_io.c:643:
+		struct gfs2_glock *gl = bd->bd_gl;
+		list_add(&bd->bd_ail_gl_list, &gl->gl_ail_list);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1883: FILE: fs/gfs2/meta_io.c:681:
+				if (bd->bd_ail) {
[...]
+				} else
[...]

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#1884: FILE: fs/gfs2/meta_io.c:682:
+					uint64_t blkno = bh->b_blocknr;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1885: FILE: fs/gfs2/meta_io.c:683:
+					uint64_t blkno = bh->b_blocknr;
+					bd->bd_ail = NULL;

CHECK:BRACES: Unbalanced braces around else statement
#1892: FILE: fs/gfs2/meta_io.c:690:
+				} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#1965: FILE: fs/gfs2/meta_io.c:763:
+		if (new)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1967: FILE: fs/gfs2/meta_io.c:765:
+		else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1976: FILE: fs/gfs2/meta_io.c:774:
+		if (new)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1978: FILE: fs/gfs2/meta_io.c:776:
+		else {

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2027: FILE: fs/gfs2/meta_io.c:825:
+	uint32_t max_ra = gfs2_tune_get(sdp, gt_max_readahead) >> sdp->sd_sb.sb_bsize_shift;

CHECK:BRACES: braces {} should be used on all arms of this statement
#2051: FILE: fs/gfs2/meta_io.c:849:
+		if (!buffer_uptodate(bh) && !buffer_locked(bh)) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2056: FILE: fs/gfs2/meta_io.c:854:
+		} else

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2090: FILE: fs/gfs2/meta_io.h:1:
+/*

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2159: FILE: fs/gfs2/meta_io.h:70:
+void gfs2_meta_unpin(struct gfs2_sbd *sdp, struct buffer_head *bh,
+		 struct gfs2_ail *ai);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2181: FILE: fs/gfs2/ondisk.c:1:
+/*

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2200: FILE: fs/gfs2/ondisk.c:20:
+#define pv(struct, member, fmt) printk("  "#member" = "fmt"\n", struct->member);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'struct' may be better as '(struct)' to avoid precedence issues
#2200: FILE: fs/gfs2/ondisk.c:20:
+#define pv(struct, member, fmt) printk("  "#member" = "fmt"\n", struct->member);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'member' may be better as '(member)' to avoid precedence issues
#2200: FILE: fs/gfs2/ondisk.c:20:
+#define pv(struct, member, fmt) printk("  "#member" = "fmt"\n", struct->member);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#2200: FILE: fs/gfs2/ondisk.c:20:
+#define pv(struct, member, fmt) printk("  "#member" = "fmt"\n", struct->member);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#2200: FILE: fs/gfs2/ondisk.c:20:
+#define pv(struct, member, fmt) printk("  "#member" = "fmt"\n", struct->member);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2212: FILE: fs/gfs2/ops_address.c:1:
+/*

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#2257: FILE: fs/gfs2/ops_address.c:46:
+	uint64_t dblock;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#2289: FILE: fs/gfs2/ops_address.c:78:
+	uint64_t dblock;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#2310: FILE: fs/gfs2/ops_address.c:99:
+	uint64_t dblock;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2311: FILE: fs/gfs2/ops_address.c:100:
+	uint32_t extlen;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#2338: FILE: fs/gfs2/ops_address.c:127:
+	uint64_t dblock;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2339: FILE: fs/gfs2/ops_address.c:128:
+	uint32_t extlen;

CHECK:BRACES: braces {} should be used on all arms of this statement
#2346: FILE: fs/gfs2/ops_address.c:135:
+	if (dblock) {
[...]
+	} else if (gfs2_assert_withdraw(ip->i_sbd, !create))
[...]

CHECK:BRACES: braces {} should be used on all arms of this statement
#2493: FILE: fs/gfs2/ops_address.c:282:
+	if (!gfs2_is_jdata(ip)) {
[...]
+	} else
[...]

CHECK:BRACES: braces {} should be used on all arms of this statement
#2494: FILE: fs/gfs2/ops_address.c:283:
+		if (gfs2_is_stuffed(ip)) {
[...]
+		} else
[...]

CHECK:BRACES: braces {} should be used on all arms of this statement
#2495: FILE: fs/gfs2/ops_address.c:284:
+			if (!page->index) {
[...]
+			} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2498: FILE: fs/gfs2/ops_address.c:287:
+			} else

CHECK:BRACES: Unbalanced braces around else statement
#2500: FILE: fs/gfs2/ops_address.c:289:
+		} else

CHECK:BRACES: Unbalanced braces around else statement
#2502: FILE: fs/gfs2/ops_address.c:291:
+	} else

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2522: FILE: fs/gfs2/ops_address.c:311:
+			      unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2522: FILE: fs/gfs2/ops_address.c:311:
+			      unsigned from, unsigned to)

CHECK:BRACES: braces {} should be used on all arms of this statement
#2533: FILE: fs/gfs2/ops_address.c:322:
+	if (gfs2_is_stuffed(ip)) {
[...]
+	} else
[...]

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#2534: FILE: fs/gfs2/ops_address.c:323:
+		uint64_t file_size;

WARNING:LINE_SPACING: Missing a blank line after declarations
#2535: FILE: fs/gfs2/ops_address.c:324:
+		uint64_t file_size;
+		file_size = ((uint64_t)page->index << PAGE_CACHE_SHIFT) + to;

CHECK:BRACES: braces {} should be used on all arms of this statement
#2537: FILE: fs/gfs2/ops_address.c:326:
+		if (file_size > sdp->sd_sb.sb_bsize -
[...]
+		} else if (!PageUptodate(page))
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2546: FILE: fs/gfs2/ops_address.c:335:
+	} else

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2563: FILE: fs/gfs2/ops_address.c:352:
+			     unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2563: FILE: fs/gfs2/ops_address.c:352:
+			     unsigned from, unsigned to)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#2574: FILE: fs/gfs2/ops_address.c:363:
+		uint64_t file_size;

CHECK:BRACES: braces {} should be used on all arms of this statement
#2648: FILE: fs/gfs2/ops_address.c:437:
+	if (db) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2653: FILE: fs/gfs2/ops_address.c:442:
+	} else

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2673: FILE: fs/gfs2/ops_address.c:462:
+	BUG_ON(!PageLocked(page));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2677: FILE: fs/gfs2/ops_address.c:466:
+	bh = head = page_buffers(page);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2680: FILE: fs/gfs2/ops_address.c:469:
+		unsigned int next_off = curr_off + bh->b_size;
+		next = bh->b_this_page;

WARNING:CONST_STRUCT: struct address_space_operations should normally be const
#2717: FILE: fs/gfs2/ops_address.c:506:
+struct address_space_operations gfs2_file_aops = {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2731: FILE: fs/gfs2/ops_address.h:1:
+/*

WARNING:CONST_STRUCT: struct address_space_operations should normally be const
#2743: FILE: fs/gfs2/ops_address.h:13:
+extern struct address_space_operations gfs2_file_aops;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000155444.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 43 warnings, 61 checks, 2673 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000155444.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
