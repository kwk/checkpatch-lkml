WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
A couple of months ago we discussed the possibility of improving the getrusage 

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#72: FILE: sys.new.c:1771:
+	struct task_struct* tsk = current;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#73: FILE: sys.new.c:1772:
+	struct task_struct* tsk = current;
+	read_lock(&tasklist_lock);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'who != RUSAGE_SELF'
#74: FILE: sys.new.c:1773:
+	if ((who != RUSAGE_SELF) && (who != RUSAGE_CHILDREN)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'who != RUSAGE_CHILDREN'
#74: FILE: sys.new.c:1773:
+	if ((who != RUSAGE_SELF) && (who != RUSAGE_CHILDREN)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#76: FILE: sys.new.c:1775:
+^I^Iif ((tsk == NULL) || (who <=0)) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#76: FILE: sys.new.c:1775:
+		if ((tsk == NULL) || (who <=0)) 
 		                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tsk == NULL'
#76: FILE: sys.new.c:1775:
+		if ((tsk == NULL) || (who <=0)) 

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'who <=0'
#76: FILE: sys.new.c:1775:
+		if ((tsk == NULL) || (who <=0)) 

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tsk"
#76: FILE: sys.new.c:1775:
+		if ((tsk == NULL) || (who <=0)) 

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#78: FILE: sys.new.c:1777:
+		if (((current->uid != tsk->euid) ||
[...]
+				goto bad;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'current->uid != tsk->euid'
#78: FILE: sys.new.c:1777:
+		if (((current->uid != tsk->euid) ||
+			(current->uid != tsk->suid) ||
+			(current->uid != tsk->uid) ||
+			(current->gid != tsk->egid) ||
+			(current->gid != tsk->sgid) ||
+			(current->gid != tsk->gid)) && !capable(CAP_SYS_PTRACE))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'current->uid != tsk->suid'
#78: FILE: sys.new.c:1777:
+		if (((current->uid != tsk->euid) ||
+			(current->uid != tsk->suid) ||
+			(current->uid != tsk->uid) ||
+			(current->gid != tsk->egid) ||
+			(current->gid != tsk->sgid) ||
+			(current->gid != tsk->gid)) && !capable(CAP_SYS_PTRACE))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'current->uid != tsk->uid'
#78: FILE: sys.new.c:1777:
+		if (((current->uid != tsk->euid) ||
+			(current->uid != tsk->suid) ||
+			(current->uid != tsk->uid) ||
+			(current->gid != tsk->egid) ||
+			(current->gid != tsk->sgid) ||
+			(current->gid != tsk->gid)) && !capable(CAP_SYS_PTRACE))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'current->gid != tsk->egid'
#78: FILE: sys.new.c:1777:
+		if (((current->uid != tsk->euid) ||
+			(current->uid != tsk->suid) ||
+			(current->uid != tsk->uid) ||
+			(current->gid != tsk->egid) ||
+			(current->gid != tsk->sgid) ||
+			(current->gid != tsk->gid)) && !capable(CAP_SYS_PTRACE))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'current->gid != tsk->sgid'
#78: FILE: sys.new.c:1777:
+		if (((current->uid != tsk->euid) ||
+			(current->uid != tsk->suid) ||
+			(current->uid != tsk->uid) ||
+			(current->gid != tsk->egid) ||
+			(current->gid != tsk->sgid) ||
+			(current->gid != tsk->gid)) && !capable(CAP_SYS_PTRACE))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'current->gid != tsk->gid'
#78: FILE: sys.new.c:1777:
+		if (((current->uid != tsk->euid) ||
+			(current->uid != tsk->suid) ||
+			(current->uid != tsk->uid) ||
+			(current->gid != tsk->egid) ||
+			(current->gid != tsk->sgid) ||
+			(current->gid != tsk->gid)) && !capable(CAP_SYS_PTRACE))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#79: FILE: sys.new.c:1778:
+		if (((current->uid != tsk->euid) ||
+			(current->uid != tsk->suid) ||

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000084751.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 3 warnings, 12 checks, 32 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000084751.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
