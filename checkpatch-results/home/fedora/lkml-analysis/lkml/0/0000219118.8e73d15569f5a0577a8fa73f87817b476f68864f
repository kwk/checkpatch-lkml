ERROR:TRAILING_WHITESPACE: trailing whitespace
#71: FILE: include/linux/security.h:121:
+ *^Iis no longer granted if the attributes were changed. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#83: FILE: include/linux/security.h:1052:
+	void (*bprm_post_apply_creds) (struct linux_binprm * bprm);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#83: FILE: include/linux/security.h:1052:
+	void (*bprm_post_apply_creds) (struct linux_binprm * bprm);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#91: FILE: include/linux/security.h:1325:
 }
+static inline void security_bprm_post_apply_creds (struct linux_binprm *bprm)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#91: FILE: include/linux/security.h:1325:
+static inline void security_bprm_post_apply_creds (struct linux_binprm *bprm)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#93: FILE: include/linux/security.h:1327:
+	security_ops->bprm_post_apply_creds (bprm);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#102: FILE: include/linux/security.h:2007:
+static inline void security_bprm_post_apply_creds (struct linux_binprm *bprm)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#103: FILE: include/linux/security.h:2008:
+{ $

WARNING:RETURN_VOID: void function return statements are not generally useful
#105: FILE: include/linux/security.h:2010:
+	return;
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#118: FILE: security/dummy.c:204:
+static void dummy_bprm_post_apply_creds (struct linux_binprm *bprm)

WARNING:RETURN_VOID: void function return statements are not generally useful
#121: FILE: security/dummy.c:207:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#162: FILE: security/selinux/hooks.c:1820:
+			rc = avc_has_perm(tsec->sid, sid, SECCLASS_PROCESS,
+					PROCESS__SHARE, NULL);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#272: FILE: security/selinux/hooks.c:1867:
+	/* Check whether the new SID can inherit signal state
+	   from the old SID.  If not, clear itimers to avoid

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#276: FILE: security/selinux/hooks.c:1871:
+	  will be checked against the new SID. */

WARNING:SIZEOF_PARENTHESIS: sizeof itimer should be sizeof(itimer)
#280: FILE: security/selinux/hooks.c:1875:
+		memset(&itimer, 0, sizeof itimer);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#292: FILE: security/selinux/hooks.c:1887:
+	/* Check whether the new SID can inherit resource limits
+	   from the old SID.  If not, reset all soft limits to

ERROR:TRAILING_WHITESPACE: trailing whitespace
#294: FILE: security/selinux/hooks.c:1889:
+^I   task's soft limit.  Note that the setting of hard limits $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#295: FILE: security/selinux/hooks.c:1890:
+^I   (even to lower them) can be controlled by the setrlimit $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#299: FILE: security/selinux/hooks.c:1894:
+^I   is lower than the hard limit, e.g. RLIMIT_CORE or $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#300: FILE: security/selinux/hooks.c:1895:
+	   RLIMIT_STACK.*/

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#306: FILE: security/selinux/hooks.c:1901:
+			initrlim = init_task.signal->rlim+i;
 			                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#307: FILE: security/selinux/hooks.c:1902:
+			rlim->rlim_cur = min(rlim->rlim_max,initrlim->rlim_cur);
 			                                   ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#312: FILE: security/selinux/hooks.c:1907:
+	/* Wake up the parent if it is waiting so that it can
+	   recheck wait permission to the new task SID. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#312: FILE: security/selinux/hooks.c:1907:
+	   recheck wait permission to the new task SID. */

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000219118.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 14 warnings, 3 checks, 273 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000219118.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
