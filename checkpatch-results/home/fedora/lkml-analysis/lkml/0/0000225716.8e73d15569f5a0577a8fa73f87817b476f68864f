WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
> > Kai, can you mail the latest version of this patch to lkml?  Willem, can

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:CAMELCASE: Avoid CamelCase: <STp>
#80: FILE: osst.c:4595:
+	if (down_interruptible(&STp->lock))

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#85: FILE: osst.c:4598:
!STp->pos_unknown) {

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#86: FILE: osst.c:4599:
+	if ((STp->ps[STp->partition].rw == ST_WRITING || STp->dirty) &&
 		STp->write_type = OS_WRITE_DATA;

CHECK:CAMELCASE: Avoid CamelCase: <SRpnt>
#91: FILE: osst.c:4604:
+		result2 = osst_flush_drive_buffer(STp, &SRpnt);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#101: FILE: osst.c:4613:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#103: FILE: osst.c:4615:
+static int os_scsi_tape_close(struct inode * inode, struct file * filp)
                                                                   ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#103: FILE: osst.c:4615:
+static int os_scsi_tape_close(struct inode * inode, struct file * filp)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#103: FILE: osst.c:4615:
+static int os_scsi_tape_close(struct inode * inode, struct file * filp)

ERROR:POINTER_LOCATION: "foo       * bar" should be "foo       *bar"
#106: FILE: osst.c:4618:
+	OS_Scsi_Tape       * STp   = filp->private_data;

ERROR:POINTER_LOCATION: "foo  * bar" should be "foo  *bar"
#107: FILE: osst.c:4619:
+	struct st_modedef  * STm   = &(STp->modes[STp->current_mode]);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around STp->modes[STp->current_mode]
#107: FILE: osst.c:4619:
+	struct st_modedef  * STm   = &(STp->modes[STp->current_mode]);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:CAMELCASE: Avoid CamelCase: <STm>
#107: FILE: osst.c:4619:
+	struct st_modedef  * STm   = &(STp->modes[STp->current_mode]);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#108: FILE: osst.c:4620:
+	struct st_partstat * STps  = &(STp->ps[STp->partition]);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around STp->ps[STp->partition]
#108: FILE: osst.c:4620:
+	struct st_partstat * STps  = &(STp->ps[STp->partition]);

CHECK:CAMELCASE: Avoid CamelCase: <STps>
#108: FILE: osst.c:4620:
+	struct st_partstat * STps  = &(STp->ps[STp->partition]);

ERROR:POINTER_LOCATION: "foo       * bar" should be "foo       *bar"
#109: FILE: osst.c:4621:
+	Scsi_Request       * SRpnt = NULL;

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Request>
#109: FILE: osst.c:4621:
+	Scsi_Request       * SRpnt = NULL;

ERROR:POINTER_LOCATION: "foo               * bar" should be "foo               *bar"
#110: FILE: osst.c:4622:
+	char               * name  = tape_name(STp);

ERROR:SPACING: space prohibited after that open parenthesis '('
#112: FILE: osst.c:4624:
+	if ( STps->rw >= ST_WRITING && !STp->pos_unknown) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#121: FILE: osst.c:4639:
+                if (result) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: osst.c:4639:
+                if (result) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: osst.c:4640:
+                        printk(KERN_ERR "%s: Writing closing filemark$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: osst.c:4640:
+                        printk(KERN_ERR "%s: Writing closing filemark$

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#122: FILE: osst.c:4640:
+                        printk(KERN_ERR "%s: Writing closing filemark
                                          ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#122: FILE: osst.c:4640:
+                        printk(KERN_ERR "%s: Writing closing filemark
                                            ^

CHECK:CAMELCASE: Avoid CamelCase: <Writing>
#122: FILE: osst.c:4640:
+                        printk(KERN_ERR "%s: Writing closing filemark

ERROR:CODE_INDENT: code indent should use tabs where possible
#124: FILE: osst.c:4641:
+                        STp->pos_unknown = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: osst.c:4641:
+                        STp->pos_unknown = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#125: FILE: osst.c:4642:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: osst.c:4642:
+                }$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#134: FILE: osst.c:4670:
+			printk(KERN_ERR "%s: Final tape positioning

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#145: FILE: osst.c:4677:
+			printk(KERN_ERR "%s: Auto-rewind failed.\n", name);
 			                 ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#145: FILE: osst.c:4677:
+			printk(KERN_ERR "%s: Auto-rewind failed.\n", name);
 			                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#145: FILE: osst.c:4677:
+			printk(KERN_ERR "%s: Auto-rewind failed.\n", name);
 			                         ^

CHECK:CAMELCASE: Avoid CamelCase: <Auto>
#145: FILE: osst.c:4677:
+			printk(KERN_ERR "%s: Auto-rewind failed.\n", name);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000225716.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 8 warnings, 14 checks, 99 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000225716.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
