WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
Content-Disposition: attachment; filename=cred-sharing-snapshotting-2.5.44-0.patch

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#49: FILE: arch/i386/kernel/init_task.c:14:
+static struct cred_struct init_cred =3D INIT_CRED;
                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#51: FILE: arch/i386/kernel/init_task.c:15:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#62: FILE: arch/i386/kernel/init_task.c:196:
+	i =3D getgroups16(NGROUPS, groups);
 	  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#95: FILE: arch/sparc64/kernel/sys_sparc32.c:213:
+	i =3D getgroups16(NGROUPS, groups);
 	  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#125: FILE: fs/exec.c:866:
+	current->cred->suid =3D current->cred->euid =3D bprm->e_uid;
 	                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#125: FILE: fs/exec.c:866:
+	current->cred->suid =3D current->cred->euid =3D bprm->e_uid;
 	                                            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#127: FILE: fs/exec.c:868:
+	current->cred->sgid =3D current->cred->egid =3D bprm->e_gid;
 	                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#127: FILE: fs/exec.c:868:
+	current->cred->sgid =3D current->cred->egid =3D bprm->e_gid;
 	                                            ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#129: FILE: fs/exec.c:870:
+=09
 ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#138: FILE: include/linux/cred.h:1:
+#ifndef _LINUX_CRED_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#145: FILE: include/linux/cred.h:8:
+#include <asm/atomic.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#147: FILE: include/linux/cred.h:10:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#150: FILE: include/linux/cred.h:13:
+	uid_t			uid,euid,suid;
 	     			   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#150: FILE: include/linux/cred.h:13:
+	uid_t			uid,euid,suid;
 	     			        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#151: FILE: include/linux/cred.h:14:
+	gid_t			gid,egid,sgid;
 	     			   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#151: FILE: include/linux/cred.h:14:
+	gid_t			gid,egid,sgid;
 	     			        ^

ERROR:POINTER_LOCATION: "foo*	bar" should be "foo *bar"
#152: FILE: include/linux/cred.h:15:
+	struct vfs_cred*	vfscred;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#158: FILE: include/linux/cred.h:21:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#199: FILE: include/linux/cred.h:60:
+extern void credentials_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#201: FILE: include/linux/cred.h:62:
+extern void put_vfscred(struct vfs_cred *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfs_cred *' should also have an identifier name
#201: FILE: include/linux/cred.h:62:
+extern void put_vfscred(struct vfs_cred *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#202: FILE: include/linux/cred.h:63:
+extern struct vfs_cred *vfscred_create(uid_t, gid_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'uid_t' should also have an identifier name
#202: FILE: include/linux/cred.h:63:
+extern struct vfs_cred *vfscred_create(uid_t, gid_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gid_t' should also have an identifier name
#202: FILE: include/linux/cred.h:63:
+extern struct vfs_cred *vfscred_create(uid_t, gid_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#203: FILE: include/linux/cred.h:64:
+extern struct vfs_cred *vfscred_clone(struct vfs_cred *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfs_cred *' should also have an identifier name
#203: FILE: include/linux/cred.h:64:
+extern struct vfs_cred *vfscred_clone(struct vfs_cred *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#204: FILE: include/linux/cred.h:65:
+extern int vfscred_getgroups(struct vfs_cred *, int, gid_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfs_cred *' should also have an identifier name
#204: FILE: include/linux/cred.h:65:
+extern int vfscred_getgroups(struct vfs_cred *, int, gid_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#204: FILE: include/linux/cred.h:65:
+extern int vfscred_getgroups(struct vfs_cred *, int, gid_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gid_t *' should also have an identifier name
#204: FILE: include/linux/cred.h:65:
+extern int vfscred_getgroups(struct vfs_cred *, int, gid_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#205: FILE: include/linux/cred.h:66:
+extern int vfscred_setgroups(struct vfs_cred *, int, gid_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfs_cred *' should also have an identifier name
#205: FILE: include/linux/cred.h:66:
+extern int vfscred_setgroups(struct vfs_cred *, int, gid_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#205: FILE: include/linux/cred.h:66:
+extern int vfscred_setgroups(struct vfs_cred *, int, gid_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gid_t *' should also have an identifier name
#205: FILE: include/linux/cred.h:66:
+extern int vfscred_setgroups(struct vfs_cred *, int, gid_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#206: FILE: include/linux/cred.h:67:
+extern int vfscred_match_group(struct vfs_cred *, gid_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfs_cred *' should also have an identifier name
#206: FILE: include/linux/cred.h:67:
+extern int vfscred_match_group(struct vfs_cred *, gid_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gid_t' should also have an identifier name
#206: FILE: include/linux/cred.h:67:
+extern int vfscred_match_group(struct vfs_cred *, gid_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#221: FILE: include/linux/cred.h:82:
+extern struct vfs_cred *clone_current_vfscred(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#222: FILE: include/linux/cred.h:83:
+extern void set_current_vfscred(struct vfs_cred *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfs_cred *' should also have an identifier name
#222: FILE: include/linux/cred.h:83:
+extern void set_current_vfscred(struct vfs_cred *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#223: FILE: include/linux/cred.h:84:
+extern int setfsuid(uid_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'uid_t' should also have an identifier name
#223: FILE: include/linux/cred.h:84:
+extern int setfsuid(uid_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#224: FILE: include/linux/cred.h:85:
+extern int setfsgid(gid_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gid_t' should also have an identifier name
#224: FILE: include/linux/cred.h:85:
+extern int setfsgid(gid_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#225: FILE: include/linux/cred.h:86:
+extern int setgroups(int, gid_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#225: FILE: include/linux/cred.h:86:
+extern int setgroups(int, gid_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gid_t *' should also have an identifier name
#225: FILE: include/linux/cred.h:86:
+extern int setgroups(int, gid_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#226: FILE: include/linux/cred.h:87:
+extern int getgroups(int, gid_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#226: FILE: include/linux/cred.h:87:
+extern int getgroups(int, gid_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gid_t *' should also have an identifier name
#226: FILE: include/linux/cred.h:87:
+extern int getgroups(int, gid_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#228: FILE: include/linux/cred.h:89:
+extern struct vfs_cred *get_task_vfscred(struct task_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#228: FILE: include/linux/cred.h:89:
+extern struct vfs_cred *get_task_vfscred(struct task_struct *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#229: FILE: include/linux/cred.h:90:
+extern void set_task_vfscred(struct task_struct *, struct vfs_cred *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#229: FILE: include/linux/cred.h:90:
+extern void set_task_vfscred(struct task_struct *, struct vfs_cred *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfs_cred *' should also have an identifier name
#229: FILE: include/linux/cred.h:90:
+extern void set_task_vfscred(struct task_struct *, struct vfs_cred *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#232: FILE: include/linux/cred.h:93:
+extern int task_setfsuid(struct task_struct *, uid_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#232: FILE: include/linux/cred.h:93:
+extern int task_setfsuid(struct task_struct *, uid_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'uid_t' should also have an identifier name
#232: FILE: include/linux/cred.h:93:
+extern int task_setfsuid(struct task_struct *, uid_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#235: FILE: include/linux/cred.h:96:
+extern int setgroups16(int, gid16_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#236: FILE: include/linux/cred.h:97:
+extern int getgroups16(int, gid16_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#236: FILE: include/linux/cred.h:97:
+extern int getgroups16(int, gid16_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gid16_t *' should also have an identifier name
#236: FILE: include/linux/cred.h:97:
+extern int getgroups16(int, gid16_t *);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#249: FILE: include/linux/init_task.h:52:
 }
+=20

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#249: FILE: include/linux/init_task.h:52:
+=20
 ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#252: FILE: include/linux/init_task.h:55:
+^I.count^I^I^I=3D ATOMIC_INIT(1), ^I\$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#252: FILE: include/linux/init_task.h:55:
+	.count			=3D ATOMIC_INIT(1), 	\
 	      			^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#253: FILE: include/linux/init_task.h:56:
+	.uid			=3D 0,			\
 	    			^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#254: FILE: include/linux/init_task.h:57:
+	.euid			=3D 0,			\
 	     			^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#255: FILE: include/linux/init_task.h:58:
+	.suid			=3D 0,			\
 	     			^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#256: FILE: include/linux/init_task.h:59:
+	.gid			=3D 0,			\
 	    			^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#257: FILE: include/linux/init_task.h:60:
+	.egid			=3D 0,			\
 	     			^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#258: FILE: include/linux/init_task.h:61:
+	.sgid			=3D 0,			\
 	     			^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#259: FILE: include/linux/init_task.h:62:
+	.vfscred		=3D &init_vfcred		\
 	        		^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#259: FILE: include/linux/init_task.h:62:
+	.vfscred		=3D &init_vfcred		\
 	        		    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#260: FILE: include/linux/init_task.h:63:
+	.cap_effective		=3D CAP_INIT_EFF_SET,	\
 	              		^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#261: FILE: include/linux/init_task.h:64:
+	.cap_inheritable	=3D CAP_INIT_INH_SET,	\
 	                	^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#262: FILE: include/linux/init_task.h:65:
+	.cap_permitted		=3D CAP_FULL_SET,		\
 	              		^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#263: FILE: include/linux/init_task.h:66:
+	.keep_capabilities	=3D 0,			\
 	                  	^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#264: FILE: include/linux/init_task.h:67:
+	.user			=3D INIT_USER		\
 	     			^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#285: FILE: include/linux/init_task.h:107:
+	.cred		=3D &init_cred					\
 	     		^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#285: FILE: include/linux/init_task.h:107:
+	.cred		=3D &init_cred					\
 	     		    ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#321: FILE: include/linux/sched.h:344:
+	struct cred_struct* cred;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#354: FILE: kernel/cred.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#355: FILE: kernel/cred.c:2:
+ * linux/kernel/cred.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#375: FILE: kernel/cred.c:22:
+struct vfs_cred init_vfscred =3D {=20
                              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#375: FILE: kernel/cred.c:22:
+struct vfs_cred init_vfscred =3D {=20
                                   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#376: FILE: kernel/cred.c:23:
+	.count		=3D ATOMIC_INIT(2),
 	      		^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#380: FILE: kernel/cred.c:27:
+	.groups		=3D init_vfscred.__group_storage,
 	       		^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#383: FILE: kernel/cred.c:30:
+rwlock_t task_credlock =3D RW_LOCK_UNLOCKED;
                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#389: FILE: kernel/cred.c:36:
+	vfscred_cache =3D kmem_cache_create("vfs_cred",
 	              ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#401: FILE: kernel/cred.c:48:
+	struct vfs_cred *cred;
+	cred =3D (struct vfs_cred *)kmem_cache_alloc(vfscred_cache, gfp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#401: FILE: kernel/cred.c:48:
+	cred =3D (struct vfs_cred *)kmem_cache_alloc(vfscred_cache, gfp);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#401: FILE: kernel/cred.c:48:
+	cred =3D (struct vfs_cred *)kmem_cache_alloc(vfscred_cache, gfp);
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#404: FILE: kernel/cred.c:51:
+		cred->groups =3D cred->__group_storage;
 		             ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#411: FILE: kernel/cred.c:58:
+	if (cred->groups !=3D cred->__group_storage)
 	                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#420: FILE: kernel/cred.c:67:
+	buf =3D cred->__group_storage;
 	    ^

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#421: FILE: kernel/cred.c:68:
+	if (ngrp <=3D ARRAY_SIZE(cred->__group_storage))
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#423: FILE: kernel/cred.c:70:
+	err =3D -ENOMEM;
 	    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#423: FILE: kernel/cred.c:70:
+	err =3D -ENOMEM;
 	        ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#424: FILE: kernel/cred.c:71:
+	buf =3D (gid_t *)kmalloc(ngrp * sizeof(gid_t), GFP_KERNEL);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#424: FILE: kernel/cred.c:71:
+	buf =3D (gid_t *)kmalloc(ngrp * sizeof(gid_t), GFP_KERNEL);
 	    ^

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#424: FILE: kernel/cred.c:71:
+	buf =3D (gid_t *)kmalloc(ngrp * sizeof(gid_t), GFP_KERNEL);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#429: FILE: kernel/cred.c:76:
+	cred->groups =3D buf;
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#456: FILE: kernel/cred.c:103:
+	if (!(cred =3D vfscred_alloc(SLAB_KERNEL)))
 	           ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#456: FILE: kernel/cred.c:103:
+	if (!(cred =3D vfscred_alloc(SLAB_KERNEL)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#458: FILE: kernel/cred.c:105:
+	cred->uid =3D uid;
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#459: FILE: kernel/cred.c:106:
+	cred->gid =3D gid;
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#460: FILE: kernel/cred.c:107:
+	cred->ngroups =3D 0;
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#477: FILE: kernel/cred.c:124:
+	err =3D -EINVAL;
 	    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#477: FILE: kernel/cred.c:124:
+	err =3D -EINVAL;
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#480: FILE: kernel/cred.c:127:
+	err =3D vfscred_growgroups(cred, ngrp);
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#484: FILE: kernel/cred.c:131:
+	cred->ngroups =3D ngrp;
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#500: FILE: kernel/cred.c:147:
+		ngrp =3D cred->ngroups;
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#512: FILE: kernel/cred.c:159:
+	gid_t *p =3D cred->groups;
 	         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#515: FILE: kernel/cred.c:162:
+	for (i =3D cred->ngroups; i !=3D 0 ; i--) {
 	       ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#515: FILE: kernel/cred.c:162:
+	for (i =3D cred->ngroups; i !=3D 0 ; i--) {
 	                            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#516: FILE: kernel/cred.c:163:
+		if (gid =3D=3D *p++)
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#516: FILE: kernel/cred.c:163:
+		if (gid =3D=3D *p++)
 		           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#516: FILE: kernel/cred.c:163:
+		if (gid =3D=3D *p++)
 		               ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#516: FILE: kernel/cred.c:163:
+		if (gid =3D=3D *p++)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#533: FILE: kernel/cred.c:180:
+	new =3D vfscred_create(cred->uid, cred->gid);
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#536: FILE: kernel/cred.c:183:
+	err =3D vfscred_setgroups(new, cred->ngroups, cred->groups);
 	    ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#551: FILE: kernel/cred.c:198:
+ * ^I grabbing a reference while the task itself is changing$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#560: FILE: kernel/cred.c:207:
+	cred =3D get_vfscred(tsk->cred->vfscred);
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#576: FILE: kernel/cred.c:223:
+	if (tsk->cred->vfscred =3D=3D cred)
 	                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#576: FILE: kernel/cred.c:223:
+	if (tsk->cred->vfscred =3D=3D cred)
 	                          ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#576: FILE: kernel/cred.c:223:
+	if (tsk->cred->vfscred =3D=3D cred)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#579: FILE: kernel/cred.c:226:
+	old =3D xchg(&tsk->cred->vfscred, get_vfscred(cred));
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#601: FILE: kernel/cred.c:248:
+	cred =3D get_current_vfscred();
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#602: FILE: kernel/cred.c:249:
+	new =3D vfscred_clone(cred);
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#621: FILE: kernel/cred.c:268:
+	cred =3D get_task_vfscred(tsk);
 	     ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#624: FILE: kernel/cred.c:271:
+		struct vfs_cred *new;
+		new =3D vfscred_clone(cred);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#624: FILE: kernel/cred.c:271:
+		new =3D vfscred_clone(cred);
 		    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#639: FILE: kernel/cred.c:286:
+	if (uid =3D=3D current->cred->vfscred->uid)
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#639: FILE: kernel/cred.c:286:
+	if (uid =3D=3D current->cred->vfscred->uid)
 	           ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#639: FILE: kernel/cred.c:286:
+	if (uid =3D=3D current->cred->vfscred->uid)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#641: FILE: kernel/cred.c:288:
+	cred =3D copy_write_task_vfscred(current);
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#644: FILE: kernel/cred.c:291:
+	cred->uid =3D uid;
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#659: FILE: kernel/cred.c:306:
+	if (gid =3D=3D current->cred->vfscred->gid)
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#659: FILE: kernel/cred.c:306:
+	if (gid =3D=3D current->cred->vfscred->gid)
 	           ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#659: FILE: kernel/cred.c:306:
+	if (gid =3D=3D current->cred->vfscred->gid)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#661: FILE: kernel/cred.c:308:
+	cred =3D copy_write_task_vfscred(current);
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#664: FILE: kernel/cred.c:311:
+	cred->gid =3D gid;
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#679: FILE: kernel/cred.c:326:
+	int ret =3D -ENOMEM;
 	        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#679: FILE: kernel/cred.c:326:
+	int ret =3D -ENOMEM;
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#681: FILE: kernel/cred.c:328:
+	cred =3D copy_write_task_vfscred(current);
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#684: FILE: kernel/cred.c:331:
+	ret =3D vfscred_setgroups(cred, ngrp, src);
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#702: FILE: kernel/cred.c:349:
+	cred =3D get_current_vfscred();
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#703: FILE: kernel/cred.c:350:
+	ret =3D vfscred_getgroups(cred, ngrp, dst);
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#719: FILE: kernel/cred.c:366:
+	cred =3D copy_write_task_vfscred(tsk);
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#722: FILE: kernel/cred.c:369:
+	cred->uid =3D uid;
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#739: FILE: kernel/cred.c:385:
+static int vfscred_setgroups16(struct vfs_cred *cred, int ngrp, gid16_t *s=
                                                                           ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#741: FILE: kernel/cred.c:386:
+static int vfscred_setgroups16(struct vfs_cred *cred, int ngrp, gid16_t *s=
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#745: FILE: kernel/cred.c:390:
+	err =3D -EINVAL;
 	    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#745: FILE: kernel/cred.c:390:
+	err =3D -EINVAL;
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#748: FILE: kernel/cred.c:393:
+	err =3D vfscred_growgroups(cred, ngrp);
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#751: FILE: kernel/cred.c:396:
+	dst =3D cred->groups;
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#752: FILE: kernel/cred.c:397:
+	for (i =3D ngrp; i !=3D 0; i--)
 	       ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#752: FILE: kernel/cred.c:397:
+	for (i =3D ngrp; i !=3D 0; i--)
 	                   ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#753: FILE: kernel/cred.c:398:
+		*dst++ =3D (gid_t)*src++;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#753: FILE: kernel/cred.c:398:
+		*dst++ =3D (gid_t)*src++;
 		       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#753: FILE: kernel/cred.c:398:
+		*dst++ =3D (gid_t)*src++;
 		                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#754: FILE: kernel/cred.c:399:
+	cred->ngroups =3D ngrp;
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#767: FILE: kernel/cred.c:412:
+static int vfscred_getgroups16(struct vfs_cred *cred, int ngrp, gid16_t *d=
                                                                           ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#769: FILE: kernel/cred.c:413:
+static int vfscred_getgroups16(struct vfs_cred *cred, int ngrp, gid16_t *d=
+{

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#770: FILE: kernel/cred.c:414:
+	gid_t *src =3D cred->groups;
 	           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#772: FILE: kernel/cred.c:416:
+	int i;
+	if (ngrp > cred->ngroups)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#773: FILE: kernel/cred.c:417:
+		ngrp =3D cred->ngroups;
 		     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#774: FILE: kernel/cred.c:418:
+	for (i =3D ngrp; i !=3D 0; i--)
 	       ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#774: FILE: kernel/cred.c:418:
+	for (i =3D ngrp; i !=3D 0; i--)
 	                   ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#775: FILE: kernel/cred.c:419:
+		*dst++ =3D (gid16_t)*src++;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#775: FILE: kernel/cred.c:419:
+		*dst++ =3D (gid16_t)*src++;
 		       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#775: FILE: kernel/cred.c:419:
+		*dst++ =3D (gid16_t)*src++;
 		                    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#787: FILE: kernel/cred.c:431:
+	int ret =3D -ENOMEM;
 	        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#787: FILE: kernel/cred.c:431:
+	int ret =3D -ENOMEM;
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#789: FILE: kernel/cred.c:433:
+	cred =3D copy_write_task_vfscred(current);
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#792: FILE: kernel/cred.c:436:
+	ret =3D vfscred_setgroups16(cred, ngrp, src);
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#810: FILE: kernel/cred.c:454:
+	cred =3D get_current_vfscred();
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#811: FILE: kernel/cred.c:455:
+	ret =3D vfscred_getgroups16(cred, ngrp, dst);
 	    ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#818: FILE: kernel/cred.c:462:
+EXPORT_SYMBOL(put_vfscred);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#819: FILE: kernel/cred.c:463:
+EXPORT_SYMBOL(vfscred_getgroups);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#820: FILE: kernel/cred.c:464:
+EXPORT_SYMBOL(setfsuid);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#821: FILE: kernel/cred.c:465:
+EXPORT_SYMBOL(setfsgid);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#822: FILE: kernel/cred.c:466:
+EXPORT_SYMBOL(setgroups);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#823: FILE: kernel/cred.c:467:
+EXPORT_SYMBOL(getgroups);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#824: FILE: kernel/cred.c:468:
+EXPORT_SYMBOL(set_current_vfscred);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#833: FILE: kernel/exit.c:386:
 }
+static inline void __exit_cred(struct task_struct *tsk)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#835: FILE: kernel/exit.c:388:
+	struct cred_struct	*cred =3D tsk->cred;
 	                  	      ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#869: FILE: kernel/fork.c:620:
 }
+static inline int copy_cred(unsigned long clone_flags, struct task_struct =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#871: FILE: kernel/fork.c:621:
+static inline int copy_cred(unsigned long clone_flags, struct task_struct =
+{

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#878: FILE: kernel/fork.c:628:
+	cred =3D kmem_cache_alloc(cred_cachep, GFP_KERNEL);
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#879: FILE: kernel/fork.c:629:
+	tsk->cred =3D cred;
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#882: FILE: kernel/fork.c:632:
+	*cred =3D *current->cred;
 	      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#882: FILE: kernel/fork.c:632:
+	*cred =3D *current->cred;
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#883: FILE: kernel/fork.c:633:
+	cred->vfscred =3D get_current_vfscred();
 	              ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#902: FILE: kernel/fork.c:714:
 {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#904: FILE: kernel/fork.c:716:
+	if ( 1 || !(clone_flags & CLONE_CRED)) {

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#905: FILE: kernel/fork.c:717:
+		if (atomic_read(&p->cred->user->processes) >=3D
 		                                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#910: FILE: kernel/fork.c:722:
+ ^I}$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#910: FILE: kernel/fork.c:722:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#910: FILE: kernel/fork.c:722:
+ ^I}$

ERROR:SPACING: space prohibited after that open parenthesis '('
#938: FILE: kernel/fork.c:961:
+	if ( 1 || !(clone_flags & CLONE_CRED))

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#947: FILE: kernel/fork.c:1007:
 }
+/* SLAB cache for cred_struct structures (tsk->cred) */

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#957: FILE: kernel/fork.c:1027:
+	cred_cachep =3D kmem_cache_create("cred_cache",
 	            ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#975: FILE: kernel/sched.c:1450:
+	if ((current->cred->euid !=3D p->cred->euid) && (current->cred->euid !=3D=
 	                         ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#975: FILE: kernel/sched.c:1450:
+	if ((current->cred->euid !=3D p->cred->euid) && (current->cred->euid !=3D=
 	                                                                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#975: FILE: kernel/sched.c:1450:
+	if ((current->cred->euid !=3D p->cred->euid) && (current->cred->euid !=3D=
 	                                                                         ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#975: FILE: kernel/sched.c:1450:
+	if ((current->cred->euid !=3D p->cred->euid) && (current->cred->euid !=3D=

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#985: FILE: kernel/sched.c:1607:
+	if ((current->cred->euid !=3D p->cred->euid) &&=20
 	                         ^

ERROR:SPACING: spaces required around that '&&' (ctx:WxO)
#985: FILE: kernel/sched.c:1607:
+	if ((current->cred->euid !=3D p->cred->euid) &&=20
 	                                             ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#985: FILE: kernel/sched.c:1607:
+	if ((current->cred->euid !=3D p->cred->euid) &&=20
 	                                               ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#985: FILE: kernel/sched.c:1607:
+	if ((current->cred->euid !=3D p->cred->euid) &&=20

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#986: FILE: kernel/sched.c:1608:
+	    (current->cred->euid !=3D p->cred->uid) &&
 	                         ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000419892.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 128 errors, 50 warnings, 36 checks, 894 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000419892.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
