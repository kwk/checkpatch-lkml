WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
for each interrupt run in, hard-irq or threaded if CONFIG_PREEMPT_HARDIRQS is 

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#106: FILE: include/linux/interrupt.h:63:
+extern int request_irq2(unsigned int irq,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#108: FILE: include/linux/interrupt.h:65:
+			unsigned long irqflags, const char * devname,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'wether' may be misspelled - perhaps 'weather'?
#165: FILE: kernel/Kconfig.preempt:126:
+	  You can change wether the IRQ handler(s) for each IRQ number is
 	                 ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#184: FILE: kernel/irq/internals.h:26:
+extern int make_irq_nodelay(int irq, struct irq_desc *desc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#185: FILE: kernel/irq/internals.h:27:
+extern int make_irq_threaded(int irq, struct irq_desc *desc);

ERROR:SPACING: space required before the open parenthesis '('
#204: FILE: kernel/irq/manage.c:215:
+	if(!(act->flags & SA_MUST_THREAD)) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#204: FILE: kernel/irq/manage.c:215:
+	if(!(act->flags & SA_MUST_THREAD)) {
+		return 0;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#208: FILE: kernel/irq/manage.c:219:
+	if( act->change_context ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#208: FILE: kernel/irq/manage.c:219:
+	if( act->change_context ) {

ERROR:SPACING: space required before the open parenthesis '('
#208: FILE: kernel/irq/manage.c:219:
+	if( act->change_context ) {

ERROR:SPACING: space required before the open parenthesis '('
#211: FILE: kernel/irq/manage.c:222:
+		if(ret) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#212: FILE: kernel/irq/manage.c:223:
+			printk(KERN_ERR "Failed to change irq handler "

WARNING:SPLIT_STRING: quoted string split across lines
#213: FILE: kernel/irq/manage.c:224:
+			printk(KERN_ERR "Failed to change irq handler "
+			       "for dev %s on IRQ%d to hardirq "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#214: FILE: kernel/irq/manage.c:225:
+			       "for dev %s on IRQ%d to hardirq "
+			       "context (ret: %d)\n", act->name, irq, ret);

ERROR:SPACING: spaces required around that '&=' (ctx:WxO)
#218: FILE: kernel/irq/manage.c:229:
+		act->flags &=~SA_MUST_THREAD;
 		           ^

ERROR:SPACING: space required before that '~' (ctx:OxV)
#218: FILE: kernel/irq/manage.c:229:
+		act->flags &=~SA_MUST_THREAD;
 		             ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#223: FILE: kernel/irq/manage.c:234:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#223: FILE: kernel/irq/manage.c:234:
+	else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#224: FILE: kernel/irq/manage.c:235:
+		printk(KERN_ERR "Irq handler "

WARNING:SPLIT_STRING: quoted string split across lines
#225: FILE: kernel/irq/manage.c:236:
+		printk(KERN_ERR "Irq handler "
+		       "for dev %s on IRQ%d can not be changed"

WARNING:SPLIT_STRING: quoted string split across lines
#226: FILE: kernel/irq/manage.c:237:
+		       "for dev %s on IRQ%d can not be changed"
+		       " to hardirq context\n", act->name, irq);

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#227: FILE: kernel/irq/manage.c:238:
+		return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#230: FILE: kernel/irq/manage.c:241:
+
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#232: FILE: kernel/irq/manage.c:243:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#242: FILE: kernel/irq/manage.c:253:
+	for(act = desc->action; act; act = act->next) {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#243: FILE: kernel/irq/manage.c:254:
+		WARN_ON(((~act->flags) & (SA_MUST_THREAD|SA_NODELAY)) == 0);
 		                                        ^

ERROR:SPACING: space required before the open parenthesis '('
#244: FILE: kernel/irq/manage.c:255:
+		if(act->flags & SA_MUST_THREAD) {

ERROR:SPACING: space required before the open parenthesis '('
#246: FILE: kernel/irq/manage.c:257:
+			if(ret) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#247: FILE: kernel/irq/manage.c:258:
+				printk(KERN_ERR "Could not make irq %d "

WARNING:SPLIT_STRING: quoted string split across lines
#248: FILE: kernel/irq/manage.c:259:
+				printk(KERN_ERR "Could not make irq %d "
+				       "nodelay (errno %d)\n",

ERROR:SPACING: space required before the open parenthesis '('
#268: FILE: kernel/irq/manage.c:279:
+	if(!act->change_context)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#274: FILE: kernel/irq/manage.c:285:
+
+

ERROR:SPACING: space required before the open parenthesis '('
#279: FILE: kernel/irq/manage.c:290:
+	for(act = desc->action; act; act = act->next) {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#280: FILE: kernel/irq/manage.c:291:
+		WARN_ON(((~act->flags) & (SA_MUST_THREAD|SA_NODELAY)) == 0);
 		                                        ^

ERROR:SPACING: space required before the open parenthesis '('
#281: FILE: kernel/irq/manage.c:292:
+		if(!action_may_thread(irq, act)) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#281: FILE: kernel/irq/manage.c:292:
+		if(!action_may_thread(irq, act)) {
+			return -EINVAL;
+		}

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#294: FILE: kernel/irq/manage.c:305:
+	/* We can't make irq handlers change their context before we
+	   are sure no CPU is running them in hard irq context */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#294: FILE: kernel/irq/manage.c:305:
+	   are sure no CPU is running them in hard irq context */

ERROR:SPACING: space required before the open parenthesis '('
#297: FILE: kernel/irq/manage.c:308:
+	for(act = desc->action; act; act = act->next) {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#298: FILE: kernel/irq/manage.c:309:
+		WARN_ON(((~act->flags) & (SA_MUST_THREAD|SA_NODELAY)) == 0);
 		                                        ^

ERROR:SPACING: space required before the open parenthesis '('
#299: FILE: kernel/irq/manage.c:310:
+		if(act->change_context) {

ERROR:SPACING: spaces required around that '&=' (ctx:WxO)
#303: FILE: kernel/irq/manage.c:314:
+			act->flags &=~SA_NODELAY;
 			           ^

ERROR:SPACING: space required before that '~' (ctx:OxV)
#303: FILE: kernel/irq/manage.c:314:
+			act->flags &=~SA_NODELAY;
 			             ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#315: FILE: kernel/irq/manage.c:326:
+	int ret;
+	rcu_read_lock();

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#325: FILE: kernel/irq/manage.c:336:
+}
+int make_irq_nodelay(int irq, struct irq_desc *desc)

ERROR:SPACING: space required before the open parenthesis '('
#331: FILE: kernel/irq/manage.c:342:
+	for(act = desc->action; act; act = act->next) {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#332: FILE: kernel/irq/manage.c:343:
+		WARN_ON((~act->flags) & (SA_MUST_THREAD|SA_NODELAY) == 0);
 		                                       ^

ERROR:SPACING: space required before the open parenthesis '('
#333: FILE: kernel/irq/manage.c:344:
+		if(act->flags & SA_MUST_THREAD)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#352: FILE: kernel/irq/manage.c:389:
+	WARN_ON(((~new->flags) & (SA_MUST_THREAD|SA_NODELAY)) == 0);
 	                                        ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#357: FILE: kernel/irq/manage.c:394:
+	if( (desc->status & IRQ_NODELAY) && (new->flags & SA_MUST_THREAD) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#357: FILE: kernel/irq/manage.c:394:
+	if( (desc->status & IRQ_NODELAY) && (new->flags & SA_MUST_THREAD) ) {

ERROR:SPACING: space required before the open parenthesis '('
#357: FILE: kernel/irq/manage.c:394:
+	if( (desc->status & IRQ_NODELAY) && (new->flags & SA_MUST_THREAD) ) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#359: FILE: kernel/irq/manage.c:396:
+		int ret = make_action_nodelay(irq, new);
+		if(ret)

ERROR:SPACING: space required before the open parenthesis '('
#359: FILE: kernel/irq/manage.c:396:
+		if(ret)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#363: FILE: kernel/irq/manage.c:400:
+
+

ERROR:SPACING: space prohibited after that open parenthesis '('
#364: FILE: kernel/irq/manage.c:401:
+	if( (new->flags & SA_NODELAY) && !(desc->status & IRQ_NODELAY) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#364: FILE: kernel/irq/manage.c:401:
+	if( (new->flags & SA_NODELAY) && !(desc->status & IRQ_NODELAY) ) {

ERROR:SPACING: space required before the open parenthesis '('
#364: FILE: kernel/irq/manage.c:401:
+	if( (new->flags & SA_NODELAY) && !(desc->status & IRQ_NODELAY) ) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#366: FILE: kernel/irq/manage.c:403:
+		int ret = make_irq_nodelay(irq, desc);
+		if(ret)

ERROR:SPACING: space required before the open parenthesis '('
#366: FILE: kernel/irq/manage.c:403:
+		if(ret)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#370: FILE: kernel/irq/manage.c:407:
+
+

WARNING:TYPO_SPELLING: 'syncronization' may be misspelled - perhaps 'synchronization'?
#402: FILE: kernel/irq/manage.c:459:
+ *      Is called after RCU syncronization
                             ^^^^^^^^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#407: FILE: kernel/irq/manage.c:464:
+	struct irqaction *p = container_of(rcu, struct irqaction, rcu);
+	kfree(p);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#473: FILE: kernel/irq/manage.c:569:
+int request_irq2(unsigned int irq,
+		 irqreturn_t (*handler)(int, void *, struct pt_regs *),
+		 unsigned long irqflags, const char * devname, void *dev_id,
+		 int (*change_context)(int, void *,
+				       enum change_context_cmd))
  {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#475: FILE: kernel/irq/manage.c:571:
+		 unsigned long irqflags, const char * devname, void *dev_id,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#507: FILE: kernel/irq/manage.c:620:
+		unsigned long irqflags, const char * devname, void *dev_id)

ERROR:SPACING: space prohibited after that open parenthesis '('
#509: FILE: kernel/irq/manage.c:622:
+	if( !(irqflags & SA_NODELAY) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#509: FILE: kernel/irq/manage.c:622:
+	if( !(irqflags & SA_NODELAY) )

ERROR:SPACING: space required before the open parenthesis '('
#509: FILE: kernel/irq/manage.c:622:
+	if( !(irqflags & SA_NODELAY) )

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#540: FILE: kernel/irq/proc.c:94:
+static const char *sched_policies[] = {

ERROR:SPACING: space prohibited after that open parenthesis '('
#553: FILE: kernel/irq/proc.c:107:
+	if ( (irq_desc[irq].status & IRQ_NODELAY)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#554: FILE: kernel/irq/proc.c:108:
+	if ( (irq_desc[irq].status & IRQ_NODELAY)
+	    || !irq_desc[irq].thread ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#554: FILE: kernel/irq/proc.c:108:
+	    || !irq_desc[irq].thread ) {

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#559: FILE: kernel/irq/proc.c:113:
+	if (t->policy==SCHED_NORMAL &&  t->policy == SCHED_BATCH )
 	             ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#559: FILE: kernel/irq/proc.c:113:
+	if (t->policy==SCHED_NORMAL &&  t->policy == SCHED_BATCH )

CHECK:LINE_SPACING: Please don't use multiple blank lines
#569: FILE: kernel/irq/proc.c:123:
+
+

ERROR:SPACING: space required before the open parenthesis '('
#577: FILE: kernel/irq/proc.c:131:
+	while(isspace(*arg))

ERROR:SPACING: space required before the open parenthesis '('
#580: FILE: kernel/irq/proc.c:134:
+	if(*arg) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#580: FILE: kernel/irq/proc.c:134:
+	if(*arg) {
[...]
+	else
[...]

ERROR:SPACING: space required after that ',' (ctx:VxO)
#581: FILE: kernel/irq/proc.c:135:
+		prm.sched_priority = simple_strtol(arg,&tmp,10);
 		                                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#581: FILE: kernel/irq/proc.c:135:
+		prm.sched_priority = simple_strtol(arg,&tmp,10);
 		                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#581: FILE: kernel/irq/proc.c:135:
+		prm.sched_priority = simple_strtol(arg,&tmp,10);
 		                                           ^

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#581: FILE: kernel/irq/proc.c:135:
+		prm.sched_priority = simple_strtol(arg,&tmp,10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 10)
#585: FILE: kernel/irq/proc.c:139:
+	else
+	  return -EINVAL;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#585: FILE: kernel/irq/proc.c:139:
+	}
+	else

WARNING:TABSTOP: Statements should start on a tabstop
#586: FILE: kernel/irq/proc.c:140:
+	  return -EINVAL;

ERROR:SPACING: space required before the open parenthesis '('
#589: FILE: kernel/irq/proc.c:143:
+	if(ret)

ERROR:SPACING: space required before the open parenthesis '('
#604: FILE: kernel/irq/proc.c:158:
+	while(isspace(*arg))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#607: FILE: kernel/irq/proc.c:161:
+
+

ERROR:SPACING: space required before the open parenthesis '('
#608: FILE: kernel/irq/proc.c:162:
+	if(*arg) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#608: FILE: kernel/irq/proc.c:162:
+	if(*arg) {
[...]
+	else
[...]

ERROR:SPACING: space required after that ',' (ctx:VxO)
#609: FILE: kernel/irq/proc.c:163:
+		prio = simple_strtol(arg,&tmp,10);
 		                        ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#609: FILE: kernel/irq/proc.c:163:
+		prio = simple_strtol(arg,&tmp,10);
 		                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#609: FILE: kernel/irq/proc.c:163:
+		prio = simple_strtol(arg,&tmp,10);
 		                             ^

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#609: FILE: kernel/irq/proc.c:163:
+		prio = simple_strtol(arg,&tmp,10);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#613: FILE: kernel/irq/proc.c:167:
+	}
+	else

ERROR:SPACING: space required before the open parenthesis '('
#617: FILE: kernel/irq/proc.c:171:
+	if(ret)

ERROR:SPACING: space required before the open parenthesis '('
#623: FILE: kernel/irq/proc.c:177:
+	if(ret)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#638: FILE: kernel/irq/proc.c:192:
+	if(copy_from_user( (void*)&buf[0], (void*)buffer,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#638: FILE: kernel/irq/proc.c:192:
+	if(copy_from_user( (void*)&buf[0], (void*)buffer,

ERROR:SPACING: space prohibited after that open parenthesis '('
#638: FILE: kernel/irq/proc.c:192:
+	if(copy_from_user( (void*)&buf[0], (void*)buffer,

ERROR:SPACING: space required before the open parenthesis '('
#638: FILE: kernel/irq/proc.c:192:
+	if(copy_from_user( (void*)&buf[0], (void*)buffer,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#639: FILE: kernel/irq/proc.c:193:
+	if(copy_from_user( (void*)&buf[0], (void*)buffer,
+			   count>20 ? 20: count ) )

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#639: FILE: kernel/irq/proc.c:193:
+			   count>20 ? 20: count ) )
 			        ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#639: FILE: kernel/irq/proc.c:193:
+			   count>20 ? 20: count ) )
 			                ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#639: FILE: kernel/irq/proc.c:193:
+			   count>20 ? 20: count ) )

ERROR:SPACING: space required after that ',' (ctx:VxV)
#644: FILE: kernel/irq/proc.c:198:
+	if(!strnicmp(buf,"irq",3))
 	                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#644: FILE: kernel/irq/proc.c:198:
+	if(!strnicmp(buf,"irq",3))
 	                      ^

ERROR:SPACING: space required before the open parenthesis '('
#644: FILE: kernel/irq/proc.c:198:
+	if(!strnicmp(buf,"irq",3))

ERROR:CODE_INDENT: code indent should use tabs where possible
#645: FILE: kernel/irq/proc.c:199:
+ ^I^Iret = make_irq_nodelay(irq, &irq_desc[irq]);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#645: FILE: kernel/irq/proc.c:199:
+ ^I^Iret = make_irq_nodelay(irq, &irq_desc[irq]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#645: FILE: kernel/irq/proc.c:199:
+ ^I^Iret = make_irq_nodelay(irq, &irq_desc[irq]);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#646: FILE: kernel/irq/proc.c:200:
+	else if(!strnicmp(buf,"normal",3))
 	                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#646: FILE: kernel/irq/proc.c:200:
+	else if(!strnicmp(buf,"normal",3))
 	                              ^

ERROR:SPACING: space required before the open parenthesis '('
#646: FILE: kernel/irq/proc.c:200:
+	else if(!strnicmp(buf,"normal",3))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#647: FILE: kernel/irq/proc.c:201:
+		ret = set_nonrt_prio(irq, SCHED_NORMAL, buf+6);
 		                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#648: FILE: kernel/irq/proc.c:202:
+	else if(!strnicmp(buf,"fifo",3))
 	                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#648: FILE: kernel/irq/proc.c:202:
+	else if(!strnicmp(buf,"fifo",3))
 	                            ^

ERROR:SPACING: space required before the open parenthesis '('
#648: FILE: kernel/irq/proc.c:202:
+	else if(!strnicmp(buf,"fifo",3))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#649: FILE: kernel/irq/proc.c:203:
+		ret = set_rt_prio(irq, SCHED_FIFO, buf+4);
 		                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#650: FILE: kernel/irq/proc.c:204:
+	else  if(!strnicmp(buf,"rr",2))
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#650: FILE: kernel/irq/proc.c:204:
+	else  if(!strnicmp(buf,"rr",2))
 	                           ^

ERROR:SPACING: space required before the open parenthesis '('
#650: FILE: kernel/irq/proc.c:204:
+	else  if(!strnicmp(buf,"rr",2))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#651: FILE: kernel/irq/proc.c:205:
+		ret = set_rt_prio(irq, SCHED_RR, buf+2);
 		                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#652: FILE: kernel/irq/proc.c:206:
+	else  if(!strnicmp(buf,"batch",3))
 	                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#652: FILE: kernel/irq/proc.c:206:
+	else  if(!strnicmp(buf,"batch",3))
 	                              ^

ERROR:SPACING: space required before the open parenthesis '('
#652: FILE: kernel/irq/proc.c:206:
+	else  if(!strnicmp(buf,"batch",3))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#653: FILE: kernel/irq/proc.c:207:
+		ret = set_nonrt_prio(irq, SCHED_BATCH, buf+5);
 		                                          ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#657: FILE: kernel/irq/proc.c:211:
+
+

ERROR:SPACING: space required before the open parenthesis '('
#658: FILE: kernel/irq/proc.c:212:
+	if(ret)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000071798.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 78 errors, 27 warnings, 26 checks, 650 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000071798.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
