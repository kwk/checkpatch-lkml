WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
#!/bin/sh

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
# start of stop laptop mode, best run by a power management daemon when

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
# ac gets connected/disconnected from a laptop

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
# FIXME: assumes HZ == 100

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
# age time, in seconds. should be put into a sysconfig file

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
# kernel default dirty buffer age

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#109: 
diff -baur --speed-large-files linux-2.6.0/drivers/block/ll_rw_blk.c linux-2.6.0-withlaptopmode/drivers/block/ll_rw_blk.c

ERROR:TRAILING_WHITESPACE: trailing whitespace
#151: FILE: drivers/block/ll_rw_blk.c:2706:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#154: FILE: drivers/block/ll_rw_blk.c:2709:
+^I$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#164: FILE: fs/buffer.c:1261:
 	if (!buffer_dirty(bh) && !test_set_buffer_dirty(bh))
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#168: FILE: fs/buffer.c:1265:
+			printk("%s(%d): dirtied buffer\n", current->comm, current->pid);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#177: FILE: fs/buffer.c:2676:
+	if (unlikely(block_dump))
+	{

WARNING:LINE_SPACING: Missing a blank line after declarations
#180: FILE: fs/buffer.c:2679:
+		char b[BDEVNAME_SIZE];
+		printk("%s(%d): %s block %lu/%u on %s\n",

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#180: FILE: fs/buffer.c:2679:
+		printk("%s(%d): %s block %lu/%u on %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#181: FILE: fs/buffer.c:2680:
+		printk("%s(%d): %s block %lu/%u on %s\n",
+			current->comm, current->pid,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#184: FILE: fs/buffer.c:2683:
+			bdevname(bh->b_bdev,b));
 			                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#197: FILE: include/linux/sysctl.h:157:
+	VM_LAPTOP_MODE=22,      /* vm laptop mode */
 	              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#198: FILE: include/linux/sysctl.h:158:
+	VM_BLOCK_DUMP=23,       /* block dump mode */
 	             ^

WARNING:DUPLICATED_SYSCTL_CONST: duplicated sysctl range checking value 'zero', consider using the shared one in include/linux/sysctl.h
#237: FILE: kernel/sysctl.c:711:
+		.extra1		= &zero,

Commit d91bff3011cf ("proc/sysctl: add shared variables for range
check") added some shared const variables to be used instead of a local
copy in each source file.

Consider replacing the sysctl range checking value with the shared
one in include/linux/sysctl.h.  The following conversion scheme may
be used::

  &zero     ->  SYSCTL_ZERO
  &one      ->  SYSCTL_ONE
  &int_max  ->  SYSCTL_INT_MAX

See:

  1. https://lore.kernel.org/lkml/20190430180111.10688-1-mcroce@redhat.com/
  2. https://lore.kernel.org/lkml/20190531131422.14970-1-mcroce@redhat.com/

WARNING:DUPLICATED_SYSCTL_CONST: duplicated sysctl range checking value 'zero', consider using the shared one in include/linux/sysctl.h
#247: FILE: kernel/sysctl.c:721:
+		.extra1		= &zero,

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#270: FILE: mm/page-writeback.c:88:
+int block_dump = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#275: FILE: mm/page-writeback.c:93:
+int laptop_mode = 0;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#316: FILE: mm/page-writeback.c:360:
+	if (laptop_mode)
+	{

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000316712.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 14 warnings, 1 checks, 198 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000316712.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
