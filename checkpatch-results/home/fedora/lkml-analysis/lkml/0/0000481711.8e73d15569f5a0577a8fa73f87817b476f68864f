WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#53: FILE: drivers/char/led.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#70: FILE: drivers/char/led.c:18:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#71: FILE: drivers/char/led.c:19:
+#include <asm/uaccess.h>

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#95: FILE: drivers/char/led.c:43:
+	if (led == NULL)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!led"
#95: FILE: drivers/char/led.c:43:
+	if (led == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#99: FILE: drivers/char/led.c:47:
+	else
+	{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#99: FILE: drivers/char/led.c:47:
+	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#101: FILE: drivers/char/led.c:49:
+		while (led->next != NULL)
+		{

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "led->next"
#101: FILE: drivers/char/led.c:49:
+		while (led->next != NULL)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#103: FILE: drivers/char/led.c:51:
+			if (strcmp(led->info->name, info->info->name) == 0)
+			{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#127: FILE: drivers/char/led.c:75:
+	if (info == NULL)
+	{

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info"
#127: FILE: drivers/char/led.c:75:
+	if (info == NULL)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#134: FILE: drivers/char/led.c:82:
+	if (led == info)
+	{

ERROR:CODE_INDENT: code indent should use tabs where possible
#136: FILE: drivers/char/led.c:84:
+^I        MOD_DEC_USE_COUNT;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#139: FILE: drivers/char/led.c:87:
+	else
+	{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#139: FILE: drivers/char/led.c:87:
+	}
+	else

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#141: FILE: drivers/char/led.c:89:
+		while (led->next != NULL)
+		{

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "led->next"
#141: FILE: drivers/char/led.c:89:
+		while (led->next != NULL)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#143: FILE: drivers/char/led.c:91:
+			if (led->next == info)
+			{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#166: FILE: drivers/char/led.c:114:
+	while (led != NULL)
+	{

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "led"
#166: FILE: drivers/char/led.c:114:
+	while (led != NULL)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#177: FILE: drivers/char/led.c:125:
+/* Find an LED by its number.  Must be called with the led spin lock
+   held. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#177: FILE: drivers/char/led.c:125:
+   held. */

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#184: FILE: drivers/char/led.c:132:
+	while (led != NULL)
+	{

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "led"
#184: FILE: drivers/char/led.c:132:
+	while (led != NULL)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#186: FILE: drivers/char/led.c:134:
+		if (count == 0)
+		{

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#199: FILE: drivers/char/led.c:147:
+/* Find an LED by its name.  Must be called with the led spin lock
+   held. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#199: FILE: drivers/char/led.c:147:
+   held. */

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#206: FILE: drivers/char/led.c:154:
+	while (led != NULL)
+	{

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "led"
#206: FILE: drivers/char/led.c:154:
+	while (led != NULL)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#208: FILE: drivers/char/led.c:156:
+		if (strcmp(name, led->info->name) == 0)
+		{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#231: FILE: drivers/char/led.c:179:
+	switch(cmd)
+	{

ERROR:SPACING: space required before the open parenthesis '('
#231: FILE: drivers/char/led.c:179:
+	switch(cmd)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#238: FILE: drivers/char/led.c:186:
+		i = copy_from_user(&info, (void*)arg, sizeof(info));

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#239: FILE: drivers/char/led.c:187:
+		if (i)
+		{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#249: FILE: drivers/char/led.c:197:
+		if (led == NULL)
+		{

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!led"
#249: FILE: drivers/char/led.c:197:
+		if (led == NULL)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#263: FILE: drivers/char/led.c:211:
+		if (i)
+		{

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#270: FILE: drivers/char/led.c:218:
+		i = copy_from_user(&op, (void*)arg, sizeof(op));

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#271: FILE: drivers/char/led.c:219:
+		if (i)
+		{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#278: FILE: drivers/char/led.c:226:
+		if (led == NULL)
+		{

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!led"
#278: FILE: drivers/char/led.c:226:
+		if (led == NULL)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#285: FILE: drivers/char/led.c:233:
+		if (!i)
+		{

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#285: FILE: drivers/char/led.c:233:
+		if (!i)
+		{

WARNING:TABSTOP: Statements should start on a tabstop
#288: FILE: drivers/char/led.c:236:
+		    if (i)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#288: FILE: drivers/char/led.c:236:
+		    if (i)
+		    {

WARNING:TABSTOP: Statements should start on a tabstop
#289: FILE: drivers/char/led.c:237:
+		    {

WARNING:TABSTOP: Statements should start on a tabstop
#291: FILE: drivers/char/led.c:239:
+		    }

ERROR:TRAILING_WHITESPACE: trailing whitespace
#302: FILE: drivers/char/led.c:250:
+/* Not much to do for opening. */ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#305: FILE: drivers/char/led.c:253:
+	switch(MINOR(inode->i_rdev))
+	{

ERROR:SPACING: space required before the open parenthesis '('
#305: FILE: drivers/char/led.c:253:
+	switch(MINOR(inode->i_rdev))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#315: FILE: drivers/char/led.c:263:
+/* Closing is really easy. */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#321: FILE: drivers/char/led.c:269:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#321: FILE: drivers/char/led.c:269:
+
+ 

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: drivers/char/led.c:269:
+ $

WARNING:CONST_STRUCT: struct file_operations should normally be const
#322: FILE: drivers/char/led.c:270:
+static struct file_operations led_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:INDENTED_LABEL: labels should not be indented
#323: FILE: drivers/char/led.c:271:
+	owner:		THIS_MODULE,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#324: FILE: drivers/char/led.c:272:
+	llseek:		NULL,
 	      ^

WARNING:INDENTED_LABEL: labels should not be indented
#324: FILE: drivers/char/led.c:272:
+	llseek:		NULL,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#325: FILE: drivers/char/led.c:273:
+	read:		NULL,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#325: FILE: drivers/char/led.c:273:
+	read:		NULL,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#326: FILE: drivers/char/led.c:274:
+	write:		NULL,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#326: FILE: drivers/char/led.c:274:
+	write:		NULL,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#327: FILE: drivers/char/led.c:275:
+	ioctl:		led_ioctl,
 	     ^

WARNING:INDENTED_LABEL: labels should not be indented
#327: FILE: drivers/char/led.c:275:
+	ioctl:		led_ioctl,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#328: FILE: drivers/char/led.c:276:
+	open:		led_open,
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#328: FILE: drivers/char/led.c:276:
+	open:		led_open,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#329: FILE: drivers/char/led.c:277:
+	release:	led_close,
 	       ^

WARNING:INDENTED_LABEL: labels should not be indented
#329: FILE: drivers/char/led.c:277:
+	release:	led_close,

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#332: FILE: drivers/char/led.c:280:
+static struct miscdevice led_miscdev=
                                     ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#333: FILE: drivers/char/led.c:281:
+static struct miscdevice led_miscdev=
+{

CHECK:LINE_SPACING: Please don't use multiple blank lines
#339: FILE: drivers/char/led.c:287:
+
+

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#351: FILE: drivers/char/led.c:299:
+	printk("generic LED driver: v%s Corey Minyard (minyard@mvista.com)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#357: FILE: drivers/char/led.c:305:
+		printk(KERN_ERR "led: can't misc_register on minor=%d\n",

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#367: FILE: drivers/char/led.c:315:
+EXPORT_SYMBOL(register_led_info);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#368: FILE: drivers/char/led.c:316:
+EXPORT_SYMBOL(unregister_led_info);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#417: FILE: include/linux/led.h:1:
+/*

ERROR:OPEN_BRACE: open brace '{' following union go on the same line
#451: FILE: include/linux/led.h:35:
+union led_info_u
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#453: FILE: include/linux/led.h:37:
+	struct
+	{

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#456: FILE: include/linux/led.h:40:
+		int has_aux_mode;	/* If true, the LED has an auxiliary
+					   mode (like a disk drive or

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#458: FILE: include/linux/led.h:42:
+					   to work in. */

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#462: FILE: include/linux/led.h:46:
+	struct
+	{

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#466: FILE: include/linux/led.h:50:
+		int has_aux_mode;	/* If true, the LED has an auxiliary
+					   mode (like a disk drive or

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#468: FILE: include/linux/led.h:52:
+					   to work in. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#473: FILE: include/linux/led.h:57:
+/* Information about an LED.  This is not the dynamic information, but
+   the information about the capabilities of the LED. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#473: FILE: include/linux/led.h:57:
+   the information about the capabilities of the LED. */

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#475: FILE: include/linux/led.h:59:
+struct led_info
+{

ERROR:OPEN_BRACE: open brace '{' following union go on the same line
#488: FILE: include/linux/led.h:72:
+union led_op_u
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#490: FILE: include/linux/led.h:74:
+	struct
+	{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#495: FILE: include/linux/led.h:79:
+	struct
+	{

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#501: FILE: include/linux/led.h:85:
+/* An operation to perform on the LED.  Set the name and the operation
+   and any needed info and do an LEDIOC_OP ioctl. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#501: FILE: include/linux/led.h:85:
+   and any needed info and do an LEDIOC_OP ioctl. */

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#503: FILE: include/linux/led.h:87:
+struct led_op
+{

CHECK:LINE_SPACING: Please don't use multiple blank lines
#509: FILE: include/linux/led.h:93:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#521: FILE: include/linux/led.h:105:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#524: FILE: include/linux/led.h:108:
+/* This is the structure that is registered with the LED driver by the
+   subtending LED drivers.  One of these must be registered for each

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#525: FILE: include/linux/led.h:109:
+   LED. */

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#527: FILE: include/linux/led.h:111:
+struct led_reg_info
+{

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#529: FILE: include/linux/led.h:113:
+	struct led_info     *info; /* Pointer to the info structure for
+				      this LED. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#529: FILE: include/linux/led.h:113:
+				      this LED. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#531: FILE: include/linux/led.h:115:
+	void                *data; /* Used by the specific LED driver for
+				      whatever it likes. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#531: FILE: include/linux/led.h:115:
+				      whatever it likes. */

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000481711.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 50 errors, 45 warnings, 13 checks, 488 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000481711.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
