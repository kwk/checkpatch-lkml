WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#56: FILE: include/linux/list.h:36:
+		printk(KERN_CRIT "elem = %p, elem->prev = %p, "

WARNING:SPLIT_STRING: quoted string split across lines
#57: FILE: include/linux/list.h:37:
+		printk(KERN_CRIT "elem = %p, elem->prev = %p, "
+					"elem->prev->next = %p\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#59: FILE: include/linux/list.h:39:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#62: FILE: include/linux/list.h:42:
+		printk(KERN_CRIT "elem = %p, elem->next = %p, "

WARNING:SPLIT_STRING: quoted string split across lines
#63: FILE: include/linux/list.h:43:
+		printk(KERN_CRIT "elem = %p, elem->next = %p, "
+				"elem->next->prev = %p\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#65: FILE: include/linux/list.h:45:
+		BUG();

ERROR:CODE_INDENT: code indent should use tabs where possible
#161: FILE: include/linux/list.h:286:
+        ^Ipos = (pos)->next, prefetch((pos)->next))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#161: FILE: include/linux/list.h:286:
+        ^Ipos = (pos)->next, prefetch((pos)->next))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: include/linux/list.h:286:
+        ^Ipos = (pos)->next, prefetch((pos)->next))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: include/linux/list.h:313:
+        ^Ipos = (pos)->prev, prefetch((pos)->prev))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#186: FILE: include/linux/list.h:313:
+        ^Ipos = (pos)->prev, prefetch((pos)->prev))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: include/linux/list.h:313:
+        ^Ipos = (pos)->prev, prefetch((pos)->prev))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#213: FILE: include/linux/list.h:335:
+^I     &(pos)->member != (head); ^I^I^I^I^I\$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pos' - possible side-effects?
#225: FILE: include/linux/list.h:347:
+#define list_for_each_entry_prev(pos, head, member)			\
+	for (pos = list_entry((head)->prev, typeof(*(pos)), member),	\
+		     prefetch((pos)->member.prev);			\
+	     &(pos)->member != (head); 					\
+	     pos = list_entry((pos)->member.prev, typeof(*(pos)), member),\
+		     __list_head_check(head),				\
+		     __list_head_check(&(pos)->member),			\
+		     prefetch((pos)->member.prev))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'head' - possible side-effects?
#225: FILE: include/linux/list.h:347:
+#define list_for_each_entry_prev(pos, head, member)			\
+	for (pos = list_entry((head)->prev, typeof(*(pos)), member),	\
+		     prefetch((pos)->member.prev);			\
+	     &(pos)->member != (head); 					\
+	     pos = list_entry((pos)->member.prev, typeof(*(pos)), member),\
+		     __list_head_check(head),				\
+		     __list_head_check(&(pos)->member),			\
+		     prefetch((pos)->member.prev))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'member' - possible side-effects?
#225: FILE: include/linux/list.h:347:
+#define list_for_each_entry_prev(pos, head, member)			\
+	for (pos = list_entry((head)->prev, typeof(*(pos)), member),	\
+		     prefetch((pos)->member.prev);			\
+	     &(pos)->member != (head); 					\
+	     pos = list_entry((pos)->member.prev, typeof(*(pos)), member),\
+		     __list_head_check(head),				\
+		     __list_head_check(&(pos)->member),			\
+		     prefetch((pos)->member.prev))

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#228: FILE: include/linux/list.h:350:
+^I     &(pos)->member != (head); ^I^I^I^I^I\$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#246: FILE: include/linux/list.h:366:
+^I     &(pos)->member != (head); ^I^I^I^I^I\$

WARNING:INLINE: plain inline is preferred over __inline__
#261: FILE: include/linux/list.h:466:
+static __inline__ void hlist_del_rcu(struct hlist_node *n)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000366493.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 14 warnings, 3 checks, 203 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000366493.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
