WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
- Work a bit on the automatic CRC error recovery handling. System still hangs.

WARNING:TYPO_SPELLING: 'easly' may be misspelled - perhaps 'easily'?
#59: 
   task_no_data_intr can be easly merged together, since the usage of
                            ^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#116: FILE: drivers/ide/icside.c:495:
+	count = ch->sg_nents = ide_build_sglist(drive, rq);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#243: FILE: drivers/ide/ide.c:536:
+		printk(KERN_INFO "%s: recalibrating...\n", drive->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#251: FILE: drivers/ide/ide.c:541:
+		printk(KERN_INFO "%s: done!\n", drive->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#267: FILE: drivers/ide/ide.c:590:
+		printk(KERN_ERR "%s: max number of retries exceeded!\n", drive->name);

WARNING:TYPO_SPELLING: 'trully' may be misspelled - perhaps 'truly'?
#327: FILE: drivers/ide/ide.c:1424:
+/* FIXME: this is a trully bad name */
                     ^^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'drive->addressing == 1'
#566: FILE: drivers/ide/ide-pmac.c:1440:
+	if ((rq->flags & REQ_SPECIAL) &&
 		(drive->addressing == 1)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#567: FILE: drivers/ide/ide-pmac.c:1441:
+	if ((rq->flags & REQ_SPECIAL) &&
 		(drive->addressing == 1)) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#611: FILE: drivers/ide/ide-taskfile.c:367:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#615: FILE: drivers/ide/ide-taskfile.c:371:
+ide_startstop_t ata_special_intr(struct ata_device *drive, struct
+		request *rq) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#616: FILE: drivers/ide/ide-taskfile.c:372:
+		request *rq) {
 		        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#617: FILE: drivers/ide/ide-taskfile.c:373:
+		request *rq) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#629: FILE: drivers/ide/ide-taskfile.c:385:
+				udelay(100);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#636: FILE: drivers/ide/ide-taskfile.c:392:
+			ret = ata_error(drive, rq, __FUNCTION__);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'drive->addressing == 1'
#643: FILE: drivers/ide/ide-taskfile.c:399:
+	if ((drive->id->command_set_2 & 0x0400) &&
+			(drive->id->cfs_enable_2 & 0x0400) &&
+			(drive->addressing == 1)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#644: FILE: drivers/ide/ide-taskfile.c:400:
+	if ((drive->id->command_set_2 & 0x0400) &&
+			(drive->id->cfs_enable_2 & 0x0400) &&

WARNING:TYPO_SPELLING: 'suplied' may be misspelled - perhaps 'supplied'?
#855: FILE: include/linux/blkdev.h:88:
+	__REQ_SPECIAL,	/* driver suplied command */
 	              	          ^^^^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#887: FILE: include/linux/ide.h:693:
+extern ide_startstop_t ata_special_intr(struct ata_device *, struct request *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000451950.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 8 warnings, 10 checks, 726 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000451950.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
