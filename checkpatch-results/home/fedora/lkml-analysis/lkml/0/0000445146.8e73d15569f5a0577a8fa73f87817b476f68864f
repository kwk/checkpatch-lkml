WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#27: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#28: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#29: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#30: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#31: 
#	           ChangeSet	1.683.1.4 -> 1.683.1.5

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#32: 
#	include/asm-s390x/param.h	1.2     -> 1.3    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#33: 
#	include/asm-s390/debug.h	1.5     -> 1.6    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#34: 
#	include/asm-s390/param.h	1.2     -> 1.3    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#35: 
#	drivers/s390/net/lcs.c	1.1     -> 1.2    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#36: 
#	include/asm-s390x/pgalloc.h	1.6     -> 1.7    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#37: 
#	arch/s390x/kernel/linux32.c	1.15    -> 1.16   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#38: 
#	drivers/s390/cio/blacklist.c	1.1     -> 1.2    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#39: 
#	arch/s390x/mm/fault.c	1.9     -> 1.10   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#40: 
#	drivers/s390/misc/chandev.c	1.9     -> 1.10   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#41: 
#	drivers/s390/Makefile	1.8     -> 1.9    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#42: 
#	include/asm-s390x/debug.h	1.5     -> 1.6    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#43: 
#	include/asm-s390/pgalloc.h	1.7     -> 1.8    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#44: 
#	arch/s390/mm/fault.c	1.8     -> 1.9    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#45: 
#	drivers/s390/cio/s390io.c	1.1     -> 1.2    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#46: 
#	include/asm-s390x/system.h	1.5     -> 1.6    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#47: 
#	arch/s390x/kernel/linux32.h	1.2     -> 1.3    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
#	drivers/s390/cio/cio.c	1.1     -> 1.2    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
#	drivers/s390/char/ctrlchar.c	1.3     -> 1.4    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
# 02/07/23	arnd@bergmann-dalldorf.de	1.683.1.5

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
# trivial fixes to keep s390 arch working

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#58: 
--- a/arch/s390/mm/fault.c	Tue Jul 23 18:53:49 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#79: FILE: arch/s390/mm/fault.c:248:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: arch/s390x/kernel/linux32.c:524:
+        if (get_user (p->mtype, &up->mtype) ||$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: arch/s390x/kernel/linux32.c:524:
+        if (get_user (p->mtype, &up->mtype) ||$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#102: FILE: arch/s390x/kernel/linux32.c:524:
+        if (get_user (p->mtype, &up->mtype) ||

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#103: FILE: arch/s390x/kernel/linux32.c:525:
+	    __copy_from_user (p->mtext, &up->mtext, second))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#148: FILE: arch/s390x/mm/fault.c:248:
+		BUG();

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#183: FILE: drivers/s390/cio/blacklist.c:4:
+ *   $Revision: 1.6 $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#192: FILE: drivers/s390/cio/blacklist.c:246:
+#if 0

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#208: FILE: drivers/s390/cio/cio.c:4:
+ *   $Revision: 1.17 $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#217: FILE: drivers/s390/cio/cio.c:55:
+		debug_text_event (cio_debug_msg_id, level, buffer);

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#238: FILE: drivers/s390/cio/s390io.c:4:
+ *   $Revision: 1.12 $

WARNING:SPLIT_STRING: quoted string split across lines
#253: FILE: drivers/s390/cio/s390io.c:1917:
+					  "PathVerification(%04X) "
+					  "- Device %04X is no longer there?!?\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#257: FILE: drivers/s390/cio/s390io.c:1921:
+			} else if (ret) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPLIT_STRING: quoted string split across lines
#260: FILE: drivers/s390/cio/s390io.c:1924:
+					  "PathVerification(%04X) - "
+					  "Unexpected error %d on device %04X\n",

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#295: FILE: include/asm-s390/debug.h:163:
+debug_sprintf_event(debug_info_t* id,int level,char *string,...)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#295: FILE: include/asm-s390/debug.h:163:
+debug_sprintf_event(debug_info_t* id,int level,char *string,...)
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#295: FILE: include/asm-s390/debug.h:163:
+debug_sprintf_event(debug_info_t* id,int level,char *string,...)
                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#295: FILE: include/asm-s390/debug.h:163:
+debug_sprintf_event(debug_info_t* id,int level,char *string,...)
                                                            ^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(3, 4) over __attribute__((format(printf, 3, 4)))
#296: FILE: include/asm-s390/debug.h:164:
+	__attribute__ ((format(printf, 3, 4)));

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#305: FILE: include/asm-s390/debug.h:199:
+debug_sprintf_exception(debug_info_t* id,int level,char *string,...)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#305: FILE: include/asm-s390/debug.h:199:
+debug_sprintf_exception(debug_info_t* id,int level,char *string,...)
                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#305: FILE: include/asm-s390/debug.h:199:
+debug_sprintf_exception(debug_info_t* id,int level,char *string,...)
                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#305: FILE: include/asm-s390/debug.h:199:
+debug_sprintf_exception(debug_info_t* id,int level,char *string,...)
                                                                ^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(3, 4) over __attribute__((format(printf, 3, 4)))
#306: FILE: include/asm-s390/debug.h:200:
+	__attribute__ ((format(printf, 3, 4)));

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#356: FILE: include/asm-s390x/debug.h:163:
+debug_sprintf_event(debug_info_t* id,int level,char *string,...)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#356: FILE: include/asm-s390x/debug.h:163:
+debug_sprintf_event(debug_info_t* id,int level,char *string,...)
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#356: FILE: include/asm-s390x/debug.h:163:
+debug_sprintf_event(debug_info_t* id,int level,char *string,...)
                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#356: FILE: include/asm-s390x/debug.h:163:
+debug_sprintf_event(debug_info_t* id,int level,char *string,...)
                                                            ^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(3, 4) over __attribute__((format(printf, 3, 4)))
#357: FILE: include/asm-s390x/debug.h:164:
+	__attribute__ ((format(printf, 3, 4)));

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#366: FILE: include/asm-s390x/debug.h:199:
+debug_sprintf_exception(debug_info_t* id,int level,char *string,...)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#366: FILE: include/asm-s390x/debug.h:199:
+debug_sprintf_exception(debug_info_t* id,int level,char *string,...)
                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#366: FILE: include/asm-s390x/debug.h:199:
+debug_sprintf_exception(debug_info_t* id,int level,char *string,...)
                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#366: FILE: include/asm-s390x/debug.h:199:
+debug_sprintf_exception(debug_info_t* id,int level,char *string,...)
                                                                ^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(3, 4) over __attribute__((format(printf, 3, 4)))
#367: FILE: include/asm-s390x/debug.h:200:
+	__attribute__ ((format(printf, 3, 4)));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#421: FILE: include/asm-s390x/system.h:26:
+#define switch_to(prev,next,last) do {					     \
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#421: FILE: include/asm-s390x/system.h:26:
+#define switch_to(prev,next,last) do {					     \
                            ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'prev' may be better as '(prev)' to avoid precedence issues
#421: FILE: include/asm-s390x/system.h:26:
+#define switch_to(prev,next,last) do {					     \
 	if (prev == next)						     \
 		break;							     \

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'next' may be better as '(next)' to avoid precedence issues
#421: FILE: include/asm-s390x/system.h:26:
+#define switch_to(prev,next,last) do {					     \
 	if (prev == next)						     \
 		break;							     \

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000445146.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 20 errors, 47 warnings, 3 checks, 286 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000445146.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
