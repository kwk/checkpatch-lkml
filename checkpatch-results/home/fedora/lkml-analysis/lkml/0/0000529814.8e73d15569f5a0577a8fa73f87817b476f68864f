CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*s)...) over kmalloc(sizeof(struct super_block)...)
#58: FILE: fs/super.c:778:
+	struct super_block *s = kmalloc(sizeof(struct super_block),  GFP_USER);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#97: FILE: fs/super.c:810:
+	list_add (&s->s_list, super_blocks.prev);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000529814.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 1 warnings, 1 checks, 101 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000529814.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
