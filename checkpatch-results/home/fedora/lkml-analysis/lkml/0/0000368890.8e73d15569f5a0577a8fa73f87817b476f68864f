WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
 drivers/i2c/busses/i2c-sis96x.c |  376 ++++++++++++++++++++++++++++++++++++++++

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#47: 
--- a/drivers/i2c/busses/Kconfig	Mon May 19 15:59:03 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#67: FILE: drivers/i2c/busses/Kconfig:134:
+^I  This can also be built as a module which can be inserted and removed $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'utilties' may be misspelled - perhaps 'utilities'?
#73: FILE: drivers/i2c/busses/Kconfig:140:
+	  You will also need the latest user-space utilties: you can find them
 	                                           ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#74: FILE: drivers/i2c/busses/Kconfig:141:
+^I  in the lm_sensors package, which you can download at $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#94: FILE: drivers/i2c/busses/i2c-sis96x.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#95: FILE: drivers/i2c/busses/i2c-sis96x.c:2:
+/*
+    sis96x.c - Part of lm_sensors, Linux kernel modules for hardware

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#96: FILE: drivers/i2c/busses/i2c-sis96x.c:3:
+              monitoring$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#111: FILE: drivers/i2c/busses/i2c-sis96x.c:18:
+    along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#112: FILE: drivers/i2c/busses/i2c-sis96x.c:19:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#116: FILE: drivers/i2c/busses/i2c-sis96x.c:23:
+/*
+    This module must be considered BETA unless and until

ERROR:TRAILING_WHITESPACE: trailing whitespace
#122: FILE: drivers/i2c/busses/i2c-sis96x.c:29:
+    If this module isn't detecting your 96x south bridge, have a $

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#138: FILE: drivers/i2c/busses/i2c-sis96x.c:45:
+#include <asm/io.h>

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#141: FILE: drivers/i2c/busses/i2c-sis96x.c:48:
+/*
+	HISTORY:

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#142: FILE: drivers/i2c/busses/i2c-sis96x.c:49:
+^I2003-05-11^I1.0.0 ^IUpdated from lm_sensors project for kernel 2.5$

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#183: FILE: drivers/i2c/busses/i2c-sis96x.c:90:
+static u16 sis96x_smbus_base = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:SPACING: space prohibited before semicolon
#187: FILE: drivers/i2c/busses/i2c-sis96x.c:94:
+	return inb(sis96x_smbus_base + reg) ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited before semicolon
#192: FILE: drivers/i2c/busses/i2c-sis96x.c:99:
+	outb(data, sis96x_smbus_base + reg) ;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#203: FILE: drivers/i2c/busses/i2c-sis96x.c:110:
+/* Execute a SMBus transaction.
+   int size is from SIS96x_QUICK to SIS96x_BLOCK_DATA

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#214: FILE: drivers/i2c/busses/i2c-sis96x.c:121:
+	if (((temp = sis96x_read(SMB_CNT)) & 0x03) != 0x00) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#215: FILE: drivers/i2c/busses/i2c-sis96x.c:122:
+	if (((temp = sis96x_read(SMB_CNT)) & 0x03) != 0x00) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPLIT_STRING: quoted string split across lines
#217: FILE: drivers/i2c/busses/i2c-sis96x.c:124:
+		dev_dbg(&sis96x_adapter.dev, "SMBus busy (0x%02x). "
+			"Resetting...\n", temp);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#223: FILE: drivers/i2c/busses/i2c-sis96x.c:130:
+		if (((temp = sis96x_read(SMB_CNT)) & 0x03) != 0x00) {

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#226: FILE: drivers/i2c/busses/i2c-sis96x.c:133:
+			return -1;
+		} else {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#267: FILE: drivers/i2c/busses/i2c-sis96x.c:174:
+	if ((temp = sis96x_read(SMB_STS))) {

WARNING:SPLIT_STRING: quoted string split across lines
#269: FILE: drivers/i2c/busses/i2c-sis96x.c:176:
+		dev_dbg(&sis96x_adapter.dev, "Failed reset at "
+			"end of transaction! (0x%02x)\n", temp);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#276: FILE: drivers/i2c/busses/i2c-sis96x.c:183:
+static s32 sis96x_access(struct i2c_adapter * adap, u16 addr,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#278: FILE: drivers/i2c/busses/i2c-sis96x.c:185:
+			 u8 command, int size, union i2c_smbus_data * data)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#280: FILE: drivers/i2c/busses/i2c-sis96x.c:187:
+{
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#310: FILE: drivers/i2c/busses/i2c-sis96x.c:217:
+^I^Isize = (size == I2C_SMBUS_PROC_CALL ? $

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#318: FILE: drivers/i2c/busses/i2c-sis96x.c:225:
+		return -1;
+		break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#323: FILE: drivers/i2c/busses/i2c-sis96x.c:230:
+		return -1;
+		break;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'size != SIS96x_PROC_CALL'
#329: FILE: drivers/i2c/busses/i2c-sis96x.c:236:
+	if ((size != SIS96x_PROC_CALL) &&
+		((read_write == I2C_SMBUS_WRITE) || (size == SIS96x_QUICK)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'read_write == I2C_SMBUS_WRITE'
#329: FILE: drivers/i2c/busses/i2c-sis96x.c:236:
+	if ((size != SIS96x_PROC_CALL) &&
+		((read_write == I2C_SMBUS_WRITE) || (size == SIS96x_QUICK)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'size == SIS96x_QUICK'
#329: FILE: drivers/i2c/busses/i2c-sis96x.c:236:
+	if ((size != SIS96x_PROC_CALL) &&
+		((read_write == I2C_SMBUS_WRITE) || (size == SIS96x_QUICK)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#330: FILE: drivers/i2c/busses/i2c-sis96x.c:237:
+	if ((size != SIS96x_PROC_CALL) &&
+		((read_write == I2C_SMBUS_WRITE) || (size == SIS96x_QUICK)))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#368: FILE: drivers/i2c/busses/i2c-sis96x.c:275:
+		.name	="unset",
 		     	^

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#372: FILE: drivers/i2c/busses/i2c-sis96x.c:279:
+static struct pci_device_id sis96x_ids[] __devinitdata = {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#373: FILE: drivers/i2c/busses/i2c-sis96x.c:280:
+static struct pci_device_id sis96x_ids[] __devinitdata = {
+

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#384: FILE: drivers/i2c/busses/i2c-sis96x.c:291:
+static int __devinit sis96x_probe(struct pci_dev *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#385: FILE: drivers/i2c/busses/i2c-sis96x.c:292:
+static int __devinit sis96x_probe(struct pci_dev *dev,
+				const struct pci_device_id *id)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#396: FILE: drivers/i2c/busses/i2c-sis96x.c:303:
+	if (PCI_CLASS_SERIAL_SMBUS != ww) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:SPLIT_STRING: quoted string split across lines
#404: FILE: drivers/i2c/busses/i2c-sis96x.c:311:
+		dev_err(&dev->dev, "SiS96x SMBus base address "
+			"not initialized!\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#408: FILE: drivers/i2c/busses/i2c-sis96x.c:315:
+	dev_info(&dev->dev, "SiS96x SMBus base address: 0x%04x\n",
+			sis96x_smbus_base);

WARNING:SPLIT_STRING: quoted string split across lines
#413: FILE: drivers/i2c/busses/i2c-sis96x.c:320:
+		dev_err(&dev->dev, "SMBus registers 0x%04x-0x%04x "
+			"already in use!\n", sis96x_smbus_base,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#424: FILE: drivers/i2c/busses/i2c-sis96x.c:331:
+	snprintf(sis96x_adapter.dev.name, DEVICE_NAME_SIZE,
+		"SiS96x SMBus adapter at 0x%04x", sis96x_smbus_base);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#426: FILE: drivers/i2c/busses/i2c-sis96x.c:333:
+	if ((retval = i2c_add_adapter(&sis96x_adapter))) {

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#435: FILE: drivers/i2c/busses/i2c-sis96x.c:342:
+static void __devexit sis96x_remove(struct pci_dev *dev)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#453: FILE: drivers/i2c/busses/i2c-sis96x.c:360:
+	printk(KERN_INFO "i2c-sis96x version %s\n", SIS96x_VERSION);

WARNING:LINE_SPACING: Missing a blank line after declarations
#482: FILE: drivers/pci/quirks.c:655:
+	u8 val = 0;
+	printk(KERN_INFO "Enabling SiS 96x SMBus.\n");

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#482: FILE: drivers/pci/quirks.c:655:
+	printk(KERN_INFO "Enabling SiS 96x SMBus.\n");

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#494: FILE: drivers/pci/quirks.c:667:
+static int __devinitdata sis_96x_compatible = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#494: FILE: drivers/pci/quirks.c:667:
+static int __devinitdata sis_96x_compatible = 0;

WARNING:MISPLACED_INIT: __devinitdata should be placed after sis_96x_compatible
#494: FILE: drivers/pci/quirks.c:667:
+static int __devinitdata sis_96x_compatible = 0;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#515: FILE: drivers/pci/quirks.c:713:
+	{ PCI_FIXUP_HEADER,	PCI_VENDOR_ID_SI,	PCI_DEVICE_ID_SI_503,		quirk_sis_503_smbus },

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#516: FILE: drivers/pci/quirks.c:714:
+	{ PCI_FIXUP_HEADER,	PCI_VENDOR_ID_SI,	PCI_DEVICE_ID_SI_645,		quirk_sis_96x_compatible },

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#517: FILE: drivers/pci/quirks.c:715:
+	{ PCI_FIXUP_HEADER,	PCI_VENDOR_ID_SI,	PCI_DEVICE_ID_SI_646,		quirk_sis_96x_compatible },

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#518: FILE: drivers/pci/quirks.c:716:
+	{ PCI_FIXUP_HEADER,	PCI_VENDOR_ID_SI,	PCI_DEVICE_ID_SI_648,		quirk_sis_96x_compatible },

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#519: FILE: drivers/pci/quirks.c:717:
+	{ PCI_FIXUP_HEADER,	PCI_VENDOR_ID_SI,	PCI_DEVICE_ID_SI_650,		quirk_sis_96x_compatible },

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#520: FILE: drivers/pci/quirks.c:718:
+	{ PCI_FIXUP_HEADER,	PCI_VENDOR_ID_SI,	PCI_DEVICE_ID_SI_651,		quirk_sis_96x_compatible },

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#521: FILE: drivers/pci/quirks.c:719:
+	{ PCI_FIXUP_HEADER,	PCI_VENDOR_ID_SI,	PCI_DEVICE_ID_SI_961,		quirk_sis_96x_smbus },

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#522: FILE: drivers/pci/quirks.c:720:
+	{ PCI_FIXUP_HEADER,	PCI_VENDOR_ID_SI,	PCI_DEVICE_ID_SI_962,		quirk_sis_96x_smbus },

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#523: FILE: drivers/pci/quirks.c:721:
+	{ PCI_FIXUP_HEADER,	PCI_VENDOR_ID_SI,	PCI_DEVICE_ID_SI_963,		quirk_sis_96x_smbus },

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000368890.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 17 errors, 36 warnings, 10 checks, 481 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000368890.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
