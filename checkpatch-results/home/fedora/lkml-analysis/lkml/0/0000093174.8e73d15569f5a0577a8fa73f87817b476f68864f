WARNING:TYPO_SPELLING: 'independant' may be misspelled - perhaps 'independent'?
#26: 
-mm for independant reasons.
        ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
    that doesn't support polling will block forever.  This may be unfortunate,

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#41: 
### Comments for Changeset

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#127: FILE: fs/sysfs/file.c:82:
+	struct sysfs_dirent * sd = dentry->d_fsdata;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#157: FILE: fs/sysfs/file.c:383:
+static unsigned int sysfs_poll(struct file *filp, poll_table *wait)
                                             ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#159: FILE: fs/sysfs/file.c:385:
+	struct sysfs_buffer * buffer = filp->private_data;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#160: FILE: fs/sysfs/file.c:386:
+	struct kobject * kobj = to_kobj(filp->f_dentry->d_parent);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#161: FILE: fs/sysfs/file.c:387:
+	struct sysfs_dirent * sd = filp->f_dentry->d_fsdata;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#164: FILE: fs/sysfs/file.c:390:
+	poll_wait(filp, &kobj->poll, wait);
 	          ^^^^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#167: FILE: fs/sysfs/file.c:393:
+		res = POLLERR|POLLPRI;
 		             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#174: FILE: fs/sysfs/file.c:400:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#175: FILE: fs/sysfs/file.c:401:
+static struct dentry *step_down(struct dentry *dir, const char * name)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#177: FILE: fs/sysfs/file.c:403:
+	struct dentry * de;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dir"
#179: FILE: fs/sysfs/file.c:405:
+	if (dir == NULL || dir->d_inode == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dir->d_inode"
#179: FILE: fs/sysfs/file.c:405:
+	if (dir == NULL || dir->d_inode == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!de->d_inode"
#188: FILE: fs/sysfs/file.c:414:
+	if (de->d_inode == NULL) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#195: FILE: fs/sysfs/file.c:421:
+void sysfs_notify(struct kobject * k, char *dir, char *attr)

WARNING:LINE_SPACING: Missing a blank line after declarations
#198: FILE: fs/sysfs/file.c:424:
+	struct dentry *de = k->dentry;
+	if (de)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#205: FILE: fs/sysfs/file.c:431:
+		struct sysfs_dirent * sd = de->d_fsdata;

WARNING:LINE_SPACING: Missing a blank line after declarations
#206: FILE: fs/sysfs/file.c:432:
+		struct sysfs_dirent * sd = de->d_fsdata;
+		if (sd)

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#232: FILE: fs/sysfs/sysfs.h:14:
+extern struct sysfs_dirent *sysfs_find(struct sysfs_dirent *dir, const char * name);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#232: FILE: fs/sysfs/sysfs.h:14:
+extern struct sysfs_dirent *sysfs_find(struct sysfs_dirent *dir, const char * name);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#272: FILE: include/linux/sysfs.h:153:
+void sysfs_notify(struct kobject * k, char *dir, char *attr);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#280: FILE: include/linux/sysfs.h:232:
+static inline void sysfs_notify(struct kobject * k, char *dir, char *attr)

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000093174.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 14 warnings, 6 checks, 177 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000093174.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
