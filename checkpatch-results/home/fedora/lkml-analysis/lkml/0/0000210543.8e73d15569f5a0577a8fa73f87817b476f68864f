WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#71: FILE: drivers/i2c/chips/Kconfig:374:
+config SENSORS_M41T00
+	tristate "ST M41T00 RTC chip"
+	depends on I2C && PPC32
+	help
+	  If you say yes here you get support for the ST M41T00 RTC chip.
+
+	  This driver can also be built as a module.  If so, the module
+	  will be called i2c-m41t00.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#96: FILE: drivers/i2c/chips/m41t00.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#97: FILE: drivers/i2c/chips/m41t00.c:2:
+ * drivers/i2c/chips/m41t00.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:TYPO_SPELLING: 'recommened' may be misspelled - perhaps 'recommended'?
#112: FILE: drivers/i2c/chips/m41t00.c:17:
+ * recommened in .../Documentation/i2c/writing-clients section
    ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#154: FILE: drivers/i2c/chips/m41t00.c:59:
+	if (((sec = i2c_smbus_read_byte_data(save_client, 0)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#155: FILE: drivers/i2c/chips/m41t00.c:60:
+	if (((sec = i2c_smbus_read_byte_data(save_client, 0)) < 0)
+		|| ((min  = i2c_smbus_read_byte_data(save_client, 1)) < 0)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#156: FILE: drivers/i2c/chips/m41t00.c:61:
+		|| ((min  = i2c_smbus_read_byte_data(save_client, 1)) < 0)
+		|| ((hour = i2c_smbus_read_byte_data(save_client, 2)) < 0)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#157: FILE: drivers/i2c/chips/m41t00.c:62:
+		|| ((hour = i2c_smbus_read_byte_data(save_client, 2)) < 0)
+		|| ((day  = i2c_smbus_read_byte_data(save_client, 4)) < 0)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#158: FILE: drivers/i2c/chips/m41t00.c:63:
+		|| ((day  = i2c_smbus_read_byte_data(save_client, 4)) < 0)
+		|| ((mon  = i2c_smbus_read_byte_data(save_client, 5)) < 0)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#159: FILE: drivers/i2c/chips/m41t00.c:64:
+		|| ((mon  = i2c_smbus_read_byte_data(save_client, 5)) < 0)
+		|| ((year = i2c_smbus_read_byte_data(save_client, 6)) < 0)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#160: FILE: drivers/i2c/chips/m41t00.c:65:
+		|| ((year = i2c_smbus_read_byte_data(save_client, 6)) < 0)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#162: FILE: drivers/i2c/chips/m41t00.c:67:
+		sec = min = hour = day = mon = year = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#165: FILE: drivers/i2c/chips/m41t00.c:70:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#205: FILE: drivers/i2c/chips/m41t00.c:110:
+	if ((i2c_smbus_write_byte_data(save_client, 0, tm.tm_sec & 0x7f) < 0)
+		|| (i2c_smbus_write_byte_data(save_client, 1, tm.tm_min & 0x7f)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#207: FILE: drivers/i2c/chips/m41t00.c:112:
+			< 0)
+		|| (i2c_smbus_write_byte_data(save_client, 2, tm.tm_hour & 0x7f)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#209: FILE: drivers/i2c/chips/m41t00.c:114:
+			< 0)
+		|| (i2c_smbus_write_byte_data(save_client, 4, tm.tm_mday & 0x7f)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#211: FILE: drivers/i2c/chips/m41t00.c:116:
+			< 0)
+		|| (i2c_smbus_write_byte_data(save_client, 5, tm.tm_mon & 0x7f)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#213: FILE: drivers/i2c/chips/m41t00.c:118:
+			< 0)
+		|| (i2c_smbus_write_byte_data(save_client, 6, tm.tm_year & 0x7f)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#216: FILE: drivers/i2c/chips/m41t00.c:121:
+		dev_warn(&save_client->dev,"m41t00: can't write to rtc chip\n");
 		                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:RETURN_VOID: void function return statements are not generally useful
#220: FILE: drivers/i2c/chips/m41t00.c:125:
+	return;
+}

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#246: FILE: drivers/i2c/chips/m41t00.c:151:
+static int __devinit

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*drv_data)...) over kmalloc(sizeof(struct m41t00_data)...)
#253: FILE: drivers/i2c/chips/m41t00.c:158:
+	drv_data = kmalloc(sizeof(struct m41t00_data), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#268: FILE: drivers/i2c/chips/m41t00.c:173:
+	if ((rc = i2c_attach_client(new_client)) != 0) {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#277: FILE: drivers/i2c/chips/m41t00.c:182:
+static int __devinit

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#283: FILE: drivers/i2c/chips/m41t00.c:188:
+static int __devexit

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#301: FILE: drivers/i2c/chips/m41t00.c:206:
+static int __devinit

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#307: FILE: drivers/i2c/chips/m41t00.c:212:
+static void __devexit

WARNING:RETURN_VOID: void function return statements are not generally useful
#312: FILE: drivers/i2c/chips/m41t00.c:217:
+	return;
+}

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000210543.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 11 warnings, 13 checks, 244 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000210543.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
