WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#50: 
 filename="Re: Anyone successfully mounted the Minix3 filesystem from Linux?"

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sbi->s_version != MINIX_V3'
#103: FILE: fs/minix/inode.c:38:
+	if (!(sb->s_flags & MS_RDONLY) && (sbi->s_version != MINIX_V3)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 24)
#112: FILE: fs/minix/inode.c:121:
+			if (sbi->s_version != MINIX_V3)
+			mark_buffer_dirty(sbi->s_sbh);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (24, 24)
#119: FILE: fs/minix/inode.c:127:
+			if (sbi->s_version != MINIX_V3)
+			mark_buffer_dirty(sbi->s_sbh);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sbi->s_version !=
 INIX_V3'
#122: FILE: fs/minix/inode.c:130:
+		if (!(sbi->s_mount_state & MINIX_VALID_FS) && (sbi->s_version !=
MINIX_V3))

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#123: FILE: fs/minix/inode.c:130:
MINIX_V3))

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#124: FILE: fs/minix/inode.c:131:
+			printk ("MINIX-fs warning: remounting unchecked V%i fs, "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#124: FILE: fs/minix/inode.c:131:
+			printk ("MINIX-fs warning: remounting unchecked V%i fs, "

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#125: FILE: fs/minix/inode.c:132:
+			printk ("MINIX-fs warning: remounting unchecked V%i fs, "
+				"running fsck is recommended.\n", sbi->s_version);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#128: FILE: fs/minix/inode.c:134:
+			printk ("MINIX-fs warning: remounting  V%i fs with errors, "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#128: FILE: fs/minix/inode.c:134:
+			printk ("MINIX-fs warning: remounting  V%i fs with errors, "

WARNING:SPLIT_STRING: quoted string split across lines
#129: FILE: fs/minix/inode.c:135:
+			printk ("MINIX-fs warning: remounting  V%i fs with errors, "
+				"running fsck is recommended.\n", sbi->s_version);

ERROR:SPACING: space prohibited after that open parenthesis '('
#144: FILE: fs/minix/inode.c:203:
+	} else if ( *(__u16 *)(bh->b_data + 24) == MINIX3_SUPER_MAGIC) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#145: FILE: fs/minix/inode.c:204:
+	} else if ( *(__u16 *)(bh->b_data + 24) == MINIX3_SUPER_MAGIC) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#157: FILE: fs/minix/inode.c:216:
+			if ( *(__u16 *)(bh->b_data + 28) != 1024) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 32)
#158: FILE: fs/minix/inode.c:217:
+				if (!sb_set_blocksize(s,( *(__u16 *)(bh->b_data + 28))))
+ 				goto out_bad_hblock;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#158: FILE: fs/minix/inode.c:217:
+				if (!sb_set_blocksize(s,( *(__u16 *)(bh->b_data + 28))))
 				                       ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#158: FILE: fs/minix/inode.c:217:
+				if (!sb_set_blocksize(s,( *(__u16 *)(bh->b_data + 28))))

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: fs/minix/inode.c:218:
+ ^I^I^I^Igoto out_bad_hblock;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#159: FILE: fs/minix/inode.c:218:
+ ^I^I^I^Igoto out_bad_hblock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: fs/minix/inode.c:218:
+ ^I^I^I^Igoto out_bad_hblock;$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sbi->s_version != MINIX_V3'
#169: FILE: fs/minix/inode.c:262:
+	if (!(s->s_flags & MS_RDONLY) && (sbi->s_version != MINIX_V3)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sbi->s_version !=
MINIX_V3'
#179: FILE: fs/minix/inode.c:266:
+	if (!(sbi->s_mount_state & MINIX_VALID_FS) && (sbi->s_version !=
MINIX_V3))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#181: FILE: fs/minix/inode.c:267:
+		printk ("MINIX-fs: mounting unchecked  V%i file system, "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#181: FILE: fs/minix/inode.c:267:
+		printk ("MINIX-fs: mounting unchecked  V%i file system, "

WARNING:SPLIT_STRING: quoted string split across lines
#182: FILE: fs/minix/inode.c:268:
+		printk ("MINIX-fs: mounting unchecked  V%i file system, "
+			"running fsck is recommended.\n", sbi->s_version);

ERROR:CODE_INDENT: code indent should use tabs where possible
#183: FILE: fs/minix/inode.c:269:
+ ^Ielse if ((sbi->s_mount_state & MINIX_ERROR_FS) && (sbi->s_version !=$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#183: FILE: fs/minix/inode.c:269:
+ ^Ielse if ((sbi->s_mount_state & MINIX_ERROR_FS) && (sbi->s_version !=$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: fs/minix/inode.c:269:
+ ^Ielse if ((sbi->s_mount_state & MINIX_ERROR_FS) && (sbi->s_version !=$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#185: FILE: fs/minix/inode.c:270:
+		printk ("MINIX-fs: mounting  V%i file system with errors, "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#185: FILE: fs/minix/inode.c:270:
+		printk ("MINIX-fs: mounting  V%i file system with errors, "

WARNING:SPLIT_STRING: quoted string split across lines
#186: FILE: fs/minix/inode.c:271:
+		printk ("MINIX-fs: mounting  V%i file system with errors, "
+			"running fsck is recommended.\n", sbi->s_version);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#195: FILE: fs/minix/inode.c:300:
+		printk("VFS: Can't find a Minix V1|V2|V3 filesystem on device "

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000118055.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 21 warnings, 5 checks, 132 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000118055.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
