WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
> have been various live-locks on the writer side, the whole brlock thing is 

WARNING:TYPO_SPELLING: 'similiar' may be misspelled - perhaps 'similar'?
#39: 
and does something very similiar than the nonatomic version of the brlock, 
                        ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#62: FILE: include/linux/brslock.h:1:
+#ifndef __LINUX_BRSLOCK_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#73: FILE: include/linux/brslock.h:12:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#76: FILE: include/linux/brslock.h:15:
+ * $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#104: FILE: include/linux/brslock.h:43:
+extern void __brs_lock_usage_bug(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#105: FILE: include/linux/brslock.h:44:
+#define __brs_lock_idx_check(idx)	\
+	if (idx >= __BRS_END)		\
+		__brs_lock_usage_bug()

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'idx' may be better as '(idx)' to avoid precedence issues
#105: FILE: include/linux/brslock.h:44:
+#define __brs_lock_idx_check(idx)	\
+	if (idx >= __BRS_END)		\
+		__brs_lock_usage_bug()

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#118: FILE: include/linux/brslock.h:57:
+	(((sizeof(struct brs_lock)*__BRS_END + SMP_CACHE_BYTES-1) & ~(SMP_CACHE_BYTES-1)) / sizeof(struct brs_lock))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#118: FILE: include/linux/brslock.h:57:
+	(((sizeof(struct brs_lock)*__BRS_END + SMP_CACHE_BYTES-1) & ~(SMP_CACHE_BYTES-1)) / sizeof(struct brs_lock))
 	                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#118: FILE: include/linux/brslock.h:57:
+	(((sizeof(struct brs_lock)*__BRS_END + SMP_CACHE_BYTES-1) & ~(SMP_CACHE_BYTES-1)) / sizeof(struct brs_lock))
 	                                                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#118: FILE: include/linux/brslock.h:57:
+	(((sizeof(struct brs_lock)*__BRS_END + SMP_CACHE_BYTES-1) & ~(SMP_CACHE_BYTES-1)) / sizeof(struct brs_lock))
 	                                                                             ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#123: FILE: include/linux/brslock.h:62:
+extern void __brs_read_lock_sync(enum brslock_indices idx);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#124: FILE: include/linux/brslock.h:63:
+extern void __brs_read_sync(enum brslock_indices idx);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#125: FILE: include/linux/brslock.h:64:
+extern void __brs_write_lock_sync(enum brslock_indices idx);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#126: FILE: include/linux/brslock.h:65:
+extern void __brs_write_unlock_sync(enum brslock_indices idx);

WARNING:MEMORY_BARRIER: memory barrier without comment
#131: FILE: include/linux/brslock.h:70:
+	mb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#142: FILE: include/linux/brslock.h:81:
+	mb();

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#232: FILE: lib/brslock.c:1:
+/*

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#244: FILE: lib/brslock.c:13:
+spinlock_t __brs_write_locks[__BRS_END];

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#259: FILE: lib/brslock.c:28:
+		for (i = 0, j = 1; i < NR_CPUS; j <<= 1, i++) {

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#272: FILE: lib/brslock.c:41:
+	for (i = 0; i < NR_CPUS; i++)

WARNING:MEMORY_BARRIER: memory barrier without comment
#274: FILE: lib/brslock.c:43:
+	mb();

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#282: FILE: lib/brslock.c:51:
+	for (i = 0; i < NR_CPUS; i++)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000386908.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 11 warnings, 10 checks, 218 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000386908.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
