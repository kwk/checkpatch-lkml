WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#41: 
#include <stdio.h>

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#42: 
#include <signal.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#43: 
#include <asm/ldt.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#44: 
#include <asm/segment.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#45: 
#include <sys/types.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#46: 
#include <unistd.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#47: 
#include <sys/mman.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
#include <sched.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
#define __KERNEL__

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
#include <asm/page.h>

WARNING:TYPO_SPELLING: 'useable' may be misspelled - perhaps 'usable'?
#69: 
		desc.useable = 1;
		     ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'useable' may be misspelled - perhaps 'usable'?
#105: 
        desc.useable = 1;
             ^^^^^^^

WARNING:TYPO_SPELLING: 'useable' may be misspelled - perhaps 'usable'?
#136: 
        desc.useable = 1;
             ^^^^^^^

WARNING:TYPO_SPELLING: 'useable' may be misspelled - perhaps 'usable'?
#160: 
		desc.useable = 1;
		     ^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#191: FILE: arch/i386/kernel/kprobes.c:158:
+ ^Iunsigned seg = regs->xcs & 0xffff;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#191: FILE: arch/i386/kernel/kprobes.c:158:
+ ^Iunsigned seg = regs->xcs & 0xffff;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: arch/i386/kernel/kprobes.c:158:
+ ^Iunsigned seg = regs->xcs & 0xffff;$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#191: FILE: arch/i386/kernel/kprobes.c:158:
+ 	unsigned seg = regs->xcs & 0xffff;

ERROR:CODE_INDENT: code indent should use tabs where possible
#209: FILE: arch/i386/kernel/kprobes.c:161:
+         /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#210: FILE: arch/i386/kernel/kprobes.c:162:
+ ^I * Must form address for V8086 mode and rule this out before testing$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#210: FILE: arch/i386/kernel/kprobes.c:162:
+ ^I * Must form address for V8086 mode and rule this out before testing$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#210: FILE: arch/i386/kernel/kprobes.c:162:
+         /*
+ 	 * Must form address for V8086 mode and rule this out before testing

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: arch/i386/kernel/kprobes.c:163:
+ ^I * for LDT code segment.  Reading the base address from the LDT entry$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#211: FILE: arch/i386/kernel/kprobes.c:163:
+ ^I * for LDT code segment.  Reading the base address from the LDT entry$

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: arch/i386/kernel/kprobes.c:164:
+ ^I * requires getting the mm->context semaphore in the case of a shared$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#212: FILE: arch/i386/kernel/kprobes.c:164:
+ ^I * requires getting the mm->context semaphore in the case of a shared$

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: arch/i386/kernel/kprobes.c:165:
+ ^I * address space.  Since this could sleep, we have to temporarily$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#213: FILE: arch/i386/kernel/kprobes.c:165:
+ ^I * address space.  Since this could sleep, we have to temporarily$

ERROR:CODE_INDENT: code indent should use tabs where possible
#214: FILE: arch/i386/kernel/kprobes.c:166:
+ ^I * re-enable IRQs.  This is ok, since this is only done in the LDT$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#214: FILE: arch/i386/kernel/kprobes.c:166:
+ ^I * re-enable IRQs.  This is ok, since this is only done in the LDT$

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: arch/i386/kernel/kprobes.c:167:
+ ^I * CS case, and only userspace can run with LDT code segments.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#215: FILE: arch/i386/kernel/kprobes.c:167:
+ ^I * CS case, and only userspace can run with LDT code segments.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: arch/i386/kernel/kprobes.c:168:
+  ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#216: FILE: arch/i386/kernel/kprobes.c:168:
+  ^I */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#217: FILE: arch/i386/kernel/kprobes.c:169:
+ ^Iif (regs->eflags & VM_MASK) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#217: FILE: arch/i386/kernel/kprobes.c:169:
+ ^Iif (regs->eflags & VM_MASK) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: arch/i386/kernel/kprobes.c:169:
+ ^Iif (regs->eflags & VM_MASK) {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#218: FILE: arch/i386/kernel/kprobes.c:170:
+ ^I^Iaddr = (kprobe_opcode_t *)(((seg << 4) + regs->eip - $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: arch/i386/kernel/kprobes.c:170:
+ ^I^Iaddr = (kprobe_opcode_t *)(((seg << 4) + regs->eip - $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#218: FILE: arch/i386/kernel/kprobes.c:170:
+ ^I^Iaddr = (kprobe_opcode_t *)(((seg << 4) + regs->eip - $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: arch/i386/kernel/kprobes.c:170:
+ ^I^Iaddr = (kprobe_opcode_t *)(((seg << 4) + regs->eip - $

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: arch/i386/kernel/kprobes.c:171:
+ ^I^I^Isizeof(kprobe_opcode_t)) & 0xffff);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#219: FILE: arch/i386/kernel/kprobes.c:171:
+ ^I^I^Isizeof(kprobe_opcode_t)) & 0xffff);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: arch/i386/kernel/kprobes.c:171:
+ ^I^I^Isizeof(kprobe_opcode_t)) & 0xffff);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: arch/i386/kernel/kprobes.c:172:
+ ^I} else if (segment_from_ldt(seg) && (current->mm)) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#220: FILE: arch/i386/kernel/kprobes.c:172:
+ ^I} else if (segment_from_ldt(seg) && (current->mm)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: arch/i386/kernel/kprobes.c:172:
+ ^I} else if (segment_from_ldt(seg) && (current->mm)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: arch/i386/kernel/kprobes.c:173:
+  ^I^Istruct desc_struct *desc;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#221: FILE: arch/i386/kernel/kprobes.c:173:
+  ^I^Istruct desc_struct *desc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: arch/i386/kernel/kprobes.c:173:
+  ^I^Istruct desc_struct *desc;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#222: FILE: arch/i386/kernel/kprobes.c:174:
+ ^I^Ilocal_irq_enable();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#222: FILE: arch/i386/kernel/kprobes.c:174:
+ ^I^Ilocal_irq_enable();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: arch/i386/kernel/kprobes.c:174:
+ ^I^Ilocal_irq_enable();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#223: FILE: arch/i386/kernel/kprobes.c:175:
+ ^I^Idown(&current->mm->context.sem);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#223: FILE: arch/i386/kernel/kprobes.c:175:
+ ^I^Idown(&current->mm->context.sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: arch/i386/kernel/kprobes.c:175:
+ ^I^Idown(&current->mm->context.sem);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#224: FILE: arch/i386/kernel/kprobes.c:176:
+ ^I^Idesc = &current->mm->context.ldt[segment_index(seg)];$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#224: FILE: arch/i386/kernel/kprobes.c:176:
+ ^I^Idesc = &current->mm->context.ldt[segment_index(seg)];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: arch/i386/kernel/kprobes.c:176:
+ ^I^Idesc = &current->mm->context.ldt[segment_index(seg)];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#225: FILE: arch/i386/kernel/kprobes.c:177:
+  ^I^Iaddr = (kprobe_opcode_t *) (get_desc_base(desc) + regs->eip -$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#225: FILE: arch/i386/kernel/kprobes.c:177:
+  ^I^Iaddr = (kprobe_opcode_t *) (get_desc_base(desc) + regs->eip -$

CHECK:SPACING: No space is necessary after a cast
#225: FILE: arch/i386/kernel/kprobes.c:177:
+  		addr = (kprobe_opcode_t *) (get_desc_base(desc) + regs->eip -

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: arch/i386/kernel/kprobes.c:177:
+  ^I^Iaddr = (kprobe_opcode_t *) (get_desc_base(desc) + regs->eip -$

ERROR:CODE_INDENT: code indent should use tabs where possible
#226: FILE: arch/i386/kernel/kprobes.c:178:
+  ^I^I^I^I^I^Isizeof(kprobe_opcode_t));$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#226: FILE: arch/i386/kernel/kprobes.c:178:
+  ^I^I^I^I^I^Isizeof(kprobe_opcode_t));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: arch/i386/kernel/kprobes.c:178:
+  ^I^I^I^I^I^Isizeof(kprobe_opcode_t));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#227: FILE: arch/i386/kernel/kprobes.c:179:
+ ^I^Iup(&current->mm->context.sem);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#227: FILE: arch/i386/kernel/kprobes.c:179:
+ ^I^Iup(&current->mm->context.sem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: arch/i386/kernel/kprobes.c:179:
+ ^I^Iup(&current->mm->context.sem);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#228: FILE: arch/i386/kernel/kprobes.c:180:
+ ^I^Ilocal_irq_disable();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#228: FILE: arch/i386/kernel/kprobes.c:180:
+ ^I^Ilocal_irq_disable();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: arch/i386/kernel/kprobes.c:180:
+ ^I^Ilocal_irq_disable();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#229: FILE: arch/i386/kernel/kprobes.c:181:
+  ^I} else {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#229: FILE: arch/i386/kernel/kprobes.c:181:
+  ^I} else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: arch/i386/kernel/kprobes.c:181:
+  ^I} else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#230: FILE: arch/i386/kernel/kprobes.c:182:
+  ^I^Iaddr = (kprobe_opcode_t *)(regs->eip - sizeof(kprobe_opcode_t));$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#230: FILE: arch/i386/kernel/kprobes.c:182:
+  ^I^Iaddr = (kprobe_opcode_t *)(regs->eip - sizeof(kprobe_opcode_t));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: arch/i386/kernel/kprobes.c:182:
+  ^I^Iaddr = (kprobe_opcode_t *)(regs->eip - sizeof(kprobe_opcode_t));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#231: FILE: arch/i386/kernel/kprobes.c:183:
+  ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#231: FILE: arch/i386/kernel/kprobes.c:183:
+  ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: arch/i386/kernel/kprobes.c:183:
+  ^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: arch/i386/kernel/kprobes.c:184:
+ ^I/* We're in an interrupt, but this is clear and BUG()-safe. */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#232: FILE: arch/i386/kernel/kprobes.c:184:
+ ^I/* We're in an interrupt, but this is clear and BUG()-safe. */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: arch/i386/kernel/kprobes.c:184:
+ ^I/* We're in an interrupt, but this is clear and BUG()-safe. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#233: FILE: arch/i386/kernel/kprobes.c:185:
+ ^Ipreempt_disable();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#233: FILE: arch/i386/kernel/kprobes.c:185:
+ ^Ipreempt_disable();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: arch/i386/kernel/kprobes.c:185:
+ ^Ipreempt_disable();$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#234: FILE: arch/i386/kernel/kprobes.c:186:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: arch/i386/kernel/kprobes.c:186:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#235: FILE: arch/i386/kernel/kprobes.c:187:
+  ^I/* Check we're not actually recursing */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#235: FILE: arch/i386/kernel/kprobes.c:187:
+  ^I/* Check we're not actually recursing */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: arch/i386/kernel/kprobes.c:187:
+  ^I/* Check we're not actually recursing */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: arch/i386/kernel/kprobes.c:188:
+  ^Iif (kprobe_running()) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#236: FILE: arch/i386/kernel/kprobes.c:188:
+  ^Iif (kprobe_running()) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: arch/i386/kernel/kprobes.c:188:
+  ^Iif (kprobe_running()) {$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000159488.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 30 errors, 64 warnings, 1 checks, 52 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000159488.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
