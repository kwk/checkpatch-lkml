WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
Content-Type: text/plain; name=oprofile-callgraph-common; charset=ISO-8859-1

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#71: FILE: drivers/oprofile/oprofile_files.c:21:
+static ssize_t depth_read(struct file * file, char * buf, size_t count, loff_t * offset)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#71: FILE: drivers/oprofile/oprofile_files.c:21:
+static ssize_t depth_read(struct file * file, char * buf, size_t count, loff_t * offset)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#71: FILE: drivers/oprofile/oprofile_files.c:21:
+static ssize_t depth_read(struct file * file, char * buf, size_t count, loff_t * offset)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#76: FILE: drivers/oprofile/oprofile_files.c:26:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#76: FILE: drivers/oprofile/oprofile_files.c:26:
+
+ 

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: drivers/oprofile/oprofile_files.c:26:
+ $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#77: FILE: drivers/oprofile/oprofile_files.c:27:
+static ssize_t depth_write(struct file * file, char const * buf, size_t count, loff_t * offset)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#77: FILE: drivers/oprofile/oprofile_files.c:27:
+static ssize_t depth_write(struct file * file, char const * buf, size_t count, loff_t * offset)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#77: FILE: drivers/oprofile/oprofile_files.c:27:
+static ssize_t depth_write(struct file * file, char const * buf, size_t count, loff_t * offset)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#88: FILE: drivers/oprofile/oprofile_files.c:38:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: drivers/oprofile/oprofile_files.c:38:
+  $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#96: FILE: drivers/oprofile/oprofile_files.c:46:
+
+

WARNING:CONST_STRUCT: struct file_operations should normally be const
#97: FILE: drivers/oprofile/oprofile_files.c:47:
+static struct file_operations depth_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#119: FILE: drivers/oprofile/oprofile_files.c:81:
+static ssize_t enable_write(struct file * file, char const __user * buf, size_t count, loff_t * offset)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#119: FILE: drivers/oprofile/oprofile_files.c:81:
+static ssize_t enable_write(struct file * file, char const __user * buf, size_t count, loff_t * offset)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#119: FILE: drivers/oprofile/oprofile_files.c:81:
+static ssize_t enable_write(struct file * file, char const __user * buf, size_t count, loff_t * offset)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#119: FILE: drivers/oprofile/oprofile_files.c:81:
+static ssize_t enable_write(struct file * file, char const __user * buf, size_t count, loff_t * offset)

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#128: FILE: drivers/oprofile/oprofile_files.c:110:
+static ssize_t dump_write(struct file * file, char const __user * buf, size_t count, loff_t * offset)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#128: FILE: drivers/oprofile/oprofile_files.c:110:
+static ssize_t dump_write(struct file * file, char const __user * buf, size_t count, loff_t * offset)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#128: FILE: drivers/oprofile/oprofile_files.c:110:
+static ssize_t dump_write(struct file * file, char const __user * buf, size_t count, loff_t * offset)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#128: FILE: drivers/oprofile/oprofile_files.c:110:
+static ssize_t dump_write(struct file * file, char const __user * buf, size_t count, loff_t * offset)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#188: FILE: include/linux/oprofile.h:51:
+void oprofile_arch_init(struct oprofile_operations * ops);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#201: FILE: include/linux/oprofile.h:65:
+ * backtrace. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#222: FILE: drivers/oprofile/cpu_buffer.c:25:
+#include "event_buffer.h" $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#239: FILE: drivers/oprofile/cpu_buffer.c:121:
+void cpu_buffer_reset(struct oprofile_cpu_buffer * cpu_buf)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#249: FILE: drivers/oprofile/cpu_buffer.c:131:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#265: FILE: drivers/oprofile/cpu_buffer.c:160:
 
+

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#267: FILE: drivers/oprofile/cpu_buffer.c:162:
+inline static void

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#268: FILE: drivers/oprofile/cpu_buffer.c:163:
+add_sample(struct oprofile_cpu_buffer * cpu_buf,

ERROR:CODE_INDENT: code indent should use tabs where possible
#269: FILE: drivers/oprofile/cpu_buffer.c:164:
+           unsigned long pc, unsigned long event)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: drivers/oprofile/cpu_buffer.c:164:
+           unsigned long pc, unsigned long event)$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#271: FILE: drivers/oprofile/cpu_buffer.c:166:
+	struct op_sample * entry = &cpu_buf->buffer[cpu_buf->head_pos];

WARNING:LINE_SPACING: Missing a blank line after declarations
#272: FILE: drivers/oprofile/cpu_buffer.c:167:
+	struct op_sample * entry = &cpu_buf->buffer[cpu_buf->head_pos];
+	entry->eip = pc;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#277: FILE: drivers/oprofile/cpu_buffer.c:172:
+
+

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#278: FILE: drivers/oprofile/cpu_buffer.c:173:
+inline static void

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#279: FILE: drivers/oprofile/cpu_buffer.c:174:
+add_code(struct oprofile_cpu_buffer * buffer, unsigned long value)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#284: FILE: drivers/oprofile/cpu_buffer.c:179:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#297: FILE: drivers/oprofile/cpu_buffer.c:189:
+static int log_sample(struct oprofile_cpu_buffer * cpu_buf, unsigned long pc,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#343: FILE: drivers/oprofile/cpu_buffer.c:221:
+static int oprofile_begin_trace(struct oprofile_cpu_buffer * cpu_buf)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#357: FILE: drivers/oprofile/cpu_buffer.c:233:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#358: FILE: drivers/oprofile/cpu_buffer.c:234:
+static void oprofile_end_trace(struct oprofile_cpu_buffer * cpu_buf)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#369: FILE: drivers/oprofile/cpu_buffer.c:239:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#372: FILE: drivers/oprofile/cpu_buffer.c:242:
+	struct oprofile_cpu_buffer * cpu_buf = &cpu_buffer[smp_processor_id()];

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#385: FILE: drivers/oprofile/cpu_buffer.c:255:
+	 * of this event */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#391: FILE: drivers/oprofile/cpu_buffer.c:261:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#394: FILE: drivers/oprofile/cpu_buffer.c:264:
+	struct oprofile_cpu_buffer * cpu_buf = &cpu_buffer[smp_processor_id()];

WARNING:LINE_SPACING: Missing a blank line after declarations
#395: FILE: drivers/oprofile/cpu_buffer.c:265:
+	struct oprofile_cpu_buffer * cpu_buf = &cpu_buffer[smp_processor_id()];
+	log_sample(cpu_buf, pc, is_kernel, event);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#398: FILE: drivers/oprofile/cpu_buffer.c:268:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#401: FILE: drivers/oprofile/cpu_buffer.c:271:
+	struct oprofile_cpu_buffer * cpu_buf = &cpu_buffer[smp_processor_id()];

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#413: FILE: drivers/oprofile/cpu_buffer.c:283:
+	 * abort the trace if we get it */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#424: FILE: drivers/oprofile/cpu_buffer.c:294:
 
+

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#449: FILE: drivers/oprofile/oprof.c:48:
+	if (oprofile_ops.setup && (err = oprofile_ops.setup()))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#469: FILE: drivers/oprofile/oprof.c:93:
+	if ((err = oprofile_ops.start()))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#489: FILE: drivers/oprofile/oprof.c:123:
+^I^Ioprofile_ops.shutdown(); $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#535: FILE: drivers/oprofile/oprof.c:154:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#536: FILE: drivers/oprofile/oprof.c:155:
+extern void timer_init(struct oprofile_operations * ops);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#545: FILE: drivers/oprofile/oprof.c:164:
+	if (timer) {
[...]
 	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#546: FILE: drivers/oprofile/oprof.c:165:
+		printk(KERN_INFO "oprofile: using timer interrupt.\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#605: FILE: drivers/oprofile/buffer_sync.c:305:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#614: FILE: drivers/oprofile/buffer_sync.c:313:
+static int add_us_sample(struct mm_struct * mm, struct op_sample * s)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#614: FILE: drivers/oprofile/buffer_sync.c:313:
+static int add_us_sample(struct mm_struct * mm, struct op_sample * s)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#642: FILE: drivers/oprofile/buffer_sync.c:341:
+add_sample(struct mm_struct * mm, struct op_sample * s, int in_kernel)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#642: FILE: drivers/oprofile/buffer_sync.c:341:
+add_sample(struct mm_struct * mm, struct op_sample * s, int in_kernel)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#686: FILE: drivers/oprofile/buffer_sync.c:473:
+typedef enum {

ERROR:CODE_INDENT: code indent should use tabs where possible
#754: FILE: drivers/oprofile/timer_int.c:20:
+ ^Ioprofile_add_sample(regs, 0);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#754: FILE: drivers/oprofile/timer_int.c:20:
+ ^Ioprofile_add_sample(regs, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#754: FILE: drivers/oprofile/timer_int.c:20:
+ ^Ioprofile_add_sample(regs, 0);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#770: FILE: drivers/oprofile/timer_int.c:36:
+void __init timer_init(struct oprofile_operations * ops)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#787: FILE: drivers/oprofile/oprofile_stats.c:63:
+		oprofilefs_create_ro_ulong(sb, cpudir, "backtrace_aborted",
+			&cpu_buf->backtrace_aborted);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#796: FILE: drivers/oprofile/oprofile_stats.c:73:
+	oprofilefs_create_ro_atomic(sb, dir, "bt_lost_no_mapping",
+		&oprofile_stats.bt_lost_no_mapping);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000232527.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 39 errors, 17 warnings, 15 checks, 685 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000232527.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
