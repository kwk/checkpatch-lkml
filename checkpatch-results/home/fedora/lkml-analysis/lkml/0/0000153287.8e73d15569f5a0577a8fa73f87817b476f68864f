WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: drivers/w1/w1.c:91:
+      struct w1_slave *sl = dev_to_w1_slave(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: drivers/w1/w1.c:93:
+      return sprintf(buf, "%s\n", sl->name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: drivers/w1/w1.c:98:
+      struct w1_slave *sl = kobj_to_w1_slave(kobj);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: drivers/w1/w1.c:100:
+      atomic_inc(&sl->refcnt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: drivers/w1/w1.c:101:
+      if (off > 8) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 14)
#96: FILE: drivers/w1/w1.c:101:
+      if (off > 8) {
+              count = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#97: FILE: drivers/w1/w1.c:102:
+              count = 0;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: drivers/w1/w1.c:102:
+              count = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: drivers/w1/w1.c:112:
+  }$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#118: FILE: drivers/w1/w1.c:115:
+	__ATTR(name, S_IRUGO, w1_slave_read_name, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: drivers/w1/w1.c:118:
+      .attr = {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: drivers/w1/w1.c:119:
+              .name = "id",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: drivers/w1/w1.c:119:
+              .name = "id",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: drivers/w1/w1.c:120:
+              .mode = S_IRUGO,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: drivers/w1/w1.c:120:
+              .mode = S_IRUGO,$

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#123: FILE: drivers/w1/w1.c:120:
+              .mode = S_IRUGO,

ERROR:CODE_INDENT: code indent should use tabs where possible
#124: FILE: drivers/w1/w1.c:121:
+              .owner = THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: drivers/w1/w1.c:121:
+              .owner = THIS_MODULE,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: drivers/w1/w1.c:122:
+      },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: drivers/w1/w1.c:123:
+      .size = 8,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: drivers/w1/w1.c:124:
+      .read = w1_slave_read_id,$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#177: FILE: drivers/w1/w1.c:439:
+	if (sl->family->fops && sl->family->fops->add_slave &&

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:SPACING: Unnecessary space before function pointer name
#279: FILE: drivers/w1/w1_family.h:42:
+	int  (* add_slave)(struct w1_slave *);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#279: FILE: drivers/w1/w1_family.h:42:
+	int  (* add_slave)(struct w1_slave *);
 	      ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct w1_slave *' should also have an identifier name
#279: FILE: drivers/w1/w1_family.h:42:
+	int  (* add_slave)(struct w1_slave *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: Unnecessary space before function pointer name
#280: FILE: drivers/w1/w1_family.h:43:
+	void (* remove_slave)(struct w1_slave *);

ERROR:SPACING: space prohibited after that '*' (ctx:BxW)
#280: FILE: drivers/w1/w1_family.h:43:
+	void (* remove_slave)(struct w1_slave *);
 	      ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct w1_slave *' should also have an identifier name
#280: FILE: drivers/w1/w1_family.h:43:
+	void (* remove_slave)(struct w1_slave *);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#360: FILE: drivers/w1/w1_therm.c:50:
+		.mode = S_IRUGO,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000153287.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 22 warnings, 0 checks, 327 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000153287.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
