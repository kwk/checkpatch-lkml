CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#64: FILE: include/linux/sched.h:530:
+extern int schedstats_sysctl_handler(ctl_table *, int, struct file *,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ctl_table *' should also have an identifier name
#64: FILE: include/linux/sched.h:530:
+extern int schedstats_sysctl_handler(ctl_table *, int, struct file *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#64: FILE: include/linux/sched.h:530:
+extern int schedstats_sysctl_handler(ctl_table *, int, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#64: FILE: include/linux/sched.h:530:
+extern int schedstats_sysctl_handler(ctl_table *, int, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __user *' should also have an identifier name
#64: FILE: include/linux/sched.h:530:
+extern int schedstats_sysctl_handler(ctl_table *, int, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t *' should also have an identifier name
#64: FILE: include/linux/sched.h:530:
+extern int schedstats_sysctl_handler(ctl_table *, int, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#64: FILE: include/linux/sched.h:530:
+extern int schedstats_sysctl_handler(ctl_table *, int, struct file *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#65: FILE: include/linux/sched.h:531:
+extern int schedstats_sysctl_handler(ctl_table *, int, struct file *,
+					void __user *, size_t *, loff_t *);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#77: FILE: include/linux/sysctl.h:149:
+	KERN_SCHEDSTATS=71,	/* int: Schedstats on/off */
 	               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#90: FILE: kernel/sched.c:386:
+int schedstats_sysctl = 0;		/* schedstats turned off by default */

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#91: FILE: kernel/sched.c:387:
+static DEFINE_PER_CPU(int, schedstats) = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#100: FILE: kernel/sched.c:396:
+	for (i = 0; i < NR_CPUS; i++)

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#112: FILE: kernel/sched.c:408:
+__setup("schedstats", schedstats_setup_enable);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#114: FILE: kernel/sched.c:410:
+int schedstats_sysctl_handler(ctl_table *table, int write, struct file *filp,
                                                                         ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#115: FILE: kernel/sched.c:411:
+int schedstats_sysctl_handler(ctl_table *table, int write, struct file *filp,
+			void __user *buffer, size_t *lenp, loff_t *ppos)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#120: FILE: kernel/sched.c:416:
+	ret = proc_dointvec(table, write, filp, buffer, lenp, ppos);
 	                                  ^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ret != 0'
#121: FILE: kernel/sched.c:417:
+	if ((ret != 0) || (prev == schedstats_sysctl))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'prev == schedstats_sysctl'
#121: FILE: kernel/sched.c:417:
+	if ((ret != 0) || (prev == schedstats_sysctl))

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#148: FILE: kernel/sched.c:443:
+		seq_printf(seq, "State Off\n");

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'field' may be better as '(field)' to avoid precedence issues
#161: FILE: kernel/sched.c:525:
+#define schedstat_inc(rq, field)	\
+do {					\
+	if (unlikely(schedstats_on))	\
+		(rq)->field++;		\
+} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'field' may be better as '(field)' to avoid precedence issues
#166: FILE: kernel/sched.c:530:
+#define schedstat_add(rq, field, amt)	\
+do {					\
+	if (unlikely(schedstats_on))	\
+		(rq)->field += (amt);	\
+} while (0)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#218: FILE: kernel/sysctl.c:664:
+		.maxlen		= sizeof (int),

WARNING:TYPO_SPELLING: 'dyanmically' may be misspelled - perhaps 'dynamically'?
#246: FILE: lib/Kconfig.debug:80:
+	  controlled dyanmically through the schedstats sysctl.
 	             ^^^^^^^^^^^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000100141.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 12 warnings, 8 checks, 180 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000100141.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
