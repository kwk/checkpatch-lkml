CHECK:SPACING: No space is necessary after a cast
#140: FILE: fs/ext2/ioctl.c:108:
+	ret = ext2_ioctl(inode, file, cmd, (unsigned long) compat_ptr(arg));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#223: FILE: fs/ext3/ioctl.c:303:
+	ret = ext3_ioctl(inode, file, cmd, (unsigned long) compat_ptr(arg));

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#334: FILE: fs/cifs/ioctl.c:21:
  *   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

CHECK:SPACING: No space is necessary after a cast
#367: FILE: fs/cifs/ioctl.c:134:
+	ret = cifs_ioctl(inode, file, cmd, (unsigned long) compat_ptr(arg));

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#412: FILE: fs/hfsplus/hfsplus_fs.h:341:
+long hfsplus_compat_ioctl(struct file *filp, unsigned int cmd,
                                        ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#413: FILE: fs/hfsplus/hfsplus_fs.h:342:
+long hfsplus_compat_ioctl(struct file *filp, unsigned int cmd,
+		  unsigned long arg);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#458: FILE: fs/hfsplus/ioctl.c:89:
+long hfsplus_compat_ioctl(struct file *file, unsigned int cmd,
+				unsigned long arg)

CHECK:SPACING: No space is necessary after a cast
#474: FILE: fs/hfsplus/ioctl.c:105:
+	arg = (unsigned long) compat_ptr(arg);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#541: FILE: fs/reiserfs/ioctl.c:100:
+long reiserfs_compat_ioctl(struct file *file, unsigned int cmd,
+				unsigned long arg)

CHECK:SPACING: No space is necessary after a cast
#567: FILE: fs/reiserfs/ioctl.c:126:
+	ret = reiserfs_ioctl(inode, file, cmd, (unsigned long) compat_ptr(arg));

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#602: FILE: include/linux/reiserfs_fs.h:2183:
+long reiserfs_compat_ioctl(struct file *filp,
                                         ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#603: FILE: include/linux/reiserfs_fs.h:2184:
+long reiserfs_compat_ioctl(struct file *filp,
+		   unsigned int cmd, unsigned long arg);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#671: FILE: fs/cifs/cifsfs.h:100:
+extern long cifs_compat_ioctl(struct file * filep, unsigned int command,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#671: FILE: fs/cifs/cifsfs.h:100:
+extern long cifs_compat_ioctl(struct file * filep, unsigned int command,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#683: FILE: fs/ext2/ext2.h:140:
+extern long ext2_compat_ioctl(struct file *, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#683: FILE: fs/ext2/ext2.h:140:
+extern long ext2_compat_ioctl(struct file *, unsigned int, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#683: FILE: fs/ext2/ext2.h:140:
+extern long ext2_compat_ioctl(struct file *, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#683: FILE: fs/ext2/ext2.h:140:
+extern long ext2_compat_ioctl(struct file *, unsigned int, unsigned long);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#695: FILE: include/linux/ext3_fs.h:795:
+extern long ext3_compat_ioctl (struct file *, unsigned int, unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#695: FILE: include/linux/ext3_fs.h:795:
+extern long ext3_compat_ioctl (struct file *, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#695: FILE: include/linux/ext3_fs.h:795:
+extern long ext3_compat_ioctl (struct file *, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#695: FILE: include/linux/ext3_fs.h:795:
+extern long ext3_compat_ioctl (struct file *, unsigned int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#695: FILE: include/linux/ext3_fs.h:795:
+extern long ext3_compat_ioctl (struct file *, unsigned int, unsigned long);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000137834.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 9 warnings, 12 checks, 520 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000137834.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
