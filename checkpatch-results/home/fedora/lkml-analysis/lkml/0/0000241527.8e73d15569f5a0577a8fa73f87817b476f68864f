WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#38: FILE: aio.c:462:
+    if (req->ki_slow_iov)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#39: FILE: aio.c:463:
+        kfree(req->ki_slow_iov);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#39: FILE: aio.c:463:
+        kfree(req->ki_slow_iov);$

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#39: FILE: aio.c:463:
+    if (req->ki_slow_iov)
+        kfree(req->ki_slow_iov);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#48: FILE: aio.c:1318:
+aio_increment_iov(struct iovec **iov_ptr, unsigned long *nr_segs, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#49: FILE: aio.c:1318:
size_t nr_bytes)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#50: FILE: aio.c:1319:
+aio_increment_iov(struct iovec **iov_ptr, unsigned long *nr_segs, 
+{

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#51: FILE: aio.c:1320:
+    struct iovec *iov = *iov_ptr;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#52: FILE: aio.c:1321:
+    struct iovec *iov = *iov_ptr;
+    while (nr_bytes > 0) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#52: FILE: aio.c:1321:
+    while (nr_bytes > 0) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#53: FILE: aio.c:1322:
+        if (iov->iov_len <= nr_bytes) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#53: FILE: aio.c:1322:
+        if (iov->iov_len <= nr_bytes) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#53: FILE: aio.c:1322:
+        if (iov->iov_len <= nr_bytes) {
+            nr_bytes -= iov->iov_len;

ERROR:CODE_INDENT: code indent should use tabs where possible
#54: FILE: aio.c:1323:
+            nr_bytes -= iov->iov_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#54: FILE: aio.c:1323:
+            nr_bytes -= iov->iov_len;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#55: FILE: aio.c:1324:
+            iov++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#55: FILE: aio.c:1324:
+            iov++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#56: FILE: aio.c:1325:
+            (*nr_segs)--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#56: FILE: aio.c:1325:
+            (*nr_segs)--;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#57: FILE: aio.c:1326:
+        } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#57: FILE: aio.c:1326:
+        } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#57: FILE: aio.c:1326:
+        } else {
+            iov->iov_len -= nr_bytes;

ERROR:CODE_INDENT: code indent should use tabs where possible
#58: FILE: aio.c:1327:
+            iov->iov_len -= nr_bytes;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#58: FILE: aio.c:1327:
+            iov->iov_len -= nr_bytes;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#59: FILE: aio.c:1328:
+            iov->iov_base = (char*)iov->iov_base + nr_bytes;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: aio.c:1328:
+            iov->iov_base = (char*)iov->iov_base + nr_bytes;$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#59: FILE: aio.c:1328:
+            iov->iov_base = (char*)iov->iov_base + nr_bytes;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#60: FILE: aio.c:1329:
+            break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#60: FILE: aio.c:1329:
+            break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#61: FILE: aio.c:1330:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: aio.c:1330:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#62: FILE: aio.c:1331:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#63: FILE: aio.c:1332:
+    BUG_ON(*nr_segs >= 9999999);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#63: FILE: aio.c:1332:
+    BUG_ON(*nr_segs >= 9999999);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#64: FILE: aio.c:1333:
+    *iov_ptr = iov;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#76: FILE: aio.c:1346:
+     if (iocb->ki_nr_segs == 1) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 9)
#76: FILE: aio.c:1346:
+     if (iocb->ki_nr_segs == 1) {
+         ret = file->f_op->aio_read(iocb, iocb->ki_iov[0].iov_base,

ERROR:CODE_INDENT: code indent should use tabs where possible
#77: FILE: aio.c:1347:
+         ret = file->f_op->aio_read(iocb, iocb->ki_iov[0].iov_base,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: aio.c:1347:
+         ret = file->f_op->aio_read(iocb, iocb->ki_iov[0].iov_base,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#78: FILE: aio.c:1348:
+                        iocb->ki_iov[0].iov_len,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: aio.c:1348:
+                        iocb->ki_iov[0].iov_len,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#79: FILE: aio.c:1349:
+                        iocb->ki_pos);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: aio.c:1349:
+                        iocb->ki_pos);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: aio.c:1350:
+     } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 9)
#80: FILE: aio.c:1350:
+     } else {
+         ret = file->f_op->aio_readv(iocb);

ERROR:CODE_INDENT: code indent should use tabs where possible
#81: FILE: aio.c:1351:
+         ret = file->f_op->aio_readv(iocb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: aio.c:1351:
+         ret = file->f_op->aio_readv(iocb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: aio.c:1352:
+     }$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 9)
#87: FILE: aio.c:1357:
     if (ret > 0) {
+         aio_increment_iov(&iocb->ki_iov, &iocb->ki_nr_segs, ret);

ERROR:CODE_INDENT: code indent should use tabs where possible
#89: FILE: aio.c:1358:
+         aio_increment_iov(&iocb->ki_iov, &iocb->ki_nr_segs, ret);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: aio.c:1358:
+         aio_increment_iov(&iocb->ki_iov, &iocb->ki_nr_segs, ret);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: aio.c:1387:
+     if (iocb->ki_nr_segs == 1) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 9)
#99: FILE: aio.c:1387:
+     if (iocb->ki_nr_segs == 1) {
+         ret = file->f_op->aio_write(iocb, iocb->ki_iov[0].iov_base,

ERROR:CODE_INDENT: code indent should use tabs where possible
#100: FILE: aio.c:1388:
+         ret = file->f_op->aio_write(iocb, iocb->ki_iov[0].iov_base,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: aio.c:1388:
+         ret = file->f_op->aio_write(iocb, iocb->ki_iov[0].iov_base,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#101: FILE: aio.c:1389:
+                         iocb->ki_iov[0].iov_len,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: aio.c:1389:
+                         iocb->ki_iov[0].iov_len,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: aio.c:1390:
+                         iocb->ki_pos);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: aio.c:1390:
+                         iocb->ki_pos);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: aio.c:1391:
+     } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 9)
#103: FILE: aio.c:1391:
+     } else {
+         ret = file->f_op->aio_writev(iocb);

ERROR:CODE_INDENT: code indent should use tabs where possible
#104: FILE: aio.c:1392:
+         ret = file->f_op->aio_writev(iocb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#104: FILE: aio.c:1392:
+         ret = file->f_op->aio_writev(iocb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: aio.c:1393:
+     }$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 9)
#107: FILE: aio.c:1395:
     if (ret > 0) {
+         aio_increment_iov(&iocb->ki_iov, &iocb->ki_nr_segs, ret);

ERROR:CODE_INDENT: code indent should use tabs where possible
#109: FILE: aio.c:1396:
+         aio_increment_iov(&iocb->ki_iov, &iocb->ki_nr_segs, ret);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: aio.c:1396:
+         aio_increment_iov(&iocb->ki_iov, &iocb->ki_nr_segs, ret);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: aio.c:1432:
+     int i;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#120: FILE: aio.c:1433:
+     int i;
+     for (i = 0; i < kiocb->ki_nr_segs; i++)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: aio.c:1433:
+     for (i = 0; i < kiocb->ki_nr_segs; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 9)
#120: FILE: aio.c:1433:
+     for (i = 0; i < kiocb->ki_nr_segs; i++)
+         if (unlikely(!access_ok(mode, kiocb->ki_iov[i].iov_base,

ERROR:CODE_INDENT: code indent should use tabs where possible
#121: FILE: aio.c:1434:
+         if (unlikely(!access_ok(mode, kiocb->ki_iov[i].iov_base,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: aio.c:1434:
+         if (unlikely(!access_ok(mode, kiocb->ki_iov[i].iov_base,$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (9, 13)
#121: FILE: aio.c:1434:
+         if (unlikely(!access_ok(mode, kiocb->ki_iov[i].iov_base,
[...]
+             return 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: aio.c:1435:
+                     kiocb->ki_iov[i].iov_len)))$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#122: FILE: aio.c:1435:
+         if (unlikely(!access_ok(mode, kiocb->ki_iov[i].iov_base,
+                     kiocb->ki_iov[i].iov_len)))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: aio.c:1435:
+                     kiocb->ki_iov[i].iov_len)))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: aio.c:1436:
+             return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: aio.c:1436:
+             return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: aio.c:1437:
+     return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: aio.c:1452:
+    case IOCB_CMD_PREADV:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: aio.c:1457:
+        if (unlikely(!aio_iov_access_ok(VERIFY_WRITE, kiocb)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: aio.c:1457:
+        if (unlikely(!aio_iov_access_ok(VERIFY_WRITE, kiocb)))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#141: FILE: aio.c:1457:
+        if (unlikely(!aio_iov_access_ok(VERIFY_WRITE, kiocb)))
             break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: aio.c:1464:
+    case IOCB_CMD_PWRITEV:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: aio.c:1469:
+        if (unlikely(!aio_iov_access_ok(VERIFY_READ, kiocb)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: aio.c:1469:
+        if (unlikely(!aio_iov_access_ok(VERIFY_READ, kiocb)))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#155: FILE: aio.c:1469:
+        if (unlikely(!aio_iov_access_ok(VERIFY_READ, kiocb)))
             break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: aio.c:1558:
+     req->ki_slow_iov = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: aio.c:1560:
+     switch (iocb->aio_lio_opcode) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: aio.c:1561:
+     case IOCB_CMD_PREADV:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#189: FILE: aio.c:1562:
+         /* FALLTHROUGH */$

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#189: FILE: aio.c:1562:
+         /* FALLTHROUGH */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: aio.c:1563:
+     case IOCB_CMD_PWRITEV:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#191: FILE: aio.c:1564:
+         ret = -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: aio.c:1564:
+         ret = -EINVAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#192: FILE: aio.c:1565:
+         req->ki_pos = iocb->u.v.offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: aio.c:1565:
+         req->ki_pos = iocb->u.v.offset;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#193: FILE: aio.c:1566:
+         req->ki_nr_segs = iocb->u.v.nr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: aio.c:1566:
+         req->ki_nr_segs = iocb->u.v.nr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#194: FILE: aio.c:1567:
+         req->ki_iov = &req->ki_fast_iov;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: aio.c:1567:
+         req->ki_iov = &req->ki_fast_iov;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#195: FILE: aio.c:1568:
+         if (req->ki_nr_segs > 1) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: aio.c:1568:
+         if (req->ki_nr_segs > 1) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (9, 13)
#195: FILE: aio.c:1568:
+         if (req->ki_nr_segs > 1) {
+             if (req->ki_nr_segs >= UIO_MAXIOV)

ERROR:CODE_INDENT: code indent should use tabs where possible
#196: FILE: aio.c:1569:
+             if (req->ki_nr_segs >= UIO_MAXIOV)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: aio.c:1569:
+             if (req->ki_nr_segs >= UIO_MAXIOV)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (13, 17)
#196: FILE: aio.c:1569:
+             if (req->ki_nr_segs >= UIO_MAXIOV)
+                 goto out_put_req;

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: aio.c:1570:
+                 goto out_put_req;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: aio.c:1570:
+                 goto out_put_req;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#198: FILE: aio.c:1571:
+             req->ki_slow_iov = kmalloc(sizeof(struct iovec) * $

ERROR:CODE_INDENT: code indent should use tabs where possible
#198: FILE: aio.c:1571:
+             req->ki_slow_iov = kmalloc(sizeof(struct iovec) * $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: aio.c:1571:
+             req->ki_slow_iov = kmalloc(sizeof(struct iovec) * $

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*req->ki_slow_iov)...) over kmalloc(sizeof(struct iovec)...)
#198: FILE: aio.c:1571:
+             req->ki_slow_iov = kmalloc(sizeof(struct iovec) * 

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#198: FILE: aio.c:1571:
+             req->ki_slow_iov = kmalloc(sizeof(struct iovec) * 
req->ki_nr_segs, GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

ERROR:CODE_INDENT: code indent should use tabs where possible
#200: FILE: aio.c:1572:
+             req->ki_iov = req->ki_slow_iov;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: aio.c:1572:
+             req->ki_iov = req->ki_slow_iov;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#201: FILE: aio.c:1573:
+         }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: aio.c:1573:
+         }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: aio.c:1574:
+         ret = -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: aio.c:1574:
+         ret = -EFAULT;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#203: FILE: aio.c:1575:
+         if (unlikely(copy_from_user(req->ki_iov, iocb->u.v.vec,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: aio.c:1575:
+         if (unlikely(copy_from_user(req->ki_iov, iocb->u.v.vec,$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (9, 13)
#203: FILE: aio.c:1575:
+         if (unlikely(copy_from_user(req->ki_iov, iocb->u.v.vec,
[...]
+             goto out_put_req;

ERROR:CODE_INDENT: code indent should use tabs where possible
#204: FILE: aio.c:1576:
+                         sizeof(struct iovec) * req->ki_nr_segs)))$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#204: FILE: aio.c:1576:
+         if (unlikely(copy_from_user(req->ki_iov, iocb->u.v.vec,
+                         sizeof(struct iovec) * req->ki_nr_segs)))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: aio.c:1576:
+                         sizeof(struct iovec) * req->ki_nr_segs)))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: aio.c:1577:
+             goto out_put_req;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: aio.c:1577:
+             goto out_put_req;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#206: FILE: aio.c:1578:
+         /* Compute the total length; also make sure that the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#207: FILE: aio.c:1579:
+            length isn't ridiculuously large. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#207: FILE: aio.c:1579:
+         /* Compute the total length; also make sure that the
+            length isn't ridiculuously large. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#207: FILE: aio.c:1579:
+            length isn't ridiculuously large. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#208: FILE: aio.c:1580:
+         {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: aio.c:1580:
+         {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#209: FILE: aio.c:1581:
+             int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: aio.c:1581:
+             int i;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#210: FILE: aio.c:1582:
+             ssize_t tot_len = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: aio.c:1582:
+             ssize_t tot_len = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: aio.c:1583:
+             ret = -EINVAL;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#211: FILE: aio.c:1583:
+             ssize_t tot_len = 0;
+             ret = -EINVAL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: aio.c:1583:
+             ret = -EINVAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: aio.c:1584:
+             for (i = 0;  i < req->ki_nr_segs; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: aio.c:1584:
+             for (i = 0;  i < req->ki_nr_segs; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (13, 17)
#212: FILE: aio.c:1584:
+             for (i = 0;  i < req->ki_nr_segs; i++) {
+                 ssize_t len = (ssize_t)req->ki_iov[i].iov_len;

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: aio.c:1585:
+                 ssize_t len = (ssize_t)req->ki_iov[i].iov_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: aio.c:1585:
+                 ssize_t len = (ssize_t)req->ki_iov[i].iov_len;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#214: FILE: aio.c:1586:
+                 tot_len += len;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#214: FILE: aio.c:1586:
+                 ssize_t len = (ssize_t)req->ki_iov[i].iov_len;
+                 tot_len += len;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: aio.c:1586:
+                 tot_len += len;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#215: FILE: aio.c:1587:
+                 if (len < 0 || tot_len < 0)   $

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: aio.c:1587:
+                 if (len < 0 || tot_len < 0)   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: aio.c:1587:
+                 if (len < 0 || tot_len < 0)   $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (17, 21)
#215: FILE: aio.c:1587:
+                 if (len < 0 || tot_len < 0)   
[...]
+                     goto out_put_req;

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: aio.c:1588:
+                     // overflow$

ERROR:CODE_INDENT: code indent should use tabs where possible
#217: FILE: aio.c:1589:
+                     goto out_put_req;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: aio.c:1589:
+                     goto out_put_req;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: aio.c:1590:
+             }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: aio.c:1590:
+             }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: aio.c:1591:
+             req->ki_nbytes = tot_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: aio.c:1591:
+             req->ki_nbytes = tot_len;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: aio.c:1592:
+         }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: aio.c:1592:
+         }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: aio.c:1593:
+         break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: aio.c:1593:
+         break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#223: FILE: aio.c:1595:
+         /* prevent overflows */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#224: FILE: aio.c:1596:
+         ret = -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: aio.c:1596:
+         ret = -EINVAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#225: FILE: aio.c:1597:
+         if (unlikely((iocb->u.c.buf != (unsigned long)iocb->u.c.buf) ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: aio.c:1597:
+         if (unlikely((iocb->u.c.buf != (unsigned long)iocb->u.c.buf) ||$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (9, 13)
#225: FILE: aio.c:1597:
+         if (unlikely((iocb->u.c.buf != (unsigned long)iocb->u.c.buf) ||
[...]
+             pr_debug("EINVAL: io_submit: overflow check\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iocb->u.c.buf != (unsigned long)iocb->u.c.buf'
#225: FILE: aio.c:1597:
+         if (unlikely((iocb->u.c.buf != (unsigned long)iocb->u.c.buf) ||
+                  (iocb->u.c.nbytes != (size_t)iocb->u.c.nbytes) ||
+                  ((ssize_t)iocb->u.c.nbytes < 0))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'iocb->u.c.nbytes != (size_t)iocb->u.c.nbytes'
#225: FILE: aio.c:1597:
+         if (unlikely((iocb->u.c.buf != (unsigned long)iocb->u.c.buf) ||
+                  (iocb->u.c.nbytes != (size_t)iocb->u.c.nbytes) ||
+                  ((ssize_t)iocb->u.c.nbytes < 0))) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#226: FILE: aio.c:1598:
+                  (iocb->u.c.nbytes != (size_t)iocb->u.c.nbytes) ||$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#226: FILE: aio.c:1598:
+         if (unlikely((iocb->u.c.buf != (unsigned long)iocb->u.c.buf) ||
+                  (iocb->u.c.nbytes != (size_t)iocb->u.c.nbytes) ||

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: aio.c:1598:
+                  (iocb->u.c.nbytes != (size_t)iocb->u.c.nbytes) ||$

ERROR:CODE_INDENT: code indent should use tabs where possible
#227: FILE: aio.c:1599:
+                  ((ssize_t)iocb->u.c.nbytes < 0))) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: aio.c:1599:
+                  ((ssize_t)iocb->u.c.nbytes < 0))) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#228: FILE: aio.c:1600:
+             pr_debug("EINVAL: io_submit: overflow check\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: aio.c:1600:
+             pr_debug("EINVAL: io_submit: overflow check\n");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#229: FILE: aio.c:1601:
+             goto out_put_req;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: aio.c:1601:
+             goto out_put_req;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#230: FILE: aio.c:1602:
+         }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: aio.c:1602:
+         }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#231: FILE: aio.c:1603:
+         req->ki_pos = iocb->u.c.offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: aio.c:1603:
+         req->ki_pos = iocb->u.c.offset;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: aio.c:1604:
+         req->ki_nr_segs = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: aio.c:1604:
+         req->ki_nr_segs = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#233: FILE: aio.c:1605:
+         req->ki_iov = &req->ki_fast_iov;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: aio.c:1605:
+         req->ki_iov = &req->ki_fast_iov;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#234: FILE: aio.c:1606:
+         req->ki_iov->iov_base = (char __user*)(unsigned $

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: aio.c:1606:
+         req->ki_iov->iov_base = (char __user*)(unsigned $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: aio.c:1606:
+         req->ki_iov->iov_base = (char __user*)(unsigned $

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#234: FILE: aio.c:1606:
+         req->ki_iov->iov_base = (char __user*)(unsigned 

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: aio.c:1607:
+         req->ki_iov->iov_len = iocb->u.c.nbytes;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: aio.c:1607:
+         req->ki_iov->iov_len = iocb->u.c.nbytes;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: aio.c:1608:
+         req->ki_nbytes = iocb->u.c.nbytes;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: aio.c:1608:
+         req->ki_nbytes = iocb->u.c.nbytes;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: aio.c:1609:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: aio.c:1610:
+     req->ki_left = req->ki_nbytes;$

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: bad_inode.c:58:
+    .aio_readv    = EIO_ERROR,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: bad_inode.c:59:
+    .aio_writev    = EIO_ERROR,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#251: FILE: bad_inode.c:60:
+   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: bad_inode.c:60:
+   $

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#262: FILE: block_dev.c:766:
 }
+static ssize_t blkdev_file_aio_writev(struct kiocb *iocb)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#264: FILE: block_dev.c:768:
+    return generic_file_aio_write_nolock(iocb, iocb->ki_iov, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: block_dev.c:768:
+    return generic_file_aio_write_nolock(iocb, iocb->ki_iov, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: block_dev.c:795:
+      .aio_readv    = generic_file_aio_readv,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: block_dev.c:796:
+      .aio_writev    = blkdev_file_aio_writev,$

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: ext2/file.c:48:
+    .aio_readv    = generic_file_aio_readv,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#287: FILE: ext2/file.c:49:
+    .aio_writev    = generic_file_aio_writev,$

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: ext3/file.c:68:
+    ret = generic_file_aio_writev(iocb);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#316: FILE: ext3/file.c:119:
+ext3_file_write(struct kiocb *iocb, const char __user *buf, size_t $

ERROR:CODE_INDENT: code indent should use tabs where possible
#319: FILE: ext3/file.c:121:
+        /* aio_write is a legacy interface. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#320: FILE: ext3/file.c:122:
+        BUG_ON(buf != iocb->ki_iov[0].iov_base$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: ext3/file.c:122:
+        BUG_ON(buf != iocb->ki_iov[0].iov_base$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#320: FILE: ext3/file.c:122:
+        BUG_ON(buf != iocb->ki_iov[0].iov_base

ERROR:CODE_INDENT: code indent should use tabs where possible
#321: FILE: ext3/file.c:123:
+           || count != iocb->ki_iov[0].iov_len$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#321: FILE: ext3/file.c:123:
+        BUG_ON(buf != iocb->ki_iov[0].iov_base
+           || count != iocb->ki_iov[0].iov_len

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: ext3/file.c:123:
+           || count != iocb->ki_iov[0].iov_len$

ERROR:CODE_INDENT: code indent should use tabs where possible
#322: FILE: ext3/file.c:124:
+           || pos != iocb->ki_pos);$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#322: FILE: ext3/file.c:124:
+           || count != iocb->ki_iov[0].iov_len
+           || pos != iocb->ki_pos);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: ext3/file.c:124:
+           || pos != iocb->ki_pos);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: ext3/file.c:125:
+    return ext3_file_writev(iocb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: ext3/file.c:134:
+    .aio_readv    = generic_file_aio_readv,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: ext3/file.c:135:
+    .aio_writev    = ext3_file_writev,$

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: jfs/file.c:113:
+    .aio_readv    = generic_file_aio_readv,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: jfs/file.c:114:
+    .aio_writev    = generic_file_aio_writev,$

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#361: FILE: nfs/direct.c:454:
+ * The iovec and its size is passed through iocb->ki_iov and $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#387: FILE: nfs/direct.c:481:
+     const struct iovec *iov = iocb->ki_iov;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: nfs/direct.c:482:
+     unsigned long nr_segs = iocb->ki_nr_segs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: nfs/direct.c:483:
+     size_t count = iov_length(iov, nr_segs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#390: FILE: nfs/direct.c:484:
+     int i;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#395: FILE: nfs/direct.c:488:
+        (unsigned long) count, (unsigned long) iocb->ki_pos);$

CHECK:SPACING: No space is necessary after a cast
#395: FILE: nfs/direct.c:488:
+        (unsigned long) count, (unsigned long) iocb->ki_pos);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: nfs/direct.c:488:
+        (unsigned long) count, (unsigned long) iocb->ki_pos);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#403: FILE: nfs/direct.c:495:
+     for (i = 0; i < nr_segs; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 9)
#403: FILE: nfs/direct.c:495:
+     for (i = 0; i < nr_segs; i++)
+         if (!access_ok(VERIFY_WRITE, iov[i].iov_base, iov[i].iov_len))

ERROR:CODE_INDENT: code indent should use tabs where possible
#404: FILE: nfs/direct.c:496:
+         if (!access_ok(VERIFY_WRITE, iov[i].iov_base, iov[i].iov_len))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#404: FILE: nfs/direct.c:496:
+         if (!access_ok(VERIFY_WRITE, iov[i].iov_base, iov[i].iov_len))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (9, 8)
#404: FILE: nfs/direct.c:496:
+         if (!access_ok(VERIFY_WRITE, iov[i].iov_base, iov[i].iov_len))
         goto out;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#413: FILE: nfs/direct.c:510:
+    retval = nfs_direct_read(inode, ctx, iov, iocb->ki_pos, nr_segs);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#414: FILE: nfs/direct.c:511:
     if (retval > 0)
+            iocb->ki_pos += retval;

ERROR:CODE_INDENT: code indent should use tabs where possible
#416: FILE: nfs/direct.c:512:
+            iocb->ki_pos += retval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#416: FILE: nfs/direct.c:512:
+            iocb->ki_pos += retval;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#429: FILE: nfs/direct.c:521:
+ * The iovec and its size is passed through iocb->ki_iov and $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#446: FILE: nfs/direct.c:547:
+     loff_t pos = iocb->ki_pos;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#458: FILE: nfs/direct.c:555:
+     const struct iovec *iov = iocb->ki_iov;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#459: FILE: nfs/direct.c:556:
+     unsigned long nr_segs = iocb->ki_nr_segs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#460: FILE: nfs/direct.c:557:
+     size_t count = iov_length(iov, nr_segs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: nfs/direct.c:558:
+     int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#470: FILE: nfs/direct.c:571:
+    for (i = 0; i < nr_segs; i++)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#471: FILE: nfs/direct.c:572:
+        if (!access_ok(VERIFY_READ, iov[i].iov_base, iov[i].iov_len))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#471: FILE: nfs/direct.c:572:
+        if (!access_ok(VERIFY_READ, iov[i].iov_base, iov[i].iov_len))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#471: FILE: nfs/direct.c:572:
+        if (!access_ok(VERIFY_READ, iov[i].iov_base, iov[i].iov_len))
         goto out;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#480: FILE: nfs/direct.c:600:
+    retval = nfs_direct_write(inode, ctx, iov, pos, nr_segs);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 9)
#483: FILE: nfs/direct.c:603:
     if (retval > 0)
+         iocb->ki_pos = pos + retval;

ERROR:CODE_INDENT: code indent should use tabs where possible
#485: FILE: nfs/direct.c:604:
+         iocb->ki_pos = pos + retval;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#485: FILE: nfs/direct.c:604:
+         iocb->ki_pos = pos + retval;$

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#507: FILE: nfs/file.c:56:
+    .aio_readv        = nfs_file_readv,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#508: FILE: nfs/file.c:57:
+    .aio_writev        = nfs_file_writev,$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#525: FILE: nfs/file.c:151:
     if (iocb->ki_filp->f_flags & O_DIRECT)
+            return nfs_file_direct_readv(iocb);

ERROR:CODE_INDENT: code indent should use tabs where possible
#527: FILE: nfs/file.c:152:
+            return nfs_file_direct_readv(iocb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#527: FILE: nfs/file.c:152:
+            return nfs_file_direct_readv(iocb);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#533: FILE: nfs/file.c:157:
+         (unsigned long)iov_length(iocb->ki_iov, iocb->ki_nr_segs),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#533: FILE: nfs/file.c:157:
+         (unsigned long)iov_length(iocb->ki_iov, iocb->ki_nr_segs),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#534: FILE: nfs/file.c:158:
+         (unsigned long)iocb->ki_pos);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#534: FILE: nfs/file.c:158:
+         (unsigned long)iocb->ki_pos);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (4, 12)
#537: FILE: nfs/file.c:161:
     if (!result)
+            result = generic_file_aio_readv(iocb);

ERROR:CODE_INDENT: code indent should use tabs where possible
#539: FILE: nfs/file.c:162:
+            result = generic_file_aio_readv(iocb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#539: FILE: nfs/file.c:162:
+            result = generic_file_aio_readv(iocb);$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#542: FILE: nfs/file.c:165:
 }
+static ssize_t

ERROR:TRAILING_WHITESPACE: trailing whitespace
#543: FILE: nfs/file.c:166:
+nfs_file_read(struct kiocb *iocb, char __user * buf, size_t count, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#543: FILE: nfs/file.c:166:
+nfs_file_read(struct kiocb *iocb, char __user * buf, size_t count, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#545: FILE: nfs/file.c:167:
+nfs_file_read(struct kiocb *iocb, char __user * buf, size_t count, 
+{

ERROR:CODE_INDENT: code indent should use tabs where possible
#546: FILE: nfs/file.c:168:
+        BUG_ON(buf != iocb->ki_iov[0].iov_base$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#546: FILE: nfs/file.c:168:
+        BUG_ON(buf != iocb->ki_iov[0].iov_base$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#546: FILE: nfs/file.c:168:
+        BUG_ON(buf != iocb->ki_iov[0].iov_base

ERROR:CODE_INDENT: code indent should use tabs where possible
#547: FILE: nfs/file.c:169:
+           || count != iocb->ki_iov[0].iov_len$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#547: FILE: nfs/file.c:169:
+        BUG_ON(buf != iocb->ki_iov[0].iov_base
+           || count != iocb->ki_iov[0].iov_len

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#547: FILE: nfs/file.c:169:
+           || count != iocb->ki_iov[0].iov_len$

ERROR:CODE_INDENT: code indent should use tabs where possible
#548: FILE: nfs/file.c:170:
+           || pos != iocb->ki_pos);$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#548: FILE: nfs/file.c:170:
+           || count != iocb->ki_iov[0].iov_len
+           || pos != iocb->ki_pos);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#548: FILE: nfs/file.c:170:
+           || pos != iocb->ki_pos);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#549: FILE: nfs/file.c:171:
+    return nfs_file_readv(iocb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#564: FILE: nfs/file.c:277:
+    size_t count = iov_length(iocb->ki_iov, iocb->ki_nr_segs);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#570: FILE: nfs/file.c:282:
+        return nfs_file_direct_writev(iocb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#570: FILE: nfs/file.c:282:
+        return nfs_file_direct_writev(iocb);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#576: FILE: nfs/file.c:287:
+         inode->i_ino, (unsigned long)count, (unsigned long)iocb->ki_pos);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#576: FILE: nfs/file.c:287:
+         inode->i_ino, (unsigned long)count, (unsigned long)iocb->ki_pos);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#585: FILE: nfs/file.c:300:
+    result = generic_file_aio_writev(iocb);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#595: FILE: nfs/file.c:310:
+nfs_file_write(struct kiocb *iocb, const char __user *buf, size_t $

ERROR:CODE_INDENT: code indent should use tabs where possible
#598: FILE: nfs/file.c:312:
+        BUG_ON(buf != iocb->ki_iov[0].iov_base$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#598: FILE: nfs/file.c:312:
+        BUG_ON(buf != iocb->ki_iov[0].iov_base$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#598: FILE: nfs/file.c:312:
+        BUG_ON(buf != iocb->ki_iov[0].iov_base

ERROR:CODE_INDENT: code indent should use tabs where possible
#599: FILE: nfs/file.c:313:
+           || count != iocb->ki_iov[0].iov_len$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#599: FILE: nfs/file.c:313:
+        BUG_ON(buf != iocb->ki_iov[0].iov_base
+           || count != iocb->ki_iov[0].iov_len

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#599: FILE: nfs/file.c:313:
+           || count != iocb->ki_iov[0].iov_len$

ERROR:CODE_INDENT: code indent should use tabs where possible
#600: FILE: nfs/file.c:314:
+           || pos != iocb->ki_pos);$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#600: FILE: nfs/file.c:314:
+           || count != iocb->ki_iov[0].iov_len
+           || pos != iocb->ki_pos);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#600: FILE: nfs/file.c:314:
+           || pos != iocb->ki_pos);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#601: FILE: nfs/file.c:315:
+    return nfs_file_writev(iocb);$

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#611: FILE: read_write.c:193:
+    kiocb.ki_iov = &kiocb.ki_fast_iov;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#612: FILE: read_write.c:194:
+    kiocb.ki_iov->iov_base = buf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#613: FILE: read_write.c:195:
+    kiocb.ki_iov->iov_len = len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#614: FILE: read_write.c:196:
+    kiocb.ki_nr_segs = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#622: FILE: read_write.c:241:
+    kiocb.ki_iov = &kiocb.ki_fast_iov;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#623: FILE: read_write.c:242:
+    kiocb.ki_iov->iov_base = (char __user*)buf;$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#623: FILE: read_write.c:242:
+    kiocb.ki_iov->iov_base = (char __user*)buf;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#624: FILE: read_write.c:243:
+    kiocb.ki_iov->iov_len = len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#625: FILE: read_write.c:244:
+    kiocb.ki_nr_segs = 1;$

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#635: FILE: reiserfs/file.c:1383:
 }
+static ssize_t reiserfs_aio_writev(struct kiocb *iocb)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#637: FILE: reiserfs/file.c:1385:
+    return generic_file_aio_writev(iocb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#647: FILE: reiserfs/file.c:1401:
+    .aio_readv   = generic_file_aio_readv,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#648: FILE: reiserfs/file.c:1402:
+    .aio_writev  = reiserfs_aio_writev,$

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

ERROR:CODE_INDENT: code indent should use tabs where possible
#668: FILE: linux/aio.h:72:
+        /* Used for PREAD, PWRITE */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#669: FILE: linux/aio.h:73:
+        struct iovec            ki_fast_iov;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#669: FILE: linux/aio.h:73:
+        struct iovec            ki_fast_iov;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#672: FILE: linux/aio.h:76:
+        struct iovec            *ki_slow_iov;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#672: FILE: linux/aio.h:76:
+        struct iovec            *ki_slow_iov;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#675: FILE: linux/aio.h:79:
+        depending on the value of ki_nr_segs. Its pointers are$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#675: FILE: linux/aio.h:79:
+     /* ki_iov points to either &ki_short_iov or ki_long_iov,
+        depending on the value of ki_nr_segs. Its pointers are

ERROR:CODE_INDENT: code indent should use tabs where possible
#676: FILE: linux/aio.h:80:
+        incremented as more data is read or written$

ERROR:CODE_INDENT: code indent should use tabs where possible
#677: FILE: linux/aio.h:81:
+        asynchronously. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#677: FILE: linux/aio.h:81:
+        asynchronously. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#678: FILE: linux/aio.h:82:
+     struct iovec            *ki_iov;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#679: FILE: linux/aio.h:83:
+        unsigned long           ki_nr_segs;     /* number of iovs left. */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#679: FILE: linux/aio.h:83:
+        unsigned long           ki_nr_segs;     /* number of iovs left. */$

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#691: FILE: linux/aio_abi.h:44:
+    IOCB_CMD_PREADV = 7,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#692: FILE: linux/aio_abi.h:45:
+    IOCB_CMD_PWRITEV = 8,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#701: FILE: linux/aio_abi.h:71:
+    __u32 events;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#705: FILE: linux/aio_abi.h:75:
+    __u64    addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#706: FILE: linux/aio_abi.h:76:
+    __u32    len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#710: FILE: linux/aio_abi.h:80:
+    __u64    buf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#711: FILE: linux/aio_abi.h:81:
+    __u64    nbytes;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#712: FILE: linux/aio_abi.h:82:
+    __s64      offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#716: FILE: linux/aio_abi.h:86:
+    struct iovec  __user *vec;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#717: FILE: linux/aio_abi.h:87:
+    __u32    nr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#718: FILE: linux/aio_abi.h:88:
+    __s64     offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#731: FILE: linux/aio_abi.h:102:
+    union {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#732: FILE: linux/aio_abi.h:103:
+        struct io_iocb_common c;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#732: FILE: linux/aio_abi.h:103:
+        struct io_iocb_common c;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#733: FILE: linux/aio_abi.h:104:
+        struct io_iocb_vector v;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#733: FILE: linux/aio_abi.h:104:
+        struct io_iocb_vector v;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#734: FILE: linux/aio_abi.h:105:
+        struct io_iocb_poll poll;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#734: FILE: linux/aio_abi.h:105:
+        struct io_iocb_poll poll;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#735: FILE: linux/aio_abi.h:106:
+        struct io_iocb_sockaddr    saddr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#735: FILE: linux/aio_abi.h:106:
+        struct io_iocb_sockaddr    saddr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#736: FILE: linux/aio_abi.h:107:
+    } u;$

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#761: FILE: linux/fs.h:989:
+    /* For aio_readv and aio_writev, the iovec and offset are passed
+       through kiocb->ki_iov, ki_nr_segs, and ki_pos. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#761: FILE: linux/fs.h:989:
+       through kiocb->ki_iov, ki_nr_segs, and ki_pos. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#762: FILE: linux/fs.h:990:
+    ssize_t (*aio_readv) (struct kiocb *);$

WARNING:SPACING: Unnecessary space before function pointer arguments
#762: FILE: linux/fs.h:990:
+    ssize_t (*aio_readv) (struct kiocb *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiocb *' should also have an identifier name
#762: FILE: linux/fs.h:990:
+    ssize_t (*aio_readv) (struct kiocb *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:CODE_INDENT: code indent should use tabs where possible
#763: FILE: linux/fs.h:991:
+        ssize_t (*aio_writev) (struct kiocb *);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#763: FILE: linux/fs.h:991:
+        ssize_t (*aio_writev) (struct kiocb *);$

WARNING:SPACING: Unnecessary space before function pointer arguments
#763: FILE: linux/fs.h:991:
+        ssize_t (*aio_writev) (struct kiocb *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiocb *' should also have an identifier name
#763: FILE: linux/fs.h:991:
+        ssize_t (*aio_writev) (struct kiocb *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#777: FILE: linux/fs.h:1516:
+extern ssize_t generic_file_aio_readv(struct kiocb *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiocb *' should also have an identifier name
#777: FILE: linux/fs.h:1516:
+extern ssize_t generic_file_aio_readv(struct kiocb *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#780: FILE: linux/fs.h:1518:
+extern ssize_t generic_file_aio_writev(struct kiocb *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kiocb *' should also have an identifier name
#780: FILE: linux/fs.h:1518:
+extern ssize_t generic_file_aio_writev(struct kiocb *);

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#800: FILE: linux/nfs_fs.h:341:
+extern ssize_t nfs_file_direct_readv(struct kiocb *iocb);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#801: FILE: linux/nfs_fs.h:342:
+extern ssize_t nfs_file_direct_writev(struct kiocb *iocb);

WARNING:PATCH_PREFIX: patch prefix 'mm' exists, appears to be a -p0 patch

ERROR:TRAILING_WHITESPACE: trailing whitespace
#816: FILE: filemap.c:1006:
+        return __generic_file_aio_read(iocb, iocb->ki_iov, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#816: FILE: filemap.c:1006:
+        return __generic_file_aio_read(iocb, iocb->ki_iov, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#816: FILE: filemap.c:1006:
+        return __generic_file_aio_read(iocb, iocb->ki_iov, $

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#828: FILE: filemap.c:2134:
+EXPORT_SYMBOL(generic_file_aio_writev);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#839: FILE: filemap.c:2141:
+     loff_t pos = iocb->ki_pos;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#843: FILE: filemap.c:2144:
+    ret = generic_file_aio_write_nolock(iocb, iocb->ki_iov, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#843: FILE: filemap.c:2144:
+    ret = generic_file_aio_write_nolock(iocb, iocb->ki_iov, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#845: FILE: filemap.c:2145:
+    ret = generic_file_aio_write_nolock(iocb, iocb->ki_iov, 
                         &iocb->ki_pos);

ERROR:CODE_INDENT: code indent should use tabs where possible
#855: FILE: filemap.c:2160:
+                   size_t count, loff_t pos)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#855: FILE: filemap.c:2160:
+ssize_t generic_file_aio_write(struct kiocb *iocb, const char __user *buf,
+                   size_t count, loff_t pos)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#855: FILE: filemap.c:2160:
+                   size_t count, loff_t pos)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#857: FILE: filemap.c:2162:
+        /* aio_write is a legacy interface. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#858: FILE: filemap.c:2163:
+        BUG_ON(buf != iocb->ki_iov[0].iov_base$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#858: FILE: filemap.c:2163:
+        BUG_ON(buf != iocb->ki_iov[0].iov_base$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#858: FILE: filemap.c:2163:
+        BUG_ON(buf != iocb->ki_iov[0].iov_base

ERROR:CODE_INDENT: code indent should use tabs where possible
#859: FILE: filemap.c:2164:
+           || count != iocb->ki_iov[0].iov_len$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#859: FILE: filemap.c:2164:
+        BUG_ON(buf != iocb->ki_iov[0].iov_base
+           || count != iocb->ki_iov[0].iov_len

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#859: FILE: filemap.c:2164:
+           || count != iocb->ki_iov[0].iov_len$

ERROR:CODE_INDENT: code indent should use tabs where possible
#860: FILE: filemap.c:2165:
+           || pos != iocb->ki_pos);$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#860: FILE: filemap.c:2165:
+           || count != iocb->ki_iov[0].iov_len
+           || pos != iocb->ki_pos);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#860: FILE: filemap.c:2165:
+           || pos != iocb->ki_pos);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#861: FILE: filemap.c:2166:
+    return generic_file_aio_writev(iocb);$

WARNING:PATCH_PREFIX: patch prefix 'net' exists, appears to be a -p0 patch

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#881: FILE: socket.c:130:
+    .aio_readv =    sock_aio_readv,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#882: FILE: socket.c:131:
+    .aio_writev =    sock_aio_writev,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#897: FILE: socket.c:651:
+    const struct iovec *iov = iocb->ki_iov;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#898: FILE: socket.c:652:
+    unsigned long nr_segs = iocb->ki_nr_segs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#902: FILE: socket.c:654:
+    int flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#903: FILE: socket.c:655:
+    size_t size = iov_length(iov, nr_segs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#917: FILE: socket.c:675:
+    if (nr_segs == 1) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#918: FILE: socket.c:676:
+        // handle sock_aio_read that may pass iov on the stack.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#919: FILE: socket.c:677:
+        x->async_msg.msg_iov = &x->async_iov;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#919: FILE: socket.c:677:
+        x->async_msg.msg_iov = &x->async_iov;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#920: FILE: socket.c:678:
+        x->async_msg.msg_iovlen = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#920: FILE: socket.c:678:
+        x->async_msg.msg_iovlen = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#921: FILE: socket.c:679:
+        x->async_iov.iov_base = iov[0].iov_base;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#921: FILE: socket.c:679:
+        x->async_iov.iov_base = iov[0].iov_base;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#922: FILE: socket.c:680:
+        x->async_iov.iov_len = iov[0].iov_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#922: FILE: socket.c:680:
+        x->async_iov.iov_len = iov[0].iov_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#923: FILE: socket.c:681:
+    } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#924: FILE: socket.c:682:
+        // we can assume that iov is held in iocb and not$

ERROR:CODE_INDENT: code indent should use tabs where possible
#925: FILE: socket.c:683:
+        // freed until x is freed.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#926: FILE: socket.c:684:
+        x->async_msg.msg_iov = (struct iovec*)iov;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#926: FILE: socket.c:684:
+        x->async_msg.msg_iov = (struct iovec*)iov;$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#926: FILE: socket.c:684:
+        x->async_msg.msg_iov = (struct iovec*)iov;

ERROR:CODE_INDENT: code indent should use tabs where possible
#927: FILE: socket.c:685:
+        x->async_msg.msg_iovlen = nr_segs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#927: FILE: socket.c:685:
+        x->async_msg.msg_iovlen = nr_segs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#928: FILE: socket.c:686:
+    }$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#935: FILE: socket.c:691:
 }
+static ssize_t sock_aio_read(struct kiocb *iocb, char __user *ubuf,

ERROR:CODE_INDENT: code indent should use tabs where possible
#936: FILE: socket.c:692:
+             size_t size, loff_t pos)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#936: FILE: socket.c:692:
+static ssize_t sock_aio_read(struct kiocb *iocb, char __user *ubuf,
+             size_t size, loff_t pos)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#936: FILE: socket.c:692:
+             size_t size, loff_t pos)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#938: FILE: socket.c:694:
+        /* aio_read is a legacy interface. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#939: FILE: socket.c:695:
+        BUG_ON(ubuf != iocb->ki_iov[0].iov_base$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#939: FILE: socket.c:695:
+        BUG_ON(ubuf != iocb->ki_iov[0].iov_base$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#939: FILE: socket.c:695:
+        BUG_ON(ubuf != iocb->ki_iov[0].iov_base

ERROR:CODE_INDENT: code indent should use tabs where possible
#940: FILE: socket.c:696:
+           || size != iocb->ki_iov[0].iov_len$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#940: FILE: socket.c:696:
+        BUG_ON(ubuf != iocb->ki_iov[0].iov_base
+           || size != iocb->ki_iov[0].iov_len

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#940: FILE: socket.c:696:
+           || size != iocb->ki_iov[0].iov_len$

ERROR:CODE_INDENT: code indent should use tabs where possible
#941: FILE: socket.c:697:
+           || pos != iocb->ki_pos);$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#941: FILE: socket.c:697:
+           || size != iocb->ki_iov[0].iov_len
+           || pos != iocb->ki_pos);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#941: FILE: socket.c:697:
+           || pos != iocb->ki_pos);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#942: FILE: socket.c:698:
+    return sock_aio_readv(iocb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#959: FILE: socket.c:709:
+    struct iovec *iov = iocb->ki_iov;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#960: FILE: socket.c:710:
+    unsigned long nr_segs = iocb->ki_nr_segs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#962: FILE: socket.c:712:
+    size_t size = iov_length(iov, nr_segs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#976: FILE: socket.c:733:
+    if (nr_segs == 1) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#977: FILE: socket.c:734:
+        // handle sock_aio_read that may pass iov on the stack.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#978: FILE: socket.c:735:
+        x->async_msg.msg_iov = &x->async_iov;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#978: FILE: socket.c:735:
+        x->async_msg.msg_iov = &x->async_iov;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#979: FILE: socket.c:736:
+        x->async_msg.msg_iovlen = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#979: FILE: socket.c:736:
+        x->async_msg.msg_iovlen = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#980: FILE: socket.c:737:
+        x->async_iov.iov_base = iov[0].iov_base;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#980: FILE: socket.c:737:
+        x->async_iov.iov_base = iov[0].iov_base;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#981: FILE: socket.c:738:
+        x->async_iov.iov_len = iov[0].iov_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#981: FILE: socket.c:738:
+        x->async_iov.iov_len = iov[0].iov_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#982: FILE: socket.c:739:
+    } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#983: FILE: socket.c:740:
+        // we can assume that iov is held in iocb and not$

ERROR:CODE_INDENT: code indent should use tabs where possible
#984: FILE: socket.c:741:
+        // freed until x is freed.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#985: FILE: socket.c:742:
+        x->async_msg.msg_iov = (struct iovec*)iov;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#985: FILE: socket.c:742:
+        x->async_msg.msg_iov = (struct iovec*)iov;$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#985: FILE: socket.c:742:
+        x->async_msg.msg_iov = (struct iovec*)iov;

ERROR:CODE_INDENT: code indent should use tabs where possible
#986: FILE: socket.c:743:
+        x->async_msg.msg_iovlen = nr_segs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#986: FILE: socket.c:743:
+        x->async_msg.msg_iovlen = nr_segs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#987: FILE: socket.c:744:
+    }$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#995: FILE: socket.c:750:
+}
+static ssize_t sock_aio_write(struct kiocb *iocb, const char __user *ubuf,

ERROR:CODE_INDENT: code indent should use tabs where possible
#996: FILE: socket.c:751:
+             size_t size, loff_t pos)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#996: FILE: socket.c:751:
+static ssize_t sock_aio_write(struct kiocb *iocb, const char __user *ubuf,
+             size_t size, loff_t pos)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#996: FILE: socket.c:751:
+             size_t size, loff_t pos)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#998: FILE: socket.c:753:
+        /* aio_write is a legacy interface. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#999: FILE: socket.c:754:
+        BUG_ON(ubuf != iocb->ki_iov[0].iov_base$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#999: FILE: socket.c:754:
+        BUG_ON(ubuf != iocb->ki_iov[0].iov_base$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#999: FILE: socket.c:754:
+        BUG_ON(ubuf != iocb->ki_iov[0].iov_base

ERROR:CODE_INDENT: code indent should use tabs where possible
#1000: FILE: socket.c:755:
+           || size != iocb->ki_iov[0].iov_len$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1000: FILE: socket.c:755:
+        BUG_ON(ubuf != iocb->ki_iov[0].iov_base
+           || size != iocb->ki_iov[0].iov_len

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1000: FILE: socket.c:755:
+           || size != iocb->ki_iov[0].iov_len$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1001: FILE: socket.c:756:
+           || pos != iocb->ki_pos);$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1001: FILE: socket.c:756:
+           || size != iocb->ki_iov[0].iov_len
+           || pos != iocb->ki_pos);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1001: FILE: socket.c:756:
+           || pos != iocb->ki_pos);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1002: FILE: socket.c:757:
+    return sock_aio_writev(iocb);$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000241527.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 157 errors, 288 warnings, 34 checks, 889 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000241527.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
