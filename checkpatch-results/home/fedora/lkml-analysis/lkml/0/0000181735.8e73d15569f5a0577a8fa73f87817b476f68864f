WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#29: 
signed-off-by: Anil S Keshavamurthy <anil.s.keshavamurthy@intel.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#30: 
signed-off-by: Rusty Lynch <Rusty.lynch@intel.com>

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#66: FILE: arch/ia64/kernel/kprobes.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#68: FILE: arch/ia64/kernel/kprobes.c:3:
+ *  arch/ia64/kernel/kprobes.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#81: FILE: arch/ia64/kernel/kprobes.c:16:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#82: FILE: arch/ia64/kernel/kprobes.c:17:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#100: FILE: arch/ia64/kernel/kprobes.c:35:
+#include <asm/pgtable.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/kdebug.h> instead of <asm/kdebug.h>
#101: FILE: arch/ia64/kernel/kprobes.c:36:
+#include <asm/kdebug.h>

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: arch/ia64/kernel/kprobes.c:47:
+  { M, I, I },^I^I^I^I/* 00 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: arch/ia64/kernel/kprobes.c:48:
+  { M, I, I },^I^I^I^I/* 01 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: arch/ia64/kernel/kprobes.c:49:
+  { M, I, I },^I^I^I^I/* 02 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: arch/ia64/kernel/kprobes.c:50:
+  { M, I, I },^I^I^I^I/* 03 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: arch/ia64/kernel/kprobes.c:51:
+  { M, L, X },^I^I^I^I/* 04 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: arch/ia64/kernel/kprobes.c:52:
+  { M, L, X },^I^I^I^I/* 05 */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#118: FILE: arch/ia64/kernel/kprobes.c:53:
+  { u, u, u },  ^I^I^I/* 06 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: arch/ia64/kernel/kprobes.c:53:
+  { u, u, u },  ^I^I^I/* 06 */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#119: FILE: arch/ia64/kernel/kprobes.c:54:
+  { u, u, u },  ^I^I^I/* 07 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: arch/ia64/kernel/kprobes.c:54:
+  { u, u, u },  ^I^I^I/* 07 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: arch/ia64/kernel/kprobes.c:55:
+  { M, M, I },^I^I^I^I/* 08 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: arch/ia64/kernel/kprobes.c:56:
+  { M, M, I },^I^I^I^I/* 09 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: arch/ia64/kernel/kprobes.c:57:
+  { M, M, I },^I^I^I^I/* 0A */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: arch/ia64/kernel/kprobes.c:58:
+  { M, M, I },^I^I^I^I/* 0B */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: arch/ia64/kernel/kprobes.c:59:
+  { M, F, I },^I^I^I^I/* 0C */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: arch/ia64/kernel/kprobes.c:60:
+  { M, F, I },^I^I^I^I/* 0D */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: arch/ia64/kernel/kprobes.c:61:
+  { M, M, F },^I^I^I^I/* 0E */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: arch/ia64/kernel/kprobes.c:62:
+  { M, M, F },^I^I^I^I/* 0F */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: arch/ia64/kernel/kprobes.c:63:
+  { M, I, B },^I^I^I^I/* 10 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: arch/ia64/kernel/kprobes.c:64:
+  { M, I, B },^I^I^I^I/* 11 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: arch/ia64/kernel/kprobes.c:65:
+  { M, B, B },^I^I^I^I/* 12 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: arch/ia64/kernel/kprobes.c:66:
+  { M, B, B },^I^I^I^I/* 13 */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#132: FILE: arch/ia64/kernel/kprobes.c:67:
+  { u, u, u },  ^I^I^I/* 14 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: arch/ia64/kernel/kprobes.c:67:
+  { u, u, u },  ^I^I^I/* 14 */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#133: FILE: arch/ia64/kernel/kprobes.c:68:
+  { u, u, u },  ^I^I^I/* 15 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: arch/ia64/kernel/kprobes.c:68:
+  { u, u, u },  ^I^I^I/* 15 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: arch/ia64/kernel/kprobes.c:69:
+  { B, B, B },^I^I^I^I/* 16 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: arch/ia64/kernel/kprobes.c:70:
+  { B, B, B },^I^I^I^I/* 17 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: arch/ia64/kernel/kprobes.c:71:
+  { M, M, B },^I^I^I^I/* 18 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: arch/ia64/kernel/kprobes.c:72:
+  { M, M, B },^I^I^I^I/* 19 */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#138: FILE: arch/ia64/kernel/kprobes.c:73:
+  { u, u, u },  ^I^I^I/* 1A */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: arch/ia64/kernel/kprobes.c:73:
+  { u, u, u },  ^I^I^I/* 1A */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#139: FILE: arch/ia64/kernel/kprobes.c:74:
+  { u, u, u },  ^I^I^I/* 1B */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: arch/ia64/kernel/kprobes.c:74:
+  { u, u, u },  ^I^I^I/* 1B */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: arch/ia64/kernel/kprobes.c:75:
+  { M, F, B },^I^I^I^I/* 1C */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: arch/ia64/kernel/kprobes.c:76:
+  { M, F, B },^I^I^I^I/* 1D */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#142: FILE: arch/ia64/kernel/kprobes.c:77:
+  { u, u, u },  ^I^I^I/* 1E */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: arch/ia64/kernel/kprobes.c:77:
+  { u, u, u },  ^I^I^I/* 1E */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#143: FILE: arch/ia64/kernel/kprobes.c:78:
+  { u, u, u },  ^I^I^I/* 1F */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: arch/ia64/kernel/kprobes.c:78:
+  { u, u, u },  ^I^I^I/* 1F */$

CHECK:SPACING: No space is necessary after a cast
#148: FILE: arch/ia64/kernel/kprobes.c:83:
+	unsigned long addr = (unsigned long) p->addr;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bundle_encoding[template][1] == L'
#162: FILE: arch/ia64/kernel/kprobes.c:97:
+	if (((bundle_encoding[template][1] == L) && slot > 1) || (slot > 2)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'slot > 2'
#162: FILE: arch/ia64/kernel/kprobes.c:97:
+	if (((bundle_encoding[template][1] == L) && slot > 1) || (slot > 2)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#163: FILE: arch/ia64/kernel/kprobes.c:98:
+		printk(KERN_WARNING "Attempting to insert unaligned kprobe at 0x%lx\n", addr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#175: FILE: arch/ia64/kernel/kprobes.c:110:
+	memcpy(&p->ainsn.insn.bundle, (unsigned long *)bundle_addr,
+				sizeof(bundle_t));

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#198: FILE: arch/ia64/kernel/kprobes.c:133:
+		bundle.quad1.slot1_p1 = (BREAK_INST >> (64-46));
 		                                          ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: arch/ia64/kernel/kprobes.c:140:
+ ^I/* Flush icache for the instruction at the emulated address */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#205: FILE: arch/ia64/kernel/kprobes.c:140:
+ ^I/* Flush icache for the instruction at the emulated address */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: arch/ia64/kernel/kprobes.c:140:
+ ^I/* Flush icache for the instruction at the emulated address */$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#207: FILE: arch/ia64/kernel/kprobes.c:142:
+	flush_icache_range((unsigned long)&p->ainsn.insn.bundle,
+			(unsigned long)&p->ainsn.insn.bundle +

ERROR:TRAILING_WHITESPACE: trailing whitespace
#209: FILE: arch/ia64/kernel/kprobes.c:144:
+^I/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#210: FILE: arch/ia64/kernel/kprobes.c:145:
+^I * Patch the original instruction with the probe instruction $

CHECK:SPACING: No space is necessary after a cast
#213: FILE: arch/ia64/kernel/kprobes.c:148:
+	memcpy((char *) arm_addr, (char *) &bundle, sizeof(bundle_t));

CHECK:SPACING: No space is necessary after a cast
#223: FILE: arch/ia64/kernel/kprobes.c:158:
+	memcpy((char *) arm_addr, (char *) &p->opcode.bundle, sizeof(bundle_t));

CHECK:SPACING: No space is necessary after a cast
#257: FILE: arch/ia64/kernel/kprobes.c:192:
+	unsigned long bundle_addr = (unsigned long) &p->ainsn.insn.bundle;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#295: FILE: arch/ia64/kernel/kprobes.c:230:
+			if (p->break_handler && p->break_handler(p, regs)) {
+				goto ss_probe;
+			}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#366: FILE: arch/ia64/kernel/kprobes.c:301:
+	struct die_args *args = (struct die_args *)data;
+	switch(val) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#366: FILE: arch/ia64/kernel/kprobes.c:301:
+	switch(val) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#386: FILE: arch/ia64/kernel/kprobes.c:321:
+	printk(KERN_WARNING "Jprobes is not supported\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#415: FILE: include/asm-ia64/kprobes.h:1:
+#ifndef _ASM_KPROBES_H

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#419: FILE: include/asm-ia64/kprobes.h:5:
+ *  include/asm-ia64/kprobes.h

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#432: FILE: include/asm-ia64/kprobes.h:18:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#433: FILE: include/asm-ia64/kprobes.h:19:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#445: FILE: include/asm-ia64/kprobes.h:31:
+#define BREAK_INST	(long)(__IA64_BREAK_KPROBE << 6)

WARNING:NEW_TYPEDEFS: do not add new typedefs
#447: FILE: include/asm-ia64/kprobes.h:33:
+typedef struct _bundle {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#451: FILE: include/asm-ia64/kprobes.h:37:
+		unsigned long long slot1_p0 : 64-46;
 		                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#454: FILE: include/asm-ia64/kprobes.h:40:
+		unsigned long long slot1_p1 : 41 - (64-46);
 		                                      ^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(16) over __attribute__((__aligned__(16)))
#457: FILE: include/asm-ia64/kprobes.h:43:
+} __attribute__((__aligned__(16)))  bundle_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#459: FILE: include/asm-ia64/kprobes.h:45:
+typedef struct kprobe_opcode {

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#475: FILE: include/asm-ia64/kprobes.h:61:
+extern int kprobe_exceptions_notify(struct notifier_block *self,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000181735.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 55 warnings, 14 checks, 426 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000181735.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
