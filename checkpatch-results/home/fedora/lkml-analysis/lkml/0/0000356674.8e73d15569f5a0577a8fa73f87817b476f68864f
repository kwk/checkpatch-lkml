WARNING:TYPO_SPELLING: 'positionning' may be misspelled - perhaps 'positioning'?
#30: 
  positionning: they both return NULL until the cursor has reached its
  ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
--- linux-2.5.74-1.1360.1.1-to-1.1384/net/atm/proc.c~atm-proc-seq-arp-conversion	Wed Jul  9 01:43:02 2003

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#93: FILE: net/atm/proc.c:116:
+			if (fields[i+1])
 			            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#114: FILE: net/atm/proc.c:130:
+	seq_printf(seq, "%-6s%-4s%-4s%5ld ", dev->name, svc ? "SVC" : "PVC",
 	    !clip_vcc || clip_vcc->encap ? "LLC" : "NULL",

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#122: FILE: net/atm/proc.c:131:
+	    (jiffies-(clip_vcc ? clip_vcc->last_use : entry->neigh->used))/HZ);
 	            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#122: FILE: net/atm/proc.c:131:
+	    (jiffies-(clip_vcc ? clip_vcc->last_use : entry->neigh->used))/HZ);
 	                                                                  ^

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#142: FILE: net/atm/proc.c:141:
+			seq_printf(seq, "(resolving)\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: net/atm/proc.c:562:
+  ^Istruct neighbour *n;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#169: FILE: net/atm/proc.c:562:
+  ^Istruct neighbour *n;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: net/atm/proc.c:562:
+  ^Istruct neighbour *n;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#172: FILE: net/atm/proc.c:565:
+  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: net/atm/proc.c:565:
+  $

ERROR:CODE_INDENT: code indent should use tabs where possible
#183: FILE: net/atm/proc.c:576:
+  ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#183: FILE: net/atm/proc.c:576:
+  ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: net/atm/proc.c:576:
+  ^I}$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#191: FILE: net/atm/proc.c:584:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#191: FILE: net/atm/proc.c:584:
+  $

ERROR:CODE_INDENT: code indent should use tabs where possible
#206: FILE: net/atm/proc.c:594:
+  ^I^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#206: FILE: net/atm/proc.c:594:
+  ^I^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: net/atm/proc.c:594:
+  ^I^I}$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#277: FILE: net/atm/proc.c:640:
+^Istatic char atm_arp_banner[] = $

CHECK:BRACES: braces {} should be used on all arms of this statement
#280: FILE: net/atm/proc.c:643:
+	if (v == (void *)1)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#282: FILE: net/atm/proc.c:645:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#284: FILE: net/atm/proc.c:647:
+^I^Istruct neighbour *n = state->n;^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#289: FILE: net/atm/proc.c:652:
+  ^Ireturn 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#289: FILE: net/atm/proc.c:652:
+  ^Ireturn 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: net/atm/proc.c:652:
+  ^Ireturn 0;$

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#292: FILE: net/atm/proc.c:655:
+static struct seq_operations atm_arp_seq_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct file_operations should normally be const
#338: FILE: net/atm/proc.c:699:
+static struct file_operations atm_seq_arp_fops = {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000356674.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 15 warnings, 6 checks, 312 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000356674.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
