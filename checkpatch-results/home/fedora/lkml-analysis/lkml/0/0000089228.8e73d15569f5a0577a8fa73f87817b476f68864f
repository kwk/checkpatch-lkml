ERROR:TRAILING_WHITESPACE: trailing whitespace
#103: FILE: arch/i386/Makefile:49:
+mcore-y  := $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#165: FILE: arch/i386/kernel/default.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#181: FILE: arch/i386/kernel/default.c:17:
+^I^I^I^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#182: FILE: arch/i386/kernel/default.c:18:
+					
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#192: FILE: arch/i386/kernel/default.c:28:
+int no_broadcast=DEFAULT_SEND_IPI;
                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#197: FILE: arch/i386/kernel/default.c:33:
+	printk ("Using %s mode\n", no_broadcast ? "No IPI Broadcast" :

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#197: FILE: arch/i386/kernel/default.c:33:
+	printk ("Using %s mode\n", no_broadcast ? "No IPI Broadcast" :

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#202: FILE: arch/i386/kernel/default.c:38:
+__setup("no_ipi_broadcast", no_ipi_broadcast);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#206: FILE: arch/i386/kernel/default.c:42:
+	printk ("Using IPI %s mode\n", no_broadcast ? "No-Shortcut" :

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#206: FILE: arch/i386/kernel/default.c:42:
+	printk ("Using IPI %s mode\n", no_broadcast ? "No-Shortcut" :

CHECK:LINE_SPACING: Please don't use multiple blank lines
#235: FILE: arch/i386/kernel/mca.c:466:
 
+

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#244: FILE: arch/i386/kernel/mca.c:475:
+#define mca_nmi_hook() printk("NMI generated from unknown source!\n");

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#244: FILE: arch/i386/kernel/mca.c:475:
+#define mca_nmi_hook() printk("NMI generated from unknown source!\n");

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:INCLUDE_LINUX: Use #include <linux/processor.h> instead of <asm/processor.h>
#527: FILE: include/asm-i386/acpi.h:34:
+#include <asm/processor.h>	/* defines boot_cpu_data */

WARNING:INCLUDE_LINUX: Use #include <linux/acpi.h> instead of <asm/acpi.h>
#543: FILE: include/asm-i386/arch_hooks.h:8:
+#include <asm/acpi.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#598: FILE: include/asm-i386/arch_hooks.h:63:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#612: FILE: include/asm-i386/arch_hooks.h:77:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#625: FILE: include/asm-i386/arch_hooks.h:90:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#637: FILE: include/asm-i386/arch_hooks.h:102:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#655: FILE: include/asm-i386/mach-default/mach_hooks.h:1:
+#ifndef _MACH_HOOKS_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#666: FILE: include/asm-i386/mach-visws/mach_hooks.h:1:
+#ifndef MACH_HOOKS_H

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#671: FILE: include/asm-i386/mach-visws/mach_hooks.h:6:
+extern void visws_get_board_type_and_rev(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#674: FILE: include/asm-i386/mach-visws/mach_hooks.h:9:
+extern void visws_time_init_hook(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#677: FILE: include/asm-i386/mach-visws/mach_hooks.h:12:
+extern void visws_trap_init_hook(void);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#686: FILE: include/asm-i386/mach-voyager/mach_hooks.h:1:
+#ifndef MACH_HOOKS_H

CHECK:LINE_SPACING: Please don't use multiple blank lines
#708: FILE: include/asm-i386/mach-voyager/mach_hooks.h:23:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#714: FILE: include/asm-i386/mach-voyager/mach_hooks.h:29:
+ *^Iroutines that may be needed before setup_arch() runs. $

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#718: FILE: include/asm-i386/mach-voyager/mach_hooks.h:33:
+#define pre_setup_arch_hook()	\
+do { 				\
+	tsc_disable = 1;	\
+} while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#719: FILE: include/asm-i386/mach-voyager/mach_hooks.h:34:
+do { ^I^I^I^I\$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000089228.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 14 warnings, 11 checks, 381 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000089228.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
