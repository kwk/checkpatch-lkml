WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
diff -p -purN linux-2.6.6-bk8/arch/ppc/kernel/setup.c linux-2.6.6-bk8.autoconsole/arch/ppc/kernel/setup.c

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#49: FILE: arch/ppc/kernel/setup.c:480:
+extern char *of_stdout_device;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:BRACES: braces {} should be used on all arms of this statement
#69: FILE: arch/ppc/kernel/setup.c:500:
+	if (strcmp(name, "serial") == 0) {
[...]
+	} else if (strcmp(name, "ch-a") == 0)
[...]
+	else if (strcmp(name, "ch-b") == 0)
[...]
+	else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#72: FILE: arch/ppc/kernel/setup.c:503:
+		u32 *reg = (u32 *)get_property(prom_stdout, "reg", &i);
+		if (i > 8) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#73: FILE: arch/ppc/kernel/setup.c:504:
+			switch (reg[1]) {
+				case 0x3f8:
[...]
+				case 0x2f8:
[...]
+				case 0x898:
[...]
+				case 0x890:
[...]
+				default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#112: FILE: arch/ppc/syslib/prom_init.c:121:
+char *of_stdout_device __initdata = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000276247.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 3 warnings, 1 checks, 86 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000276247.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
