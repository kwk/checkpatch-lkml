WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
For now, do_file_page installs the PTE and doesn't check the fault type, if it

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#80: FILE: arch/i386/mm/fault.c:331:
+		case 1:		/* read, present - when does this happen? Maybe for NX exceptions? */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#107: FILE: arch/i386/mm/fault.c:375:
+	 * already handled otherwise. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#115: FILE: arch/i386/mm/fault.c:383:
+		 * cumbersome. However, for now things should work for i386. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#158: FILE: mm/memory.c:1896:
+		 * calling do_wp_page on write faults. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#183: FILE: mm/memory.c:1946:
+		 * protections like in handle_pte_fault. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#223: FILE: mm/memory.c:2009:
+		 * VM_NONUNIFORM the check is skipped. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#251: FILE: mm/memory.c:2033:
+	 * protection. */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#271: FILE: mm/memory.c:2048:
+			printk(KERN_DEBUG "The first handle_pte_fault test didn't work:\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#275: FILE: mm/memory.c:2052:
+			printk(KERN_ALERT "PROT_NONE mapping in UNIFORM VMA!\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#311: FILE: mm/memory.c:2084:
+int __handle_mm_fault(struct mm_struct *mm, struct vm_area_struct * vma,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#312: FILE: mm/memory.c:2085:
+int __handle_mm_fault(struct mm_struct *mm, struct vm_area_struct * vma,
+		unsigned long address, int access_mask)

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#335: FILE: include/linux/mm.h:717:
+extern int __handle_mm_fault(struct mm_struct *mm,struct vm_area_struct *vma, unsigned long address, int access_mask);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxV)
#335: FILE: include/linux/mm.h:717:
+extern int __handle_mm_fault(struct mm_struct *mm,struct vm_area_struct *vma, unsigned long address, int access_mask);
                                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#335: FILE: include/linux/mm.h:717:
+extern int __handle_mm_fault(struct mm_struct *mm,struct vm_area_struct *vma, unsigned long address, int access_mask);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#337: FILE: include/linux/mm.h:719:
+static inline int handle_mm_fault(struct mm_struct *mm,struct vm_area_struct *vma,
                                                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#338: FILE: include/linux/mm.h:720:
+static inline int handle_mm_fault(struct mm_struct *mm,struct vm_area_struct *vma,
+		unsigned long address, int write_access)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000160118.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 11 warnings, 3 checks, 264 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000160118.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
