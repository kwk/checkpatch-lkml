WARNING:TYPO_SPELLING: 'dynamicly' may be misspelled - perhaps 'dynamically'?
#70: FILE: Documentation/sysctl/vm.txt:126:
+The thrashing-threshold is dynamicly estimated according to the
                            ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#124: FILE: include/linux/sysctl.h:185:
+	VM_READAHEAD_RATIO=30, /* percent of read-ahead size to thrashing-threshold */
 	                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#125: FILE: include/linux/sysctl.h:186:
+	VM_READAHEAD_HIT_RATE=31, /* one accessed page legitimizes so many read-ahead pages */
 	                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#126: FILE: include/linux/sysctl.h:187:
+	VM_READAHEAD_LIVE_CHUNK=32, /* pin no more than that many pages for a live reader */
 	                       ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#136: FILE: kernel/sysctl.c:71:
+extern int readahead_ratio;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#137: FILE: kernel/sysctl.c:72:
+extern int readahead_hit_rate;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#138: FILE: kernel/sysctl.c:73:
+extern int readahead_live_chunk;

WARNING:DUPLICATED_SYSCTL_CONST: duplicated sysctl range checking value 'zero', consider using the shared one in include/linux/sysctl.h
#162: FILE: kernel/sysctl.c:882:
+		.extra1		= &zero,

Commit d91bff3011cf ("proc/sysctl: add shared variables for range
check") added some shared const variables to be used instead of a local
copy in each source file.

Consider replacing the sysctl range checking value with the shared
one in include/linux/sysctl.h.  The following conversion scheme may
be used::

  &zero     ->  SYSCTL_ZERO
  &one      ->  SYSCTL_ONE
  &int_max  ->  SYSCTL_INT_MAX

See:

  1. https://lore.kernel.org/lkml/20190430180111.10688-1-mcroce@redhat.com/
  2. https://lore.kernel.org/lkml/20190531131422.14970-1-mcroce@redhat.com/

WARNING:DUPLICATED_SYSCTL_CONST: duplicated sysctl range checking value 'one', consider using the shared one in include/linux/sysctl.h
#172: FILE: kernel/sysctl.c:892:
+		.extra1		= &one,

WARNING:DUPLICATED_SYSCTL_CONST: duplicated sysctl range checking value 'zero', consider using the shared one in include/linux/sysctl.h
#182: FILE: kernel/sysctl.c:902:
+		.extra1		= &zero,

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#208: FILE: mm/readahead.c:38:
+int readahead_live_chunk = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#234: FILE: mm/readahead.c:833:
+	*ra_max = min(min(pages/2, 0xFFFFUL), ra->ra_pages);
 	                       ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#235: FILE: mm/readahead.c:834:
+	*ra_min = min(min(MIN_RA_PAGES + (pages>>14), KB(128)), *ra_max/2);
 	                                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#235: FILE: mm/readahead.c:834:
+	*ra_min = min(min(MIN_RA_PAGES + (pages>>14), KB(128)), *ra_max/2);
 	                                                               ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000129149.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 7 warnings, 3 checks, 175 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000129149.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
