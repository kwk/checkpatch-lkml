WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
diff -u -p -r linux/include/net/irda-d5/irlmp.h linux/include/net/irda/irlmp.h

WARNING:TYPO_SPELLING: 'concurent' may be misspelled - perhaps 'concurrent'?
#81: FILE: include/net/irda/irqueue.h:42:
+#define HB_NOLOCK	0	/* No concurent access prevention */
                  	 	      ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'concurent' may be misspelled - perhaps 'concurrent'?
#82: FILE: include/net/irda/irqueue.h:43:
+#define HB_LOCK		1	/* Prevent concurent write with global lock */
                		 	           ^^^^^^^^^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#107: FILE: include/net/irda/irqueue.h:75:
+	irda_queue_t* hb_queue[HASHBIN_SIZE] IRDA_ALIGN;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo*    bar" should be "foo *bar"
#119: FILE: include/net/irda/irqueue.h:88:
+void*    hashbin_find(hashbin_t* hashbin, long hashv, char* name);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#119: FILE: include/net/irda/irqueue.h:88:
+void*    hashbin_find(hashbin_t* hashbin, long hashv, char* name);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#119: FILE: include/net/irda/irqueue.h:88:
+void*    hashbin_find(hashbin_t* hashbin, long hashv, char* name);

ERROR:POINTER_LOCATION: "foo*    bar" should be "foo *bar"
#120: FILE: include/net/irda/irqueue.h:89:
+void*    hashbin_lock_find(hashbin_t* hashbin, long hashv, char* name);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#120: FILE: include/net/irda/irqueue.h:89:
+void*    hashbin_lock_find(hashbin_t* hashbin, long hashv, char* name);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#120: FILE: include/net/irda/irqueue.h:89:
+void*    hashbin_lock_find(hashbin_t* hashbin, long hashv, char* name);

ERROR:POINTER_LOCATION: "foo*    bar" should be "foo *bar"
#121: FILE: include/net/irda/irqueue.h:90:
+void*    hashbin_find_next(hashbin_t* hashbin, long hashv, char* name,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#121: FILE: include/net/irda/irqueue.h:90:
+void*    hashbin_find_next(hashbin_t* hashbin, long hashv, char* name,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#121: FILE: include/net/irda/irqueue.h:90:
+void*    hashbin_find_next(hashbin_t* hashbin, long hashv, char* name,

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#122: FILE: include/net/irda/irqueue.h:91:
+			   void ** pnext);

WARNING:TYPO_SPELLING: 'disovery' may be misspelled - perhaps 'discovery'?
#156: FILE: net/irda/discovery.c:104:
+ *    Merge a disovery log into the cachelog.
               ^^^^^^^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#171: FILE: net/irda/discovery.c:125:
+	/*
+	 * Locking : we are the only owner of this discovery log, so

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#297: FILE: net/irda/irda_device.c:441:
+	if (!(reg = hashbin_lock_find(dongles, type, NULL))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:TYPO_SPELLING: 'independant' may be misspelled - perhaps 'independent'?
#349: FILE: net/irda/iriap.c:993:
+		 * All other uses of attrib spinlock are independant of
 		                                         ^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#350: FILE: net/irda/iriap.c:994:
+		 * the object spinlock, so we are safe. Jean II */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'precendence' may be misspelled - perhaps 'precedence'?
#377: FILE: net/irda/irias_object.c:96:
+	/* Locking notes : the attrib spinlock has lower precendence
 	                                                 ^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#379: FILE: net/irda/irias_object.c:98:
+	 * while holding any attrib spinlock (risk of deadlock). Jean II */

ERROR:SPACING: space prohibited before that close parenthesis ')'
#466: FILE: net/irda/irlap.c:149:
+		 (hashbin_lock_find(irlap, self->saddr, NULL)) );

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#476: FILE: net/irda/irlap.c:534:
+	self->discovery_log= hashbin_new(HB_NOLOCK);
 	                   ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "self"
#494: FILE: net/irda/irlap.c:1102:
+		ASSERT(self != NULL, break;);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'comming' may be misspelled - perhaps 'coming'?
#645: FILE: net/irda/irlmp.c:950:
+	 * On the other hand, comming here through irlmp_discovery_request()
 	                      ^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#665: FILE: net/irda/irlmp.c:990:
+	while (NULL != hashbin_find_next(irlmp->clients, (long) client, NULL,

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#665: FILE: net/irda/irlmp.c:990:
+	while (NULL != hashbin_find_next(irlmp->clients, (long) client, NULL,

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:SPACING: No space is necessary after a cast
#666: FILE: net/irda/irlmp.c:991:
+					 (void *) &client_next) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#666: FILE: net/irda/irlmp.c:991:
+					 (void *) &client_next) ) {

CHECK:SPACING: No space is necessary after a cast
#687: FILE: net/irda/irlmp.c:1020:
+	while (NULL != hashbin_find_next(irlmp->clients, (long) client, NULL,

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#687: FILE: net/irda/irlmp.c:1020:
+	while (NULL != hashbin_find_next(irlmp->clients, (long) client, NULL,

CHECK:SPACING: No space is necessary after a cast
#688: FILE: net/irda/irlmp.c:1021:
+					 (void *) &client_next) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#688: FILE: net/irda/irlmp.c:1021:
+					 (void *) &client_next) ) {

CHECK:SPACING: No space is necessary after a cast
#710: FILE: net/irda/irlmp.c:1224:
+	curr = (struct lsap_cb *) hashbin_get_first( self->lsaps);

ERROR:SPACING: space prohibited after that open parenthesis '('
#710: FILE: net/irda/irlmp.c:1224:
+	curr = (struct lsap_cb *) hashbin_get_first( self->lsaps);

CHECK:SPACING: No space is necessary after a cast
#711: FILE: net/irda/irlmp.c:1225:
+	while (NULL != hashbin_find_next(self->lsaps, (long) curr, NULL,

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#711: FILE: net/irda/irlmp.c:1225:
+	while (NULL != hashbin_find_next(self->lsaps, (long) curr, NULL,

CHECK:SPACING: No space is necessary after a cast
#712: FILE: net/irda/irlmp.c:1226:
+					 (void *) &next) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#712: FILE: net/irda/irlmp.c:1226:
+					 (void *) &next) ) {

ERROR:SPACING: space required before the open parenthesis '('
#746: FILE: net/irda/irlmp.c:1274:
+		if(next == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!next"
#746: FILE: net/irda/irlmp.c:1274:
+		if(next == NULL)

CHECK:SPACING: No space is necessary after a cast
#747: FILE: net/irda/irlmp.c:1275:
+			next = (struct lsap_cb *) hashbin_get_first(self->lsaps);

CHECK:SPACING: No space is necessary after a cast
#749: FILE: net/irda/irlmp.c:1277:
+		curr = hashbin_find_next(self->lsaps, (long) next, NULL,

CHECK:SPACING: No space is necessary after a cast
#750: FILE: net/irda/irlmp.c:1278:
+					 (void *) &self->flow_next);

CHECK:SPACING: No space is necessary after a cast
#773: FILE: net/irda/irlmp.c:1467:
+	service = hashbin_lock_find(irlmp->services, (long) handle, NULL);

CHECK:SPACING: No space is necessary after a cast
#797: FILE: net/irda/irlmp.c:1544:
+	client = hashbin_lock_find(irlmp->clients, (long) handle, NULL);

CHECK:SPACING: No space is necessary after a cast
#806: FILE: net/irda/irlmp.c:1574:
+	client = hashbin_lock_find(irlmp->clients, (long) handle, NULL);

WARNING:TYPO_SPELLING: 'independant' may be misspelled - perhaps 'independent'?
#828: FILE: net/irda/irlmp.c:1625:
+		 * All other uses of attrib spinlock are independant of
 		                                         ^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#829: FILE: net/irda/irlmp.c:1626:
+		 * the object spinlock, so we are safe. Jean II */

WARNING:TYPO_SPELLING: 'independant' may be misspelled - perhaps 'independent'?
#882: FILE: net/irda/irlmp.c:1787:
+		 * All other uses of attrib spinlock are independant of
 		                                         ^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#883: FILE: net/irda/irlmp.c:1788:
+		 * the object spinlock, so we are safe. Jean II */

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#916: FILE: net/irda/irlmp_event.c:211:
+/*
+ * Send an event on all LSAPs attached to this LAP.

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#919: FILE: net/irda/irlmp_event.c:214:
+irlmp_do_all_lsap_event(hashbin_t *	lsap_hashbin,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#935: FILE: net/irda/irlmp_event.c:230:
+	 * enumeration. - Jean II */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#939: FILE: net/irda/irlmp_event.c:234:
+	 * skb_clone() it. - Jean II */

CHECK:SPACING: No space is necessary after a cast
#941: FILE: net/irda/irlmp_event.c:236:
+	lsap = (struct lsap_cb *) hashbin_get_first(lsap_hashbin);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#943: FILE: net/irda/irlmp_event.c:238:
+	while (NULL != hashbin_find_next(lsap_hashbin,

CHECK:SPACING: No space is necessary after a cast
#944: FILE: net/irda/irlmp_event.c:239:
+					 (long) lsap,

CHECK:SPACING: No space is necessary after a cast
#946: FILE: net/irda/irlmp_event.c:241:
+					 (void *) &lsap_next) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#946: FILE: net/irda/irlmp_event.c:241:
+					 (void *) &lsap_next) ) {

WARNING:TYPO_SPELLING: 'concurent' may be misspelled - perhaps 'concurrent'?
#1122: FILE: net/irda/irlmp_frame.c:421:
+	/* Prevent concurent read to get garbage */
 	           ^^^^^^^^^

WARNING:TYPO_SPELLING: 'incomming' may be misspelled - perhaps 'incoming'?
#1152: FILE: net/irda/irlmp_frame.c:482:
+			/* This is where the dest lsap sel is set on incomming
 			                                             ^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1153: FILE: net/irda/irlmp_frame.c:483:
+			 * lsaps */

ERROR:SPACING: space required before the open parenthesis '('
#1178: FILE: net/irda/irlmp_frame.c:497:
+	if(lsap)

WARNING:TYPO_SPELLING: 'concurent' may be misspelled - perhaps 'concurrent'?
#1196: FILE: net/irda/irqueue.c:53:
+ * Notes on the concurent access to hashbin and other SMP issues
                 ^^^^^^^^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1196: FILE: net/irda/irqueue.c:53:
+/*
+ * Notes on the concurent access to hashbin and other SMP issues

WARNING:TYPO_SPELLING: 'concurent' may be misspelled - perhaps 'concurrent'?
#1202: FILE: net/irda/irqueue.c:59:
+ * management of concurent access to the hashbin and how to guarantee the
                  ^^^^^^^^^

WARNING:TYPO_SPELLING: 'explicitely' may be misspelled - perhaps 'explicitly'?
#1304: FILE: net/irda/irqueue.c:161:
+ * (explicitely or implicitely), you can use HB_NOLOCK
     ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'implicitely' may be misspelled - perhaps 'implicitly'?
#1304: FILE: net/irda/irqueue.c:161:
+ * (explicitely or implicitely), you can use HB_NOLOCK
                    ^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'concurent' may be misspelled - perhaps 'concurrent'?
#1305: FILE: net/irda/irqueue.c:162:
+ *	If the calling module already provide concurent access protection,
   	                                      ^^^^^^^^^

WARNING:TYPO_SPELLING: 'everytime' may be misspelled - perhaps 'every time'?
#1309: FILE: net/irda/irqueue.c:166:
+ * everytime before calling one of the unprotected calls. You also must
    ^^^^^^^^^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1346: FILE: net/irda/irqueue.c:201:
+/*
+ * Hashbin

ERROR:SPACING: space prohibited after that open parenthesis '('
#1348: FILE: net/irda/irqueue.c:203:
+#define GET_HASHBIN(x) ( x & HASHBIN_MASK )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1348: FILE: net/irda/irqueue.c:203:
+#define GET_HASHBIN(x) ( x & HASHBIN_MASK )

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#1348: FILE: net/irda/irqueue.c:203:
+#define GET_HASHBIN(x) ( x & HASHBIN_MASK )

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1351: FILE: net/irda/irqueue.c:206:
+/*
+ * Function hash (name)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1356: FILE: net/irda/irqueue.c:211:
+static __u32 hash( char* name)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1356: FILE: net/irda/irqueue.c:211:
+static __u32 hash( char* name)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1360: FILE: net/irda/irqueue.c:215:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#1361: FILE: net/irda/irqueue.c:216:
+	while(*name) {

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1362: FILE: net/irda/irqueue.c:217:
+		h = (h<<4) + *name++;
 		      ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1363: FILE: net/irda/irqueue.c:218:
+		if ((g = (h & 0xf0000000)))

ERROR:SPACING: spaces required around that '^=' (ctx:WxV)
#1364: FILE: net/irda/irqueue.c:219:
+			h ^=g>>24;
 			  ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#1364: FILE: net/irda/irqueue.c:219:
+			h ^=g>>24;
 			     ^

ERROR:SPACING: spaces required around that '&=' (ctx:WxO)
#1365: FILE: net/irda/irqueue.c:220:
+		h &=~g;
 		  ^

ERROR:SPACING: space required before that '~' (ctx:OxV)
#1365: FILE: net/irda/irqueue.c:220:
+		h &=~g;
 		    ^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1371: FILE: net/irda/irqueue.c:226:
+/*
+ * Function enqueue_first (queue, proc)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1376: FILE: net/irda/irqueue.c:231:
+static void enqueue_first(irda_queue_t **queue, irda_queue_t* element)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1378: FILE: net/irda/irqueue.c:233:
+^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1378: FILE: net/irda/irqueue.c:233:
+{
+	

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#1379: FILE: net/irda/irqueue.c:234:
+	IRDA_DEBUG( 4, __FUNCTION__ "()\n");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1379: FILE: net/irda/irqueue.c:234:
+	IRDA_DEBUG( 4, __FUNCTION__ "()\n");

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1382: FILE: net/irda/irqueue.c:237:
+	/*
+	 * Check if queue is empty.

ERROR:SPACING: space prohibited after that open parenthesis '('
#1384: FILE: net/irda/irqueue.c:239:
+	if ( *queue == NULL ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1384: FILE: net/irda/irqueue.c:239:
+	if ( *queue == NULL ) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!queue"
#1384: FILE: net/irda/irqueue.c:239:
+	if ( *queue == NULL ) {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1386: FILE: net/irda/irqueue.c:241:
+		/*
+		 * Queue is empty.  Insert one element into the queue.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1388: FILE: net/irda/irqueue.c:243:
+		element->q_next = element->q_prev = *queue = element;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1389: FILE: net/irda/irqueue.c:244:
+^I^I$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1392: FILE: net/irda/irqueue.c:247:
+		/*
+		 * Queue is not empty.  Insert element into front of queue.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1404: FILE: net/irda/irqueue.c:259:
+/*
+ * Function enqueue_last (queue, proc)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1409: FILE: net/irda/irqueue.c:264:
+static void __enqueue_last( irda_queue_t **queue, irda_queue_t* element)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1409: FILE: net/irda/irqueue.c:264:
+static void __enqueue_last( irda_queue_t **queue, irda_queue_t* element)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1411: FILE: net/irda/irqueue.c:266:
+	IRDA_DEBUG( 4, __FUNCTION__ "()\n");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1411: FILE: net/irda/irqueue.c:266:
+	IRDA_DEBUG( 4, __FUNCTION__ "()\n");

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1414: FILE: net/irda/irqueue.c:269:
+	/*
+	 * Check if queue is empty.

ERROR:SPACING: space prohibited after that open parenthesis '('
#1416: FILE: net/irda/irqueue.c:271:
+	if ( *queue == NULL ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1416: FILE: net/irda/irqueue.c:271:
+	if ( *queue == NULL ) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!queue"
#1416: FILE: net/irda/irqueue.c:271:
+	if ( *queue == NULL ) {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1418: FILE: net/irda/irqueue.c:273:
+		/*
+		 * Queue is empty.  Insert one element into the queue.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1420: FILE: net/irda/irqueue.c:275:
+		element->q_next = element->q_prev = *queue = element;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1421: FILE: net/irda/irqueue.c:276:
+^I^I$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1424: FILE: net/irda/irqueue.c:279:
+		/*
+		 * Queue is not empty.  Insert element into end of queue.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1430: FILE: net/irda/irqueue.c:285:
+^I}^I$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1433: FILE: net/irda/irqueue.c:288:
+static inline void enqueue_last( irda_queue_t **queue, irda_queue_t* element)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1433: FILE: net/irda/irqueue.c:288:
+static inline void enqueue_last( irda_queue_t **queue, irda_queue_t* element)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1436: FILE: net/irda/irqueue.c:291:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1437: FILE: net/irda/irqueue.c:292:
+        save_flags(flags);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1437: FILE: net/irda/irqueue.c:292:
+        save_flags(flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1438: FILE: net/irda/irqueue.c:293:
+        cli();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1438: FILE: net/irda/irqueue.c:293:
+        cli();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1440: FILE: net/irda/irqueue.c:295:
+        __enqueue_last( queue, element);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1440: FILE: net/irda/irqueue.c:295:
+        __enqueue_last( queue, element);$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1440: FILE: net/irda/irqueue.c:295:
+        __enqueue_last( queue, element);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1442: FILE: net/irda/irqueue.c:297:
+        restore_flags(flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1442: FILE: net/irda/irqueue.c:297:
+        restore_flags(flags);$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1446: FILE: net/irda/irqueue.c:301:
+/*
+ * Function enqueue_queue (queue, list)

ERROR:POINTER_LOCATION: "foo** bar" should be "foo **bar"
#1451: FILE: net/irda/irqueue.c:306:
+static void enqueue_queue( irda_queue_t** queue, irda_queue_t** list )

ERROR:POINTER_LOCATION: "foo** bar" should be "foo **bar"
#1451: FILE: net/irda/irqueue.c:306:
+static void enqueue_queue( irda_queue_t** queue, irda_queue_t** list )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1451: FILE: net/irda/irqueue.c:306:
+static void enqueue_queue( irda_queue_t** queue, irda_queue_t** list )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1451: FILE: net/irda/irqueue.c:306:
+static void enqueue_queue( irda_queue_t** queue, irda_queue_t** list )

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1453: FILE: net/irda/irqueue.c:308:
+	irda_queue_t* tmp;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1454: FILE: net/irda/irqueue.c:309:
+^I$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1456: FILE: net/irda/irqueue.c:311:
+	/*
+	 * Check if queue is empty

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1457: FILE: net/irda/irqueue.c:312:
+^I */ $

ERROR:SPACING: space prohibited after that open parenthesis '('
#1458: FILE: net/irda/irqueue.c:313:
+	if ( *queue ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1458: FILE: net/irda/irqueue.c:313:
+	if ( *queue ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1460: FILE: net/irda/irqueue.c:315:
+^I^I(*queue)->q_prev->q_next = (*list); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1465: FILE: net/irda/irqueue.c:320:
+^I^I*queue                   = (*list); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1467: FILE: net/irda/irqueue.c:322:
+^I$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1472: FILE: net/irda/irqueue.c:327:
+/*
+ * Function enqueue_second (queue, proc)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1477: FILE: net/irda/irqueue.c:332:
+static void enqueue_second(irda_queue_t **queue, irda_queue_t* element)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1479: FILE: net/irda/irqueue.c:334:
+	IRDA_DEBUG( 0, "enqueue_second()\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'enqueue_second', this function's name, in a string
#1479: FILE: net/irda/irqueue.c:334:
+	IRDA_DEBUG( 0, "enqueue_second()\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1482: FILE: net/irda/irqueue.c:337:
+	/*
+	 * Check if queue is empty.

ERROR:SPACING: space prohibited after that open parenthesis '('
#1484: FILE: net/irda/irqueue.c:339:
+	if ( *queue == NULL ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1484: FILE: net/irda/irqueue.c:339:
+	if ( *queue == NULL ) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!queue"
#1484: FILE: net/irda/irqueue.c:339:
+	if ( *queue == NULL ) {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1486: FILE: net/irda/irqueue.c:341:
+		/*
+		 * Queue is empty.  Insert one element into the queue.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1488: FILE: net/irda/irqueue.c:343:
+		element->q_next = element->q_prev = *queue = element;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1489: FILE: net/irda/irqueue.c:344:
+^I^I$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1492: FILE: net/irda/irqueue.c:347:
+		/*
+		 * Queue is not empty.  Insert element into ..

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1503: FILE: net/irda/irqueue.c:358:
+/*
+ * Function dequeue (queue)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1512: FILE: net/irda/irqueue.c:367:
+	IRDA_DEBUG( 4, "dequeue_first()\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dequeue_first', this function's name, in a string
#1512: FILE: net/irda/irqueue.c:367:
+	IRDA_DEBUG( 4, "dequeue_first()\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1513: FILE: net/irda/irqueue.c:368:
+^I$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1515: FILE: net/irda/irqueue.c:370:
+	/*
+	 * Set return value

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1518: FILE: net/irda/irqueue.c:373:
+^I$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1519: FILE: net/irda/irqueue.c:374:
+	if ( *queue == NULL ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1519: FILE: net/irda/irqueue.c:374:
+	if ( *queue == NULL ) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!queue"
#1519: FILE: net/irda/irqueue.c:374:
+	if ( *queue == NULL ) {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1521: FILE: net/irda/irqueue.c:376:
+		/*
+		 * Queue was empty.

ERROR:SPACING: space prohibited after that open parenthesis '('
#1523: FILE: net/irda/irqueue.c:378:
+	} else if ( (*queue)->q_next == *queue ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1523: FILE: net/irda/irqueue.c:378:
+	} else if ( (*queue)->q_next == *queue ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1524: FILE: net/irda/irqueue.c:379:
+^I^I/* $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1525: FILE: net/irda/irqueue.c:380:
+		/* 
+		 *  Queue only contained a single element. It will now be

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1526: FILE: net/irda/irqueue.c:381:
+^I^I *  empty.  $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1531: FILE: net/irda/irqueue.c:386:
+		/*
+		 * Queue contained several element.  Remove the first one.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1537: FILE: net/irda/irqueue.c:392:
+^I$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1539: FILE: net/irda/irqueue.c:394:
+	/*
+	 * Return the removed entry (or NULL of queue was empty).

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1545: FILE: net/irda/irqueue.c:400:
+/*
+ * Function dequeue_general (queue, element)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1549: FILE: net/irda/irqueue.c:404:
+static irda_queue_t *dequeue_general(irda_queue_t **queue, irda_queue_t* element)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1552: FILE: net/irda/irqueue.c:407:
+^I$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1553: FILE: net/irda/irqueue.c:408:
+	IRDA_DEBUG( 4, "dequeue_general()\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'dequeue_general', this function's name, in a string
#1553: FILE: net/irda/irqueue.c:408:
+	IRDA_DEBUG( 4, "dequeue_general()\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1554: FILE: net/irda/irqueue.c:409:
+^I$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1556: FILE: net/irda/irqueue.c:411:
+	/*
+	 * Set return value

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1559: FILE: net/irda/irqueue.c:414:
+^I^I$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1560: FILE: net/irda/irqueue.c:415:
+	if ( *queue == NULL ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1560: FILE: net/irda/irqueue.c:415:
+	if ( *queue == NULL ) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!queue"
#1560: FILE: net/irda/irqueue.c:415:
+	if ( *queue == NULL ) {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1562: FILE: net/irda/irqueue.c:417:
+		/*
+		 * Queue was empty.

ERROR:SPACING: space prohibited after that open parenthesis '('
#1564: FILE: net/irda/irqueue.c:419:
+	} else if ( (*queue)->q_next == *queue ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1564: FILE: net/irda/irqueue.c:419:
+	} else if ( (*queue)->q_next == *queue ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1565: FILE: net/irda/irqueue.c:420:
+^I^I/* $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1566: FILE: net/irda/irqueue.c:421:
+		/* 
+		 *  Queue only contained a single element. It will now be

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1567: FILE: net/irda/irqueue.c:422:
+^I^I *  empty.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1570: FILE: net/irda/irqueue.c:425:
+^I^I$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1573: FILE: net/irda/irqueue.c:428:
+		/*
+		 *  Remove specific element.

ERROR:SPACING: space prohibited after that open parenthesis '('
#1577: FILE: net/irda/irqueue.c:432:
+		if ( (*queue) == element)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1580: FILE: net/irda/irqueue.c:435:
+^I$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1582: FILE: net/irda/irqueue.c:437:
+	/*
+	 * Return the removed entry (or NULL of queue was empty).

ERROR:SPACING: space prohibited after that open parenthesis '('
#1609: FILE: net/irda/irqueue.c:470:
+	if ( hashbin->hb_type & HB_LOCK ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1609: FILE: net/irda/irqueue.c:470:
+	if ( hashbin->hb_type & HB_LOCK ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1609: FILE: net/irda/irqueue.c:470:
+	if ( hashbin->hb_type & HB_LOCK ) {
+		spin_lock_init(&hashbin->hb_spinlock);
+	}

ERROR:SPACING: space prohibited after that open parenthesis '('
#1640: FILE: net/irda/irqueue.c:527:
+	if ( hashbin->hb_type & HB_LOCK ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1640: FILE: net/irda/irqueue.c:527:
+	if ( hashbin->hb_type & HB_LOCK ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1640: FILE: net/irda/irqueue.c:527:
+	if ( hashbin->hb_type & HB_LOCK ) {
+		spin_lock_irqsave(&hashbin->hb_spinlock, flags);
+	}

ERROR:SPACING: space prohibited after that open parenthesis '('
#1656: FILE: net/irda/irqueue.c:550:
+	if ( hashbin->hb_type & HB_LOCK) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1656: FILE: net/irda/irqueue.c:550:
+	if ( hashbin->hb_type & HB_LOCK) {
+		spin_unlock_irqrestore(&hashbin->hb_spinlock, flags);
+	}

ERROR:SPACING: space prohibited after that open parenthesis '('
#1684: FILE: net/irda/irqueue.c:588:
+	if ( hashbin->hb_type & HB_LOCK ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1684: FILE: net/irda/irqueue.c:588:
+	if ( hashbin->hb_type & HB_LOCK ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1684: FILE: net/irda/irqueue.c:588:
+	if ( hashbin->hb_type & HB_LOCK ) {
+		spin_lock_irqsave(&hashbin->hb_spinlock, flags);
 	} /* Default is no-lock  */

ERROR:SPACING: space prohibited after that open parenthesis '('
#1700: FILE: net/irda/irqueue.c:612:
+	if ( hashbin->hb_type & HB_LOCK ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1700: FILE: net/irda/irqueue.c:612:
+	if ( hashbin->hb_type & HB_LOCK ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1700: FILE: net/irda/irqueue.c:612:
+	if ( hashbin->hb_type & HB_LOCK ) {
+		spin_unlock_irqrestore(&hashbin->hb_spinlock, flags);
+	} /* Default is no-lock  */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1707: FILE: net/irda/irqueue.c:617:
+/* $

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1708: FILE: net/irda/irqueue.c:618:
+/* 
+ *  Function hashbin_remove_first (hashbin)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1718: FILE: net/irda/irqueue.c:626:
+void *hashbin_remove_first( hashbin_t *hashbin)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1744: FILE: net/irda/irqueue.c:632:
+	if ( hashbin->hb_type & HB_LOCK ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1744: FILE: net/irda/irqueue.c:632:
+	if ( hashbin->hb_type & HB_LOCK ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1744: FILE: net/irda/irqueue.c:632:
+	if ( hashbin->hb_type & HB_LOCK ) {
+		spin_lock_irqsave(&hashbin->hb_spinlock, flags);
 	} /* Default is no-lock  */

ERROR:SPACING: space prohibited after that open parenthesis '('
#1793: FILE: net/irda/irqueue.c:636:
+	entry = hashbin_get_first( hashbin);

ERROR:SPACING: space prohibited after that open parenthesis '('
#1794: FILE: net/irda/irqueue.c:637:
+	if ( entry != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "entry"
#1794: FILE: net/irda/irqueue.c:637:
+	if ( entry != NULL) {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1798: FILE: net/irda/irqueue.c:641:
+		/*
+		 * Locate hashbin

ERROR:SPACING: space prohibited after that open parenthesis '('
#1801: FILE: net/irda/irqueue.c:644:
+		bin = GET_HASHBIN( hashv );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1801: FILE: net/irda/irqueue.c:644:
+		bin = GET_HASHBIN( hashv );

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1806: FILE: net/irda/irqueue.c:647:
+		/*
+		 * Dequeue the entry...

CHECK:SPACING: No space is necessary after a cast
#1808: FILE: net/irda/irqueue.c:649:
+		dequeue_general( (irda_queue_t**) &hashbin->hb_queue[ bin ],

ERROR:POINTER_LOCATION: "(foo**)" should be "(foo **)"
#1808: FILE: net/irda/irqueue.c:649:
+		dequeue_general( (irda_queue_t**) &hashbin->hb_queue[ bin ],

ERROR:SPACING: space prohibited after that open square bracket '['
#1808: FILE: net/irda/irqueue.c:649:
+		dequeue_general( (irda_queue_t**) &hashbin->hb_queue[ bin ],

ERROR:SPACING: space prohibited before that close square bracket ']'
#1808: FILE: net/irda/irqueue.c:649:
+		dequeue_general( (irda_queue_t**) &hashbin->hb_queue[ bin ],

ERROR:SPACING: space prohibited after that open parenthesis '('
#1808: FILE: net/irda/irqueue.c:649:
+		dequeue_general( (irda_queue_t**) &hashbin->hb_queue[ bin ],

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1809: FILE: net/irda/irqueue.c:650:
+		dequeue_general( (irda_queue_t**) &hashbin->hb_queue[ bin ],
+				 (irda_queue_t*) entry );

CHECK:SPACING: No space is necessary after a cast
#1809: FILE: net/irda/irqueue.c:650:
+				 (irda_queue_t*) entry );

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1809: FILE: net/irda/irqueue.c:650:
+				 (irda_queue_t*) entry );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1809: FILE: net/irda/irqueue.c:650:
+				 (irda_queue_t*) entry );

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1818: FILE: net/irda/irqueue.c:656:
+		/*
+		 *  Check if this item is the currently selected item, and in

ERROR:SPACING: space prohibited after that open parenthesis '('
#1821: FILE: net/irda/irqueue.c:659:
+		if ( entry == hashbin->hb_current)

ERROR:SPACING: space prohibited after that open parenthesis '('
#1827: FILE: net/irda/irqueue.c:664:
+	if ( hashbin->hb_type & HB_LOCK ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1827: FILE: net/irda/irqueue.c:664:
+	if ( hashbin->hb_type & HB_LOCK ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1827: FILE: net/irda/irqueue.c:664:
+	if ( hashbin->hb_type & HB_LOCK ) {
+		spin_unlock_irqrestore(&hashbin->hb_spinlock, flags);
+	} /* Default is no-lock  */

ERROR:SPACING: space prohibited after that open parenthesis '('
#1843: FILE: net/irda/irqueue.c:705:
+	if ( hashbin->hb_type & HB_LOCK ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1843: FILE: net/irda/irqueue.c:705:
+	if ( hashbin->hb_type & HB_LOCK ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1843: FILE: net/irda/irqueue.c:705:
+	if ( hashbin->hb_type & HB_LOCK ) {
+		spin_lock_irqsave(&hashbin->hb_spinlock, flags);
 	} /* Default is no-lock  */

ERROR:SPACING: space prohibited after that open parenthesis '('
#1858: FILE: net/irda/irqueue.c:754:
+	if ( hashbin->hb_type & HB_LOCK ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1858: FILE: net/irda/irqueue.c:754:
+	if ( hashbin->hb_type & HB_LOCK ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1858: FILE: net/irda/irqueue.c:754:
+	if ( hashbin->hb_type & HB_LOCK ) {
+		spin_unlock_irqrestore(&hashbin->hb_spinlock, flags);
+	} /* Default is no-lock  */

ERROR:SPACING: space prohibited after that open parenthesis '('
#1878: FILE: net/irda/irqueue.c:791:
+	if ( hashbin->hb_type & HB_LOCK ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1878: FILE: net/irda/irqueue.c:791:
+	if ( hashbin->hb_type & HB_LOCK ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1878: FILE: net/irda/irqueue.c:791:
+	if ( hashbin->hb_type & HB_LOCK ) {
+		spin_lock_irqsave(&hashbin->hb_spinlock, flags);
+	} /* Default is no-lock  */

ERROR:SPACING: space prohibited after that open parenthesis '('
#1907: FILE: net/irda/irqueue.c:822:
+	if ( hashbin->hb_type & HB_LOCK ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1907: FILE: net/irda/irqueue.c:822:
+	if ( hashbin->hb_type & HB_LOCK ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1907: FILE: net/irda/irqueue.c:822:
+	if ( hashbin->hb_type & HB_LOCK ) {
+		spin_unlock_irqrestore(&hashbin->hb_spinlock, flags);
+	} /* Default is no-lock  */

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1919: FILE: net/irda/irqueue.c:832:
+/*
+ * Function hashbin_common_find (hashbin, hashv, name)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1924: FILE: net/irda/irqueue.c:837:
+void* hashbin_find( hashbin_t* hashbin, long hashv, char* name )

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1924: FILE: net/irda/irqueue.c:837:
+void* hashbin_find( hashbin_t* hashbin, long hashv, char* name )

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1924: FILE: net/irda/irqueue.c:837:
+void* hashbin_find( hashbin_t* hashbin, long hashv, char* name )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1924: FILE: net/irda/irqueue.c:837:
+void* hashbin_find( hashbin_t* hashbin, long hashv, char* name )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1924: FILE: net/irda/irqueue.c:837:
+void* hashbin_find( hashbin_t* hashbin, long hashv, char* name )

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1927: FILE: net/irda/irqueue.c:840:
+	irda_queue_t* entry;

ERROR:SPACING: space prohibited after that open parenthesis '('
#1929: FILE: net/irda/irqueue.c:842:
+	IRDA_DEBUG( 4, "hashbin_find()\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hashbin_find', this function's name, in a string
#1929: FILE: net/irda/irqueue.c:842:
+	IRDA_DEBUG( 4, "hashbin_find()\n");

ERROR:SPACING: space prohibited after that open parenthesis '('
#1931: FILE: net/irda/irqueue.c:844:
+	ASSERT( hashbin != NULL, return NULL;);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "hashbin"
#1931: FILE: net/irda/irqueue.c:844:
+	ASSERT( hashbin != NULL, return NULL;);

ERROR:SPACING: space prohibited after that open parenthesis '('
#1932: FILE: net/irda/irqueue.c:845:
+	ASSERT( hashbin->magic == HB_MAGIC, return NULL;);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1935: FILE: net/irda/irqueue.c:848:
+	/*
+	 * Locate hashbin

ERROR:SPACING: space prohibited after that open parenthesis '('
#1937: FILE: net/irda/irqueue.c:850:
+	if ( name )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1937: FILE: net/irda/irqueue.c:850:
+	if ( name )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1938: FILE: net/irda/irqueue.c:851:
+		hashv = hash( name );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1938: FILE: net/irda/irqueue.c:851:
+		hashv = hash( name );

ERROR:SPACING: space prohibited after that open parenthesis '('
#1939: FILE: net/irda/irqueue.c:852:
+	bin = GET_HASHBIN( hashv );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1939: FILE: net/irda/irqueue.c:852:
+	bin = GET_HASHBIN( hashv );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1940: FILE: net/irda/irqueue.c:853:
+^I$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1942: FILE: net/irda/irqueue.c:855:
+	/*
+	 * Search for entry

ERROR:SPACING: space prohibited after that open square bracket '['
#1944: FILE: net/irda/irqueue.c:857:
+	entry = hashbin->hb_queue[ bin];

ERROR:SPACING: space prohibited after that open parenthesis '('
#1945: FILE: net/irda/irqueue.c:858:
+	if ( entry ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1945: FILE: net/irda/irqueue.c:858:
+	if ( entry ) {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1948: FILE: net/irda/irqueue.c:861:
+			/*
+			 * Check for key

ERROR:SPACING: space prohibited after that open parenthesis '('
#1950: FILE: net/irda/irqueue.c:863:
+			if ( entry->q_hash == hashv ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1950: FILE: net/irda/irqueue.c:863:
+			if ( entry->q_hash == hashv ) {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1952: FILE: net/irda/irqueue.c:865:
+				/*
+				 * Name compare too?

ERROR:SPACING: space prohibited after that open parenthesis '('
#1954: FILE: net/irda/irqueue.c:867:
+				if ( name ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1954: FILE: net/irda/irqueue.c:867:
+				if ( name ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#1955: FILE: net/irda/irqueue.c:868:
+					if ( strcmp( entry->q_name, name ) == 0 ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1955: FILE: net/irda/irqueue.c:868:
+					if ( strcmp( entry->q_name, name ) == 0 ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1955: FILE: net/irda/irqueue.c:868:
+					if ( strcmp( entry->q_name, name ) == 0 ) {
+						return entry;
+					}

ERROR:SPACING: space prohibited after that open square bracket '['
#1963: FILE: net/irda/irqueue.c:876:
+		} while ( entry != hashbin->hb_queue[ bin ] );

ERROR:SPACING: space prohibited before that close square bracket ']'
#1963: FILE: net/irda/irqueue.c:876:
+		} while ( entry != hashbin->hb_queue[ bin ] );

ERROR:SPACING: space prohibited after that open parenthesis '('
#1963: FILE: net/irda/irqueue.c:876:
+		} while ( entry != hashbin->hb_queue[ bin ] );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1963: FILE: net/irda/irqueue.c:876:
+		} while ( entry != hashbin->hb_queue[ bin ] );

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1970: FILE: net/irda/irqueue.c:883:
+/*
+ * Function hashbin_lock_find (hashbin, hashv, name)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1978: FILE: net/irda/irqueue.c:891:
+void* hashbin_lock_find( hashbin_t* hashbin, long hashv, char* name )

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1978: FILE: net/irda/irqueue.c:891:
+void* hashbin_lock_find( hashbin_t* hashbin, long hashv, char* name )

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1978: FILE: net/irda/irqueue.c:891:
+void* hashbin_lock_find( hashbin_t* hashbin, long hashv, char* name )

ERROR:SPACING: space prohibited after that open parenthesis '('
#1978: FILE: net/irda/irqueue.c:891:
+void* hashbin_lock_find( hashbin_t* hashbin, long hashv, char* name )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1978: FILE: net/irda/irqueue.c:891:
+void* hashbin_lock_find( hashbin_t* hashbin, long hashv, char* name )

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1981: FILE: net/irda/irqueue.c:894:
+	irda_queue_t* entry;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1987: FILE: net/irda/irqueue.c:900:
+	/*
+	 * Search for entry

CHECK:SPACING: No space is necessary after a cast
#1989: FILE: net/irda/irqueue.c:902:
+	entry = (irda_queue_t* ) hashbin_find( hashbin, hashv, name );

ERROR:POINTER_LOCATION: "(foo* )" should be "(foo *)"
#1989: FILE: net/irda/irqueue.c:902:
+	entry = (irda_queue_t* ) hashbin_find( hashbin, hashv, name );

ERROR:SPACING: space prohibited after that open parenthesis '('
#1989: FILE: net/irda/irqueue.c:902:
+	entry = (irda_queue_t* ) hashbin_find( hashbin, hashv, name );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1989: FILE: net/irda/irqueue.c:902:
+	entry = (irda_queue_t* ) hashbin_find( hashbin, hashv, name );

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1998: FILE: net/irda/irqueue.c:911:
+/*
+ * Function hashbin_find (hashbin, hashv, name, pnext)

WARNING:TYPO_SPELLING: 'concurent' may be misspelled - perhaps 'concurrent'?
#2002: FILE: net/irda/irqueue.c:915:
+ * This function allow to do concurent enumerations without the
                              ^^^^^^^^^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2007: FILE: net/irda/irqueue.c:920:
+void* hashbin_find_next( hashbin_t* hashbin, long hashv, char* name,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2007: FILE: net/irda/irqueue.c:920:
+void* hashbin_find_next( hashbin_t* hashbin, long hashv, char* name,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2007: FILE: net/irda/irqueue.c:920:
+void* hashbin_find_next( hashbin_t* hashbin, long hashv, char* name,

ERROR:SPACING: space prohibited after that open parenthesis '('
#2007: FILE: net/irda/irqueue.c:920:
+void* hashbin_find_next( hashbin_t* hashbin, long hashv, char* name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2008: FILE: net/irda/irqueue.c:921:
+void* hashbin_find_next( hashbin_t* hashbin, long hashv, char* name,
+			 void ** pnext)

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#2008: FILE: net/irda/irqueue.c:921:
+			 void ** pnext)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2011: FILE: net/irda/irqueue.c:924:
+	irda_queue_t* entry;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2017: FILE: net/irda/irqueue.c:930:
+	/*
+	 * Search for current entry

CHECK:SPACING: No space is necessary after a cast
#2021: FILE: net/irda/irqueue.c:934:
+	entry = (irda_queue_t* ) hashbin_find( hashbin, hashv, name );

ERROR:POINTER_LOCATION: "(foo* )" should be "(foo *)"
#2021: FILE: net/irda/irqueue.c:934:
+	entry = (irda_queue_t* ) hashbin_find( hashbin, hashv, name );

ERROR:SPACING: space prohibited after that open parenthesis '('
#2021: FILE: net/irda/irqueue.c:934:
+	entry = (irda_queue_t* ) hashbin_find( hashbin, hashv, name );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2021: FILE: net/irda/irqueue.c:934:
+	entry = (irda_queue_t* ) hashbin_find( hashbin, hashv, name );

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2024: FILE: net/irda/irqueue.c:937:
+	/*
+	 * Trick hashbin_get_next() to return what we want

ERROR:SPACING: space required before the open parenthesis '('
#2026: FILE: net/irda/irqueue.c:939:
+	if(entry) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#2026: FILE: net/irda/irqueue.c:939:
+	if(entry) {
[...]
+	} else
[...]

ERROR:SPACING: space prohibited after that open parenthesis '('
#2028: FILE: net/irda/irqueue.c:941:
+		*pnext = hashbin_get_next( hashbin );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2028: FILE: net/irda/irqueue.c:941:
+		*pnext = hashbin_get_next( hashbin );

CHECK:BRACES: Unbalanced braces around else statement
#2029: FILE: net/irda/irqueue.c:942:
+	} else

WARNING:TYPO_SPELLING: 'concurent' may be misspelled - perhaps 'concurrent'?
#2043: FILE: net/irda/irqueue.c:990:
+ * protect yourself from concurent enumerations. - Jean II
                          ^^^^^^^^^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2303: FILE: net/irda/irsyms.c:141:
+EXPORT_SYMBOL(hashbin_lock_find);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#2304: FILE: net/irda/irsyms.c:142:
+EXPORT_SYMBOL(hashbin_find_next);

CHECK:SPACING: No space is necessary after a cast
#2333: FILE: net/irda/irttp.c:1376:
+	if (!hashbin_find(irttp->tsaps, (int) orig, NULL)) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000436343.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 178 errors, 99 warnings, 41 checks, 2208 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000436343.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
