WARNING:TYPO_SPELLING: 'embeded' may be misspelled - perhaps 'embedded'?
#33: 
o New adapter-i2c-rpx for embeded MPC8XX
                          ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#46: FILE: drivers/i2c/i2c-core.c:22:
+   SMBus 2.0 support by Mark Studebaker <mdsxyz123@yahoo.com>                */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#49: FILE: drivers/i2c/i2c-core.c:24:
+/* $Id: i2c-core.c,v 1.83 2002/07/08 01:37:15 mds Exp $ */

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#58: FILE: drivers/i2c/i2c-core.c:75:
+static int i2c_debug=1;
                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#64: FILE: drivers/i2c/i2c-core.c:373:
                                if (client != NULL && 
[...]
+                                       DEB2(printk(KERN_DEBUG "i2c-core.o: "

ERROR:CODE_INDENT: code indent should use tabs where possible
#67: FILE: drivers/i2c/i2c-core.c:375:
+                                       DEB2(printk(KERN_DEBUG "i2c-core.o: "$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: drivers/i2c/i2c-core.c:375:
+                                       DEB2(printk(KERN_DEBUG "i2c-core.o: "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#67: FILE: drivers/i2c/i2c-core.c:375:
+                                       DEB2(printk(KERN_DEBUG "i2c-core.o: "

ERROR:TRAILING_WHITESPACE: trailing whitespace
#75: FILE: drivers/i2c/i2c-core.c:1004:
+#define POLY    (0x1070U << 3) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: drivers/i2c/i2c-core.c:1008:
+       int i;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#80: FILE: drivers/i2c/i2c-core.c:1009:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#80: FILE: drivers/i2c/i2c-core.c:1009:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: drivers/i2c/i2c-core.c:1010:
+       for(i = 0; i < 8; i++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#81: FILE: drivers/i2c/i2c-core.c:1010:
+       for(i = 0; i < 8; i++) {
+               if (data & 0x8000) 

ERROR:SPACING: space required before the open parenthesis '('
#81: FILE: drivers/i2c/i2c-core.c:1010:
+       for(i = 0; i < 8; i++) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#82: FILE: drivers/i2c/i2c-core.c:1011:
+               if (data & 0x8000) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#82: FILE: drivers/i2c/i2c-core.c:1011:
+               if (data & 0x8000) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: drivers/i2c/i2c-core.c:1011:
+               if (data & 0x8000) $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#82: FILE: drivers/i2c/i2c-core.c:1011:
+               if (data & 0x8000) 
+                       data = data ^ POLY;

ERROR:CODE_INDENT: code indent should use tabs where possible
#83: FILE: drivers/i2c/i2c-core.c:1012:
+                       data = data ^ POLY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: drivers/i2c/i2c-core.c:1012:
+                       data = data ^ POLY;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#84: FILE: drivers/i2c/i2c-core.c:1013:
+               data = data << 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: drivers/i2c/i2c-core.c:1013:
+               data = data << 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: drivers/i2c/i2c-core.c:1014:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: drivers/i2c/i2c-core.c:1015:
+       return (u8)(data >> 8);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#90: FILE: drivers/i2c/i2c-core.c:1019:
+/* CRC over count bytes in the first array plus the bytes in the rest
+   array if it is non-null. rest[0] is the (length of rest) - 1

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#91: FILE: drivers/i2c/i2c-core.c:1020:
+   and is included. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: drivers/i2c/i2c-core.c:1023:
+       int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: drivers/i2c/i2c-core.c:1025:
+       for(i = 0; i < count; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#96: FILE: drivers/i2c/i2c-core.c:1025:
+       for(i = 0; i < count; i++)
+               crc = crc8((crc ^ first[i]) << 8);

ERROR:SPACING: space required before the open parenthesis '('
#96: FILE: drivers/i2c/i2c-core.c:1025:
+       for(i = 0; i < count; i++)

ERROR:CODE_INDENT: code indent should use tabs where possible
#97: FILE: drivers/i2c/i2c-core.c:1026:
+               crc = crc8((crc ^ first[i]) << 8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: drivers/i2c/i2c-core.c:1026:
+               crc = crc8((crc ^ first[i]) << 8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: drivers/i2c/i2c-core.c:1027:
+       if(rest != NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#98: FILE: drivers/i2c/i2c-core.c:1027:
+       if(rest != NULL)
+               for(i = 0; i <= rest[0]; i++)

ERROR:SPACING: space required before the open parenthesis '('
#98: FILE: drivers/i2c/i2c-core.c:1027:
+       if(rest != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rest"
#98: FILE: drivers/i2c/i2c-core.c:1027:
+       if(rest != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: drivers/i2c/i2c-core.c:1028:
+               for(i = 0; i <= rest[0]; i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: drivers/i2c/i2c-core.c:1028:
+               for(i = 0; i <= rest[0]; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#99: FILE: drivers/i2c/i2c-core.c:1028:
+               for(i = 0; i <= rest[0]; i++)
+                       crc = crc8((crc ^ rest[i]) << 8);

ERROR:SPACING: space required before the open parenthesis '('
#99: FILE: drivers/i2c/i2c-core.c:1028:
+               for(i = 0; i <= rest[0]; i++)

ERROR:CODE_INDENT: code indent should use tabs where possible
#100: FILE: drivers/i2c/i2c-core.c:1029:
+                       crc = crc8((crc ^ rest[i]) << 8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: drivers/i2c/i2c-core.c:1029:
+                       crc = crc8((crc ^ rest[i]) << 8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: drivers/i2c/i2c-core.c:1030:
+       return crc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: drivers/i2c/i2c-core.c:1035:
+       return i2c_smbus_partial_pec(0, count, first, rest);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#110: FILE: drivers/i2c/i2c-core.c:1039:
+/* Returns new "size" (transaction type)
+   Note that we convert byte to byte_data and byte_data to word_data

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#111: FILE: drivers/i2c/i2c-core.c:1040:
+   rather than invent new xxx_PEC transactions. */

ERROR:CODE_INDENT: code indent should use tabs where possible
#113: FILE: drivers/i2c/i2c-core.c:1042:
+                      union i2c_smbus_data *data)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: drivers/i2c/i2c-core.c:1042:
+                      union i2c_smbus_data *data)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: drivers/i2c/i2c-core.c:1044:
+       u8 buf[3];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: drivers/i2c/i2c-core.c:1046:
+       buf[0] = addr << 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: drivers/i2c/i2c-core.c:1047:
+       buf[1] = command;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: drivers/i2c/i2c-core.c:1048:
+       switch(size) {$

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#119: FILE: drivers/i2c/i2c-core.c:1048:
+       switch(size) {
+               case I2C_SMBUS_BYTE:
[...]
+               case I2C_SMBUS_BYTE_DATA:
[...]
+               case I2C_SMBUS_WORD_DATA:
[...]
+               case I2C_SMBUS_BLOCK_DATA:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required before the open parenthesis '('
#119: FILE: drivers/i2c/i2c-core.c:1048:
+       switch(size) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#120: FILE: drivers/i2c/i2c-core.c:1049:
+               case I2C_SMBUS_BYTE:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: drivers/i2c/i2c-core.c:1049:
+               case I2C_SMBUS_BYTE:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#121: FILE: drivers/i2c/i2c-core.c:1050:
+                       data->byte = i2c_smbus_pec(2, buf, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: drivers/i2c/i2c-core.c:1050:
+                       data->byte = i2c_smbus_pec(2, buf, NULL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: drivers/i2c/i2c-core.c:1051:
+                       size = I2C_SMBUS_BYTE_DATA;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: drivers/i2c/i2c-core.c:1051:
+                       size = I2C_SMBUS_BYTE_DATA;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: drivers/i2c/i2c-core.c:1052:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: drivers/i2c/i2c-core.c:1052:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#124: FILE: drivers/i2c/i2c-core.c:1053:
+               case I2C_SMBUS_BYTE_DATA:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: drivers/i2c/i2c-core.c:1053:
+               case I2C_SMBUS_BYTE_DATA:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#125: FILE: drivers/i2c/i2c-core.c:1054:
+                       buf[2] = data->byte;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: drivers/i2c/i2c-core.c:1054:
+                       buf[2] = data->byte;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#126: FILE: drivers/i2c/i2c-core.c:1055:
+                       data->word = buf[2] ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: drivers/i2c/i2c-core.c:1055:
+                       data->word = buf[2] ||$

ERROR:CODE_INDENT: code indent should use tabs where possible
#127: FILE: drivers/i2c/i2c-core.c:1056:
+                                   (i2c_smbus_pec(3, buf, NULL) << 8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: drivers/i2c/i2c-core.c:1056:
+                                   (i2c_smbus_pec(3, buf, NULL) << 8);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#128: FILE: drivers/i2c/i2c-core.c:1057:
+                       size = I2C_SMBUS_WORD_DATA;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: drivers/i2c/i2c-core.c:1057:
+                       size = I2C_SMBUS_WORD_DATA;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#129: FILE: drivers/i2c/i2c-core.c:1058:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: drivers/i2c/i2c-core.c:1058:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#130: FILE: drivers/i2c/i2c-core.c:1059:
+               case I2C_SMBUS_WORD_DATA:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: drivers/i2c/i2c-core.c:1059:
+               case I2C_SMBUS_WORD_DATA:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#131: FILE: drivers/i2c/i2c-core.c:1060:
+                       /* unsupported */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#132: FILE: drivers/i2c/i2c-core.c:1061:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: drivers/i2c/i2c-core.c:1061:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: drivers/i2c/i2c-core.c:1062:
+               case I2C_SMBUS_BLOCK_DATA:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: drivers/i2c/i2c-core.c:1062:
+               case I2C_SMBUS_BLOCK_DATA:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#134: FILE: drivers/i2c/i2c-core.c:1063:
+                       data->block[data->block[0] + 1] =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: drivers/i2c/i2c-core.c:1063:
+                       data->block[data->block[0] + 1] =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#135: FILE: drivers/i2c/i2c-core.c:1064:
+                                    i2c_smbus_pec(2, buf, data->block);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: drivers/i2c/i2c-core.c:1064:
+                                    i2c_smbus_pec(2, buf, data->block);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#136: FILE: drivers/i2c/i2c-core.c:1065:
+                       size = I2C_SMBUS_BLOCK_DATA_PEC;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: drivers/i2c/i2c-core.c:1065:
+                       size = I2C_SMBUS_BLOCK_DATA_PEC;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: drivers/i2c/i2c-core.c:1066:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: drivers/i2c/i2c-core.c:1066:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: drivers/i2c/i2c-core.c:1067:
+       }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#139: FILE: drivers/i2c/i2c-core.c:1068:
+       return size;    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: drivers/i2c/i2c-core.c:1068:
+       return size;    $

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: drivers/i2c/i2c-core.c:1072:
+                        union i2c_smbus_data *data)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: drivers/i2c/i2c-core.c:1072:
+                        union i2c_smbus_data *data)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: drivers/i2c/i2c-core.c:1074:
+       u8 buf[3], rpec, cpec;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: drivers/i2c/i2c-core.c:1076:
+       buf[1] = command;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: drivers/i2c/i2c-core.c:1077:
+       switch(size) {$

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#148: FILE: drivers/i2c/i2c-core.c:1077:
+       switch(size) {
+               case I2C_SMBUS_BYTE_DATA:
[...]
+               case I2C_SMBUS_WORD_DATA:
[...]
+               case I2C_SMBUS_WORD_DATA_PEC:
[...]
+               case I2C_SMBUS_PROC_CALL_PEC:
[...]
+               case I2C_SMBUS_BLOCK_DATA_PEC:
[...]
+               case I2C_SMBUS_BLOCK_PROC_CALL_PEC:
[...]
+               default:

ERROR:SPACING: space required before the open parenthesis '('
#148: FILE: drivers/i2c/i2c-core.c:1077:
+       switch(size) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: drivers/i2c/i2c-core.c:1078:
+               case I2C_SMBUS_BYTE_DATA:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: drivers/i2c/i2c-core.c:1078:
+               case I2C_SMBUS_BYTE_DATA:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: drivers/i2c/i2c-core.c:1079:
+                       buf[0] = (addr << 1) | 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: drivers/i2c/i2c-core.c:1079:
+                       buf[0] = (addr << 1) | 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: drivers/i2c/i2c-core.c:1080:
+                       cpec = i2c_smbus_pec(2, buf, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: drivers/i2c/i2c-core.c:1080:
+                       cpec = i2c_smbus_pec(2, buf, NULL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: drivers/i2c/i2c-core.c:1081:
+                       rpec = data->byte;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: drivers/i2c/i2c-core.c:1081:
+                       rpec = data->byte;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: drivers/i2c/i2c-core.c:1082:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: drivers/i2c/i2c-core.c:1082:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: drivers/i2c/i2c-core.c:1083:
+               case I2C_SMBUS_WORD_DATA:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: drivers/i2c/i2c-core.c:1083:
+               case I2C_SMBUS_WORD_DATA:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: drivers/i2c/i2c-core.c:1084:
+                       buf[0] = (addr << 1) | 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: drivers/i2c/i2c-core.c:1084:
+                       buf[0] = (addr << 1) | 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: drivers/i2c/i2c-core.c:1085:
+                       buf[2] = data->word & 0xff;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: drivers/i2c/i2c-core.c:1085:
+                       buf[2] = data->word & 0xff;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: drivers/i2c/i2c-core.c:1086:
+                       cpec = i2c_smbus_pec(3, buf, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: drivers/i2c/i2c-core.c:1086:
+                       cpec = i2c_smbus_pec(3, buf, NULL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#158: FILE: drivers/i2c/i2c-core.c:1087:
+                       rpec = data->word >> 8;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: drivers/i2c/i2c-core.c:1087:
+                       rpec = data->word >> 8;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: drivers/i2c/i2c-core.c:1088:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: drivers/i2c/i2c-core.c:1088:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: drivers/i2c/i2c-core.c:1089:
+               case I2C_SMBUS_WORD_DATA_PEC:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: drivers/i2c/i2c-core.c:1089:
+               case I2C_SMBUS_WORD_DATA_PEC:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#161: FILE: drivers/i2c/i2c-core.c:1090:
+                       /* unsupported */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: drivers/i2c/i2c-core.c:1091:
+                       cpec = rpec = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: drivers/i2c/i2c-core.c:1091:
+                       cpec = rpec = 0;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#162: FILE: drivers/i2c/i2c-core.c:1091:
+                       cpec = rpec = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: drivers/i2c/i2c-core.c:1092:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: drivers/i2c/i2c-core.c:1092:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: drivers/i2c/i2c-core.c:1093:
+               case I2C_SMBUS_PROC_CALL_PEC:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: drivers/i2c/i2c-core.c:1093:
+               case I2C_SMBUS_PROC_CALL_PEC:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: drivers/i2c/i2c-core.c:1094:
+                       /* unsupported */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#166: FILE: drivers/i2c/i2c-core.c:1095:
+                       cpec = rpec = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: drivers/i2c/i2c-core.c:1095:
+                       cpec = rpec = 0;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#166: FILE: drivers/i2c/i2c-core.c:1095:
+                       cpec = rpec = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: drivers/i2c/i2c-core.c:1096:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: drivers/i2c/i2c-core.c:1096:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#168: FILE: drivers/i2c/i2c-core.c:1097:
+               case I2C_SMBUS_BLOCK_DATA_PEC:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: drivers/i2c/i2c-core.c:1097:
+               case I2C_SMBUS_BLOCK_DATA_PEC:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: drivers/i2c/i2c-core.c:1098:
+                       buf[0] = (addr << 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: drivers/i2c/i2c-core.c:1098:
+                       buf[0] = (addr << 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: drivers/i2c/i2c-core.c:1099:
+                       buf[2] = (addr << 1) | 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: drivers/i2c/i2c-core.c:1099:
+                       buf[2] = (addr << 1) | 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#171: FILE: drivers/i2c/i2c-core.c:1100:
+                       cpec = i2c_smbus_pec(3, buf, data->block);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: drivers/i2c/i2c-core.c:1100:
+                       cpec = i2c_smbus_pec(3, buf, data->block);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: drivers/i2c/i2c-core.c:1101:
+                       rpec = data->block[data->block[0] + 1];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: drivers/i2c/i2c-core.c:1101:
+                       rpec = data->block[data->block[0] + 1];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: drivers/i2c/i2c-core.c:1102:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: drivers/i2c/i2c-core.c:1102:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: drivers/i2c/i2c-core.c:1103:
+               case I2C_SMBUS_BLOCK_PROC_CALL_PEC:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: drivers/i2c/i2c-core.c:1103:
+               case I2C_SMBUS_BLOCK_PROC_CALL_PEC:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: drivers/i2c/i2c-core.c:1104:
+                       buf[0] = (addr << 1) | 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: drivers/i2c/i2c-core.c:1104:
+                       buf[0] = (addr << 1) | 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: drivers/i2c/i2c-core.c:1105:
+                       rpec = i2c_smbus_partial_pec(partial, 1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: drivers/i2c/i2c-core.c:1105:
+                       rpec = i2c_smbus_partial_pec(partial, 1,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#177: FILE: drivers/i2c/i2c-core.c:1106:
+                                                    buf, data->block);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: drivers/i2c/i2c-core.c:1106:
+                                                    buf, data->block);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: drivers/i2c/i2c-core.c:1107:
+                       cpec = data->block[data->block[0] + 1];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: drivers/i2c/i2c-core.c:1107:
+                       cpec = data->block[data->block[0] + 1];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: drivers/i2c/i2c-core.c:1108:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: drivers/i2c/i2c-core.c:1108:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#180: FILE: drivers/i2c/i2c-core.c:1109:
+               default:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: drivers/i2c/i2c-core.c:1110:
+                       cpec = rpec = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: drivers/i2c/i2c-core.c:1110:
+                       cpec = rpec = 0;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#181: FILE: drivers/i2c/i2c-core.c:1110:
+                       cpec = rpec = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#182: FILE: drivers/i2c/i2c-core.c:1111:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: drivers/i2c/i2c-core.c:1111:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: drivers/i2c/i2c-core.c:1112:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: drivers/i2c/i2c-core.c:1113:
+       if(rpec != cpec) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#184: FILE: drivers/i2c/i2c-core.c:1113:
+       if(rpec != cpec) {
+               DEB(printk(KERN_DEBUG "i2c-core.o: Bad PEC 0x%02x vs. 0x%02x\n",

ERROR:SPACING: space required before the open parenthesis '('
#184: FILE: drivers/i2c/i2c-core.c:1113:
+       if(rpec != cpec) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#185: FILE: drivers/i2c/i2c-core.c:1114:
+               DEB(printk(KERN_DEBUG "i2c-core.o: Bad PEC 0x%02x vs. 0x%02x\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: drivers/i2c/i2c-core.c:1114:
+               DEB(printk(KERN_DEBUG "i2c-core.o: Bad PEC 0x%02x vs. 0x%02x\n",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#185: FILE: drivers/i2c/i2c-core.c:1114:
+               DEB(printk(KERN_DEBUG "i2c-core.o: Bad PEC 0x%02x vs. 0x%02x\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: drivers/i2c/i2c-core.c:1115:
+                          rpec, cpec));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: drivers/i2c/i2c-core.c:1115:
+                          rpec, cpec));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#187: FILE: drivers/i2c/i2c-core.c:1116:
+               return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: drivers/i2c/i2c-core.c:1116:
+               return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: drivers/i2c/i2c-core.c:1117:
+       }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#189: FILE: drivers/i2c/i2c-core.c:1118:
+       return 0;       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: drivers/i2c/i2c-core.c:1118:
+       return 0;       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: drivers/i2c/i2c-core.c:1139:
+       union i2c_smbus_data data;      /* only for PEC */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: drivers/i2c/i2c-core.c:1141:
+                             I2C_SMBUS_WRITE,value, I2C_SMBUS_BYTE,&data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: drivers/i2c/i2c-core.c:1141:
+                             I2C_SMBUS_WRITE,value, I2C_SMBUS_BYTE,&data);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#202: FILE: drivers/i2c/i2c-core.c:1141:
+                             I2C_SMBUS_WRITE,value, I2C_SMBUS_BYTE,&data);
                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#202: FILE: drivers/i2c/i2c-core.c:1141:
+                             I2C_SMBUS_WRITE,value, I2C_SMBUS_BYTE,&data);
                                                                   ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#202: FILE: drivers/i2c/i2c-core.c:1141:
+                             I2C_SMBUS_WRITE,value, I2C_SMBUS_BYTE,&data);
                                                                    ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: drivers/i2c/i2c-core.c:1219:
+       if (length > I2C_SMBUS_BLOCK_MAX)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#212: FILE: drivers/i2c/i2c-core.c:1219:
+       if (length > I2C_SMBUS_BLOCK_MAX)
+               length = I2C_SMBUS_BLOCK_MAX;

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: drivers/i2c/i2c-core.c:1220:
+               length = I2C_SMBUS_BLOCK_MAX;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: drivers/i2c/i2c-core.c:1220:
+               length = I2C_SMBUS_BLOCK_MAX;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#221: FILE: drivers/i2c/i2c-core.c:1230:
+extern s32 i2c_smbus_block_process_call(struct i2c_client * client,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#222: FILE: drivers/i2c/i2c-core.c:1231:
+                                        u8 command, u8 length, u8 *values)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: drivers/i2c/i2c-core.c:1231:
+                                        u8 command, u8 length, u8 *values)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: drivers/i2c/i2c-core.c:1233:
+       union i2c_smbus_data data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: drivers/i2c/i2c-core.c:1234:
+       int i;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#226: FILE: drivers/i2c/i2c-core.c:1235:
+       int i;
+       if (length > I2C_SMBUS_BLOCK_MAX - 1)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: drivers/i2c/i2c-core.c:1235:
+       if (length > I2C_SMBUS_BLOCK_MAX - 1)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#226: FILE: drivers/i2c/i2c-core.c:1235:
+       if (length > I2C_SMBUS_BLOCK_MAX - 1)
+               return -1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#227: FILE: drivers/i2c/i2c-core.c:1236:
+               return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: drivers/i2c/i2c-core.c:1236:
+               return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: drivers/i2c/i2c-core.c:1237:
+       data.block[0] = length;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: drivers/i2c/i2c-core.c:1238:
+       for (i = 1; i <= length; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#229: FILE: drivers/i2c/i2c-core.c:1238:
+       for (i = 1; i <= length; i++)
+               data.block[i] = values[i-1];

ERROR:CODE_INDENT: code indent should use tabs where possible
#230: FILE: drivers/i2c/i2c-core.c:1239:
+               data.block[i] = values[i-1];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: drivers/i2c/i2c-core.c:1239:
+               data.block[i] = values[i-1];$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#230: FILE: drivers/i2c/i2c-core.c:1239:
+               data.block[i] = values[i-1];
                                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: drivers/i2c/i2c-core.c:1240:
+       if(i2c_smbus_xfer(client->adapter,client->addr,client->flags,$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#231: FILE: drivers/i2c/i2c-core.c:1240:
+       if(i2c_smbus_xfer(client->adapter,client->addr,client->flags,
[...]
+               return -1;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#231: FILE: drivers/i2c/i2c-core.c:1240:
+       if(i2c_smbus_xfer(client->adapter,client->addr,client->flags,
                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#231: FILE: drivers/i2c/i2c-core.c:1240:
+       if(i2c_smbus_xfer(client->adapter,client->addr,client->flags,
                                                      ^

ERROR:SPACING: space required before the open parenthesis '('
#231: FILE: drivers/i2c/i2c-core.c:1240:
+       if(i2c_smbus_xfer(client->adapter,client->addr,client->flags,

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: drivers/i2c/i2c-core.c:1241:
+                         I2C_SMBUS_WRITE, command,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: drivers/i2c/i2c-core.c:1241:
+                         I2C_SMBUS_WRITE, command,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#233: FILE: drivers/i2c/i2c-core.c:1242:
+                         I2C_SMBUS_BLOCK_PROC_CALL, &data))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: drivers/i2c/i2c-core.c:1242:
+                         I2C_SMBUS_BLOCK_PROC_CALL, &data))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: drivers/i2c/i2c-core.c:1243:
+               return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: drivers/i2c/i2c-core.c:1243:
+               return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: drivers/i2c/i2c-core.c:1244:
+       for (i = 1; i <= data.block[0]; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#235: FILE: drivers/i2c/i2c-core.c:1244:
+       for (i = 1; i <= data.block[0]; i++)
+               values[i-1] = data.block[i];

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: drivers/i2c/i2c-core.c:1245:
+               values[i-1] = data.block[i];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: drivers/i2c/i2c-core.c:1245:
+               values[i-1] = data.block[i];$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#236: FILE: drivers/i2c/i2c-core.c:1245:
+               values[i-1] = data.block[i];
                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: drivers/i2c/i2c-core.c:1246:
+       return data.block[0];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: drivers/i2c/i2c-core.c:1271:
+       if (length > I2C_SMBUS_I2C_BLOCK_MAX)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#250: FILE: drivers/i2c/i2c-core.c:1271:
+       if (length > I2C_SMBUS_I2C_BLOCK_MAX)
+               length = I2C_SMBUS_I2C_BLOCK_MAX;

ERROR:CODE_INDENT: code indent should use tabs where possible
#251: FILE: drivers/i2c/i2c-core.c:1272:
+               length = I2C_SMBUS_I2C_BLOCK_MAX;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: drivers/i2c/i2c-core.c:1272:
+               length = I2C_SMBUS_I2C_BLOCK_MAX;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#259: FILE: drivers/i2c/i2c-core.c:1334:
+               read_write = I2C_SMBUS_READ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: drivers/i2c/i2c-core.c:1334:
+               read_write = I2C_SMBUS_READ;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: drivers/i2c/i2c-core.c:1341:
+       case I2C_SMBUS_BLOCK_DATA_PEC:$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#267: FILE: drivers/i2c/i2c-core.c:1342:
                if (read_write == I2C_SMBUS_READ) {
+                       printk(KERN_ERR "i2c-core.o: Block read not supported "

ERROR:CODE_INDENT: code indent should use tabs where possible
#271: FILE: drivers/i2c/i2c-core.c:1343:
+                       printk(KERN_ERR "i2c-core.o: Block read not supported "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: drivers/i2c/i2c-core.c:1343:
+                       printk(KERN_ERR "i2c-core.o: Block read not supported "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#271: FILE: drivers/i2c/i2c-core.c:1343:
+                       printk(KERN_ERR "i2c-core.o: Block read not supported "

ERROR:CODE_INDENT: code indent should use tabs where possible
#272: FILE: drivers/i2c/i2c-core.c:1344:
+                              "under I2C emulation!\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: drivers/i2c/i2c-core.c:1344:
+                              "under I2C emulation!\n");$

WARNING:SPLIT_STRING: quoted string split across lines
#272: FILE: drivers/i2c/i2c-core.c:1344:
+                       printk(KERN_ERR "i2c-core.o: Block read not supported "
+                              "under I2C emulation!\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:CODE_INDENT: code indent should use tabs where possible
#273: FILE: drivers/i2c/i2c-core.c:1345:
+                       return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: drivers/i2c/i2c-core.c:1345:
+                       return -1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#277: FILE: drivers/i2c/i2c-core.c:1348:
+                       if (msg[0].len > I2C_SMBUS_BLOCK_MAX + 2) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: drivers/i2c/i2c-core.c:1348:
+                       if (msg[0].len > I2C_SMBUS_BLOCK_MAX + 2) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#277: FILE: drivers/i2c/i2c-core.c:1348:
+                       if (msg[0].len > I2C_SMBUS_BLOCK_MAX + 2) {
                                printk(KERN_ERR "i2c-core.o: smbus_access called with "

ERROR:CODE_INDENT: code indent should use tabs where possible
#283: FILE: drivers/i2c/i2c-core.c:1354:
+                       if(size == I2C_SMBUS_BLOCK_DATA_PEC)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: drivers/i2c/i2c-core.c:1354:
+                       if(size == I2C_SMBUS_BLOCK_DATA_PEC)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#283: FILE: drivers/i2c/i2c-core.c:1354:
+                       if(size == I2C_SMBUS_BLOCK_DATA_PEC)
+                               (msg[0].len)++;

ERROR:SPACING: space required before the open parenthesis '('
#283: FILE: drivers/i2c/i2c-core.c:1354:
+                       if(size == I2C_SMBUS_BLOCK_DATA_PEC)

ERROR:CODE_INDENT: code indent should use tabs where possible
#284: FILE: drivers/i2c/i2c-core.c:1355:
+                               (msg[0].len)++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: drivers/i2c/i2c-core.c:1355:
+                               (msg[0].len)++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: drivers/i2c/i2c-core.c:1360:
+       case I2C_SMBUS_BLOCK_PROC_CALL:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: drivers/i2c/i2c-core.c:1361:
+       case I2C_SMBUS_BLOCK_PROC_CALL_PEC:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#291: FILE: drivers/i2c/i2c-core.c:1362:
+               printk(KERN_ERR "i2c-core.o: Block process call not supported "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: drivers/i2c/i2c-core.c:1362:
+               printk(KERN_ERR "i2c-core.o: Block process call not supported "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#291: FILE: drivers/i2c/i2c-core.c:1362:
+               printk(KERN_ERR "i2c-core.o: Block process call not supported "

ERROR:CODE_INDENT: code indent should use tabs where possible
#292: FILE: drivers/i2c/i2c-core.c:1363:
+                      "under I2C emulation!\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: drivers/i2c/i2c-core.c:1363:
+                      "under I2C emulation!\n");$

WARNING:SPLIT_STRING: quoted string split across lines
#292: FILE: drivers/i2c/i2c-core.c:1363:
+               printk(KERN_ERR "i2c-core.o: Block process call not supported "
+                      "under I2C emulation!\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#293: FILE: drivers/i2c/i2c-core.c:1364:
+               return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: drivers/i2c/i2c-core.c:1364:
+               return -1;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#295: FILE: drivers/i2c/i2c-core.c:1366:
                if (read_write == I2C_SMBUS_READ) {
+                       msg[1].len = I2C_SMBUS_I2C_BLOCK_MAX;

ERROR:CODE_INDENT: code indent should use tabs where possible
#297: FILE: drivers/i2c/i2c-core.c:1367:
+                       msg[1].len = I2C_SMBUS_I2C_BLOCK_MAX;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: drivers/i2c/i2c-core.c:1367:
+                       msg[1].len = I2C_SMBUS_I2C_BLOCK_MAX;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#301: FILE: drivers/i2c/i2c-core.c:1370:
+                       if (msg[0].len > I2C_SMBUS_I2C_BLOCK_MAX + 2) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: drivers/i2c/i2c-core.c:1370:
+                       if (msg[0].len > I2C_SMBUS_I2C_BLOCK_MAX + 2) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#301: FILE: drivers/i2c/i2c-core.c:1370:
+                       if (msg[0].len > I2C_SMBUS_I2C_BLOCK_MAX + 2) {
                                printk("i2c-core.o: i2c_smbus_xfer_emulated called with "

ERROR:CODE_INDENT: code indent should use tabs where possible
#311: FILE: drivers/i2c/i2c-core.c:1403:
+                               data->block[0] = I2C_SMBUS_I2C_BLOCK_MAX;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: drivers/i2c/i2c-core.c:1403:
+                               data->block[0] = I2C_SMBUS_I2C_BLOCK_MAX;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#312: FILE: drivers/i2c/i2c-core.c:1404:
+                               for (i = 0; i < I2C_SMBUS_I2C_BLOCK_MAX; i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#312: FILE: drivers/i2c/i2c-core.c:1404:
+                               for (i = 0; i < I2C_SMBUS_I2C_BLOCK_MAX; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#312: FILE: drivers/i2c/i2c-core.c:1404:
+                               for (i = 0; i < I2C_SMBUS_I2C_BLOCK_MAX; i++)
                                        data->block[i+1] = msgbuf1[i];

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: drivers/i2c/i2c-core.c:1417:
+       int swpec = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: drivers/i2c/i2c-core.c:1418:
+       u8 partial = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: drivers/i2c/i2c-core.c:1420:
+       flags &= I2C_M_TEN | I2C_CLIENT_PEC;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: drivers/i2c/i2c-core.c:1421:
+       if((flags & I2C_CLIENT_PEC) &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#325: FILE: drivers/i2c/i2c-core.c:1421:
+       if((flags & I2C_CLIENT_PEC) &&
[...]
+               swpec = 1;

ERROR:SPACING: space required before the open parenthesis '('
#325: FILE: drivers/i2c/i2c-core.c:1421:
+       if((flags & I2C_CLIENT_PEC) &&

ERROR:CODE_INDENT: code indent should use tabs where possible
#326: FILE: drivers/i2c/i2c-core.c:1422:
+          !(i2c_check_functionality(adapter, I2C_FUNC_SMBUS_HWPEC_CALC))) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: drivers/i2c/i2c-core.c:1422:
+          !(i2c_check_functionality(adapter, I2C_FUNC_SMBUS_HWPEC_CALC))) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#327: FILE: drivers/i2c/i2c-core.c:1423:
+               swpec = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#327: FILE: drivers/i2c/i2c-core.c:1423:
+               swpec = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#328: FILE: drivers/i2c/i2c-core.c:1424:
+               if(read_write == I2C_SMBUS_READ &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: drivers/i2c/i2c-core.c:1424:
+               if(read_write == I2C_SMBUS_READ &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#328: FILE: drivers/i2c/i2c-core.c:1424:
+               if(read_write == I2C_SMBUS_READ &&
[...]
+                       size = I2C_SMBUS_BLOCK_DATA_PEC;

ERROR:SPACING: space required before the open parenthesis '('
#328: FILE: drivers/i2c/i2c-core.c:1424:
+               if(read_write == I2C_SMBUS_READ &&

ERROR:CODE_INDENT: code indent should use tabs where possible
#329: FILE: drivers/i2c/i2c-core.c:1425:
+                  size == I2C_SMBUS_BLOCK_DATA)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: drivers/i2c/i2c-core.c:1425:
+                  size == I2C_SMBUS_BLOCK_DATA)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#330: FILE: drivers/i2c/i2c-core.c:1426:
+                       size = I2C_SMBUS_BLOCK_DATA_PEC;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: drivers/i2c/i2c-core.c:1426:
+                       size = I2C_SMBUS_BLOCK_DATA_PEC;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#331: FILE: drivers/i2c/i2c-core.c:1427:
+               else if(size == I2C_SMBUS_PROC_CALL)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: drivers/i2c/i2c-core.c:1427:
+               else if(size == I2C_SMBUS_PROC_CALL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#331: FILE: drivers/i2c/i2c-core.c:1427:
+               else if(size == I2C_SMBUS_PROC_CALL)
+                       size = I2C_SMBUS_PROC_CALL_PEC;

ERROR:SPACING: space required before the open parenthesis '('
#331: FILE: drivers/i2c/i2c-core.c:1427:
+               else if(size == I2C_SMBUS_PROC_CALL)

ERROR:CODE_INDENT: code indent should use tabs where possible
#332: FILE: drivers/i2c/i2c-core.c:1428:
+                       size = I2C_SMBUS_PROC_CALL_PEC;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: drivers/i2c/i2c-core.c:1428:
+                       size = I2C_SMBUS_PROC_CALL_PEC;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#333: FILE: drivers/i2c/i2c-core.c:1429:
+               else if(size == I2C_SMBUS_BLOCK_PROC_CALL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: drivers/i2c/i2c-core.c:1429:
+               else if(size == I2C_SMBUS_BLOCK_PROC_CALL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#333: FILE: drivers/i2c/i2c-core.c:1429:
+               else if(size == I2C_SMBUS_BLOCK_PROC_CALL) {
+                       i2c_smbus_add_pec(addr, command,

ERROR:SPACING: space required before the open parenthesis '('
#333: FILE: drivers/i2c/i2c-core.c:1429:
+               else if(size == I2C_SMBUS_BLOCK_PROC_CALL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#334: FILE: drivers/i2c/i2c-core.c:1430:
+                       i2c_smbus_add_pec(addr, command,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: drivers/i2c/i2c-core.c:1430:
+                       i2c_smbus_add_pec(addr, command,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#335: FILE: drivers/i2c/i2c-core.c:1431:
+                                         I2C_SMBUS_BLOCK_DATA, data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: drivers/i2c/i2c-core.c:1431:
+                                         I2C_SMBUS_BLOCK_DATA, data);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#336: FILE: drivers/i2c/i2c-core.c:1432:
+                       partial = data->block[data->block[0] + 1];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#336: FILE: drivers/i2c/i2c-core.c:1432:
+                       partial = data->block[data->block[0] + 1];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#337: FILE: drivers/i2c/i2c-core.c:1433:
+                       size = I2C_SMBUS_BLOCK_PROC_CALL_PEC;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: drivers/i2c/i2c-core.c:1433:
+                       size = I2C_SMBUS_BLOCK_PROC_CALL_PEC;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#338: FILE: drivers/i2c/i2c-core.c:1434:
+               } else if(read_write == I2C_SMBUS_WRITE &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: drivers/i2c/i2c-core.c:1434:
+               } else if(read_write == I2C_SMBUS_WRITE &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#338: FILE: drivers/i2c/i2c-core.c:1434:
+               } else if(read_write == I2C_SMBUS_WRITE &&
[...]
+                       size = i2c_smbus_add_pec(addr, command, size, data);

ERROR:SPACING: space required before the open parenthesis '('
#338: FILE: drivers/i2c/i2c-core.c:1434:
+               } else if(read_write == I2C_SMBUS_WRITE &&

ERROR:CODE_INDENT: code indent should use tabs where possible
#339: FILE: drivers/i2c/i2c-core.c:1435:
+                         size != I2C_SMBUS_QUICK &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#339: FILE: drivers/i2c/i2c-core.c:1435:
+                         size != I2C_SMBUS_QUICK &&$

ERROR:CODE_INDENT: code indent should use tabs where possible
#340: FILE: drivers/i2c/i2c-core.c:1436:
+                         size != I2C_SMBUS_I2C_BLOCK_DATA)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: drivers/i2c/i2c-core.c:1436:
+                         size != I2C_SMBUS_I2C_BLOCK_DATA)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#341: FILE: drivers/i2c/i2c-core.c:1437:
+                       size = i2c_smbus_add_pec(addr, command, size, data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: drivers/i2c/i2c-core.c:1437:
+                       size = i2c_smbus_add_pec(addr, command, size, data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: drivers/i2c/i2c-core.c:1438:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: drivers/i2c/i2c-core.c:1449:
+       if(res >= 0 && swpec &&$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#352: FILE: drivers/i2c/i2c-core.c:1449:
+       if(res >= 0 && swpec &&
[...]
+               if(i2c_smbus_check_pec(addr, command, size, partial, data))

ERROR:SPACING: space required before the open parenthesis '('
#352: FILE: drivers/i2c/i2c-core.c:1449:
+       if(res >= 0 && swpec &&

ERROR:CODE_INDENT: code indent should use tabs where possible
#353: FILE: drivers/i2c/i2c-core.c:1450:
+          size != I2C_SMBUS_QUICK && size != I2C_SMBUS_I2C_BLOCK_DATA &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: drivers/i2c/i2c-core.c:1450:
+          size != I2C_SMBUS_QUICK && size != I2C_SMBUS_I2C_BLOCK_DATA &&$

ERROR:CODE_INDENT: code indent should use tabs where possible
#354: FILE: drivers/i2c/i2c-core.c:1451:
+          (read_write == I2C_SMBUS_READ || size == I2C_SMBUS_PROC_CALL_PEC ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: drivers/i2c/i2c-core.c:1451:
+          (read_write == I2C_SMBUS_READ || size == I2C_SMBUS_PROC_CALL_PEC ||$

ERROR:CODE_INDENT: code indent should use tabs where possible
#355: FILE: drivers/i2c/i2c-core.c:1452:
+           size == I2C_SMBUS_BLOCK_PROC_CALL_PEC)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: drivers/i2c/i2c-core.c:1452:
+           size == I2C_SMBUS_BLOCK_PROC_CALL_PEC)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#356: FILE: drivers/i2c/i2c-core.c:1453:
+               if(i2c_smbus_check_pec(addr, command, size, partial, data))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#356: FILE: drivers/i2c/i2c-core.c:1453:
+               if(i2c_smbus_check_pec(addr, command, size, partial, data))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#356: FILE: drivers/i2c/i2c-core.c:1453:
+               if(i2c_smbus_check_pec(addr, command, size, partial, data))
+                       return -1;

ERROR:SPACING: space required before the open parenthesis '('
#356: FILE: drivers/i2c/i2c-core.c:1453:
+               if(i2c_smbus_check_pec(addr, command, size, partial, data))

ERROR:CODE_INDENT: code indent should use tabs where possible
#357: FILE: drivers/i2c/i2c-core.c:1454:
+                       return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#357: FILE: drivers/i2c/i2c-core.c:1454:
+                       return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#358: FILE: drivers/i2c/i2c-core.c:1455:
+       }$

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#369: FILE: drivers/i2c/i2c-dev.c:31:
+/* $Id: i2c-dev.c,v 1.46 2002/07/06 02:07:39 mds Exp $ */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: drivers/i2c/i2c-dev.c:239:
+       case I2C_PEC:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#378: FILE: drivers/i2c/i2c-dev.c:240:
+               if (arg)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: drivers/i2c/i2c-dev.c:240:
+               if (arg)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#378: FILE: drivers/i2c/i2c-dev.c:240:
+               if (arg)
+                       client->flags |= I2C_CLIENT_PEC;

ERROR:CODE_INDENT: code indent should use tabs where possible
#379: FILE: drivers/i2c/i2c-dev.c:241:
+                       client->flags |= I2C_CLIENT_PEC;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: drivers/i2c/i2c-dev.c:241:
+                       client->flags |= I2C_CLIENT_PEC;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#380: FILE: drivers/i2c/i2c-dev.c:242:
+               else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: drivers/i2c/i2c-dev.c:242:
+               else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#380: FILE: drivers/i2c/i2c-dev.c:242:
+               else
+                       client->flags &= ~I2C_CLIENT_PEC;

ERROR:CODE_INDENT: code indent should use tabs where possible
#381: FILE: drivers/i2c/i2c-dev.c:243:
+                       client->flags &= ~I2C_CLIENT_PEC;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: drivers/i2c/i2c-dev.c:243:
+                       client->flags &= ~I2C_CLIENT_PEC;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#382: FILE: drivers/i2c/i2c-dev.c:244:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: drivers/i2c/i2c-dev.c:244:
+               return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#391: FILE: drivers/i2c/i2c-dev.c:321:
+                   (data_arg.size != I2C_SMBUS_I2C_BLOCK_DATA) &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#391: FILE: drivers/i2c/i2c-dev.c:321:
+                   (data_arg.size != I2C_SMBUS_I2C_BLOCK_DATA) &&$

ERROR:CODE_INDENT: code indent should use tabs where possible
#392: FILE: drivers/i2c/i2c-dev.c:322:
+                   (data_arg.size != I2C_SMBUS_BLOCK_PROC_CALL)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: drivers/i2c/i2c-dev.c:322:
+                   (data_arg.size != I2C_SMBUS_BLOCK_PROC_CALL)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#401: FILE: drivers/i2c/i2c-dev.c:365:
+               else /* size == smbus block, i2c block, or block proc. call */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#401: FILE: drivers/i2c/i2c-dev.c:365:
+               else /* size == smbus block, i2c block, or block proc. call */$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#401: FILE: drivers/i2c/i2c-dev.c:365:
+               else /* size == smbus block, i2c block, or block proc. call */
                        datasize = sizeof(data_arg.data->block);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#405: FILE: drivers/i2c/i2c-dev.c:369:
+                   (data_arg.size == I2C_SMBUS_BLOCK_PROC_CALL) || $

ERROR:CODE_INDENT: code indent should use tabs where possible
#405: FILE: drivers/i2c/i2c-dev.c:369:
+                   (data_arg.size == I2C_SMBUS_BLOCK_PROC_CALL) || $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#405: FILE: drivers/i2c/i2c-dev.c:369:
+                   (data_arg.size == I2C_SMBUS_BLOCK_PROC_CALL) || $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#413: FILE: drivers/i2c/i2c-dev.c:378:
+                             (data_arg.size == I2C_SMBUS_BLOCK_PROC_CALL) || $

ERROR:CODE_INDENT: code indent should use tabs where possible
#413: FILE: drivers/i2c/i2c-dev.c:378:
+                             (data_arg.size == I2C_SMBUS_BLOCK_PROC_CALL) || $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#413: FILE: drivers/i2c/i2c-dev.c:378:
+                             (data_arg.size == I2C_SMBUS_BLOCK_PROC_CALL) || $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#429: FILE: include/linux/i2c-dev.h:19:
     Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#433: FILE: include/linux/i2c-dev.h:22:
+/* $Id: i2c-dev.h,v 1.11 2002/07/07 15:42:47 mds Exp $ */

ERROR:CODE_INDENT: code indent should use tabs where possible
#442: FILE: include/linux/i2c-dev.h:147:
+               return data.block[0];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#442: FILE: include/linux/i2c-dev.h:147:
+               return data.block[0];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#452: FILE: include/linux/i2c-dev.h:197:
+                                                 __u8 length, __u8 *values)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#452: FILE: include/linux/i2c-dev.h:197:
+                                                 __u8 length, __u8 *values)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#454: FILE: include/linux/i2c-dev.h:199:
+       union i2c_smbus_data data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#455: FILE: include/linux/i2c-dev.h:200:
+       int i;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#456: FILE: include/linux/i2c-dev.h:201:
+       int i;
+       if (length > 32)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#456: FILE: include/linux/i2c-dev.h:201:
+       if (length > 32)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#456: FILE: include/linux/i2c-dev.h:201:
+       if (length > 32)
+               length = 32;

ERROR:CODE_INDENT: code indent should use tabs where possible
#457: FILE: include/linux/i2c-dev.h:202:
+               length = 32;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#457: FILE: include/linux/i2c-dev.h:202:
+               length = 32;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#458: FILE: include/linux/i2c-dev.h:203:
+       for (i = 1; i <= length; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#458: FILE: include/linux/i2c-dev.h:203:
+       for (i = 1; i <= length; i++)
+               data.block[i] = values[i-1];

ERROR:CODE_INDENT: code indent should use tabs where possible
#459: FILE: include/linux/i2c-dev.h:204:
+               data.block[i] = values[i-1];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#459: FILE: include/linux/i2c-dev.h:204:
+               data.block[i] = values[i-1];$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#459: FILE: include/linux/i2c-dev.h:204:
+               data.block[i] = values[i-1];
                                        ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#460: FILE: include/linux/i2c-dev.h:205:
+       data.block[0] = length;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: include/linux/i2c-dev.h:206:
+       if (i2c_smbus_access(file,I2C_SMBUS_WRITE,command,$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#461: FILE: include/linux/i2c-dev.h:206:
+       if (i2c_smbus_access(file,I2C_SMBUS_WRITE,command,
[...]
+               return -1;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#461: FILE: include/linux/i2c-dev.h:206:
+       if (i2c_smbus_access(file,I2C_SMBUS_WRITE,command,
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#461: FILE: include/linux/i2c-dev.h:206:
+       if (i2c_smbus_access(file,I2C_SMBUS_WRITE,command,
                                                 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#462: FILE: include/linux/i2c-dev.h:207:
+                            I2C_SMBUS_BLOCK_PROC_CALL,&data))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#462: FILE: include/linux/i2c-dev.h:207:
+                            I2C_SMBUS_BLOCK_PROC_CALL,&data))$

ERROR:SPACING: space required after that ',' (ctx:VxO)
#462: FILE: include/linux/i2c-dev.h:207:
+                            I2C_SMBUS_BLOCK_PROC_CALL,&data))
                                                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#462: FILE: include/linux/i2c-dev.h:207:
+                            I2C_SMBUS_BLOCK_PROC_CALL,&data))
                                                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#463: FILE: include/linux/i2c-dev.h:208:
+               return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: include/linux/i2c-dev.h:208:
+               return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#464: FILE: include/linux/i2c-dev.h:209:
+       else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#464: FILE: include/linux/i2c-dev.h:209:
+       else {
+               for (i = 1; i <= data.block[0]; i++)

CHECK:BRACES: Unbalanced braces around else statement
#464: FILE: include/linux/i2c-dev.h:209:
+       else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#465: FILE: include/linux/i2c-dev.h:210:
+               for (i = 1; i <= data.block[0]; i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#465: FILE: include/linux/i2c-dev.h:210:
+               for (i = 1; i <= data.block[0]; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#465: FILE: include/linux/i2c-dev.h:210:
+               for (i = 1; i <= data.block[0]; i++)
+                       values[i-1] = data.block[i];

ERROR:CODE_INDENT: code indent should use tabs where possible
#466: FILE: include/linux/i2c-dev.h:211:
+                       values[i-1] = data.block[i];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#466: FILE: include/linux/i2c-dev.h:211:
+                       values[i-1] = data.block[i];$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#466: FILE: include/linux/i2c-dev.h:211:
+                       values[i-1] = data.block[i];
                                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#467: FILE: include/linux/i2c-dev.h:212:
+               return data.block[0];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#467: FILE: include/linux/i2c-dev.h:212:
+               return data.block[0];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#468: FILE: include/linux/i2c-dev.h:213:
+       }$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#477: FILE: include/linux/i2c-id.h:20:
     Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.               */$

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#481: FILE: include/linux/i2c-id.h:23:
+/* $Id: i2c-id.h,v 1.52 2002/07/10 13:28:44 abz Exp $ */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#546: FILE: include/linux/i2c-id.h:218:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#565: FILE: drivers/i2c/i2c-proc.c:188:
+               return -EPERM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#565: FILE: drivers/i2c/i2c-proc.c:188:
+               return -EPERM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#573: FILE: drivers/i2c/i2c-proc.c:204:
+       i2c_inodes[id - 256] =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#574: FILE: drivers/i2c/i2c-proc.c:205:
+           new_header->ctl_table->child->child->de->low_ino;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#574: FILE: drivers/i2c/i2c-proc.c:205:
+           new_header->ctl_table->child->child->de->low_ino;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#582: FILE: drivers/i2c/i2c-proc.c:233:
+/* Monitor access for /proc/sys/dev/sensors; make unloading i2c-proc.o $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#583: FILE: drivers/i2c/i2c-proc.c:234:
+/* Monitor access for /proc/sys/dev/sensors; make unloading i2c-proc.o 
+   impossible if some process still uses it or some file in it */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#583: FILE: drivers/i2c/i2c-proc.c:234:
+   impossible if some process still uses it or some file in it */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#586: FILE: drivers/i2c/i2c-proc.c:237:
+       if (fill)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#586: FILE: drivers/i2c/i2c-proc.c:237:
+       if (fill)
+               MOD_INC_USE_COUNT;

ERROR:CODE_INDENT: code indent should use tabs where possible
#587: FILE: drivers/i2c/i2c-proc.c:238:
+               MOD_INC_USE_COUNT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#587: FILE: drivers/i2c/i2c-proc.c:238:
+               MOD_INC_USE_COUNT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#588: FILE: drivers/i2c/i2c-proc.c:239:
+       else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#588: FILE: drivers/i2c/i2c-proc.c:239:
+       else
+               MOD_DEC_USE_COUNT;

ERROR:CODE_INDENT: code indent should use tabs where possible
#589: FILE: drivers/i2c/i2c-proc.c:240:
+               MOD_DEC_USE_COUNT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#589: FILE: drivers/i2c/i2c-proc.c:240:
+               MOD_DEC_USE_COUNT;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#593: FILE: drivers/i2c/i2c-proc.c:244:
+/* Monitor access for /proc/sys/dev/sensors/ directories; make unloading
+   the corresponding module impossible if some process still uses it or

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#594: FILE: drivers/i2c/i2c-proc.c:245:
+   some file in it */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#597: FILE: drivers/i2c/i2c-proc.c:248:
+       int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#598: FILE: drivers/i2c/i2c-proc.c:249:
+       struct i2c_client *client;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#601: FILE: drivers/i2c/i2c-proc.c:252:
+       if (!inode) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#601: FILE: drivers/i2c/i2c-proc.c:252:
+       if (!inode) {
+               printk(KERN_ERR "i2c-proc.o: Warning: inode NULL in fill_inode()\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#602: FILE: drivers/i2c/i2c-proc.c:253:
+               printk(KERN_ERR "i2c-proc.o: Warning: inode NULL in fill_inode()\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#602: FILE: drivers/i2c/i2c-proc.c:253:
+               printk(KERN_ERR "i2c-proc.o: Warning: inode NULL in fill_inode()\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#602: FILE: drivers/i2c/i2c-proc.c:253:
+               printk(KERN_ERR "i2c-proc.o: Warning: inode NULL in fill_inode()\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#603: FILE: drivers/i2c/i2c-proc.c:254:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#603: FILE: drivers/i2c/i2c-proc.c:254:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#604: FILE: drivers/i2c/i2c-proc.c:255:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#607: FILE: drivers/i2c/i2c-proc.c:258:
+       for (i = 0; i < SENSORS_ENTRY_MAX; i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#607: FILE: drivers/i2c/i2c-proc.c:258:
+       for (i = 0; i < SENSORS_ENTRY_MAX; i++)
+               if (i2c_clients[i]

ERROR:CODE_INDENT: code indent should use tabs where possible
#608: FILE: drivers/i2c/i2c-proc.c:259:
+               if (i2c_clients[i]$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#608: FILE: drivers/i2c/i2c-proc.c:259:
+               if (i2c_clients[i]$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i2c_inodes[i] == inode->i_ino'
#608: FILE: drivers/i2c/i2c-proc.c:259:
+               if (i2c_clients[i]
+                   && (i2c_inodes[i] == inode->i_ino)) break;

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#608: FILE: drivers/i2c/i2c-proc.c:259:
+               if (i2c_clients[i]
+                   && (i2c_inodes[i] == inode->i_ino)) break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#609: FILE: drivers/i2c/i2c-proc.c:260:
+                   && (i2c_inodes[i] == inode->i_ino)) break;$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#609: FILE: drivers/i2c/i2c-proc.c:260:
+               if (i2c_clients[i]
+                   && (i2c_inodes[i] == inode->i_ino)) break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#609: FILE: drivers/i2c/i2c-proc.c:260:
+                   && (i2c_inodes[i] == inode->i_ino)) break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#611: FILE: drivers/i2c/i2c-proc.c:262:
+       if (i == SENSORS_ENTRY_MAX) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#611: FILE: drivers/i2c/i2c-proc.c:262:
+       if (i == SENSORS_ENTRY_MAX) {
+               printk

ERROR:CODE_INDENT: code indent should use tabs where possible
#612: FILE: drivers/i2c/i2c-proc.c:263:
+               printk$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#612: FILE: drivers/i2c/i2c-proc.c:263:
+               printk$

ERROR:CODE_INDENT: code indent should use tabs where possible
#613: FILE: drivers/i2c/i2c-proc.c:264:
+                   (KERN_ERR "i2c-proc.o: Warning: inode (%ld) not found in fill_inode()\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#613: FILE: drivers/i2c/i2c-proc.c:264:
+                   (KERN_ERR "i2c-proc.o: Warning: inode (%ld) not found in fill_inode()\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#614: FILE: drivers/i2c/i2c-proc.c:265:
+                    inode->i_ino);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#614: FILE: drivers/i2c/i2c-proc.c:265:
+                    inode->i_ino);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#615: FILE: drivers/i2c/i2c-proc.c:266:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#615: FILE: drivers/i2c/i2c-proc.c:266:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#616: FILE: drivers/i2c/i2c-proc.c:267:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#618: FILE: drivers/i2c/i2c-proc.c:269:
+       client = i2c_clients[i];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#619: FILE: drivers/i2c/i2c-proc.c:270:
+       if (fill)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#619: FILE: drivers/i2c/i2c-proc.c:270:
+       if (fill)
+               client->driver->inc_use(client);

ERROR:CODE_INDENT: code indent should use tabs where possible
#620: FILE: drivers/i2c/i2c-proc.c:271:
+               client->driver->inc_use(client);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#620: FILE: drivers/i2c/i2c-proc.c:271:
+               client->driver->inc_use(client);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#621: FILE: drivers/i2c/i2c-proc.c:272:
+       else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#621: FILE: drivers/i2c/i2c-proc.c:272:
+       else
+               client->driver->dec_use(client);

ERROR:CODE_INDENT: code indent should use tabs where possible
#622: FILE: drivers/i2c/i2c-proc.c:273:
+               client->driver->dec_use(client);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#622: FILE: drivers/i2c/i2c-proc.c:273:
+               client->driver->dec_use(client);$

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#635: FILE: include/linux/i2c.h:26:
+/* $Id: i2c.h,v 1.59 2002/07/19 20:53:45 phil Exp $ */

ERROR:CODE_INDENT: code indent should use tabs where possible
#656: FILE: include/linux/i2c.h:288:
+                                               /* Must equal I2C_M_TEN below */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#665: FILE: include/linux/i2c.h:405:
+#define I2C_FUNC_SMBUS_READ_WORD_DATA_PEC  0x00000800 /* SMBus 2.0 */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#666: FILE: include/linux/i2c.h:406:
+#define I2C_FUNC_SMBUS_WRITE_WORD_DATA_PEC 0x00001000 /* SMBus 2.0 */ $

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#686: FILE: include/linux/i2c.h:439:
+#define I2C_FUNC_SMBUS_BLOCK_DATA_PEC I2C_FUNC_SMBUS_READ_BLOCK_DATA_PEC | \
+                                      I2C_FUNC_SMBUS_WRITE_BLOCK_DATA_PEC

ERROR:CODE_INDENT: code indent should use tabs where possible
#687: FILE: include/linux/i2c.h:440:
+                                      I2C_FUNC_SMBUS_WRITE_BLOCK_DATA_PEC$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#687: FILE: include/linux/i2c.h:440:
+                                      I2C_FUNC_SMBUS_WRITE_BLOCK_DATA_PEC$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#688: FILE: include/linux/i2c.h:441:
+#define I2C_FUNC_SMBUS_WORD_DATA_PEC  I2C_FUNC_SMBUS_READ_WORD_DATA_PEC | \
+                                      I2C_FUNC_SMBUS_WRITE_WORD_DATA_PEC

ERROR:CODE_INDENT: code indent should use tabs where possible
#689: FILE: include/linux/i2c.h:442:
+                                      I2C_FUNC_SMBUS_WRITE_WORD_DATA_PEC$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#689: FILE: include/linux/i2c.h:442:
+                                      I2C_FUNC_SMBUS_WRITE_WORD_DATA_PEC$

ERROR:CODE_INDENT: code indent should use tabs where possible
#706: FILE: include/linux/i2c.h:457:
+                            I2C_FUNC_SMBUS_WRITE_BLOCK_DATA_PEC | \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#706: FILE: include/linux/i2c.h:457:
+                            I2C_FUNC_SMBUS_WRITE_BLOCK_DATA_PEC | \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#707: FILE: include/linux/i2c.h:458:
+                            I2C_FUNC_SMBUS_I2C_BLOCK$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#707: FILE: include/linux/i2c.h:458:
+                            I2C_FUNC_SMBUS_I2C_BLOCK$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#712: FILE: include/linux/i2c.h:463:
+#define I2C_SMBUS_BLOCK_MAX    32      /* As specified in SMBus standard */    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#718: FILE: include/linux/i2c.h:468:
+       __u8 block[I2C_SMBUS_BLOCK_MAX + 3]; /* block[0] is used for length */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#719: FILE: include/linux/i2c.h:469:
+                          /* one more for read length in block process call */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#720: FILE: include/linux/i2c.h:470:
+                                                   /* and one more for PEC */$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000441315.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 194 errors, 274 warnings, 12 checks, 654 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000441315.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
