ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#48: FILE: fs/proc/array.c:474:
+int proc_pid_oom(struct task_struct *task, char * buffer)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#51: FILE: fs/proc/array.c:477:
+	int res;
+	res = sprintf(buffer, "%d %lu %lu\n",

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#80: FILE: fs/proc/base.c:137:
+	E(PROC_TGID_OOM,       "oom", S_IFREG|S_IRUGO),
 	                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#80: FILE: fs/proc/base.c:137:
+	E(PROC_TGID_OOM,       "oom", S_IFREG|S_IRUGO),

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#88: FILE: fs/proc/base.c:163:
+	E(PROC_TID_OOM,       "oom", S_IFREG|S_IRUGO),
 	                                    ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#88: FILE: fs/proc/base.c:163:
+	E(PROC_TID_OOM,       "oom", S_IFREG|S_IRUGO),

ERROR:SPACING: space required after that ',' (ctx:OxV)
#96: FILE: fs/proc/base.c:200:
+int proc_pid_oom(struct task_struct*,char*);
                                     ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#96: FILE: fs/proc/base.c:200:
+int proc_pid_oom(struct task_struct*,char*);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct*' should also have an identifier name
#96: FILE: fs/proc/base.c:200:
+int proc_pid_oom(struct task_struct*,char*);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char*' should also have an identifier name
#96: FILE: fs/proc/base.c:200:
+int proc_pid_oom(struct task_struct*,char*);

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#99: FILE: fs/proc/base.c:202:
struct vfsmount **mnt)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#119: FILE: include/linux/oom_kill.h:1:
+struct candidate_process {

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#509: FILE: mm/oom_kill.c:23:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#510: FILE: mm/oom_kill.c:24:
+ *  Embedded Linux Lab - 10LE Institulo Nokia de Tecnologia - INdT $

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#532: FILE: mm/oom_kill.c:60:
+EXPORT_SYMBOL(candidate);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#536: FILE: mm/oom_kill.c:64:
+EXPORT_SYMBOL(pidqueue_head);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#538: FILE: mm/oom_kill.c:66:
+/*
+void show_candidate_comm(void)

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#558: FILE: mm/oom_kill.c:86:
+static struct task_struct * select_process(void)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#562: FILE: mm/oom_kill.c:90:
+^I      $

WARNING:LINE_SPACING: Missing a blank line after declarations
#565: FILE: mm/oom_kill.c:93:
+		struct list_head *tmp;
+		list_for_each_safe(loop_counter, tmp, &pidqueue_head) {

WARNING:INDENTED_LABEL: labels should not be indented
#577: FILE: mm/oom_kill.c:105:
+  exit:

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#606: FILE: mm/oom_kill.c:259:
+	printk(KERN_DEBUG "A good walker leaves no tracks.\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000217004.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 13 warnings, 2 checks, 174 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000217004.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
