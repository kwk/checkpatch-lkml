WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
> I'm looking for a file system with a tree-based quota system.  XFS on IRIX 

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#107: FILE: fs/attr.c:160:
+	if (!(ia_valid & ATTR_TID)
+	    && (ia_valid & ATTR_UID)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#108: FILE: fs/attr.c:161:
+	    && (ia_valid & ATTR_UID)
+	    && !treequota_parent_uid_ok(inode, dentry->d_parent->d_inode,

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:CAMELCASE: Avoid CamelCase: <Opt_ignore>
#251: FILE: fs/ext2/super.c:318:
+	{Opt_ignore, "treequota"},

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#331: FILE: fs/ext3/super.c:553:
+#define QTYPE2NAME(t) ((t)==USRQUOTA?"user":(t)==GRPQUOTA?"group":"tree")
                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#331: FILE: fs/ext3/super.c:553:
+#define QTYPE2NAME(t) ((t)==USRQUOTA?"user":(t)==GRPQUOTA?"group":"tree")
                                     ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#331: FILE: fs/ext3/super.c:553:
+#define QTYPE2NAME(t) ((t)==USRQUOTA?"user":(t)==GRPQUOTA?"group":"tree")
                                            ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#331: FILE: fs/ext3/super.c:553:
+#define QTYPE2NAME(t) ((t)==USRQUOTA?"user":(t)==GRPQUOTA?"group":"tree")
                                                ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#331: FILE: fs/ext3/super.c:553:
+#define QTYPE2NAME(t) ((t)==USRQUOTA?"user":(t)==GRPQUOTA?"group":"tree")
                                                          ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#331: FILE: fs/ext3/super.c:553:
+#define QTYPE2NAME(t) ((t)==USRQUOTA?"user":(t)==GRPQUOTA?"group":"tree")
                                                                  ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 't' - possible side-effects?
#331: FILE: fs/ext3/super.c:553:
+#define QTYPE2NAME(t) ((t)==USRQUOTA?"user":(t)==GRPQUOTA?"group":"tree")

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#332: FILE: fs/ext3/super.c:554:
+#define QTYPE2MOPT(on, t) ((t)==USRQUOTA?((on)##USRJQUOTA):(t)==GRPQUOTA?((on)##GRPJQUOTA):((on)##TREEJQUOTA))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#332: FILE: fs/ext3/super.c:554:
+#define QTYPE2MOPT(on, t) ((t)==USRQUOTA?((on)##USRJQUOTA):(t)==GRPQUOTA?((on)##GRPJQUOTA):((on)##TREEJQUOTA))
                               ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#332: FILE: fs/ext3/super.c:554:
+#define QTYPE2MOPT(on, t) ((t)==USRQUOTA?((on)##USRJQUOTA):(t)==GRPQUOTA?((on)##GRPJQUOTA):((on)##TREEJQUOTA))
                                         ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#332: FILE: fs/ext3/super.c:554:
+#define QTYPE2MOPT(on, t) ((t)==USRQUOTA?((on)##USRJQUOTA):(t)==GRPQUOTA?((on)##GRPJQUOTA):((on)##TREEJQUOTA))
                                                           ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#332: FILE: fs/ext3/super.c:554:
+#define QTYPE2MOPT(on, t) ((t)==USRQUOTA?((on)##USRJQUOTA):(t)==GRPQUOTA?((on)##GRPJQUOTA):((on)##TREEJQUOTA))
                                                               ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#332: FILE: fs/ext3/super.c:554:
+#define QTYPE2MOPT(on, t) ((t)==USRQUOTA?((on)##USRJQUOTA):(t)==GRPQUOTA?((on)##GRPJQUOTA):((on)##TREEJQUOTA))
                                                                         ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#332: FILE: fs/ext3/super.c:554:
+#define QTYPE2MOPT(on, t) ((t)==USRQUOTA?((on)##USRJQUOTA):(t)==GRPQUOTA?((on)##GRPJQUOTA):((on)##TREEJQUOTA))
                                                                                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'on' - possible side-effects?
#332: FILE: fs/ext3/super.c:554:
+#define QTYPE2MOPT(on, t) ((t)==USRQUOTA?((on)##USRJQUOTA):(t)==GRPQUOTA?((on)##GRPJQUOTA):((on)##TREEJQUOTA))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 't' - possible side-effects?
#332: FILE: fs/ext3/super.c:554:
+#define QTYPE2MOPT(on, t) ((t)==USRQUOTA?((on)##USRJQUOTA):(t)==GRPQUOTA?((on)##GRPJQUOTA):((on)##TREEJQUOTA))

CHECK:CAMELCASE: Avoid CamelCase: <Opt_usrjquota>
#341: FILE: fs/ext3/super.c:631:
+	Opt_usrjquota, Opt_grpjquota, Opt_treejquota,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_grpjquota>
#341: FILE: fs/ext3/super.c:631:
+	Opt_usrjquota, Opt_grpjquota, Opt_treejquota,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_treejquota>
#341: FILE: fs/ext3/super.c:631:
+	Opt_usrjquota, Opt_grpjquota, Opt_treejquota,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_offusrjquota>
#342: FILE: fs/ext3/super.c:632:
+	Opt_offusrjquota, Opt_offgrpjquota, Opt_offtreejquota,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_offgrpjquota>
#342: FILE: fs/ext3/super.c:632:
+	Opt_offusrjquota, Opt_offgrpjquota, Opt_offtreejquota,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_offtreejquota>
#342: FILE: fs/ext3/super.c:632:
+	Opt_offusrjquota, Opt_offgrpjquota, Opt_offtreejquota,

CHECK:CAMELCASE: Avoid CamelCase: <Opt_grpquota>
#346: FILE: fs/ext3/super.c:635:
+	Opt_grpquota, Opt_treequota

CHECK:CAMELCASE: Avoid CamelCase: <Opt_treequota>
#346: FILE: fs/ext3/super.c:635:
+	Opt_grpquota, Opt_treequota

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#424: FILE: fs/ext3/super.c:1044:
+		if ((sbi->s_mount_opt & EXT3_MOUNT_TREEQUOTA) &&
+		     sbi->s_qf_names[TREEQUOTA])

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#504: FILE: fs/namei.c:2124:
+	if (!treequota_parent_ok(old_dentry->d_inode, new_dir)
+	    && !capable(CAP_CHOWN))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#507: FILE: fs/namei.c:2127:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#520: FILE: fs/namei.c:2142:
+	else if (!treequota_parent_ok(old_dentry->d_inode, new_dir)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#521: FILE: fs/namei.c:2143:
+	else if (!treequota_parent_ok(old_dentry->d_inode, new_dir)
+		 && (error = notify_change(old_dentry, &attr)))

CHECK:BRACES: Unbalanced braces around else statement
#532: FILE: fs/namei.c:2176:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#536: FILE: fs/namei.c:2180:
+			struct iattr attr;
+			if (old_dentry->d_inode->i_nlink > 1)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#540: FILE: fs/namei.c:2184:
+			attr.ia_tid = treequota_tid(new_dir,
+					    old_dentry->d_inode->i_uid);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'sb' - possible side-effects?
#683: FILE: include/linux/quota.h:305:
+#define sb_has_quota_enabled(sb, type)	\
+	((type)==USRQUOTA ? \
+	   (sb_dqopt(sb)->flags & DQUOT_USR_ENABLED) : \
+	     ((type)==GRPQUOTA ? \
+		(sb_dqopt(sb)->flags & DQUOT_GRP_ENABLED) : \
+	      (sb_dqopt(sb)->flags & DQUOT_TREE_ENABLED)))

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#684: FILE: include/linux/quota.h:306:
+	((type)==USRQUOTA ? \
 	       ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#686: FILE: include/linux/quota.h:308:
+	     ((type)==GRPQUOTA ? \
 	            ^

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

CHECK:LINE_SPACING: Please don't use multiple blank lines
#705: FILE: include/linux/quotaops.h:186:
 
+

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#706: FILE: include/linux/quotaops.h:187:
+static __inline__ int treequota_parent_uid_ok(const struct inode *inode, const struct inode *dir, const uid_t uid)

WARNING:INLINE: plain inline is preferred over __inline__
#706: FILE: include/linux/quotaops.h:187:
+static __inline__ int treequota_parent_uid_ok(const struct inode *inode, const struct inode *dir, const uid_t uid)

ERROR:SPACING: space prohibited after that open parenthesis '('
#708: FILE: include/linux/quotaops.h:189:
+	if ( !(inode->i_sb->s_dquot.flags & DQUOT_TREE_ENABLED))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'inode->i_tid ==   dir->i_tid'
#710: FILE: include/linux/quotaops.h:191:
+	if ((dir->i_tid && dir != inode)
+	    ? (inode->i_tid ==   dir->i_tid)
+	    : (inode->i_tid ==   uid))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'inode->i_tid ==   uid'
#710: FILE: include/linux/quotaops.h:191:
+	if ((dir->i_tid && dir != inode)
+	    ? (inode->i_tid ==   dir->i_tid)
+	    : (inode->i_tid ==   uid))

WARNING:INLINE: plain inline is preferred over __inline__
#717: FILE: include/linux/quotaops.h:198:
+static __inline__ int treequota_parent_ok(const struct inode *inode, const struct inode *dir)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#719: FILE: include/linux/quotaops.h:200:
+	return treequota_parent_uid_ok(inode,dir, inode->i_uid);
 	                                    ^

WARNING:INLINE: plain inline is preferred over __inline__
#722: FILE: include/linux/quotaops.h:203:
+static __inline__ int treequota_tid(const struct inode *dir, const uid_t uid)

WARNING:INLINE: plain inline is preferred over __inline__
#731: FILE: include/linux/quotaops.h:212:
+static __inline__ void treequota_check(struct dentry *dentry)

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#739: FILE: include/linux/quotaops.h:220:
+	if (!inode || ! (inode->i_sb->s_dquot.flags & DQUOT_TREE_ENABLED))
 	              ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#748: FILE: include/linux/quotaops.h:229:
+	if (!S_ISDIR(inode->i_mode)
+	    && inode->i_nlink > 1) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#749: FILE: include/linux/quotaops.h:230:
+		printk(KERN_WARNING "treequota: file with multiple links has wrong tree-id\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#750: FILE: include/linux/quotaops.h:231:
+		printk(KERN_WARNING "  dev=%x ino=%ld dino=%ld\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#753: FILE: include/linux/quotaops.h:234:
+		printk(KERN_WARNING "  basename=%s\n", dentry->d_name.name);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#765: FILE: include/linux/quotaops.h:291:
+#define treequota_parent_uid_ok(inode,dir,uid) (1)
                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#765: FILE: include/linux/quotaops.h:291:
+#define treequota_parent_uid_ok(inode,dir,uid) (1)
                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#766: FILE: include/linux/quotaops.h:292:
+#define treequota_parent_ok(inode,dir) (1)
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#767: FILE: include/linux/quotaops.h:293:
+#define treequota_tid(inode,uid) (0)
                            ^

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000104874.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 28 warnings, 33 checks, 573 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000104874.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
