WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
diff -ruNp 600-suspend-header.patch-old/include/linux/suspend2.h 600-suspend-header.patch-new/include/linux/suspend2.h

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#31: FILE: include/linux/suspend2.h:1:
+#ifndef _LINUX_SUSPEND2_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:CODE_INDENT: code indent should use tabs where possible
#41: FILE: include/linux/suspend2.h:11:
+                  __attribute__ ((aligned (PAGE_SIZE)));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#41: FILE: include/linux/suspend2.h:11:
+                  __attribute__ ((aligned (PAGE_SIZE)));$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#41: FILE: include/linux/suspend2.h:11:
+                  __attribute__ ((aligned (PAGE_SIZE)));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(PAGE_SIZE) over __attribute__((aligned(PAGE_SIZE)))
#41: FILE: include/linux/suspend2.h:11:
+                  __attribute__ ((aligned (PAGE_SIZE)));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#78: FILE: include/linux/suspend2.h:48:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#91: FILE: include/linux/suspend2.h:61:
+#define SUSPEND_EAT_MEMORY ^I2$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#108: FILE: include/linux/suspend2.h:78:
+#define SUSPEND_LOW^I ^I3$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#109: FILE: include/linux/suspend2.h:79:
+#define SUSPEND_MEDIUM^I ^I4$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#110: FILE: include/linux/suspend2.h:80:
+#define SUSPEND_HIGH^I  ^I5$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#113: FILE: include/linux/suspend2.h:83:
+extern void __suspend_message(unsigned long section, unsigned long level, int log_normally,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#114: FILE: include/linux/suspend2.h:84:
+extern void __suspend_message(unsigned long section, unsigned long level, int log_normally,
+		const char *fmt, ...);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'sn' - possible side-effects?
#117: FILE: include/linux/suspend2.h:87:
+#define suspend_message(sn, lev, log, fmt, a...) \
+do { \
+	if (TEST_DEBUG_STATE(sn)) \
+		__suspend_message(sn, lev, log, fmt, ##a); \
+} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#121: FILE: include/linux/suspend2.h:91:
+} while(0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'lev' - possible side-effects?
#123: FILE: include/linux/suspend2.h:93:
+#define suspend_message(sn, lev, log, fmt, a...) \
+do { \
+	if (lev == 0) \
+		__suspend_message(sn, lev, log, fmt, ##a); \
+} while(0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'lev' may be better as '(lev)' to avoid precedence issues
#123: FILE: include/linux/suspend2.h:93:
+#define suspend_message(sn, lev, log, fmt, a...) \
+do { \
+	if (lev == 0) \
+		__suspend_message(sn, lev, log, fmt, ##a); \
+} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#127: FILE: include/linux/suspend2.h:97:
+} while(0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#129: FILE: include/linux/suspend2.h:99:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: include/linux/suspend2.h:99:
+  $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#136: FILE: include/linux/suspend2.h:106:
+#define SUSPEND_COMMANDLINE_ERROR ^I4$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#163: FILE: include/linux/suspend2.h:133:
+#define get_suspend_state() ^I^I(software_suspend_state)$

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#164: FILE: include/linux/suspend2.h:134:
+#define restore_suspend_state(saved_state) \
+	do { software_suspend_state = saved_state; } while(0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

ERROR:SPACING: space required before the open parenthesis '('
#165: FILE: include/linux/suspend2.h:135:
+	do { software_suspend_state = saved_state; } while(0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#166: FILE: include/linux/suspend2.h:136:
+^I$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#177: FILE: include/linux/suspend2.h:147:
+extern void suspend2_try_resume(void);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#178: FILE: include/linux/suspend2.h:148:
+extern int suspend_early_boot_message $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#180: FILE: include/linux/suspend2.h:150:
+extern void suspend_handle_keypress(unsigned int keycode, int source);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#181: FILE: include/linux/suspend2.h:151:
+extern unsigned long suspend2_update_status (unsigned long value, unsigned long maximum,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#181: FILE: include/linux/suspend2.h:151:
+extern unsigned long suspend2_update_status (unsigned long value, unsigned long maximum,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#182: FILE: include/linux/suspend2.h:152:
+extern unsigned long suspend2_update_status (unsigned long value, unsigned long maximum,
+		const char *fmt, ...);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#183: FILE: include/linux/suspend2.h:153:
+extern void suspend2_prepare_status (int printalways, int clearbar, const char *fmt, ...);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#183: FILE: include/linux/suspend2.h:153:
+extern void suspend2_prepare_status (int printalways, int clearbar, const char *fmt, ...);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#184: FILE: include/linux/suspend2.h:154:
+extern void suspend2_cleanup_finished_io(void);

ERROR:SPACING: space required before the open parenthesis '('
#200: FILE: include/linux/suspend2.h:170:
+#define smp_pause() do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#201: FILE: include/linux/suspend2.h:171:
+#define smp_continue() do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#202: FILE: include/linux/suspend2.h:172:
+#define smp_suspend() do { } while(0)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#205: FILE: include/linux/suspend2.h:175:
+extern unsigned long suspend2_get_nonconflicting_page(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#206: FILE: include/linux/suspend2.h:176:
+extern unsigned long suspend2_get_nonconflicting_pages(int order);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#211: FILE: include/linux/suspend2.h:181:
+extern void suspend2_try_suspend(void);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#214: FILE: include/linux/suspend2.h:184:
+int suspend_map_kernel_page(struct page * page, int enable);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#216: FILE: include/linux/suspend2.h:186:
+static inline int suspend_map_kernel_page(struct page * page, int enable)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#228: FILE: include/linux/suspend2.h:198:
+#define test_suspend_state(bit) ^I(0)$

ERROR:SPACING: space required before the open parenthesis '('
#229: FILE: include/linux/suspend2.h:199:
+#define set_suspend_state(bit)		do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#231: FILE: include/linux/suspend2.h:201:
+#define suspend2_try_resume()			do { } while(0)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#233: FILE: include/linux/suspend2.h:203:
+#define suspend_handle_keypress(a, b) ^I^Ido { } while(0)$

ERROR:SPACING: space required before the open parenthesis '('
#233: FILE: include/linux/suspend2.h:203:
+#define suspend_handle_keypress(a, b) 		do { } while(0)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#235: FILE: include/linux/suspend2.h:205:
+static inline unsigned long suspend2_update_status(unsigned long value, unsigned long maximum,
+		const char *fmt, ...)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#239: FILE: include/linux/suspend2.h:209:
+}
+#define suspend2_cleanup_finished_io() do { } while(0)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#239: FILE: include/linux/suspend2.h:209:
+#define suspend2_cleanup_finished_io() do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#240: FILE: include/linux/suspend2.h:210:
+#define suspend2_prepare_status(a, ...)  do { } while(0)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000170385.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 17 warnings, 16 checks, 247 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000170385.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
