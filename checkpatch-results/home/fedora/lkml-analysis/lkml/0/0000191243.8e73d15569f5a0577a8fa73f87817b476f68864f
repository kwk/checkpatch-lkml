WARNING:REPEATED_WORD: Possible repeated word: 'etc'
#44: 
switching with digital, etc etc etc...

WARNING:REPEATED_WORD: Possible repeated word: 'etc'
#44: 
switching with digital, etc etc etc...

ERROR:TRAILING_WHITESPACE: trailing whitespace
#138: FILE: sound/ppc/pmac.c:673:
+^Isnd_pcm_lib_preallocate_pages_for_all(pcm, SNDRV_DMA_TYPE_DEV, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#224: FILE: sound/ppc/pmac.c:881:
+	struct macio_chip* macio;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#234: FILE: sound/ppc/pmac.c:920:
+	if (! chip->node) {
 	    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#244: FILE: sound/ppc/pmac.c:930:
+^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#274: FILE: sound/ppc/pmac.c:1002:
+	if (macio == NULL)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!macio"
#274: FILE: sound/ppc/pmac.c:1002:
+	if (macio == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#275: FILE: sound/ppc/pmac.c:1003:
+		printk(KERN_WARNING "snd-powermac: can't locate macio !\n");

CHECK:BRACES: Unbalanced braces around else statement
#276: FILE: sound/ppc/pmac.c:1004:
+	else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#281: FILE: sound/ppc/pmac.c:1009:
+			struct device_node *np = pci_device_to_OF_node(pdev);
+			if (np && np == macio->of_node) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chip->pdev"
#287: FILE: sound/ppc/pmac.c:1015:
+	if (chip->pdev == NULL)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#288: FILE: sound/ppc/pmac.c:1016:
+		printk(KERN_WARNING "snd-powermac: can't locate macio PCI device !\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#299: FILE: sound/ppc/pmac.c:1123:
+		printk(KERN_ERR "snd-powermac: Failed to add automute control\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#340: FILE: sound/ppc/pmac.c:1177:
+			static char *name[2] = { "- Control", "- DMA" };
+			if (! request_OF_resource(np->parent, i, name[i])) {

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#340: FILE: sound/ppc/pmac.c:1177:
+			if (! request_OF_resource(np->parent, i, name[i])) {
 			    ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#366: FILE: sound/ppc/pmac.c:1198:
+			static char *name[3] = { "- Control", "- Tx DMA", "- Rx DMA" };
+			if (! request_OF_resource(np, i, name[i])) {

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#366: FILE: sound/ppc/pmac.c:1198:
+			if (! request_OF_resource(np, i, name[i])) {
 			    ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#465: FILE: sound/ppc/tumbler.c:46:
+#define DBG(fmt...) printk(fmt)

ERROR:SPACING: space required before the open parenthesis '('
#573: FILE: sound/ppc/tumbler.c:674:
+	switch(kcontrol->private_value) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!gp"
#583: FILE: sound/ppc/tumbler.c:684:
+	if (gp == NULL)

ERROR:SPACING: space required before the open parenthesis '('
#593: FILE: sound/ppc/tumbler.c:702:
+	switch(kcontrol->private_value) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!gp"
#603: FILE: sound/ppc/tumbler.c:712:
+	if (gp == NULL)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#612: FILE: sound/ppc/tumbler.c:857:
 };
+static snd_kcontrol_new_t tumbler_lineout_sw __initdata = {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#664: FILE: sound/ppc/tumbler.c:924:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#664: FILE: sound/ppc/tumbler.c:924:
+ $

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#700: FILE: sound/ppc/tumbler.c:1026:
+static long tumbler_find_device(const char *device, const char *platform, pmac_gpio_t *gp, int is_compatible)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#835: FILE: sound/ppc/tumbler.c:1210:
+		tumbler_find_device("line-output-mute",
+				   "platform-do-lineout-mute",

ERROR:CODE_INDENT: code indent should use tabs where possible
#861: FILE: sound/ppc/tumbler.c:1221:
+ ^Iirq = tumbler_find_device("line-output-detect",$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#861: FILE: sound/ppc/tumbler.c:1221:
+ ^Iirq = tumbler_find_device("line-output-detect",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#861: FILE: sound/ppc/tumbler.c:1221:
+ ^Iirq = tumbler_find_device("line-output-detect",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#863: FILE: sound/ppc/tumbler.c:1223:
+ ^Iif (irq < 0)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#863: FILE: sound/ppc/tumbler.c:1223:
+ ^Iif (irq < 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#863: FILE: sound/ppc/tumbler.c:1223:
+ ^Iif (irq < 0)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#867: FILE: sound/ppc/tumbler.c:1227:
+  $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#867: FILE: sound/ppc/tumbler.c:1227:
+  $

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#896: FILE: sound/ppc/tumbler.c:1343:
+		if ((err = snd_ctl_add(chip->card, chip->lineout_sw_ctl)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#907: FILE: sound/ppc/tumbler.c:1358:
+	if ((mix->headphone_irq >=0 || mix->lineout_irq >= 0)
 	                        ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#907: FILE: sound/ppc/tumbler.c:1358:
+	if ((mix->headphone_irq >=0 || mix->lineout_irq >= 0)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#908: FILE: sound/ppc/tumbler.c:1359:
+	if ((mix->headphone_irq >=0 || mix->lineout_irq >= 0)
+	    && (err = snd_pmac_add_automute(chip)) < 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#915: FILE: sound/ppc/tumbler.c:1366:
+  ^Iif (mix->headphone_irq >= 0) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#915: FILE: sound/ppc/tumbler.c:1366:
+  ^Iif (mix->headphone_irq >= 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#915: FILE: sound/ppc/tumbler.c:1366:
+  ^Iif (mix->headphone_irq >= 0) {$

WARNING:LINE_SPACING: Missing a blank line after declarations
#917: FILE: sound/ppc/tumbler.c:1368:
+		unsigned char val;
+		if ((err = request_irq(mix->headphone_irq, headphone_intr, 0,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#917: FILE: sound/ppc/tumbler.c:1368:
+		if ((err = request_irq(mix->headphone_irq, headphone_intr, 0,

ERROR:CODE_INDENT: code indent should use tabs where possible
#924: FILE: sound/ppc/tumbler.c:1375:
+  ^Iif (mix->lineout_irq >= 0) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#924: FILE: sound/ppc/tumbler.c:1375:
+  ^Iif (mix->lineout_irq >= 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#924: FILE: sound/ppc/tumbler.c:1375:
+  ^Iif (mix->lineout_irq >= 0) {$

WARNING:LINE_SPACING: Missing a blank line after declarations
#926: FILE: sound/ppc/tumbler.c:1377:
+		unsigned char val;
+		if ((err = request_irq(mix->lineout_irq, headphone_intr, 0,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#926: FILE: sound/ppc/tumbler.c:1377:
+		if ((err = request_irq(mix->lineout_irq, headphone_intr, 0,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#946: FILE: arch/ppc64/kernel/pmac_feature.c:67:
+struct macio_chip* __pmac macio_find(struct device_node* child, int type)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#946: FILE: arch/ppc64/kernel/pmac_feature.c:67:
+struct macio_chip* __pmac macio_find(struct device_node* child, int type)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#965: FILE: arch/ppc64/kernel/pmac_feature.c:256:
+	struct macio_chip* macio = &macio_chips[0];

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#974: FILE: arch/ppc64/kernel/pmac_feature.c:265:
+	udelay(10);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#977: FILE: arch/ppc64/kernel/pmac_feature.c:268:
+	udelay(10);

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#980: FILE: arch/ppc64/kernel/pmac_feature.c:271:
+	udelay(10);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#985: FILE: arch/ppc64/kernel/pmac_feature.c:276:
+
+

ERROR:POINTER_LOCATION: "foo* __pmac bar" should be "foo * __pmac bar"
#1007: FILE: arch/ppc/platforms/pmac_feature.c:77:
+struct macio_chip* __pmac macio_find(struct device_node* child, int type)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1007: FILE: arch/ppc/platforms/pmac_feature.c:77:
+struct macio_chip* __pmac macio_find(struct device_node* child, int type)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1065: FILE: sound/ppc/beep.c:223:
+	beep->buf = dma_alloc_coherent(&chip->pdev->dev, BEEP_BUFLEN * 4,
+					&beep->addr, GFP_KERNEL);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1090: FILE: include/asm-ppc/keylargo.h:234:
+#define K2_FCR1_I2S0_ENABLE    ^I^I0x00002000$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000191243.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 24 errors, 23 warnings, 14 checks, 942 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000191243.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
