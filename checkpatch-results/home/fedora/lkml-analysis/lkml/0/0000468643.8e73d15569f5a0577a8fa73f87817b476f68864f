WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#24: 
These are a kernel patch I wrote to enhance kernel profiling to loadable modules and

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#71: 
…
^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#73: 
…
^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#75: 
…
^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#174: FILE: fs/proc/proc_misc.c:427:
+#ifdef CONFIG_MODULE_PROFILE^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#185: FILE: fs/proc/proc_misc.c:491:
+		extern struct file_operations proc_profile_operations;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:CONST_STRUCT: struct file_operations should normally be const
#185: FILE: fs/proc/proc_misc.c:491:
+		extern struct file_operations proc_profile_operations;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#191: FILE: fs/proc/proc_misc.c:497:
+#ifdef CONFIG_MODULE_PROFILE^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#192: FILE: fs/proc/proc_misc.c:498:
+		proc_root_mprof = proc_mkdir("mprof",0);
 		                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#224: FILE: include/asm-i386/hw_irq.h:191:
+	unsigned int * targ_prof_buffer;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxO)
#248: FILE: include/asm-i386/hw_irq.h:210:
+	targ_prof_buffer = srch_prof_buffer(eip,&idx);
 	                                       ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#248: FILE: include/asm-i386/hw_irq.h:210:
+	targ_prof_buffer = srch_prof_buffer(eip,&idx);
 	                                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#252: FILE: include/asm-i386/hw_irq.h:214:
+        eip -= (unsigned long) &_stext;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: No space is necessary after a cast
#252: FILE: include/asm-i386/hw_irq.h:214:
+        eip -= (unsigned long) &_stext;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: include/asm-i386/hw_irq.h:214:
+        eip -= (unsigned long) &_stext;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#253: FILE: include/asm-i386/hw_irq.h:215:
+        eip >>= prof_shift;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: include/asm-i386/hw_irq.h:215:
+        eip >>= prof_shift;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#254: FILE: include/asm-i386/hw_irq.h:216:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#255: FILE: include/asm-i386/hw_irq.h:217:
+         * Don't ignore out-of-bounds EIP values silently,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#256: FILE: include/asm-i386/hw_irq.h:218:
+         * put them into the last histogram slot, so if$

ERROR:CODE_INDENT: code indent should use tabs where possible
#257: FILE: include/asm-i386/hw_irq.h:219:
+         * present, they will show up as a sharp peak.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#258: FILE: include/asm-i386/hw_irq.h:220:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#259: FILE: include/asm-i386/hw_irq.h:221:
+        if (eip > prof_len-1)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: include/asm-i386/hw_irq.h:221:
+        if (eip > prof_len-1)$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#259: FILE: include/asm-i386/hw_irq.h:221:
+        if (eip > prof_len-1)
                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#260: FILE: include/asm-i386/hw_irq.h:222:
+                eip = prof_len-1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: include/asm-i386/hw_irq.h:222:
+                eip = prof_len-1;$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#260: FILE: include/asm-i386/hw_irq.h:222:
+                eip = prof_len-1;
                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#261: FILE: include/asm-i386/hw_irq.h:223:
+        atomic_inc((atomic_t *)&prof_buffer[eip]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: include/asm-i386/hw_irq.h:223:
+        atomic_inc((atomic_t *)&prof_buffer[eip]);$

WARNING:CONST_STRUCT: struct file_operations should normally be const
#281: FILE: include/linux/proc_fs.h:117:
+extern struct file_operations proc_mprof_operations;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#289: FILE: include/linux/profile.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#304: FILE: include/linux/profile.h:16:
+extern unsigned int * prof_buffer;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#308: FILE: include/linux/profile.h:20:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#310: FILE: include/linux/profile.h:22:
+struct module_profile
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#311: FILE: include/linux/profile.h:23:
+        char *proc_name;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: include/linux/profile.h:23:
+        char *proc_name;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#312: FILE: include/linux/profile.h:24:
+        struct list_head list;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#312: FILE: include/linux/profile.h:24:
+        struct list_head list;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#313: FILE: include/linux/profile.h:25:
+        unsigned long prof_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: include/linux/profile.h:25:
+        unsigned long prof_len;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#314: FILE: include/linux/profile.h:26:
+        unsigned long start_text;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: include/linux/profile.h:26:
+        unsigned long start_text;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#315: FILE: include/linux/profile.h:27:
+        unsigned long end_text;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: include/linux/profile.h:27:
+        unsigned long end_text;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#316: FILE: include/linux/profile.h:28:
+        unsigned int *prof_buffer;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: include/linux/profile.h:28:
+        unsigned int *prof_buffer;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#317: FILE: include/linux/profile.h:29:
+        struct module *module;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#317: FILE: include/linux/profile.h:29:
+        struct module *module;$

WARNING:TYPO_SPELLING: 'infomation' may be misspelled - perhaps 'information'?
#320: FILE: include/linux/profile.h:32:
+/* module profile root infomation */
                        ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#322: FILE: include/linux/profile.h:34:
+struct mprof_info
+{

ERROR:CODE_INDENT: code indent should use tabs where possible
#324: FILE: include/linux/profile.h:36:
+        struct list_head mprof_head;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: include/linux/profile.h:36:
+        struct list_head mprof_head;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#333: FILE: include/linux/profile.h:45:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#340: FILE: include/linux/profile.h:52:
+        struct list_head *tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: include/linux/profile.h:52:
+        struct list_head *tmp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#343: FILE: include/linux/profile.h:55:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#344: FILE: include/linux/profile.h:56:
+         * look for module_profile_buffer address with PC$

ERROR:CODE_INDENT: code indent should use tabs where possible
#345: FILE: include/linux/profile.h:57:
+         * into module_profile list chains$

ERROR:CODE_INDENT: code indent should use tabs where possible
#346: FILE: include/linux/profile.h:58:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#347: FILE: include/linux/profile.h:59:
+        list_for_each(tmp, &module_profile_info->mprof_head) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: include/linux/profile.h:59:
+        list_for_each(tmp, &module_profile_info->mprof_head) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#348: FILE: include/linux/profile.h:60:
+                mprof = list_entry(tmp, struct module_profile, list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: include/linux/profile.h:60:
+                mprof = list_entry(tmp, struct module_profile, list);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#350: FILE: include/linux/profile.h:62:
+                if(mprof->start_text <= pc && pc < mprof->end_text){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: include/linux/profile.h:62:
+                if(mprof->start_text <= pc && pc < mprof->end_text){$

ERROR:SPACING: space required before the open brace '{'
#350: FILE: include/linux/profile.h:62:
+                if(mprof->start_text <= pc && pc < mprof->end_text){

ERROR:SPACING: space required before the open parenthesis '('
#350: FILE: include/linux/profile.h:62:
+                if(mprof->start_text <= pc && pc < mprof->end_text){

ERROR:CODE_INDENT: code indent should use tabs where possible
#351: FILE: include/linux/profile.h:63:
+                        /* hit */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#352: FILE: include/linux/profile.h:64:
+                        pc -= mprof->start_text;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: include/linux/profile.h:64:
+                        pc -= mprof->start_text;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#353: FILE: include/linux/profile.h:65:
+                        *idx = (pc >> prof_shift);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: include/linux/profile.h:65:
+                        *idx = (pc >> prof_shift);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#354: FILE: include/linux/profile.h:66:
+                        return (mprof->prof_buffer);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: include/linux/profile.h:66:
+                        return (mprof->prof_buffer);$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#354: FILE: include/linux/profile.h:66:
+                        return (mprof->prof_buffer);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:CODE_INDENT: code indent should use tabs where possible
#355: FILE: include/linux/profile.h:67:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: include/linux/profile.h:67:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#356: FILE: include/linux/profile.h:68:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#356: FILE: include/linux/profile.h:68:
+        }$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#359: FILE: include/linux/profile.h:71:
+	*idx = prof_len-2;
 	               ^

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#360: FILE: include/linux/profile.h:72:
+	return (prof_buffer);

ERROR:CODE_INDENT: code indent should use tabs where possible
#366: FILE: include/linux/profile.h:78:
+        unsigned int *targ_prof_buffer = prof_buffer;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: include/linux/profile.h:78:
+        unsigned int *targ_prof_buffer = prof_buffer;$

ERROR:SPACING: space required before the open brace '{'
#373: FILE: include/linux/profile.h:85:
+	if(pc < (unsigned long)&_stext){

ERROR:SPACING: space required before the open parenthesis '('
#373: FILE: include/linux/profile.h:85:
+	if(pc < (unsigned long)&_stext){

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#375: FILE: include/linux/profile.h:87:
+		*idx = prof_len-1;
 		               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#376: FILE: include/linux/profile.h:88:
+        }else if(pc < (unsigned long)&_etext){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: include/linux/profile.h:88:
+        }else if(pc < (unsigned long)&_etext){$

ERROR:SPACING: space required before the open brace '{'
#376: FILE: include/linux/profile.h:88:
+        }else if(pc < (unsigned long)&_etext){

ERROR:SPACING: space required after that close brace '}'
#376: FILE: include/linux/profile.h:88:
+        }else if(pc < (unsigned long)&_etext){

ERROR:SPACING: space required before the open parenthesis '('
#376: FILE: include/linux/profile.h:88:
+        }else if(pc < (unsigned long)&_etext){

ERROR:CODE_INDENT: code indent should use tabs where possible
#377: FILE: include/linux/profile.h:89:
+                /* kernel profile */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#378: FILE: include/linux/profile.h:90:
+                pc -= (unsigned long) &_stext;$

CHECK:SPACING: No space is necessary after a cast
#378: FILE: include/linux/profile.h:90:
+                pc -= (unsigned long) &_stext;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: include/linux/profile.h:90:
+                pc -= (unsigned long) &_stext;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#379: FILE: include/linux/profile.h:91:
+                pc >>= prof_shift;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: include/linux/profile.h:91:
+                pc >>= prof_shift;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#380: FILE: include/linux/profile.h:92:
+                *idx = pc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: include/linux/profile.h:92:
+                *idx = pc;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#381: FILE: include/linux/profile.h:93:
+        }else{$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: include/linux/profile.h:93:
+        }else{$

ERROR:SPACING: space required before the open brace '{'
#381: FILE: include/linux/profile.h:93:
+        }else{

ERROR:SPACING: space required after that close brace '}'
#381: FILE: include/linux/profile.h:93:
+        }else{

ERROR:CODE_INDENT: code indent should use tabs where possible
#382: FILE: include/linux/profile.h:94:
+                targ_prof_buffer = srch_module_prof_buffer(pc,idx);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: include/linux/profile.h:94:
+                targ_prof_buffer = srch_module_prof_buffer(pc,idx);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#382: FILE: include/linux/profile.h:94:
+                targ_prof_buffer = srch_module_prof_buffer(pc,idx);
                                                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#383: FILE: include/linux/profile.h:95:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: include/linux/profile.h:95:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#384: FILE: include/linux/profile.h:96:
+        return targ_prof_buffer;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#384: FILE: include/linux/profile.h:96:
+        return targ_prof_buffer;$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#418: FILE: kernel/module.c:536:
+		printk(KERN_WARNING "init_module: creation of module "

WARNING:SPLIT_STRING: quoted string split across lines
#419: FILE: kernel/module.c:537:
+		printk(KERN_WARNING "init_module: creation of module "
+			"profiling buffer failed for module(%s).\n", mod->name);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#450: FILE: kernel/profile.c:1:
+#include <linux/config.h>

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#453: FILE: kernel/profile.c:4:
+#include <asm/uaccess.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#459: FILE: kernel/profile.c:10:
+
+

WARNING:INDENTED_LABEL: labels should not be indented
#463: FILE: kernel/profile.c:14:
+	rwlock:	RW_LOCK_UNLOCKED,

ERROR:CODE_INDENT: code indent should use tabs where possible
#464: FILE: kernel/profile.c:15:
+        mprof_head: LIST_HEAD_INIT(mprof_info.mprof_head),$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#464: FILE: kernel/profile.c:15:
+        mprof_head: LIST_HEAD_INIT(mprof_info.mprof_head),
                   ^

WARNING:INDENTED_LABEL: labels should not be indented
#464: FILE: kernel/profile.c:15:
+        mprof_head: LIST_HEAD_INIT(mprof_info.mprof_head),

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#466: FILE: kernel/profile.c:17:
+};
+struct mprof_info *module_profile_info = &mprof_info;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#468: FILE: kernel/profile.c:19:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#477: FILE: kernel/profile.c:28:
+        int l;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#477: FILE: kernel/profile.c:28:
+        int l;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#479: FILE: kernel/profile.c:30:
+        /* construct module-profile-name */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#480: FILE: kernel/profile.c:31:
+        l = strlen(mod->name)+  /* module name */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#480: FILE: kernel/profile.c:31:
+        l = strlen(mod->name)+  /* module name */$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxW)
#480: FILE: kernel/profile.c:31:
+        l = strlen(mod->name)+  /* module name */
                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#481: FILE: kernel/profile.c:32:
+            8;                  /* "_profile" */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#481: FILE: kernel/profile.c:32:
+            8;                  /* "_profile" */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#483: FILE: kernel/profile.c:34:
+        if (proc_name) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#483: FILE: kernel/profile.c:34:
+        if (proc_name) {$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#483: FILE: kernel/profile.c:34:
+        if (proc_name) {
+        	snprintf(proc_name, l+1, "%s_profile", mod->name);
+        }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#484: FILE: kernel/profile.c:35:
+        ^Isnprintf(proc_name, l+1, "%s_profile", mod->name);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#484: FILE: kernel/profile.c:35:
+        ^Isnprintf(proc_name, l+1, "%s_profile", mod->name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#484: FILE: kernel/profile.c:35:
+        ^Isnprintf(proc_name, l+1, "%s_profile", mod->name);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#484: FILE: kernel/profile.c:35:
+        	snprintf(proc_name, l+1, "%s_profile", mod->name);
         	                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#485: FILE: kernel/profile.c:36:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#485: FILE: kernel/profile.c:36:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#494: FILE: kernel/profile.c:45:
+        struct module_symbol *sym;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#494: FILE: kernel/profile.c:45:
+        struct module_symbol *sym;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#495: FILE: kernel/profile.c:46:
+        char *name_prefix;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#495: FILE: kernel/profile.c:46:
+        char *name_prefix;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#496: FILE: kernel/profile.c:47:
+        int i, l;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#496: FILE: kernel/profile.c:47:
+        int i, l;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#497: FILE: kernel/profile.c:48:
+        struct list_head *mprof_head, *tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#497: FILE: kernel/profile.c:48:
+        struct list_head *mprof_head, *tmp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#498: FILE: kernel/profile.c:49:
+        struct module_profile *new_mprof, *mprof;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#498: FILE: kernel/profile.c:49:
+        struct module_profile *new_mprof, *mprof;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#499: FILE: kernel/profile.c:50:
+        struct proc_dir_entry *entry;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#499: FILE: kernel/profile.c:50:
+        struct proc_dir_entry *entry;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#500: FILE: kernel/profile.c:51:
+        long error = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#500: FILE: kernel/profile.c:51:
+        long error = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#501: FILE: kernel/profile.c:52:
+        unsigned long flags, buffer_size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#501: FILE: kernel/profile.c:52:
+        unsigned long flags, buffer_size;$

WARNING:STATIC_CONST_CHAR_ARRAY: const array should probably be static const
#502: FILE: kernel/profile.c:53:
+	const char symprefix[] = "__insmod_";

ERROR:CODE_INDENT: code indent should use tabs where possible
#504: FILE: kernel/profile.c:55:
+        if (proc_root_mprof == NULL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#504: FILE: kernel/profile.c:55:
+        if (proc_root_mprof == NULL) {$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!proc_root_mprof"
#504: FILE: kernel/profile.c:55:
+        if (proc_root_mprof == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#506: FILE: kernel/profile.c:57:
+                goto err0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#506: FILE: kernel/profile.c:57:
+                goto err0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#509: FILE: kernel/profile.c:60:
+        /* get memory for struct module_profile */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#510: FILE: kernel/profile.c:61:
+        new_mprof = kmalloc(sizeof(struct module_profile), GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#510: FILE: kernel/profile.c:61:
+        new_mprof = kmalloc(sizeof(struct module_profile), GFP_KERNEL);$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*new_mprof)...) over kmalloc(sizeof(struct module_profile)...)
#510: FILE: kernel/profile.c:61:
+        new_mprof = kmalloc(sizeof(struct module_profile), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:CODE_INDENT: code indent should use tabs where possible
#511: FILE: kernel/profile.c:62:
+        if (new_mprof == NULL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#511: FILE: kernel/profile.c:62:
+        if (new_mprof == NULL) {$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new_mprof"
#511: FILE: kernel/profile.c:62:
+        if (new_mprof == NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#512: FILE: kernel/profile.c:63:
+                error = -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#512: FILE: kernel/profile.c:63:
+                error = -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#513: FILE: kernel/profile.c:64:
+                goto err0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#513: FILE: kernel/profile.c:64:
+                goto err0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#514: FILE: kernel/profile.c:65:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#514: FILE: kernel/profile.c:65:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#515: FILE: kernel/profile.c:66:
+        memset(new_mprof, 0, sizeof(*new_mprof));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#515: FILE: kernel/profile.c:66:
+        memset(new_mprof, 0, sizeof(*new_mprof));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#517: FILE: kernel/profile.c:68:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#518: FILE: kernel/profile.c:69:
+         * research .text start address and .text size in ksym,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#519: FILE: kernel/profile.c:70:
+         * set module profiling information for this module in module_profile.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#520: FILE: kernel/profile.c:71:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#521: FILE: kernel/profile.c:72:
+        l = sizeof(symprefix) -1 +  /* "__insmod_" (have NULL) */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#521: FILE: kernel/profile.c:72:
+        l = sizeof(symprefix) -1 +  /* "__insmod_" (have NULL) */$

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#521: FILE: kernel/profile.c:72:
+        l = sizeof(symprefix) -1 +  /* "__insmod_" (have NULL) */
                               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#522: FILE: kernel/profile.c:73:
+            strlen(mod->name)+  /* module name */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#522: FILE: kernel/profile.c:73:
+            strlen(mod->name)+  /* module name */$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxW)
#522: FILE: kernel/profile.c:73:
+            strlen(mod->name)+  /* module name */
                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#523: FILE: kernel/profile.c:74:
+            2+                  /* "_S" */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#523: FILE: kernel/profile.c:74:
+            2+                  /* "_S" */$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxW)
#523: FILE: kernel/profile.c:74:
+            2+                  /* "_S" */
              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#524: FILE: kernel/profile.c:75:
+            5+                  /* section name".text" */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#524: FILE: kernel/profile.c:75:
+            5+                  /* section name".text" */$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxW)
#524: FILE: kernel/profile.c:75:
+            5+                  /* section name".text" */
              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#525: FILE: kernel/profile.c:76:
+            2;                  /* "_L" */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#525: FILE: kernel/profile.c:76:
+            2;                  /* "_L" */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#526: FILE: kernel/profile.c:77:
+        name_prefix = kmalloc(l + 1, GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#526: FILE: kernel/profile.c:77:
+        name_prefix = kmalloc(l + 1, GFP_KERNEL);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#527: FILE: kernel/profile.c:78:
+        if (name_prefix == NULL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#527: FILE: kernel/profile.c:78:
+        if (name_prefix == NULL) {$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!name_prefix"
#527: FILE: kernel/profile.c:78:
+        if (name_prefix == NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#528: FILE: kernel/profile.c:79:
+                error = -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#528: FILE: kernel/profile.c:79:
+                error = -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#529: FILE: kernel/profile.c:80:
+                goto err1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#529: FILE: kernel/profile.c:80:
+                goto err1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#530: FILE: kernel/profile.c:81:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#530: FILE: kernel/profile.c:81:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#531: FILE: kernel/profile.c:82:
+        snprintf(name_prefix, l+1, "%s%s_S.text_L", symprefix, mod->name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#531: FILE: kernel/profile.c:82:
+        snprintf(name_prefix, l+1, "%s%s_S.text_L", symprefix, mod->name);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#531: FILE: kernel/profile.c:82:
+        snprintf(name_prefix, l+1, "%s%s_S.text_L", symprefix, mod->name);
                                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#533: FILE: kernel/profile.c:84:
+        for (i = mod->nsyms, sym = mod->syms; i > 0; --i, ++sym) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#533: FILE: kernel/profile.c:84:
+        for (i = mod->nsyms, sym = mod->syms; i > 0; --i, ++sym) {$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#534: FILE: kernel/profile.c:85:
+        for (i = mod->nsyms, sym = mod->syms; i > 0; --i, ++sym) {
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#535: FILE: kernel/profile.c:86:
+                if (strncmp(sym->name, name_prefix, l) == 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#535: FILE: kernel/profile.c:86:
+                if (strncmp(sym->name, name_prefix, l) == 0) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#536: FILE: kernel/profile.c:87:
+                        unsigned long text_size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#536: FILE: kernel/profile.c:87:
+                        unsigned long text_size;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#538: FILE: kernel/profile.c:89:
+                        text_size = simple_strtoul(sym->name + l, NULL, 10);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#538: FILE: kernel/profile.c:89:
+                        text_size = simple_strtoul(sym->name + l, NULL, 10);$

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#538: FILE: kernel/profile.c:89:
+                        text_size = simple_strtoul(sym->name + l, NULL, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

ERROR:CODE_INDENT: code indent should use tabs where possible
#540: FILE: kernel/profile.c:91:
+                        /* check .text size in ksym */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#541: FILE: kernel/profile.c:92:
+                        if (text_size > mod->size) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#541: FILE: kernel/profile.c:92:
+                        if (text_size > mod->size) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#542: FILE: kernel/profile.c:93:
+                                /* bug? */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#543: FILE: kernel/profile.c:94:
+                                printk(KERN_ERR$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#543: FILE: kernel/profile.c:94:
+                                printk(KERN_ERR$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#543: FILE: kernel/profile.c:94:
+                                printk(KERN_ERR

ERROR:CODE_INDENT: code indent should use tabs where possible
#545: FILE: kernel/profile.c:96:
+                                        name_prefix);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#545: FILE: kernel/profile.c:96:
+                                        name_prefix);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#546: FILE: kernel/profile.c:97:
+        ^I^I^Ikfree(name_prefix); /* temporary field */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#546: FILE: kernel/profile.c:97:
+        ^I^I^Ikfree(name_prefix); /* temporary field */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#546: FILE: kernel/profile.c:97:
+        ^I^I^Ikfree(name_prefix); /* temporary field */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#547: FILE: kernel/profile.c:98:
+                                error = -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#547: FILE: kernel/profile.c:98:
+                                error = -EINVAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#548: FILE: kernel/profile.c:99:
+                                goto err1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#548: FILE: kernel/profile.c:99:
+                                goto err1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#549: FILE: kernel/profile.c:100:
+                        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#549: FILE: kernel/profile.c:100:
+                        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#551: FILE: kernel/profile.c:102:
+                        /* set .text start address, .text size */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#552: FILE: kernel/profile.c:103:
+                        new_mprof->start_text = sym->value;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#552: FILE: kernel/profile.c:103:
+                        new_mprof->start_text = sym->value;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#553: FILE: kernel/profile.c:104:
+                        new_mprof->end_text = sym->value + text_size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#553: FILE: kernel/profile.c:104:
+                        new_mprof->end_text = sym->value + text_size;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#555: FILE: kernel/profile.c:106:
+                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#555: FILE: kernel/profile.c:106:
+                        break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#556: FILE: kernel/profile.c:107:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#556: FILE: kernel/profile.c:107:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#557: FILE: kernel/profile.c:108:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#557: FILE: kernel/profile.c:108:
+        }$

WARNING:TYPO_SPELLING: 'registed' may be misspelled - perhaps 'registered'?
#559: FILE: kernel/profile.c:110:
+        /* if symbol "%s%s_S.text_L%d" is not registed in ksym,
                                               ^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#559: FILE: kernel/profile.c:110:
+        /* if symbol "%s%s_S.text_L%d" is not registed in ksym,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#560: FILE: kernel/profile.c:111:
+           look on whole module as .text */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#560: FILE: kernel/profile.c:111:
+        /* if symbol "%s%s_S.text_L%d" is not registed in ksym,
+           look on whole module as .text */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#560: FILE: kernel/profile.c:111:
+           look on whole module as .text */

ERROR:CODE_INDENT: code indent should use tabs where possible
#562: FILE: kernel/profile.c:113:
+                new_mprof->start_text = *((unsigned long *)&mod);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#562: FILE: kernel/profile.c:113:
+                new_mprof->start_text = *((unsigned long *)&mod);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#563: FILE: kernel/profile.c:114:
+                new_mprof->end_text = *((unsigned long *)&mod) + $

ERROR:CODE_INDENT: code indent should use tabs where possible
#563: FILE: kernel/profile.c:114:
+                new_mprof->end_text = *((unsigned long *)&mod) + $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#563: FILE: kernel/profile.c:114:
+                new_mprof->end_text = *((unsigned long *)&mod) + $

ERROR:CODE_INDENT: code indent should use tabs where possible
#565: FILE: kernel/profile.c:116:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#565: FILE: kernel/profile.c:116:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#566: FILE: kernel/profile.c:117:
+        /* determine module profile buffer size */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#567: FILE: kernel/profile.c:118:
+        new_mprof->prof_len =$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#567: FILE: kernel/profile.c:118:
+        new_mprof->prof_len =$

ERROR:CODE_INDENT: code indent should use tabs where possible
#568: FILE: kernel/profile.c:119:
+                ((new_mprof->end_text - new_mprof->start_text) >> prof_shift);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#568: FILE: kernel/profile.c:119:
+                ((new_mprof->end_text - new_mprof->start_text) >> prof_shift);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#569: FILE: kernel/profile.c:120:
+        new_mprof->module = mod;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#569: FILE: kernel/profile.c:120:
+        new_mprof->module = mod;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#570: FILE: kernel/profile.c:121:
+        kfree(name_prefix); /* temporary field */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#570: FILE: kernel/profile.c:121:
+        kfree(name_prefix); /* temporary field */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#573: FILE: kernel/profile.c:124:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#574: FILE: kernel/profile.c:125:
+         * alloc memory for module_profiling buffer$

ERROR:CODE_INDENT: code indent should use tabs where possible
#575: FILE: kernel/profile.c:126:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#576: FILE: kernel/profile.c:127:
+        new_mprof->prof_buffer = vmalloc(buffer_size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#576: FILE: kernel/profile.c:127:
+        new_mprof->prof_buffer = vmalloc(buffer_size);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#577: FILE: kernel/profile.c:128:
+        if (new_mprof->prof_buffer == NULL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#577: FILE: kernel/profile.c:128:
+        if (new_mprof->prof_buffer == NULL) {$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new_mprof->prof_buffer"
#577: FILE: kernel/profile.c:128:
+        if (new_mprof->prof_buffer == NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#578: FILE: kernel/profile.c:129:
+                error = -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#578: FILE: kernel/profile.c:129:
+                error = -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#579: FILE: kernel/profile.c:130:
+                goto err1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#579: FILE: kernel/profile.c:130:
+                goto err1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#580: FILE: kernel/profile.c:131:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#580: FILE: kernel/profile.c:131:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#581: FILE: kernel/profile.c:132:
+        memset(new_mprof->prof_buffer, 0, buffer_size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#581: FILE: kernel/profile.c:132:
+        memset(new_mprof->prof_buffer, 0, buffer_size);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#583: FILE: kernel/profile.c:134:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#584: FILE: kernel/profile.c:135:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#585: FILE: kernel/profile.c:136:
+         * create /proc/mprof/$(mod->name)_profile$

ERROR:CODE_INDENT: code indent should use tabs where possible
#586: FILE: kernel/profile.c:137:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#587: FILE: kernel/profile.c:138:
+        new_mprof->proc_name = get_profile_name(mod);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#587: FILE: kernel/profile.c:138:
+        new_mprof->proc_name = get_profile_name(mod);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#588: FILE: kernel/profile.c:139:
+        if (new_mprof->proc_name == NULL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#588: FILE: kernel/profile.c:139:
+        if (new_mprof->proc_name == NULL) {$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new_mprof->proc_name"
#588: FILE: kernel/profile.c:139:
+        if (new_mprof->proc_name == NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#589: FILE: kernel/profile.c:140:
+                error = -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#589: FILE: kernel/profile.c:140:
+                error = -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#590: FILE: kernel/profile.c:141:
+                goto err2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#590: FILE: kernel/profile.c:141:
+                goto err2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#591: FILE: kernel/profile.c:142:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#591: FILE: kernel/profile.c:142:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#593: FILE: kernel/profile.c:144:
+        /* create proc-entry /proc/mprof/$(mod->name)_profile */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#594: FILE: kernel/profile.c:145:
+        entry = create_proc_entry(new_mprof->proc_name, S_IWUSR|S_IRUGO,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#594: FILE: kernel/profile.c:145:
+        entry = create_proc_entry(new_mprof->proc_name, S_IWUSR|S_IRUGO,$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#594: FILE: kernel/profile.c:145:
+        entry = create_proc_entry(new_mprof->proc_name, S_IWUSR|S_IRUGO,
                                                                ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR|S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#594: FILE: kernel/profile.c:145:
+        entry = create_proc_entry(new_mprof->proc_name, S_IWUSR|S_IRUGO,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:CODE_INDENT: code indent should use tabs where possible
#596: FILE: kernel/profile.c:147:
+        if (entry) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#596: FILE: kernel/profile.c:147:
+        if (entry) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#598: FILE: kernel/profile.c:149:
+                entry->size = buffer_size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#598: FILE: kernel/profile.c:149:
+                entry->size = buffer_size;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#599: FILE: kernel/profile.c:150:
+        } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#599: FILE: kernel/profile.c:150:
+        } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#600: FILE: kernel/profile.c:151:
+                error = -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#600: FILE: kernel/profile.c:151:
+                error = -ENOMEM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#601: FILE: kernel/profile.c:152:
+                /* in other cause, incorrect parameter */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#602: FILE: kernel/profile.c:153:
+                goto err3;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#602: FILE: kernel/profile.c:153:
+                goto err3;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#603: FILE: kernel/profile.c:154:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#603: FILE: kernel/profile.c:154:
+        }$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#605: FILE: kernel/profile.c:156:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#606: FILE: kernel/profile.c:157:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#607: FILE: kernel/profile.c:158:
+         * insert new module_profile into module_profile chains$

ERROR:CODE_INDENT: code indent should use tabs where possible
#608: FILE: kernel/profile.c:159:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#610: FILE: kernel/profile.c:161:
+        write_lock(&module_profile_info->rwlock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#610: FILE: kernel/profile.c:161:
+        write_lock(&module_profile_info->rwlock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#612: FILE: kernel/profile.c:163:
+        list_for_each(tmp, mprof_head) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#612: FILE: kernel/profile.c:163:
+        list_for_each(tmp, mprof_head) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#613: FILE: kernel/profile.c:164:
+                mprof = list_entry(tmp, struct module_profile, list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#613: FILE: kernel/profile.c:164:
+                mprof = list_entry(tmp, struct module_profile, list);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#615: FILE: kernel/profile.c:166:
+                if (new_mprof->end_text < mprof->end_text) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#615: FILE: kernel/profile.c:166:
+                if (new_mprof->end_text < mprof->end_text) {$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#616: FILE: kernel/profile.c:167:
+                if (new_mprof->end_text < mprof->end_text) {
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#617: FILE: kernel/profile.c:168:
+                        /* insert previous module_profile */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#618: FILE: kernel/profile.c:169:
+        ^I^Ispin_lock_irqsave(&module_profile_lock, flags);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#618: FILE: kernel/profile.c:169:
+        ^I^Ispin_lock_irqsave(&module_profile_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#618: FILE: kernel/profile.c:169:
+        ^I^Ispin_lock_irqsave(&module_profile_lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#620: FILE: kernel/profile.c:171:
+        ^I^Ispin_unlock_irqrestore(&module_profile_lock, flags);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#620: FILE: kernel/profile.c:171:
+        ^I^Ispin_unlock_irqrestore(&module_profile_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#620: FILE: kernel/profile.c:171:
+        ^I^Ispin_unlock_irqrestore(&module_profile_lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#621: FILE: kernel/profile.c:172:
+                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#621: FILE: kernel/profile.c:172:
+                        break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#622: FILE: kernel/profile.c:173:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#622: FILE: kernel/profile.c:173:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#623: FILE: kernel/profile.c:174:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#623: FILE: kernel/profile.c:174:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#624: FILE: kernel/profile.c:175:
+        if (tmp == mprof_head) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#624: FILE: kernel/profile.c:175:
+        if (tmp == mprof_head) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#625: FILE: kernel/profile.c:176:
+                /* if not hit, place new_prof at tail of chain */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#626: FILE: kernel/profile.c:177:
+       ^I^Ispin_lock_irqsave(&module_profile_lock, flags);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#626: FILE: kernel/profile.c:177:
+       ^I^Ispin_lock_irqsave(&module_profile_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#626: FILE: kernel/profile.c:177:
+       ^I^Ispin_lock_irqsave(&module_profile_lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#628: FILE: kernel/profile.c:179:
+        ^Ispin_unlock_irqrestore(&module_profile_lock, flags);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#628: FILE: kernel/profile.c:179:
+        ^Ispin_unlock_irqrestore(&module_profile_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#628: FILE: kernel/profile.c:179:
+        ^Ispin_unlock_irqrestore(&module_profile_lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#629: FILE: kernel/profile.c:180:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#629: FILE: kernel/profile.c:180:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#631: FILE: kernel/profile.c:182:
+        write_unlock(&module_profile_info->rwlock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#631: FILE: kernel/profile.c:182:
+        write_unlock(&module_profile_info->rwlock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#633: FILE: kernel/profile.c:184:
+        /* normal end */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#634: FILE: kernel/profile.c:185:
+        goto err0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#634: FILE: kernel/profile.c:185:
+        goto err0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#637: FILE: kernel/profile.c:188:
+        kfree(new_mprof->proc_name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#637: FILE: kernel/profile.c:188:
+        kfree(new_mprof->proc_name);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#639: FILE: kernel/profile.c:190:
+        vfree(new_mprof->prof_buffer);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#639: FILE: kernel/profile.c:190:
+        vfree(new_mprof->prof_buffer);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#641: FILE: kernel/profile.c:192:
+        kfree(new_mprof);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#641: FILE: kernel/profile.c:192:
+        kfree(new_mprof);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#643: FILE: kernel/profile.c:194:
+        return error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#643: FILE: kernel/profile.c:194:
+        return error;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#651: FILE: kernel/profile.c:202:
+        struct list_head *mprof_head, *tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#651: FILE: kernel/profile.c:202:
+        struct list_head *mprof_head, *tmp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#652: FILE: kernel/profile.c:203:
+        struct module_profile *mprof = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#652: FILE: kernel/profile.c:203:
+        struct module_profile *mprof = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#653: FILE: kernel/profile.c:204:
+        unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#653: FILE: kernel/profile.c:204:
+        unsigned long flags;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#656: FILE: kernel/profile.c:207:
+        if (proc_root_mprof == NULL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#656: FILE: kernel/profile.c:207:
+        if (proc_root_mprof == NULL) {$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!proc_root_mprof"
#656: FILE: kernel/profile.c:207:
+        if (proc_root_mprof == NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#665: FILE: kernel/profile.c:216:
+        read_lock(&module_profile_info->rwlock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#665: FILE: kernel/profile.c:216:
+        read_lock(&module_profile_info->rwlock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#667: FILE: kernel/profile.c:218:
+        list_for_each(tmp, mprof_head) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#667: FILE: kernel/profile.c:218:
+        list_for_each(tmp, mprof_head) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#668: FILE: kernel/profile.c:219:
+                mprof = list_entry(tmp, struct module_profile, list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#668: FILE: kernel/profile.c:219:
+                mprof = list_entry(tmp, struct module_profile, list);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#669: FILE: kernel/profile.c:220:
+                if (strncmp(mprof->proc_name, mod->name, name_len) == 0 &&$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#669: FILE: kernel/profile.c:220:
+                if (strncmp(mprof->proc_name, mod->name, name_len) == 0 &&$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#671: FILE: kernel/profile.c:222:
+		    strcmp(mprof->proc_name + name_len, "_profile") == 0)  {
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#677: FILE: kernel/profile.c:228:
+        read_unlock(&module_profile_info->rwlock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#677: FILE: kernel/profile.c:228:
+        read_unlock(&module_profile_info->rwlock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#680: FILE: kernel/profile.c:231:
+        if (tmp == mprof_head) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#680: FILE: kernel/profile.c:231:
+        if (tmp == mprof_head) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#681: FILE: kernel/profile.c:232:
+                printk(KERN_WARNING "delete_module_profile: "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#681: FILE: kernel/profile.c:232:
+                printk(KERN_WARNING "delete_module_profile: "$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#681: FILE: kernel/profile.c:232:
+                printk(KERN_WARNING "delete_module_profile: "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'delete_module_profile', this function's name, in a string
#681: FILE: kernel/profile.c:232:
+                printk(KERN_WARNING "delete_module_profile: "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:CODE_INDENT: code indent should use tabs where possible
#682: FILE: kernel/profile.c:233:
+                        "no profiling buffer for module(%s).\n", mod->name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#682: FILE: kernel/profile.c:233:
+                        "no profiling buffer for module(%s).\n", mod->name);$

WARNING:SPLIT_STRING: quoted string split across lines
#682: FILE: kernel/profile.c:233:
+                printk(KERN_WARNING "delete_module_profile: "
+                        "no profiling buffer for module(%s).\n", mod->name);

ERROR:CODE_INDENT: code indent should use tabs where possible
#686: FILE: kernel/profile.c:237:
+        /* remove proc-file */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#687: FILE: kernel/profile.c:238:
+        remove_proc_entry(mprof->proc_name, proc_root_mprof);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#687: FILE: kernel/profile.c:238:
+        remove_proc_entry(mprof->proc_name, proc_root_mprof);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#689: FILE: kernel/profile.c:240:
+        /* unchain module_profile */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#690: FILE: kernel/profile.c:241:
+        write_lock(&module_profile_info->rwlock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#690: FILE: kernel/profile.c:241:
+        write_lock(&module_profile_info->rwlock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#691: FILE: kernel/profile.c:242:
+        spin_lock_irqsave(&module_profile_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#691: FILE: kernel/profile.c:242:
+        spin_lock_irqsave(&module_profile_lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#695: FILE: kernel/profile.c:246:
+        spin_unlock_irqrestore(&module_profile_lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#695: FILE: kernel/profile.c:246:
+        spin_unlock_irqrestore(&module_profile_lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#696: FILE: kernel/profile.c:247:
+        write_unlock(&module_profile_info->rwlock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#696: FILE: kernel/profile.c:247:
+        write_unlock(&module_profile_info->rwlock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#698: FILE: kernel/profile.c:249:
+        /* free memory */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#699: FILE: kernel/profile.c:250:
+        kfree(mprof->proc_name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#699: FILE: kernel/profile.c:250:
+        kfree(mprof->proc_name);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#700: FILE: kernel/profile.c:251:
+        vfree(mprof->prof_buffer);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#700: FILE: kernel/profile.c:251:
+        vfree(mprof->prof_buffer);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#701: FILE: kernel/profile.c:252:
+        kfree(mprof);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#701: FILE: kernel/profile.c:252:
+        kfree(mprof);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#703: FILE: kernel/profile.c:254:
+        return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#703: FILE: kernel/profile.c:254:
+        return;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#712: FILE: kernel/profile.c:263:
+        struct list_head *mprof_head, *tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#712: FILE: kernel/profile.c:263:
+        struct list_head *mprof_head, *tmp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#713: FILE: kernel/profile.c:264:
+        struct module_profile *mprof = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#713: FILE: kernel/profile.c:264:
+        struct module_profile *mprof = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#715: FILE: kernel/profile.c:266:
+        mprof_head = &module_profile_info->mprof_head;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#715: FILE: kernel/profile.c:266:
+        mprof_head = &module_profile_info->mprof_head;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#716: FILE: kernel/profile.c:267:
+        list_for_each(tmp, mprof_head) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#716: FILE: kernel/profile.c:267:
+        list_for_each(tmp, mprof_head) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#717: FILE: kernel/profile.c:268:
+                mprof = list_entry(tmp, struct module_profile, list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#717: FILE: kernel/profile.c:268:
+                mprof = list_entry(tmp, struct module_profile, list);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#719: FILE: kernel/profile.c:270:
+                if(strcmp(mprof->proc_name,profile_name) == 0){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#719: FILE: kernel/profile.c:270:
+                if(strcmp(mprof->proc_name,profile_name) == 0){$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#719: FILE: kernel/profile.c:270:
+                if(strcmp(mprof->proc_name,profile_name) == 0){
                                           ^

ERROR:SPACING: space required before the open brace '{'
#719: FILE: kernel/profile.c:270:
+                if(strcmp(mprof->proc_name,profile_name) == 0){

ERROR:SPACING: space required before the open parenthesis '('
#719: FILE: kernel/profile.c:270:
+                if(strcmp(mprof->proc_name,profile_name) == 0){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#719: FILE: kernel/profile.c:270:
+                if(strcmp(mprof->proc_name,profile_name) == 0){
+                        break;
+                }

ERROR:CODE_INDENT: code indent should use tabs where possible
#720: FILE: kernel/profile.c:271:
+                        break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#720: FILE: kernel/profile.c:271:
+                        break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#721: FILE: kernel/profile.c:272:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#721: FILE: kernel/profile.c:272:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#722: FILE: kernel/profile.c:273:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#722: FILE: kernel/profile.c:273:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#723: FILE: kernel/profile.c:274:
+        if (tmp == mprof_head) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#723: FILE: kernel/profile.c:274:
+        if (tmp == mprof_head) {$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#723: FILE: kernel/profile.c:274:
+        if (tmp == mprof_head) {
+                mprof = NULL;
+        }

ERROR:CODE_INDENT: code indent should use tabs where possible
#724: FILE: kernel/profile.c:275:
+                mprof = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#724: FILE: kernel/profile.c:275:
+                mprof = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#725: FILE: kernel/profile.c:276:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#725: FILE: kernel/profile.c:276:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#726: FILE: kernel/profile.c:277:
+        return mprof;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#726: FILE: kernel/profile.c:277:
+        return mprof;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#736: FILE: kernel/profile.c:287:
+                            size_t count, loff_t *ppos)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#736: FILE: kernel/profile.c:287:
+static ssize_t read_module_profile(struct file *file, char *buf,
+                            size_t count, loff_t *ppos)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#736: FILE: kernel/profile.c:287:
+                            size_t count, loff_t *ppos)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#738: FILE: kernel/profile.c:289:
+        unsigned long p = *ppos;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#738: FILE: kernel/profile.c:289:
+        unsigned long p = *ppos;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#739: FILE: kernel/profile.c:290:
+        struct module_profile *mprof;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#739: FILE: kernel/profile.c:290:
+        struct module_profile *mprof;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#741: FILE: kernel/profile.c:292:
+        read_lock(&module_profile_info->rwlock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#741: FILE: kernel/profile.c:292:
+        read_lock(&module_profile_info->rwlock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#743: FILE: kernel/profile.c:294:
+        /* search module profiling buffer */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#744: FILE: kernel/profile.c:295:
+        mprof = search_module_profile((char *)file->f_dentry->d_name.name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#744: FILE: kernel/profile.c:295:
+        mprof = search_module_profile((char *)file->f_dentry->d_name.name);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#745: FILE: kernel/profile.c:296:
+        if (!mprof){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#745: FILE: kernel/profile.c:296:
+        if (!mprof){$

ERROR:SPACING: space required before the open brace '{'
#745: FILE: kernel/profile.c:296:
+        if (!mprof){

ERROR:CODE_INDENT: code indent should use tabs where possible
#746: FILE: kernel/profile.c:297:
+                /* module profile is already removed ? */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#747: FILE: kernel/profile.c:298:
+                read_unlock(&module_profile_info->rwlock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#747: FILE: kernel/profile.c:298:
+                read_unlock(&module_profile_info->rwlock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#748: FILE: kernel/profile.c:299:
+                return -ENXIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#748: FILE: kernel/profile.c:299:
+                return -ENXIO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#749: FILE: kernel/profile.c:300:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#749: FILE: kernel/profile.c:300:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#751: FILE: kernel/profile.c:302:
+        /* check file offset */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#752: FILE: kernel/profile.c:303:
+        if (p >= (mprof->prof_len * sizeof(unsigned int))){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#752: FILE: kernel/profile.c:303:
+        if (p >= (mprof->prof_len * sizeof(unsigned int))){$

ERROR:SPACING: space required before the open brace '{'
#752: FILE: kernel/profile.c:303:
+        if (p >= (mprof->prof_len * sizeof(unsigned int))){

ERROR:CODE_INDENT: code indent should use tabs where possible
#753: FILE: kernel/profile.c:304:
+                read_unlock(&module_profile_info->rwlock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#753: FILE: kernel/profile.c:304:
+                read_unlock(&module_profile_info->rwlock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#754: FILE: kernel/profile.c:305:
+                return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#754: FILE: kernel/profile.c:305:
+                return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#755: FILE: kernel/profile.c:306:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#755: FILE: kernel/profile.c:306:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#757: FILE: kernel/profile.c:308:
+        /* copy profiling contents */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#758: FILE: kernel/profile.c:309:
+        if (count > (mprof->prof_len * sizeof(unsigned int) - p))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#758: FILE: kernel/profile.c:309:
+        if (count > (mprof->prof_len * sizeof(unsigned int) - p))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#759: FILE: kernel/profile.c:310:
+                count = mprof->prof_len * sizeof(unsigned int) - p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#759: FILE: kernel/profile.c:310:
+                count = mprof->prof_len * sizeof(unsigned int) - p;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#761: FILE: kernel/profile.c:312:
+        copy_to_user(buf, (char *)mprof->prof_buffer + p, count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#761: FILE: kernel/profile.c:312:
+        copy_to_user(buf, (char *)mprof->prof_buffer + p, count);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#763: FILE: kernel/profile.c:314:
+        read_unlock(&module_profile_info->rwlock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#763: FILE: kernel/profile.c:314:
+        read_unlock(&module_profile_info->rwlock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#765: FILE: kernel/profile.c:316:
+        *ppos += count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#765: FILE: kernel/profile.c:316:
+        *ppos += count;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#766: FILE: kernel/profile.c:317:
+        return count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#766: FILE: kernel/profile.c:317:
+        return count;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#771: FILE: kernel/profile.c:322:
+        struct module_profile *mprof;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#771: FILE: kernel/profile.c:322:
+        struct module_profile *mprof;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#772: FILE: kernel/profile.c:323:
+        struct list_head *mprof_head, *tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#772: FILE: kernel/profile.c:323:
+        struct list_head *mprof_head, *tmp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#774: FILE: kernel/profile.c:325:
+        mprof_head = &module_profile_info->mprof_head;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#774: FILE: kernel/profile.c:325:
+        mprof_head = &module_profile_info->mprof_head;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#776: FILE: kernel/profile.c:327:
+        write_lock(&module_profile_info->rwlock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#776: FILE: kernel/profile.c:327:
+        write_lock(&module_profile_info->rwlock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#778: FILE: kernel/profile.c:329:
+        list_for_each(tmp, mprof_head) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#778: FILE: kernel/profile.c:329:
+        list_for_each(tmp, mprof_head) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#779: FILE: kernel/profile.c:330:
+                mprof = list_entry(tmp, struct module_profile, list);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#779: FILE: kernel/profile.c:330:
+                mprof = list_entry(tmp, struct module_profile, list);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#781: FILE: kernel/profile.c:332:
+^I        /* zero-clear module profiling buffer */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#782: FILE: kernel/profile.c:333:
+^I        memset(mprof->prof_buffer, 0,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#784: FILE: kernel/profile.c:335:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#784: FILE: kernel/profile.c:335:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#786: FILE: kernel/profile.c:337:
+        write_unlock(&module_profile_info->rwlock);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#786: FILE: kernel/profile.c:337:
+        write_unlock(&module_profile_info->rwlock);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#788: FILE: kernel/profile.c:339:
+        return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#788: FILE: kernel/profile.c:339:
+        return;$

WARNING:CONST_STRUCT: struct file_operations should normally be const
#791: FILE: kernel/profile.c:342:
+struct file_operations proc_mprof_operations = {

ERROR:CODE_INDENT: code indent should use tabs where possible
#792: FILE: kernel/profile.c:343:
+        read:           read_module_profile,$

WARNING:INDENTED_LABEL: labels should not be indented
#792: FILE: kernel/profile.c:343:
+        read:           read_module_profile,

ERROR:CODE_INDENT: code indent should use tabs where possible
#805: FILE: kernel/profile.c:356:
+        unsigned long p = *ppos;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#805: FILE: kernel/profile.c:356:
+        unsigned long p = *ppos;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#806: FILE: kernel/profile.c:357:
+        ssize_t read;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#806: FILE: kernel/profile.c:357:
+        ssize_t read;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#807: FILE: kernel/profile.c:358:
+        char * pnt;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#807: FILE: kernel/profile.c:358:
+        char * pnt;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#807: FILE: kernel/profile.c:358:
+        char * pnt;

ERROR:CODE_INDENT: code indent should use tabs where possible
#808: FILE: kernel/profile.c:359:
+        unsigned int sample_step = 1 << prof_shift;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#808: FILE: kernel/profile.c:359:
+        unsigned int sample_step = 1 << prof_shift;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#810: FILE: kernel/profile.c:361:
+        if (p >= (prof_len+1)*sizeof(unsigned int))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#810: FILE: kernel/profile.c:361:
+        if (p >= (prof_len+1)*sizeof(unsigned int))$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#810: FILE: kernel/profile.c:361:
+        if (p >= (prof_len+1)*sizeof(unsigned int))
                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#810: FILE: kernel/profile.c:361:
+        if (p >= (prof_len+1)*sizeof(unsigned int))
                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#811: FILE: kernel/profile.c:362:
+                return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#811: FILE: kernel/profile.c:362:
+                return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#812: FILE: kernel/profile.c:363:
+        if (count > (prof_len+1)*sizeof(unsigned int) - p)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#812: FILE: kernel/profile.c:363:
+        if (count > (prof_len+1)*sizeof(unsigned int) - p)$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#812: FILE: kernel/profile.c:363:
+        if (count > (prof_len+1)*sizeof(unsigned int) - p)
                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#812: FILE: kernel/profile.c:363:
+        if (count > (prof_len+1)*sizeof(unsigned int) - p)
                                 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#813: FILE: kernel/profile.c:364:
+                count = (prof_len+1)*sizeof(unsigned int) - p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#813: FILE: kernel/profile.c:364:
+                count = (prof_len+1)*sizeof(unsigned int) - p;$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#813: FILE: kernel/profile.c:364:
+                count = (prof_len+1)*sizeof(unsigned int) - p;
                                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#813: FILE: kernel/profile.c:364:
+                count = (prof_len+1)*sizeof(unsigned int) - p;
                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#814: FILE: kernel/profile.c:365:
+        read = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#814: FILE: kernel/profile.c:365:
+        read = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#816: FILE: kernel/profile.c:367:
+        while (p < sizeof(unsigned int) && count > 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#816: FILE: kernel/profile.c:367:
+        while (p < sizeof(unsigned int) && count > 0) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#817: FILE: kernel/profile.c:368:
+                put_user(*((char *)(&sample_step)+p),buf);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#817: FILE: kernel/profile.c:368:
+                put_user(*((char *)(&sample_step)+p),buf);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#817: FILE: kernel/profile.c:368:
+                put_user(*((char *)(&sample_step)+p),buf);
                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#817: FILE: kernel/profile.c:368:
+                put_user(*((char *)(&sample_step)+p),buf);
                                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#818: FILE: kernel/profile.c:369:
+                buf++; p++; count--; read++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#818: FILE: kernel/profile.c:369:
+                buf++; p++; count--; read++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#819: FILE: kernel/profile.c:370:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#819: FILE: kernel/profile.c:370:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#820: FILE: kernel/profile.c:371:
+        pnt = (char *)prof_buffer + p - sizeof(unsigned int);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#820: FILE: kernel/profile.c:371:
+        pnt = (char *)prof_buffer + p - sizeof(unsigned int);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#821: FILE: kernel/profile.c:372:
+        copy_to_user(buf,(void *)pnt,count);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#821: FILE: kernel/profile.c:372:
+        copy_to_user(buf,(void *)pnt,count);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#821: FILE: kernel/profile.c:372:
+        copy_to_user(buf,(void *)pnt,count);
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#821: FILE: kernel/profile.c:372:
+        copy_to_user(buf,(void *)pnt,count);
                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#822: FILE: kernel/profile.c:373:
+        read += count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#822: FILE: kernel/profile.c:373:
+        read += count;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#823: FILE: kernel/profile.c:374:
+        *ppos += read;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#823: FILE: kernel/profile.c:374:
+        *ppos += read;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#824: FILE: kernel/profile.c:375:
+        return read;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#824: FILE: kernel/profile.c:375:
+        return read;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#833: FILE: kernel/profile.c:384:
+ssize_t write_profile(struct file * file, const char * buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#833: FILE: kernel/profile.c:384:
+ssize_t write_profile(struct file * file, const char * buf,

ERROR:CODE_INDENT: code indent should use tabs where possible
#837: FILE: kernel/profile.c:388:
+        extern int setup_profiling_timer (unsigned int multiplier);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#837: FILE: kernel/profile.c:388:
+        extern int setup_profiling_timer (unsigned int multiplier);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#837: FILE: kernel/profile.c:388:
+        extern int setup_profiling_timer (unsigned int multiplier);

ERROR:CODE_INDENT: code indent should use tabs where possible
#839: FILE: kernel/profile.c:390:
+        if (count==sizeof(int)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#839: FILE: kernel/profile.c:390:
+        if (count==sizeof(int)) {$

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#839: FILE: kernel/profile.c:390:
+        if (count==sizeof(int)) {
                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#840: FILE: kernel/profile.c:391:
+                unsigned int multiplier;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#840: FILE: kernel/profile.c:391:
+                unsigned int multiplier;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#842: FILE: kernel/profile.c:393:
+                if (copy_from_user(&multiplier, buf, sizeof(int)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#842: FILE: kernel/profile.c:393:
+                if (copy_from_user(&multiplier, buf, sizeof(int)))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#843: FILE: kernel/profile.c:394:
+                        return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#843: FILE: kernel/profile.c:394:
+                        return -EFAULT;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#845: FILE: kernel/profile.c:396:
+                if (setup_profiling_timer(multiplier))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#845: FILE: kernel/profile.c:396:
+                if (setup_profiling_timer(multiplier))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#846: FILE: kernel/profile.c:397:
+                        return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#846: FILE: kernel/profile.c:397:
+                        return -EINVAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#847: FILE: kernel/profile.c:398:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#847: FILE: kernel/profile.c:398:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#850: FILE: kernel/profile.c:401:
+        memset(prof_buffer, 0, prof_len * sizeof(*prof_buffer));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#850: FILE: kernel/profile.c:401:
+        memset(prof_buffer, 0, prof_len * sizeof(*prof_buffer));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#855: FILE: kernel/profile.c:406:
+        return count;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#855: FILE: kernel/profile.c:406:
+        return count;$

WARNING:CONST_STRUCT: struct file_operations should normally be const
#858: FILE: kernel/profile.c:409:
+struct file_operations proc_profile_operations = {

ERROR:CODE_INDENT: code indent should use tabs where possible
#859: FILE: kernel/profile.c:410:
+        read:           read_profile,$

WARNING:INDENTED_LABEL: labels should not be indented
#859: FILE: kernel/profile.c:410:
+        read:           read_profile,

ERROR:CODE_INDENT: code indent should use tabs where possible
#860: FILE: kernel/profile.c:411:
+        write:          write_profile,$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#860: FILE: kernel/profile.c:411:
+        write:          write_profile,
              ^

WARNING:INDENTED_LABEL: labels should not be indented
#860: FILE: kernel/profile.c:411:
+        write:          write_profile,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 2
#904: FILE: sys-utils/READPROFILE.sh:2:
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#948: FILE: sys-utils/readprofile2.c:1:
+/*

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#950: FILE: sys-utils/readprofile2.c:3:
+ * ^I^I^I and /proc/mprof=/${module_name}_profile$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#965: FILE: sys-utils/readprofile2.c:18:
+ *   along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#966: FILE: sys-utils/readprofile2.c:19:
+ *   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#970: FILE: sys-utils/readprofile2.c:23:
+ * 1999-02-22 Arkadiusz Miカ・ewicz <misiek@pld.ORG.PL>
                           ^

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#1000: FILE: sys-utils/readprofile2.c:53:
+static char defaultmap[]="/usr/src/linux/System.map";

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1000: FILE: sys-utils/readprofile2.c:53:
+static char defaultmap[]="/usr/src/linux/System.map";
                         ^

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#1001: FILE: sys-utils/readprofile2.c:54:
+static char defaultpro[]="/proc/profile";

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1001: FILE: sys-utils/readprofile2.c:54:
+static char defaultpro[]="/proc/profile";
                         ^

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#1002: FILE: sys-utils/readprofile2.c:55:
+static char mprof_procdir[]="/proc/mprof";

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1002: FILE: sys-utils/readprofile2.c:55:
+static char mprof_procdir[]="/proc/mprof";
                            ^

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#1003: FILE: sys-utils/readprofile2.c:56:
+static char optstring[]="M:m:p:itvarV";

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1003: FILE: sys-utils/readprofile2.c:56:
+static char optstring[]="M:m:p:itvarV";
                        ^

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1006: FILE: sys-utils/readprofile2.c:59:
+struct profile_list
+{

ERROR:CODE_INDENT: code indent should use tabs where possible
#1007: FILE: sys-utils/readprofile2.c:60:
+        struct profile_list *nxt;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1007: FILE: sys-utils/readprofile2.c:60:
+        struct profile_list *nxt;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1008: FILE: sys-utils/readprofile2.c:61:
+        struct profile_list *prv;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1008: FILE: sys-utils/readprofile2.c:61:
+        struct profile_list *prv;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1009: FILE: sys-utils/readprofile2.c:62:
+        char *mod_name;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1009: FILE: sys-utils/readprofile2.c:62:
+        char *mod_name;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1010: FILE: sys-utils/readprofile2.c:63:
+        char *profile_name;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1010: FILE: sys-utils/readprofile2.c:63:
+        char *profile_name;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1011: FILE: sys-utils/readprofile2.c:64:
+        unsigned long len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1011: FILE: sys-utils/readprofile2.c:64:
+        unsigned long len;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1012: FILE: sys-utils/readprofile2.c:65:
+        unsigned int *buf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1012: FILE: sys-utils/readprofile2.c:65:
+        unsigned int *buf;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1013: FILE: sys-utils/readprofile2.c:66:
+        unsigned long start_text;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1013: FILE: sys-utils/readprofile2.c:66:
+        unsigned long start_text;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1014: FILE: sys-utils/readprofile2.c:67:
+        unsigned long cnt_total;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1014: FILE: sys-utils/readprofile2.c:67:
+        unsigned long cnt_total;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1015: FILE: sys-utils/readprofile2.c:68:
+        unsigned long cdsz_total;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1015: FILE: sys-utils/readprofile2.c:68:
+        unsigned long cdsz_total;$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1018: FILE: sys-utils/readprofile2.c:71:
+static void
+usage(void) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1020: FILE: sys-utils/readprofile2.c:73:
+  fprintf(stderr,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1021: FILE: sys-utils/readprofile2.c:74:
+  fprintf(stderr,
+		  _("%s: Usage: \"%s [options]\n"

ERROR:CODE_INDENT: code indent should use tabs where possible
#1029: FILE: sys-utils/readprofile2.c:82:
+                  "\t -V            print version and exit\n")$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1029: FILE: sys-utils/readprofile2.c:82:
+                  "\t -V            print version and exit\n")$

ERROR:SPACING: space required after that ',' (ctx:ExV)
#1030: FILE: sys-utils/readprofile2.c:83:
+		  ,prgname,prgname,defaultmap,defaultpro);
 		  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1030: FILE: sys-utils/readprofile2.c:83:
+		  ,prgname,prgname,defaultmap,defaultpro);
 		          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1030: FILE: sys-utils/readprofile2.c:83:
+		  ,prgname,prgname,defaultmap,defaultpro);
 		                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1030: FILE: sys-utils/readprofile2.c:83:
+		  ,prgname,prgname,defaultmap,defaultpro);
 		                             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1031: FILE: sys-utils/readprofile2.c:84:
+  exit(1);$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1034: FILE: sys-utils/readprofile2.c:87:
+static void *
+xmalloc (size_t size) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1035: FILE: sys-utils/readprofile2.c:88:
+xmalloc (size_t size) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1041: FILE: sys-utils/readprofile2.c:94:
+	t = malloc (size);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!t"
#1042: FILE: sys-utils/readprofile2.c:95:
+	if (t == NULL) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1050: FILE: sys-utils/readprofile2.c:103:
+static FILE *
+myopen(char *name, char *mode, int *flag) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1054: FILE: sys-utils/readprofile2.c:107:
+	if (!strcmp(name+len-3,".gz")) {
 	                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1054: FILE: sys-utils/readprofile2.c:107:
+	if (!strcmp(name+len-3,".gz")) {
 	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1054: FILE: sys-utils/readprofile2.c:107:
+	if (!strcmp(name+len-3,".gz")) {
 	                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1056: FILE: sys-utils/readprofile2.c:109:
+		char *cmdline = xmalloc(len+6);
 		                           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1057: FILE: sys-utils/readprofile2.c:110:
+		char *cmdline = xmalloc(len+6);
+		sprintf(cmdline, "zcat %s", name);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1058: FILE: sys-utils/readprofile2.c:111:
+		res = popen(cmdline,mode);
 		                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1064: FILE: sys-utils/readprofile2.c:117:
+	return fopen(name,mode);
 	                 ^

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#1067: FILE: sys-utils/readprofile2.c:120:
+struct profile_list *proList = NULL;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

CHECK:CAMELCASE: Avoid CamelCase: <proList>
#1067: FILE: sys-utils/readprofile2.c:120:
+struct profile_list *proList = NULL;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#1068: FILE: sys-utils/readprofile2.c:121:
+struct profile_list *doneList = NULL;

CHECK:CAMELCASE: Avoid CamelCase: <doneList>
#1068: FILE: sys-utils/readprofile2.c:121:
+struct profile_list *doneList = NULL;

CHECK:CAMELCASE: Avoid CamelCase: <proFd>
#1075: FILE: sys-utils/readprofile2.c:128:
+	int proFd;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1077: FILE: sys-utils/readprofile2.c:130:
+	char *prgname ="create_profile_list";
 	              ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1079: FILE: sys-utils/readprofile2.c:132:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1088: FILE: sys-utils/readprofile2.c:141:
+	while ((ent = readdir(dir)) != NULL) {
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1095: FILE: sys-utils/readprofile2.c:148:
+^I^I/* $

ERROR:SPACING: space required before the open brace '{'
#1100: FILE: sys-utils/readprofile2.c:153:
+		if(list){

ERROR:SPACING: space required before the open parenthesis '('
#1100: FILE: sys-utils/readprofile2.c:153:
+		if(list){

ERROR:SPACING: space required before the open brace '{'
#1103: FILE: sys-utils/readprofile2.c:156:
+		}else{

ERROR:SPACING: space required after that close brace '}'
#1103: FILE: sys-utils/readprofile2.c:156:
+		}else{

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1110: FILE: sys-utils/readprofile2.c:163:
+^I^Iprofl->profile_name = xmalloc(sizeof(mprof_procdir) + 1 + $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1112: FILE: sys-utils/readprofile2.c:165:
+		sprintf(profl->profile_name,"%s/%s", mprof_procdir,ent->d_name);
 		                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1112: FILE: sys-utils/readprofile2.c:165:
+		sprintf(profl->profile_name,"%s/%s", mprof_procdir,ent->d_name);
 		                                                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1114: FILE: sys-utils/readprofile2.c:167:
+		if ( ((proFd=open(profl->profile_name,O_RDONLY)) < 0)
 		            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1114: FILE: sys-utils/readprofile2.c:167:
+		if ( ((proFd=open(profl->profile_name,O_RDONLY)) < 0)
 		                                     ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1114: FILE: sys-utils/readprofile2.c:167:
+		if ( ((proFd=open(profl->profile_name,O_RDONLY)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1114: FILE: sys-utils/readprofile2.c:167:
+		if ( ((proFd=open(profl->profile_name,O_RDONLY)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1115: FILE: sys-utils/readprofile2.c:168:
+		if ( ((proFd=open(profl->profile_name,O_RDONLY)) < 0)
+		     || ((int)(profl->len=lseek(proFd,0,SEEK_END)) < 0)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1115: FILE: sys-utils/readprofile2.c:168:
+		     || ((int)(profl->len=lseek(proFd,0,SEEK_END)) < 0)
 		                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1115: FILE: sys-utils/readprofile2.c:168:
+		     || ((int)(profl->len=lseek(proFd,0,SEEK_END)) < 0)
 		                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1115: FILE: sys-utils/readprofile2.c:168:
+		     || ((int)(profl->len=lseek(proFd,0,SEEK_END)) < 0)
 		                                       ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1116: FILE: sys-utils/readprofile2.c:169:
+		     || ((int)(profl->len=lseek(proFd,0,SEEK_END)) < 0)
+		     || (lseek(proFd,0,SEEK_SET)<0) ) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1116: FILE: sys-utils/readprofile2.c:169:
+		     || (lseek(proFd,0,SEEK_SET)<0) ) {
 		                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1116: FILE: sys-utils/readprofile2.c:169:
+		     || (lseek(proFd,0,SEEK_SET)<0) ) {
 		                      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1116: FILE: sys-utils/readprofile2.c:169:
+		     || (lseek(proFd,0,SEEK_SET)<0) ) {
 		                                ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1116: FILE: sys-utils/readprofile2.c:169:
+		     || (lseek(proFd,0,SEEK_SET)<0) ) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1117: FILE: sys-utils/readprofile2.c:170:
+			fprintf(stderr,"%s: %s: %s\n",
 			              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1118: FILE: sys-utils/readprofile2.c:171:
+				prgname,profl->profile_name,strerror(errno));
 				       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1118: FILE: sys-utils/readprofile2.c:171:
+				prgname,profl->profile_name,strerror(errno));
 				                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1119: FILE: sys-utils/readprofile2.c:172:
+^I                exit(1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1120: FILE: sys-utils/readprofile2.c:173:
+^I        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1123: FILE: sys-utils/readprofile2.c:176:
+^I        if (!(profl->buf = malloc(profl->len)) ) {$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1123: FILE: sys-utils/readprofile2.c:176:
+	        if (!(profl->buf = malloc(profl->len)) ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1123: FILE: sys-utils/readprofile2.c:176:
+	        if (!(profl->buf = malloc(profl->len)) ) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1124: FILE: sys-utils/readprofile2.c:177:
+			fprintf(stderr,"%s: malloc(): %s\n",
 			              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1126: FILE: sys-utils/readprofile2.c:179:
+                ^Iexit(1);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1126: FILE: sys-utils/readprofile2.c:179:
+                ^Iexit(1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1126: FILE: sys-utils/readprofile2.c:179:
+                ^Iexit(1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1127: FILE: sys-utils/readprofile2.c:180:
+       ^I ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1127: FILE: sys-utils/readprofile2.c:180:
+       ^I ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1127: FILE: sys-utils/readprofile2.c:180:
+       ^I ^I}$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1129: FILE: sys-utils/readprofile2.c:182:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1129: FILE: sys-utils/readprofile2.c:182:
+ $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1131: FILE: sys-utils/readprofile2.c:184:
+		if (read(proFd,profl->buf,profl->len) != profl->len) {
 		              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1131: FILE: sys-utils/readprofile2.c:184:
+		if (read(proFd,profl->buf,profl->len) != profl->len) {
 		                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1132: FILE: sys-utils/readprofile2.c:185:
+			fprintf(stderr,"%s: %s: %s\n", prgname,
 			              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1133: FILE: sys-utils/readprofile2.c:186:
+				profl->profile_name,strerror(errno));
 				                   ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1138: FILE: sys-utils/readprofile2.c:191:
+		 * to search for these in main routine */

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1143: FILE: sys-utils/readprofile2.c:196:
+
+	}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1145: FILE: sys-utils/readprofile2.c:198:
+	closedir (dir);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1155: FILE: sys-utils/readprofile2.c:208:
+^I/* unchain proList */^I$

ERROR:SPACING: space required before the open brace '{'
#1156: FILE: sys-utils/readprofile2.c:209:
+	if (profl->prv){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1156: FILE: sys-utils/readprofile2.c:209:
+	if (profl->prv){
+		profl->prv->nxt = profl->nxt;
+	}

ERROR:SPACING: space required before the open brace '{'
#1159: FILE: sys-utils/readprofile2.c:212:
+	if (profl->nxt){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1159: FILE: sys-utils/readprofile2.c:212:
+	if (profl->nxt){
+		profl->nxt->prv = profl->prv;
+	}

ERROR:SPACING: space required before the open brace '{'
#1162: FILE: sys-utils/readprofile2.c:215:
+	if (profl == proList){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1162: FILE: sys-utils/readprofile2.c:215:
+	if (profl == proList){
+		proList = profl->nxt;
+	}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1167: FILE: sys-utils/readprofile2.c:220:
+^Iif (doneList) { $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "c_prof->nxt"
#1168: FILE: sys-utils/readprofile2.c:221:
+		for (c_prof = doneList; c_prof->nxt != NULL;

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1183: FILE: sys-utils/readprofile2.c:236:
+int
+main (int argc, char **argv) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1184: FILE: sys-utils/readprofile2.c:237:
+main (int argc, char **argv) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1187: FILE: sys-utils/readprofile2.c:240:
+	char *mapFile, *proFile, *mult=0;
 	                              ^

CHECK:CAMELCASE: Avoid CamelCase: <mapFile>
#1187: FILE: sys-utils/readprofile2.c:240:
+	char *mapFile, *proFile, *mult=0;

CHECK:CAMELCASE: Avoid CamelCase: <proFile>
#1187: FILE: sys-utils/readprofile2.c:240:
+	char *mapFile, *proFile, *mult=0;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1188: FILE: sys-utils/readprofile2.c:241:
+	unsigned long len=0, add0=0, indx=0;
 	                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1188: FILE: sys-utils/readprofile2.c:241:
+	unsigned long len=0, add0=0, indx=0;
 	                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1188: FILE: sys-utils/readprofile2.c:241:
+	unsigned long len=0, add0=0, indx=0;
 	                                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1196: FILE: sys-utils/readprofile2.c:249:
+	int optAll=0, optInfo=0, optReset=0, optVerbose=0;
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1196: FILE: sys-utils/readprofile2.c:249:
+	int optAll=0, optInfo=0, optReset=0, optVerbose=0;
 	                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1196: FILE: sys-utils/readprofile2.c:249:
+	int optAll=0, optInfo=0, optReset=0, optVerbose=0;
 	                                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1196: FILE: sys-utils/readprofile2.c:249:
+	int optAll=0, optInfo=0, optReset=0, optVerbose=0;
 	                                               ^

CHECK:CAMELCASE: Avoid CamelCase: <optAll>
#1196: FILE: sys-utils/readprofile2.c:249:
+	int optAll=0, optInfo=0, optReset=0, optVerbose=0;

CHECK:CAMELCASE: Avoid CamelCase: <optInfo>
#1196: FILE: sys-utils/readprofile2.c:249:
+	int optAll=0, optInfo=0, optReset=0, optVerbose=0;

CHECK:CAMELCASE: Avoid CamelCase: <optReset>
#1196: FILE: sys-utils/readprofile2.c:249:
+	int optAll=0, optInfo=0, optReset=0, optVerbose=0;

CHECK:CAMELCASE: Avoid CamelCase: <optVerbose>
#1196: FILE: sys-utils/readprofile2.c:249:
+	int optAll=0, optInfo=0, optReset=0, optVerbose=0;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1198: FILE: sys-utils/readprofile2.c:251:
+	int maplineno=0;
 	             ^

CHECK:CAMELCASE: Avoid CamelCase: <popenMap>
#1199: FILE: sys-utils/readprofile2.c:252:
+	int popenMap;   /* flag to tell if popen() has been used */

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1203: FILE: sys-utils/readprofile2.c:256:
+	int optTest=0;
 	           ^

CHECK:CAMELCASE: Avoid CamelCase: <optTest>
#1203: FILE: sys-utils/readprofile2.c:256:
+	int optTest=0;

CHECK:SPACING: spaces preferred around that '^' (ctx:VxV)
#1206: FILE: sys-utils/readprofile2.c:259:
+#define next (current^1)
                      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1212: FILE: sys-utils/readprofile2.c:265:
+	prgname=argv[0];
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1213: FILE: sys-utils/readprofile2.c:266:
+	proFile=defaultpro;
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1214: FILE: sys-utils/readprofile2.c:267:
+	mapFile=defaultmap;
 	       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1216: FILE: sys-utils/readprofile2.c:269:
+	while ((c = getopt(argc,argv,optstring)) != -1) {
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1216: FILE: sys-utils/readprofile2.c:269:
+	while ((c = getopt(argc,argv,optstring)) != -1) {
 	                            ^

ERROR:SPACING: space required before the open parenthesis '('
#1217: FILE: sys-utils/readprofile2.c:270:
+		switch(c) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1218: FILE: sys-utils/readprofile2.c:271:
+		case 'm': mapFile=optarg; break;
 		                 ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1218: FILE: sys-utils/readprofile2.c:271:
+		case 'm': mapFile=optarg; break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1219: FILE: sys-utils/readprofile2.c:272:
+		case 'p': proFile=optarg; break;
 		                 ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1219: FILE: sys-utils/readprofile2.c:272:
+		case 'p': proFile=optarg; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1220: FILE: sys-utils/readprofile2.c:273:
+		case 'a': optAll++;       break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1221: FILE: sys-utils/readprofile2.c:274:
+		case 'i': optInfo++;      break;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1222: FILE: sys-utils/readprofile2.c:275:
+		case 'M': mult=optarg;    break;
 		              ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1222: FILE: sys-utils/readprofile2.c:275:
+		case 'M': mult=optarg;    break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1223: FILE: sys-utils/readprofile2.c:276:
+		case 'r': optReset++;     break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1224: FILE: sys-utils/readprofile2.c:277:
+		case 'v': optVerbose++;   break;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1225: FILE: sys-utils/readprofile2.c:278:
+		case 'V': printf(_("%s Version %s\n"),prgname,RELEASE);
 		                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1225: FILE: sys-utils/readprofile2.c:278:
+		case 'V': printf(_("%s Version %s\n"),prgname,RELEASE);
 		                                             ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1225: FILE: sys-utils/readprofile2.c:278:
+		case 'V': printf(_("%s Version %s\n"),prgname,RELEASE);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1228: FILE: sys-utils/readprofile2.c:281:
+		case 't': optTest++;   break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1230: FILE: sys-utils/readprofile2.c:283:
+		default: usage();

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1250: FILE: sys-utils/readprofile2.c:303:
+		fd = open(defaultpro,O_WRONLY);
 		                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1267: FILE: sys-utils/readprofile2.c:320:
+	if ( ((proFd=open(proFile,O_RDONLY)) < 0)
 	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1267: FILE: sys-utils/readprofile2.c:320:
+	if ( ((proFd=open(proFile,O_RDONLY)) < 0)
 	                         ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1267: FILE: sys-utils/readprofile2.c:320:
+	if ( ((proFd=open(proFile,O_RDONLY)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1267: FILE: sys-utils/readprofile2.c:320:
+	if ( ((proFd=open(proFile,O_RDONLY)) < 0)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1268: FILE: sys-utils/readprofile2.c:321:
+	if ( ((proFd=open(proFile,O_RDONLY)) < 0)
+	     || ((int)(len=lseek(proFd,0,SEEK_END)) < 0)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1268: FILE: sys-utils/readprofile2.c:321:
+	     || ((int)(len=lseek(proFd,0,SEEK_END)) < 0)
 	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1268: FILE: sys-utils/readprofile2.c:321:
+	     || ((int)(len=lseek(proFd,0,SEEK_END)) < 0)
 	                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1268: FILE: sys-utils/readprofile2.c:321:
+	     || ((int)(len=lseek(proFd,0,SEEK_END)) < 0)
 	                                ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1269: FILE: sys-utils/readprofile2.c:322:
+	     || ((int)(len=lseek(proFd,0,SEEK_END)) < 0)
+	     || (lseek(proFd,0,SEEK_SET)<0) ) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1269: FILE: sys-utils/readprofile2.c:322:
+	     || (lseek(proFd,0,SEEK_SET)<0) ) {
 	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1269: FILE: sys-utils/readprofile2.c:322:
+	     || (lseek(proFd,0,SEEK_SET)<0) ) {
 	                      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#1269: FILE: sys-utils/readprofile2.c:322:
+	     || (lseek(proFd,0,SEEK_SET)<0) ) {
 	                                ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1269: FILE: sys-utils/readprofile2.c:322:
+	     || (lseek(proFd,0,SEEK_SET)<0) ) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1270: FILE: sys-utils/readprofile2.c:323:
+		fprintf(stderr,"%s: %s: %s\n",prgname,proFile,strerror(errno));
 		              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1270: FILE: sys-utils/readprofile2.c:323:
+		fprintf(stderr,"%s: %s: %s\n",prgname,proFile,strerror(errno));
 		                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1270: FILE: sys-utils/readprofile2.c:323:
+		fprintf(stderr,"%s: %s: %s\n",prgname,proFile,strerror(errno));
 		                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1270: FILE: sys-utils/readprofile2.c:323:
+		fprintf(stderr,"%s: %s: %s\n",prgname,proFile,strerror(errno));
 		                                             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1274: FILE: sys-utils/readprofile2.c:327:
+	if ( !(buf=malloc(len)) ) {
 	          ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#1274: FILE: sys-utils/readprofile2.c:327:
+	if ( !(buf=malloc(len)) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1274: FILE: sys-utils/readprofile2.c:327:
+	if ( !(buf=malloc(len)) ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1274: FILE: sys-utils/readprofile2.c:327:
+	if ( !(buf=malloc(len)) ) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1275: FILE: sys-utils/readprofile2.c:328:
+		fprintf(stderr,"%s: malloc(): %s\n",prgname, strerror(errno));
 		              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1275: FILE: sys-utils/readprofile2.c:328:
+		fprintf(stderr,"%s: malloc(): %s\n",prgname, strerror(errno));
 		                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1279: FILE: sys-utils/readprofile2.c:332:
+	if (read(proFd,buf,len) != len) {
 	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1279: FILE: sys-utils/readprofile2.c:332:
+	if (read(proFd,buf,len) != len) {
 	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1280: FILE: sys-utils/readprofile2.c:333:
+		fprintf(stderr,"%s: %s: %s\n",prgname,proFile,strerror(errno));
 		              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1280: FILE: sys-utils/readprofile2.c:333:
+		fprintf(stderr,"%s: %s: %s\n",prgname,proFile,strerror(errno));
 		                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1280: FILE: sys-utils/readprofile2.c:333:
+		fprintf(stderr,"%s: %s: %s\n",prgname,proFile,strerror(errno));
 		                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1280: FILE: sys-utils/readprofile2.c:333:
+		fprintf(stderr,"%s: %s: %s\n",prgname,proFile,strerror(errno));
 		                                             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1285: FILE: sys-utils/readprofile2.c:338:
+	step=buf[0];
 	    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1287: FILE: sys-utils/readprofile2.c:340:
+		printf(_("Sampling_step: %i\n"),step);
 		                               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1289: FILE: sys-utils/readprofile2.c:342:
+^I} $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1291: FILE: sys-utils/readprofile2.c:344:
+
+

ERROR:SPACING: space required before the open brace '{'
#1303: FILE: sys-utils/readprofile2.c:356:
+	if(proList){

ERROR:SPACING: space required before the open parenthesis '('
#1303: FILE: sys-utils/readprofile2.c:356:
+	if(proList){

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1309: FILE: sys-utils/readprofile2.c:362:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1310: FILE: sys-utils/readprofile2.c:363:
+	if (!(map=myopen(mapFile,"r",&popenMap))) {
 	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1310: FILE: sys-utils/readprofile2.c:363:
+	if (!(map=myopen(mapFile,"r",&popenMap))) {
 	                        ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1310: FILE: sys-utils/readprofile2.c:363:
+	if (!(map=myopen(mapFile,"r",&popenMap))) {
 	                            ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1310: FILE: sys-utils/readprofile2.c:363:
+	if (!(map=myopen(mapFile,"r",&popenMap))) {
 	                             ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1310: FILE: sys-utils/readprofile2.c:363:
+	if (!(map=myopen(mapFile,"r",&popenMap))) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1311: FILE: sys-utils/readprofile2.c:364:
+		fprintf(stderr,"%s: ",prgname);perror(mapFile);
 		              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1311: FILE: sys-utils/readprofile2.c:364:
+		fprintf(stderr,"%s: ",prgname);perror(mapFile);
 		                     ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#1311: FILE: sys-utils/readprofile2.c:364:
+		fprintf(stderr,"%s: ",prgname);perror(mapFile);
 		                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1318: FILE: sys-utils/readprofile2.c:371:
+^I */   $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1319: FILE: sys-utils/readprofile2.c:372:
+	fgets(mapline,S_LEN,map);
 	             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1319: FILE: sys-utils/readprofile2.c:372:
+	fgets(mapline,S_LEN,map);
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1322: FILE: sys-utils/readprofile2.c:375:
+	while(fgets(mapline,S_LEN,map)) {
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1322: FILE: sys-utils/readprofile2.c:375:
+	while(fgets(mapline,S_LEN,map)) {
 	                         ^

ERROR:SPACING: space required before the open parenthesis '('
#1322: FILE: sys-utils/readprofile2.c:375:
+	while(fgets(mapline,S_LEN,map)) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1324: FILE: sys-utils/readprofile2.c:377:
+		if (sscanf(mapline,"%lx %s %s",&fn_add,mode,fn_name)!=3) {
 		                  ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1324: FILE: sys-utils/readprofile2.c:377:
+		if (sscanf(mapline,"%lx %s %s",&fn_add,mode,fn_name)!=3) {
 		                              ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1324: FILE: sys-utils/readprofile2.c:377:
+		if (sscanf(mapline,"%lx %s %s",&fn_add,mode,fn_name)!=3) {
 		                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1324: FILE: sys-utils/readprofile2.c:377:
+		if (sscanf(mapline,"%lx %s %s",&fn_add,mode,fn_name)!=3) {
 		                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1324: FILE: sys-utils/readprofile2.c:377:
+		if (sscanf(mapline,"%lx %s %s",&fn_add,mode,fn_name)!=3) {
 		                                           ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#1324: FILE: sys-utils/readprofile2.c:377:
+		if (sscanf(mapline,"%lx %s %s",&fn_add,mode,fn_name)!=3) {
 		                                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1325: FILE: sys-utils/readprofile2.c:378:
+			fprintf(stderr,_("%s: %s(%i): wrong map line\n"),
 			              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1326: FILE: sys-utils/readprofile2.c:379:
+				prgname,mapFile, maplineno);
 				       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1329: FILE: sys-utils/readprofile2.c:382:
+		if (!strcmp(fn_name,"_stext")) /* only elf works like this */ {
 		                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1330: FILE: sys-utils/readprofile2.c:383:
+			add0=fn_add;
 			    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1336: FILE: sys-utils/readprofile2.c:389:
+		fprintf(stderr,_("%s: can't find \"_stext\" in %s\n"),
 		              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1341: FILE: sys-utils/readprofile2.c:394:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1342: FILE: sys-utils/readprofile2.c:395:
+         * Main loop for reading kernel profiling.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1343: FILE: sys-utils/readprofile2.c:396:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1344: FILE: sys-utils/readprofile2.c:397:
+        total=0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1344: FILE: sys-utils/readprofile2.c:397:
+        total=0;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1344: FILE: sys-utils/readprofile2.c:397:
+        total=0;
              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1345: FILE: sys-utils/readprofile2.c:398:
+        profl = proList;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1345: FILE: sys-utils/readprofile2.c:398:
+        profl = proList;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1346: FILE: sys-utils/readprofile2.c:399:
+        while(fgets(mapline,S_LEN,map)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1346: FILE: sys-utils/readprofile2.c:399:
+        while(fgets(mapline,S_LEN,map)) {$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1346: FILE: sys-utils/readprofile2.c:399:
+        while(fgets(mapline,S_LEN,map)) {
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1346: FILE: sys-utils/readprofile2.c:399:
+        while(fgets(mapline,S_LEN,map)) {
                                  ^

ERROR:SPACING: space required before the open parenthesis '('
#1346: FILE: sys-utils/readprofile2.c:399:
+        while(fgets(mapline,S_LEN,map)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#1347: FILE: sys-utils/readprofile2.c:400:
+                unsigned int this=0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1347: FILE: sys-utils/readprofile2.c:400:
+                unsigned int this=0;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1347: FILE: sys-utils/readprofile2.c:400:
+                unsigned int this=0;
                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1350: FILE: sys-utils/readprofile2.c:403:
+                if (sscanf(mapline,"%lx %s %s",&next_add,mode,next_name)!=3) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1350: FILE: sys-utils/readprofile2.c:403:
+                if (sscanf(mapline,"%lx %s %s",&next_add,mode,next_name)!=3) {$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1350: FILE: sys-utils/readprofile2.c:403:
+                if (sscanf(mapline,"%lx %s %s",&next_add,mode,next_name)!=3) {
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#1350: FILE: sys-utils/readprofile2.c:403:
+                if (sscanf(mapline,"%lx %s %s",&next_add,mode,next_name)!=3) {
                                               ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#1350: FILE: sys-utils/readprofile2.c:403:
+                if (sscanf(mapline,"%lx %s %s",&next_add,mode,next_name)!=3) {
                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1350: FILE: sys-utils/readprofile2.c:403:
+                if (sscanf(mapline,"%lx %s %s",&next_add,mode,next_name)!=3) {
                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1350: FILE: sys-utils/readprofile2.c:403:
+                if (sscanf(mapline,"%lx %s %s",&next_add,mode,next_name)!=3) {
                                                              ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#1350: FILE: sys-utils/readprofile2.c:403:
+                if (sscanf(mapline,"%lx %s %s",&next_add,mode,next_name)!=3) {
                                                                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1351: FILE: sys-utils/readprofile2.c:404:
+                        fprintf(stderr,_("%s: %s(%i): wrong map line\n"),$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1351: FILE: sys-utils/readprofile2.c:404:
+                        fprintf(stderr,_("%s: %s(%i): wrong map line\n"),$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1351: FILE: sys-utils/readprofile2.c:404:
+                        fprintf(stderr,_("%s: %s(%i): wrong map line\n"),
                                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1352: FILE: sys-utils/readprofile2.c:405:
+                                prgname,mapFile, maplineno);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1352: FILE: sys-utils/readprofile2.c:405:
+                                prgname,mapFile, maplineno);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1352: FILE: sys-utils/readprofile2.c:405:
+                                prgname,mapFile, maplineno);
                                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1353: FILE: sys-utils/readprofile2.c:406:
+                        exit(1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1353: FILE: sys-utils/readprofile2.c:406:
+                        exit(1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1354: FILE: sys-utils/readprofile2.c:407:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1354: FILE: sys-utils/readprofile2.c:407:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1356: FILE: sys-utils/readprofile2.c:409:
+                /* ignore any LEADING (before a '[tT]' symbol is found)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1357: FILE: sys-utils/readprofile2.c:410:
+                   Absolute symbols */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1357: FILE: sys-utils/readprofile2.c:410:
+                /* ignore any LEADING (before a '[tT]' symbol is found)
+                   Absolute symbols */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1357: FILE: sys-utils/readprofile2.c:410:
+                   Absolute symbols */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1358: FILE: sys-utils/readprofile2.c:411:
+                if (*mode == 'A' && total == 0) continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1358: FILE: sys-utils/readprofile2.c:411:
+                if (*mode == 'A' && total == 0) continue;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1358: FILE: sys-utils/readprofile2.c:411:
+                if (*mode == 'A' && total == 0) continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1359: FILE: sys-utils/readprofile2.c:412:
+                if (*mode!='T' && *mode!='t') break;/* only text is profiled */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1359: FILE: sys-utils/readprofile2.c:412:
+                if (*mode!='T' && *mode!='t') break;/* only text is profiled */$

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#1359: FILE: sys-utils/readprofile2.c:412:
+                if (*mode!='T' && *mode!='t') break;/* only text is profiled */
                          ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#1359: FILE: sys-utils/readprofile2.c:412:
+                if (*mode!='T' && *mode!='t') break;/* only text is profiled */
                                        ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1359: FILE: sys-utils/readprofile2.c:412:
+                if (*mode!='T' && *mode!='t') break;/* only text is profiled */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1361: FILE: sys-utils/readprofile2.c:414:
+                if (indx >= profl->len / sizeof(*profl->buf)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1361: FILE: sys-utils/readprofile2.c:414:
+                if (indx >= profl->len / sizeof(*profl->buf)) {$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1363: FILE: sys-utils/readprofile2.c:416:
+				  "Wrong map file?(%i)\n"), prgname,maplineno);
 				                                   ^

WARNING:SPLIT_STRING: quoted string split across lines
#1363: FILE: sys-utils/readprofile2.c:416:
+			fprintf(stderr, _("%s: profile address out of range. "
+				  "Wrong map file?(%i)\n"), prgname,maplineno);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1364: FILE: sys-utils/readprofile2.c:417:
+                        exit(1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1364: FILE: sys-utils/readprofile2.c:417:
+                        exit(1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1365: FILE: sys-utils/readprofile2.c:418:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1365: FILE: sys-utils/readprofile2.c:418:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1367: FILE: sys-utils/readprofile2.c:420:
+                while (indx < (next_add-add0)/step)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1367: FILE: sys-utils/readprofile2.c:420:
+                while (indx < (next_add-add0)/step)$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1367: FILE: sys-utils/readprofile2.c:420:
+                while (indx < (next_add-add0)/step)
                                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1367: FILE: sys-utils/readprofile2.c:420:
+                while (indx < (next_add-add0)/step)
                                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1368: FILE: sys-utils/readprofile2.c:421:
+                        this += profl->buf[indx++];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1368: FILE: sys-utils/readprofile2.c:421:
+                        this += profl->buf[indx++];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1369: FILE: sys-utils/readprofile2.c:422:
+                total += this;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1369: FILE: sys-utils/readprofile2.c:422:
+                total += this;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1371: FILE: sys-utils/readprofile2.c:424:
+                fn_len = next_add-fn_add;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1371: FILE: sys-utils/readprofile2.c:424:
+                fn_len = next_add-fn_add;$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1371: FILE: sys-utils/readprofile2.c:424:
+                fn_len = next_add-fn_add;
                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1372: FILE: sys-utils/readprofile2.c:425:
+                if (fn_len && (this || optAll)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1372: FILE: sys-utils/readprofile2.c:425:
+                if (fn_len && (this || optAll)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1373: FILE: sys-utils/readprofile2.c:426:
+                        if (optVerbose)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1373: FILE: sys-utils/readprofile2.c:426:
+                        if (optVerbose)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 32)
#1375: FILE: sys-utils/readprofile2.c:428:
+				if (optTest) {
+                                printf("%08lx %4.4x %-50s %6i %8.4f\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#1376: FILE: sys-utils/readprofile2.c:429:
+                                printf("%08lx %4.4x %-50s %6i %8.4f\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1376: FILE: sys-utils/readprofile2.c:429:
+                                printf("%08lx %4.4x %-50s %6i %8.4f\n",$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1377: FILE: sys-utils/readprofile2.c:430:
+                                printf("%08lx %4.4x %-50s %6i %8.4f\n",
+					fn_add,fn_len,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1377: FILE: sys-utils/readprofile2.c:430:
+					fn_add,fn_len,
 					      ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1378: FILE: sys-utils/readprofile2.c:431:
+                                       fn_name,this,this/(double)fn_len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1378: FILE: sys-utils/readprofile2.c:431:
+                                       fn_name,this,this/(double)fn_len);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1378: FILE: sys-utils/readprofile2.c:431:
+                                       fn_name,this,this/(double)fn_len);
                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1378: FILE: sys-utils/readprofile2.c:431:
+                                       fn_name,this,this/(double)fn_len);
                                                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1378: FILE: sys-utils/readprofile2.c:431:
+                                       fn_name,this,this/(double)fn_len);
                                                         ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 32)
#1379: FILE: sys-utils/readprofile2.c:432:
+				} else {
+                                printf("%08lx %-50s %6i %8.4f\n", fn_add,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1380: FILE: sys-utils/readprofile2.c:433:
+                                printf("%08lx %-50s %6i %8.4f\n", fn_add,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1380: FILE: sys-utils/readprofile2.c:433:
+                                printf("%08lx %-50s %6i %8.4f\n", fn_add,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1381: FILE: sys-utils/readprofile2.c:434:
+                                       fn_name,this,this/(double)fn_len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1381: FILE: sys-utils/readprofile2.c:434:
+                                       fn_name,this,this/(double)fn_len);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1381: FILE: sys-utils/readprofile2.c:434:
+                                       fn_name,this,this/(double)fn_len);
                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1381: FILE: sys-utils/readprofile2.c:434:
+                                       fn_name,this,this/(double)fn_len);
                                                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1381: FILE: sys-utils/readprofile2.c:434:
+                                       fn_name,this,this/(double)fn_len);
                                                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1384: FILE: sys-utils/readprofile2.c:437:
+                                printf("%08lx %-50s %6i %8.4f\n", fn_add,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1384: FILE: sys-utils/readprofile2.c:437:
+                                printf("%08lx %-50s %6i %8.4f\n", fn_add,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1385: FILE: sys-utils/readprofile2.c:438:
+                                       fn_name,this,this/(double)fn_len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1385: FILE: sys-utils/readprofile2.c:438:
+                                       fn_name,this,this/(double)fn_len);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1385: FILE: sys-utils/readprofile2.c:438:
+                                       fn_name,this,this/(double)fn_len);
                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1385: FILE: sys-utils/readprofile2.c:438:
+                                       fn_name,this,this/(double)fn_len);
                                                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1385: FILE: sys-utils/readprofile2.c:438:
+                                       fn_name,this,this/(double)fn_len);
                                                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1387: FILE: sys-utils/readprofile2.c:440:
+                        else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1387: FILE: sys-utils/readprofile2.c:440:
+                        else$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1388: FILE: sys-utils/readprofile2.c:441:
+                                printf("%6i %-50s %8.4f\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1388: FILE: sys-utils/readprofile2.c:441:
+                                printf("%6i %-50s %8.4f\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1389: FILE: sys-utils/readprofile2.c:442:
+                                       this,fn_name,this/(double)fn_len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1389: FILE: sys-utils/readprofile2.c:442:
+                                       this,fn_name,this/(double)fn_len);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1389: FILE: sys-utils/readprofile2.c:442:
+                                       this,fn_name,this/(double)fn_len);
                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1389: FILE: sys-utils/readprofile2.c:442:
+                                       this,fn_name,this/(double)fn_len);
                                                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1389: FILE: sys-utils/readprofile2.c:442:
+                                       this,fn_name,this/(double)fn_len);
                                                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1390: FILE: sys-utils/readprofile2.c:443:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1390: FILE: sys-utils/readprofile2.c:443:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1391: FILE: sys-utils/readprofile2.c:444:
+                fn_add=next_add; strcpy(fn_name,next_name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1391: FILE: sys-utils/readprofile2.c:444:
+                fn_add=next_add; strcpy(fn_name,next_name);$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1391: FILE: sys-utils/readprofile2.c:444:
+                fn_add=next_add; strcpy(fn_name,next_name);
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1391: FILE: sys-utils/readprofile2.c:444:
+                fn_add=next_add; strcpy(fn_name,next_name);
                                                ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1392: FILE: sys-utils/readprofile2.c:445:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1392: FILE: sys-utils/readprofile2.c:445:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1394: FILE: sys-utils/readprofile2.c:447:
+        profl->cnt_total = total;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1394: FILE: sys-utils/readprofile2.c:447:
+        profl->cnt_total = total;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1395: FILE: sys-utils/readprofile2.c:448:
+        profl->cdsz_total = (fn_add-add0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1395: FILE: sys-utils/readprofile2.c:448:
+        profl->cdsz_total = (fn_add-add0);$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1395: FILE: sys-utils/readprofile2.c:448:
+        profl->cdsz_total = (fn_add-add0);
                                    ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1400: FILE: sys-utils/readprofile2.c:453:
+        if (!proList){$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1400: FILE: sys-utils/readprofile2.c:453:
+        if (!proList){$

ERROR:SPACING: space required before the open brace '{'
#1400: FILE: sys-utils/readprofile2.c:453:
+        if (!proList){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1401: FILE: sys-utils/readprofile2.c:454:
+^I^I/* no module profiling buffer */ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1402: FILE: sys-utils/readprofile2.c:455:
+                goto trailer;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1402: FILE: sys-utils/readprofile2.c:455:
+                goto trailer;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1403: FILE: sys-utils/readprofile2.c:456:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1403: FILE: sys-utils/readprofile2.c:456:
+        }$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1408: FILE: sys-utils/readprofile2.c:461:
+	while(fgets(mapline,S_LEN,map)) {
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1408: FILE: sys-utils/readprofile2.c:461:
+	while(fgets(mapline,S_LEN,map)) {
 	                         ^

ERROR:SPACING: space required before the open parenthesis '('
#1408: FILE: sys-utils/readprofile2.c:461:
+	while(fgets(mapline,S_LEN,map)) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1411: FILE: sys-utils/readprofile2.c:464:
+		if (sscanf(mapline,"%lx %s %s %s",
 		                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1412: FILE: sys-utils/readprofile2.c:465:
+		if (sscanf(mapline,"%lx %s %s %s",
+				&fn_add,mode,fn_name,module)!=3) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1412: FILE: sys-utils/readprofile2.c:465:
+				&fn_add,mode,fn_name,module)!=3) {
 				       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1412: FILE: sys-utils/readprofile2.c:465:
+				&fn_add,mode,fn_name,module)!=3) {
 				            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1412: FILE: sys-utils/readprofile2.c:465:
+				&fn_add,mode,fn_name,module)!=3) {
 				                    ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#1412: FILE: sys-utils/readprofile2.c:465:
+				&fn_add,mode,fn_name,module)!=3) {
 				                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1414: FILE: sys-utils/readprofile2.c:467:
+			fprintf(stderr,_("%s: %s(%i): wrong map line\n"),
 			              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1415: FILE: sys-utils/readprofile2.c:468:
+				prgname,mapFile, maplineno);
 				       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1418: FILE: sys-utils/readprofile2.c:471:
+		if (!strcmp(fn_name,"_end")) {
 		                   ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1418: FILE: sys-utils/readprofile2.c:471:
+		if (!strcmp(fn_name,"_end")) {
+			break;
+		}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1423: FILE: sys-utils/readprofile2.c:476:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#1425: FILE: sys-utils/readprofile2.c:478:
+         * Main loop for reading module profiling.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1428: FILE: sys-utils/readprofile2.c:481:
+        indx = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1428: FILE: sys-utils/readprofile2.c:481:
+        indx = 0;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1429: FILE: sys-utils/readprofile2.c:482:
+	total=0;
 	     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1432: FILE: sys-utils/readprofile2.c:485:
+^Imemset(module, 0, sizeof(module)); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1433: FILE: sys-utils/readprofile2.c:486:
+^Imemset(last_module, 0, sizeof(last_module)); $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1434: FILE: sys-utils/readprofile2.c:487:
+	while(fgets(mapline,S_LEN,map)) {
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1434: FILE: sys-utils/readprofile2.c:487:
+	while(fgets(mapline,S_LEN,map)) {
 	                         ^

ERROR:SPACING: space required before the open parenthesis '('
#1434: FILE: sys-utils/readprofile2.c:487:
+	while(fgets(mapline,S_LEN,map)) {

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1435: FILE: sys-utils/readprofile2.c:488:
+		unsigned int this=0;
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1438: FILE: sys-utils/readprofile2.c:491:
+		if (sscanf(mapline,"%lx %s %s %s",
 		                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1439: FILE: sys-utils/readprofile2.c:492:
+		if (sscanf(mapline,"%lx %s %s %s",
+				&next_add,mode,next_name,module)!=4) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1439: FILE: sys-utils/readprofile2.c:492:
+				&next_add,mode,next_name,module)!=4) {
 				         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1439: FILE: sys-utils/readprofile2.c:492:
+				&next_add,mode,next_name,module)!=4) {
 				              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1439: FILE: sys-utils/readprofile2.c:492:
+				&next_add,mode,next_name,module)!=4) {
 				                        ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#1439: FILE: sys-utils/readprofile2.c:492:
+				&next_add,mode,next_name,module)!=4) {
 				                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1440: FILE: sys-utils/readprofile2.c:493:
+			fprintf(stderr,_("%s: %s(%i): wrong map line\n"),
 			              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1441: FILE: sys-utils/readprofile2.c:494:
+				prgname,mapFile, maplineno);
 				       ^

WARNING:TYPO_SPELLING: 'diffrent' may be misspelled - perhaps 'different'?
#1446: FILE: sys-utils/readprofile2.c:499:
+		 * if module-name is not diffrent from last_module-name,
 		                         ^^^^^^^^

ERROR:SPACING: space required before the open brace '{'
#1449: FILE: sys-utils/readprofile2.c:502:
+		if (strcmp(module, last_module)){

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1454: FILE: sys-utils/readprofile2.c:507:
+			for (p = module+1; *p != ']'; p++){
 			               ^

ERROR:SPACING: space required before the open brace '{'
#1454: FILE: sys-utils/readprofile2.c:507:
+			for (p = module+1; *p != ']'; p++){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1454: FILE: sys-utils/readprofile2.c:507:
+			for (p = module+1; *p != ']'; p++){
+				mod_name_len++;
+			}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "profl"
#1464: FILE: sys-utils/readprofile2.c:517:
+			for (profl = proList; profl != NULL;

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1466: FILE: sys-utils/readprofile2.c:519:
+			     profl = profl->nxt){
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1468: FILE: sys-utils/readprofile2.c:521:
+				if (strncmp(p, profl->profile_name,
+				    strlen(p)+1) == 0){

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1468: FILE: sys-utils/readprofile2.c:521:
+				    strlen(p)+1) == 0){
 				             ^

ERROR:SPACING: space required before the open brace '{'
#1468: FILE: sys-utils/readprofile2.c:521:
+				    strlen(p)+1) == 0){

ERROR:SPACING: space required before the open brace '{'
#1473: FILE: sys-utils/readprofile2.c:526:
+			if (!profl){

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1479: FILE: sys-utils/readprofile2.c:532:
+			 * then set module name in profile_list */

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1488: FILE: sys-utils/readprofile2.c:541:
+		if (profl && !add0) {
+			modulemap_end = 0;
+		}

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1493: FILE: sys-utils/readprofile2.c:546:
+		/* ignore any LEADING (before a '[tT]' symbol is found)
+		   Absolute symbols */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1493: FILE: sys-utils/readprofile2.c:546:
+		   Absolute symbols */

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#1494: FILE: sys-utils/readprofile2.c:547:
+		if (*mode!='T' && *mode!='t'){
 		         ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#1494: FILE: sys-utils/readprofile2.c:547:
+		if (*mode!='T' && *mode!='t'){
 		                       ^

ERROR:SPACING: space required before the open brace '{'
#1494: FILE: sys-utils/readprofile2.c:547:
+		if (*mode!='T' && *mode!='t'){

ERROR:SPACING: space required before the open brace '{'
#1495: FILE: sys-utils/readprofile2.c:548:
+			if (strcmp(next_name, ".text.end") == 0){

ERROR:SPACING: space required before the open brace '{'
#1497: FILE: sys-utils/readprofile2.c:550:
+			} else if (strcmp(next_name, ".text.start") == 0){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1499: FILE: sys-utils/readprofile2.c:552:
+				if (fn_add == next_add) {
+					continue; 
+				}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1500: FILE: sys-utils/readprofile2.c:553:
+^I^I^I^I^Icontinue; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1503: FILE: sys-utils/readprofile2.c:556:
+^I^I^I^Icontinue; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1506: FILE: sys-utils/readprofile2.c:559:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1506: FILE: sys-utils/readprofile2.c:559:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1507: FILE: sys-utils/readprofile2.c:560:
+^I^I/* skip line, because .text start address is not found $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1508: FILE: sys-utils/readprofile2.c:561:
+		/* skip line, because .text start address is not found 
+		   or function name is not found */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1508: FILE: sys-utils/readprofile2.c:561:
+		   or function name is not found */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1514: FILE: sys-utils/readprofile2.c:567:
+^I^I^Icontinue; $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1518: FILE: sys-utils/readprofile2.c:571:
+			fprintf(stderr,_("%s: %s(%i): wrong map line\n"),
 			              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1519: FILE: sys-utils/readprofile2.c:572:
+				prgname,mapFile, maplineno);
 				       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1525: FILE: sys-utils/readprofile2.c:578:
+				  "Wrong map file?(%i)\n"), prgname,maplineno);
 				                                   ^

WARNING:SPLIT_STRING: quoted string split across lines
#1525: FILE: sys-utils/readprofile2.c:578:
+			fprintf(stderr, _("%s: profile address out of range. "
+				  "Wrong map file?(%i)\n"), prgname,maplineno);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1529: FILE: sys-utils/readprofile2.c:582:
+		while (indx < (next_add-add0)/step) {
 		                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1529: FILE: sys-utils/readprofile2.c:582:
+		while (indx < (next_add-add0)/step) {
 		                             ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1529: FILE: sys-utils/readprofile2.c:582:
+		while (indx < (next_add-add0)/step) {
+			this += profl->buf[indx++];
+		}

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1534: FILE: sys-utils/readprofile2.c:587:
+		fn_len = next_add-fn_add;
 		                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1536: FILE: sys-utils/readprofile2.c:589:
+			sprintf(m_fn_name,"%s%s", module,fn_name);
 			                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1536: FILE: sys-utils/readprofile2.c:589:
+			sprintf(m_fn_name,"%s%s", module,fn_name);
 			                                ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 32)
#1539: FILE: sys-utils/readprofile2.c:592:
+				if (optTest) {
+				printf("%08lx %4.4x %-50s %6i %8.4f\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1541: FILE: sys-utils/readprofile2.c:594:
+				printf("%08lx %4.4x %-50s %6i %8.4f\n",
+					fn_add,fn_len,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1541: FILE: sys-utils/readprofile2.c:594:
+					fn_add,fn_len,
 					      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1542: FILE: sys-utils/readprofile2.c:595:
+					m_fn_name,this,this/(double)fn_len);
 					         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1542: FILE: sys-utils/readprofile2.c:595:
+					m_fn_name,this,this/(double)fn_len);
 					              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1542: FILE: sys-utils/readprofile2.c:595:
+					m_fn_name,this,this/(double)fn_len);
 					                   ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 32)
#1543: FILE: sys-utils/readprofile2.c:596:
+				} else {
+				printf("%08lx %-50s %6i %8.4f\n", fn_add,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1545: FILE: sys-utils/readprofile2.c:598:
+				printf("%08lx %-50s %6i %8.4f\n", fn_add,
+					m_fn_name,this,this/(double)fn_len);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1545: FILE: sys-utils/readprofile2.c:598:
+					m_fn_name,this,this/(double)fn_len);
 					         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1545: FILE: sys-utils/readprofile2.c:598:
+					m_fn_name,this,this/(double)fn_len);
 					              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1545: FILE: sys-utils/readprofile2.c:598:
+					m_fn_name,this,this/(double)fn_len);
 					                   ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1549: FILE: sys-utils/readprofile2.c:602:
+				printf("%08lx %-50s %6i %8.4f\n", fn_add,
+					m_fn_name,this,this/(double)fn_len);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1549: FILE: sys-utils/readprofile2.c:602:
+					m_fn_name,this,this/(double)fn_len);
 					         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1549: FILE: sys-utils/readprofile2.c:602:
+					m_fn_name,this,this/(double)fn_len);
 					              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1549: FILE: sys-utils/readprofile2.c:602:
+					m_fn_name,this,this/(double)fn_len);
 					                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1553: FILE: sys-utils/readprofile2.c:606:
+				       this,m_fn_name,this/(double)fn_len);
 				           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1553: FILE: sys-utils/readprofile2.c:606:
+				       this,m_fn_name,this/(double)fn_len);
 				                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1553: FILE: sys-utils/readprofile2.c:606:
+				       this,m_fn_name,this/(double)fn_len);
 				                          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1556: FILE: sys-utils/readprofile2.c:609:
+		fn_add=next_add; strcpy(fn_name,next_name);
 		      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1556: FILE: sys-utils/readprofile2.c:609:
+		fn_add=next_add; strcpy(fn_name,next_name);
 		                               ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1564: FILE: sys-utils/readprofile2.c:617:
+		if (modulemap_end) {
+

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1566: FILE: sys-utils/readprofile2.c:619:
+			profl->cdsz_total = (fn_add-add0);
 			                           ^

ERROR:SPACING: space required before the open brace '{'
#1569: FILE: sys-utils/readprofile2.c:622:
+			if (proList){

ERROR:SPACING: space required before the open brace '{'
#1582: FILE: sys-utils/readprofile2.c:635:
+	for (profl = doneList; profl != NULL; profl = profl->nxt){

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "profl"
#1582: FILE: sys-utils/readprofile2.c:635:
+	for (profl = doneList; profl != NULL; profl = profl->nxt){

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1586: FILE: sys-utils/readprofile2.c:639:
+				printf("%8d %-50s %6i %8.4f\n",
+				  ++i,profl->mod_name,(int)profl->cnt_total,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1586: FILE: sys-utils/readprofile2.c:639:
+				  ++i,profl->mod_name,(int)profl->cnt_total,
 				     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1586: FILE: sys-utils/readprofile2.c:639:
+				  ++i,profl->mod_name,(int)profl->cnt_total,
 				                     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1587: FILE: sys-utils/readprofile2.c:640:
+				  profl->cnt_total/(double)profl->cdsz_total);
 				                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1590: FILE: sys-utils/readprofile2.c:643:
+				printf("%6i %-50s %8.4f\n",
+				  (int)profl->cnt_total,profl->mod_name,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1590: FILE: sys-utils/readprofile2.c:643:
+				  (int)profl->cnt_total,profl->mod_name,
 				                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1591: FILE: sys-utils/readprofile2.c:644:
+				  profl->cnt_total/(double)profl->cdsz_total);
 				                  ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1593: FILE: sys-utils/readprofile2.c:646:
+
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1595: FILE: sys-utils/readprofile2.c:648:
+^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000468643.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 596 errors, 342 warnings, 105 checks, 1453 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000468643.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
