ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#66: 
--- a/drivers/char/nvram.c	Tue Jul 30 18:33:27 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#104: FILE: drivers/char/nvram.c:73:
+#define RTC_PORT(x)		(TT_RTC_BAS + 2*(x))
                    		               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#132: FILE: drivers/char/nvram.c:117:
+					 * NVRAM byte */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#133: FILE: drivers/char/nvram.c:118:
+#define	NVRAM_BYTES		128-RTC_FIRST_BYTE /* number of NVRAM bytes */
        	           		   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#133: FILE: drivers/char/nvram.c:118:
+#define	NVRAM_BYTES		128-RTC_FIRST_BYTE /* number of NVRAM bytes */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#144: FILE: drivers/char/nvram.c:125:
+static int mach_proc_infos(unsigned char *contents, char *buffer, int *len,
+    off_t *begin, off_t offset, int size);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: drivers/char/nvram.c:125:
+    off_t *begin, off_t offset, int size);$

WARNING:INLINE: plain inline is preferred over __inline__
#155: FILE: drivers/char/nvram.c:134:
+static __inline__ unsigned char

WARNING:INLINE: plain inline is preferred over __inline__
#163: FILE: drivers/char/nvram.c:140:
+static __inline__ void

WARNING:INLINE: plain inline is preferred over __inline__
#171: FILE: drivers/char/nvram.c:146:
+static __inline__ int

WARNING:INLINE: plain inline is preferred over __inline__
#179: FILE: drivers/char/nvram.c:152:
+static __inline__ void

WARNING:INDENTED_LABEL: labels should not be indented
#313: FILE: drivers/char/nvram.c:263:
+      checksum_err:

WARNING:INDENTED_LABEL: labels should not be indented
#357: FILE: drivers/char/nvram.c:295:
+      checksum_err:

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#366: FILE: drivers/char/nvram.c:302:
+nvram_ioctl(struct inode *inode, struct file *file,
+    unsigned int cmd, unsigned long arg)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: drivers/char/nvram.c:302:
+    unsigned int cmd, unsigned long arg)$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#374: FILE: drivers/char/nvram.c:307:
+	switch (cmd) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#401: FILE: drivers/char/nvram.c:323:
+				 * somehow...) */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#462: FILE: drivers/char/nvram.c:370:
+nvram_read_proc(char *buffer, char **start, off_t offset,
+    int size, int *eof, void *data)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#462: FILE: drivers/char/nvram.c:370:
+    int size, int *eof, void *data)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#472: FILE: drivers/char/nvram.c:378:
+nvram_read_proc(char *buffer, char **start, off_t offset,
+    int size, int *eof, void *data)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#472: FILE: drivers/char/nvram.c:378:
+    int size, int *eof, void *data)$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#517: FILE: drivers/char/nvram.c:400:
+#define	PRINT_PROC(fmt,args...)					\
        	              ^

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#517: FILE: drivers/char/nvram.c:400:
+#define	PRINT_PROC(fmt,args...)					\
+	do {							\
+		*len += sprintf(buffer+*len, fmt, ##args);	\
+		if (*begin + *len > offset + size)		\
+			return 0;				\
+		if (*begin + *len < offset) {			\
+			*begin += *len;				\
+			*len = 0;				\
+		}						\
 	} while(0)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxO)
#519: FILE: drivers/char/nvram.c:402:
+		*len += sprintf(buffer+*len, fmt, ##args);	\
 		                      ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#519: FILE: drivers/char/nvram.c:402:
+		*len += sprintf(buffer+*len, fmt, ##args);	\
 		                       ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#549: FILE: drivers/char/nvram.c:440:
+		printk(KERN_ERR "nvram: can't misc_register on minor=%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#550: FILE: drivers/char/nvram.c:441:
+		printk(KERN_ERR "nvram: can't misc_register on minor=%d\n",
+		    NVRAM_MINOR);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#555: FILE: drivers/char/nvram.c:445:
+	if (!create_proc_read_entry("driver/nvram", 0, 0, nvram_read_proc,
+		NULL)) {

WARNING:INDENTED_LABEL: labels should not be indented
#566: FILE: drivers/char/nvram.c:452:
+      out:

WARNING:INDENTED_LABEL: labels should not be indented
#568: FILE: drivers/char/nvram.c:454:
+      outmisc:

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#610: FILE: drivers/char/nvram.c:484:
+	    ((nvram_read_int(PC_CKS_LOC)<<8) | nvram_read_int(PC_CKS_LOC+1)));
 	                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#610: FILE: drivers/char/nvram.c:484:
+	    ((nvram_read_int(PC_CKS_LOC)<<8) | nvram_read_int(PC_CKS_LOC+1)));
 	                                                                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#640: FILE: drivers/char/nvram.c:515:
+pc_proc_infos(unsigned char *nvram, char *buffer, int *len,
+    off_t *begin, off_t offset, int size)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#640: FILE: drivers/char/nvram.c:515:
+    off_t *begin, off_t offset, int size)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#658: FILE: drivers/char/nvram.c:527:
+	PRINT_PROC("# floppies     : %d\n",
+	    (nvram[6] & 1) ? (nvram[6] >> 6) + 1 : 0);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#663: FILE: drivers/char/nvram.c:530:
+	if (type < sizeof (floppy_types) / sizeof (*floppy_types))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#663: FILE: drivers/char/nvram.c:530:
+	if (type < sizeof (floppy_types) / sizeof (*floppy_types))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#673: FILE: drivers/char/nvram.c:536:
+	if (type < sizeof (floppy_types) / sizeof (*floppy_types))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#673: FILE: drivers/char/nvram.c:536:
+	if (type < sizeof (floppy_types) / sizeof (*floppy_types))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#700: FILE: drivers/char/nvram.c:556:
+	PRINT_PROC("HD type 48 data: %d/%d/%d C/H/S, precomp %d, lz %d\n",
+	    nvram[18] | (nvram[19] << 8),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#704: FILE: drivers/char/nvram.c:560:
+	PRINT_PROC("HD type 49 data: %d/%d/%d C/H/S, precomp %d, lz %d\n",
+	    nvram[39] | (nvram[40] << 8),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#710: FILE: drivers/char/nvram.c:566:
+	PRINT_PROC("Extended memory: %d kB (configured), %d kB (tested)\n",
+	    nvram[9] | (nvram[10] << 8), nvram[34] | (nvram[35] << 8));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#737: FILE: drivers/char/nvram.c:571:
+	PRINT_PROC("FPU            : %sinstalled\n",
+	    (nvram[6] & 2) ? "" : "not ");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#762: FILE: drivers/char/nvram.c:590:
+	return (nvram_read_int(ATARI_CKS_LOC) == (~sum & 0xff) &&
+	    nvram_read_int(ATARI_CKS_LOC + 1) == (sum & 0xff));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#792: FILE: drivers/char/nvram.c:649:
+atari_proc_infos(unsigned char *nvram, char *buffer, int *len,
+    off_t *begin, off_t offset, int size)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#792: FILE: drivers/char/nvram.c:649:
+    off_t *begin, off_t offset, int size)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#819: FILE: drivers/char/nvram.c:668:
+	PRINT_PROC("SCSI arbitration : %s\n",
+	    (nvram[16] & 0x80) ? "on" : "off");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#855: FILE: drivers/char/nvram.c:691:
+	PRINT_PROC(dateformat[nvram[8] & 7],
+	    nvram[9] ? nvram[9] : '/', nvram[9] ? nvram[9] : '/');

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#865: FILE: drivers/char/nvram.c:698:
+		PRINT_PROC("%ds%s\n", nvram[10],
+		    nvram[10] < 8 ? ", no memory test" : "");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#881: FILE: drivers/char/nvram.c:702:
+	PRINT_PROC("Video mode       : %s colors, %d columns, %s %s monitor\n",
+	    colors[vmode & 7],

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#885: FILE: drivers/char/nvram.c:706:
+	PRINT_PROC("                   %soverscan, compat. mode %s%s\n",
+	    vmode & 64 ? "" : "no ",

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#953: FILE: drivers/char/nvram.c:73:
+#define RTC_PORT(x)		(TT_RTC_BAS + 2*(x))
                    		               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#975: FILE: drivers/char/nvram.c:112:
+static spinlock_t nvram_open_lock = SPIN_LOCK_UNLOCKED; /* guards $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#977: FILE: drivers/char/nvram.c:114:
+							 * nvram_open_mode */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#982: FILE: drivers/char/nvram.c:119:
+					 * NVRAM byte */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#983: FILE: drivers/char/nvram.c:120:
+#define	NVRAM_BYTES		128-RTC_FIRST_BYTE /* number of NVRAM bytes */
        	           		   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#983: FILE: drivers/char/nvram.c:120:
+#define	NVRAM_BYTES		128-RTC_FIRST_BYTE /* number of NVRAM bytes */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#997: FILE: drivers/char/nvram.c:127:
+static int mach_proc_infos(unsigned char *contents, char *buffer, int *len,
+    off_t *begin, off_t offset, int size);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#997: FILE: drivers/char/nvram.c:127:
+    off_t *begin, off_t offset, int size);$

WARNING:INLINE: plain inline is preferred over __inline__
#1008: FILE: drivers/char/nvram.c:136:
+static __inline__ unsigned char

WARNING:INLINE: plain inline is preferred over __inline__
#1016: FILE: drivers/char/nvram.c:142:
+static __inline__ void

WARNING:INLINE: plain inline is preferred over __inline__
#1024: FILE: drivers/char/nvram.c:148:
+static __inline__ int

WARNING:INLINE: plain inline is preferred over __inline__
#1032: FILE: drivers/char/nvram.c:154:
+static __inline__ void

WARNING:INDENTED_LABEL: labels should not be indented
#1168: FILE: drivers/char/nvram.c:267:
+      checksum_err:

WARNING:INDENTED_LABEL: labels should not be indented
#1212: FILE: drivers/char/nvram.c:299:
+      checksum_err:

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1221: FILE: drivers/char/nvram.c:306:
+nvram_ioctl(struct inode *inode, struct file *file,
+    unsigned int cmd, unsigned long arg)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1221: FILE: drivers/char/nvram.c:306:
+    unsigned int cmd, unsigned long arg)$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1229: FILE: drivers/char/nvram.c:311:
+	switch (cmd) {
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1256: FILE: drivers/char/nvram.c:327:
+				 * somehow...) */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1328: FILE: drivers/char/nvram.c:377:
+nvram_read_proc(char *buffer, char **start, off_t offset,
+    int size, int *eof, void *data)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1328: FILE: drivers/char/nvram.c:377:
+    int size, int *eof, void *data)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1338: FILE: drivers/char/nvram.c:385:
+nvram_read_proc(char *buffer, char **start, off_t offset,
+    int size, int *eof, void *data)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1338: FILE: drivers/char/nvram.c:385:
+    int size, int *eof, void *data)$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1383: FILE: drivers/char/nvram.c:407:
+#define	PRINT_PROC(fmt,args...)					\
        	              ^

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#1383: FILE: drivers/char/nvram.c:407:
+#define	PRINT_PROC(fmt,args...)					\
+	do {							\
+		*len += sprintf(buffer+*len, fmt, ##args);	\
+		if (*begin + *len > offset + size)		\
+			return 0;				\
+		if (*begin + *len < offset) {			\
+			*begin += *len;				\
+			*len = 0;				\
+		}						\
 	} while(0)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxO)
#1385: FILE: drivers/char/nvram.c:409:
+		*len += sprintf(buffer+*len, fmt, ##args);	\
 		                      ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#1385: FILE: drivers/char/nvram.c:409:
+		*len += sprintf(buffer+*len, fmt, ##args);	\
 		                       ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1415: FILE: drivers/char/nvram.c:447:
+		printk(KERN_ERR "nvram: can't misc_register on minor=%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1416: FILE: drivers/char/nvram.c:448:
+		printk(KERN_ERR "nvram: can't misc_register on minor=%d\n",
+		    NVRAM_MINOR);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1421: FILE: drivers/char/nvram.c:452:
+	if (!create_proc_read_entry("driver/nvram", 0, 0, nvram_read_proc,
+		NULL)) {

WARNING:INDENTED_LABEL: labels should not be indented
#1432: FILE: drivers/char/nvram.c:459:
+      out:

WARNING:INDENTED_LABEL: labels should not be indented
#1434: FILE: drivers/char/nvram.c:461:
+      outmisc:

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1476: FILE: drivers/char/nvram.c:491:
+	    ((nvram_read_int(PC_CKS_LOC)<<8) | nvram_read_int(PC_CKS_LOC+1)));
 	                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1476: FILE: drivers/char/nvram.c:491:
+	    ((nvram_read_int(PC_CKS_LOC)<<8) | nvram_read_int(PC_CKS_LOC+1)));
 	                                                                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1506: FILE: drivers/char/nvram.c:522:
+pc_proc_infos(unsigned char *nvram, char *buffer, int *len,
+    off_t *begin, off_t offset, int size)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1506: FILE: drivers/char/nvram.c:522:
+    off_t *begin, off_t offset, int size)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1524: FILE: drivers/char/nvram.c:534:
+	PRINT_PROC("# floppies     : %d\n",
+	    (nvram[6] & 1) ? (nvram[6] >> 6) + 1 : 0);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1529: FILE: drivers/char/nvram.c:537:
+	if (type < sizeof (floppy_types) / sizeof (*floppy_types))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1529: FILE: drivers/char/nvram.c:537:
+	if (type < sizeof (floppy_types) / sizeof (*floppy_types))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1539: FILE: drivers/char/nvram.c:543:
+	if (type < sizeof (floppy_types) / sizeof (*floppy_types))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1539: FILE: drivers/char/nvram.c:543:
+	if (type < sizeof (floppy_types) / sizeof (*floppy_types))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1566: FILE: drivers/char/nvram.c:563:
+	PRINT_PROC("HD type 48 data: %d/%d/%d C/H/S, precomp %d, lz %d\n",
+	    nvram[18] | (nvram[19] << 8),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1570: FILE: drivers/char/nvram.c:567:
+	PRINT_PROC("HD type 49 data: %d/%d/%d C/H/S, precomp %d, lz %d\n",
+	    nvram[39] | (nvram[40] << 8),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1576: FILE: drivers/char/nvram.c:573:
+	PRINT_PROC("Extended memory: %d kB (configured), %d kB (tested)\n",
+	    nvram[9] | (nvram[10] << 8), nvram[34] | (nvram[35] << 8));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1603: FILE: drivers/char/nvram.c:578:
+	PRINT_PROC("FPU            : %sinstalled\n",
+	    (nvram[6] & 2) ? "" : "not ");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1628: FILE: drivers/char/nvram.c:597:
+	return (nvram_read_int(ATARI_CKS_LOC) == (~sum & 0xff) &&
+	    nvram_read_int(ATARI_CKS_LOC + 1) == (sum & 0xff));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1658: FILE: drivers/char/nvram.c:656:
+atari_proc_infos(unsigned char *nvram, char *buffer, int *len,
+    off_t *begin, off_t offset, int size)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1658: FILE: drivers/char/nvram.c:656:
+    off_t *begin, off_t offset, int size)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1685: FILE: drivers/char/nvram.c:675:
+	PRINT_PROC("SCSI arbitration : %s\n",
+	    (nvram[16] & 0x80) ? "on" : "off");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1721: FILE: drivers/char/nvram.c:698:
+	PRINT_PROC(dateformat[nvram[8] & 7],
+	    nvram[9] ? nvram[9] : '/', nvram[9] ? nvram[9] : '/');

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1731: FILE: drivers/char/nvram.c:705:
+		PRINT_PROC("%ds%s\n", nvram[10],
+		    nvram[10] < 8 ? ", no memory test" : "");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1747: FILE: drivers/char/nvram.c:709:
+	PRINT_PROC("Video mode       : %s colors, %d columns, %s %s monitor\n",
+	    colors[vmode & 7],

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1751: FILE: drivers/char/nvram.c:713:
+	PRINT_PROC("                   %soverscan, compat. mode %s%s\n",
+	    vmode & 64 ? "" : "no ",

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000443091.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 45 warnings, 50 checks, 1655 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000443091.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
