WARNING:TYPO_SPELLING: 'serie' may be misspelled - perhaps 'series'?
#24: 
> we need more than one serie, no way, or it can deadlock, the default
                        ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'serie' may be misspelled - perhaps 'series'?
#25: 
> serie is for pages, the other series are for pagetables.
  ^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
> >     for copy_page_range src?  Why distinguished from KM_SERIE_PAGETABLE?

WARNING:TYPO_SPELLING: 'serie' may be misspelled - perhaps 'series'?
#44: 
> different serie should be faster for fork(2).
            ^^^^^

WARNING:TYPO_SPELLING: 'contigous' may be misspelled - perhaps 'contiguous'?
#56: 
> physically contigous pages but it is not enforced and it may trigger
             ^^^^^^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#219: FILE: arch/i386/mm/init.c:168:
+	pmd = (pmd_t *)alloc_bootmem_low_pages(KERNEL_PGD_PTRS*PAGE_SIZE);
 	                                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#221: FILE: arch/i386/mm/init.c:170:
+		set_pgd(swapper_pg_dir+i, __pgd(1 + __pa(empty_zero_page)));
 		                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#223: FILE: arch/i386/mm/init.c:172:
+		set_pgd(swapper_pg_dir+i, __pgd(1 + __pa(pmd)));
 		                      ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#281: FILE: arch/i386/mm/init.c:199:
+		for (; entry < end; pmd++, entry += PTRS_PER_PTE*PAGE_SIZE)
 		                                                ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#284: FILE: arch/i386/mm/init.c:202:
+	else for (entry = 0; entry < end; pmd++) {

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#284: FILE: arch/i386/mm/init.c:202:
+	else for (entry = 0; entry < end; pmd++) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#284: FILE: arch/i386/mm/init.c:202:
+	}
+	else for (entry = 0; entry < end; pmd++) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#319: FILE: arch/i386/mm/init.c:220:
+	pte = (pte_t *)alloc_bootmem_low_pages(i*PAGE_SIZE);
 	                                        ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#335: FILE: arch/i386/mm/init.c:229:
+	kmap_pte = pte_offset(pmd_offset(pgd_offset_k(

CHECK:BRACES: braces {} should be used on all arms of this statement
#361: FILE: arch/i386/mm/init.c:283:
+		if (max_low_pfn < max_dma_pfn)
[...]
 		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#452: FILE: include/asm-i386/highmem.h:45:
+#define PKMAP_BASE	(KMAP_BASE + (KM_TYPE_NR*NR_CPUS*PAGE_SIZE))
                   	                        ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#452: FILE: include/asm-i386/highmem.h:45:
+#define PKMAP_BASE	(KMAP_BASE + (KM_TYPE_NR*NR_CPUS*PAGE_SIZE))
                   	                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#498: FILE: include/asm-i386/highmem.h:83:
+	if (!pte_none(*(kmap_pte+idx)))
 	                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#502: FILE: include/asm-i386/highmem.h:86:
+	set_pte(kmap_pte+idx, mk_pte(page, __pgprot(__PAGE_KERNEL)));
 	                ^

CHECK:SPACING: No space is necessary after a cast
#520: FILE: include/asm-i386/highmem.h:101:
+	vaddr = (unsigned long) kvaddr;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#521: FILE: include/asm-i386/highmem.h:102:
+	idx = type + KM_TYPE_NR*smp_processor_id();
 	                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#530: FILE: include/asm-i386/highmem.h:110:
+	pte_clear(kmap_pte+idx);
 	                  ^

CHECK:SPACING: No space is necessary after a cast
#562: FILE: include/asm-i386/pgtable.h:135:
+#define VMALLOC_START	(((unsigned long) high_memory + ~PMD_MASK) & PMD_MASK)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#600: FILE: mm/highmem.c:140:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#611: FILE: mm/highmem.c:160:
+		BUG();

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000483707.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 7 warnings, 15 checks, 499 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000483707.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
