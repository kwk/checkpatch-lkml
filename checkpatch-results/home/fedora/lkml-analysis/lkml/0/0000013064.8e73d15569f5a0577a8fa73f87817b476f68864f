WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#37: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#42: FILE: drivers/infiniband/hw/cxgb3/iwch_cq.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#81: FILE: drivers/infiniband/hw/cxgb3/iwch_cq.c:40:
+ * ^I0 ^I^I^IEMPTY;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#83: FILE: drivers/infiniband/hw/cxgb3/iwch_cq.c:42:
+ *^I-EAGAIN ^I^Icaller must try again$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#84: FILE: drivers/infiniband/hw/cxgb3/iwch_cq.c:43:
+ * ^Iany other -errno^Ifatal error$

CHECK:BRACES: braces {} should be used on all arms of this statement
#103: FILE: drivers/infiniband/hw/cxgb3/iwch_cq.c:62:
+	if (!qhp)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#105: FILE: drivers/infiniband/hw/cxgb3/iwch_cq.c:64:
+	else {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around qhp->wq
#107: FILE: drivers/infiniband/hw/cxgb3/iwch_cq.c:66:
+		wq = &(qhp->wq);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around chp->cq
#109: FILE: drivers/infiniband/hw/cxgb3/iwch_cq.c:68:
+	ret = cxio_poll_cq(wq, &(chp->cq), &cqe, &cqe_flushed, &cookie,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#110: FILE: drivers/infiniband/hw/cxgb3/iwch_cq.c:69:
+	ret = cxio_poll_cq(wq, &(chp->cq), &cqe, &cqe_flushed, &cookie,
+				   &credit);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#112: FILE: drivers/infiniband/hw/cxgb3/iwch_cq.c:71:
+^I^IPDBG("%s updating %d cq credits on id %d\n", __FUNCTION__, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#112: FILE: drivers/infiniband/hw/cxgb3/iwch_cq.c:71:
+		PDBG("%s updating %d cq credits on id %d\n", __FUNCTION__, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#128: FILE: drivers/infiniband/hw/cxgb3/iwch_cq.c:87:
+^I     "lo 0x%x cookie 0x%llx\n", __FUNCTION__, $

WARNING:SPLIT_STRING: quoted string split across lines
#128: FILE: drivers/infiniband/hw/cxgb3/iwch_cq.c:87:
+	PDBG("%s qpid 0x%x type %d opcode %d status 0x%x wrid hi 0x%x "
+	     "lo 0x%x cookie 0x%llx\n", __FUNCTION__, 

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#128: FILE: drivers/infiniband/hw/cxgb3/iwch_cq.c:87:
+	     "lo 0x%x cookie 0x%llx\n", __FUNCTION__, 

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#162: FILE: drivers/infiniband/hw/cxgb3/iwch_cq.c:121:
+			printk(KERN_ERR MOD "Unexpected opcode %d "

ERROR:TRAILING_WHITESPACE: trailing whitespace
#163: FILE: drivers/infiniband/hw/cxgb3/iwch_cq.c:122:
+^I^I^I       "in the CQE received for QPID=0x%0x\n", $

WARNING:SPLIT_STRING: quoted string split across lines
#163: FILE: drivers/infiniband/hw/cxgb3/iwch_cq.c:122:
+			printk(KERN_ERR MOD "Unexpected opcode %d "
+			       "in the CQE received for QPID=0x%0x\n", 

CHECK:BRACES: braces {} should be used on all arms of this statement
#170: FILE: drivers/infiniband/hw/cxgb3/iwch_cq.c:129:
+	if (cqe_flushed)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#172: FILE: drivers/infiniband/hw/cxgb3/iwch_cq.c:131:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#173: FILE: drivers/infiniband/hw/cxgb3/iwch_cq.c:132:
+^I^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#173: FILE: drivers/infiniband/hw/cxgb3/iwch_cq.c:132:
+	else {
+		

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#217: FILE: drivers/infiniband/hw/cxgb3/iwch_cq.c:176:
+			printk(KERN_ERR MOD "Unexpected cqe_status 0x%x for "

WARNING:SPLIT_STRING: quoted string split across lines
#218: FILE: drivers/infiniband/hw/cxgb3/iwch_cq.c:177:
+			printk(KERN_ERR MOD "Unexpected cqe_status 0x%x for "
+			       "QPID=0x%0x\n", CQE_STATUS(cqe), CQE_QPID(cqe));

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#242: FILE: drivers/infiniband/hw/cxgb3/iwch_cq.c:201:
+		int i=0;
 		     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#246: FILE: drivers/infiniband/hw/cxgb3/iwch_cq.c:205:
+^I ^I * Because T3 can post CQEs that are _not_ associated$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#246: FILE: drivers/infiniband/hw/cxgb3/iwch_cq.c:205:
+^I ^I * Because T3 can post CQEs that are _not_ associated$

ERROR:CODE_INDENT: code indent should use tabs where possible
#247: FILE: drivers/infiniband/hw/cxgb3/iwch_cq.c:206:
+^I ^I * with a WR, we might have to poll again after removing$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#247: FILE: drivers/infiniband/hw/cxgb3/iwch_cq.c:206:
+^I ^I * with a WR, we might have to poll again after removing$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#248: FILE: drivers/infiniband/hw/cxgb3/iwch_cq.c:207:
+^I ^I * one of these.  $

ERROR:CODE_INDENT: code indent should use tabs where possible
#248: FILE: drivers/infiniband/hw/cxgb3/iwch_cq.c:207:
+^I ^I * one of these.  $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#248: FILE: drivers/infiniband/hw/cxgb3/iwch_cq.c:207:
+^I ^I * one of these.  $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#253: FILE: drivers/infiniband/hw/cxgb3/iwch_cq.c:212:
+			BUG_ON(++i > 1000);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#261: FILE: drivers/infiniband/hw/cxgb3/iwch_cq.c:220:
+	if (err < 0)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#263: FILE: drivers/infiniband/hw/cxgb3/iwch_cq.c:222:
+	else {

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'iwch_modify_cq', this function's name, in a string
#270: FILE: drivers/infiniband/hw/cxgb3/iwch_cq.c:229:
+	PDBG("iwch_modify_cq: TBD\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000013064.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 18 warnings, 9 checks, 231 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000013064.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
