CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#132: FILE: drivers/pci/pci.c:645:
 }
+/**

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#186: FILE: drivers/pci/pci.c:687:
+	int error, ret=0;
 	              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#282: FILE: drivers/pci/pci.c:812:
+	int count=0;
 	         ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#325: FILE: drivers/pci/pci.c:2307:
+EXPORT_SYMBOL(pci_find_driver_by_name);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#365: FILE: drivers/pci/proc.c:575:
+	__u32 vendor=PCI_ANY_ID, device=PCI_ANY_ID, subvendor=PCI_ANY_ID,
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#365: FILE: drivers/pci/proc.c:575:
+	__u32 vendor=PCI_ANY_ID, device=PCI_ANY_ID, subvendor=PCI_ANY_ID,
 	                               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#365: FILE: drivers/pci/proc.c:575:
+	__u32 vendor=PCI_ANY_ID, device=PCI_ANY_ID, subvendor=PCI_ANY_ID,
 	                                                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#366: FILE: drivers/pci/proc.c:576:
+		subdevice=PCI_ANY_ID, class=0, class_mask=0;
 		         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#366: FILE: drivers/pci/proc.c:576:
+		subdevice=PCI_ANY_ID, class=0, class_mask=0;
 		                           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#366: FILE: drivers/pci/proc.c:576:
+		subdevice=PCI_ANY_ID, class=0, class_mask=0;
 		                                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#367: FILE: drivers/pci/proc.c:577:
+	unsigned long driver_data=0;
 	                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#368: FILE: drivers/pci/proc.c:578:
+	int fields=0;
 	          ^

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#371: FILE: drivers/pci/proc.c:580:
o+	fields = sscanf(buffer, "%15s %x %x %x %x %x %x %lux",

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:BRACES: braces {} are not necessary for single statement blocks
#409: FILE: drivers/pci/proc.c:621:
+		if (entry) {
+			entry->write_proc = proc_bus_pci_new_id_write;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#467: FILE: include/linux/pci.h:644:
+struct pci_driver * pci_find_driver_by_name(const char *name);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#474: FILE: linux/mod_devicetable.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:NEW_TYPEDEFS: do not add new typedefs
#485: FILE: linux/mod_devicetable.h:12:
+typedef unsigned long kernel_ulong_t;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#497: FILE: linux/mod_devicetable.h:24:
+
+

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#502: FILE: linux/pci-dynids.h:1:
+/*

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000315541.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 7 warnings, 2 checks, 423 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000315541.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
