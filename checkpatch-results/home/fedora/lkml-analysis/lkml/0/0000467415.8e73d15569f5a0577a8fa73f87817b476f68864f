WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

CHECK:BRACES: braces {} should be used on all arms of this statement
#93: FILE: sound/mad16.c:1036:
+	if (joystick == 1) {
[...]
+	else printk(KERN_ERR "mad16: gameport disabled.\n");
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#94: FILE: sound/mad16.c:1037:
+^I        /* register gameport */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#95: FILE: sound/mad16.c:1038:
+                if (!request_region(0x201, 1, "mad16 gameport"))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: sound/mad16.c:1038:
+                if (!request_region(0x201, 1, "mad16 gameport"))$

CHECK:BRACES: braces {} should be used on all arms of this statement
#95: FILE: sound/mad16.c:1038:
+                if (!request_region(0x201, 1, "mad16 gameport"))
[...]
+                else {
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#96: FILE: sound/mad16.c:1039:
+                        printk(KERN_ERR "mad16: gameport address 0x201 already in use\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: sound/mad16.c:1039:
+                        printk(KERN_ERR "mad16: gameport address 0x201 already in use\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#96: FILE: sound/mad16.c:1039:
+                        printk(KERN_ERR "mad16: gameport address 0x201 already in use\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#97: FILE: sound/mad16.c:1040:
+                else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: sound/mad16.c:1040:
+                else {$

CHECK:BRACES: Unbalanced braces around else statement
#97: FILE: sound/mad16.c:1040:
+                else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#98: FILE: sound/mad16.c:1041:
+			printk(KERN_ERR "mad16: gameport enabled at 0x201\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: sound/mad16.c:1042:
+                        gameport.io = 0x201;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: sound/mad16.c:1042:
+                        gameport.io = 0x201;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#100: FILE: sound/mad16.c:1043:
+^I^I        gameport_register_port(&gameport);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#101: FILE: sound/mad16.c:1044:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: sound/mad16.c:1044:
+                }$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#103: FILE: sound/mad16.c:1046:
+	else printk(KERN_ERR "mad16: gameport disabled.\n");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#103: FILE: sound/mad16.c:1046:
+	else printk(KERN_ERR "mad16: gameport disabled.\n");

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#103: FILE: sound/mad16.c:1046:
+	}
+	else printk(KERN_ERR "mad16: gameport disabled.\n");

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000467415.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 9 warnings, 3 checks, 85 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000467415.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
