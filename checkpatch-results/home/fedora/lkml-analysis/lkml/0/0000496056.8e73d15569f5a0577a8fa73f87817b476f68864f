WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
diff -urN virgin-2.4.16/arch/i386/kernel/mpparse.c linux-2.4.16-pci/arch/i386/kernel/mpparse.c

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#40: FILE: arch/i386/kernel/mpparse.c:40:
+int mp_bus_id_to_local [MAX_MP_BUSSES];

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#41: FILE: arch/i386/kernel/mpparse.c:41:
+int quad_local_to_mp_bus_id [NR_CPUS/4][4];

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#41: FILE: arch/i386/kernel/mpparse.c:41:
+int quad_local_to_mp_bus_id [NR_CPUS/4][4];
                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#60: FILE: arch/i386/kernel/mpparse.c:255:
+		quad_local_to_mp_bus_id[quad][translation_table[mpc_record]->trans_local] = m->mpc_busid;

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#61: FILE: arch/i386/kernel/mpparse.c:256:
+		printk("Bus #%d is %s (node %d)\n", m->mpc_busid, str, quad);

WARNING:LONG_LINE: line length of 157 exceeds 100 columns
#71: FILE: arch/i386/kernel/mpparse.c:333:
+	printk("Translation: record %d, type %d, quad %d, global %d, local %d\n", mpc_record, m->trans_type, m->trans_quad, m->trans_global, m->trans_local);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#71: FILE: arch/i386/kernel/mpparse.c:333:
+	printk("Translation: record %d, type %d, quad %d, global %d, local %d\n", mpc_record, m->trans_type, m->trans_quad, m->trans_global, m->trans_local);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#77: FILE: arch/i386/kernel/mpparse.c:339:
+	if (m->trans_quad+1 > numnodes)
 	                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#78: FILE: arch/i386/kernel/mpparse.c:340:
+		numnodes = m->trans_quad+1;
 		                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#103: FILE: arch/i386/kernel/pci-pc.c:32:
+#define QUADLOCAL2BUS(quad,local) (quad_local_to_mp_bus_id[quad][local])
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#107: FILE: arch/i386/kernel/pci-pc.c:36:
+#define QUADLOCAL2BUS(quad,local) (local)
                           ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'dev' may be better as '(dev)' to avoid precedence issues
#118: FILE: arch/i386/kernel/pci-pc.c:53:
+#define PCI_CONF1_ADDRESS(bus, dev, fn, reg) \
+	(0x80000000 | (BUS2LOCAL(bus) << 16) | (dev << 11) | (fn << 8) | (reg & ~3))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'fn' may be better as '(fn)' to avoid precedence issues
#118: FILE: arch/i386/kernel/pci-pc.c:53:
+#define PCI_CONF1_ADDRESS(bus, dev, fn, reg) \
+	(0x80000000 | (BUS2LOCAL(bus) << 16) | (dev << 11) | (fn << 8) | (reg & ~3))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#118: FILE: arch/i386/kernel/pci-pc.c:53:
+#define PCI_CONF1_ADDRESS(bus, dev, fn, reg) \
+	(0x80000000 | (BUS2LOCAL(bus) << 16) | (dev << 11) | (fn << 8) | (reg & ~3))

WARNING:LONG_LINE_COMMENT: line length of 114 exceeds 100 columns
#121: FILE: arch/i386/kernel/pci-pc.c:56:
+static int pci_conf1_read (int seg, int bus, int dev, int fn, int reg, int len, u32 *value) /* CONFIG_MULTIQUAD */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#121: FILE: arch/i386/kernel/pci-pc.c:56:
+static int pci_conf1_read (int seg, int bus, int dev, int fn, int reg, int len, u32 *value) /* CONFIG_MULTIQUAD */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bus > 255'
#125: FILE: arch/i386/kernel/pci-pc.c:60:
+	if (!value || (bus > 255) || (dev > 31) || (fn > 7) || (reg > 255))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev > 31'
#125: FILE: arch/i386/kernel/pci-pc.c:60:
+	if (!value || (bus > 255) || (dev > 31) || (fn > 7) || (reg > 255))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'fn > 7'
#125: FILE: arch/i386/kernel/pci-pc.c:60:
+	if (!value || (bus > 255) || (dev > 31) || (fn > 7) || (reg > 255))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reg > 255'
#125: FILE: arch/i386/kernel/pci-pc.c:60:
+	if (!value || (bus > 255) || (dev > 31) || (fn > 7) || (reg > 255))

WARNING:LONG_LINE_COMMENT: line length of 114 exceeds 100 columns
#149: FILE: arch/i386/kernel/pci-pc.c:84:
+static int pci_conf1_write (int seg, int bus, int dev, int fn, int reg, int len, u32 value) /* CONFIG_MULTIQUAD */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#149: FILE: arch/i386/kernel/pci-pc.c:84:
+static int pci_conf1_write (int seg, int bus, int dev, int fn, int reg, int len, u32 value) /* CONFIG_MULTIQUAD */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#153: FILE: arch/i386/kernel/pci-pc.c:88:
+^Iif ((bus > 255) || (dev > 31) || (fn > 7) || (reg > 255)) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'bus > 255'
#153: FILE: arch/i386/kernel/pci-pc.c:88:
+	if ((bus > 255) || (dev > 31) || (fn > 7) || (reg > 255)) 

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev > 31'
#153: FILE: arch/i386/kernel/pci-pc.c:88:
+	if ((bus > 255) || (dev > 31) || (fn > 7) || (reg > 255)) 

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'fn > 7'
#153: FILE: arch/i386/kernel/pci-pc.c:88:
+	if ((bus > 255) || (dev > 31) || (fn > 7) || (reg > 255)) 

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'reg > 255'
#153: FILE: arch/i386/kernel/pci-pc.c:88:
+	if ((bus > 255) || (dev > 31) || (fn > 7) || (reg > 255)) 

WARNING:LONG_LINE_COMMENT: line length of 115 exceeds 100 columns
#182: FILE: arch/i386/kernel/pci-pc.c:116:
+static int pci_conf1_read (int seg, int bus, int dev, int fn, int reg, int len, u32 *value) /* !CONFIG_MULTIQUAD */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#182: FILE: arch/i386/kernel/pci-pc.c:116:
+static int pci_conf1_read (int seg, int bus, int dev, int fn, int reg, int len, u32 *value) /* !CONFIG_MULTIQUAD */

WARNING:LONG_LINE_COMMENT: line length of 115 exceeds 100 columns
#191: FILE: arch/i386/kernel/pci-pc.c:144:
+static int pci_conf1_write (int seg, int bus, int dev, int fn, int reg, int len, u32 value) /* !CONFIG_MULTIQUAD */

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#191: FILE: arch/i386/kernel/pci-pc.c:144:
+static int pci_conf1_write (int seg, int bus, int dev, int fn, int reg, int len, u32 value) /* !CONFIG_MULTIQUAD */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#218: FILE: arch/i386/kernel/pci-pc.c:1103:
+			pci_scan_bus(QUADLOCAL2BUS(quad,busno), pci_root_ops, NULL);	/* Bus A */
 			                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#221: FILE: arch/i386/kernel/pci-pc.c:1105:
+			pci_scan_bus(QUADLOCAL2BUS(quad,suba+1), pci_root_ops, NULL);	/* Bus B */
 			                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#221: FILE: arch/i386/kernel/pci-pc.c:1105:
+			pci_scan_bus(QUADLOCAL2BUS(quad,suba+1), pci_root_ops, NULL);	/* Bus B */
 			                                    ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'numnodes > 1'
#238: FILE: arch/i386/kernel/pci-pc.c:1278:
+	if (clustered_apic_mode && (numnodes > 1)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#240: FILE: arch/i386/kernel/pci-pc.c:1280:
+^I^I^Iprintk("Scanning PCI bus %d for quad %d\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#240: FILE: arch/i386/kernel/pci-pc.c:1280:
+			printk("Scanning PCI bus %d for quad %d\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#241: FILE: arch/i386/kernel/pci-pc.c:1281:
+			printk("Scanning PCI bus %d for quad %d\n", 
+				quad_local_to_mp_bus_id[quad][0], quad);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#242: FILE: arch/i386/kernel/pci-pc.c:1282:
+^I^I^Ipci_scan_bus(quad_local_to_mp_bus_id[quad][0], $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#243: FILE: arch/i386/kernel/pci-pc.c:1283:
+			pci_scan_bus(quad_local_to_mp_bus_id[quad][0], 
+				pci_root_ops, NULL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#261: FILE: arch/i386/kernel/smpboot.c:978:
+        if (clustered_apic_mode && (numnodes > 1)) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: arch/i386/kernel/smpboot.c:978:
+        if (clustered_apic_mode && (numnodes > 1)) {$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'numnodes > 1'
#261: FILE: arch/i386/kernel/smpboot.c:978:
+        if (clustered_apic_mode && (numnodes > 1)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#262: FILE: arch/i386/kernel/smpboot.c:979:
+                printk("Remapping cross-quad port I/O for %d quads\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: arch/i386/kernel/smpboot.c:979:
+                printk("Remapping cross-quad port I/O for %d quads\n",$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#262: FILE: arch/i386/kernel/smpboot.c:979:
+                printk("Remapping cross-quad port I/O for %d quads\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#263: FILE: arch/i386/kernel/smpboot.c:980:
+                printk("Remapping cross-quad port I/O for %d quads\n",
+			numnodes);

ERROR:CODE_INDENT: code indent should use tabs where possible
#264: FILE: arch/i386/kernel/smpboot.c:981:
+                printk("xquad_portio vaddr 0x%08lx, len %08lx\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: arch/i386/kernel/smpboot.c:981:
+                printk("xquad_portio vaddr 0x%08lx, len %08lx\n",$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#264: FILE: arch/i386/kernel/smpboot.c:981:
+                printk("xquad_portio vaddr 0x%08lx, len %08lx\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#265: FILE: arch/i386/kernel/smpboot.c:982:
+                        (u_long) xquad_portio, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#265: FILE: arch/i386/kernel/smpboot.c:982:
+                        (u_long) xquad_portio, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#265: FILE: arch/i386/kernel/smpboot.c:982:
+                printk("xquad_portio vaddr 0x%08lx, len %08lx\n",
+                        (u_long) xquad_portio, 

CHECK:SPACING: No space is necessary after a cast
#265: FILE: arch/i386/kernel/smpboot.c:982:
+                        (u_long) xquad_portio, 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: arch/i386/kernel/smpboot.c:982:
+                        (u_long) xquad_portio, $

CHECK:SPACING: No space is necessary after a cast
#266: FILE: arch/i386/kernel/smpboot.c:983:
+			(u_long) numnodes * XQUAD_PORTIO_LEN);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#267: FILE: arch/i386/kernel/smpboot.c:984:
+                xquad_portio = ioremap (XQUAD_PORTIO_BASE, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#267: FILE: arch/i386/kernel/smpboot.c:984:
+                xquad_portio = ioremap (XQUAD_PORTIO_BASE, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: arch/i386/kernel/smpboot.c:984:
+                xquad_portio = ioremap (XQUAD_PORTIO_BASE, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#267: FILE: arch/i386/kernel/smpboot.c:984:
+                xquad_portio = ioremap (XQUAD_PORTIO_BASE, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#268: FILE: arch/i386/kernel/smpboot.c:985:
+                xquad_portio = ioremap (XQUAD_PORTIO_BASE, 
+			numnodes * XQUAD_PORTIO_LEN);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#303: FILE: include/asm-i386/io.h:251:
+#define __OUTQ(s,ss,x)    /* Do the equivalent of the portio op on quads */ \
                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#303: FILE: include/asm-i386/io.h:251:
+#define __OUTQ(s,ss,x)    /* Do the equivalent of the portio op on quads */ \
                    ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#303: FILE: include/asm-i386/io.h:251:
+#define __OUTQ(s,ss,x)    /* Do the equivalent of the portio op on quads */ \
 static inline void out##ss(unsigned x value, unsigned short port) { \
 	if (xquad_portio) \
 		write##s(value, (unsigned long) xquad_portio + port); \
 	else               /* We're still in early boot, running on quad 0 */ \
 		out##ss##_local(value, port); \
+} \
+static inline void out##ss##_quad(unsigned x value, unsigned short port, int quad) { \
+	if (xquad_portio) \
+		write##s(value, (unsigned long) xquad_portio + (XQUAD_PORTIO_QUAD*quad)\
+			+ port); \
+}

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#311: FILE: include/asm-i386/io.h:258:
+static inline void out##ss##_quad(unsigned x value, unsigned short port, int quad) { \

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#313: FILE: include/asm-i386/io.h:260:
+		write##s(value, (unsigned long) xquad_portio + (XQUAD_PORTIO_QUAD*quad)\

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#313: FILE: include/asm-i386/io.h:260:
+		write##s(value, (unsigned long) xquad_portio + (XQUAD_PORTIO_QUAD*quad)\
 		                                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#318: FILE: include/asm-i386/io.h:264:
+#define __INQ(s,ss)       /* Do the equivalent of the portio op on quads */ \
                ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#318: FILE: include/asm-i386/io.h:264:
+#define __INQ(s,ss)       /* Do the equivalent of the portio op on quads */ \
 static inline RETURN_TYPE in##ss(unsigned short port) { \
 	if (xquad_portio) \
 		return read##s((unsigned long) xquad_portio + port); \
 	else               /* We're still in early boot, running on quad 0 */ \
 		return in##ss##_local(port); \
+} \
+static inline RETURN_TYPE in##ss##_quad(unsigned short port, int quad) { \
+	if (xquad_portio) \
+		return read##s((unsigned long) xquad_portio + (XQUAD_PORTIO_QUAD*quad)\
+			+ port); \
+	else\
+		return 0;\
 }

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#325: FILE: include/asm-i386/io.h:271:
+static inline RETURN_TYPE in##ss##_quad(unsigned short port, int quad) { \

CHECK:SPACING: No space is necessary after a cast
#327: FILE: include/asm-i386/io.h:273:
+		return read##s((unsigned long) xquad_portio + (XQUAD_PORTIO_QUAD*quad)\

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#327: FILE: include/asm-i386/io.h:273:
+		return read##s((unsigned long) xquad_portio + (XQUAD_PORTIO_QUAD*quad)\
 		                                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#335: FILE: include/asm-i386/io.h:281:
+#define __OUT(s,s1,x) \
                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#335: FILE: include/asm-i386/io.h:281:
+#define __OUT(s,s1,x) \
                   ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#335: FILE: include/asm-i386/io.h:281:
+#define __OUT(s,s1,x) \
+__OUT1(s,x) __OUT2(s,s1,"w") : : "a" (value), "Nd" (port)); } \
+__OUT1(s##_p,x) __OUT2(s,s1,"w") __FULL_SLOW_DOWN_IO : : "a" (value), "Nd" (port));} 

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 's' - possible side-effects?
#335: FILE: include/asm-i386/io.h:281:
+#define __OUT(s,s1,x) \
+__OUT1(s,x) __OUT2(s,s1,"w") : : "a" (value), "Nd" (port)); } \
+__OUT1(s##_p,x) __OUT2(s,s1,"w") __FULL_SLOW_DOWN_IO : : "a" (value), "Nd" (port));} 

CHECK:MACRO_ARG_REUSE: Macro argument reuse 's1' - possible side-effects?
#335: FILE: include/asm-i386/io.h:281:
+#define __OUT(s,s1,x) \
+__OUT1(s,x) __OUT2(s,s1,"w") : : "a" (value), "Nd" (port)); } \
+__OUT1(s##_p,x) __OUT2(s,s1,"w") __FULL_SLOW_DOWN_IO : : "a" (value), "Nd" (port));} 

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#335: FILE: include/asm-i386/io.h:281:
+#define __OUT(s,s1,x) \
+__OUT1(s,x) __OUT2(s,s1,"w") : : "a" (value), "Nd" (port)); } \
+__OUT1(s##_p,x) __OUT2(s,s1,"w") __FULL_SLOW_DOWN_IO : : "a" (value), "Nd" (port));} 

WARNING:TYPO_SPELLING: 'Nd' may be misspelled - perhaps 'And'?
#336: FILE: include/asm-i386/io.h:282:
+__OUT1(s,x) __OUT2(s,s1,"w") : : "a" (value), "Nd" (port)); } \
                                                ^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#336: FILE: include/asm-i386/io.h:282:
+__OUT1(s,x) __OUT2(s,s1,"w") : : "a" (value), "Nd" (port)); } \
         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#336: FILE: include/asm-i386/io.h:282:
+__OUT1(s,x) __OUT2(s,s1,"w") : : "a" (value), "Nd" (port)); } \
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#336: FILE: include/asm-i386/io.h:282:
+__OUT1(s,x) __OUT2(s,s1,"w") : : "a" (value), "Nd" (port)); } \
                        ^

WARNING:TYPO_SPELLING: 'Nd' may be misspelled - perhaps 'And'?
#337: FILE: include/asm-i386/io.h:283:
+__OUT1(s##_p,x) __OUT2(s,s1,"w") __FULL_SLOW_DOWN_IO : : "a" (value), "Nd" (port));} 
                                                                        ^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#337: FILE: include/asm-i386/io.h:283:
+__OUT1(s##_p,x) __OUT2(s,s1,"w") __FULL_SLOW_DOWN_IO : : "a" (value), "Nd" (port));} $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#337: FILE: include/asm-i386/io.h:283:
+__OUT1(s##_p,x) __OUT2(s,s1,"w") __FULL_SLOW_DOWN_IO : : "a" (value), "Nd" (port));} 
             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#337: FILE: include/asm-i386/io.h:283:
+__OUT1(s##_p,x) __OUT2(s,s1,"w") __FULL_SLOW_DOWN_IO : : "a" (value), "Nd" (port));} 
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#337: FILE: include/asm-i386/io.h:283:
+__OUT1(s##_p,x) __OUT2(s,s1,"w") __FULL_SLOW_DOWN_IO : : "a" (value), "Nd" (port));} 
                            ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#337: FILE: include/asm-i386/io.h:283:
+__OUT1(s##_p,x) __OUT2(s,s1,"w") __FULL_SLOW_DOWN_IO : : "a" (value), "Nd" (port));} 
                                                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#340: FILE: include/asm-i386/io.h:286:
+#define __OUT(s,s1,x) \
                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#340: FILE: include/asm-i386/io.h:286:
+#define __OUT(s,s1,x) \
                   ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#340: FILE: include/asm-i386/io.h:286:
+#define __OUT(s,s1,x) \
+__OUT1(s##_local,x) __OUT2(s,s1,"w") : : "a" (value), "Nd" (port)); } \
+__OUT1(s##_p_local,x) __OUT2(s,s1,"w") __FULL_SLOW_DOWN_IO : : "a" (value), "Nd" (port));} \
+__OUTQ(s,s,x) \
+__OUTQ(s,s##_p,x) 

CHECK:MACRO_ARG_REUSE: Macro argument reuse 's' - possible side-effects?
#340: FILE: include/asm-i386/io.h:286:
+#define __OUT(s,s1,x) \
+__OUT1(s##_local,x) __OUT2(s,s1,"w") : : "a" (value), "Nd" (port)); } \
+__OUT1(s##_p_local,x) __OUT2(s,s1,"w") __FULL_SLOW_DOWN_IO : : "a" (value), "Nd" (port));} \
+__OUTQ(s,s,x) \
+__OUTQ(s,s##_p,x) 

CHECK:MACRO_ARG_REUSE: Macro argument reuse 's1' - possible side-effects?
#340: FILE: include/asm-i386/io.h:286:
+#define __OUT(s,s1,x) \
+__OUT1(s##_local,x) __OUT2(s,s1,"w") : : "a" (value), "Nd" (port)); } \
+__OUT1(s##_p_local,x) __OUT2(s,s1,"w") __FULL_SLOW_DOWN_IO : : "a" (value), "Nd" (port));} \
+__OUTQ(s,s,x) \
+__OUTQ(s,s##_p,x) 

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#340: FILE: include/asm-i386/io.h:286:
+#define __OUT(s,s1,x) \
+__OUT1(s##_local,x) __OUT2(s,s1,"w") : : "a" (value), "Nd" (port)); } \
+__OUT1(s##_p_local,x) __OUT2(s,s1,"w") __FULL_SLOW_DOWN_IO : : "a" (value), "Nd" (port));} \
+__OUTQ(s,s,x) \
+__OUTQ(s,s##_p,x) 

WARNING:TYPO_SPELLING: 'Nd' may be misspelled - perhaps 'And'?
#341: FILE: include/asm-i386/io.h:287:
+__OUT1(s##_local,x) __OUT2(s,s1,"w") : : "a" (value), "Nd" (port)); } \
                                                        ^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#341: FILE: include/asm-i386/io.h:287:
+__OUT1(s##_local,x) __OUT2(s,s1,"w") : : "a" (value), "Nd" (port)); } \
                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#341: FILE: include/asm-i386/io.h:287:
+__OUT1(s##_local,x) __OUT2(s,s1,"w") : : "a" (value), "Nd" (port)); } \
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#341: FILE: include/asm-i386/io.h:287:
+__OUT1(s##_local,x) __OUT2(s,s1,"w") : : "a" (value), "Nd" (port)); } \
                                ^

WARNING:TYPO_SPELLING: 'Nd' may be misspelled - perhaps 'And'?
#342: FILE: include/asm-i386/io.h:288:
+__OUT1(s##_p_local,x) __OUT2(s,s1,"w") __FULL_SLOW_DOWN_IO : : "a" (value), "Nd" (port));} \
                                                                              ^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#342: FILE: include/asm-i386/io.h:288:
+__OUT1(s##_p_local,x) __OUT2(s,s1,"w") __FULL_SLOW_DOWN_IO : : "a" (value), "Nd" (port));} \
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#342: FILE: include/asm-i386/io.h:288:
+__OUT1(s##_p_local,x) __OUT2(s,s1,"w") __FULL_SLOW_DOWN_IO : : "a" (value), "Nd" (port));} \
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#342: FILE: include/asm-i386/io.h:288:
+__OUT1(s##_p_local,x) __OUT2(s,s1,"w") __FULL_SLOW_DOWN_IO : : "a" (value), "Nd" (port));} \
                                  ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#342: FILE: include/asm-i386/io.h:288:
+__OUT1(s##_p_local,x) __OUT2(s,s1,"w") __FULL_SLOW_DOWN_IO : : "a" (value), "Nd" (port));} \
                                                                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#343: FILE: include/asm-i386/io.h:289:
+__OUTQ(s,s,x) \
         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#343: FILE: include/asm-i386/io.h:289:
+__OUTQ(s,s,x) \
           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#344: FILE: include/asm-i386/io.h:290:
+__OUTQ(s,s##_p,x) $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#344: FILE: include/asm-i386/io.h:290:
+__OUTQ(s,s##_p,x) 
         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#344: FILE: include/asm-i386/io.h:290:
+__OUTQ(s,s##_p,x) 
               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#366: FILE: include/asm-i386/io.h:305:
+#define __IN(s,s1,i...) \
               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#366: FILE: include/asm-i386/io.h:305:
+#define __IN(s,s1,i...) \
                  ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#366: FILE: include/asm-i386/io.h:305:
+#define __IN(s,s1,i...) \
+__IN1(s##_local) __IN2(s,s1,"w") : "=a" (_v) : "Nd" (port) ,##i ); return _v; } \
+__IN1(s##_p_local) __IN2(s,s1,"w") __FULL_SLOW_DOWN_IO : "=a" (_v) : "Nd" (port) ,##i ); return _v; } \
+__INQ(s,s) \
+__INQ(s,s##_p) 

CHECK:MACRO_ARG_REUSE: Macro argument reuse 's' - possible side-effects?
#366: FILE: include/asm-i386/io.h:305:
+#define __IN(s,s1,i...) \
+__IN1(s##_local) __IN2(s,s1,"w") : "=a" (_v) : "Nd" (port) ,##i ); return _v; } \
+__IN1(s##_p_local) __IN2(s,s1,"w") __FULL_SLOW_DOWN_IO : "=a" (_v) : "Nd" (port) ,##i ); return _v; } \
+__INQ(s,s) \
+__INQ(s,s##_p) 

CHECK:MACRO_ARG_REUSE: Macro argument reuse 's1' - possible side-effects?
#366: FILE: include/asm-i386/io.h:305:
+#define __IN(s,s1,i...) \
+__IN1(s##_local) __IN2(s,s1,"w") : "=a" (_v) : "Nd" (port) ,##i ); return _v; } \
+__IN1(s##_p_local) __IN2(s,s1,"w") __FULL_SLOW_DOWN_IO : "=a" (_v) : "Nd" (port) ,##i ); return _v; } \
+__INQ(s,s) \
+__INQ(s,s##_p) 

WARNING:TYPO_SPELLING: 'Nd' may be misspelled - perhaps 'And'?
#367: FILE: include/asm-i386/io.h:306:
+__IN1(s##_local) __IN2(s,s1,"w") : "=a" (_v) : "Nd" (port) ,##i ); return _v; } \
                                                 ^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#367: FILE: include/asm-i386/io.h:306:
+__IN1(s##_local) __IN2(s,s1,"w") : "=a" (_v) : "Nd" (port) ,##i ); return _v; } \
                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#367: FILE: include/asm-i386/io.h:306:
+__IN1(s##_local) __IN2(s,s1,"w") : "=a" (_v) : "Nd" (port) ,##i ); return _v; } \
                            ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#367: FILE: include/asm-i386/io.h:306:
+__IN1(s##_local) __IN2(s,s1,"w") : "=a" (_v) : "Nd" (port) ,##i ); return _v; } \
                                                            ^

ERROR:SPACING: space required after that ',' (ctx:WxV)
#367: FILE: include/asm-i386/io.h:306:
+__IN1(s##_local) __IN2(s,s1,"w") : "=a" (_v) : "Nd" (port) ,##i ); return _v; } \
                                                            ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#367: FILE: include/asm-i386/io.h:306:
+__IN1(s##_local) __IN2(s,s1,"w") : "=a" (_v) : "Nd" (port) ,##i ); return _v; } \

WARNING:TYPO_SPELLING: 'Nd' may be misspelled - perhaps 'And'?
#368: FILE: include/asm-i386/io.h:307:
+__IN1(s##_p_local) __IN2(s,s1,"w") __FULL_SLOW_DOWN_IO : "=a" (_v) : "Nd" (port) ,##i ); return _v; } \
                                                                       ^^

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#368: FILE: include/asm-i386/io.h:307:
+__IN1(s##_p_local) __IN2(s,s1,"w") __FULL_SLOW_DOWN_IO : "=a" (_v) : "Nd" (port) ,##i ); return _v; } \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#368: FILE: include/asm-i386/io.h:307:
+__IN1(s##_p_local) __IN2(s,s1,"w") __FULL_SLOW_DOWN_IO : "=a" (_v) : "Nd" (port) ,##i ); return _v; } \
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#368: FILE: include/asm-i386/io.h:307:
+__IN1(s##_p_local) __IN2(s,s1,"w") __FULL_SLOW_DOWN_IO : "=a" (_v) : "Nd" (port) ,##i ); return _v; } \
                              ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#368: FILE: include/asm-i386/io.h:307:
+__IN1(s##_p_local) __IN2(s,s1,"w") __FULL_SLOW_DOWN_IO : "=a" (_v) : "Nd" (port) ,##i ); return _v; } \
                                                                                  ^

ERROR:SPACING: space required after that ',' (ctx:WxV)
#368: FILE: include/asm-i386/io.h:307:
+__IN1(s##_p_local) __IN2(s,s1,"w") __FULL_SLOW_DOWN_IO : "=a" (_v) : "Nd" (port) ,##i ); return _v; } \
                                                                                  ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#368: FILE: include/asm-i386/io.h:307:
+__IN1(s##_p_local) __IN2(s,s1,"w") __FULL_SLOW_DOWN_IO : "=a" (_v) : "Nd" (port) ,##i ); return _v; } \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#369: FILE: include/asm-i386/io.h:308:
+__INQ(s,s) \
        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#370: FILE: include/asm-i386/io.h:309:
+__INQ(s,s##_p) $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#370: FILE: include/asm-i386/io.h:309:
+__INQ(s,s##_p) 
        ^

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#381: FILE: include/asm-i386/mpspec.h:201:
+extern int mp_bus_id_to_node [MAX_MP_BUSSES];

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#382: FILE: include/asm-i386/mpspec.h:202:
+extern int mp_bus_id_to_local [MAX_MP_BUSSES];

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#383: FILE: include/asm-i386/mpspec.h:203:
+extern int quad_local_to_mp_bus_id [NR_CPUS/4][4];

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#383: FILE: include/asm-i386/mpspec.h:203:
+extern int quad_local_to_mp_bus_id [NR_CPUS/4][4];
                                            ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000496056.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 67 errors, 29 warnings, 38 checks, 323 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000496056.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
