CHECK:CAMELCASE: Avoid CamelCase: <InterruptTheCard>
#227: FILE: drivers/char/isicom.c:290:
+	InterruptTheCard(base);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#252: FILE: drivers/char/isicom.c:310:
 }
+static inline void drop_rts(struct isi_port *port)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#340: FILE: drivers/char/isicom.c:388:
 
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#346: FILE: drivers/char/isicom.c:393:
+	if (inw(base+0xe)&0x1)
 	            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#346: FILE: drivers/char/isicom.c:393:
+	if (inw(base+0xe)&0x1)
 	                 ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#378: FILE: drivers/char/isicom.c:417:
+	if (base==0)
 	        ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#415: FILE: drivers/char/isicom.c:424:
+		printk(KERN_DEBUG "ISILoad:Resetting Card%d at 0x%x ",card+1,base);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#415: FILE: drivers/char/isicom.c:424:
+		printk(KERN_DEBUG "ISILoad:Resetting Card%d at 0x%x ",card+1,base);
 		                                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#415: FILE: drivers/char/isicom.c:424:
+		printk(KERN_DEBUG "ISILoad:Resetting Card%d at 0x%x ",card+1,base);
 		                                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#415: FILE: drivers/char/isicom.c:424:
+		printk(KERN_DEBUG "ISILoad:Resetting Card%d at 0x%x ",card+1,base);
 		                                                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#417: FILE: drivers/char/isicom.c:426:
+		inw(base+0x8);
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#419: FILE: drivers/char/isicom.c:428:
+		for (t=jiffies+HZ/100;time_before(jiffies, t););
 		      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#419: FILE: drivers/char/isicom.c:428:
+		for (t=jiffies+HZ/100;time_before(jiffies, t););
 		              ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#419: FILE: drivers/char/isicom.c:428:
+		for (t=jiffies+HZ/100;time_before(jiffies, t););
 		                 ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#419: FILE: drivers/char/isicom.c:428:
+		for (t=jiffies+HZ/100;time_before(jiffies, t););
 		                     ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#419: FILE: drivers/char/isicom.c:428:
+		for (t=jiffies+HZ/100;time_before(jiffies, t););

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#421: FILE: drivers/char/isicom.c:430:
+		outw(0,base+0x8); /* Reset */
 		      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#421: FILE: drivers/char/isicom.c:430:
+		outw(0,base+0x8); /* Reset */
 		           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#423: FILE: drivers/char/isicom.c:432:
+		for (j=1;j<=3;j++) {
 		      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#423: FILE: drivers/char/isicom.c:432:
+		for (j=1;j<=3;j++) {
 		        ^

ERROR:SPACING: spaces required around that '<=' (ctx:VxV)
#423: FILE: drivers/char/isicom.c:432:
+		for (j=1;j<=3;j++) {
 		          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#423: FILE: drivers/char/isicom.c:432:
+		for (j=1;j<=3;j++) {
 		             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#424: FILE: drivers/char/isicom.c:433:
+			for (t=jiffies+HZ;time_before(jiffies, t););
 			      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#424: FILE: drivers/char/isicom.c:433:
+			for (t=jiffies+HZ;time_before(jiffies, t););
 			              ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#424: FILE: drivers/char/isicom.c:433:
+			for (t=jiffies+HZ;time_before(jiffies, t););
 			                 ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#424: FILE: drivers/char/isicom.c:433:
+			for (t=jiffies+HZ;time_before(jiffies, t););

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#425: FILE: drivers/char/isicom.c:434:
+			printk(".");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#427: FILE: drivers/char/isicom.c:436:
+		signature=(inw(base+0x4)) & 0xff;
 		         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#427: FILE: drivers/char/isicom.c:436:
+		signature=(inw(base+0x4)) & 0xff;
 		                   ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#429: FILE: drivers/char/isicom.c:438:
+		if (isi_card[card].isa) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#430: FILE: drivers/char/isicom.c:439:
+			if (!(inw(base+0xe) & 0x1) || (inw(base+0x2))) {
 			              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#430: FILE: drivers/char/isicom.c:439:
+			if (!(inw(base+0xe) & 0x1) || (inw(base+0x2))) {
 			                                       ^

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#433: FILE: drivers/char/isicom.c:441:
+				printk("\nbase+0x2=0x%x , base+0xe=0x%x",inw(base+0x2),inw(base+0xe));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#433: FILE: drivers/char/isicom.c:441:
+				printk("\nbase+0x2=0x%x , base+0xe=0x%x",inw(base+0x2),inw(base+0xe));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#433: FILE: drivers/char/isicom.c:441:
+				printk("\nbase+0x2=0x%x , base+0xe=0x%x",inw(base+0x2),inw(base+0xe));
 				                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#433: FILE: drivers/char/isicom.c:441:
+				printk("\nbase+0x2=0x%x , base+0xe=0x%x",inw(base+0x2),inw(base+0xe));
 				                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#433: FILE: drivers/char/isicom.c:441:
+				printk("\nbase+0x2=0x%x , base+0xe=0x%x",inw(base+0x2),inw(base+0xe));
 				                                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#433: FILE: drivers/char/isicom.c:441:
+				printk("\nbase+0x2=0x%x , base+0xe=0x%x",inw(base+0x2),inw(base+0xe));
 				                                                               ^

WARNING:LONG_LINE: line length of 129 exceeds 100 columns
#463: FILE: drivers/char/isicom.c:443:
+				printk("\nISILoad:ISA Card%d reset failure (Possible bad I/O Port Address 0x%x).\n",card+1,base);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#463: FILE: drivers/char/isicom.c:443:
+				printk("\nISILoad:ISA Card%d reset failure (Possible bad I/O Port Address 0x%x).\n",card+1,base);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#463: FILE: drivers/char/isicom.c:443:
+				printk("\nISILoad:ISA Card%d reset failure (Possible bad I/O Port Address 0x%x).\n",card+1,base);
 				                                                                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#463: FILE: drivers/char/isicom.c:443:
+				printk("\nISILoad:ISA Card%d reset failure (Possible bad I/O Port Address 0x%x).\n",card+1,base);
 				                                                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#463: FILE: drivers/char/isicom.c:443:
+				printk("\nISILoad:ISA Card%d reset failure (Possible bad I/O Port Address 0x%x).\n",card+1,base);
 				                                                                                          ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#467: FILE: drivers/char/isicom.c:447:
+		}
+		else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#467: FILE: drivers/char/isicom.c:447:
+		else {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#468: FILE: drivers/char/isicom.c:448:
+			portcount = inw(base+0x2);
 			                    ^

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#469: FILE: drivers/char/isicom.c:449:
+			if (!(inw(base+0xe) & 0x1) || ((portcount!=0) && (portcount!=4) && (portcount!=8))) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#469: FILE: drivers/char/isicom.c:449:
+			if (!(inw(base+0xe) & 0x1) || ((portcount!=0) && (portcount!=4) && (portcount!=8))) {
 			              ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#469: FILE: drivers/char/isicom.c:449:
+			if (!(inw(base+0xe) & 0x1) || ((portcount!=0) && (portcount!=4) && (portcount!=8))) {
 			                                         ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#469: FILE: drivers/char/isicom.c:449:
+			if (!(inw(base+0xe) & 0x1) || ((portcount!=0) && (portcount!=4) && (portcount!=8))) {
 			                                                           ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#469: FILE: drivers/char/isicom.c:449:
+			if (!(inw(base+0xe) & 0x1) || ((portcount!=0) && (portcount!=4) && (portcount!=8))) {
 			                                                                             ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'portcount!=0'
#469: FILE: drivers/char/isicom.c:449:
+			if (!(inw(base+0xe) & 0x1) || ((portcount!=0) && (portcount!=4) && (portcount!=8))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'portcount!=4'
#469: FILE: drivers/char/isicom.c:449:
+			if (!(inw(base+0xe) & 0x1) || ((portcount!=0) && (portcount!=4) && (portcount!=8))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'portcount!=8'
#469: FILE: drivers/char/isicom.c:449:
+			if (!(inw(base+0xe) & 0x1) || ((portcount!=0) && (portcount!=4) && (portcount!=8))) {

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#471: FILE: drivers/char/isicom.c:451:
+				printk("\nbase+0x2=0x%x , base+0xe=0x%x",inw(base+0x2),inw(base+0xe));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#471: FILE: drivers/char/isicom.c:451:
+				printk("\nbase+0x2=0x%x , base+0xe=0x%x",inw(base+0x2),inw(base+0xe));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#471: FILE: drivers/char/isicom.c:451:
+				printk("\nbase+0x2=0x%x , base+0xe=0x%x",inw(base+0x2),inw(base+0xe));
 				                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#471: FILE: drivers/char/isicom.c:451:
+				printk("\nbase+0x2=0x%x , base+0xe=0x%x",inw(base+0x2),inw(base+0xe));
 				                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#471: FILE: drivers/char/isicom.c:451:
+				printk("\nbase+0x2=0x%x , base+0xe=0x%x",inw(base+0x2),inw(base+0xe));
 				                                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#471: FILE: drivers/char/isicom.c:451:
+				printk("\nbase+0x2=0x%x , base+0xe=0x%x",inw(base+0x2),inw(base+0xe));
 				                                                               ^

WARNING:LONG_LINE: line length of 129 exceeds 100 columns
#473: FILE: drivers/char/isicom.c:453:
+				printk("\nISILoad:PCI Card%d reset failure (Possible bad I/O Port Address 0x%x).\n",card+1,base);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#473: FILE: drivers/char/isicom.c:453:
+				printk("\nISILoad:PCI Card%d reset failure (Possible bad I/O Port Address 0x%x).\n",card+1,base);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#473: FILE: drivers/char/isicom.c:453:
+				printk("\nISILoad:PCI Card%d reset failure (Possible bad I/O Port Address 0x%x).\n",card+1,base);
 				                                                                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#473: FILE: drivers/char/isicom.c:453:
+				printk("\nISILoad:PCI Card%d reset failure (Possible bad I/O Port Address 0x%x).\n",card+1,base);
 				                                                                                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#473: FILE: drivers/char/isicom.c:453:
+				printk("\nISILoad:PCI Card%d reset failure (Possible bad I/O Port Address 0x%x).\n",card+1,base);
 				                                                                                          ^

ERROR:SPACING: space required before the open parenthesis '('
#480: FILE: drivers/char/isicom.c:457:
+		switch(signature) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#484: FILE: drivers/char/isicom.c:461:
+				if (isi_card[card].isa)
[...]
+				else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#486: FILE: drivers/char/isicom.c:463:
+				else {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#495: FILE: drivers/char/isicom.c:472:
+		case	0xcc:	isi_card[card].port_count = 16;

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#499: FILE: drivers/char/isicom.c:476:
+		default: printk("ISILoad:Card%d reset failure (Possible bad I/O Port Address 0x%x).\n",card+1,base);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#499: FILE: drivers/char/isicom.c:476:
+		default: printk("ISILoad:Card%d reset failure (Possible bad I/O Port Address 0x%x).\n",card+1,base);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#499: FILE: drivers/char/isicom.c:476:
+		default: printk("ISILoad:Card%d reset failure (Possible bad I/O Port Address 0x%x).\n",card+1,base);
 		                                                                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#499: FILE: drivers/char/isicom.c:476:
+		default: printk("ISILoad:Card%d reset failure (Possible bad I/O Port Address 0x%x).\n",card+1,base);
 		                                                                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#499: FILE: drivers/char/isicom.c:476:
+		default: printk("ISILoad:Card%d reset failure (Possible bad I/O Port Address 0x%x).\n",card+1,base);
 		                                                                                             ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#499: FILE: drivers/char/isicom.c:476:
+		default: printk("ISILoad:Card%d reset failure (Possible bad I/O Port Address 0x%x).\n",card+1,base);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#501: FILE: drivers/char/isicom.c:478:
+			printk("Sig=0x%x\n",signature);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#501: FILE: drivers/char/isicom.c:478:
+			printk("Sig=0x%x\n",signature);
 			                   ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#505: FILE: drivers/char/isicom.c:482:
+		printk("-Done\n");

ERROR:SPACING: space required after that ',' (ctx:VxV)
#506: FILE: drivers/char/isicom.c:483:
+		return put_user(signature,(unsigned __user *)argp);
 		                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#523: FILE: drivers/char/isicom.c:495:
+			outw(0xf0,base); /* start upload sequence */
 			         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#537: FILE: drivers/char/isicom.c:503:
+			for (i=0;i<=0x2f;i++);	/* a wee bit of delay */
 			      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#537: FILE: drivers/char/isicom.c:503:
+			for (i=0;i<=0x2f;i++);	/* a wee bit of delay */
 			        ^

ERROR:SPACING: spaces required around that '<=' (ctx:VxV)
#537: FILE: drivers/char/isicom.c:503:
+			for (i=0;i<=0x2f;i++);	/* a wee bit of delay */
 			          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#537: FILE: drivers/char/isicom.c:503:
+			for (i=0;i<=0x2f;i++);	/* a wee bit of delay */
 			                ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#537: FILE: drivers/char/isicom.c:503:
+			for (i=0;i<=0x2f;i++);	/* a wee bit of delay */

CHECK:CAMELCASE: Avoid CamelCase: <WaitTillCardIsFree>
#539: FILE: drivers/char/isicom.c:505:
+			if (WaitTillCardIsFree(base))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#545: FILE: drivers/char/isicom.c:509:
+				printk(KERN_WARNING "ISILoad:Card%d rejected load header:\nAddress:0x%x \nCount:0x%x \nStatus:0x%x \n",

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#545: FILE: drivers/char/isicom.c:509:
+				printk(KERN_WARNING "ISILoad:Card%d rejected load header:\nAddress:0x%x \nCount:0x%x \nStatus:0x%x \n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#546: FILE: drivers/char/isicom.c:510:
+				printk(KERN_WARNING "ISILoad:Card%d rejected load header:\nAddress:0x%x \nCount:0x%x \nStatus:0x%x \n",
 				card+1, frame.addr, frame.count, status);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#558: FILE: drivers/char/isicom.c:517:
+			for (i=0;i<=0x0f;i++);	/* another wee bit of delay */
 			      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#558: FILE: drivers/char/isicom.c:517:
+			for (i=0;i<=0x0f;i++);	/* another wee bit of delay */
 			        ^

ERROR:SPACING: spaces required around that '<=' (ctx:VxV)
#558: FILE: drivers/char/isicom.c:517:
+			for (i=0;i<=0x0f;i++);	/* another wee bit of delay */
 			          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#558: FILE: drivers/char/isicom.c:517:
+			for (i=0;i<=0x0f;i++);	/* another wee bit of delay */
 			                ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#558: FILE: drivers/char/isicom.c:517:
+			for (i=0;i<=0x0f;i++);	/* another wee bit of delay */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#587: FILE: drivers/char/isicom.c:538:
+			outw(0xf1,base); /* start download sequence */
 			         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#601: FILE: drivers/char/isicom.c:546:
+			for (i=0;i<=0xf;i++);	/* a wee bit of delay */
 			      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#601: FILE: drivers/char/isicom.c:546:
+			for (i=0;i<=0xf;i++);	/* a wee bit of delay */
 			        ^

ERROR:SPACING: spaces required around that '<=' (ctx:VxV)
#601: FILE: drivers/char/isicom.c:546:
+			for (i=0;i<=0xf;i++);	/* a wee bit of delay */
 			          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#601: FILE: drivers/char/isicom.c:546:
+			for (i=0;i<=0xf;i++);	/* a wee bit of delay */
 			               ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#601: FILE: drivers/char/isicom.c:546:
+			for (i=0;i<=0xf;i++);	/* a wee bit of delay */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#609: FILE: drivers/char/isicom.c:552:
+				printk(KERN_WARNING "ISILoad:Card%d rejected verify header:\nAddress:0x%x \nCount:0x%x \nStatus:0x%x \n",

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#609: FILE: drivers/char/isicom.c:552:
+				printk(KERN_WARNING "ISILoad:Card%d rejected verify header:\nAddress:0x%x \nCount:0x%x \nStatus:0x%x \n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#610: FILE: drivers/char/isicom.c:553:
+				printk(KERN_WARNING "ISILoad:Card%d rejected verify header:\nAddress:0x%x \nCount:0x%x \nStatus:0x%x \n",
 				card+1, frame.addr, frame.count, status);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#623: FILE: drivers/char/isicom.c:561:
+			for (i=0;i<=0x0f;i++);	/* another wee bit of delay */
 			      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#623: FILE: drivers/char/isicom.c:561:
+			for (i=0;i<=0x0f;i++);	/* another wee bit of delay */
 			        ^

ERROR:SPACING: spaces required around that '<=' (ctx:VxV)
#623: FILE: drivers/char/isicom.c:561:
+			for (i=0;i<=0x0f;i++);	/* another wee bit of delay */
 			          ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#623: FILE: drivers/char/isicom.c:561:
+			for (i=0;i<=0x0f;i++);	/* another wee bit of delay */
 			                ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#623: FILE: drivers/char/isicom.c:561:
+			for (i=0;i<=0x0f;i++);	/* another wee bit of delay */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#657: FILE: drivers/char/isicom.c:586:
+			outw(0x0, base+0x4); /* for ISI4608 cards */
 			              ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#668: FILE: drivers/char/isicom.c:593:
+		printk(KERN_DEBUG "ISILoad: Received Ioctl cmd 0x%x.\n", cmd);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#687: FILE: drivers/char/isicom.c:606:
+static inline int isicom_paranoia_check(struct isi_port const *port, char *name,
+	const char *routine)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#769: FILE: drivers/char/isicom.c:669:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tty"
#770: FILE: drivers/char/isicom.c:670:
+		if (tty == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#790: FILE: drivers/char/isicom.c:685:
+		printk(KERN_DEBUG "ISICOM: txing %d bytes, port%d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#791: FILE: drivers/char/isicom.c:686:
+		printk(KERN_DEBUG "ISICOM: txing %d bytes, port%d.\n",
+				txcount, port->channel+1);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#791: FILE: drivers/char/isicom.c:686:
+				txcount, port->channel+1);
 				                      ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#842: FILE: drivers/char/isicom.c:744:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#848: FILE: drivers/char/isicom.c:748:
 
+

CHECK:SPACING: No space is necessary after a cast
#854: FILE: drivers/char/isicom.c:751:
+	struct isi_port *port = (struct isi_port *) data;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#918: FILE: drivers/char/isicom.c:804:
+			outw(0x0000, base+0x04); /* enable interrupts */
 			                 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#973: FILE: drivers/char/isicom.c:844:
+						printk(KERN_DEBUG "ISICOM: interrupt: DCD->low.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#984: FILE: drivers/char/isicom.c:854:
+						printk(KERN_DEBUG "ISICOM: interrupt: DCD->high.\n");

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1009: FILE: drivers/char/isicom.c:861:
+			}
+			else {

CHECK:BRACES: Unbalanced braces around else statement
#1009: FILE: drivers/char/isicom.c:861:
+			else {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1045: FILE: drivers/char/isicom.c:885:
+			}
+			else {

CHECK:BRACES: Unbalanced braces around else statement
#1045: FILE: drivers/char/isicom.c:885:
+			else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1091: FILE: drivers/char/isicom.c:912:
+			printk(KERN_DEBUG "ISICOM: isicom_interrupt: stats!!!.\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'isicom_interrupt', this function's name, in a string
#1091: FILE: drivers/char/isicom.c:912:
+			printk(KERN_DEBUG "ISICOM: isicom_interrupt: stats!!!.\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1095: FILE: drivers/char/isicom.c:916:
+			printk(KERN_WARNING "ISICOM: Intr: Unknown code in status packet.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1104: FILE: drivers/char/isicom.c:924:
+		printk(KERN_DEBUG "ISICOM: Intr: Can rx %d of %d bytes.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1105: FILE: drivers/char/isicom.c:925:
+		printk(KERN_DEBUG "ISICOM: Intr: Can rx %d of %d bytes.\n",
 					count, byte_count);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1124: FILE: drivers/char/isicom.c:947:
+		outw(0x0000, base+0x04); /* enable interrupts */
 		                 ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1165: FILE: drivers/char/isicom.c:977:
 	if (baud == 15) {
+

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#1178: FILE: drivers/char/isicom.c:986:
+			baud +=2; /*  115  Kbps */
 			     ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1189: FILE: drivers/char/isicom.c:993:
+	}
+	else

CHECK:SPACING: No space is necessary after a cast
#1331: FILE: drivers/char/isicom.c:1097:
+		port->xmit_buf = (unsigned char *) page;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1360: FILE: drivers/char/isicom.c:1118:
+static int block_til_ready(struct tty_struct *tty, struct file *filp, struct isi_port *port)
                                                                 ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1420: FILE: drivers/char/isicom.c:1166:
+		if (tty_hung_up_p(filp) || !(port->flags & ASYNC_INITIALIZED)) {
 		                  ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1450: FILE: drivers/char/isicom.c:1196:
+static int isicom_open(struct tty_struct *tty, struct file *filp)
                                                             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1572: FILE: drivers/char/isicom.c:1295:
+static void isicom_close(struct tty_struct *tty, struct file *filp)
                                                               ^^^^

CHECK:SPACING: No space is necessary after a cast
#1576: FILE: drivers/char/isicom.c:1297:
+	struct isi_port *port = (struct isi_port *) tty->driver_data;

WARNING:SPLIT_STRING: quoted string split across lines
#1609: FILE: drivers/char/isicom.c:1324:
 		printk(KERN_WARNING "ISICOM:(0x%x) isicom_close: bad port count for"
+			"channel%d = %d", card->base, port->channel,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:MISSING_SPACE: break quoted strings at a space character
#1609: FILE: drivers/char/isicom.c:1324:
 		printk(KERN_WARNING "ISICOM:(0x%x) isicom_close: bad port count for"
+			"channel%d = %d", card->base, port->channel,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1669: FILE: drivers/char/isicom.c:1374:
+static int isicom_write(struct tty_struct *tty,	const unsigned char *buf,
+	int count)

CHECK:SPACING: No space is necessary after a cast
#1673: FILE: drivers/char/isicom.c:1376:
+	struct isi_port *port = (struct isi_port *) tty->driver_data;

ERROR:SPACING: space required before the open parenthesis '('
#1690: FILE: drivers/char/isicom.c:1389:
+	while(1) {

CHECK:SPACING: No space is necessary after a cast
#1720: FILE: drivers/char/isicom.c:1411:
+	struct isi_port *port = (struct isi_port *) tty->driver_data;

CHECK:SPACING: No space is necessary after a cast
#1750: FILE: drivers/char/isicom.c:1436:
+	struct isi_port *port = (struct isi_port *) tty->driver_data;

CHECK:SPACING: No space is necessary after a cast
#1771: FILE: drivers/char/isicom.c:1452:
+	struct isi_port *port = (struct isi_port *) tty->driver_data;

CHECK:SPACING: No space is necessary after a cast
#1789: FILE: drivers/char/isicom.c:1467:
+	struct isi_port *port = (struct isi_port *) tty->driver_data;

CHECK:SPACING: No space is necessary after a cast
#1818: FILE: drivers/char/isicom.c:1492:
+	struct isi_port *port = (struct isi_port *) tty->driver_data;

CHECK:SPACING: No space is necessary after a cast
#1838: FILE: drivers/char/isicom.c:1510:
+	struct isi_port *port = (struct isi_port *) tty->driver_data;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1857: FILE: drivers/char/isicom.c:1529:
+static int isicom_set_serial_info(struct isi_port *port,
+	struct serial_struct __user *info)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1905: FILE: drivers/char/isicom.c:1562:
+static int isicom_get_serial_info(struct isi_port *port,
+	struct serial_struct __user *info)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1926: FILE: drivers/char/isicom.c:1580:
+static int isicom_ioctl(struct tty_struct *tty, struct file *filp,
                                                              ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1927: FILE: drivers/char/isicom.c:1581:
+static int isicom_ioctl(struct tty_struct *tty, struct file *filp,
+	unsigned int cmd, unsigned long arg)

CHECK:SPACING: No space is necessary after a cast
#1930: FILE: drivers/char/isicom.c:1583:
+	struct isi_port *port = (struct isi_port *) tty->driver_data;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1980: FILE: drivers/char/isicom.c:1597:
+			isicom_send_break(port, HZ/4);
 			                          ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1988: FILE: drivers/char/isicom.c:1605:
+		isicom_send_break(port, arg ? arg * (HZ/10) : HZ/4);
 		                                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1988: FILE: drivers/char/isicom.c:1605:
+		isicom_send_break(port, arg ? arg * (HZ/10) : HZ/4);
 		                                                ^

CHECK:SPACING: No space is necessary after a cast
#1995: FILE: drivers/char/isicom.c:1612:
+		if (get_user(arg, (unsigned long __user *) argp))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2017: FILE: drivers/char/isicom.c:1633:
+static void isicom_set_termios(struct tty_struct *tty,
+	struct termios *old_termios)

CHECK:SPACING: No space is necessary after a cast
#2021: FILE: drivers/char/isicom.c:1635:
+	struct isi_port *port = (struct isi_port *) tty->driver_data;

CHECK:SPACING: No space is necessary after a cast
#2053: FILE: drivers/char/isicom.c:1656:
+	struct isi_port *port = (struct isi_port *) tty->driver_data;

CHECK:SPACING: No space is necessary after a cast
#2072: FILE: drivers/char/isicom.c:1670:
+	struct isi_port *port = (struct isi_port *) tty->driver_data;

CHECK:SPACING: No space is necessary after a cast
#2089: FILE: drivers/char/isicom.c:1684:
+	struct isi_port *port = (struct isi_port *) tty->driver_data;

CHECK:SPACING: No space is necessary after a cast
#2106: FILE: drivers/char/isicom.c:1697:
+	struct isi_port *port = (struct isi_port *) tty->driver_data;

CHECK:SPACING: No space is necessary after a cast
#2124: FILE: drivers/char/isicom.c:1710:
+	struct isi_port *port = (struct isi_port *) data;

CHECK:SPACING: No space is necessary after a cast
#2137: FILE: drivers/char/isicom.c:1720:
+	struct isi_port *port = (struct isi_port *) tty->driver_data;

CHECK:SPACING: No space is necessary after a cast
#2155: FILE: drivers/char/isicom.c:1735:
+	struct isi_port *port = (struct isi_port *) tty->driver_data;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2177: FILE: drivers/char/isicom.c:1769:
+	for (count=0; count < BOARD_COUNT; count++ )
 	          ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2177: FILE: drivers/char/isicom.c:1769:
+	for (count=0; count < BOARD_COUNT; count++ )

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2224: FILE: drivers/char/isicom.c:1798:
 static int __devinit register_drivers(void)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2268: FILE: drivers/char/isicom.c:1878:
 static int __devinit isicom_init(void)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2284: FILE: drivers/char/isicom.c:1888:
+			printk(KERN_DEBUG "ISICOM: Couldn't allocate page for tmp_buf.\n");

CHECK:SPACING: No space is necessary after a cast
#2294: FILE: drivers/char/isicom.c:1894:
+		tmp_buf = (unsigned char *) page;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2336: FILE: drivers/char/isicom.c:1927:
+			port->close_delay = 50 * HZ/100;
 			                           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2337: FILE: drivers/char/isicom.c:1928:
+			port->closing_wait = 3000 * HZ/100;
 			                              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2370: FILE: drivers/char/isicom.c:1964:
+	for (idx=0; idx < BOARD_COUNT; idx++) {
 	        ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#2387: FILE: drivers/char/isicom.c:1979:
+			(isi_card[idx].irq==4)||(isi_card[idx].irq==5)||
 			                  ^

ERROR:SPACING: spaces required around that '||' (ctx:VxV)
#2387: FILE: drivers/char/isicom.c:1979:
+			(isi_card[idx].irq==4)||(isi_card[idx].irq==5)||
 			                      ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#2387: FILE: drivers/char/isicom.c:1979:
+			(isi_card[idx].irq==4)||(isi_card[idx].irq==5)||
 			                                          ^

ERROR:SPACING: spaces required around that '||' (ctx:VxE)
#2387: FILE: drivers/char/isicom.c:1979:
+			(isi_card[idx].irq==4)||(isi_card[idx].irq==5)||
 			                                              ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#2388: FILE: drivers/char/isicom.c:1980:
+			(isi_card[idx].irq==7)||(isi_card[idx].irq==10)||
 			                  ^

ERROR:SPACING: spaces required around that '||' (ctx:VxV)
#2388: FILE: drivers/char/isicom.c:1980:
+			(isi_card[idx].irq==7)||(isi_card[idx].irq==10)||
 			                      ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#2388: FILE: drivers/char/isicom.c:1980:
+			(isi_card[idx].irq==7)||(isi_card[idx].irq==10)||
 			                                          ^

ERROR:SPACING: spaces required around that '||' (ctx:VxE)
#2388: FILE: drivers/char/isicom.c:1980:
+			(isi_card[idx].irq==7)||(isi_card[idx].irq==10)||
 			                                               ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#2389: FILE: drivers/char/isicom.c:1981:
+			(isi_card[idx].irq==11)||(isi_card[idx].irq==12)||
 			                  ^

ERROR:SPACING: spaces required around that '||' (ctx:VxV)
#2389: FILE: drivers/char/isicom.c:1981:
+			(isi_card[idx].irq==11)||(isi_card[idx].irq==12)||
 			                       ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#2389: FILE: drivers/char/isicom.c:1981:
+			(isi_card[idx].irq==11)||(isi_card[idx].irq==12)||
 			                                           ^

ERROR:SPACING: spaces required around that '||' (ctx:VxE)
#2389: FILE: drivers/char/isicom.c:1981:
+			(isi_card[idx].irq==11)||(isi_card[idx].irq==12)||
 			                                                ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#2390: FILE: drivers/char/isicom.c:1982:
+			(isi_card[idx].irq==15))) {
 			                  ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2391: FILE: drivers/char/isicom.c:1983:
+			(isi_card[idx].irq==15))) {
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2421: FILE: drivers/char/isicom.c:2006:
+				ioaddr = pci_resource_start (dev, 3);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2433: FILE: drivers/char/isicom.c:2016:
+				for (count=0; count < BOARD_COUNT; count++) {
 				          ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2450: FILE: drivers/char/isicom.c:2031:
+		printk(KERN_ERR "ISICOM: No valid card configuration. Driver cannot be initialized...\n");

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000151533.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 78 errors, 40 warnings, 78 checks, 2399 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000151533.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
