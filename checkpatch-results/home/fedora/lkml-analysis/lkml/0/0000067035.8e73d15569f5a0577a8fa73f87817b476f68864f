WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#52: 
> I agree in theory.  In practice however msi interrupts look like io_apics.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#80: FILE: arch/i386/kernel/intrvec.c:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#93: FILE: arch/i386/kernel/intrvec.c:14:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#94: FILE: arch/i386/kernel/intrvec.c:15:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#106: FILE: arch/i386/kernel/intrvec.c:27:
+#define VECTOR_STRIDE ^I^I8$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#107: FILE: arch/i386/kernel/intrvec.c:28:
+#define NUM_VECTORS		(FIRST_SYSTEM_VECTOR-FIRST_DEVICE_VECTOR)
                    		                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#112: FILE: arch/i386/kernel/intrvec.c:33:
+int offset = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vector >= FIRST_DEVICE_VECTOR'
#116: FILE: arch/i386/kernel/intrvec.c:37:
+	if ((vector >= FIRST_DEVICE_VECTOR) && (vector < FIRST_SYSTEM_VECTOR))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vector < FIRST_SYSTEM_VECTOR'
#116: FILE: arch/i386/kernel/intrvec.c:37:
+	if ((vector >= FIRST_DEVICE_VECTOR) && (vector < FIRST_SYSTEM_VECTOR))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vector >= FIRST_DEVICE_VECTOR'
#122: FILE: arch/i386/kernel/intrvec.c:43:
+	if ((vector >= FIRST_DEVICE_VECTOR) && (vector < FIRST_SYSTEM_VECTOR))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vector < FIRST_SYSTEM_VECTOR'
#122: FILE: arch/i386/kernel/intrvec.c:43:
+	if ((vector >= FIRST_DEVICE_VECTOR) && (vector < FIRST_SYSTEM_VECTOR))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vector < FIRST_DEVICE_VECTOR'
#128: FILE: arch/i386/kernel/intrvec.c:49:
+	if ((vector < FIRST_DEVICE_VECTOR) || (vector >= FIRST_SYSTEM_VECTOR))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vector >= FIRST_SYSTEM_VECTOR'
#128: FILE: arch/i386/kernel/intrvec.c:49:
+	if ((vector < FIRST_DEVICE_VECTOR) || (vector >= FIRST_SYSTEM_VECTOR))

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#130: FILE: arch/i386/kernel/intrvec.c:51:
+	return (test_bit((vector - FIRST_DEVICE_VECTOR), vectors_used));

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#195: FILE: arch/i386/kernel/io_apic.c:98:
+extern int assign_vector(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000067035.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 4 warnings, 7 checks, 162 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000067035.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
