WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#52: FILE: arch/um/include/skas/mm_id.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#74: FILE: arch/um/include/skas/mmu-skas.h:1:
+/*

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#95: FILE: arch/um/include/skas/mmu-skas.h:22:
+extern void switch_mm_skas(struct mm_id * mm_idp);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#95: FILE: arch/um/include/skas/mmu-skas.h:22:
+extern void switch_mm_skas(struct mm_id * mm_idp);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#103: FILE: arch/um/include/skas/mode-skas.h:1:
+/*

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#118: FILE: arch/um/include/skas/mode-skas.h:16:
+extern void sig_handler_common_skas(int sig, void *sc_ptr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#119: FILE: arch/um/include/skas/mode-skas.h:17:
+extern void halt_skas(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#120: FILE: arch/um/include/skas/mode-skas.h:18:
+extern void reboot_skas(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#121: FILE: arch/um/include/skas/mode-skas.h:19:
+extern void kill_off_processes_skas(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#122: FILE: arch/um/include/skas/mode-skas.h:20:
+extern int is_skas_winch(int pid, int fd, void *data);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#130: FILE: arch/um/include/skas/mode_kern_skas.h:1:
+/*

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#142: FILE: arch/um/include/skas/mode_kern_skas.h:13:
+extern void flush_thread_skas(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#143: FILE: arch/um/include/skas/mode_kern_skas.h:14:
+extern void switch_to_skas(void *prev, void *next);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#144: FILE: arch/um/include/skas/mode_kern_skas.h:15:
+extern void start_thread_skas(struct pt_regs *regs, unsigned long eip,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#146: FILE: arch/um/include/skas/mode_kern_skas.h:17:
+extern int copy_thread_skas(int nr, unsigned long clone_flags,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#149: FILE: arch/um/include/skas/mode_kern_skas.h:20:
+extern void release_thread_skas(struct task_struct *task);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#150: FILE: arch/um/include/skas/mode_kern_skas.h:21:
+extern void initial_thread_cb_skas(void (*proc)(void *), void *arg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#151: FILE: arch/um/include/skas/mode_kern_skas.h:22:
+extern void init_idle_skas(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#152: FILE: arch/um/include/skas/mode_kern_skas.h:23:
+extern void flush_tlb_kernel_range_skas(unsigned long start,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#154: FILE: arch/um/include/skas/mode_kern_skas.h:25:
+extern void flush_tlb_kernel_vm_skas(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#155: FILE: arch/um/include/skas/mode_kern_skas.h:26:
+extern void __flush_tlb_one_skas(unsigned long addr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#156: FILE: arch/um/include/skas/mode_kern_skas.h:27:
+extern void flush_tlb_range_skas(struct vm_area_struct *vma,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#158: FILE: arch/um/include/skas/mode_kern_skas.h:29:
+extern void flush_tlb_mm_skas(struct mm_struct *mm);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#159: FILE: arch/um/include/skas/mode_kern_skas.h:30:
+extern void force_flush_all_skas(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#160: FILE: arch/um/include/skas/mode_kern_skas.h:31:
+extern long execute_syscall_skas(void *r);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#161: FILE: arch/um/include/skas/mode_kern_skas.h:32:
+extern void before_mem_skas(unsigned long unused);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#162: FILE: arch/um/include/skas/mode_kern_skas.h:33:
+extern unsigned long set_task_sizes_skas(int arg, unsigned long *host_size_out,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#164: FILE: arch/um/include/skas/mode_kern_skas.h:35:
+extern int start_uml_skas(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#165: FILE: arch/um/include/skas/mode_kern_skas.h:36:
+extern int external_pid_skas(struct task_struct *task);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#166: FILE: arch/um/include/skas/mode_kern_skas.h:37:
+extern int thread_pid_skas(struct task_struct *task);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#176: FILE: arch/um/include/skas/proc_mm.h:1:
+/*

ERROR:CODE_INDENT: code indent should use tabs where possible
#214: FILE: arch/um/include/skas/proc_mm.h:39:
+^I        struct mm_mprotect mprotect;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#225: FILE: arch/um/include/skas/skas.h:1:
+/*

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#240: FILE: arch/um/include/skas/skas.h:16:
+extern void switch_threads(void *me, void *next);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#241: FILE: arch/um/include/skas/skas.h:17:
+extern void thread_wait(void *sw, void *fb);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#242: FILE: arch/um/include/skas/skas.h:18:
+extern void new_thread(void *stack, void **switch_buf_ptr, void **fork_buf_ptr,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#244: FILE: arch/um/include/skas/skas.h:20:
+extern int start_idle_thread(void *stack, void *switch_buf_ptr,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#246: FILE: arch/um/include/skas/skas.h:22:
+extern int user_thread(unsigned long stack, int flags);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#247: FILE: arch/um/include/skas/skas.h:23:
+extern void userspace(union uml_pt_regs *regs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#248: FILE: arch/um/include/skas/skas.h:24:
+extern void new_thread_proc(void *stack, void (*handler)(int sig));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#249: FILE: arch/um/include/skas/skas.h:25:
+extern void new_thread_handler(int sig);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#250: FILE: arch/um/include/skas/skas.h:26:
+extern void handle_syscall(union uml_pt_regs *regs);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#251: FILE: arch/um/include/skas/skas.h:27:
+extern int map(struct mm_id * mm_idp, unsigned long virt,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#251: FILE: arch/um/include/skas/skas.h:27:
+extern int map(struct mm_id * mm_idp, unsigned long virt,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#254: FILE: arch/um/include/skas/skas.h:30:
+extern int unmap(struct mm_id * mm_idp, void *addr, unsigned long len,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#254: FILE: arch/um/include/skas/skas.h:30:
+extern int unmap(struct mm_id * mm_idp, void *addr, unsigned long len,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#256: FILE: arch/um/include/skas/skas.h:32:
+extern int protect(struct mm_id * mm_idp, unsigned long addr,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#256: FILE: arch/um/include/skas/skas.h:32:
+extern int protect(struct mm_id * mm_idp, unsigned long addr,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#259: FILE: arch/um/include/skas/skas.h:35:
+extern void user_signal(int sig, union uml_pt_regs *regs, int pid);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#260: FILE: arch/um/include/skas/skas.h:36:
+extern int new_mm(unsigned long stack);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#261: FILE: arch/um/include/skas/skas.h:37:
+extern int start_userspace(unsigned long stub_stack);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#262: FILE: arch/um/include/skas/skas.h:38:
+extern int copy_context_skas0(unsigned long stack, int pid);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#263: FILE: arch/um/include/skas/skas.h:39:
+extern void get_skas_faultinfo(int pid, struct faultinfo * fi);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#263: FILE: arch/um/include/skas/skas.h:39:
+extern void get_skas_faultinfo(int pid, struct faultinfo * fi);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#264: FILE: arch/um/include/skas/skas.h:40:
+extern long execute_syscall_skas(void *r);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#265: FILE: arch/um/include/skas/skas.h:41:
+extern unsigned long current_stub_stack(void);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#266: FILE: arch/um/include/skas/skas.h:42:
+extern long run_syscall_stub(struct mm_id * mm_idp,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#266: FILE: arch/um/include/skas/skas.h:42:
+extern long run_syscall_stub(struct mm_id * mm_idp,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#269: FILE: arch/um/include/skas/skas.h:45:
+extern long syscall_stub_data(struct mm_id * mm_idp,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#269: FILE: arch/um/include/skas/skas.h:45:
+extern long syscall_stub_data(struct mm_id * mm_idp,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#279: FILE: arch/um/include/skas/stub-data.h:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#302: FILE: arch/um/include/skas/uaccess-skas.h:1:
+/*

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#315: FILE: arch/um/include/skas/uaccess-skas.h:14:
+extern int copy_from_user_skas(void *to, const void __user *from, int n);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#316: FILE: arch/um/include/skas/uaccess-skas.h:15:
+extern int copy_to_user_skas(void __user *to, const void *from, int n);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#317: FILE: arch/um/include/skas/uaccess-skas.h:16:
+extern int strncpy_from_user_skas(char *dst, const char __user *src, int count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#318: FILE: arch/um/include/skas/uaccess-skas.h:17:
+extern int __clear_user_skas(void __user *mem, int len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#319: FILE: arch/um/include/skas/uaccess-skas.h:18:
+extern int clear_user_skas(void __user *mem, int len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#320: FILE: arch/um/include/skas/uaccess-skas.h:19:
+extern int strnlen_user_skas(const void __user *str, int len);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#328: FILE: arch/um/include/tt/debug.h:1:
+/*

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#337: FILE: arch/um/include/tt/debug.h:10:
+extern int debugger_proxy(int status, pid_t pid);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#338: FILE: arch/um/include/tt/debug.h:11:
+extern void child_proxy(pid_t pid, int status);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#339: FILE: arch/um/include/tt/debug.h:12:
+extern void init_proxy (pid_t pid, int waiting, int status);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#339: FILE: arch/um/include/tt/debug.h:12:
+extern void init_proxy (pid_t pid, int waiting, int status);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#340: FILE: arch/um/include/tt/debug.h:13:
+extern int start_debugger(char *prog, int startup, int stop, int *debugger_fd);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#341: FILE: arch/um/include/tt/debug.h:14:
+extern void fake_child_exit(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#342: FILE: arch/um/include/tt/debug.h:15:
+extern int gdb_config(char *str);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#343: FILE: arch/um/include/tt/debug.h:16:
+extern int gdb_remove(int unused);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#351: FILE: arch/um/include/tt/mmu-tt.h:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#368: FILE: arch/um/include/tt/mode-tt.h:1:
+/*

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#382: FILE: arch/um/include/tt/mode-tt.h:15:
+extern int tracer(int (*init_proc)(void *), void *sp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#383: FILE: arch/um/include/tt/mode-tt.h:16:
+extern void sig_handler_common_tt(int sig, void *sc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#384: FILE: arch/um/include/tt/mode-tt.h:17:
+extern void syscall_handler_tt(int sig, union uml_pt_regs *regs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#385: FILE: arch/um/include/tt/mode-tt.h:18:
+extern void reboot_tt(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#386: FILE: arch/um/include/tt/mode-tt.h:19:
+extern void halt_tt(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#387: FILE: arch/um/include/tt/mode-tt.h:20:
+extern int is_tracer_winch(int pid, int fd, void *data);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#388: FILE: arch/um/include/tt/mode-tt.h:21:
+extern void kill_off_processes_tt(void);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#396: FILE: arch/um/include/tt/mode_kern_tt.h:1:
+/*

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#409: FILE: arch/um/include/tt/mode_kern_tt.h:14:
+extern void switch_to_tt(void *prev, void *next);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#410: FILE: arch/um/include/tt/mode_kern_tt.h:15:
+extern void flush_thread_tt(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#411: FILE: arch/um/include/tt/mode_kern_tt.h:16:
+extern void start_thread_tt(struct pt_regs *regs, unsigned long eip,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#412: FILE: arch/um/include/tt/mode_kern_tt.h:17:
+extern void start_thread_tt(struct pt_regs *regs, unsigned long eip,
+			   unsigned long esp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#413: FILE: arch/um/include/tt/mode_kern_tt.h:18:
+extern int copy_thread_tt(int nr, unsigned long clone_flags, unsigned long sp,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#416: FILE: arch/um/include/tt/mode_kern_tt.h:21:
+extern void release_thread_tt(struct task_struct *task);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#417: FILE: arch/um/include/tt/mode_kern_tt.h:22:
+extern void initial_thread_cb_tt(void (*proc)(void *), void *arg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#418: FILE: arch/um/include/tt/mode_kern_tt.h:23:
+extern void init_idle_tt(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#419: FILE: arch/um/include/tt/mode_kern_tt.h:24:
+extern void flush_tlb_kernel_range_tt(unsigned long start, unsigned long end);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#420: FILE: arch/um/include/tt/mode_kern_tt.h:25:
+extern void flush_tlb_kernel_vm_tt(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#421: FILE: arch/um/include/tt/mode_kern_tt.h:26:
+extern void __flush_tlb_one_tt(unsigned long addr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#422: FILE: arch/um/include/tt/mode_kern_tt.h:27:
+extern void flush_tlb_range_tt(struct vm_area_struct *vma,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#424: FILE: arch/um/include/tt/mode_kern_tt.h:29:
+extern void flush_tlb_mm_tt(struct mm_struct *mm);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#425: FILE: arch/um/include/tt/mode_kern_tt.h:30:
+extern void force_flush_all_tt(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#426: FILE: arch/um/include/tt/mode_kern_tt.h:31:
+extern long execute_syscall_tt(void *r);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#427: FILE: arch/um/include/tt/mode_kern_tt.h:32:
+extern void before_mem_tt(unsigned long brk_start);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#428: FILE: arch/um/include/tt/mode_kern_tt.h:33:
+extern unsigned long set_task_sizes_tt(int arg, unsigned long *host_size_out,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#430: FILE: arch/um/include/tt/mode_kern_tt.h:35:
+extern int start_uml_tt(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#431: FILE: arch/um/include/tt/mode_kern_tt.h:36:
+extern int external_pid_tt(struct task_struct *task);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#432: FILE: arch/um/include/tt/mode_kern_tt.h:37:
+extern int thread_pid_tt(struct task_struct *task);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#442: FILE: arch/um/include/tt/tt.h:1:
+/*

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#459: FILE: arch/um/include/tt/tt.h:18:
+extern int fork_tramp(void *sig_stack);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#460: FILE: arch/um/include/tt/tt.h:19:
+extern int do_proc_op(void *t, int proc_id);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#461: FILE: arch/um/include/tt/tt.h:20:
+extern int tracer(int (*init_proc)(void *), void *sp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#462: FILE: arch/um/include/tt/tt.h:21:
+extern void attach_process(int pid);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#463: FILE: arch/um/include/tt/tt.h:22:
+extern void tracer_panic(char *format, ...);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#464: FILE: arch/um/include/tt/tt.h:23:
+extern void set_init_pid(int pid);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#465: FILE: arch/um/include/tt/tt.h:24:
+extern int set_user_mode(void *task);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#466: FILE: arch/um/include/tt/tt.h:25:
+extern void set_tracing(void *t, int tracing);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#467: FILE: arch/um/include/tt/tt.h:26:
+extern int is_tracing(void *task);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#468: FILE: arch/um/include/tt/tt.h:27:
+extern void syscall_handler(int sig, union uml_pt_regs *regs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#469: FILE: arch/um/include/tt/tt.h:28:
+extern void exit_kernel(int pid, void *task);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#470: FILE: arch/um/include/tt/tt.h:29:
+extern void do_syscall(void *task, int pid, int local_using_sysemu);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#471: FILE: arch/um/include/tt/tt.h:30:
+extern void do_sigtrap(void *task);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#472: FILE: arch/um/include/tt/tt.h:31:
+extern int is_valid_pid(int pid);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#473: FILE: arch/um/include/tt/tt.h:32:
+extern void remap_data(void *segment_start, void *segment_end, int w);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#474: FILE: arch/um/include/tt/tt.h:33:
+extern long execute_syscall_tt(void *r);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#483: FILE: arch/um/include/tt/uaccess-tt.h:1:
+/*

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'addr' - possible side-effects?
#504: FILE: arch/um/include/tt/uaccess-tt.h:22:
+#define is_stack(addr, size) \
+	(((unsigned long) (addr) < STACK_TOP) && \
+	 ((unsigned long) (addr) >= STACK_TOP - ABOVE_KMEM) && \
+	 (((unsigned long) (addr) + (size)) <= STACK_TOP))

CHECK:SPACING: No space is necessary after a cast
#505: FILE: arch/um/include/tt/uaccess-tt.h:23:
+	(((unsigned long) (addr) < STACK_TOP) && \

CHECK:SPACING: No space is necessary after a cast
#506: FILE: arch/um/include/tt/uaccess-tt.h:24:
+	 ((unsigned long) (addr) >= STACK_TOP - ABOVE_KMEM) && \

CHECK:SPACING: No space is necessary after a cast
#507: FILE: arch/um/include/tt/uaccess-tt.h:25:
+	 (((unsigned long) (addr) + (size)) <= STACK_TOP))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#512: FILE: arch/um/include/tt/uaccess-tt.h:30:
+extern unsigned long get_fault_addr(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#514: FILE: arch/um/include/tt/uaccess-tt.h:32:
+extern int __do_copy_from_user(void *to, const void *from, int n,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#516: FILE: arch/um/include/tt/uaccess-tt.h:34:
+extern int __do_strncpy_from_user(char *dst, const char *src, size_t n,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#518: FILE: arch/um/include/tt/uaccess-tt.h:36:
+extern int __do_clear_user(void *mem, size_t len, void **fault_addr,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#520: FILE: arch/um/include/tt/uaccess-tt.h:38:
+extern int __do_strnlen_user(const char *str, unsigned long n,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#523: FILE: arch/um/include/tt/uaccess-tt.h:41:
+extern int copy_from_user_tt(void *to, const void __user *from, int n);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#524: FILE: arch/um/include/tt/uaccess-tt.h:42:
+extern int copy_to_user_tt(void __user *to, const void *from, int n);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#525: FILE: arch/um/include/tt/uaccess-tt.h:43:
+extern int strncpy_from_user_tt(char *dst, const char __user *src, int count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#526: FILE: arch/um/include/tt/uaccess-tt.h:44:
+extern int __clear_user_tt(void __user *mem, int len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#527: FILE: arch/um/include/tt/uaccess-tt.h:45:
+extern int clear_user_tt(void __user *mem, int len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#528: FILE: arch/um/include/tt/uaccess-tt.h:46:
+extern int strnlen_user_tt(const void __user *str, int len);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000115166.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 15 warnings, 117 checks, 435 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000115166.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
