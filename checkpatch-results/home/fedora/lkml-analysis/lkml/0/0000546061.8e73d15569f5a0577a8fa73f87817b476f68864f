WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#105: FILE: net/8139too.c:650:
+static void __rtl8139_cleanup_dev (struct net_device *dev)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#110: FILE: net/8139too.c:655:
+	assert (dev != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev"
#110: FILE: net/8139too.c:655:
+	assert (dev != NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#111: FILE: net/8139too.c:656:
+	assert (dev->priv != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->priv"
#111: FILE: net/8139too.c:656:
+	assert (dev->priv != NULL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#114: FILE: net/8139too.c:659:
+	assert (tp->pci_dev != NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "tp->pci_dev"
#114: FILE: net/8139too.c:659:
+	assert (tp->pci_dev != NULL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#119: FILE: net/8139too.c:664:
+		iounmap (tp->mmio_addr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#123: FILE: net/8139too.c:668:
+	pci_release_regions (pdev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#127: FILE: net/8139too.c:672:
+	memset (dev, 0xBC,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#128: FILE: net/8139too.c:673:
+		sizeof (struct net_device) +

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#129: FILE: net/8139too.c:674:
+		sizeof (struct rtl8139_private));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#132: FILE: net/8139too.c:677:
+	kfree (dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#134: FILE: net/8139too.c:679:
+	pci_set_drvdata (pdev, NULL);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#137: FILE: net/8139too.c:682:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#138: FILE: net/8139too.c:683:
 static int __devinit rtl8139_init_board (struct pci_dev *pdev,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#160: FILE: net/8139too.c:702:
+	dev = alloc_etherdev (sizeof (*tp));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#160: FILE: net/8139too.c:702:
+	dev = alloc_etherdev (sizeof (*tp));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#163: FILE: net/8139too.c:704:
+		printk (KERN_ERR PFX "Unable to alloc new net device\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#163: FILE: net/8139too.c:704:
+		printk (KERN_ERR PFX "Unable to alloc new net device\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#178: FILE: net/8139too.c:756:
+	rc = pci_request_regions (pdev, "8139too");

CHECK:SPACING: No space is necessary after a cast
#196: FILE: net/8139too.c:774:
+	dev->base_addr = (long) ioaddr;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#234: FILE: net/8139too.c:836:
+	__rtl8139_cleanup_dev (dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#252: FILE: net/8139too.c:865:
+	i = rtl8139_init_board (pdev, &dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#281: FILE: net/8139too.c:906:
+	i = register_netdev (dev);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#282: FILE: net/8139too.c:907:
+	if (i) goto err_out;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#285: FILE: net/8139too.c:909:
+	pci_set_drvdata (pdev, dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#295: FILE: net/8139too.c:987:
+	__rtl8139_cleanup_dev (dev);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#327: FILE: net/8139too.c:1005:
+	__rtl8139_cleanup_dev (dev);

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

CHECK:LINE_SPACING: Please don't use multiple blank lines
#376: FILE: net/net_init.c:57:
 
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#384: FILE: net/net_init.c:75:
+#define DECLARE_INIT_DEV(suffix,mask,setup) \
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#384: FILE: net/net_init.c:75:
+#define DECLARE_INIT_DEV(suffix,mask,setup) \
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#389: FILE: net/net_init.c:80:
+#define DECLARE_ALLOC_DEV(suffix,mask,setup) \
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#389: FILE: net/net_init.c:80:
+#define DECLARE_ALLOC_DEV(suffix,mask,setup) \
                                      ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#392: FILE: net/net_init.c:83:
+		struct net_device * dev;				\

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#403: FILE: net/net_init.c:94:
+^I        dev_init_buffers(dev);^I^I^I^I^I\$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#404: FILE: net/net_init.c:95:
+^I        if (dev->init && dev->init(dev) != 0) {^I^I^I\$

ERROR:CODE_INDENT: code indent should use tabs where possible
#405: FILE: net/net_init.c:96:
+^I                unregister_##suffix(dev);^I^I^I\$

ERROR:CODE_INDENT: code indent should use tabs where possible
#406: FILE: net/net_init.c:97:
+^I                return -EIO;^I^I^I^I^I\$

ERROR:CODE_INDENT: code indent should use tabs where possible
#407: FILE: net/net_init.c:98:
+^I        }^I^I^I^I^I^I^I\$

ERROR:CODE_INDENT: code indent should use tabs where possible
#408: FILE: net/net_init.c:99:
+^I        return 0;^I^I^I^I^I^I\$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#417: FILE: net/net_init.c:108:
+#define DECLARE_CHG_MTU(suffix,low,high) \
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#417: FILE: net/net_init.c:108:
+#define DECLARE_CHG_MTU(suffix,low,high) \
                                   ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'low' may be better as '(low)' to avoid precedence issues
#417: FILE: net/net_init.c:108:
+#define DECLARE_CHG_MTU(suffix,low,high) \
+	static int suffix##_change_mtu(struct net_device *dev, int new_mtu) \
+	{								\
+		if ((new_mtu < low) || (new_mtu > high))		\
+			return -EINVAL;					\
+		dev->mtu = new_mtu;					\
+		return 0;						\
+	}

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'high' may be better as '(high)' to avoid precedence issues
#417: FILE: net/net_init.c:108:
+#define DECLARE_CHG_MTU(suffix,low,high) \
+	static int suffix##_change_mtu(struct net_device *dev, int new_mtu) \
+	{								\
+		if ((new_mtu < low) || (new_mtu > high))		\
+			return -EINVAL;					\
+		dev->mtu = new_mtu;					\
+		return 0;						\
+	}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_mtu < low'
#420: FILE: net/net_init.c:111:
+		if ((new_mtu < low) || (new_mtu > high))		\

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_mtu > high'
#420: FILE: net/net_init.c:111:
+		if ((new_mtu < low) || (new_mtu > high))		\

CHECK:LINE_SPACING: Please don't use multiple blank lines
#426: FILE: net/net_init.c:117:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#435: FILE: net/net_init.c:126:
+	alloc_size = sizeof (*dev) + sizeof_priv + 31;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#437: FILE: net/net_init.c:128:
+	dev = kmalloc (sizeof (*dev) + sizeof_priv, GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#437: FILE: net/net_init.c:128:
+	dev = kmalloc (sizeof (*dev) + sizeof_priv, GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#440: FILE: net/net_init.c:131:
+	memset (dev, 0, sizeof (*dev) + sizeof_priv);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#440: FILE: net/net_init.c:131:
+	memset (dev, 0, sizeof (*dev) + sizeof_priv);

CHECK:SPACING: No space is necessary after a cast
#442: FILE: net/net_init.c:133:
+		dev->priv = (void *) (((long)(dev + 1) + 31) & ~31);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#443: FILE: net/net_init.c:134:
+	setup (dev);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#582: FILE: net/net_init.c:380:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#602: FILE: net/net_init.c:420:
 
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#610: FILE: net/net_init.c:469:
+EXPORT_SYMBOL(register_netdev);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#613: FILE: net/net_init.c:472:
 
+

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

ERROR:POINTER_LOCATION: "foo	* bar" should be "foo	*bar"
#702: FILE: linux/etherdevice.h:42:
+extern struct net_device	* alloc_etherdev(unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#702: FILE: linux/etherdevice.h:42:
+extern struct net_device	* alloc_etherdev(unsigned int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#702: FILE: linux/etherdevice.h:42:
+extern struct net_device	* alloc_etherdev(unsigned int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

ERROR:POINTER_LOCATION: "foo    * bar" should be "foo    *bar"
#717: FILE: linux/fcdevice.h:37:
+extern struct net_device    * alloc_fcdev(unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#717: FILE: linux/fcdevice.h:37:
+extern struct net_device    * alloc_fcdev(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#717: FILE: linux/fcdevice.h:37:
+extern struct net_device    * alloc_fcdev(unsigned int);

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

ERROR:POINTER_LOCATION: "foo        * bar" should be "foo        *bar"
#732: FILE: linux/fddidevice.h:38:
+extern struct net_device        * alloc_fddidev(unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#732: FILE: linux/fddidevice.h:38:
+extern struct net_device        * alloc_fddidev(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#732: FILE: linux/fddidevice.h:38:
+extern struct net_device        * alloc_fddidev(unsigned int);

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#747: FILE: linux/hippidevice.h:55:
+extern struct net_device *alloc_hippi_dev(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#747: FILE: linux/hippidevice.h:55:
+extern struct net_device *alloc_hippi_dev(unsigned int);

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

ERROR:POINTER_LOCATION: "foo    * bar" should be "foo    *bar"
#762: FILE: linux/trdevice.h:37:
+extern struct net_device    * alloc_trdev(unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#762: FILE: linux/trdevice.h:37:
+extern struct net_device    * alloc_trdev(unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#762: FILE: linux/trdevice.h:37:
+extern struct net_device    * alloc_trdev(unsigned int);

WARNING:PATCH_PREFIX: patch prefix 'net' exists, appears to be a -p0 patch

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000546061.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 18 errors, 44 warnings, 20 checks, 645 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000546061.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
