WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
- Revert patch number 92. It turned out to be broken behind hope.  Personally I

WARNING:TYPO_SPELLING: 'beeing' may be misspelled - perhaps 'being'?
#34: 
   beeing dnagerous in the last change log was more then true...
   ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#193: FILE: drivers/ide/ide.c:451:
+				printk(",");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#194: FILE: drivers/ide/ide.c:452:
+			printk("%s", msgs->msg);

WARNING:LONG_LINE_COMMENT: line length of 108 exceeds 100 columns
#274: FILE: drivers/ide/ide-disk.c:117:
+		//	printk("Read: %p, rq->current_nr_sectors: %d\n", buf, (int) rq->current_nr_sectors);

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#341: FILE: drivers/ide/ide-disk.c:207:
+			return ata_error(drive, rq, __FUNCTION__);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#361: FILE: drivers/ide/ide-disk.c:227:
+#if 0

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#362: FILE: drivers/ide/ide-disk.c:228:
+			printk("Multiread: %p, nsect: %d , rq->current_nr_sectors: %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#363: FILE: drivers/ide/ide-disk.c:229:
+			printk("Multiread: %p, nsect: %d , rq->current_nr_sectors: %d\n",
+					buf, nsect, rq->current_nr_sectors);

ERROR:CODE_INDENT: code indent should use tabs where possible
#560: FILE: drivers/ide/ide-disk.c:970:
+        ide_raw_taskfile(drive, &args);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#560: FILE: drivers/ide/ide-disk.c:970:
+        ide_raw_taskfile(drive, &args);$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#699: FILE: drivers/ide/ide-taskfile.c:245:
+ide_startstop_t ata_special_intr(struct ata_device *drive, struct
+		request *rq) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:WxV)
#700: FILE: drivers/ide/ide-taskfile.c:246:
+		request *rq) {
 		        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#907: FILE: include/linux/ide.h:683:
+extern ide_startstop_t ata_special_intr(struct ata_device *, struct request *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#908: FILE: include/linux/ide.h:684:
+extern int ide_raw_taskfile(struct ata_device *, struct ata_taskfile *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_device *' should also have an identifier name
#908: FILE: include/linux/ide.h:684:
+extern int ide_raw_taskfile(struct ata_device *, struct ata_taskfile *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_taskfile *' should also have an identifier name
#908: FILE: include/linux/ide.h:684:
+extern int ide_raw_taskfile(struct ata_device *, struct ata_taskfile *);

WARNING:LINE_SPACING: Missing a blank line after declarations
#927: FILE: include/linux/ide.h:770:
+	int ret = drive->channel->udma_init(drive, rq);
+	if (ret == ide_started)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000454121.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 12 warnings, 4 checks, 775 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000454121.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
