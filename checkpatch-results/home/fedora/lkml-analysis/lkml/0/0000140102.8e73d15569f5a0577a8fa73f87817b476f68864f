WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
anti-fragmentation code. The information is exported via /proc/buddyinfo. This

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#58: FILE: include/linux/mmzone.h:307:
+#define inc_fallback_count(zone, type) zone->fallback_count[type]++

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'zone' may be better as '(zone)' to avoid precedence issues
#58: FILE: include/linux/mmzone.h:307:
+#define inc_fallback_count(zone, type) zone->fallback_count[type]++

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#59: FILE: include/linux/mmzone.h:308:
+#define inc_alloc_count(zone, type) zone->alloc_count[type]++

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'zone' may be better as '(zone)' to avoid precedence issues
#59: FILE: include/linux/mmzone.h:308:
+#define inc_alloc_count(zone, type) zone->alloc_count[type]++

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#60: FILE: include/linux/mmzone.h:309:
+#define inc_kernnorclm_partial_steal(zone) zone->kernnorclm_partial_steal++

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'zone' may be better as '(zone)' to avoid precedence issues
#60: FILE: include/linux/mmzone.h:309:
+#define inc_kernnorclm_partial_steal(zone) zone->kernnorclm_partial_steal++

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#61: FILE: include/linux/mmzone.h:310:
+#define inc_kernnorclm_full_steal(zone) zone->kernnorclm_full_steal++

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'zone' may be better as '(zone)' to avoid precedence issues
#61: FILE: include/linux/mmzone.h:310:
+#define inc_kernnorclm_full_steal(zone) zone->kernnorclm_full_steal++

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#167: FILE: mm/page_alloc.c:2396:
+	zone->reserve_count[RCLM_NORCLM] = zone->present_pages >> (MAX_ORDER-1);
 	                                                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: mm/page_alloc.c:2587:
+ ^I/* Show statistics for each allocation type */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#197: FILE: mm/page_alloc.c:2587:
+ ^I/* Show statistics for each allocation type */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: mm/page_alloc.c:2587:
+ ^I/* Show statistics for each allocation type */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#198: FILE: mm/page_alloc.c:2588:
+ ^Iseq_printf(m, "\nPer-allocation-type statistics");$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#198: FILE: mm/page_alloc.c:2588:
+ ^Iseq_printf(m, "\nPer-allocation-type statistics");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: mm/page_alloc.c:2588:
+ ^Iseq_printf(m, "\nPer-allocation-type statistics");$

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#198: FILE: mm/page_alloc.c:2588:
+ 	seq_printf(m, "\nPer-allocation-type statistics");

ERROR:CODE_INDENT: code indent should use tabs where possible
#199: FILE: mm/page_alloc.c:2589:
+ ^Ifor (zone = node_zones; zone - node_zones < MAX_NR_ZONES; ++zone) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#199: FILE: mm/page_alloc.c:2589:
+ ^Ifor (zone = node_zones; zone - node_zones < MAX_NR_ZONES; ++zone) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: mm/page_alloc.c:2589:
+ ^Ifor (zone = node_zones; zone - node_zones < MAX_NR_ZONES; ++zone) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#200: FILE: mm/page_alloc.c:2590:
+ ^I^Iif (!zone->present_pages)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#200: FILE: mm/page_alloc.c:2590:
+ ^I^Iif (!zone->present_pages)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: mm/page_alloc.c:2590:
+ ^I^Iif (!zone->present_pages)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#201: FILE: mm/page_alloc.c:2591:
+ ^I^I^Icontinue;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#201: FILE: mm/page_alloc.c:2591:
+ ^I^I^Icontinue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: mm/page_alloc.c:2591:
+ ^I^I^Icontinue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#203: FILE: mm/page_alloc.c:2593:
+ ^I^Ispin_lock_irqsave(&zone->lock, flags);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#203: FILE: mm/page_alloc.c:2593:
+ ^I^Ispin_lock_irqsave(&zone->lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: mm/page_alloc.c:2593:
+ ^I^Ispin_lock_irqsave(&zone->lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#204: FILE: mm/page_alloc.c:2594:
+ ^I^Ifor (t = 0; t < RCLM_TYPES; t++) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#204: FILE: mm/page_alloc.c:2594:
+ ^I^Ifor (t = 0; t < RCLM_TYPES; t++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: mm/page_alloc.c:2594:
+ ^I^Ifor (t = 0; t < RCLM_TYPES; t++) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#206: FILE: mm/page_alloc.c:2596:
+ ^I^I^Iseq_printf(m, "\nNode %d, zone %8s, type %10s ",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#206: FILE: mm/page_alloc.c:2596:
+ ^I^I^Iseq_printf(m, "\nNode %d, zone %8s, type %10s ",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: mm/page_alloc.c:2596:
+ ^I^I^Iseq_printf(m, "\nNode %d, zone %8s, type %10s ",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#207: FILE: mm/page_alloc.c:2597:
+ ^I^I^I^I^Ipgdat->node_id, zone->name,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#207: FILE: mm/page_alloc.c:2597:
+ ^I^I^I^I^Ipgdat->node_id, zone->name,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#207: FILE: mm/page_alloc.c:2597:
+ 			seq_printf(m, "\nNode %d, zone %8s, type %10s ",
+ 					pgdat->node_id, zone->name,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: mm/page_alloc.c:2597:
+ ^I^I^I^I^Ipgdat->node_id, zone->name,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#208: FILE: mm/page_alloc.c:2598:
+ ^I^I^I^I^Itype_names[t]);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#208: FILE: mm/page_alloc.c:2598:
+ ^I^I^I^I^Itype_names[t]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: mm/page_alloc.c:2598:
+ ^I^I^I^I^Itype_names[t]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#209: FILE: mm/page_alloc.c:2599:
+ ^I^I^Ifor (order = 0; order < MAX_ORDER; ++order) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#209: FILE: mm/page_alloc.c:2599:
+ ^I^I^Ifor (order = 0; order < MAX_ORDER; ++order) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: mm/page_alloc.c:2599:
+ ^I^I^Ifor (order = 0; order < MAX_ORDER; ++order) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#210: FILE: mm/page_alloc.c:2600:
+ ^I^I^I^Inr_bufs = 0;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#210: FILE: mm/page_alloc.c:2600:
+ ^I^I^I^Inr_bufs = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: mm/page_alloc.c:2600:
+ ^I^I^I^Inr_bufs = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: mm/page_alloc.c:2602:
+ ^I^I^I^Ilist_for_each(elem, &zone->free_area_lists[t][order].free_list)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#212: FILE: mm/page_alloc.c:2602:
+ ^I^I^I^Ilist_for_each(elem, &zone->free_area_lists[t][order].free_list)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: mm/page_alloc.c:2602:
+ ^I^I^I^Ilist_for_each(elem, &zone->free_area_lists[t][order].free_list)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: mm/page_alloc.c:2603:
+ ^I^I^I^I^I++nr_bufs;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#213: FILE: mm/page_alloc.c:2603:
+ ^I^I^I^I^I++nr_bufs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: mm/page_alloc.c:2603:
+ ^I^I^I^I^I++nr_bufs;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#214: FILE: mm/page_alloc.c:2604:
+ ^I^I^I^Iseq_printf(m, "%6lu ", nr_bufs);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#214: FILE: mm/page_alloc.c:2604:
+ ^I^I^I^Iseq_printf(m, "%6lu ", nr_bufs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: mm/page_alloc.c:2604:
+ ^I^I^I^Iseq_printf(m, "%6lu ", nr_bufs);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: mm/page_alloc.c:2605:
+ ^I^I^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#215: FILE: mm/page_alloc.c:2605:
+ ^I^I^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: mm/page_alloc.c:2605:
+ ^I^I^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: mm/page_alloc.c:2608:
+ ^I^I/* Scan global list */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#218: FILE: mm/page_alloc.c:2608:
+ ^I^I/* Scan global list */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: mm/page_alloc.c:2608:
+ ^I^I/* Scan global list */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: mm/page_alloc.c:2609:
+ ^I^Iseq_printf(m, "\n");$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#219: FILE: mm/page_alloc.c:2609:
+ ^I^Iseq_printf(m, "\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: mm/page_alloc.c:2609:
+ ^I^Iseq_printf(m, "\n");$

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#219: FILE: mm/page_alloc.c:2609:
+ 		seq_printf(m, "\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: mm/page_alloc.c:2610:
+ ^I^Iseq_printf(m, "Node %d, zone %8s, type %10s",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#220: FILE: mm/page_alloc.c:2610:
+ ^I^Iseq_printf(m, "Node %d, zone %8s, type %10s",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: mm/page_alloc.c:2610:
+ ^I^Iseq_printf(m, "Node %d, zone %8s, type %10s",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: mm/page_alloc.c:2611:
+ ^I^I^I^I^Ipgdat->node_id, zone->name,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#221: FILE: mm/page_alloc.c:2611:
+ ^I^I^I^I^Ipgdat->node_id, zone->name,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#221: FILE: mm/page_alloc.c:2611:
+ 		seq_printf(m, "Node %d, zone %8s, type %10s",
+ 					pgdat->node_id, zone->name,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: mm/page_alloc.c:2611:
+ ^I^I^I^I^Ipgdat->node_id, zone->name,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#222: FILE: mm/page_alloc.c:2612:
+ ^I^I^I^I^I"MAX_ORDER");$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#222: FILE: mm/page_alloc.c:2612:
+ ^I^I^I^I^I"MAX_ORDER");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: mm/page_alloc.c:2612:
+ ^I^I^I^I^I"MAX_ORDER");$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#226: FILE: mm/page_alloc.c:2616:
+				zone->free_area_lists[t][MAX_ORDER-1].nr_free;
 				                                  ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#228: FILE: mm/page_alloc.c:2618:
+ ^I^Iseq_printf(m, "%6lu ", nr_bufs);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#228: FILE: mm/page_alloc.c:2618:
+ ^I^Iseq_printf(m, "%6lu ", nr_bufs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: mm/page_alloc.c:2618:
+ ^I^Iseq_printf(m, "%6lu ", nr_bufs);$

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#229: FILE: mm/page_alloc.c:2619:
+		seq_printf(m, "\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#231: FILE: mm/page_alloc.c:2621:
+ ^I^Iseq_printf(m, "%s Zone beancounters\n", zone->name);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#231: FILE: mm/page_alloc.c:2621:
+ ^I^Iseq_printf(m, "%s Zone beancounters\n", zone->name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: mm/page_alloc.c:2621:
+ ^I^Iseq_printf(m, "%s Zone beancounters\n", zone->name);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#233: FILE: mm/page_alloc.c:2623:
+		seq_printf(m, "Fallback reserve: %lu (%lu blocks)\n",
+				zone->fallback_reserve,

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#234: FILE: mm/page_alloc.c:2624:
+				zone->fallback_reserve >> (MAX_ORDER-1));
 				                                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#236: FILE: mm/page_alloc.c:2626:
+		seq_printf(m, "Fallback needed:  %lu (%lu blocks)\n",
+				zone->present_pages >> 3,

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#237: FILE: mm/page_alloc.c:2627:
+				(zone->present_pages >> 3) >> (MAX_ORDER-1));
 				                                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#239: FILE: mm/page_alloc.c:2629:
+		seq_printf(m, "Partial steal:    %lu\n",
+						zone->kernnorclm_partial_steal);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#241: FILE: mm/page_alloc.c:2631:
+		seq_printf(m, "Full steal:       %lu\n",
+						zone->kernnorclm_full_steal);

ERROR:SPACING: spaces required around that '<' (ctx:VxW)
#247: FILE: mm/page_alloc.c:2637:
+		for (i = 0; i< RCLM_TYPES; i++) {
 		             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#249: FILE: mm/page_alloc.c:2639:
+			seq_printf(m, "%-10s Allocs: %-10lu Reserve: %-10lu Fallbacks: %-10lu\n",
+					type_names[i],

CHECK:LINE_SPACING: Please don't use multiple blank lines
#261: FILE: mm/page_alloc.c:2651:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#262: FILE: mm/page_alloc.c:2652:
+ ^I/* Show bean counters */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#262: FILE: mm/page_alloc.c:2652:
+ ^I/* Show bean counters */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: mm/page_alloc.c:2652:
+ ^I/* Show bean counters */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#263: FILE: mm/page_alloc.c:2653:
+ ^Iseq_printf(m, "\nGlobal beancounters\n");$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#263: FILE: mm/page_alloc.c:2653:
+ ^Iseq_printf(m, "\nGlobal beancounters\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: mm/page_alloc.c:2653:
+ ^Iseq_printf(m, "\nGlobal beancounters\n");$

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#263: FILE: mm/page_alloc.c:2653:
+ 	seq_printf(m, "\nGlobal beancounters\n");

ERROR:SPACING: spaces required around that '<' (ctx:VxW)
#267: FILE: mm/page_alloc.c:2657:
+	for (i = 0; i< RCLM_TYPES; i++) {
 	             ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#268: FILE: mm/page_alloc.c:2658:
+ ^I^Iseq_printf(m, "%-10s Allocs: %-10lu Reserve: %-10lu Fallbacks: %-10lu\n",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#268: FILE: mm/page_alloc.c:2658:
+ ^I^Iseq_printf(m, "%-10s Allocs: %-10lu Reserve: %-10lu Fallbacks: %-10lu\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: mm/page_alloc.c:2658:
+ ^I^Iseq_printf(m, "%-10s Allocs: %-10lu Reserve: %-10lu Fallbacks: %-10lu\n",$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#269: FILE: mm/page_alloc.c:2659:
+ 		seq_printf(m, "%-10s Allocs: %-10lu Reserve: %-10lu Fallbacks: %-10lu\n",
+				type_names[i],

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000140102.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 32 errors, 57 warnings, 17 checks, 226 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000140102.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
