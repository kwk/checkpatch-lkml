WARNING:REPEATED_WORD: Possible repeated word: 'the'
#44: 
the the DMA allocation API as it is actually used.  The implementation

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#58: 
--- linux-2.5.45/include/linux/dma-map.h	1969-12-31 16:00:00.000000000 -0800

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#61: FILE: include/linux/dma-map.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#81: FILE: include/linux/dma-map.h:21:
+	/* Other operations (map_page, map_single, etc.) will be added
+	   when they are actually used. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#81: FILE: include/linux/dma-map.h:21:
+	   when they are actually used. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#94: FILE: include/linux/dma-map.h:34:
+	void *ptr;
+	ptr = (*DEV_DMA_OPS(dev)->alloc_consistent)(dev, size, dma_handle);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#96: FILE: include/linux/dma-map.h:36:
+#if 0

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#98: FILE: include/linux/dma-map.h:38:
+	/* Currently every alloc_consistent implementation replicates this.
+	   In the future, only do the memset here. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#98: FILE: include/linux/dma-map.h:38:
+	   In the future, only do the memset here. */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#112: FILE: include/linux/dma-map.h:52:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#117: FILE: drivers/pci/dma-ops.c:1:
+#include <linux/dma-map.h>

WARNING:LINE_SPACING: Missing a blank line after declarations
#124: FILE: drivers/pci/dma-ops.c:8:
+	struct pci_dev *pcidev = container_of(dev, struct pci_dev, dev);
+	return pci_alloc_consistent(pcidev, size, dma_handle);

WARNING:LINE_SPACING: Missing a blank line after declarations
#131: FILE: drivers/pci/dma-ops.c:15:
+	struct pci_dev *pcidev = container_of(dev, struct pci_dev, dev);
+	pci_free_consistent(pcidev, size, vaddr, dma_handle);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#134: FILE: drivers/pci/dma-ops.c:18:
+
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#215: FILE: drivers/base/bus.c:124:
+		if (dev->driver_data)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#217: FILE: drivers/base/bus.c:126:
+		else {

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#260: FILE: include/linux/netdevice.h:626:
+extern void netdev_kfree_priv(struct net_device *dev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#325: FILE: drivers/net/via-rhine.c:574:
 static int __devinit via_rhine_init_one (struct pci_dev *pdev,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!np->tx_bufs"
#407: FILE: drivers/net/via-rhine.c:826:
+		if (np->tx_bufs == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#426: FILE: drivers/net/via-rhine.c:1710:
 static void __devexit via_rhine_remove_one (struct pci_dev *pdev)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000416752.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 14 warnings, 6 checks, 358 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000416752.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
