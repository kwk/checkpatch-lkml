WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
Kill /proc/sysvipc and friends. This is a pure case of interface duplication,

WARNING:TYPO_SPELLING: 'entires' may be misspelled - perhaps 'entries'?
#43: 
And now count the pages used to implement /proc/sysvipc entires +
                                                        ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#258: FILE: ipc/sem.c:318:
 	for (q = sma->sem_pending; q; q = q->next) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#284: FILE: ipc/sem.c:1113:
+	} else

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#447: FILE: ipc/util.h:45:
+extern void* ipc_alloc(int size);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#447: FILE: ipc/util.h:45:
+extern void* ipc_alloc(int size);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#448: FILE: ipc/util.h:46:
+extern void ipc_free(void* ptr, int size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#448: FILE: ipc/util.h:46:
+extern void ipc_free(void* ptr, int size);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#451: FILE: ipc/util.h:48:
+static inline void ipc_lockall(struct ipc_ids* ids)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#457: FILE: ipc/util.h:53:
+static inline struct kern_ipc_perm* ipc_get(struct ipc_ids* ids, int id)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#457: FILE: ipc/util.h:53:
+static inline struct kern_ipc_perm* ipc_get(struct ipc_ids* ids, int id)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#466: FILE: ipc/util.h:64:
+static inline void ipc_unlockall(struct ipc_ids* ids)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#472: FILE: ipc/util.h:69:
+static inline struct kern_ipc_perm* ipc_lock(struct ipc_ids* ids, int id)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#472: FILE: ipc/util.h:69:
+static inline struct kern_ipc_perm* ipc_lock(struct ipc_ids* ids, int id)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#481: FILE: ipc/util.h:83:
+static inline void ipc_unlock(struct ipc_ids* ids, int id)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#487: FILE: ipc/util.h:88:
+static inline int ipc_buildid(struct ipc_ids* ids, int id, int seq)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#493: FILE: ipc/util.h:93:
+static inline int ipc_checkid(struct ipc_ids* ids, struct kern_ipc_perm* ipcp, int uid)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#493: FILE: ipc/util.h:93:
+static inline int ipc_checkid(struct ipc_ids* ids, struct kern_ipc_perm* ipcp, int uid)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#502: FILE: ipc/util.h:100:
+extern void kernel_to_ipc64_perm(struct kern_ipc_perm *in, struct ipc64_perm *out);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#503: FILE: ipc/util.h:101:
+extern void ipc64_perm_to_ipc_perm(struct ipc64_perm *in, struct ipc_perm *out);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000456901.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 2 warnings, 6 checks, 245 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000456901.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
