WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#63: FILE: fs/proc/proc_misc.c:434:
+extern int show_iomem_resources(struct seq_file *p, void *v);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:CODE_INDENT: code indent should use tabs where possible
#66: FILE: fs/proc/proc_misc.c:437:
+                   int (*f)(struct seq_file *, void*))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: fs/proc/proc_misc.c:437:
+                   int (*f)(struct seq_file *, void*))$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#68: FILE: fs/proc/proc_misc.c:439:
+	unsigned size = PAGE_SIZE * (1 + smp_num_cpus / 8);

CHECK:BRACES: braces {} should be used on all arms of this statement
#76: FILE: fs/proc/proc_misc.c:447:
+	if (!res) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#80: FILE: fs/proc/proc_misc.c:451:
+	} else

WARNING:CONST_STRUCT: struct file_operations should normally be const
#95: FILE: fs/proc/proc_misc.c:466:
+static struct file_operations proc_ioports_operations = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct file_operations should normally be const
#102: FILE: fs/proc/proc_misc.c:473:
+static struct file_operations proc_iomem_operations = {

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#180: FILE: include/linux/ioport.h:90:
+extern int show_ioports_resources(struct seq_file *p, void *data);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#181: FILE: include/linux/ioport.h:91:
+extern int show_iomem_resources(struct seq_file *p, void *data);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#231: FILE: kernel/resource.c:43:
+			do_resource_list(entry->child, fmt, offset-2, p);
 			                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000334735.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 5 warnings, 5 checks, 191 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000334735.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
