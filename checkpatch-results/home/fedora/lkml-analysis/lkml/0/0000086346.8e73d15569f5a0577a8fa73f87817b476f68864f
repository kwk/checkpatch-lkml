ERROR:TRAILING_WHITESPACE: trailing whitespace
#91: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:56:
+typedef void ahd_linux_callback_t (u_long);  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#100: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:65:
+	timer->expires = jiffies + (usec * HZ)/1000000;
 	                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#101: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:66:
+	timer->function = (ahd_linux_callback_t*)func;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#107: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:72:
+ahd_inb(struct ahd_softc * ahd, long port)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#109: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:74:
+	uint8_t x;

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#111: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:76:
+	if (ahd->tags[0] == BUS_SPACE_MEMIO) {
[...]
+	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:MEMORY_BARRIER: memory barrier without comment
#116: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:81:
+	mb();

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#117: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:82:
+	return (x);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#121: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:86:
+ahd_inw_atomic(struct ahd_softc * ahd, long port)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#123: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:88:
+	uint8_t x;

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#125: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:90:
+	if (ahd->tags[0] == BUS_SPACE_MEMIO) {
[...]
+	} else {
[...]

WARNING:MEMORY_BARRIER: memory barrier without comment
#130: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:95:
+	mb();

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#131: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:96:
+	return (x);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#135: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:100:
+ahd_outb(struct ahd_softc * ahd, long port, uint8_t val)

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#137: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:102:
+	if (ahd->tags[0] == BUS_SPACE_MEMIO) {
[...]
+	} else {
[...]

WARNING:MEMORY_BARRIER: memory barrier without comment
#142: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:107:
+	mb();

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#146: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:111:
+ahd_outw_atomic(struct ahd_softc * ahd, long port, uint16_t val)

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#148: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:113:
+	if (ahd->tags[0] == BUS_SPACE_MEMIO) {
[...]
+	} else {
[...]

WARNING:MEMORY_BARRIER: memory barrier without comment
#153: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:118:
+	mb();

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#157: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:122:
+ahd_outsb(struct ahd_softc * ahd, long port, uint8_t *array, int count)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#171: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:136:
+ahd_insb(struct ahd_softc * ahd, long port, uint8_t *array, int count)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#192: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:157:
+	if (ahd->src_mode == AHD_MODE_UNKNOWN
+	 || ahd->dst_mode == AHD_MODE_UNKNOWN)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#223: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:188:
+	if (ahd->src_mode == AHD_MODE_UNKNOWN
+	 || ahd->dst_mode == AHD_MODE_UNKNOWN)

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#226: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:191:
+	return (ahd_build_mode_state(ahd, ahd->src_mode, ahd->dst_mode));

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#257: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:222:
+	if (ahd->saved_src_mode != AHD_MODE_UNKNOWN
+	 && ahd->saved_dst_mode != AHD_MODE_UNKNOWN) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#276: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:241:
+	if (sizeof(dma_addr_t) > 4
+	 && (ahd->flags & AHD_64BIT_ADDRESSING) != 0) {

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#283: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:248:
+		return (sg + 1);
+	} else {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#310: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:275:
+	if (scb->hscb->cdb_len <= MAX_CDB_LEN_WITH_SENSE_ADDR
+	 || (scb->hscb->cdb_len & SCB_CDB_LEN_PTR) != 0)

WARNING:TYPO_SPELLING: 'ponter' may be misspelled - perhaps 'pointer'?
#319: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:284:
+	 * Copy the first SG into the "current" data ponter area.
 	                                             ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#329: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:294:
+		uint32_t *dataptr_words;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#332: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:297:
+		dataptr_words = (uint32_t*)&scb->hscb->dataptr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#336: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:301:
+			uint64_t high_addr;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#345: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:310:
+^I * We also set the full residual flag which the $

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#349: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:314:
+	scb->hscb->sgptr = ahd_htole32(scb->sg_list_busaddr|SG_FULL_RESID);
 	                                                   ^

WARNING:TYPO_SPELLING: 'Miscelaneous' may be misspelled - perhaps 'Miscellaneous'?
#352: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:317:
+/*********************** Miscelaneous Support Functions ***********************/
                          ^^^^^^^^^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#361: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:326:
+	return ((ahd_inb(ahd, port+1) << 8) | ahd_inb(ahd, port));
 	                          ^

WARNING:TYPO_SPELLING: 'accomodate' may be misspelled - perhaps 'accommodate'?
#368: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:333:
+	 * Write low byte first to accomodate registers
 	                           ^^^^^^^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#372: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:337:
+	ahd_outb(ahd, port+1, (value >> 8) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#379: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:344:
+	      | (ahd_inb(ahd, port+1) << 8)
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#380: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:345:
+	      | (ahd_inb(ahd, port+2) << 16)
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#381: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:346:
+	      | (ahd_inb(ahd, port+3) << 24));
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#388: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:353:
+	ahd_outb(ahd, port+1, ((value) >> 8) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#389: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:354:
+	ahd_outb(ahd, port+2, ((value) >> 16) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#390: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:355:
+	ahd_outb(ahd, port+3, ((value) >> 24) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#397: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:362:
+	      | (ahd_inb(ahd, port+1) << 8)
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#398: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:363:
+	      | (ahd_inb(ahd, port+2) << 16)
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#399: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:364:
+	      | (ahd_inb(ahd, port+3) << 24)
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#400: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:365:
+	      | (((uint64_t)ahd_inb(ahd, port+4)) << 32)
 	                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#401: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:366:
+	      | (((uint64_t)ahd_inb(ahd, port+5)) << 40)
 	                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#402: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:367:
+	      | (((uint64_t)ahd_inb(ahd, port+6)) << 48)
 	                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#403: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:368:
+	      | (((uint64_t)ahd_inb(ahd, port+7)) << 56));
 	                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#410: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:375:
+	ahd_outb(ahd, port+1, (value >> 8) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#411: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:376:
+	ahd_outb(ahd, port+2, (value >> 16) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#412: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:377:
+	ahd_outb(ahd, port+3, (value >> 24) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#413: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:378:
+	ahd_outb(ahd, port+4, (value >> 32) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#414: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:379:
+	ahd_outb(ahd, port+5, (value >> 40) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#415: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:380:
+	ahd_outb(ahd, port+6, (value >> 48) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#416: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:381:
+	ahd_outb(ahd, port+7, (value >> 56) & 0xFF);
 	                  ^

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#441: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:406:
+	return (value);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#448: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:413:
+	      | (ahd_inb_scbram(ahd, offset+1) << 8));
 	                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#455: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:420:
+	      | (ahd_inw_scbram(ahd, offset+2) << 16));
 	                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#462: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:427:
+	      | ((uint64_t)ahd_inl_scbram(ahd, offset+4)) << 32);
 	                                             ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#468: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:433:
+	struct scb* scb;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "scb"
#473: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:438:
+	if (scb != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#475: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:440:
+			     BUS_DMASYNC_POSTREAD|BUS_DMASYNC_POSTWRITE);
 			                         ^

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#476: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:441:
+	return (scb);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#484: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:449:
+	uint32_t saved_hscb_busaddr;

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#543: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:508:
+	ahd_sync_scb(ahd, scb, BUS_DMASYNC_PREREAD|BUS_DMASYNC_PREWRITE);
 	                                          ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#547: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:512:
+		uint64_t host_dataptr;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#584: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:549:
+	if ((ahd->flags & AHD_TARGETROLE) != 0
+	 && (ahd->flags & AHD_TQINFIFO_BLOCKED) == 0) {

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#612: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:577:
+		return (0);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#622: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:587:
+	if ((ahd->flags & AHD_ALL_INTERRUPTS) == 0
+	 && (ahd_check_cmdcmpltqueues(ahd) != 0))

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#671: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:636:
+	} else if ((intstat & (PCIINT|SPLTINT)) != 0) {
 	                             ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#674: FILE: drivers/scsi/aic7xxx/aic79xx_core.c:639:
+	} else {
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1445: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:55:
+ahc_inb(struct ahc_softc * ahc, long port)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1447: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:57:
+	uint8_t x;

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1449: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:59:
+	if (ahc->tag == BUS_SPACE_MEMIO) {
[...]
+	} else {
[...]

WARNING:MEMORY_BARRIER: memory barrier without comment
#1454: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:64:
+	mb();

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1455: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:65:
+	return (x);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1459: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:69:
+ahc_outb(struct ahc_softc * ahc, long port, uint8_t val)

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1461: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:71:
+	if (ahc->tag == BUS_SPACE_MEMIO) {
[...]
+	} else {
[...]

WARNING:MEMORY_BARRIER: memory barrier without comment
#1466: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:76:
+	mb();

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1470: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:80:
+ahc_outsb(struct ahc_softc * ahc, long port, uint8_t *array, int count)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1484: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:94:
+ahc_insb(struct ahc_softc * ahc, long port, uint8_t *array, int count)

WARNING:TYPO_SPELLING: 'Miscelaneous' may be misspelled - perhaps 'Miscellaneous'?
#1497: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:107:
+/*********************** Miscelaneous Support Functions ***********************/
                          ^^^^^^^^^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1501: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:111:
+	return ((ahc_inb(ahc, port+1) << 8) | ahc_inb(ahc, port));
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1508: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:118:
+	ahc_outb(ahc, port+1, (value >> 8) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1515: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:125:
+	      | (ahc_inb(ahc, port+1) << 8)
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1516: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:126:
+	      | (ahc_inb(ahc, port+2) << 16)
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1517: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:127:
+	      | (ahc_inb(ahc, port+3) << 24));
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1524: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:134:
+	ahc_outb(ahc, port+1, ((value) >> 8) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1525: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:135:
+	ahc_outb(ahc, port+2, ((value) >> 16) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1526: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:136:
+	ahc_outb(ahc, port+3, ((value) >> 24) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1533: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:143:
+	      | (ahc_inb(ahc, port+1) << 8)
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1534: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:144:
+	      | (ahc_inb(ahc, port+2) << 16)
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1535: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:145:
+	      | (ahc_inb(ahc, port+3) << 24)
 	                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1536: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:146:
+	      | (((uint64_t)ahc_inb(ahc, port+4)) << 32)
 	                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1537: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:147:
+	      | (((uint64_t)ahc_inb(ahc, port+5)) << 40)
 	                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1538: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:148:
+	      | (((uint64_t)ahc_inb(ahc, port+6)) << 48)
 	                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1539: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:149:
+	      | (((uint64_t)ahc_inb(ahc, port+7)) << 56));
 	                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1546: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:156:
+	ahc_outb(ahc, port+1, (value >> 8) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1547: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:157:
+	ahc_outb(ahc, port+2, (value >> 16) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1548: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:158:
+	ahc_outb(ahc, port+3, (value >> 24) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1549: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:159:
+	ahc_outb(ahc, port+4, (value >> 32) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1550: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:160:
+	ahc_outb(ahc, port+5, (value >> 40) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1551: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:161:
+	ahc_outb(ahc, port+6, (value >> 48) & 0xFF);
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1552: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:162:
+	ahc_outb(ahc, port+7, (value >> 56) & 0xFF);
 	                  ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1563: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:173:
+	if ((scb = SLIST_FIRST(&ahc->scb_data->free_scbs)) == NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!scb"
#1566: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:176:
+		if (scb == NULL)

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1570: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:180:
+	return (scb);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1578: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:188:
+{       $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1596: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:206:
+	struct scb* scb;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "scb"
#1599: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:209:
+	if (scb != NULL)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1601: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:211:
+			     BUS_DMASYNC_POSTREAD|BUS_DMASYNC_POSTWRITE);
 			                         ^

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1602: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:212:
+	return (scb);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1651: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:261:
+	if (scb->hscb->tag == SCB_LIST_NULL
+	 || scb->hscb->next == SCB_LIST_NULL)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1671: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:281:
+	ahc_sync_scb(ahc, scb, BUS_DMASYNC_PREREAD|BUS_DMASYNC_PREWRITE);
 	                                          ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1705: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:315:
+	if ((ahc->flags & AHC_TARGETROLE) != 0
+	 && (ahc->flags & AHC_TQINFIFO_BLOCKED) == 0) {

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1733: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:343:
+		return (0);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1741: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:351:
+	if ((ahc->flags & (AHC_ALL_INTERRUPTS|AHC_EDGE_INTERRUPT)) == 0
 	                                     ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1741: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:351:
+	if ((ahc->flags & (AHC_ALL_INTERRUPTS|AHC_EDGE_INTERRUPT)) == 0
[...]
+	else {
[...]

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1742: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:352:
+	if ((ahc->flags & (AHC_ALL_INTERRUPTS|AHC_EDGE_INTERRUPT)) == 0
+	 && (ahc_check_cmdcmpltqueues(ahc) != 0))

CHECK:BRACES: Unbalanced braces around else statement
#1744: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:354:
+	else {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1753: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:363:
+			if ((ahc->chip & AHC_PCI) != 0
+			 && (ahc_inb(ahc, ERROR) & PCIERRSTAT) != 0)

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#1758: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:368:
+		return (0);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1789: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:399:
+	} else if ((intstat & (SEQINT|SCSIINT)) != 0) {
 	                             ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1790: FILE: drivers/scsi/aic7xxx/aic7xxx_core.c:400:
+	} else if ((intstat & (SEQINT|SCSIINT)) != 0) {
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000086346.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 29 errors, 17 warnings, 81 checks, 1168 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000086346.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
