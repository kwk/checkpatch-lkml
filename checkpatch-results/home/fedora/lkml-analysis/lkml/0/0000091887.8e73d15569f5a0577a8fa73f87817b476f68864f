WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#74: FILE: drivers/s390/cio/chsc.c:904:
+		.mode = S_IRUSR,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#125: FILE: drivers/s390/cio/chsc.c:955:
+		.mode = S_IRUSR,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#190: FILE: drivers/s390/cio/chsc.c:1020:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#197: FILE: drivers/s390/cio/chsc.c:1027:
+		u32 : 30;
 		    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#199: FILE: drivers/s390/cio/chsc.c:1029:
+		u32 : 28;
 		    ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#207: FILE: drivers/s390/cio/chsc.c:1037:
+		u32 : 4;
 		    ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#209: FILE: drivers/s390/cio/chsc.c:1039:
+		u32 : 16;
 		    ^

WARNING:TYPO_SPELLING: 'adresses' may be misspelled - perhaps 'addresses'?
#243: FILE: drivers/s390/cio/chsc.c:1073:
+	case 0x0102: /* cub adresses incorrect */
 	                    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: braces {} should be used on all arms of this statement
#288: FILE: drivers/s390/cio/chsc.c:1118:
+		if (css->cm_enabled) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#295: FILE: drivers/s390/cio/chsc.c:1125:
+		} else

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'chp_cmg_show' to 'cmg_show'
#325: FILE: drivers/s390/cio/chsc.c:1198:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'chp_shared_show' to 'shared_show'
#339: FILE: drivers/s390/cio/chsc.c:1212:
+}

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*chp->cmg_chars)...) over kmalloc(sizeof(struct cmg_chars)...)
#362: FILE: drivers/s390/cio/chsc.c:1306:
+		chp->cmg_chars = kmalloc(sizeof(struct cmg_chars),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#391: FILE: drivers/s390/cio/chsc.c:1335:
+		u32 : 24;
 		    ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#393: FILE: drivers/s390/cio/chsc.c:1337:
+		u32 : 24;
 		    ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#400: FILE: drivers/s390/cio/chsc.c:1344:
+		u32 : 22;
 		    ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#403: FILE: drivers/s390/cio/chsc.c:1347:
+		u32 : 11;
 		    ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#471: FILE: drivers/s390/cio/chsc.c:1436:
+	if (css_characteristics_avail && css_chsc_characteristics.scmc
+	    && css_chsc_characteristics.secm) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#479: FILE: drivers/s390/cio/chsc.c:1444:
+			printk(KERN_WARNING "cio: Channel measurements not "

WARNING:SPLIT_STRING: quoted string split across lines
#480: FILE: drivers/s390/cio/chsc.c:1445:
+			printk(KERN_WARNING "cio: Channel measurements not "
+			       "available, continuing.\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#546: FILE: drivers/s390/cio/chsc.h:69:
+	u64 : 20;
 	    ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#548: FILE: drivers/s390/cio/chsc.h:71:
+	u32 : 1;
 	    ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#550: FILE: drivers/s390/cio/chsc.h:73:
+	u32 : 20;
 	    ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#559: FILE: drivers/s390/cio/chsc.h:89:
+extern int chsc_secm(struct channel_subsystem *, int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct channel_subsystem *' should also have an identifier name
#559: FILE: drivers/s390/cio/chsc.h:89:
+extern int chsc_secm(struct channel_subsystem *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#559: FILE: drivers/s390/cio/chsc.h:89:
+extern int chsc_secm(struct channel_subsystem *, int);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'css_cm_enable_show' to 'cm_enable_show' 'css_cm_enable_store' to 'cm_enable_store'
#603: FILE: drivers/s390/cio/css.c:488:
+}

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#652: FILE: drivers/s390/cio/css.h:154:
+	struct mutex mutex;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000091887.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 10 warnings, 7 checks, 593 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000091887.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
