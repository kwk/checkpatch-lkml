WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#35: 
Signed-off-by:  Serge Hallyn <serue@us.ibm.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#497: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#502: FILE: include/linux/nsproxy.h:1:
+#ifndef _LINUX_NSPROXY_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#510: FILE: include/linux/nsproxy.h:9:
+	spinlock_t nslock;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#512: FILE: include/linux/nsproxy.h:11:
+};
+extern struct nsproxy init_nsproxy;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#525: FILE: include/linux/nsproxy.h:24:
+	if (atomic_dec_and_test(&nsp->count)) {
+		kfree(nsp);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#533: FILE: include/linux/nsproxy.h:32:
+	struct nsproxy *nsp = p->nsproxy;
+	if (nsp) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#627: FILE: kernel/fork.c:1064:
+	if ((retval = copy_nsproxy(clone_flags, p)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#629: FILE: kernel/fork.c:1066:
+	if ((retval = copy_namespace(clone_flags, p)))

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#682: FILE: kernel/nsproxy.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#684: FILE: kernel/nsproxy.c:3:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#685: FILE: kernel/nsproxy.c:4:
+ *  Author: Serge Hallyn <serue@us.ibm.com> $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#686: FILE: kernel/nsproxy.c:5:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#691: FILE: kernel/nsproxy.c:10:
+ */    $

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ns)...) over kmalloc(sizeof(struct nsproxy)...)
#702: FILE: kernel/nsproxy.c:21:
+	ns = kmalloc(sizeof(struct nsproxy), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000078980.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 6 warnings, 3 checks, 497 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000078980.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
