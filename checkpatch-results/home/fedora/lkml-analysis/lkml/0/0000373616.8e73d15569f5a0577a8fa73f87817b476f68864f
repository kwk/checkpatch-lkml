WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
  This patch implements i386 debugging with hardware task switching.  So far

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#57: FILE: drivers/ide/pci/pdc202xx_old.c:560:
+       int ret;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#58: FILE: drivers/ide/pci/pdc202xx_old.c:561:
+       $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#58: FILE: drivers/ide/pci/pdc202xx_old.c:561:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: drivers/ide/pci/pdc202xx_old.c:574:
+       asm("int $3;");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: drivers/ide/pci/pdc202xx_old.c:575:
+       ret = __ide_dma_end(drive);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: drivers/ide/pci/pdc202xx_old.c:576:
+       asm("int $3;");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: drivers/ide/pci/pdc202xx_old.c:578:
+       return ret;$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#113: FILE: arch/i386/kernel/cpu/common.c:23:
+extern unsigned long debug_stack[NR_CPUS][256];

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#114: FILE: arch/i386/kernel/cpu/common.c:24:
+extern struct tss_struct debug_tss[NR_CPUS];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#115: FILE: arch/i386/kernel/cpu/common.c:25:
+extern struct tss_struct init_debug_tss;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#116: FILE: arch/i386/kernel/cpu/common.c:26:
+extern void debug_fn(void);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: arch/i386/kernel/cpu/common.c:506:
+       memcpy(&debug_tss[cpu], &init_debug_tss, sizeof(init_debug_tss));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: arch/i386/kernel/cpu/common.c:508:
+       debug_tss[cpu].esp0 = debug_tss[cpu].esp = debug_stack[cpu] + 256;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#136: FILE: arch/i386/kernel/cpu/common.c:508:
+       debug_tss[cpu].esp0 = debug_tss[cpu].esp = debug_stack[cpu] + 256;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: arch/i386/kernel/cpu/common.c:509:
+       __set_tss_desc(cpu, GDT_ENTRY_DEBUG_TSS, debug_tss + cpu);$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#145: FILE: arch/i386/kernel/debug.c:1:
+#include <linux/mm.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: arch/i386/kernel/debug.c:20:
+        * Initialize the handler here.  Save as much state as possible$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: arch/i386/kernel/debug.c:21:
+        * in regs since they are restored by task switch.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#166: FILE: arch/i386/kernel/debug.c:22:
+        *$

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: arch/i386/kernel/debug.c:23:
+        *          ebp -> per-cpu buffer$

ERROR:CODE_INDENT: code indent should use tabs where possible
#168: FILE: arch/i386/kernel/debug.c:24:
+        *          edi -> offset into buffer$

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: arch/i386/kernel/debug.c:25:
+        *          esi -> #calls$

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: arch/i386/kernel/debug.c:26:
+        *          ebx -> GDT$

ERROR:CODE_INDENT: code indent should use tabs where possible
#171: FILE: arch/i386/kernel/debug.c:27:
+        *      edx:eax -> last tsc$

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: arch/i386/kernel/debug.c:28:
+        *          ecx -> 32-bit tsc delta$

ERROR:CODE_INDENT: code indent should use tabs where possible
#173: FILE: arch/i386/kernel/debug.c:29:
+        */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#174: FILE: arch/i386/kernel/debug.c:30:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: arch/i386/kernel/debug.c:30:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: arch/i386/kernel/debug.c:31:
+       asm("movl %0,%%ebp": :"r" (debug_buffer + smp_processor_id()));$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#175: FILE: arch/i386/kernel/debug.c:31:
+       asm("movl %0,%%ebp": :"r" (debug_buffer + smp_processor_id()));
                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#175: FILE: arch/i386/kernel/debug.c:31:
+       asm("movl %0,%%ebp": :"r" (debug_buffer + smp_processor_id()));
                             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: arch/i386/kernel/debug.c:33:
+       asm("sgdtl 2(%ebp);"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: arch/i386/kernel/debug.c:34:
+           "movl  4(%ebp),%ebx;"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: arch/i386/kernel/debug.c:34:
+           "movl  4(%ebp),%ebx;"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: arch/i386/kernel/debug.c:35:
+           "movl  $16,%edi;");         /* edi -> GDT */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: arch/i386/kernel/debug.c:35:
+           "movl  $16,%edi;");         /* edi -> GDT */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#182: FILE: arch/i386/kernel/debug.c:38:
+        * Now handle the event.  May want to init separately with int3$

ERROR:CODE_INDENT: code indent should use tabs where possible
#183: FILE: arch/i386/kernel/debug.c:39:
+        * from kernel during setup. If so, remove this goto.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#184: FILE: arch/i386/kernel/debug.c:40:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: arch/i386/kernel/debug.c:41:
+       goto debug_handler;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#186: FILE: arch/i386/kernel/debug.c:42:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: arch/i386/kernel/debug.c:42:
+       $

ERROR:CODE_INDENT: code indent should use tabs where possible
#189: FILE: arch/i386/kernel/debug.c:45:
+        * Verify the kernel TSS:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#190: FILE: arch/i386/kernel/debug.c:46:
+        *   - invalid fs,gs -> 0$

ERROR:CODE_INDENT: code indent should use tabs where possible
#191: FILE: arch/i386/kernel/debug.c:47:
+        *   -    "    ds,es -> __USER_DS$

ERROR:CODE_INDENT: code indent should use tabs where possible
#192: FILE: arch/i386/kernel/debug.c:48:
+        *   -    "    cs,ss -> ?$

ERROR:CODE_INDENT: code indent should use tabs where possible
#193: FILE: arch/i386/kernel/debug.c:49:
+        */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#194: FILE: arch/i386/kernel/debug.c:50:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#194: FILE: arch/i386/kernel/debug.c:50:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: arch/i386/kernel/debug.c:50:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: arch/i386/kernel/debug.c:53:
+       asm("iret");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#201: FILE: arch/i386/kernel/debug.c:57:
+        * Do something...$

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: arch/i386/kernel/debug.c:58:
+        */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#203: FILE: arch/i386/kernel/debug.c:59:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: arch/i386/kernel/debug.c:59:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: arch/i386/kernel/debug.c:60:
+       asm("movl %eax,(%ebp)");        /* save old tsc                 */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#205: FILE: arch/i386/kernel/debug.c:61:
+       asm("rdtsc");                   /* FIXME: must be supported     */ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: arch/i386/kernel/debug.c:61:
+       asm("rdtsc");                   /* FIXME: must be supported     */ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: arch/i386/kernel/debug.c:62:
+       asm("movl %eax,%ecx");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: arch/i386/kernel/debug.c:63:
+       asm("subl (%ebp),%ecx");        /* ecx = tsc delta              */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: arch/i386/kernel/debug.c:64:
+       asm("incl %esi");               /* esi = counter                */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#209: FILE: arch/i386/kernel/debug.c:65:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: arch/i386/kernel/debug.c:65:
+       $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: arch/i386/kernel/debug.c:66:
+       goto debug_return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: arch/i386/kernel/debug.c:70:
+       .esp0           = 0,            /* percpu */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: arch/i386/kernel/debug.c:71:
+       .ss0            = __KERNEL_DS,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: arch/i386/kernel/debug.c:72:
+       .ldt            = __KERNEL_LDT,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: arch/i386/kernel/debug.c:73:
+       .bitmap         = INVALID_IO_BITMAP_OFFSET,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: arch/i386/kernel/debug.c:74:
+       .io_bitmap      = { [0 ... IO_BITMAP_SIZE ] = ~0 },$

ERROR:SPACING: space prohibited before that close square bracket ']'
#218: FILE: arch/i386/kernel/debug.c:74:
+       .io_bitmap      = { [0 ... IO_BITMAP_SIZE ] = ~0 },

CHECK:SPACING: No space is necessary after a cast
#220: FILE: arch/i386/kernel/debug.c:76:
+       .eip            = (unsigned long) debug_fn,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: arch/i386/kernel/debug.c:76:
+       .eip            = (unsigned long) debug_fn,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: arch/i386/kernel/debug.c:77:
+       .eflags         = 0x00000082,   /* interrupts off */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: arch/i386/kernel/debug.c:78:
+       .esp            = 0,            /* percpu */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: arch/i386/kernel/debug.c:79:
+       .es             = __USER_DS,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: arch/i386/kernel/debug.c:80:
+       .cs             = __KERNEL_CS,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: arch/i386/kernel/debug.c:81:
+       .ss             = __KERNEL_DS,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: arch/i386/kernel/debug.c:82:
+       .ds             = __USER_DS,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: arch/i386/kernel/debug.c:84:
+       .__cr3          = __pa(swapper_pg_dir)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: arch/i386/kernel/traps.c:857:
+       set_task_gate(3,GDT_ENTRY_DEBUG_TSS);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#239: FILE: arch/i386/kernel/traps.c:857:
+       set_task_gate(3,GDT_ENTRY_DEBUG_TSS);
                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: arch/i386/kernel/traps.c:858:
+       idt_table[3].b |= 0x6000; /* DPL 3 */$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pgdir' - possible side-effects?
#253: FILE: include/asm-i386/processor.h:180:
+#define load_cr3(pgdir) { \
+               init_tss[smp_processor_id()].__cr3 = __pa(pgdir); \
+               asm volatile("movl %0,%%cr3": :"r" (__pa(pgdir))); \
+       }

ERROR:CODE_INDENT: code indent should use tabs where possible
#254: FILE: include/asm-i386/processor.h:181:
+               init_tss[smp_processor_id()].__cr3 = __pa(pgdir); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: include/asm-i386/processor.h:181:
+               init_tss[smp_processor_id()].__cr3 = __pa(pgdir); \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#255: FILE: include/asm-i386/processor.h:182:
+               asm volatile("movl %0,%%cr3": :"r" (__pa(pgdir))); \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: include/asm-i386/processor.h:182:
+               asm volatile("movl %0,%%cr3": :"r" (__pa(pgdir))); \$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#255: FILE: include/asm-i386/processor.h:182:
+               asm volatile("movl %0,%%cr3": :"r" (__pa(pgdir))); \
                                            ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#255: FILE: include/asm-i386/processor.h:182:
+               asm volatile("movl %0,%%cr3": :"r" (__pa(pgdir))); \
                                              ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: include/asm-i386/processor.h:183:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#265: FILE: include/asm-i386/processor.h:422:
+       .ldt            = __KERNEL_LDT,                                 \$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000373616.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 38 errors, 51 warnings, 3 checks, 194 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000373616.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
