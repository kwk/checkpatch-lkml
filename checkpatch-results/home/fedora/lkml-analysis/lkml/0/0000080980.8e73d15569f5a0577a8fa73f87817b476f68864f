WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#63: FILE: Makefile:4:
+EXTRAVERSION = .12
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#118: FILE: arch/i386/kernel/vm86.c:311:
+	__asm__ __volatile__("movl %%eax, %0\n" :"=r"(eax));
 	                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:ExV)
#131: FILE: arch/i386/kernel/vm86.c:322:
+		:"r" (&info->regs), "r" (task_thread_info(tsk)));
 		^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#361: FILE: drivers/char/sonypi.c:1344:
+	else if ((pcidev = pci_get_device(PCI_VENDOR_ID_INTEL,

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#501: FILE: drivers/media/dvb/dvb-usb/cxusb.c:155:
+	u8 b = 0;
+	if (onoff)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#724: FILE: fs/compat.c:1218:
+	ret = security_file_permission(file, type == READ ? MAY_READ:MAY_WRITE);
 	                                                            ^

WARNING:CONST_STRUCT: struct file_operations should normally be const
#753: FILE: fs/proc/proc_misc.c:252:
+static struct file_operations proc_cpuinfo_operations = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:SPACING: No space is necessary after a cast
#764: FILE: fs/proc/proc_misc.c:261:
+	int i = *(loff_t *) v;

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#772: FILE: fs/proc/proc_misc.c:265:
+			seq_printf(f, "Character devices:\n");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#777: FILE: fs/proc/proc_misc.c:270:
+			seq_printf(f, "\nBlock devices:\n");

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#901: FILE: fs/proc/proc_misc.c:296:
+static struct seq_operations devinfo_ops = {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#909: FILE: fs/proc/proc_misc.c:303:
+static int devinfo_open(struct inode *inode, struct file *filp)
                                                           ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#912: FILE: fs/proc/proc_misc.c:305:
+	return seq_open(filp, &devinfo_ops);
 	                ^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#962: FILE: include/asm-i386/i387.h:67:
+   ^I   values. safe_address is a random variable that should be in L1 */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#962: FILE: include/asm-i386/i387.h:67:
+   ^I   values. safe_address is a random variable that should be in L1 */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#962: FILE: include/asm-i386/i387.h:67:
+   	   values. safe_address is a random variable that should be in L1 */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: space required after that ',' (ctx:VxV)
#974: FILE: include/asm-i386/pgtable-2level.h:21:
+#define pte_clear(mm,addr,xp)	do { set_pte_at(mm, addr, xp, __pte(0)); } while (0)
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#974: FILE: include/asm-i386/pgtable-2level.h:21:
+#define pte_clear(mm,addr,xp)	do { set_pte_at(mm, addr, xp, __pte(0)); } while (0)
                          ^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#974: FILE: include/asm-i386/pgtable-2level.h:21:
+#define pte_clear(mm,addr,xp)	do { set_pte_at(mm, addr, xp, __pte(0)); } while (0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#975: FILE: include/asm-i386/pgtable-2level.h:22:
+#define pmd_clear(xp)	do { set_pmd(xp, __pmd(0)); } while (0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#996: FILE: include/asm-i386/pgtable-3level.h:96:
+	smp_wmb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#1004: FILE: include/asm-i386/pgtable-3level.h:104:
+	smp_wmb();

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1046: FILE: include/asm-mips/bitops.h:657:
+	__asm__ (

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1047: FILE: include/asm-mips/bitops.h:658:
+	"	.set	mips32					\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1048: FILE: include/asm-mips/bitops.h:659:
+	"	clz	%0, %1					\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1049: FILE: include/asm-mips/bitops.h:660:
+	"	.set	mips0					\n"

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1060: FILE: include/asm-mips/bitops.h:686:
+	__asm__ (

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1061: FILE: include/asm-mips/bitops.h:687:
+	"	.set	mips64					\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1062: FILE: include/asm-mips/bitops.h:688:
+	"	dclz	%0, %1					\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1063: FILE: include/asm-mips/bitops.h:689:
+	"	.set	mips0					\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1077: FILE: include/asm-mips/byteorder.h:22:
+	"	.set	mips32r2		\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1079: FILE: include/asm-mips/byteorder.h:24:
+	"	.set	mips0			\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1087: FILE: include/asm-mips/byteorder.h:35:
+	"	.set	mips32r2		\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1090: FILE: include/asm-mips/byteorder.h:38:
+	"	.set	mips0			\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1102: FILE: include/asm-mips/interrupt.h:23:
+	"	.set	mips32r2					\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1104: FILE: include/asm-mips/interrupt.h:25:
+	"	.set	mips0						\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1112: FILE: include/asm-mips/interrupt.h:68:
+	"	.set	mips32r2					\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1114: FILE: include/asm-mips/interrupt.h:70:
+	"	.set	mips0						\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1122: FILE: include/asm-mips/interrupt.h:110:
+	"	.set	mips32r2					\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1125: FILE: include/asm-mips/interrupt.h:113:
+	"	.set	mips0						\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1133: FILE: include/asm-mips/interrupt.h:142:
+	"	.set	mips32r2					\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1137: FILE: include/asm-mips/interrupt.h:146:
+	"	.set	mips0						\n"

ERROR:SPACING: space required after that ',' (ctx:OxV)
#1188: FILE: include/linux/fs.h:1394:
+extern void chrdev_show(struct seq_file *,off_t);
                                          ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1188: FILE: include/linux/fs.h:1394:
+extern void chrdev_show(struct seq_file *,off_t);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct seq_file *' should also have an identifier name
#1188: FILE: include/linux/fs.h:1394:
+extern void chrdev_show(struct seq_file *,off_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'off_t' should also have an identifier name
#1188: FILE: include/linux/fs.h:1394:
+extern void chrdev_show(struct seq_file *,off_t);

ERROR:SPACING: space required after that ',' (ctx:OxV)
#1203: FILE: include/linux/fs.h:1404:
+extern void blkdev_show(struct seq_file *,off_t);
                                          ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1203: FILE: include/linux/fs.h:1404:
+extern void blkdev_show(struct seq_file *,off_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct seq_file *' should also have an identifier name
#1203: FILE: include/linux/fs.h:1404:
+extern void blkdev_show(struct seq_file *,off_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'off_t' should also have an identifier name
#1203: FILE: include/linux/fs.h:1404:
+extern void blkdev_show(struct seq_file *,off_t);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000080980.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 37 warnings, 6 checks, 996 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000080980.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
