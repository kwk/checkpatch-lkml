WARNING:TYPO_SPELLING: 'untill' may be misspelled - perhaps 'until'?
#32: 
Yes, I wasn't able to test it on the devices I wanted to untill after
                                                         ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#103: FILE: drivers/block/genhd.c:70:
+ * ^IChecks whether a named device is online or not.  Returns 1 if$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#104: FILE: drivers/block/genhd.c:71:
+ * ^Iit is, 0 if not.  name is NULL if we already have a root$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#105: FILE: drivers/block/genhd.c:72:
+ * ^Idevice 'built in' to the kernel, and we use rootdev to compare$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#106: FILE: drivers/block/genhd.c:73:
+ * ^Iwith, rather than comparing the strings.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: drivers/block/genhd.c:80:
+    char buf[BDEVNAME_SIZE];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: drivers/block/genhd.c:81:
+    char *devname = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: drivers/block/genhd.c:82:
+    int retval = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: drivers/block/genhd.c:83:
+    int major = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: drivers/block/genhd.c:84:
+    int minor = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: drivers/block/genhd.c:85:
+    struct gendisk *sgp = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: drivers/block/genhd.c:86:
+    struct list_head *p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: drivers/block/genhd.c:88:
+    major = MAJOR(rootdev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: drivers/block/genhd.c:89:
+    minor = MINOR(rootdev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: drivers/block/genhd.c:91:
+    down_read(&block_subsys.rwsem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: drivers/block/genhd.c:92:
+    list_for_each(p, &block_subsys.kset.list) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#128: FILE: drivers/block/genhd.c:95:
+	if (name != NULL) {
[...]
+	    if (strncmp(devname,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "name"
#128: FILE: drivers/block/genhd.c:95:
+	if (name != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TABSTOP: Statements should start on a tabstop
#130: FILE: drivers/block/genhd.c:97:
+	    if (strncmp(devname,

WARNING:TABSTOP: Statements should start on a tabstop
#135: FILE: drivers/block/genhd.c:102:
+	    }

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#136: FILE: drivers/block/genhd.c:103:
+	} else {
[...]
+	    if (sgp->major == major && sgp->first_minor == minor) {

WARNING:TABSTOP: Statements should start on a tabstop
#138: FILE: drivers/block/genhd.c:105:
+	    if (sgp->major == major && sgp->first_minor == minor) {

WARNING:TABSTOP: Statements should start on a tabstop
#141: FILE: drivers/block/genhd.c:108:
+	    }

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: drivers/block/genhd.c:110:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: drivers/block/genhd.c:111:
+    up_read(&block_subsys.rwsem);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: drivers/block/genhd.c:112:
+    return retval;$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#148: FILE: drivers/block/genhd.c:115:
+EXPORT_SYMBOL(blkdev_is_online);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#159: FILE: drivers/block/genhd.c:259:
+	printk("Waking up queue on %s\n",

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#184: FILE: include/linux/genhd.h:198:
+extern int blkdev_is_online(char *name, dev_t rootdev);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#207: FILE: init/do_mounts.c:380:
+	 * already there, we just go on. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#209: FILE: init/do_mounts.c:382:
+	if (root_device_name != NULL) {
[...]
+	    while (blkdev_is_online(root_device_name, 0) == 0) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "root_device_name"
#209: FILE: init/do_mounts.c:382:
+	if (root_device_name != NULL) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#211: FILE: init/do_mounts.c:384:
+	     * have to check it by name. */

WARNING:TABSTOP: Statements should start on a tabstop
#212: FILE: init/do_mounts.c:385:
+	    while (blkdev_is_online(root_device_name, 0) == 0) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#213: FILE: init/do_mounts.c:386:
+		printk("Waiting for root device %s to wake us up\n",

WARNING:TABSTOP: Statements should start on a tabstop
#216: FILE: init/do_mounts.c:389:
+	    }

WARNING:TABSTOP: Statements should start on a tabstop
#217: FILE: init/do_mounts.c:390:
+	    if (saved_root_name[0]) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#220: FILE: init/do_mounts.c:393:
+		if (strncmp(root_device_name, "/dev/", 5) == 0)
+		    root_device_name += 5;

WARNING:TABSTOP: Statements should start on a tabstop
#222: FILE: init/do_mounts.c:395:
+	    }

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#223: FILE: init/do_mounts.c:396:
+	} else {
[...]
+	    while (blkdev_is_online(NULL, ROOT_DEV) == 0) {

WARNING:TABSTOP: Statements should start on a tabstop
#225: FILE: init/do_mounts.c:398:
+	    while (blkdev_is_online(NULL, ROOT_DEV) == 0) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#226: FILE: init/do_mounts.c:399:
+		printk("Waiting for root device %d:%d to wake us up\n",

WARNING:TABSTOP: Statements should start on a tabstop
#229: FILE: init/do_mounts.c:402:
+	    }

CHECK:LINE_SPACING: Please don't use multiple blank lines
#232: FILE: init/do_mounts.c:405:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#240: FILE: init/do_mounts.c:426:
+	} else {
+	    root_device_name = NULL;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000263443.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 41 warnings, 4 checks, 150 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000263443.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
