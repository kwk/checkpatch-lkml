WARNING:TYPO_SPELLING: 'layed' may be misspelled - perhaps 'laid'?
#44: 
different options and each command layed out in its own static const
                                   ^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#105: FILE: drivers/char/tpm/tpm.c:498:
+	rc = transmit_cmd(chip, data, sizeof(data),
+			"attempting to determine the timeouts");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#120: FILE: drivers/char/tpm/tpm.c:513:
+	rc = transmit_cmd(chip, data, sizeof(data),
+			"attempting to determine the timeouts");

CHECK:SPACING: No space is necessary after a cast
#124: FILE: drivers/char/tpm/tpm.c:517:
+	if (be32_to_cpu(*((__be32 *) (data + TPM_GET_CAP_RET_SIZE_IDX)))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#129: FILE: drivers/char/tpm/tpm.c:522:
+^Itimeout = $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#130: FILE: drivers/char/tpm/tpm.c:523:
+	    be32_to_cpu(*((__be32 *) (data + TPM_GET_CAP_RET_UINT32_1_IDX)));

CHECK:SPACING: No space is necessary after a cast
#134: FILE: drivers/char/tpm/tpm.c:527:
+	    be32_to_cpu(*((__be32 *) (data + TPM_GET_CAP_RET_UINT32_2_IDX)));

CHECK:SPACING: No space is necessary after a cast
#138: FILE: drivers/char/tpm/tpm.c:531:
+	    be32_to_cpu(*((__be32 *) (data + TPM_GET_CAP_RET_UINT32_3_IDX)));

CHECK:SPACING: No space is necessary after a cast
#142: FILE: drivers/char/tpm/tpm.c:535:
+	    be32_to_cpu(*((__be32 *) (data + TPM_GET_CAP_RET_UINT32_4_IDX)));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#152: FILE: drivers/char/tpm/tpm.c:545:
+	rc = transmit_cmd(chip, data, sizeof(data),
+			"attempting to determine the durations");

CHECK:SPACING: No space is necessary after a cast
#156: FILE: drivers/char/tpm/tpm.c:549:
+	if (be32_to_cpu(*((__be32 *) (data + TPM_GET_CAP_RET_SIZE_IDX)))

CHECK:SPACING: No space is necessary after a cast
#161: FILE: drivers/char/tpm/tpm.c:554:
+	    be32_to_cpu(*((__be32 *) (data + TPM_GET_CAP_RET_UINT32_1_IDX)));

CHECK:SPACING: No space is necessary after a cast
#163: FILE: drivers/char/tpm/tpm.c:556:
+	    be32_to_cpu(*((__be32 *) (data + TPM_GET_CAP_RET_UINT32_2_IDX)));

CHECK:SPACING: No space is necessary after a cast
#165: FILE: drivers/char/tpm/tpm.c:558:
+	    be32_to_cpu(*((__be32 *) (data + TPM_GET_CAP_RET_UINT32_3_IDX)));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#169: FILE: drivers/char/tpm/tpm.c:562:
+ssize_t tpm_show_enabled(struct device * dev, struct device_attribute * attr,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#169: FILE: drivers/char/tpm/tpm.c:562:
+ssize_t tpm_show_enabled(struct device * dev, struct device_attribute * attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#170: FILE: drivers/char/tpm/tpm.c:563:
+ssize_t tpm_show_enabled(struct device * dev, struct device_attribute * attr,
+			char *buf)

WARNING:LINE_SPACING: Missing a blank line after declarations
#176: FILE: drivers/char/tpm/tpm.c:569:
+	struct tpm_chip *chip = dev_get_drvdata(dev);
+	if (chip == NULL)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chip"
#176: FILE: drivers/char/tpm/tpm.c:569:
+	if (chip == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'attemtping' may be misspelled - perhaps 'attempting'?
#184: FILE: drivers/char/tpm/tpm.c:577:
+			"attemtping to determine the permanent state");
 			 ^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#184: FILE: drivers/char/tpm/tpm.c:577:
+	rc = transmit_cmd(chip, data, sizeof(data),
+			"attemtping to determine the permanent state");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#191: FILE: drivers/char/tpm/tpm.c:584:
+ssize_t tpm_show_active(struct device * dev, struct device_attribute * attr,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#191: FILE: drivers/char/tpm/tpm.c:584:
+ssize_t tpm_show_active(struct device * dev, struct device_attribute * attr,

WARNING:LINE_SPACING: Missing a blank line after declarations
#198: FILE: drivers/char/tpm/tpm.c:591:
+	struct tpm_chip *chip = dev_get_drvdata(dev);
+	if (chip == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chip"
#198: FILE: drivers/char/tpm/tpm.c:591:
+	if (chip == NULL)

WARNING:TYPO_SPELLING: 'attemtping' may be misspelled - perhaps 'attempting'?
#206: FILE: drivers/char/tpm/tpm.c:599:
+			"attemtping to determine the permanent state");
 			 ^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#206: FILE: drivers/char/tpm/tpm.c:599:
+	rc = transmit_cmd(chip, data, sizeof(data),
+			"attemtping to determine the permanent state");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#213: FILE: drivers/char/tpm/tpm.c:606:
+ssize_t tpm_show_owned(struct device * dev, struct device_attribute * attr,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#213: FILE: drivers/char/tpm/tpm.c:606:
+ssize_t tpm_show_owned(struct device * dev, struct device_attribute * attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#214: FILE: drivers/char/tpm/tpm.c:607:
+ssize_t tpm_show_owned(struct device * dev, struct device_attribute * attr,
+			char *buf)

WARNING:LINE_SPACING: Missing a blank line after declarations
#220: FILE: drivers/char/tpm/tpm.c:613:
+	struct tpm_chip *chip = dev_get_drvdata(dev);
+	if (chip == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chip"
#220: FILE: drivers/char/tpm/tpm.c:613:
+	if (chip == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#228: FILE: drivers/char/tpm/tpm.c:621:
+	rc = transmit_cmd(chip, data, sizeof(data),
+			"attempting to determine the owner state");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#235: FILE: drivers/char/tpm/tpm.c:628:
+ssize_t tpm_show_temp_deactivated(struct device * dev, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#235: FILE: drivers/char/tpm/tpm.c:628:
+ssize_t tpm_show_temp_deactivated(struct device * dev, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#236: FILE: drivers/char/tpm/tpm.c:629:
+ssize_t tpm_show_temp_deactivated(struct device * dev, 
+				struct device_attribute * attr, char *buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#236: FILE: drivers/char/tpm/tpm.c:629:
+				struct device_attribute * attr, char *buf)

WARNING:LINE_SPACING: Missing a blank line after declarations
#242: FILE: drivers/char/tpm/tpm.c:635:
+	struct tpm_chip *chip = dev_get_drvdata(dev);
+	if (chip == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chip"
#242: FILE: drivers/char/tpm/tpm.c:635:
+	if (chip == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#250: FILE: drivers/char/tpm/tpm.c:643:
+	rc = transmit_cmd(chip, data, sizeof(data),
+			"attempting to determine the temporary state");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#256: FILE: drivers/char/tpm/tpm.c:649:
+^I^I^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#272: FILE: drivers/char/tpm/tpm.c:814:
+ssize_t tpm_show_caps_1_2(struct device * dev,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#273: FILE: drivers/char/tpm/tpm.c:815:
+			  struct device_attribute * attr, char *buf)

WARNING:LINE_SPACING: Missing a blank line after declarations
#280: FILE: drivers/char/tpm/tpm.c:822:
+	struct tpm_chip *chip = dev_get_drvdata(dev);
+	if (chip == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!chip"
#280: FILE: drivers/char/tpm/tpm.c:822:
+	if (chip == NULL)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#287: FILE: drivers/char/tpm/tpm.c:829:
+	if ((len = tpm_transmit(chip, data, sizeof(data))) <=

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:SPLIT_STRING: quoted string split across lines
#290: FILE: drivers/char/tpm/tpm.c:832:
+		dev_dbg(chip->dev, "A TPM error (%d) occurred "
+			"attempting to determine the manufacturer\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#291: FILE: drivers/char/tpm/tpm.c:833:
+			be32_to_cpu(*((__be32 *) (data + TPM_RET_CODE_IDX))));

CHECK:SPACING: No space is necessary after a cast
#296: FILE: drivers/char/tpm/tpm.c:838:
+		       be32_to_cpu(*((__be32 *) (data + TPM_GET_CAP_RET_UINT32_1_IDX))));

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#301: FILE: drivers/char/tpm/tpm.c:843:
+	if ((len = tpm_transmit(chip, data, sizeof(data))) <=

WARNING:SPLIT_STRING: quoted string split across lines
#304: FILE: drivers/char/tpm/tpm.c:846:
+		dev_err(chip->dev, "A TPM error (%d) occurred "
+			"attempting to determine the 1.2 version\n",

CHECK:SPACING: No space is necessary after a cast
#305: FILE: drivers/char/tpm/tpm.c:847:
+			be32_to_cpu(*((__be32 *) (data + TPM_RET_CODE_IDX))));

CHECK:SPACING: No space is necessary after a cast
#310: FILE: drivers/char/tpm/tpm.c:852:
+		       (int) data[16], (int) data[17], (int) data[18],

CHECK:SPACING: No space is necessary after a cast
#311: FILE: drivers/char/tpm/tpm.c:853:
+		       (int) data[19]);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#327: FILE: drivers/char/tpm/tpm.h:44:
+extern ssize_t tpm_show_caps_1_2(struct device *, struct device_attribute *attr,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#327: FILE: drivers/char/tpm/tpm.h:44:
+extern ssize_t tpm_show_caps_1_2(struct device *, struct device_attribute *attr,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#327: FILE: drivers/char/tpm/tpm.h:44:
+extern ssize_t tpm_show_caps_1_2(struct device *, struct device_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#328: FILE: drivers/char/tpm/tpm.h:45:
+extern ssize_t tpm_show_caps_1_2(struct device *, struct device_attribute *attr,
+				char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#331: FILE: drivers/char/tpm/tpm.h:48:
+extern ssize_t tpm_show_enabled(struct device *, struct device_attribute *attr,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#331: FILE: drivers/char/tpm/tpm.h:48:
+extern ssize_t tpm_show_enabled(struct device *, struct device_attribute *attr,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#331: FILE: drivers/char/tpm/tpm.h:48:
+extern ssize_t tpm_show_enabled(struct device *, struct device_attribute *attr,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#333: FILE: drivers/char/tpm/tpm.h:50:
+extern ssize_t tpm_show_active(struct device *, struct device_attribute *attr,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#333: FILE: drivers/char/tpm/tpm.h:50:
+extern ssize_t tpm_show_active(struct device *, struct device_attribute *attr,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#333: FILE: drivers/char/tpm/tpm.h:50:
+extern ssize_t tpm_show_active(struct device *, struct device_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#334: FILE: drivers/char/tpm/tpm.h:51:
+extern ssize_t tpm_show_active(struct device *, struct device_attribute *attr,
+				char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#335: FILE: drivers/char/tpm/tpm.h:52:
+extern ssize_t tpm_show_owned(struct device *, struct device_attribute *attr,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#335: FILE: drivers/char/tpm/tpm.h:52:
+extern ssize_t tpm_show_owned(struct device *, struct device_attribute *attr,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#335: FILE: drivers/char/tpm/tpm.h:52:
+extern ssize_t tpm_show_owned(struct device *, struct device_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#336: FILE: drivers/char/tpm/tpm.h:53:
+extern ssize_t tpm_show_owned(struct device *, struct device_attribute *attr,
+				char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#337: FILE: drivers/char/tpm/tpm.h:54:
+extern ssize_t tpm_show_temp_deactivated(struct device *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#337: FILE: drivers/char/tpm/tpm.h:54:
+extern ssize_t tpm_show_temp_deactivated(struct device *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#337: FILE: drivers/char/tpm/tpm.h:54:
+extern ssize_t tpm_show_temp_deactivated(struct device *,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#354: FILE: drivers/char/tpm/tpm.h:114:
+extern void tpm_get_timeouts(struct tpm_chip *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#355: FILE: drivers/char/tpm/tpm.h:115:
+extern void tpm_gen_interrupt(struct tpm_chip *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct tpm_chip *' should also have an identifier name
#355: FILE: drivers/char/tpm/tpm.h:115:
+extern void tpm_gen_interrupt(struct tpm_chip *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000087441.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 21 warnings, 39 checks, 287 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000087441.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
