WARNING:TYPO_SPELLING: 'underyling' may be misspelled - perhaps 'underlying'?
#36: 
from the underyling file when needed.
         ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#51: FILE: fs/ecryptfs/file.c:1:
+/**

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#58: FILE: fs/ecryptfs/file.c:8:
+ *   ^I^IMichael C. Thompson <mcthomps@us.ibm.com>$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#71: FILE: fs/ecryptfs/file.c:21:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#72: FILE: fs/ecryptfs/file.c:22:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#90: FILE: fs/ecryptfs/file.c:40:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#102: FILE: fs/ecryptfs/file.c:52:
+	 * need to grow it so we have a valid length of 0's */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPLIT_STRING: quoted string split across lines
#113: FILE: fs/ecryptfs/file.c:63:
+			ecryptfs_printk(KERN_DEBUG, "new_end_pos(=[0x%.16x]) "
+					"> i_size_read(inode)(=[0x%.16x])\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#121: FILE: fs/ecryptfs/file.c:71:
+			ecryptfs_printk(KERN_DEBUG, "new_end_pos(=[0x%.16x]) "
+					"> i_size_read(inode)(=[0x%.16x])\n",

WARNING:SPLIT_STRING: quoted string split across lines
#132: FILE: fs/ecryptfs/file.c:82:
+			ecryptfs_printk(KERN_ERR, "Error on attempt to "
+					"truncate to (higher) offset [0x%.16x];"

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#152: FILE: fs/ecryptfs/file.c:102:
+static ssize_t ecryptfs_read_update_atime(struct file *file, char __user * buf,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#153: FILE: fs/ecryptfs/file.c:103:
+					  size_t count, loff_t * ppos)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#162: FILE: fs/ecryptfs/file.c:112:
+		lower_vfsmount = ecryptfs_superblock_to_private(

CHECK:LINE_SPACING: Please don't use multiple blank lines
#190: FILE: fs/ecryptfs/file.c:140:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#247: FILE: fs/ecryptfs/file.c:197:
+ * $

WARNING:SPLIT_STRING: quoted string split across lines
#263: FILE: fs/ecryptfs/file.c:213:
+		ecryptfs_printk(KERN_ERR, "grab_cache_page for header page "
+				"failed\n");

WARNING:SPLIT_STRING: quoted string split across lines
#276: FILE: fs/ecryptfs/file.c:226:
+	ecryptfs_printk(KERN_DEBUG, "inode w/ addr = [0x%p], i_ino = [0x%.16x] "
+			"size: [0x%.16x]\n", inode, inode->i_ino,

WARNING:TYPO_SPELLING: 'speciying' may be misspelled - perhaps 'specifying'?
#289: FILE: fs/ecryptfs/file.c:239:
+ * @inode: inode speciying file to open
                  ^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#293: FILE: fs/ecryptfs/file.c:243:
+ * $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#302: FILE: fs/ecryptfs/file.c:252:
+	 * ecryptfs_lookup() */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#359: FILE: fs/ecryptfs/file.c:309:
+					ECRYPTFS_POLICY_APPLIED)
+		   || !ECRYPTFS_CHECK_FLAG(crypt_stat->flags,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#370: FILE: fs/ecryptfs/file.c:320:
+			 * going to default to -EIO. */

CHECK:BRACES: Unbalanced braces around else statement
#373: FILE: fs/ecryptfs/file.c:323:
+		} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPLIT_STRING: quoted string split across lines
#378: FILE: fs/ecryptfs/file.c:328:
+	ecryptfs_printk(KERN_DEBUG, "inode w/ addr = [0x%p], i_ino = [0x%.16x] "
+			"size: [0x%.16x]\n", inode, inode->i_ino,

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#424: FILE: fs/ecryptfs/file.c:374:
+	if (NULL == file) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#427: FILE: fs/ecryptfs/file.c:377:
+		if (lower_dentry->d_inode->i_fop
+		    && lower_dentry->d_inode->i_fop->fsync) {

WARNING:SPLIT_STRING: quoted string split across lines
#438: FILE: fs/ecryptfs/file.c:388:
+			ecryptfs_printk(KERN_ERR, "ecryptfs_file_to_private"
+					"(file=[%p]) is NULL\n", file);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cmd == F_SETLK'
#469: FILE: fs/ecryptfs/file.c:419:
+	if ((rc != -EAGAIN) || (cmd == F_SETLK))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#489: FILE: fs/ecryptfs/file.c:439:
+	 * and shared. */

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IXGRP' are not preferred. Consider using octal permissions '0010'.
#491: FILE: fs/ecryptfs/file.c:441:
+	    (lower_inode->i_mode & (S_ISGID | S_IXGRP)) == S_ISGID &&

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:BRACES: braces {} should be used on all arms of this statement
#545: FILE: fs/ecryptfs/file.c:495:
+	if (file->f_op && file->f_op->lock) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#549: FILE: fs/ecryptfs/file.c:499:
+	} else

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#564: FILE: fs/ecryptfs/file.c:514:
+	if (NULL != ecryptfs_file_to_private(file))

CHECK:BRACES: braces {} should be used on all arms of this statement
#564: FILE: fs/ecryptfs/file.c:514:
+	if (NULL != ecryptfs_file_to_private(file))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#566: FILE: fs/ecryptfs/file.c:516:
+	else {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#608: FILE: fs/ecryptfs/file.c:558:
+static ssize_t ecryptfs_sendfile(struct file *file, loff_t * ppos,

WARNING:LINE_SPACING: Missing a blank line after declarations
#662: FILE: fs/ecryptfs/file.c:612:
+	struct file *lower_file = NULL;
+	if (ecryptfs_file_to_private(file))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000077941.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 19 warnings, 10 checks, 620 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000077941.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
