WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#64: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#64: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#65: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#66: 
#	           ChangeSet	1.922   -> 1.925  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#67: 
#	include/linux/sched.h	1.116   -> 1.118  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#68: 
#	       kernel/fork.c	1.93    -> 1.96   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#69: 
#	       kernel/user.c	1.5     -> 1.6    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#70: 
#	      kernel/sched.c	1.145   -> 1.148  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#71: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#72: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#73: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#74: 
# 02/12/30	ed@oscar.et.ca	1.923

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#75: 
# Allow heavily threaded task to run with normal priorities without 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#76: 
# destroying responsiviness.  This is done by throttling the threads 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#77: 
# in a group when many are active (in a runqueue) at the same time.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#78: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#79: 
# 02/12/30	ed@oscar.et.ca	1.924

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#80: 
# remove printks, adjust THREAD_PENALTY and respect MIN_TIMESLICE

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#81: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#82: 
# 02/12/31	ed@oscar.et.ca	1.925

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#83: 
# Add user throttling

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#84: 
# Improve the timeslice caculations for throttling

WARNING:TYPO_SPELLING: 'caculations' may be misspelled - perhaps 'calculations'?
#84: 
# Improve the timeslice caculations for throttling
                        ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#85: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#86: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#88: 
--- a/include/linux/sched.h	Tue Dec 31 08:53:27 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:CODE_INDENT: code indent should use tabs where possible
#95: FILE: include/linux/sched.h:176:
+        atomic_t active;        /* number of tasks in run queues */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: include/linux/sched.h:176:
+        atomic_t active;        /* number of tasks in run queues */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#96: FILE: include/linux/sched.h:177:
+        atomic_t count;         /* number of refs */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: include/linux/sched.h:177:
+        atomic_t count;         /* number of refs */$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#114: FILE: include/linux/sched.h:310:
+	struct ptg_struct * ptgroup;		/* pseudo thread group for this task */

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxO)
#125: FILE: kernel/fork.c:62:
+	if (tsk->ptgroup && atomic_sub_and_test(1,&tsk->ptgroup->count)) {
 	                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before that '&' (ctx:OxV)
#125: FILE: kernel/fork.c:62:
+	if (tsk->ptgroup && atomic_sub_and_test(1,&tsk->ptgroup->count)) {
 	                                          ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#147: FILE: kernel/fork.c:830:
+	if ( ((clone_flags & CLONE_VM) && (clone_flags & CLONE_FILES)) ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#148: FILE: kernel/fork.c:831:
+	if ( ((clone_flags & CLONE_VM) && (clone_flags & CLONE_FILES)) ||
+	     (clone_flags & CLONE_THREAD)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#149: FILE: kernel/fork.c:832:
+		if (current->ptgroup)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#151: FILE: kernel/fork.c:834:
+		else {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*current->ptgroup)...) over kmalloc(sizeof(struct ptg_struct)...)
#152: FILE: kernel/fork.c:835:
+			current->ptgroup = kmalloc(sizeof(struct ptg_struct), GFP_ATOMIC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#153: FILE: kernel/fork.c:836:
+			if likely(current->ptgroup) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#154: FILE: kernel/fork.c:837:
+				atomic_set(&current->ptgroup->count,2);
 				                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#155: FILE: kernel/fork.c:838:
+				atomic_set(&current->ptgroup->active,1);
 				                                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#158: FILE: kernel/fork.c:841:
+^I^I} $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#181: FILE: kernel/sched.c:127:
+	int work , slice, weight = 100;
 	         ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#182: FILE: kernel/sched.c:128:
+	int work , slice, weight = 100;
+	if (p->ptgroup) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000404057.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 30 warnings, 4 checks, 125 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000404057.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
