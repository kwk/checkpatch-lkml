CHECK:MACRO_ARG_REUSE: Macro argument reuse 'sp' - possible side-effects?
#110: FILE: fs/binfmt_elf.c:128:
+#define STACK_ALLOC(sp, len) ({ \
+	elf_addr_t __user *old_sp = (elf_addr_t __user *)sp; sp += len; \
+	old_sp; })

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#122: FILE: fs/binfmt_elf.c:140:
+create_elf_tables(struct linux_binprm *bprm, struct elfhdr *exec,
 		int interp_aout, unsigned long load_addr,

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: fs/binfmt_elf.c:206:
+ ^INEW_AUX_ENT(AT_SECURE, (elf_addr_t)security_bprm_secureexec(bprm));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#172: FILE: fs/binfmt_elf.c:206:
+ ^INEW_AUX_ENT(AT_SECURE, (elf_addr_t)security_bprm_secureexec(bprm));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: fs/binfmt_elf.c:206:
+ ^INEW_AUX_ENT(AT_SECURE, (elf_addr_t)security_bprm_secureexec(bprm));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#176: FILE: fs/binfmt_elf.c:209:
+		NEW_AUX_ENT(AT_PLATFORM,
+			(elf_addr_t)(unsigned long)u_platform);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#210: FILE: fs/binfmt_elf.c:314:
+static unsigned long load_elf_interp(struct elfhdr *interp_elf_ex,
+		struct file *interpreter, unsigned long *interp_load_addr)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#229: FILE: fs/binfmt_elf.c:352:
+			     (char *)elf_phdata,size);
 			                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#280: FILE: fs/binfmt_elf.c:369:
+^I^I    ^I^Ielf_prot = PROT_READ;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#280: FILE: fs/binfmt_elf.c:369:
+^I^I    ^I^Ielf_prot = PROT_READ;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#376: FILE: fs/binfmt_elf.c:455:
+static unsigned long load_aout_interp(struct exec *interp_ex,
+		struct file *interpreter)

ERROR:SPACING: space required before the open parenthesis '('
#532: FILE: fs/binfmt_elf.c:806:
+	for(i = 0, elf_ppnt = elf_phdata;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#572: FILE: fs/binfmt_elf.c:858:
+			 * follow the loader, and is not movable.  */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#621: FILE: fs/binfmt_elf.c:997:
+		   emulate the SVr4 behavior. Sigh. */

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'y' - possible side-effects?
#675: FILE: fs/binfmt_elf.c:1189:
+#define roundup(x, y) ((((x) + ((y) - 1)) / (y)) * (y))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#690: FILE: fs/binfmt_elf.c:1296:
+^I^Istruct task_struct *p, long signr) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around t->prstatus
#711: FILE: fs/binfmt_elf.c:1394:
+		  &(t->prstatus));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#717: FILE: fs/binfmt_elf.c:1398:
+	if ((t->prstatus.pr_fpvalid = elf_core_copy_task_fpregs(p, NULL,

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around t->fpu
#720: FILE: fs/binfmt_elf.c:1401:
+			  &(t->fpu));

WARNING:TYPO_SPELLING: 'proceses' may be misspelled - perhaps 'processes'?
#749: FILE: fs/binfmt_elf.c:1453:
+	 * This is because those proceses that could possibly change map_count
 	                         ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#794: FILE: fs/binfmt_elf.c:1546:
+	if ((prstatus->pr_fpvalid =

ERROR:TRAILING_WHITESPACE: trailing whitespace
#852: FILE: fs/binfmt_elf.c:1669:
+^I^Iprintk(KERN_WARNING $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#852: FILE: fs/binfmt_elf.c:1669:
+		printk(KERN_WARNING 

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'elf_core_dump', this function's name, in a string
#853: FILE: fs/binfmt_elf.c:1670:
+		       "elf_core_dump: file->f_pos (%ld) != offset (%ld)\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000083246.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 8 warnings, 8 checks, 760 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000083246.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
