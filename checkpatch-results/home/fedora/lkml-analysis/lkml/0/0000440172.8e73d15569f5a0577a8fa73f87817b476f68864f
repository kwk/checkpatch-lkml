WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
diff -urpN -I \$.*\$ --exclude TAGS -X /home/rusty/devel/kernel/kernel-patches/current-dontdiff --minimal linux-2.5.28.31516/drivers/zorro/zorro.c linux-2.5.28.31516.updated/drivers/zorro/zorro.c

ERROR:SPACING: space required after that ',' (ctx:VxV)
#55: FILE: include/linux/bitops.h:5:
+#define DECLARE_BITMAP(name,bits) \
                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#56: FILE: include/linux/bitops.h:6:
+	unsigned long name[((bits)+BITS_PER_LONG-1)/BITS_PER_LONG]
 	                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#56: FILE: include/linux/bitops.h:6:
+	unsigned long name[((bits)+BITS_PER_LONG-1)/BITS_PER_LONG]
 	                                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#56: FILE: include/linux/bitops.h:6:
+	unsigned long name[((bits)+BITS_PER_LONG-1)/BITS_PER_LONG]
 	                                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: sound/core/seq/seq_queue.h:55:
+ ^IDECLARE_BITMAP(clients_bitmap, SNDRV_SEQ_MAX_CLIENTS);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#151: FILE: sound/core/seq/seq_queue.h:55:
+ ^IDECLARE_BITMAP(clients_bitmap, SNDRV_SEQ_MAX_CLIENTS);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: sound/core/seq/seq_queue.h:55:
+ ^IDECLARE_BITMAP(clients_bitmap, SNDRV_SEQ_MAX_CLIENTS);$

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#186: FILE: include/linux/sched.h:267:
+	DECLARE_BITMAP(cpus_allowed, NR_CPUS);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#195: FILE: include/linux/sched.h:415:
+extern void set_cpus_allowed(task_t *p, const unsigned long new_mask[]);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#201: FILE: include/linux/sched.h:421:
+	{ [0 ... ((NR_CPUS+BITS_PER_LONG-1)/BITS_PER_LONG)-1] = ~0UL }
 	                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#201: FILE: include/linux/sched.h:421:
+	{ [0 ... ((NR_CPUS+BITS_PER_LONG-1)/BITS_PER_LONG)-1] = ~0UL }
 	                                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#201: FILE: include/linux/sched.h:421:
+	{ [0 ... ((NR_CPUS+BITS_PER_LONG-1)/BITS_PER_LONG)-1] = ~0UL }
 	                                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#201: FILE: include/linux/sched.h:421:
+	{ [0 ... ((NR_CPUS+BITS_PER_LONG-1)/BITS_PER_LONG)-1] = ~0UL }
 	                                                  ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#205: FILE: include/linux/sched.h:425:
+	DECLARE_BITMAP(mask, NR_CPUS) = CPU_MASK_NONE;

WARNING:LINE_SPACING: Missing a blank line after declarations
#206: FILE: include/linux/sched.h:426:
+	DECLARE_BITMAP(mask, NR_CPUS) = CPU_MASK_NONE;
+	BUG_ON(!cpu_online(cpu));

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#206: FILE: include/linux/sched.h:426:
+	BUG_ON(!cpu_online(cpu));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: space required before the open brace '{'
#230: FILE: include/linux/smp.h:96:
+#define cpu_online_map				((unsigned long[1]){ 1 })

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: arch/i386/kernel/cpuid.c:137:
+  if ( !cpu_online(cpu) )$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#260: FILE: arch/i386/kernel/cpuid.c:137:
+  if ( !cpu_online(cpu) )
     return -ENXIO;		/* No such CPU */

ERROR:SPACING: space prohibited after that open parenthesis '('
#260: FILE: arch/i386/kernel/cpuid.c:137:
+  if ( !cpu_online(cpu) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#260: FILE: arch/i386/kernel/cpuid.c:137:
+  if ( !cpu_online(cpu) )

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: arch/i386/kernel/msr.c:237:
+  if ( !cpu_online(cpu) )$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#296: FILE: arch/i386/kernel/msr.c:237:
+  if ( !cpu_online(cpu) )
     return -ENXIO;		/* No such CPU */

ERROR:SPACING: space prohibited after that open parenthesis '('
#296: FILE: arch/i386/kernel/msr.c:237:
+  if ( !cpu_online(cpu) )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#296: FILE: arch/i386/kernel/msr.c:237:
+  if ( !cpu_online(cpu) )

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'i' may be better as '(i)' to avoid precedence issues
#392: FILE: arch/ia64/kernel/perfmon.c:2957:
+#define cpu_is_online(i) (cpu_online_map[0] & (1UL << i))

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#404: FILE: arch/ia64/kernel/setup.c:439:
+	while (*pos < NR_CPUS && !cpu_online(*pos))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#428: FILE: arch/ia64/kernel/smpboot.c:80:
+volatile unsigned long cpu_online_map[1];

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#464: FILE: arch/ia64/kernel/smpboot.c:544:
+				if (cpu_online_map[0] & (1<<cpu))
 				                          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#787: FILE: include/asm-i386/smp.h:95:
+#define cpu_online(cpu) (cpu_online_map[0] & (1<<(cpu)))
                                                ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#804: FILE: include/asm-i386/smp.h:106:
+	return NR_CPUS;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#816: FILE: include/asm-ia64/smp.h:39:
+extern volatile unsigned long cpu_online_map[0];

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#829: FILE: include/asm-ia64/smp.h:52:
+#define cpu_online(cpu) (cpu_online_map[0] & (1<<(cpu)))
                                                ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#846: FILE: include/asm-ia64/smp.h:63:
+	return NR_CPUS;

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#871: FILE: include/asm-ppc/smp.h:55:
+#define cpu_online(cpu) (cpu_online_map[0] & (1<<(cpu)))
                                                ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#889: FILE: include/asm-ppc/smp.h:67:
+	return NR_CPUS;

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#932: FILE: include/asm-ppc64/smp.h:64:
+	return NR_CPUS;

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#964: FILE: include/asm-sparc64/smp.h:85:
+	return NR_CPUS;

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#976: FILE: include/linux/init_task.h:51:
+    cpus_allowed:	CPU_MASK_ALL,					\
                 ^

WARNING:INDENTED_LABEL: labels should not be indented
#976: FILE: include/linux/init_task.h:51:
+    cpus_allowed:	CPU_MASK_ALL,					\

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#1014: FILE: kernel/sched.c:1546:
+	DECLARE_BITMAP(new_mask, NR_CPUS);

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#1024: FILE: kernel/sched.c:1556:
+	if (any_online_cpu(new_mask) == NR_CPUS)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#1035: FILE: kernel/sched.c:1598:
+	DECLARE_BITMAP(mask, NR_CPUS);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000440172.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 23 warnings, 13 checks, 850 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000440172.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
