ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#55: FILE: fs/proc/proc_misc.c:239:
+extern struct proc_dir_entry * genetic_root_dir;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#58: FILE: fs/proc/proc_misc.c:242:
+int genetic_read_proc(char *page, char **start, off_t off,
+			  int count, int *eof, void *data)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#60: FILE: fs/proc/proc_misc.c:244:
+    int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: fs/proc/proc_misc.c:245:
+    int n = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#62: FILE: fs/proc/proc_misc.c:246:
+    genetic_t * genetic = (genetic_t *)data;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#62: FILE: fs/proc/proc_misc.c:246:
+    genetic_t * genetic = (genetic_t *)data;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#63: FILE: fs/proc/proc_misc.c:247:
+    $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#63: FILE: fs/proc/proc_misc.c:247:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#64: FILE: fs/proc/proc_misc.c:248:
+    n  = sprintf(page,   "generation_number:\t%ld\n", genetic->generation_number);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#65: FILE: fs/proc/proc_misc.c:249:
+    n += sprintf(page+n, "num_children:\t\t%ld\n", genetic->num_children);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#65: FILE: fs/proc/proc_misc.c:249:
+    n += sprintf(page+n, "num_children:\t\t%ld\n", genetic->num_children);
                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#66: FILE: fs/proc/proc_misc.c:250:
+    n += sprintf(page+n, "child_number:\t\t%ld\n", genetic->child_number);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#66: FILE: fs/proc/proc_misc.c:250:
+    n += sprintf(page+n, "child_number:\t\t%ld\n", genetic->child_number);
                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: fs/proc/proc_misc.c:251:
+    n += sprintf(page+n, "num_mutations:\t\t%ld\n", genetic->num_mutations);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#67: FILE: fs/proc/proc_misc.c:251:
+    n += sprintf(page+n, "num_mutations:\t\t%ld\n", genetic->num_mutations);
                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#68: FILE: fs/proc/proc_misc.c:252:
+    n += sprintf(page+n, "avg_fitness:\t\t%ld\n", genetic->avg_fitness);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#68: FILE: fs/proc/proc_misc.c:252:
+    n += sprintf(page+n, "avg_fitness:\t\t%ld\n", genetic->avg_fitness);
                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: fs/proc/proc_misc.c:253:
+    n += sprintf(page+n, "last_gen_avg_fitness:\t%ld\n", genetic->last_gen_avg_fitness);$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#69: FILE: fs/proc/proc_misc.c:253:
+    n += sprintf(page+n, "last_gen_avg_fitness:\t%ld\n", genetic->last_gen_avg_fitness);
                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: fs/proc/proc_misc.c:255:
+    n += sprintf(page+n, "\nFitness history\n");$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#71: FILE: fs/proc/proc_misc.c:255:
+    n += sprintf(page+n, "\nFitness history\n");
                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#73: FILE: fs/proc/proc_misc.c:257:
+    for (i = genetic->generation_number > GENETIC_HISTORY_SIZE ? GENETIC_HISTORY_SIZE$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#74: FILE: fs/proc/proc_misc.c:258:
+	     : genetic->generation_number-1; i > 0; i--)
 	                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#75: FILE: fs/proc/proc_misc.c:259:
+	n += sprintf(page+n, "generation(%ld):\t%ld\n",
 	                 ^

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#77: FILE: fs/proc/proc_misc.c:261:
+		     genetic->fitness_history[(genetic->fitness_history_index - i) & GENETIC_HISTORY_MASK]);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: fs/proc/proc_misc.c:263:
+    return proc_calc_metrics(page, start, off, count, eof, n);$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#89: FILE: include/linux/genetic.h:1:
+#ifndef __LINUX_GENETIC_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#92: FILE: include/linux/genetic.h:4:
+ * include/linux/genetic.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#109: FILE: include/linux/genetic.h:21:
+#define GENETIC_DEFAULT_NUM_MUTATIONS ^I8$

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#115: FILE: include/linux/genetic.h:27:
+#define gen_dbg(format, arg...) do { if (GENETIC_DEBUG) printk(KERN_EMERG __FILE__ ": " format "\n" , ## arg); } while (0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#115: FILE: include/linux/genetic.h:27:
+#define gen_dbg(format, arg...) do { if (GENETIC_DEBUG) printk(KERN_EMERG __FILE__ ": " format "\n" , ## arg); } while (0)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#115: FILE: include/linux/genetic.h:27:
+#define gen_dbg(format, arg...) do { if (GENETIC_DEBUG) printk(KERN_EMERG __FILE__ ": " format "\n" , ## arg); } while (0)
                                                                                                     ^

WARNING:LONG_LINE: line length of 132 exceeds 100 columns
#116: FILE: include/linux/genetic.h:28:
+#define gen_trc(format, arg...) do { if (GENETIC_DEBUG) printk(KERN_EMERG __FILE__ ":%s:%d\n" , __FUNCTION__, __LINE__); } while (0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#116: FILE: include/linux/genetic.h:28:
+#define gen_trc(format, arg...) do { if (GENETIC_DEBUG) printk(KERN_EMERG __FILE__ ":%s:%d\n" , __FUNCTION__, __LINE__); } while (0)

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#116: FILE: include/linux/genetic.h:28:
+#define gen_trc(format, arg...) do { if (GENETIC_DEBUG) printk(KERN_EMERG __FILE__ ":%s:%d\n" , __FUNCTION__, __LINE__); } while (0)
                                                                                               ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#116: FILE: include/linux/genetic.h:28:
+#define gen_trc(format, arg...) do { if (GENETIC_DEBUG) printk(KERN_EMERG __FILE__ ":%s:%d\n" , __FUNCTION__, __LINE__); } while (0)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#121: FILE: include/linux/genetic.h:33:
+^Istruct list_head ^Ichild;$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#129: FILE: include/linux/genetic.h:41:
+typedef struct genetic_child_s genetic_child_t;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#136: FILE: include/linux/genetic.h:48:
+^Ivoid^I ^I(*mutate_gene)(genetic_child_t *, unsigned long);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'genetic_child_t *' should also have an identifier name
#136: FILE: include/linux/genetic.h:48:
+	void	 	(*mutate_gene)(genetic_child_t *, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#136: FILE: include/linux/genetic.h:48:
+	void	 	(*mutate_gene)(genetic_child_t *, unsigned long);

WARNING:NEW_TYPEDEFS: do not add new typedefs
#139: FILE: include/linux/genetic.h:51:
+typedef struct gene_param_s gene_param_t;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: include/linux/genetic.h:54:
+    struct list_head^Ichildren_queue[2];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: include/linux/genetic.h:55:
+    struct list_head^I*run_queue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: include/linux/genetic.h:56:
+    struct list_head^I*finished_queue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: include/linux/genetic.h:57:
+    unsigned long^Ichild_life_time;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#146: FILE: include/linux/genetic.h:58:
+    unsigned long ^Inum_children;^I^I/* Must be power of 2 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: include/linux/genetic.h:58:
+    unsigned long ^Inum_children;^I^I/* Must be power of 2 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: include/linux/genetic.h:59:
+    unsigned long^Inatural_selection_cutoff; /* How many children$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#150: FILE: include/linux/genetic.h:62:
+    unsigned long ^Inum_mutations;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: include/linux/genetic.h:62:
+    unsigned long ^Inum_mutations;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#151: FILE: include/linux/genetic.h:63:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: include/linux/genetic.h:63:
+    $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#152: FILE: include/linux/genetic.h:64:
+    void ^I^I(*natural_selection)(struct genetic_s *);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: include/linux/genetic.h:64:
+    void ^I^I(*natural_selection)(struct genetic_s *);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct genetic_s *' should also have an identifier name
#152: FILE: include/linux/genetic.h:64:
+    void 		(*natural_selection)(struct genetic_s *);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#153: FILE: include/linux/genetic.h:65:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: include/linux/genetic.h:65:
+    $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#154: FILE: include/linux/genetic.h:66:
+    char ^I^I*name;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: include/linux/genetic.h:66:
+    char ^I^I*name;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: include/linux/genetic.h:67:
+    struct timer_list^Itimer;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: include/linux/genetic.h:68:
+    struct genetic_ops^I*ops;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#158: FILE: include/linux/genetic.h:70:
+    genetic_child_t ^I**child_ranking;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: include/linux/genetic.h:70:
+    genetic_child_t ^I**child_ranking;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: include/linux/genetic.h:73:
+    long^I^Iavg_fitness;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: include/linux/genetic.h:74:
+    long^I^Ilast_gen_avg_fitness;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: include/linux/genetic.h:76:
+    unsigned long^Igeneration_number;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: include/linux/genetic.h:77:
+    unsigned long^Ichild_number;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: include/linux/genetic.h:79:
+    unsigned long^Ifitness_history_index;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: include/linux/genetic.h:80:
+    long^I^Ifitness_history[GENETIC_HISTORY_SIZE];$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#172: FILE: include/linux/genetic.h:84:
+typedef struct genetic_s genetic_t;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: include/linux/genetic.h:87:
+    void^I^I(*create_child)(genetic_child_t *);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'genetic_child_t *' should also have an identifier name
#175: FILE: include/linux/genetic.h:87:
+    void		(*create_child)(genetic_child_t *);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: include/linux/genetic.h:88:
+    void^I^I(*set_child_genes)(void *);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#176: FILE: include/linux/genetic.h:88:
+    void		(*set_child_genes)(void *);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#177: FILE: include/linux/genetic.h:89:
+    void^I^I(*calc_fitness)(genetic_child_t *);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'genetic_child_t *' should also have an identifier name
#177: FILE: include/linux/genetic.h:89:
+    void		(*calc_fitness)(genetic_child_t *);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#178: FILE: include/linux/genetic.h:90:
+    void ^I^I(*combine_genes)(genetic_child_t *, genetic_child_t *,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#178: FILE: include/linux/genetic.h:90:
+    void ^I^I(*combine_genes)(genetic_child_t *, genetic_child_t *,$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'genetic_child_t *' should also have an identifier name
#178: FILE: include/linux/genetic.h:90:
+    void 		(*combine_genes)(genetic_child_t *, genetic_child_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'genetic_child_t *' should also have an identifier name
#178: FILE: include/linux/genetic.h:90:
+    void 		(*combine_genes)(genetic_child_t *, genetic_child_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'genetic_child_t *' should also have an identifier name
#178: FILE: include/linux/genetic.h:90:
+    void 		(*combine_genes)(genetic_child_t *, genetic_child_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'genetic_child_t *' should also have an identifier name
#178: FILE: include/linux/genetic.h:90:
+    void 		(*combine_genes)(genetic_child_t *, genetic_child_t *,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: include/linux/genetic.h:92:
+    void^I^I(*mutate_child)(genetic_child_t *);$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'genetic_child_t *' should also have an identifier name
#180: FILE: include/linux/genetic.h:92:
+    void		(*mutate_child)(genetic_child_t *);

WARNING:LONG_LINE: line length of 150 exceeds 100 columns
#183: FILE: include/linux/genetic.h:95:
+extern int __init genetic_init(genetic_t * genetic, struct genetic_ops * ops, unsigned long num_children, unsigned long child_life_time, char * name);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#183: FILE: include/linux/genetic.h:95:
+extern int __init genetic_init(genetic_t * genetic, struct genetic_ops * ops, unsigned long num_children, unsigned long child_life_time, char * name);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#183: FILE: include/linux/genetic.h:95:
+extern int __init genetic_init(genetic_t * genetic, struct genetic_ops * ops, unsigned long num_children, unsigned long child_life_time, char * name);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#183: FILE: include/linux/genetic.h:95:
+extern int __init genetic_init(genetic_t * genetic, struct genetic_ops * ops, unsigned long num_children, unsigned long child_life_time, char * name);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#183: FILE: include/linux/genetic.h:95:
+extern int __init genetic_init(genetic_t * genetic, struct genetic_ops * ops, unsigned long num_children, unsigned long child_life_time, char * name);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#184: FILE: include/linux/genetic.h:96:
+extern void genetic_generic_mutate_child(genetic_child_t * child);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#184: FILE: include/linux/genetic.h:96:
+extern void genetic_generic_mutate_child(genetic_child_t * child);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#185: FILE: include/linux/genetic.h:97:
+extern void genetic_generic_combine_genes(genetic_child_t * parent_a,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#185: FILE: include/linux/genetic.h:97:
+extern void genetic_generic_combine_genes(genetic_child_t * parent_a,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#186: FILE: include/linux/genetic.h:98:
+					  genetic_child_t * parent_b,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#187: FILE: include/linux/genetic.h:99:
+					  genetic_child_t * child_a,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#188: FILE: include/linux/genetic.h:100:
+					  genetic_child_t * child_b);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#190: FILE: include/linux/genetic.h:102:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#199: FILE: lib/Kconfig:33:
+config GENETIC_LIB
+	bool "Genetic Library"
+	help
+	  This option will build in a genetic library that will tweak
+	  kernel parameters autonomically to improve performance.
+
 #
 # compression support is select'ed if needed
 #

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#223: FILE: lib/genetic.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#238: FILE: lib/genetic.c:16:
+ * $

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#255: FILE: lib/genetic.c:33:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/string.h> instead of <asm/string.h>
#256: FILE: lib/genetic.c:34:
+#include <asm/string.h>

WARNING:INCLUDE_LINUX: Use #include <linux/bug.h> instead of <asm/bug.h>
#257: FILE: lib/genetic.c:35:
+#include <asm/bug.h>

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#259: FILE: lib/genetic.c:37:
+static void genetic_ns_top_parents(genetic_t * genetic);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#260: FILE: lib/genetic.c:38:
+static void genetic_ns_award_top_parents(genetic_t * genetic);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#261: FILE: lib/genetic.c:39:
+static void genetic_create_children(genetic_t * genetic);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#262: FILE: lib/genetic.c:40:
+static void genetic_split_performers(genetic_t * genetic);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#263: FILE: lib/genetic.c:41:
+static void genetic_mutate(genetic_t * genetic);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#264: FILE: lib/genetic.c:42:
+static void genetic_run_child(genetic_t * genetic);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#265: FILE: lib/genetic.c:43:
+static void genetic_new_generation(genetic_t * genetic);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#267: FILE: lib/genetic.c:45:
+void genetic_switch_child(unsigned long data);

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#268: FILE: lib/genetic.c:46:
+struct proc_dir_entry * genetic_root_dir = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#268: FILE: lib/genetic.c:46:
+struct proc_dir_entry * genetic_root_dir = 0;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#269: FILE: lib/genetic.c:47:
+extern int genetic_read_proc(char *page, char **start, off_t off,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#270: FILE: lib/genetic.c:48:
+extern int genetic_read_proc(char *page, char **start, off_t off,
+		      int count, int *eof, void *data);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#272: FILE: lib/genetic.c:50:
+int __init genetic_init(genetic_t * genetic, struct genetic_ops * ops,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#272: FILE: lib/genetic.c:50:
+int __init genetic_init(genetic_t * genetic, struct genetic_ops * ops,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#274: FILE: lib/genetic.c:52:
+			char * name)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: lib/genetic.c:54:
+    struct proc_dir_entry *entry;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#277: FILE: lib/genetic.c:55:
+^I    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: lib/genetic.c:56:
+    genetic = (genetic_t *)kmalloc(sizeof(genetic_t), GFP_KERNEL);$

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#278: FILE: lib/genetic.c:56:
+    genetic = (genetic_t *)kmalloc(sizeof(genetic_t), GFP_KERNEL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: lib/genetic.c:57:
+    if (!genetic) {$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#280: FILE: lib/genetic.c:58:
+	printk(KERN_ERR "genetic_init: not enough memory\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'genetic_init', this function's name, in a string
#280: FILE: lib/genetic.c:58:
+	printk(KERN_ERR "genetic_init: not enough memory\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#280: FILE: lib/genetic.c:58:
+    if (!genetic) {
+	printk(KERN_ERR "genetic_init: not enough memory\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: lib/genetic.c:60:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: lib/genetic.c:62:
+    genetic->name = (char *)kmalloc(strlen(name), GFP_KERNEL);$

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#284: FILE: lib/genetic.c:62:
+    genetic->name = (char *)kmalloc(strlen(name), GFP_KERNEL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: lib/genetic.c:63:
+    if (!genetic->name) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: lib/genetic.c:66:
+    }$

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#290: FILE: lib/genetic.c:68:
+    genetic->child_ranking = (genetic_child_t **)kmalloc(num_children * sizeof(genetic_child_t *), GFP_KERNEL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: lib/genetic.c:68:
+    genetic->child_ranking = (genetic_child_t **)kmalloc(num_children * sizeof(genetic_child_t *), GFP_KERNEL);$

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#290: FILE: lib/genetic.c:68:
+    genetic->child_ranking = (genetic_child_t **)kmalloc(num_children * sizeof(genetic_child_t *), GFP_KERNEL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: lib/genetic.c:69:
+    if (!genetic->child_ranking) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: lib/genetic.c:73:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: lib/genetic.c:76:
+    strcpy(genetic->name, name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: lib/genetic.c:78:
+    INIT_LIST_HEAD(&genetic->children_queue[0]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: lib/genetic.c:79:
+    INIT_LIST_HEAD(&genetic->children_queue[1]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: lib/genetic.c:81:
+    genetic->run_queue = &genetic->children_queue[0];$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#304: FILE: lib/genetic.c:82:
+    genetic->finished_queue = &genetic->children_queue[1];    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: lib/genetic.c:82:
+    genetic->finished_queue = &genetic->children_queue[1];    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: lib/genetic.c:84:
+    genetic->ops = ops;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: lib/genetic.c:85:
+    genetic->num_children = num_children;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: lib/genetic.c:86:
+    genetic->child_life_time = child_life_time;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#310: FILE: lib/genetic.c:88:
+    genetic->generation_number = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: lib/genetic.c:89:
+    genetic->child_number = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#312: FILE: lib/genetic.c:90:
+    genetic->num_mutations = GENETIC_DEFAULT_NUM_MUTATIONS;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: lib/genetic.c:91:
+    genetic->natural_selection = genetic_ns_top_parents;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: lib/genetic.c:92:
+    genetic->natural_selection_cutoff = num_children / 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: lib/genetic.c:93:
+    genetic->avg_fitness = 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#316: FILE: lib/genetic.c:94:
+    genetic->last_gen_avg_fitness = 0;    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: lib/genetic.c:94:
+    genetic->last_gen_avg_fitness = 0;    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#317: FILE: lib/genetic.c:95:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#317: FILE: lib/genetic.c:95:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: lib/genetic.c:97:
+    genetic_create_children(genetic);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: lib/genetic.c:100:
+    init_timer(&genetic->timer);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: lib/genetic.c:101:
+    genetic->timer.function = genetic_switch_child;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: lib/genetic.c:102:
+    genetic->timer.data = (unsigned long)genetic;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: lib/genetic.c:107:
+    if (!genetic_root_dir)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: lib/genetic.c:110:
+    entry = create_proc_entry(name, 0644, genetic_root_dir);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: lib/genetic.c:112:
+    if (entry) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: lib/genetic.c:116:
+    }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#339: FILE: lib/genetic.c:117:
+#endif    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: lib/genetic.c:119:
+    genetic_run_child(genetic);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: lib/genetic.c:121:
+    printk(KERN_INFO "%ld children started in %s genetic library\n", num_children, name);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#343: FILE: lib/genetic.c:121:
+    printk(KERN_INFO "%ld children started in %s genetic library\n", num_children, name);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: lib/genetic.c:123:
+    return 0;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#349: FILE: lib/genetic.c:127:
+/* create some children, it is up to the lib user to come up w/ a good
+   distro of genes for it's children */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#349: FILE: lib/genetic.c:127:
+   distro of genes for it's children */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#350: FILE: lib/genetic.c:128:
+static void genetic_create_children(genetic_t * genetic)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: lib/genetic.c:130:
+    unsigned long i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: lib/genetic.c:131:
+    genetic_child_t * child;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#353: FILE: lib/genetic.c:131:
+    genetic_child_t * child;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: lib/genetic.c:133:
+    for (i = 0; i < genetic->num_children; i++) {$

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#356: FILE: lib/genetic.c:134:
+	genetic->child_ranking[i] = (genetic_child_t *)kmalloc(sizeof(genetic_child_t), GFP_KERNEL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: lib/genetic.c:140:
+    }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#368: FILE: lib/genetic.c:146:
+    genetic_t * genetic = (genetic_t *)data;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#368: FILE: lib/genetic.c:146:
+    genetic_t * genetic = (genetic_t *)data;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: lib/genetic.c:147:
+    genetic_child_t * child;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#369: FILE: lib/genetic.c:147:
+    genetic_child_t * child;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#371: FILE: lib/genetic.c:149:
+    child = list_entry(genetic->run_queue->next, genetic_child_t, child);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#373: FILE: lib/genetic.c:151:
+    list_del(&child->child);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: lib/genetic.c:153:
+    list_add_tail(&child->child, genetic->finished_queue->next);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: lib/genetic.c:155:
+    genetic->ops->calc_fitness(child);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: lib/genetic.c:157:
+    genetic->child_ranking[genetic->child_number++] = child;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#382: FILE: lib/genetic.c:160:
+    if (list_empty(genetic->run_queue->next)) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: lib/genetic.c:160:
+    if (list_empty(genetic->run_queue->next)) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: lib/genetic.c:163:
+    genetic_run_child(genetic);$

WARNING:TYPO_SPELLING: 'childs' may be misspelled - perhaps 'children'?
#388: FILE: lib/genetic.c:166:
+/* Set the childs genes for run */
            ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#389: FILE: lib/genetic.c:167:
+void genetic_run_child(genetic_t * genetic)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#391: FILE: lib/genetic.c:169:
+    genetic_child_t * child = list_entry(genetic->run_queue->next, genetic_child_t, child);$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#391: FILE: lib/genetic.c:169:
+    genetic_child_t * child = list_entry(genetic->run_queue->next, genetic_child_t, child);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: lib/genetic.c:170:
+    void * genes = child->genes;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#392: FILE: lib/genetic.c:170:
+    void * genes = child->genes;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#394: FILE: lib/genetic.c:172:
+    BUG_ON(!genes);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#394: FILE: lib/genetic.c:172:
+    BUG_ON(!genes);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: lib/genetic.c:174:
+    genetic->ops->set_child_genes(genes);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#399: FILE: lib/genetic.c:177:
+    genetic->timer.expires = jiffies + genetic->child_life_time;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#400: FILE: lib/genetic.c:178:
+    add_timer(&genetic->timer);$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#402: FILE: lib/genetic.c:180:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:TYPO_SPELLING: 'perfomers' may be misspelled - perhaps 'performers'?
#406: FILE: lib/genetic.c:184:
+ * generation and keep the top half perfomers
                                     ^^^^^^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#411: FILE: lib/genetic.c:189:
+static void genetic_ns_top_parents(genetic_t * genetic)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#413: FILE: lib/genetic.c:191:
+    unsigned long i,j,k = 0;$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#413: FILE: lib/genetic.c:191:
+    unsigned long i,j,k = 0;
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#413: FILE: lib/genetic.c:191:
+    unsigned long i,j,k = 0;
                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#414: FILE: lib/genetic.c:192:
+    unsigned long num_children = genetic->num_children;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#415: FILE: lib/genetic.c:193:
+    unsigned long cutoff = num_children - genetic->natural_selection_cutoff;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#417: FILE: lib/genetic.c:195:
+    for (i = cutoff, j = num_children - 1; i < j; i++, j--, k += 2) {$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#421: FILE: lib/genetic.c:199:
+				    genetic->child_ranking[k+1]);
 				                            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#422: FILE: lib/genetic.c:200:
+    }$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#425: FILE: lib/genetic.c:203:
+static void genetic_ns_clone_top_parents(genetic_t * genetic)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#427: FILE: lib/genetic.c:205:
+    unsigned long i,j,k = 0;$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#427: FILE: lib/genetic.c:205:
+    unsigned long i,j,k = 0;
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#427: FILE: lib/genetic.c:205:
+    unsigned long i,j,k = 0;
                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#428: FILE: lib/genetic.c:206:
+    unsigned long num_children = genetic->num_children;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#429: FILE: lib/genetic.c:207:
+    unsigned long cutoff = num_children - genetic->natural_selection_cutoff;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#431: FILE: lib/genetic.c:209:
+    for (i = cutoff, j = num_children - 1; i < j; i++, j--, k += 2) {$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#435: FILE: lib/genetic.c:213:
+				    genetic->child_ranking[k+1]);
 				                            ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#436: FILE: lib/genetic.c:214:
+    }$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#440: FILE: lib/genetic.c:218:
+/* This natural selection routine just has top parents populating
+   bottom performers. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#440: FILE: lib/genetic.c:218:
+   bottom performers. */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#441: FILE: lib/genetic.c:219:
+static void genetic_ns_award_top_parents(genetic_t * genetic)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#446: FILE: lib/genetic.c:224:
+^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#451: FILE: lib/genetic.c:229:
+					    genetic->child_ranking[i+1]);
 					                            ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#455: FILE: lib/genetic.c:233:
+
+

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#456: FILE: lib/genetic.c:234:
+static inline void genetic_swap(genetic_child_t ** a, genetic_child_t ** b)

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#456: FILE: lib/genetic.c:234:
+static inline void genetic_swap(genetic_child_t ** a, genetic_child_t ** b)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#458: FILE: lib/genetic.c:236:
+    genetic_child_t * tmp = *a;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#458: FILE: lib/genetic.c:236:
+    genetic_child_t * tmp = *a;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#460: FILE: lib/genetic.c:238:
+    *a = *b;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: lib/genetic.c:239:
+    *b = tmp;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#466: FILE: lib/genetic.c:244:
+static void genetic_split_performers(genetic_t * genetic)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#468: FILE: lib/genetic.c:246:
+    int i, j;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#470: FILE: lib/genetic.c:248:
+    for (i = genetic->num_children; i > 1; i--)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#471: FILE: lib/genetic.c:249:
+	for (j = 0; j < i - 1; j++)
+	    if (genetic->child_ranking[j]->fitness > genetic->child_ranking[j+1]->fitness) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#472: FILE: lib/genetic.c:250:
+^I    if (genetic->child_ranking[j]->fitness > genetic->child_ranking[j+1]->fitness) $

WARNING:TABSTOP: Statements should start on a tabstop
#472: FILE: lib/genetic.c:250:
+	    if (genetic->child_ranking[j]->fitness > genetic->child_ranking[j+1]->fitness) 

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#472: FILE: lib/genetic.c:250:
+	    if (genetic->child_ranking[j]->fitness > genetic->child_ranking[j+1]->fitness) 
 	                                                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#473: FILE: lib/genetic.c:251:
+		genetic_swap(&genetic->child_ranking[j], &genetic->child_ranking[j+1]);
 		                                                                  ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#476: FILE: lib/genetic.c:254:
+static void genetic_mutate(genetic_t * genetic)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#478: FILE: lib/genetic.c:256:
+    long child_entry = -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#479: FILE: lib/genetic.c:257:
+    int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#481: FILE: lib/genetic.c:259:
+    for (i = 0; i < genetic->num_mutations; i++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#486: FILE: lib/genetic.c:264:
+    }$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#489: FILE: lib/genetic.c:267:
+static void genetic_calc_stats(genetic_t * genetic)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#491: FILE: lib/genetic.c:269:
+    long total_fitness = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#492: FILE: lib/genetic.c:270:
+    int i;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#495: FILE: lib/genetic.c:273:
+     * so far */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#496: FILE: lib/genetic.c:274:
+    for (i = 0; i < genetic->num_children; i++) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#496: FILE: lib/genetic.c:274:
+    for (i = 0; i < genetic->num_children; i++) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#499: FILE: lib/genetic.c:277:
+    genetic->last_gen_avg_fitness = total_fitness / (long)genetic->num_children;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#501: FILE: lib/genetic.c:279:
+    genetic->avg_fitness = ((genetic->avg_fitness * (long)(genetic->generation_number - 1)) +$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#504: FILE: lib/genetic.c:282:
+    genetic->fitness_history[genetic->fitness_history_index++ & GENETIC_HISTORY_MASK] =$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#507: FILE: lib/genetic.c:285:
+}    $

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#507: FILE: lib/genetic.c:285:
+
+}    

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#509: FILE: lib/genetic.c:287:
+void dump_children(genetic_t * genetic)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#512: FILE: lib/genetic.c:290:
+	long * genes;

WARNING:LINE_SPACING: Missing a blank line after declarations
#513: FILE: lib/genetic.c:291:
+	long * genes;
+	for (i = 0; i < genetic->num_children; i++) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#514: FILE: lib/genetic.c:292:
+^I^Iprintk(KERN_EMERG "%d: %-8ld:\t", i, genetic->child_ranking[i]->fitness); $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#514: FILE: lib/genetic.c:292:
+		printk(KERN_EMERG "%d: %-8ld:\t", i, genetic->child_ranking[i]->fitness); 

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#518: FILE: lib/genetic.c:296:
+			printk("%ld\t", genes[j]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#520: FILE: lib/genetic.c:298:
+		printk("\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#523: FILE: lib/genetic.c:301:
+	printk("\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#526: FILE: lib/genetic.c:304:
+void genetic_new_generation(genetic_t * genetic)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#528: FILE: lib/genetic.c:306:
+    struct list_head * tmp;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#528: FILE: lib/genetic.c:306:
+    struct list_head * tmp;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#531: FILE: lib/genetic.c:309:
+    printk(KERN_EMERG "-------------------------\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#531: FILE: lib/genetic.c:309:
+    printk(KERN_EMERG "-------------------------\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#532: FILE: lib/genetic.c:310:
+    printk(KERN_EMERG "new generation performers: \n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#532: FILE: lib/genetic.c:310:
+    printk(KERN_EMERG "new generation performers: \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#532: FILE: lib/genetic.c:310:
+    printk(KERN_EMERG "new generation performers: \n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#533: FILE: lib/genetic.c:311:
+    dump_children(genetic);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#535: FILE: lib/genetic.c:313:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#535: FILE: lib/genetic.c:313:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#537: FILE: lib/genetic.c:315:
+    genetic_split_performers(genetic);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#540: FILE: lib/genetic.c:318:
+    printk(KERN_EMERG "split performers: \n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#540: FILE: lib/genetic.c:318:
+    printk(KERN_EMERG "split performers: \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#540: FILE: lib/genetic.c:318:
+    printk(KERN_EMERG "split performers: \n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#541: FILE: lib/genetic.c:319:
+    dump_children(genetic);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#543: FILE: lib/genetic.c:321:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#543: FILE: lib/genetic.c:321:
+    $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#545: FILE: lib/genetic.c:323:
+    genetic_calc_stats(genetic);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#548: FILE: lib/genetic.c:326:
+    genetic->natural_selection(genetic);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#551: FILE: lib/genetic.c:329:
+    printk(KERN_EMERG "selected: \n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#551: FILE: lib/genetic.c:329:
+    printk(KERN_EMERG "selected: \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#551: FILE: lib/genetic.c:329:
+    printk(KERN_EMERG "selected: \n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#552: FILE: lib/genetic.c:330:
+    dump_children(genetic);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#556: FILE: lib/genetic.c:334:
+    genetic_mutate(genetic);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#559: FILE: lib/genetic.c:337:
+    printk(KERN_EMERG "mutated: \n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#559: FILE: lib/genetic.c:337:
+    printk(KERN_EMERG "mutated: \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#559: FILE: lib/genetic.c:337:
+    printk(KERN_EMERG "mutated: \n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#560: FILE: lib/genetic.c:338:
+    dump_children(genetic);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#564: FILE: lib/genetic.c:342:
+    /* Move the new children still sitting in the finished queue to
+       the run queue */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#564: FILE: lib/genetic.c:342:
+       the run queue */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#565: FILE: lib/genetic.c:343:
+    tmp = genetic->run_queue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#566: FILE: lib/genetic.c:344:
+    genetic->run_queue = genetic->finished_queue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#567: FILE: lib/genetic.c:345:
+    genetic->finished_queue = tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#569: FILE: lib/genetic.c:347:
+    genetic->child_number = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#570: FILE: lib/genetic.c:348:
+    genetic->generation_number++;$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#572: FILE: lib/genetic.c:350:
+
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#574: FILE: lib/genetic.c:352:
+void genetic_generic_mutate_gene(genetic_child_t * child, long gene_num)

ERROR:CODE_INDENT: code indent should use tabs where possible
#582: FILE: lib/genetic.c:360:
+    ^I/* create a mutation value */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#582: FILE: lib/genetic.c:360:
+    ^I/* create a mutation value */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#582: FILE: lib/genetic.c:360:
+    ^I/* create a mutation value */$

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#585: FILE: lib/genetic.c:363:
+#if 0

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#587: FILE: lib/genetic.c:365:
+	if (gene_value < 0)
+	    gene_value = -gene_value;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#592: FILE: lib/genetic.c:370:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#597: FILE: lib/genetic.c:375:
+/* This assumes that all genes are a unsigned long array of size
+   num_genes */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#597: FILE: lib/genetic.c:375:
+   num_genes */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#598: FILE: lib/genetic.c:376:
+void genetic_generic_mutate_child(genetic_child_t * child)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#605: FILE: lib/genetic.c:383:
+	if (gene_num < 0)
+	    gene_num = -gene_num;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#612: FILE: lib/genetic.c:390:
+^Ielse $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#616: FILE: lib/genetic.c:394:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#618: FILE: lib/genetic.c:396:
+ * C.  Then flip that portion of B and A to make D */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#619: FILE: lib/genetic.c:397:
+void genetic_generic_combine_genes(genetic_child_t * parent_a,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#620: FILE: lib/genetic.c:398:
+				   genetic_child_t * parent_b,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#621: FILE: lib/genetic.c:399:
+				   genetic_child_t * child_a,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#622: FILE: lib/genetic.c:400:
+				   genetic_child_t * child_b)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#624: FILE: lib/genetic.c:402:
+	unsigned long * genes_a = (unsigned long *)parent_a->genes;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#625: FILE: lib/genetic.c:403:
+	unsigned long * genes_b = (unsigned long *)parent_b->genes;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#626: FILE: lib/genetic.c:404:
+	unsigned long * genes_c = (unsigned long *)child_a->genes;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#627: FILE: lib/genetic.c:405:
+^Iunsigned long * genes_d = (unsigned long *)child_b->genes;^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#627: FILE: lib/genetic.c:405:
+	unsigned long * genes_d = (unsigned long *)child_b->genes;	

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#635: FILE: lib/genetic.c:413:
+	if (combine_point < 0)
+	    combine_point = -combine_point;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#640: FILE: lib/genetic.c:418:
+	for (i = combine_point; i < num_genes; i++)
+	    genes_c[i] = genes_a[i];

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#643: FILE: lib/genetic.c:421:
+	for (i = 0; i < combine_point; i++)
+	    genes_c[i] = genes_b[i];

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#646: FILE: lib/genetic.c:424:
+	for (i = combine_point; i < num_genes; i++)
+	    genes_d[i] = genes_b[i];

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#649: FILE: lib/genetic.c:427:
+	for (i = 0; i < combine_point; i++)
+	    genes_d[i] = genes_a[i];

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000218437.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 79 errors, 227 warnings, 24 checks, 593 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000218437.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
