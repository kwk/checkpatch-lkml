WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#74: 
diff -u --recursive --new-file linux-2.4.6-file/arch/i386/kernel/i386_ksyms.c linux-2.4.6-mmap/arch/i386/kernel/i386_ksyms.c

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#112: FILE: fs/nfs/file.c:49:
+	release:	nfs_release,
 	       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#112: FILE: fs/nfs/file.c:49:
+	release:	nfs_release,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#145: FILE: fs/nfs/inode.c:61:
+	clear_inode:	nfs_clear_inode,
 	           ^

WARNING:INDENTED_LABEL: labels should not be indented
#145: FILE: fs/nfs/inode.c:61:
+	clear_inode:	nfs_clear_inode,

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#372: FILE: include/linux/sunrpc/auth.h:17:
+#include <asm/atomic.h>

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#381: FILE: include/linux/sunrpc/auth.h:27:
+	struct rpc_auth *	cr_auth;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#382: FILE: include/linux/sunrpc/auth.h:28:
+	struct rpc_credops *	cr_ops;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rpc_cred *' should also have an identifier name
#405: FILE: include/linux/sunrpc/auth.h:102:
+void			put_rpccred(struct rpc_cred *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#415: FILE: include/linux/sunrpc/auth.h:117:
+struct rpc_cred *	get_rpccred(struct rpc_cred *cred)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#431: FILE: net/sunrpc/auth.c:85:
+/*
+ * Destroy an unreferenced credential

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#442: FILE: net/sunrpc/auth.c:95:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#467: FILE: net/sunrpc/auth.c:115:
+/*
+ * Clear the RPC credential cache, and delete those credentials

CHECK:BRACES: braces {} should be used on all arms of this statement
#488: FILE: net/sunrpc/auth.c:130:
+			if (atomic_read(&cred->cr_count) == 0) {
[...]
+			} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#491: FILE: net/sunrpc/auth.c:133:
+			} else

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000524339.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 8 warnings, 2 checks, 609 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000524339.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
