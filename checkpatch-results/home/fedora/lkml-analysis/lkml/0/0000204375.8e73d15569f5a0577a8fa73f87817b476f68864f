WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#47: 
http://jdelvare.net1.nerim.net/sensors/linux-2.6.11-rc5-i2c-w83627ehf-beta1.diff

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#113: FILE: drivers/i2c/chips/w83627ehf.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#114: FILE: drivers/i2c/chips/w83627ehf.c:2:
+/*
+    w83627ehf - Driver for the hardware monitoring functionality of

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: drivers/i2c/chips/w83627ehf.c:3:
+                the Winbond W83627EHF Super-I/O chip$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#132: FILE: drivers/i2c/chips/w83627ehf.c:20:
+    along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#133: FILE: drivers/i2c/chips/w83627ehf.c:21:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#135: FILE: drivers/i2c/chips/w83627ehf.c:23:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#150: FILE: drivers/i2c/chips/w83627ehf.c:38:
+#include <asm/io.h>

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#154: FILE: drivers/i2c/chips/w83627ehf.c:42:
+/* Addresses to scan
+   The actual ISA address is read from Super-I/O configuration space */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#154: FILE: drivers/i2c/chips/w83627ehf.c:42:
+   The actual ISA address is read from Super-I/O configuration space */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#315: FILE: drivers/i2c/chips/w83627ehf.c:203:
+	return (((reg & 0xff00) == 0x100
+	      || (reg & 0xff00) == 0x200)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#316: FILE: drivers/i2c/chips/w83627ehf.c:204:
+	      || (reg & 0xff00) == 0x200)
+	     && ((reg & 0x00ff) == 0x50

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#317: FILE: drivers/i2c/chips/w83627ehf.c:205:
+	     && ((reg & 0x00ff) == 0x50
+	      || (reg & 0x00ff) == 0x53

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#318: FILE: drivers/i2c/chips/w83627ehf.c:206:
+	      || (reg & 0x00ff) == 0x53
+	      || (reg & 0x00ff) == 0x55));

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#386: FILE: drivers/i2c/chips/w83627ehf.c:274:
+	if (time_after(jiffies, data->last_updated + HZ)
+	 || !data->valid) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#390: FILE: drivers/i2c/chips/w83627ehf.c:278:
+			data->fan[i] = w83627ehf_read_value(client,
+				       W83627EHF_REG_FAN[i]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#392: FILE: drivers/i2c/chips/w83627ehf.c:280:
+			data->fan_min[i] = w83627ehf_read_value(client,
+					   W83627EHF_REG_FAN_MIN[i]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#397: FILE: drivers/i2c/chips/w83627ehf.c:285:
+		data->temp1 = w83627ehf_read_value(client,
+			      W83627EHF_REG_TEMP1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#399: FILE: drivers/i2c/chips/w83627ehf.c:287:
+		data->temp1_max = w83627ehf_read_value(client,
+				  W83627EHF_REG_TEMP1_OVER);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#401: FILE: drivers/i2c/chips/w83627ehf.c:289:
+		data->temp1_max_hyst = w83627ehf_read_value(client,
+				       W83627EHF_REG_TEMP1_HYST);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#404: FILE: drivers/i2c/chips/w83627ehf.c:292:
+			data->temp[i] = w83627ehf_read_value(client,
+					W83627EHF_REG_TEMP[i]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#406: FILE: drivers/i2c/chips/w83627ehf.c:294:
+			data->temp_max[i] = w83627ehf_read_value(client,
+					    W83627EHF_REG_TEMP_OVER[i]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#408: FILE: drivers/i2c/chips/w83627ehf.c:296:
+			data->temp_max_hyst[i] = w83627ehf_read_value(client,
+						 W83627EHF_REG_TEMP_HYST[i]);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#440: FILE: drivers/i2c/chips/w83627ehf.c:328:
+#define show_fan_reg(reg) \
+static ssize_t \
+show_##reg(struct device *dev, char *buf, int nr) \
+{ \
+	struct w83627ehf_data *data = w83627ehf_update_device(dev); \
+	return sprintf(buf, "%d\n", \
+		       fan_from_reg(data->reg[nr], \
+				    div_from_reg(data->fan_div[nr]))); \
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#449: FILE: drivers/i2c/chips/w83627ehf.c:337:
+}
+show_fan_reg(fan);

WARNING:LINE_SPACING: Missing a blank line after declarations
#456: FILE: drivers/i2c/chips/w83627ehf.c:344:
+	struct w83627ehf_data *data = w83627ehf_update_device(dev);
+	return sprintf(buf, "%u\n",

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#465: FILE: drivers/i2c/chips/w83627ehf.c:353:
+	unsigned int val = simple_strtoul(buf, NULL, 10);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#468: FILE: drivers/i2c/chips/w83627ehf.c:356:
+	data->fan_min[nr] = fan_to_reg(val,
+			    div_from_reg(data->fan_div[nr]));

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#476: FILE: drivers/i2c/chips/w83627ehf.c:364:
+/* Note: we save and restore the fan minimum here, because its value is
+   determined in part by the fan divisor.  This follows the principle of

WARNING:TYPO_SPELLING: 'suprise' may be misspelled - perhaps 'surprise'?
#477: FILE: drivers/i2c/chips/w83627ehf.c:365:
+   least suprise; the user doesn't expect the fan minimum to change just
          ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#478: FILE: drivers/i2c/chips/w83627ehf.c:366:
+   because the divisor changed. */

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#487: FILE: drivers/i2c/chips/w83627ehf.c:375:
+	val = simple_strtoul(buf, NULL, 10);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#494: FILE: drivers/i2c/chips/w83627ehf.c:382:
+	case 1: data->fan_div[nr] = 0; break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#495: FILE: drivers/i2c/chips/w83627ehf.c:383:
+	case 2: data->fan_div[nr] = 1; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#496: FILE: drivers/i2c/chips/w83627ehf.c:384:
+	case 4: data->fan_div[nr] = 2; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#497: FILE: drivers/i2c/chips/w83627ehf.c:385:
+	case 8: data->fan_div[nr] = 3; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#498: FILE: drivers/i2c/chips/w83627ehf.c:386:
+	case 16: data->fan_div[nr] = 4; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#499: FILE: drivers/i2c/chips/w83627ehf.c:387:
+	case 32: data->fan_div[nr] = 5; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#500: FILE: drivers/i2c/chips/w83627ehf.c:388:
+	case 64: data->fan_div[nr] = 6; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#501: FILE: drivers/i2c/chips/w83627ehf.c:389:
+	case 128: data->fan_div[nr] = 7; break;

WARNING:SPLIT_STRING: quoted string split across lines
#504: FILE: drivers/i2c/chips/w83627ehf.c:392:
+		dev_err(&client->dev, "Fan clock divider value %u not "
+			"supported", val);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#506: FILE: drivers/i2c/chips/w83627ehf.c:394:
+		dev_err(&client->dev, "Choose one of 1, 2, 4, 8, 16, 32, "
+			"64 or 128");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#553: FILE: drivers/i2c/chips/w83627ehf.c:441:
+	w83627ehf_write_value(client, W83627EHF_REG_FAN_MIN[nr],
+			     data->fan_min[nr]);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'offset' may be better as '(offset)' to avoid precedence issues
#558: FILE: drivers/i2c/chips/w83627ehf.c:446:
+#define sysfs_fan_offset(offset) \
+static ssize_t \
+show_reg_fan_##offset(struct device *dev, char *buf) \
+{ \
+	return show_fan(dev, buf, offset-1); \
+} \
+static DEVICE_ATTR(fan##offset##_input, S_IRUGO, \
+		   show_reg_fan_##offset, NULL);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#558: FILE: drivers/i2c/chips/w83627ehf.c:446:
+#define sysfs_fan_offset(offset) \
+static ssize_t \
+show_reg_fan_##offset(struct device *dev, char *buf) \
+{ \
+	return show_fan(dev, buf, offset-1); \
+} \
+static DEVICE_ATTR(fan##offset##_input, S_IRUGO, \
+		   show_reg_fan_##offset, NULL);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#562: FILE: drivers/i2c/chips/w83627ehf.c:450:
+	return show_fan(dev, buf, offset-1); \
 	                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#564: FILE: drivers/i2c/chips/w83627ehf.c:452:
+static DEVICE_ATTR(fan##offset##_input, S_IRUGO, \

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'offset' - possible side-effects?
#567: FILE: drivers/i2c/chips/w83627ehf.c:455:
+#define sysfs_fan_min_offset(offset) \
+static ssize_t \
+show_reg_fan##offset##_min(struct device *dev, char *buf) \
+{ \
+	return show_fan_min(dev, buf, offset-1); \
+} \
+static ssize_t \
+store_reg_fan##offset##_min(struct device *dev, const char *buf, \
+			    size_t count) \
+{ \
+	return store_fan_min(dev, buf, count, offset-1); \
+} \
+static DEVICE_ATTR(fan##offset##_min, S_IRUGO | S_IWUSR, \
+		   show_reg_fan##offset##_min, \
+		   store_reg_fan##offset##_min);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'offset' may be better as '(offset)' to avoid precedence issues
#567: FILE: drivers/i2c/chips/w83627ehf.c:455:
+#define sysfs_fan_min_offset(offset) \
+static ssize_t \
+show_reg_fan##offset##_min(struct device *dev, char *buf) \
+{ \
+	return show_fan_min(dev, buf, offset-1); \
+} \
+static ssize_t \
+store_reg_fan##offset##_min(struct device *dev, const char *buf, \
+			    size_t count) \
+{ \
+	return store_fan_min(dev, buf, count, offset-1); \
+} \
+static DEVICE_ATTR(fan##offset##_min, S_IRUGO | S_IWUSR, \
+		   show_reg_fan##offset##_min, \
+		   store_reg_fan##offset##_min);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#567: FILE: drivers/i2c/chips/w83627ehf.c:455:
+#define sysfs_fan_min_offset(offset) \
+static ssize_t \
+show_reg_fan##offset##_min(struct device *dev, char *buf) \
+{ \
+	return show_fan_min(dev, buf, offset-1); \
+} \
+static ssize_t \
+store_reg_fan##offset##_min(struct device *dev, const char *buf, \
+			    size_t count) \
+{ \
+	return store_fan_min(dev, buf, count, offset-1); \
+} \
+static DEVICE_ATTR(fan##offset##_min, S_IRUGO | S_IWUSR, \
+		   show_reg_fan##offset##_min, \
+		   store_reg_fan##offset##_min);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#571: FILE: drivers/i2c/chips/w83627ehf.c:459:
+	return show_fan_min(dev, buf, offset-1); \
 	                                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#577: FILE: drivers/i2c/chips/w83627ehf.c:465:
+	return store_fan_min(dev, buf, count, offset-1); \
 	                                            ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#579: FILE: drivers/i2c/chips/w83627ehf.c:467:
+static DEVICE_ATTR(fan##offset##_min, S_IRUGO | S_IWUSR, \

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'offset' - possible side-effects?
#583: FILE: drivers/i2c/chips/w83627ehf.c:471:
+#define sysfs_fan_div_offset(offset) \
+static ssize_t \
+show_reg_fan##offset##_div(struct device *dev, char *buf) \
+{ \
+	return show_fan_div(dev, buf, offset - 1); \
+} \
+static ssize_t \
+store_reg_fan##offset##_div(struct device *dev, \
+			    const char *buf, size_t count) \
+{ \
+	return store_fan_div(dev, buf, count, offset - 1); \
+} \
+static DEVICE_ATTR(fan##offset##_div, S_IRUGO | S_IWUSR, \
+		   show_reg_fan##offset##_div, \
+		   store_reg_fan##offset##_div);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'offset' may be better as '(offset)' to avoid precedence issues
#583: FILE: drivers/i2c/chips/w83627ehf.c:471:
+#define sysfs_fan_div_offset(offset) \
+static ssize_t \
+show_reg_fan##offset##_div(struct device *dev, char *buf) \
+{ \
+	return show_fan_div(dev, buf, offset - 1); \
+} \
+static ssize_t \
+store_reg_fan##offset##_div(struct device *dev, \
+			    const char *buf, size_t count) \
+{ \
+	return store_fan_div(dev, buf, count, offset - 1); \
+} \
+static DEVICE_ATTR(fan##offset##_div, S_IRUGO | S_IWUSR, \
+		   show_reg_fan##offset##_div, \
+		   store_reg_fan##offset##_div);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#583: FILE: drivers/i2c/chips/w83627ehf.c:471:
+#define sysfs_fan_div_offset(offset) \
+static ssize_t \
+show_reg_fan##offset##_div(struct device *dev, char *buf) \
+{ \
+	return show_fan_div(dev, buf, offset - 1); \
+} \
+static ssize_t \
+store_reg_fan##offset##_div(struct device *dev, \
+			    const char *buf, size_t count) \
+{ \
+	return store_fan_div(dev, buf, count, offset - 1); \
+} \
+static DEVICE_ATTR(fan##offset##_div, S_IRUGO | S_IWUSR, \
+		   show_reg_fan##offset##_div, \
+		   store_reg_fan##offset##_div);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#595: FILE: drivers/i2c/chips/w83627ehf.c:483:
+static DEVICE_ATTR(fan##offset##_div, S_IRUGO | S_IWUSR, \

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#615: FILE: drivers/i2c/chips/w83627ehf.c:503:
+#define show_temp1_reg(reg) \
+static ssize_t \
+show_##reg(struct device *dev, char *buf) \
+{ \
+	struct w83627ehf_data *data = w83627ehf_update_device(dev); \
+	return sprintf(buf, "%d\n", temp1_from_reg(data->reg)); \
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#622: FILE: drivers/i2c/chips/w83627ehf.c:510:
+}
+show_temp1_reg(temp1);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#632: FILE: drivers/i2c/chips/w83627ehf.c:520:
+	u32 val = simple_strtoul(buf, NULL, 10); \

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#638: FILE: drivers/i2c/chips/w83627ehf.c:526:
+}
+store_temp1_reg(OVER, max);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_temp1' to 'temp1_input_show'
#641: FILE: drivers/i2c/chips/w83627ehf.c:529:
+static DEVICE_ATTR(temp1_input, S_IRUGO, show_temp1, NULL);

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#641: FILE: drivers/i2c/chips/w83627ehf.c:529:
+static DEVICE_ATTR(temp1_input, S_IRUGO, show_temp1, NULL);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxW)
#642: FILE: drivers/i2c/chips/w83627ehf.c:530:
+static DEVICE_ATTR(temp1_max, S_IRUGO| S_IWUSR,
                                      ^

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_temp1_max' to 'temp1_max_show' 'store_temp1_max' to 'temp1_max_store'
#642: FILE: drivers/i2c/chips/w83627ehf.c:530:
+static DEVICE_ATTR(temp1_max, S_IRUGO| S_IWUSR,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO| S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#642: FILE: drivers/i2c/chips/w83627ehf.c:530:
+static DEVICE_ATTR(temp1_max, S_IRUGO| S_IWUSR,

CHECK:SPACING: spaces preferred around that '|' (ctx:VxW)
#644: FILE: drivers/i2c/chips/w83627ehf.c:532:
+static DEVICE_ATTR(temp1_max_hyst, S_IRUGO| S_IWUSR,
                                           ^

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_temp1_max_hyst' to 'temp1_max_hyst_show' 'store_temp1_max_hyst' to 'temp1_max_hyst_store'
#644: FILE: drivers/i2c/chips/w83627ehf.c:532:
+static DEVICE_ATTR(temp1_max_hyst, S_IRUGO| S_IWUSR,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO| S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#644: FILE: drivers/i2c/chips/w83627ehf.c:532:
+static DEVICE_ATTR(temp1_max_hyst, S_IRUGO| S_IWUSR,

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#647: FILE: drivers/i2c/chips/w83627ehf.c:535:
+#define show_temp_reg(reg) \
+static ssize_t \
+show_##reg (struct device *dev, char *buf, int nr) \
+{ \
+	struct w83627ehf_data *data = w83627ehf_update_device(dev); \
+	return sprintf(buf, "%d\n", \
+		       LM75_TEMP_FROM_REG(data->reg[nr])); \
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#649: FILE: drivers/i2c/chips/w83627ehf.c:537:
+show_##reg (struct device *dev, char *buf, int nr) \

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#655: FILE: drivers/i2c/chips/w83627ehf.c:543:
+}
+show_temp_reg(temp);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'reg' - possible side-effects?
#659: FILE: drivers/i2c/chips/w83627ehf.c:547:
+#define store_temp_reg(REG, reg) \
+static ssize_t \
+store_##reg (struct device *dev, const char *buf, size_t count, int nr) \
+{ \
+	struct i2c_client *client = to_i2c_client(dev); \
+	struct w83627ehf_data *data = i2c_get_clientdata(client); \
+	u32 val = simple_strtoul(buf, NULL, 10); \
+	data->reg[nr] = LM75_TEMP_TO_REG(val); \
+	w83627ehf_write_value(client, W83627EHF_REG_TEMP_##REG[nr], \
+			      data->reg[nr]); \
+	return count; \
+}

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'reg' may be better as '(reg)' to avoid precedence issues
#659: FILE: drivers/i2c/chips/w83627ehf.c:547:
+#define store_temp_reg(REG, reg) \
+static ssize_t \
+store_##reg (struct device *dev, const char *buf, size_t count, int nr) \
+{ \
+	struct i2c_client *client = to_i2c_client(dev); \
+	struct w83627ehf_data *data = i2c_get_clientdata(client); \
+	u32 val = simple_strtoul(buf, NULL, 10); \
+	data->reg[nr] = LM75_TEMP_TO_REG(val); \
+	w83627ehf_write_value(client, W83627EHF_REG_TEMP_##REG[nr], \
+			      data->reg[nr]); \
+	return count; \
+}

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#661: FILE: drivers/i2c/chips/w83627ehf.c:549:
+store_##reg (struct device *dev, const char *buf, size_t count, int nr) \

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#665: FILE: drivers/i2c/chips/w83627ehf.c:553:
+	u32 val = simple_strtoul(buf, NULL, 10); \

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#671: FILE: drivers/i2c/chips/w83627ehf.c:559:
+}
+store_temp_reg(OVER, temp_max);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'offset' may be better as '(offset)' to avoid precedence issues
#674: FILE: drivers/i2c/chips/w83627ehf.c:562:
+#define sysfs_temp_offset(offset) \
+static ssize_t \
+show_reg_temp##offset (struct device *dev, char *buf) \
+{ \
+	return show_temp(dev, buf, offset - 2); \
+} \
+static DEVICE_ATTR(temp##offset##_input, S_IRUGO, \
+		   show_reg_temp##offset, NULL);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#674: FILE: drivers/i2c/chips/w83627ehf.c:562:
+#define sysfs_temp_offset(offset) \
+static ssize_t \
+show_reg_temp##offset (struct device *dev, char *buf) \
+{ \
+	return show_temp(dev, buf, offset - 2); \
+} \
+static DEVICE_ATTR(temp##offset##_input, S_IRUGO, \
+		   show_reg_temp##offset, NULL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#676: FILE: drivers/i2c/chips/w83627ehf.c:564:
+show_reg_temp##offset (struct device *dev, char *buf) \

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#680: FILE: drivers/i2c/chips/w83627ehf.c:568:
+static DEVICE_ATTR(temp##offset##_input, S_IRUGO, \

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'offset' - possible side-effects?
#683: FILE: drivers/i2c/chips/w83627ehf.c:571:
+#define sysfs_temp_reg_offset(reg, offset) \
+static ssize_t \
+show_reg_temp##offset##_##reg(struct device *dev, char *buf) \
+{ \
+	return show_temp_##reg(dev, buf, offset - 2); \
+} \
+static ssize_t \
+store_reg_temp##offset##_##reg(struct device *dev, const char *buf, \
+			       size_t count) \
+{ \
+	return store_temp_##reg(dev, buf, count, offset - 2); \
+} \
+static DEVICE_ATTR(temp##offset##_##reg, S_IRUGO| S_IWUSR, \
+		   show_reg_temp##offset##_##reg, \
+		   store_reg_temp##offset##_##reg);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'offset' may be better as '(offset)' to avoid precedence issues
#683: FILE: drivers/i2c/chips/w83627ehf.c:571:
+#define sysfs_temp_reg_offset(reg, offset) \
+static ssize_t \
+show_reg_temp##offset##_##reg(struct device *dev, char *buf) \
+{ \
+	return show_temp_##reg(dev, buf, offset - 2); \
+} \
+static ssize_t \
+store_reg_temp##offset##_##reg(struct device *dev, const char *buf, \
+			       size_t count) \
+{ \
+	return store_temp_##reg(dev, buf, count, offset - 2); \
+} \
+static DEVICE_ATTR(temp##offset##_##reg, S_IRUGO| S_IWUSR, \
+		   show_reg_temp##offset##_##reg, \
+		   store_reg_temp##offset##_##reg);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#683: FILE: drivers/i2c/chips/w83627ehf.c:571:
+#define sysfs_temp_reg_offset(reg, offset) \
+static ssize_t \
+show_reg_temp##offset##_##reg(struct device *dev, char *buf) \
+{ \
+	return show_temp_##reg(dev, buf, offset - 2); \
+} \
+static ssize_t \
+store_reg_temp##offset##_##reg(struct device *dev, const char *buf, \
+			       size_t count) \
+{ \
+	return store_temp_##reg(dev, buf, count, offset - 2); \
+} \
+static DEVICE_ATTR(temp##offset##_##reg, S_IRUGO| S_IWUSR, \
+		   show_reg_temp##offset##_##reg, \
+		   store_reg_temp##offset##_##reg);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxW)
#695: FILE: drivers/i2c/chips/w83627ehf.c:583:
+static DEVICE_ATTR(temp##offset##_##reg, S_IRUGO| S_IWUSR, \
                                                 ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO| S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#695: FILE: drivers/i2c/chips/w83627ehf.c:583:
+static DEVICE_ATTR(temp##offset##_##reg, S_IRUGO| S_IWUSR, \

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#748: FILE: drivers/i2c/chips/w83627ehf.c:636:
+	if (!(data = kmalloc(sizeof(struct w83627ehf_data), GFP_KERNEL))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*data)...) over kmalloc(sizeof(struct w83627ehf_data)...)
#748: FILE: drivers/i2c/chips/w83627ehf.c:636:
+	if (!(data = kmalloc(sizeof(struct w83627ehf_data), GFP_KERNEL))) {

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#762: FILE: drivers/i2c/chips/w83627ehf.c:650:
+	strlcpy(client->name, "w83627ehf", I2C_NAME_SIZE);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#767: FILE: drivers/i2c/chips/w83627ehf.c:655:
+	if ((err = i2c_attach_client(client)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#776: FILE: drivers/i2c/chips/w83627ehf.c:664:
+		data->fan_min[i] = w83627ehf_read_value(client,
+				   W83627EHF_REG_FAN_MIN[i]);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#790: FILE: drivers/i2c/chips/w83627ehf.c:678:
+	/* It looks like fan4 and fan5 pins can be alternatively used
+	   as fan on/off switches */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#790: FILE: drivers/i2c/chips/w83627ehf.c:678:
+	   as fan on/off switches */

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#834: FILE: drivers/i2c/chips/w83627ehf.c:722:
+	if ((err = i2c_detach_client(client))) {

WARNING:SPLIT_STRING: quoted string split across lines
#836: FILE: drivers/i2c/chips/w83627ehf.c:724:
+		dev_err(&client->dev, "Client deregistration failed, "
+			"client not detached.\n");

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#889: FILE: drivers/i2c/chips/w83627ehf.c:777:
+	if (w83627ehf_find(0x2e, &normal_isa[0])
+	 && w83627ehf_find(0x4e, &normal_isa[0]))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000204375.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 39 warnings, 43 checks, 820 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000204375.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
