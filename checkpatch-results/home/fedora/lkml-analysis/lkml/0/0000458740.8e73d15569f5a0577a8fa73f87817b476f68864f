WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
- Move set_transfer to ide-taskfile.c this is the only place where it's used

WARNING:TYPO_SPELLING: 'disfunctional' may be misspelled - perhaps 'dysfunctional'?
#52: 
- Remove disfunctional pdcadma code. It is only misleading to the user.
         ^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#141: FILE: drivers/ide/ata-timing.c:196:
+int ata_timing_compute(struct ata_device *drive, short speed, struct ata_timing *t,
 		int T, int UT)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#189: FILE: drivers/ide/ide.c:362:
+	switch(drive->current_speed) {
+		case XFER_UDMA_7:	return XFER_UDMA_6;
+		case XFER_UDMA_6:	return XFER_UDMA_5;
+		case XFER_UDMA_5:	return XFER_UDMA_4;
+		case XFER_UDMA_4:	return XFER_UDMA_3;
+		case XFER_UDMA_3:	return XFER_UDMA_2;
+		case XFER_UDMA_2:	return XFER_UDMA_1;
+		case XFER_UDMA_1:	return XFER_UDMA_0;
[...]
+		case XFER_UDMA_0:
+		default:		return XFER_PIO_4;

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required before the open parenthesis '('
#189: FILE: drivers/ide/ide.c:362:
+	switch(drive->current_speed) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: drivers/ide/ide.c:391:
+^I^I        drive->channel->speedproc(drive, pio);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#249: FILE: drivers/ide/ide.c:881:
+		return ide_error(drive, rq, "drive_cmd", stat); /* already calls ide_end_drive_cmd */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:LINE_SPACING: Please don't use multiple blank lines
#268: FILE: drivers/ide/ide.c:900:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#307: FILE: drivers/ide/ide.c:1229:
+			printk(KERN_ERR "%s: error: not busy while queueing!\n", drive->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#316: FILE: drivers/ide/ide.c:1244:
+			printk(KERN_ERR "%s: error: DMA in progress...\n", drive->name);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#693: FILE: drivers/ide/ide-geometry.c:15:
+extern struct ata_device * get_info_ptr(kdev_t);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rq->buffer"
#845: FILE: drivers/ide/ide-taskfile.c:853:
+	if (drive->channel->chipset == ide_pdc4030 && rq->buffer != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#846: FILE: drivers/ide/ide-taskfile.c:854:
+		return -ENOSYS;  /* special drive cmds not supported */

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#850: FILE: drivers/ide/ide-taskfile.c:858:
+	rq->rq_dev = mk_kdev(major,(drive->select.b.unit)<<PARTN_BITS);
 	                          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#850: FILE: drivers/ide/ide-taskfile.c:858:
+	rq->rq_dev = mk_kdev(major,(drive->select.b.unit)<<PARTN_BITS);
 	                                                 ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#878: FILE: drivers/ide/ide-taskfile.c:886:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'args->taskfile.command == WIN_SETFEATURES'
#894: FILE: drivers/ide/ide-taskfile.c:921:
+	if ((args->taskfile.command == WIN_SETFEATURES) &&
+	    (args->taskfile.sector_number >= XFER_SW_DMA_0) &&
+	    (args->taskfile.feature == SETFEATURES_XFER) &&
+	    (drive->id->dma_ultra ||
+	     drive->id->dma_mword ||
+	     drive->id->dma_1word))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'args->taskfile.sector_number >= XFER_SW_DMA_0'
#894: FILE: drivers/ide/ide-taskfile.c:921:
+	if ((args->taskfile.command == WIN_SETFEATURES) &&
+	    (args->taskfile.sector_number >= XFER_SW_DMA_0) &&
+	    (args->taskfile.feature == SETFEATURES_XFER) &&
+	    (drive->id->dma_ultra ||
+	     drive->id->dma_mword ||
+	     drive->id->dma_1word))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'args->taskfile.feature == SETFEATURES_XFER'
#894: FILE: drivers/ide/ide-taskfile.c:921:
+	if ((args->taskfile.command == WIN_SETFEATURES) &&
+	    (args->taskfile.sector_number >= XFER_SW_DMA_0) &&
+	    (args->taskfile.feature == SETFEATURES_XFER) &&
+	    (drive->id->dma_ultra ||
+	     drive->id->dma_mword ||
+	     drive->id->dma_1word))

WARNING:TYPO_SPELLING: 'capabilties' may be misspelled - perhaps 'capabilities'?
#908: FILE: drivers/ide/ide-taskfile.c:935:
+ * can improperly report capabilties, we check to see if the host adapter
                          ^^^^^^^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'args->taskfile.command == WIN_SETFEATURES'
#914: FILE: drivers/ide/ide-taskfile.c:941:
+	if ((args->taskfile.command == WIN_SETFEATURES) &&
+	    (args->taskfile.sector_number > XFER_UDMA_2) &&
+	    (args->taskfile.feature == SETFEATURES_XFER)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'args->taskfile.sector_number > XFER_UDMA_2'
#914: FILE: drivers/ide/ide-taskfile.c:941:
+	if ((args->taskfile.command == WIN_SETFEATURES) &&
+	    (args->taskfile.sector_number > XFER_UDMA_2) &&
+	    (args->taskfile.feature == SETFEATURES_XFER)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'args->taskfile.feature == SETFEATURES_XFER'
#914: FILE: drivers/ide/ide-taskfile.c:941:
+	if ((args->taskfile.command == WIN_SETFEATURES) &&
+	    (args->taskfile.sector_number > XFER_UDMA_2) &&
+	    (args->taskfile.feature == SETFEATURES_XFER)) {

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#918: FILE: drivers/ide/ide-taskfile.c:945:
+			printk("%s: Speed warnings UDMA 3/4/5 is not functional.\n", drive->channel->name);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#918: FILE: drivers/ide/ide-taskfile.c:945:
+			printk("%s: Speed warnings UDMA 3/4/5 is not functional.\n", drive->channel->name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#927: FILE: drivers/ide/ide-taskfile.c:954:
+			printk("%s: Speed warnings UDMA 3/4/5 is not functional.\n", drive->name);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#978: FILE: drivers/ide/ide-taskfile.c:1041:
+EXPORT_SYMBOL(ide_do_drive_cmd);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1023: FILE: drivers/ide/pdc4030.c:319:
+	hwif->io_32bit = hwif2->io_32bit = 1;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:LONG_LINE_COMMENT: line length of 108 exceeds 100 columns
#1249: FILE: include/linux/ide.h:454:
+	unsigned long poll_timeout;				/* timeout value during polled operations */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ata_device *' should also have an identifier name
#1285: FILE: include/linux/ide.h:496:
+	int (*busproc)(struct ata_device *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1285: FILE: include/linux/ide.h:496:
+	int (*busproc)(struct ata_device *, int);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000458740.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 5 errors, 14 warnings, 12 checks, 1016 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000458740.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
