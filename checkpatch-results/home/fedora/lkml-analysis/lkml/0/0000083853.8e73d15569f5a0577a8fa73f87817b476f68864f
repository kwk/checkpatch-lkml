WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
grouped by the cpurc structure.  Load estimation is necessary for controlling

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#48: FILE: include/linux/cpu_rc.h:1:
+#ifndef _LINUX_CPU_RC_H_

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#70: FILE: include/linux/cpu_rc.h:23:
+	spinlock_t lock;

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#82: FILE: include/linux/cpu_rc.h:35:
+	} stat[NR_CPUS];	/* XXX  need alignment */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#85: FILE: include/linux/cpu_rc.h:38:
+extern struct cpu_rc *cpu_rc_get(task_t *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'task_t *' should also have an identifier name
#85: FILE: include/linux/cpu_rc.h:38:
+extern struct cpu_rc *cpu_rc_get(task_t *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#86: FILE: include/linux/cpu_rc.h:39:
+extern unsigned int cpu_rc_load(struct cpu_rc *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cpu_rc *' should also have an identifier name
#86: FILE: include/linux/cpu_rc.h:39:
+extern unsigned int cpu_rc_load(struct cpu_rc *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#87: FILE: include/linux/cpu_rc.h:40:
+extern void cpu_rc_account(task_t *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'task_t *' should also have an identifier name
#87: FILE: include/linux/cpu_rc.h:40:
+extern void cpu_rc_account(task_t *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#87: FILE: include/linux/cpu_rc.h:40:
+extern void cpu_rc_account(task_t *, unsigned long);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#136: FILE: init/Kconfig:264:
+config CPU_RC
+	bool "CPU resource controller"
+	depends on CKRM_RES_CPU
+	help
+	  This options will let you control the CPU resource by scaling
+	  the timeslice allocated for each tasks.
+
+	  Say N if unsure.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#165: FILE: kernel/cpu_rc.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#166: FILE: kernel/cpu_rc.c:2:
+ *  kernel/cpu_rc.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#189: FILE: kernel/cpu_rc.c:25:
+	BUG_ON(!cr);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#201: FILE: kernel/cpu_rc.c:37:
+	BUG_ON(!n);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000083853.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 12 warnings, 4 checks, 249 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000083853.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
