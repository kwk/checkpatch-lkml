WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
> > > Sure not, and I don't think "everything" in PnP will ever work. :) But

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#177: 
--- a/scripts/mod/file2alias.c	2006-05-02 23:38:44.000000000 +0200

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:LINE_SPACING: Missing a blank line after declarations
#192: FILE: scripts/mod/file2alias.c:284:
+	const char *bb = b;
+	return strcmp(aa, bb);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#208: FILE: scripts/mod/file2alias.c:295:
+		if (! *id->devs[j].id)
+		    break;

ERROR:SPACING: space prohibited after that '!' (ctx:BxW)
#208: FILE: scripts/mod/file2alias.c:295:
+		if (! *id->devs[j].id)
 		    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TABSTOP: Statements should start on a tabstop
#209: FILE: scripts/mod/file2alias.c:296:
+		    break;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#212: FILE: scripts/mod/file2alias.c:299:
+	for (i = 0; i < j; i++) {
+		sprintf(alias + strlen(alias), "*d%s", id->devs[i].id);
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#232: FILE: drivers/pnp/card.c:163:
+static ssize_t pnp_card_modalias_show(struct device *dmdev, struct device_attribute *attr, char *buf)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#236: FILE: drivers/pnp/card.c:167:
+	struct pnp_id * pos = card->id;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#246: FILE: drivers/pnp/card.c:177:
+	for (i = 0; i < count; i++) {
+		str += sprintf(str, "d%s", ids[i]);
+	}

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'pnp_card_modalias_show' to 'modalias_show'
#251: FILE: drivers/pnp/card.c:182:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

ERROR:SPACING: space required after that ',' (ctx:VxV)
#253: FILE: drivers/pnp/card.c:184:
+static DEVICE_ATTR(modalias,S_IRUGO,pnp_card_modalias_show,NULL);
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#253: FILE: drivers/pnp/card.c:184:
+static DEVICE_ATTR(modalias,S_IRUGO,pnp_card_modalias_show,NULL);
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#253: FILE: drivers/pnp/card.c:184:
+static DEVICE_ATTR(modalias,S_IRUGO,pnp_card_modalias_show,NULL);
                                                           ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#253: FILE: drivers/pnp/card.c:184:
+static DEVICE_ATTR(modalias,S_IRUGO,pnp_card_modalias_show,NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:SPACING: space required after that ',' (ctx:VxO)
#259: FILE: drivers/pnp/card.c:190:
+	device_create_file(&card->dev,&dev_attr_modalias);
 	                             ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#259: FILE: drivers/pnp/card.c:190:
+	device_create_file(&card->dev,&dev_attr_modalias);
 	                              ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#274: FILE: drivers/pnp/interface.c:466:
+	struct pnp_id * pos = dev->id;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#278: FILE: drivers/pnp/interface.c:470:
+		str += sprintf(str,"d%s", pos->id);
 		                  ^

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'pnp_modalias_show' to 'modalias_show'
#283: FILE: drivers/pnp/interface.c:475:
+}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#285: FILE: drivers/pnp/interface.c:477:
+static DEVICE_ATTR(modalias,S_IRUGO,pnp_modalias_show,NULL);
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#285: FILE: drivers/pnp/interface.c:477:
+static DEVICE_ATTR(modalias,S_IRUGO,pnp_modalias_show,NULL);
                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#285: FILE: drivers/pnp/interface.c:477:
+static DEVICE_ATTR(modalias,S_IRUGO,pnp_modalias_show,NULL);
                                                      ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#285: FILE: drivers/pnp/interface.c:477:
+static DEVICE_ATTR(modalias,S_IRUGO,pnp_modalias_show,NULL);

ERROR:SPACING: space required after that ',' (ctx:VxO)
#292: FILE: drivers/pnp/interface.c:484:
+	device_create_file(&dev->dev,&dev_attr_modalias);
 	                            ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#292: FILE: drivers/pnp/interface.c:484:
+	device_create_file(&dev->dev,&dev_attr_modalias);
 	                             ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000079139.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 15 errors, 11 warnings, 0 checks, 106 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000079139.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
