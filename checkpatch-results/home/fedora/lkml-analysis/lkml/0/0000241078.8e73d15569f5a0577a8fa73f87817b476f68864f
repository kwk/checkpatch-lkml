CHECK:SPACING: No space is necessary after a cast
#67: FILE: arch/ppc/kernel/pci.c:1725:
+		return (void __iomem *) start;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#77: FILE: arch/ppc/kernel/pci.c:1735:
+EXPORT_SYMBOL(pci_iounmap);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#79: FILE: arch/ppc/kernel/pci.c:1737:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#100: FILE: arch/ppc/mm/pgtable.c:277:
+	return (void __iomem *) (port + _IO_BASE);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#108: FILE: arch/ppc/mm/pgtable.c:285:
+EXPORT_SYMBOL(ioport_unmap);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#121: FILE: include/asm-ppc/io.h:402:
+ * Here comes the ppc implementation of the IOMAP $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#156: FILE: include/asm-ppc/io.h:437:
+	_insb((u8 __force *) addr, dst, count);

CHECK:SPACING: No space is necessary after a cast
#161: FILE: include/asm-ppc/io.h:442:
+	_insw_ns((u16 __force *) addr, dst, count);

CHECK:SPACING: No space is necessary after a cast
#166: FILE: include/asm-ppc/io.h:447:
+	_insl_ns((u32 __force *) addr, dst, count);

CHECK:SPACING: No space is necessary after a cast
#171: FILE: include/asm-ppc/io.h:452:
+	_outsb((u8 __force *) addr, src, count);

CHECK:SPACING: No space is necessary after a cast
#176: FILE: include/asm-ppc/io.h:457:
+	_outsw_ns((u16 __force *) addr, src, count);

CHECK:SPACING: No space is necessary after a cast
#181: FILE: include/asm-ppc/io.h:462:
+	_outsl_ns((u32 __force *) addr, src, count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#185: FILE: include/asm-ppc/io.h:466:
+extern void __iomem *ioport_map(unsigned long port, unsigned int nr);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#186: FILE: include/asm-ppc/io.h:467:
+extern void ioport_unmap(void __iomem *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __iomem *' should also have an identifier name
#186: FILE: include/asm-ppc/io.h:467:
+extern void ioport_unmap(void __iomem *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#190: FILE: include/asm-ppc/io.h:471:
+extern void __iomem *pci_iomap(struct pci_dev *dev, int bar, unsigned long max);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#191: FILE: include/asm-ppc/io.h:472:
+extern void pci_iounmap(struct pci_dev *dev, void __iomem *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __iomem *' should also have an identifier name
#191: FILE: include/asm-ppc/io.h:472:
+extern void pci_iounmap(struct pci_dev *dev, void __iomem *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000241078.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 1 errors, 4 warnings, 13 checks, 146 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000241078.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
