WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#82: FILE: arch/i386/kernel/acpi/boot.c:601:
+		printk(KERN_INFO PREFIX "HPET id: %#x base: %#lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#83: FILE: arch/i386/kernel/acpi/boot.c:602:
+		printk(KERN_INFO PREFIX "HPET id: %#x base: %#lx\n",
+			hpet_tbl->id, hpet_address);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#554: FILE: arch/x86_64/kernel/time.c:261:
+}
+static inline void mark_tsc_unstable(void)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#556: FILE: arch/x86_64/kernel/time.c:263:
+	tsc_unstable = 1;;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#561: FILE: arch/x86_64/kernel/time.c:268:
+	u64 cycles = ((u64)nsecs * tsc_khz)/1000000;
 	                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#562: FILE: arch/x86_64/kernel/time.c:269:
+	u64 cycles = ((u64)nsecs * tsc_khz)/1000000;
+	tsc_c3_offset += cycles;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#585: FILE: arch/x86_64/kernel/time.c:345:
+	static unsigned long rtc_update = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#595: FILE: arch/x86_64/kernel/time.c:355:
+	if (ts.tv_sec > rtc_update &&
+		abs(ts.tv_nsec - 500000000) <= tick_nsec / 2) {

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#721: FILE: arch/x86_64/kernel/time.c:1049:
+static unsigned long current_tsc_khz = 0;

WARNING:LINE_SPACING: Missing a blank line after declarations
#727: FILE: arch/x86_64/kernel/time.c:1055:
+	cycle_t ret;
+	rdtscll(ret);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#731: FILE: arch/x86_64/kernel/time.c:1059:
+static cycle_t __vsyscall_fn vread_tsc(void* unused)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#734: FILE: arch/x86_64/kernel/time.c:1062:
+	cycle_t ret;
+	rdtscll(ret);

WARNING:LINE_SPACING: Missing a blank line after declarations
#741: FILE: arch/x86_64/kernel/time.c:1069:
+	cycle_t ret;
+	rdtscll(ret);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#757: FILE: arch/x86_64/kernel/time.c:1085:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#763: FILE: arch/x86_64/kernel/time.c:1091:
+	if (tsc_read_c3_time() &&
+		strncmp(clocksource_tsc.name, "c3tsc", 5)) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#764: FILE: arch/x86_64/kernel/time.c:1092:
+		printk("Falling back to C3 safe TSC\n");

ERROR:SPACING: space required before the open brace '{'
#777: FILE: arch/x86_64/kernel/time.c:1105:
+	if (current_tsc_khz != tsc_khz){

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#780: FILE: arch/x86_64/kernel/time.c:1108:
+		clocksource_tsc.mult = clocksource_khz2mult(current_tsc_khz,
+							clocksource_tsc.shift);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#791: FILE: arch/x86_64/kernel/time.c:1119:
+		clocksource_tsc.mult = clocksource_khz2mult(current_tsc_khz,
+							clocksource_tsc.shift);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#799: FILE: arch/x86_64/kernel/time.c:1127:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#806: FILE: arch/x86_64/kernel/time.c:1134:
+
+

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#814: FILE: arch/x86_64/kernel/time.c:1142:
+static cycle_t __vsyscall_fn vread_hpet(void* ptr)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#833: FILE: arch/x86_64/kernel/time.c:1161:
+	void __iomem* hpet_base;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#841: FILE: arch/x86_64/kernel/time.c:1169:
+		(void __iomem*)ioremap_nocache(hpet_address, HPET_MMAP_SIZE);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#847: FILE: arch/x86_64/kernel/time.c:1175:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#904: FILE: arch/x86_64/kernel/vsyscall.c:45:
 
+

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#912: FILE: arch/x86_64/kernel/vsyscall.c:53:
+extern struct vsyscall_gtod_data_t vsyscall_gtod_data;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#915: FILE: arch/x86_64/kernel/vsyscall.c:56:
+extern seqlock_t vsyscall_gtod_lock;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#918: FILE: arch/x86_64/kernel/vsyscall.c:59:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#928: FILE: arch/x86_64/kernel/vsyscall.c:74:
+/* XXX - this is ugly. gettimeofday() has a label in it so we can't
+	call it twice.

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LINE_SPACING: Missing a blank line after declarations
#936: FILE: arch/x86_64/kernel/vsyscall.c:79:
+	int ret;
+	asm volatile("syscall"

ERROR:SPACING: space required after that ',' (ctx:VxV)
#938: FILE: arch/x86_64/kernel/vsyscall.c:81:
+		: "0" (__NR_gettimeofday),"D" (tv),"S" (tz) : __syscall_clobber );
 		                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#938: FILE: arch/x86_64/kernel/vsyscall.c:81:
+		: "0" (__NR_gettimeofday),"D" (tv),"S" (tz) : __syscall_clobber );
 		                                  ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#938: FILE: arch/x86_64/kernel/vsyscall.c:81:
+		: "0" (__NR_gettimeofday),"D" (tv),"S" (tz) : __syscall_clobber );

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#941: FILE: arch/x86_64/kernel/vsyscall.c:84:
+}
+static force_inline void do_vgettimeofday(struct timeval* tv)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#941: FILE: arch/x86_64/kernel/vsyscall.c:84:
+static force_inline void do_vgettimeofday(struct timeval* tv)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#975: FILE: arch/x86_64/kernel/vsyscall.c:98:
+		now = __vsyscall_gtod_data.clock.vread(

CHECK:SPACING: No space is necessary after a cast
#988: FILE: arch/x86_64/kernel/vsyscall.c:111:
+		tv->tv_usec += (unsigned long) nsec_delta;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1025: FILE: arch/x86_64/kernel/vsyscall.c:177:
+struct clocksource* curr_clock;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1028: FILE: arch/x86_64/kernel/vsyscall.c:180:
+void arch_update_vsyscall_gtod(struct timespec wall_time, cycle_t offset_base,
+				struct clocksource *clock, int ntp_adj)

WARNING:REPEATED_WORD: Possible repeated word: 'hack'
#1034: FILE: arch/x86_64/kernel/vsyscall.c:186:
+	/* XXX - hackitty hack hack. this is terrible! */

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1035: FILE: arch/x86_64/kernel/vsyscall.c:187:
+	if (curr_clock != clock) {
+		curr_clock = clock;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1041: FILE: arch/x86_64/kernel/vsyscall.c:193:
+	vsyscall_gtod_data.wall_time_tv.tv_usec = wall_time.tv_nsec/1000;
 	                                                           ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1057: FILE: arch/x86_64/kernel/vsyscall.c:209:
+
+}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1078: FILE: include/asm-generic/div64.h:59:
+#define div_long_long_rem(dividend,divisor,remainder) \
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1078: FILE: include/asm-generic/div64.h:59:
+#define div_long_long_rem(dividend,divisor,remainder) \
                                           ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'remainder' may be better as '(remainder)' to avoid precedence issues
#1078: FILE: include/asm-generic/div64.h:59:
+#define div_long_long_rem(dividend,divisor,remainder) \
+({							\
+	u64 result = dividend;				\
+	*remainder = do_div(result,divisor);		\
+	result;						\
+})

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1081: FILE: include/asm-generic/div64.h:62:
+	*remainder = do_div(result,divisor);		\
 	                          ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1110: FILE: include/asm-x86_64/timeofday.h:1:
+#ifndef _ASM_X86_64_TIMEOFDAY_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1122: FILE: include/asm-x86_64/timex.h:28:
+extern void tsc_c3_compensate(unsigned long usecs);

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#1143: FILE: include/asm-x86_64/vsyscall.h:27:
+#define __section_vsyscall_gtod_data __attribute__ ((unused, __section__ (".vsyscall_gtod_data"),aligned(16)))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1143: FILE: include/asm-x86_64/vsyscall.h:27:
+#define __section_vsyscall_gtod_data __attribute__ ((unused, __section__ (".vsyscall_gtod_data"),aligned(16)))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1143: FILE: include/asm-x86_64/vsyscall.h:27:
+#define __section_vsyscall_gtod_data __attribute__ ((unused, __section__ (".vsyscall_gtod_data"),aligned(16)))
                                                                                                 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1143: FILE: include/asm-x86_64/vsyscall.h:27:
+#define __section_vsyscall_gtod_data __attribute__ ((unused, __section__ (".vsyscall_gtod_data"),aligned(16)))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".vsyscall_gtod_data") over __attribute__((__section__(".vsyscall_gtod_data")))
#1143: FILE: include/asm-x86_64/vsyscall.h:27:
+#define __section_vsyscall_gtod_data __attribute__ ((unused, __section__ (".vsyscall_gtod_data"),aligned(16)))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(16) over __attribute__((aligned(16)))
#1143: FILE: include/asm-x86_64/vsyscall.h:27:
+#define __section_vsyscall_gtod_data __attribute__ ((unused, __section__ (".vsyscall_gtod_data"),aligned(16)))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#1143: FILE: include/asm-x86_64/vsyscall.h:27:
+#define __section_vsyscall_gtod_data __attribute__ ((unused, __section__ (".vsyscall_gtod_data"),aligned(16)))

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#1144: FILE: include/asm-x86_64/vsyscall.h:28:
+#define __section_vsyscall_gtod_lock __attribute__ ((unused, __section__ (".vsyscall_gtod_lock"),aligned(16)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1144: FILE: include/asm-x86_64/vsyscall.h:28:
+#define __section_vsyscall_gtod_lock __attribute__ ((unused, __section__ (".vsyscall_gtod_lock"),aligned(16)))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1144: FILE: include/asm-x86_64/vsyscall.h:28:
+#define __section_vsyscall_gtod_lock __attribute__ ((unused, __section__ (".vsyscall_gtod_lock"),aligned(16)))
                                                                                                 ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1144: FILE: include/asm-x86_64/vsyscall.h:28:
+#define __section_vsyscall_gtod_lock __attribute__ ((unused, __section__ (".vsyscall_gtod_lock"),aligned(16)))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".vsyscall_gtod_lock") over __attribute__((__section__(".vsyscall_gtod_lock")))
#1144: FILE: include/asm-x86_64/vsyscall.h:28:
+#define __section_vsyscall_gtod_lock __attribute__ ((unused, __section__ (".vsyscall_gtod_lock"),aligned(16)))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(16) over __attribute__((aligned(16)))
#1144: FILE: include/asm-x86_64/vsyscall.h:28:
+#define __section_vsyscall_gtod_lock __attribute__ ((unused, __section__ (".vsyscall_gtod_lock"),aligned(16)))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#1144: FILE: include/asm-x86_64/vsyscall.h:28:
+#define __section_vsyscall_gtod_lock __attribute__ ((unused, __section__ (".vsyscall_gtod_lock"),aligned(16)))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1145: FILE: include/asm-x86_64/vsyscall.h:29:
+#define __vsyscall_fn __attribute__ ((unused,__section__(".vsyscall_fn")))
                                             ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1145: FILE: include/asm-x86_64/vsyscall.h:29:
+#define __vsyscall_fn __attribute__ ((unused,__section__(".vsyscall_fn")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".vsyscall_fn") over __attribute__((__section__(".vsyscall_fn")))
#1145: FILE: include/asm-x86_64/vsyscall.h:29:
+#define __vsyscall_fn __attribute__ ((unused,__section__(".vsyscall_fn")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#1145: FILE: include/asm-x86_64/vsyscall.h:29:
+#define __vsyscall_fn __attribute__ ((unused,__section__(".vsyscall_fn")))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1146: FILE: include/asm-x86_64/vsyscall.h:30:
+#define __vsyscall_data __attribute__ ((unused,__section__(".vsyscall_data")))
                                               ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1146: FILE: include/asm-x86_64/vsyscall.h:30:
+#define __vsyscall_data __attribute__ ((unused,__section__(".vsyscall_data")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".vsyscall_data") over __attribute__((__section__(".vsyscall_data")))
#1146: FILE: include/asm-x86_64/vsyscall.h:30:
+#define __vsyscall_data __attribute__ ((unused,__section__(".vsyscall_data")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#1146: FILE: include/asm-x86_64/vsyscall.h:30:
+#define __vsyscall_data __attribute__ ((unused,__section__(".vsyscall_data")))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000132313.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 23 errors, 28 warnings, 21 checks, 926 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000132313.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
