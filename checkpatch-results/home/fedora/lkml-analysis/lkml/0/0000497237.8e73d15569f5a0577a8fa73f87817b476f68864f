ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#45: 
--- a/arch/arm/mm/init.c	Sun Nov 25 16:39:44 2001

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: arch/sparc64/mm/init.c:86:
+                        if ((unsigned long)page->right == 3) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: arch/sparc64/mm/init.c:86:
+                        if ((unsigned long)page->right == 3) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: arch/sparc64/mm/init.c:88:
+                                        page2->left = page->left;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: arch/sparc64/mm/init.c:88:
+                                        page2->left = page->left;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: arch/sparc64/mm/init.c:90:
+                                        (struct page *)pgd_quicklist = page->left;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: arch/sparc64/mm/init.c:90:
+                                        (struct page *)pgd_quicklist = page->left;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#124: FILE: arch/sparc64/mm/init.c:91:
+                                page->left = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: arch/sparc64/mm/init.c:91:
+                                page->left = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#125: FILE: arch/sparc64/mm/init.c:92:
+                                page->right = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: arch/sparc64/mm/init.c:92:
+                                page->right = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#131: FILE: arch/sparc64/mm/init.c:97:
+                                        page = page2->left;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: arch/sparc64/mm/init.c:97:
+                                        page = page2->left;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: arch/sparc64/mm/init.c:105:
+                        page = page->left;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: arch/sparc64/mm/init.c:105:
+                        page = page->left;$

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#280: FILE: include/linux/pagemap.h:63:
+extern int add_to_page_cache_unique(struct page * page, struct address_space *mapping, unsigned long index);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#280: FILE: include/linux/pagemap.h:63:
+extern int add_to_page_cache_unique(struct page * page, struct address_space *mapping, unsigned long index);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#280: FILE: include/linux/pagemap.h:63:
+extern int add_to_page_cache_unique(struct page * page, struct address_space *mapping, unsigned long index);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#401: FILE: mm/filemap.c:97:
+	page_splay_tree_delete (&page->mapping->root, page->index);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#464: FILE: mm/filemap.c:229:
+static int FASTCALL(truncate_list_pages(struct address_space *, struct list_head *, unsigned long, unsigned *));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#464: FILE: mm/filemap.c:229:
+static int FASTCALL(truncate_list_pages(struct address_space *, struct list_head *, unsigned long, unsigned *));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#466: FILE: mm/filemap.c:231:
+static int truncate_list_pages(struct address_space *mapping,
+	struct list_head *head, unsigned long start, unsigned *partial)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#466: FILE: mm/filemap.c:231:
+	struct list_head *head, unsigned long start, unsigned *partial)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#509: FILE: mm/filemap.c:316:
+					struct page * page,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#621: FILE: mm/filemap.c:452:
+static int do_buffer_fdatasync(struct address_space *mapping,
+	struct list_head *head, unsigned long start, unsigned long end, int (*fn)(struct page *))

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#666: FILE: mm/filemap.c:498:
+	retval = do_buffer_fdatasync(mapping, &mapping->dirty_pages, start_idx, end_idx, writeout_one_page);

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#667: FILE: mm/filemap.c:499:
+	retval |= do_buffer_fdatasync(mapping, &mapping->clean_pages, start_idx, end_idx, writeout_one_page);

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#668: FILE: mm/filemap.c:500:
+	retval |= do_buffer_fdatasync(mapping, &mapping->locked_pages, start_idx, end_idx, writeout_one_page);

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#674: FILE: mm/filemap.c:503:
+	retval |= do_buffer_fdatasync(mapping, &mapping->dirty_pages, start_idx, end_idx, waitfor_one_page);

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#675: FILE: mm/filemap.c:504:
+	retval |= do_buffer_fdatasync(mapping, &mapping->clean_pages, start_idx, end_idx, waitfor_one_page);

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#676: FILE: mm/filemap.c:505:
+	retval |= do_buffer_fdatasync(mapping, &mapping->locked_pages, start_idx, end_idx, waitfor_one_page);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#742: FILE: mm/filemap.c:622:
+	spin_lock (&mapping->i_shared_lock);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#746: FILE: mm/filemap.c:624:
+	page_splay_tree_insert (&mapping->root, page);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#767: FILE: mm/filemap.c:645:
+	page_splay_tree_insert (&mapping->root, page);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#793: FILE: mm/filemap.c:664:
+	alias = page_splay_tree_find (&mapping->root, offset);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#798: FILE: mm/filemap.c:668:
+		__add_to_page_cache(page,mapping,offset);
 		                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#798: FILE: mm/filemap.c:668:
+		__add_to_page_cache(page,mapping,offset);
 		                                ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#818: FILE: mm/filemap.c:689:
+	page = page_splay_tree_find (&mapping->root, offset);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#848: FILE: mm/filemap.c:816:
+	page = page_splay_tree_find (&mapping->root, offset);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#865: FILE: mm/filemap.c:831:
+	page = page_splay_tree_find (&mapping->root, offset);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#880: FILE: mm/filemap.c:845:
+static struct page * FASTCALL(__find_lock_page_helper(struct address_space *, unsigned long));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#892: FILE: mm/filemap.c:856:
+	page = page_splay_tree_find (&mapping->root, offset);

ERROR:SPACING: space prohibited after that open parenthesis '('
#971: FILE: mm/filemap.c:965:
+	if ( unlikely(add_to_page_cache_unique(page, mapping, index)) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#971: FILE: mm/filemap.c:965:
+	if ( unlikely(add_to_page_cache_unique(page, mapping, index)) ) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#993: FILE: mm/filemap.c:1311:
+		page = page_splay_tree_find (&mapping->root, index);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1019: FILE: mm/filemap.c:1422:
+			page = page_splay_tree_find (&mapping->root, index);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1059: FILE: mm/filemap.c:2540:
+	struct page * page;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1064: FILE: mm/filemap.c:2543:
+	page = page_splay_tree_find (&as->root, pgoff);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1149: FILE: mm/page_splay.c:1:
+/* Self-adjusting binary search tree (splay tree).

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1157: FILE: mm/page_splay.c:9:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1162: FILE: mm/page_splay.c:14:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1164: FILE: mm/page_splay.c:16:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1165: FILE: mm/page_splay.c:17:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1170: FILE: mm/page_splay.c:22:
+page_splay_tree_splay (struct page *t, unsigned long k)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1177: FILE: mm/page_splay.c:29:
+	N.left = N.right = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1178: FILE: mm/page_splay.c:30:
+	l = r = &N;

CHECK:BRACES: braces {} should be used on all arms of this statement
#1181: FILE: mm/page_splay.c:33:
+		if (k < t->index) {
[...]
+		} else if (k > t->index) {
[...]
+		else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1210: FILE: mm/page_splay.c:62:
+		}
+		else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1214: FILE: mm/page_splay.c:66:
+	l->right = r->left = 0;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1225: FILE: mm/page_splay.c:77:
+page_splay_tree_insert (struct page **pt, struct page *k)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1235: FILE: mm/page_splay.c:87:
+	t = page_splay_tree_splay (t, k->index);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1259: FILE: mm/page_splay.c:111:
+page_splay_tree_delete (struct page **r, unsigned long k)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1263: FILE: mm/page_splay.c:115:
+	if ((t = *r) == 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1266: FILE: mm/page_splay.c:118:
+	t = page_splay_tree_splay (t, k);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1269: FILE: mm/page_splay.c:121:
+		if (t->left == 0)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1271: FILE: mm/page_splay.c:123:
+		else {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1272: FILE: mm/page_splay.c:124:
+			x = page_splay_tree_splay (t->left, k);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1278: FILE: mm/page_splay.c:130:
+		t->left = t->right = 0;

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1280: FILE: mm/page_splay.c:132:
+		return t;
+	} else {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1289: FILE: mm/page_splay.h:1:
+/* Self-adjusting binary search tree (splay tree).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1297: FILE: mm/page_splay.h:9:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1302: FILE: mm/page_splay.h:14:
+ * $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1304: FILE: mm/page_splay.h:16:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1305: FILE: mm/page_splay.h:17:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1311: FILE: mm/page_splay.h:23:
+extern struct page * page_splay_tree_splay (struct page *t, unsigned long k);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1311: FILE: mm/page_splay.h:23:
+extern struct page * page_splay_tree_splay (struct page *t, unsigned long k);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1311: FILE: mm/page_splay.h:23:
+extern struct page * page_splay_tree_splay (struct page *t, unsigned long k);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1312: FILE: mm/page_splay.h:24:
+extern int page_splay_tree_insert (struct page **pt, struct page *k);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1312: FILE: mm/page_splay.h:24:
+extern int page_splay_tree_insert (struct page **pt, struct page *k);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1313: FILE: mm/page_splay.h:25:
+extern struct page *page_splay_tree_delete (struct page **r, unsigned long k);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1313: FILE: mm/page_splay.h:25:
+extern struct page *page_splay_tree_delete (struct page **r, unsigned long k);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1316: FILE: mm/page_splay.h:28:
+page_splay_tree_find (struct page **r, unsigned long k) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1317: FILE: mm/page_splay.h:29:
+	*r = page_splay_tree_splay (*r, k);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1432: FILE: mm/vmscan.c:477:
+			UnlockPage (page);

CHECK:CAMELCASE: Avoid CamelCase: <UnlockPage>
#1432: FILE: mm/vmscan.c:477:
+			UnlockPage (page);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000497237.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 27 errors, 44 warnings, 14 checks, 1267 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000497237.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
