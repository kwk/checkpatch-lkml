CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#54: FILE: arch/um/include/os.h:198:
+extern void stop(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#55: FILE: arch/um/include/os.h:199:
+extern int wait_for_stop(int pid, int sig, int cont_type, void *relay);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#64: FILE: arch/um/include/os.h:241:
+extern void stack_protections(unsigned long address);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#65: FILE: arch/um/include/os.h:242:
+extern void task_protections(unsigned long address);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#66: FILE: arch/um/include/os.h:243:
+extern int raw(int fd);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#67: FILE: arch/um/include/os.h:244:
+extern void setup_machinename(char *machine_out);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#68: FILE: arch/um/include/os.h:245:
+extern void setup_hostinfo(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#69: FILE: arch/um/include/os.h:246:
+extern int setjmp_wrapper(void (*proc)(void *, void *), ...);

ERROR:SPACING: space required before the open parenthesis '('
#395: FILE: arch/um/os-Linux/tt.c:68:
+	while(1) sleep(1000000);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#395: FILE: arch/um/os-Linux/tt.c:68:
+	while(1) sleep(1000000);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required before the open brace '{'
#403: FILE: arch/um/os-Linux/tt.c:76:
+	while(1){

ERROR:SPACING: space required before the open parenthesis '('
#403: FILE: arch/um/os-Linux/tt.c:76:
+	while(1){

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ret < 0'
#405: FILE: arch/um/os-Linux/tt.c:78:
+		if((ret < 0) ||
+		   !WIFSTOPPED(status) || (WSTOPSIG(status) != sig)){

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space required before the open parenthesis '('
#405: FILE: arch/um/os-Linux/tt.c:78:
+		if((ret < 0) ||

ERROR:SPACING: space required before the open brace '{'
#406: FILE: arch/um/os-Linux/tt.c:79:
+		   !WIFSTOPPED(status) || (WSTOPSIG(status) != sig)){

ERROR:SPACING: space required before the open brace '{'
#407: FILE: arch/um/os-Linux/tt.c:80:
+			if(ret < 0){

ERROR:SPACING: space required before the open parenthesis '('
#407: FILE: arch/um/os-Linux/tt.c:80:
+			if(ret < 0){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#408: FILE: arch/um/os-Linux/tt.c:81:
+				printk("wait failed, errno = %d\n",

ERROR:SPACING: space required before the open parenthesis '('
#411: FILE: arch/um/os-Linux/tt.c:84:
+			else if(WIFEXITED(status))

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#411: FILE: arch/um/os-Linux/tt.c:84:
+			}
+			else if(WIFEXITED(status))

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#412: FILE: arch/um/os-Linux/tt.c:85:
+				printk("process %d exited with status %d\n",

ERROR:SPACING: space required before the open parenthesis '('
#414: FILE: arch/um/os-Linux/tt.c:87:
+			else if(WIFSIGNALED(status))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#415: FILE: arch/um/os-Linux/tt.c:88:
+				printk("process %d exited with signal %d\n",

ERROR:SPACING: space required before the open parenthesis '('
#417: FILE: arch/um/os-Linux/tt.c:90:
+			else if((WSTOPSIG(status) == SIGVTALRM) ||

ERROR:SPACING: space required before the open brace '{'
#423: FILE: arch/um/os-Linux/tt.c:96:
+				(WSTOPSIG(status) == SIGINT)){

ERROR:SPACING: space required before the open parenthesis '('
#427: FILE: arch/um/os-Linux/tt.c:100:
+			else if((relay_signals != NULL) &&

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#427: FILE: arch/um/os-Linux/tt.c:100:
+			}
+			else if((relay_signals != NULL) &&

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "relay_signals"
#427: FILE: arch/um/os-Linux/tt.c:100:
+			else if((relay_signals != NULL) &&

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required before the open brace '{'
#428: FILE: arch/um/os-Linux/tt.c:101:
+				sigismember(relay_signals, WSTOPSIG(status))){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#432: FILE: arch/um/os-Linux/tt.c:105:
+			else printk("process %d stopped with signal %d\n",

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#432: FILE: arch/um/os-Linux/tt.c:105:
+			else printk("process %d stopped with signal %d\n",

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#432: FILE: arch/um/os-Linux/tt.c:105:
+			}
+			else printk("process %d stopped with signal %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'wait_for_stop', this function's name, in a string
#434: FILE: arch/um/os-Linux/tt.c:107:
+			panic("wait_for_stop failed to wait for %d to stop "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#435: FILE: arch/um/os-Linux/tt.c:108:
+			panic("wait_for_stop failed to wait for %d to stop "
+			      "with %d\n", pid, sig);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#449: FILE: arch/um/os-Linux/util.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: No space is necessary after a cast
#486: FILE: arch/um/os-Linux/util.c:38:
+	if(mprotect((void *) address, page_size(), prot) < 0)

ERROR:SPACING: space required before the open parenthesis '('
#486: FILE: arch/um/os-Linux/util.c:38:
+	if(mprotect((void *) address, page_size(), prot) < 0)

CHECK:SPACING: No space is necessary after a cast
#497: FILE: arch/um/os-Linux/util.c:49:
+	if(mprotect((void *) stack, page_size(), prot) < 0)

ERROR:SPACING: space required before the open parenthesis '('
#497: FILE: arch/um/os-Linux/util.c:49:
+	if(mprotect((void *) stack, page_size(), prot) < 0)

CHECK:SPACING: No space is necessary after a cast
#502: FILE: arch/um/os-Linux/util.c:54:
+	if(mprotect((void *) stack, pages * page_size(), prot) < 0)

ERROR:SPACING: space required before the open parenthesis '('
#502: FILE: arch/um/os-Linux/util.c:54:
+	if(mprotect((void *) stack, pages * page_size(), prot) < 0)

ERROR:SPACING: space required before the open parenthesis '('
#512: FILE: arch/um/os-Linux/util.c:64:
+	if(err < 0)

ERROR:SPACING: space required before the open parenthesis '('
#518: FILE: arch/um/os-Linux/util.c:70:
+	if(err < 0)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#522: FILE: arch/um/os-Linux/util.c:74:
+	 * (and cfmakeraw() is a set of changes) */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#523: FILE: arch/um/os-Linux/util.c:75:
+	return(0);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:SPACING: space required before the open brace '{'
#558: FILE: arch/um/os-Linux/util.c:110:
+	if(n == 0){

ERROR:SPACING: space required before the open parenthesis '('
#558: FILE: arch/um/os-Linux/util.c:110:
+	if(n == 0){

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#563: FILE: arch/um/os-Linux/util.c:115:
+	return(n);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000115168.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 27 errors, 8 warnings, 13 checks, 282 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000115168.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
