WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#23: 
(The following is a resend from this morning.  The various kernel mailing list

WARNING:TYPO_SPELLING: 'probem' may be misspelled - perhaps 'problem'?
#31: 
      to consume each of the outstanding return probem instances (feedback
                                                ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#55: FILE: arch/ppc64/kernel/kprobes.c:107:
+	if ((ri = get_free_rp_inst(rp)) != NULL) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#76: FILE: arch/ppc64/kernel/kprobes.c:211:
+ * ^I- init_kprobes() establishes a probepoint here$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#77: FILE: arch/ppc64/kernel/kprobes.c:212:
+ * ^I- When the probed function returns, this probe$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#78: FILE: arch/ppc64/kernel/kprobes.c:213:
+ * ^I^Icauses the handlers to fire$

ERROR:CODE_INDENT: code indent should use tabs where possible
#92: FILE: arch/ppc64/kernel/kprobes.c:227:
+        struct kretprobe_instance *ri = NULL;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: arch/ppc64/kernel/kprobes.c:227:
+        struct kretprobe_instance *ri = NULL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#93: FILE: arch/ppc64/kernel/kprobes.c:228:
+        struct hlist_head *head;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: arch/ppc64/kernel/kprobes.c:228:
+        struct hlist_head *head;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#94: FILE: arch/ppc64/kernel/kprobes.c:229:
+        struct hlist_node *node, *tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: arch/ppc64/kernel/kprobes.c:229:
+        struct hlist_node *node, *tmp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#97: FILE: arch/ppc64/kernel/kprobes.c:232:
+        head = kretprobe_inst_table_head(current);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: arch/ppc64/kernel/kprobes.c:232:
+        head = kretprobe_inst_table_head(current);$

WARNING:REPEATED_WORD: Possible repeated word: 'return'
#103: FILE: arch/ppc64/kernel/kprobes.c:238:
+	 * have a return probe installed on them, and/or more then one return
+	 * return probe was registered for a target function.

ERROR:CODE_INDENT: code indent should use tabs where possible
#108: FILE: arch/ppc64/kernel/kprobes.c:243:
+         *       function, the first instance's ret_addr will point to the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#113: FILE: arch/ppc64/kernel/kprobes.c:248:
+                if (ri->task != current)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: arch/ppc64/kernel/kprobes.c:248:
+                if (ri->task != current)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: arch/ppc64/kernel/kprobes.c:250:
+                        continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: arch/ppc64/kernel/kprobes.c:250:
+                        continue;$

CHECK:SPACING: No space is necessary after a cast
#123: FILE: arch/ppc64/kernel/kprobes.c:258:
+		if (orig_ret_address != (unsigned long) &kretprobe_trampoline)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#132: FILE: arch/ppc64/kernel/kprobes.c:267:
+	BUG_ON(!orig_ret_address);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: arch/ppc64/kernel/kprobes.c:272:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#138: FILE: arch/ppc64/kernel/kprobes.c:273:
+         * By returning a non-zero value, we are telling$

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: arch/ppc64/kernel/kprobes.c:274:
+         * kprobe_handler() that we have handled unlocking$

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: arch/ppc64/kernel/kprobes.c:275:
+         * and re-enabling preemption.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: arch/ppc64/kernel/kprobes.c:276:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: arch/ppc64/kernel/kprobes.c:277:
+        return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: arch/ppc64/kernel/kprobes.c:277:
+        return 1;$

CHECK:SPACING: No space is necessary after a cast
#155: FILE: arch/ppc64/kernel/kprobes.c:422:
+	.addr = (kprobe_opcode_t *) &kretprobe_trampoline,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000176437.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 14 warnings, 2 checks, 144 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000176437.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
