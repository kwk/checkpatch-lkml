WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
On Wed, 02 Jul 2003 14:04:27 +0200, viro@parcelfarce.linux.theplanet.co.uk wrote:

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#155: FILE: fs/affs/namei.c:147:
+}
+static int

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#180: FILE: fs/affs/namei.c:257:
+			if (d_invalidate(alias)==0)
 			                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#180: FILE: fs/affs/namei.c:257:
+			if (d_invalidate(alias)==0)
[...]
+			else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#182: FILE: fs/affs/namei.c:259:
+			else {

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#183: FILE: fs/affs/namei.c:260:
+				iput(inode);
 				^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#199: FILE: fs/affs/namei.c:451:
+	     */
+	    && old_dentry->d_inode != new_dentry->d_inode) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#221: FILE: fs/namei.c:1916:
+			d_move(old_dentry,new_dentry);
 			                 ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#231: FILE: fs/namei.c:1944:
+		if (!(old_dir->i_sb->s_type->fs_flags & FS_ODD_RENAME)
+		    && old_dentry != new_dentry)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#250: FILE: fs/namei.c:1968:
+	if (old_dentry->d_inode == new_dentry->d_inode
+	    && (!old_dentry->d_op || !old_dentry->d_op->d_compare_rename

ERROR:CODE_INDENT: code indent should use tabs where possible
#251: FILE: fs/namei.c:1969:
+^I        || (old_dir != new_dir$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#251: FILE: fs/namei.c:1969:
+	    && (!old_dentry->d_op || !old_dentry->d_op->d_compare_rename
+	        || (old_dir != new_dir

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#252: FILE: fs/namei.c:1970:
+	            || old_dentry->d_op->d_compare_rename(old_dentry, &old_dentry->d_name, &new_dentry->d_name))))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:CODE_INDENT: code indent should use tabs where possible
#252: FILE: fs/namei.c:1970:
+^I            || old_dentry->d_op->d_compare_rename(old_dentry, &old_dentry->d_name, &new_dentry->d_name))))$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#252: FILE: fs/namei.c:1970:
+	        || (old_dir != new_dir
+	            || old_dentry->d_op->d_compare_rename(old_dentry, &old_dentry->d_name, &new_dentry->d_name))))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#405: FILE: fs/vfat/namei.c:1060:
+	struct vfat_slot_info old_sinfo,new_sinfo;
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#423: FILE: fs/vfat/namei.c:1080:
+		res = vfat_find(new_dir,&new_dentry->d_name,&new_sinfo,&new_bh,
 		                       ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#423: FILE: fs/vfat/namei.c:1080:
+		res = vfat_find(new_dir,&new_dentry->d_name,&new_sinfo,&new_bh,
 		                        ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#423: FILE: fs/vfat/namei.c:1080:
+		res = vfat_find(new_dir,&new_dentry->d_name,&new_sinfo,&new_bh,
 		                                           ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#423: FILE: fs/vfat/namei.c:1080:
+		res = vfat_find(new_dir,&new_dentry->d_name,&new_sinfo,&new_bh,
 		                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#423: FILE: fs/vfat/namei.c:1080:
+		res = vfat_find(new_dir,&new_dentry->d_name,&new_sinfo,&new_bh,
 		                                                      ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#423: FILE: fs/vfat/namei.c:1080:
+		res = vfat_find(new_dir,&new_dentry->d_name,&new_sinfo,&new_bh,
 		                                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#435: FILE: fs/vfat/namei.c:1094:
+		vfat_remove_entry(new_dir,&new_sinfo,new_bh,new_de);
 		                         ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#435: FILE: fs/vfat/namei.c:1094:
+		vfat_remove_entry(new_dir,&new_sinfo,new_bh,new_de);
 		                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#435: FILE: fs/vfat/namei.c:1094:
+		vfat_remove_entry(new_dir,&new_sinfo,new_bh,new_de);
 		                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#435: FILE: fs/vfat/namei.c:1094:
+		vfat_remove_entry(new_dir,&new_sinfo,new_bh,new_de);
 		                                           ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#436: FILE: fs/vfat/namei.c:1095:
+		new_bh=NULL;
 		      ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#449: FILE: fs/vfat/namei.c:1104:
+	res = vfat_add_entry(new_dir,&new_dentry->d_name,is_dir,&new_sinfo,
 	                            ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#449: FILE: fs/vfat/namei.c:1104:
+	res = vfat_add_entry(new_dir,&new_dentry->d_name,is_dir,&new_sinfo,
 	                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#449: FILE: fs/vfat/namei.c:1104:
+	res = vfat_add_entry(new_dir,&new_dentry->d_name,is_dir,&new_sinfo,
 	                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#449: FILE: fs/vfat/namei.c:1104:
+	res = vfat_add_entry(new_dir,&new_dentry->d_name,is_dir,&new_sinfo,
 	                                                       ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#449: FILE: fs/vfat/namei.c:1104:
+	res = vfat_add_entry(new_dir,&new_dentry->d_name,is_dir,&new_sinfo,
 	                                                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#450: FILE: fs/vfat/namei.c:1105:
+	res = vfat_add_entry(new_dir,&new_dentry->d_name,is_dir,&new_sinfo,
+				&new_bh,&new_de);

ERROR:SPACING: space required after that ',' (ctx:VxO)
#450: FILE: fs/vfat/namei.c:1105:
+				&new_bh,&new_de);
 				       ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#450: FILE: fs/vfat/namei.c:1105:
+				&new_bh,&new_de);
 				        ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#451: FILE: fs/vfat/namei.c:1106:
+	if (res < 0) goto rename_done;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:SPACING: Unnecessary space before function pointer arguments
#466: FILE: include/linux/dcache.h:112:
+	int (*d_compare_rename) (struct dentry *, struct qstr *, struct qstr *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#466: FILE: include/linux/dcache.h:112:
+	int (*d_compare_rename) (struct dentry *, struct qstr *, struct qstr *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct qstr *' should also have an identifier name
#466: FILE: include/linux/dcache.h:112:
+	int (*d_compare_rename) (struct dentry *, struct qstr *, struct qstr *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct qstr *' should also have an identifier name
#466: FILE: include/linux/dcache.h:112:
+	int (*d_compare_rename) (struct dentry *, struct qstr *, struct qstr *);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000358052.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 24 errors, 7 warnings, 9 checks, 380 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000358052.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
