WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
diff -ruN linux-2.6.7-rc1-mm1/arch/i386/Kconfig linux-2.6.7-rc1-mm1.perfctr-2.7.3.i386/arch/i386/Kconfig

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#155: FILE: drivers/perfctr/x86.c:1:
+/* $Id: x86.c,v 1.141 2004/05/31 18:13:42 mikpe Exp $

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#155: FILE: drivers/perfctr/x86.c:1:
+/* $Id: x86.c,v 1.141 2004/05/31 18:13:42 mikpe Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#187: FILE: drivers/perfctr/x86.c:33:
+		unsigned int escr[0x3E2-0x3A0];
 		                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#223: FILE: drivers/perfctr/x86.c:69:
+#define MSR_IA32_MISC_ENABLE_PERF_AVAIL (1<<7)	/* read-only status bit */
                                           ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#223: FILE: drivers/perfctr/x86.c:69:
+#define MSR_IA32_MISC_ENABLE_PERF_AVAIL (1<<7)	/* read-only status bit */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#224: FILE: drivers/perfctr/x86.c:70:
+#define MSR_IA32_MISC_ENABLE_PEBS_UNAVAIL (1<<12) /* read-only status bit */
                                             ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#224: FILE: drivers/perfctr/x86.c:70:
+#define MSR_IA32_MISC_ENABLE_PEBS_UNAVAIL (1<<12) /* read-only status bit */

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#249: FILE: drivers/perfctr/x86.c:95:
+#define P4_CCCR_RESERVED	(0x300007FF|P4_CCCR_OVF|P4_CCCR_OVF_PMI_T1)
                         	           ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#249: FILE: drivers/perfctr/x86.c:95:
+#define P4_CCCR_RESERVED	(0x300007FF|P4_CCCR_OVF|P4_CCCR_OVF_PMI_T1)
                         	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#262: FILE: drivers/perfctr/x86.c:108:
+#define rdmsr_low(msr,low) \
                      ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#262: FILE: drivers/perfctr/x86.c:108:
+#define rdmsr_low(msr,low) \
+	__asm__ __volatile__("rdmsr" : "=a"(low) : "c"(msr) : "edx")

ERROR:SPACING: space required after that ',' (ctx:VxV)
#264: FILE: drivers/perfctr/x86.c:110:
+#define rdpmc_low(ctr,low) \
                      ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#264: FILE: drivers/perfctr/x86.c:110:
+#define rdpmc_low(ctr,low) \
+	__asm__ __volatile__("rdpmc" : "=a"(low) : "c"(ctr) : "edx")

ERROR:SPACING: space required before the open parenthesis '('
#271: FILE: drivers/perfctr/x86.c:117:
+	for(i = 0; i < n; ++i)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#272: FILE: drivers/perfctr/x86.c:118:
+		wrmsr(base+i, 0, 0);
 		          ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#307: FILE: drivers/perfctr/x86.c:153:
+	/* PREEMPT note: invoked via an interrupt gate, which
+	   masks interrupts. We're still on the originating CPU. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#307: FILE: drivers/perfctr/x86.c:153:
+	   masks interrupts. We're still on the originating CPU. */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#325: FILE: drivers/perfctr/x86.c:171:
+#define apic_write(reg,vector)			do{}while(0)
                       ^

ERROR:SPACING: space required before the open brace '{'
#325: FILE: drivers/perfctr/x86.c:171:
+#define apic_write(reg,vector)			do{}while(0)

ERROR:SPACING: space required after that close brace '}'
#325: FILE: drivers/perfctr/x86.c:171:
+#define apic_write(reg,vector)			do{}while(0)

ERROR:SPACING: space required before the open parenthesis '('
#325: FILE: drivers/perfctr/x86.c:171:
+#define apic_write(reg,vector)			do{}while(0)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#344: FILE: drivers/perfctr/x86.c:190:
+	state->k1.isuspend_cpu = NR_CPUS;

ERROR:SPACING: space required before the open parenthesis '('
#386: FILE: drivers/perfctr/x86.c:232:
+	for(i = 0; i < state->control.nractrs; ++i) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#431: FILE: drivers/perfctr/x86.c:277:
+	/* The P5 doesn't allocate a cache line on a write miss, so do
+	   a dummy read to avoid a write miss here _and_ a read miss

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#432: FILE: drivers/perfctr/x86.c:278:
+	   later in our caller. */

ERROR:SPACING: space required before the open parenthesis '('
#439: FILE: drivers/perfctr/x86.c:285:
+	for(i = 0; i < nrctrs; ++i) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#441: FILE: drivers/perfctr/x86.c:287:
+		unsigned int pmc = state->pmc[i].map;
+		rdmsr_low(MSR_P5_CTR0+pmc, ctrs->pmc[i]);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#441: FILE: drivers/perfctr/x86.c:287:
+		rdmsr_low(MSR_P5_CTR0+pmc, ctrs->pmc[i]);
 		                     ^

ERROR:SPACING: space required before the open parenthesis '('
#455: FILE: drivers/perfctr/x86.c:301:
+	for(i = 0; i < nrctrs; ++i) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#457: FILE: drivers/perfctr/x86.c:303:
+		unsigned int pmc = state->pmc[i].map;
+		rdpmc_low(pmc, ctrs->pmc[i]);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#464: FILE: drivers/perfctr/x86.c:310:
+	clear_msr_range(MSR_P5_CESR, 1+2);
 	                              ^

ERROR:SPACING: space required before the open parenthesis '('
#552: FILE: drivers/perfctr/x86.c:398:
+	for(i = 0; i < nrctrs; ++i) {

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#555: FILE: drivers/perfctr/x86.c:401:
+		if (pmc >= (is_k7 ? 4 : 2) || (pmc_mask & (1<<pmc)))
 		                                            ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#557: FILE: drivers/perfctr/x86.c:403:
+		pmc_mask |= (1<<pmc);
 		              ^

ERROR:SPACING: space required before the open parenthesis '('
#613: FILE: drivers/perfctr/x86.c:459:
+	for(i = perfctr_cstatus_nractrs(cstatus); i < nrctrs; ++i) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#615: FILE: drivers/perfctr/x86.c:461:
+		unsigned int pmc_raw, pmc_idx, now;
+		pmc_raw = state->pmc[i].map;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#617: FILE: drivers/perfctr/x86.c:463:
+		/* Note: P4_MASK_FAST_RDPMC is a no-op for P6 and K7.
+		   We don't need to make it into a parameter. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#617: FILE: drivers/perfctr/x86.c:463:
+		   We don't need to make it into a parameter. */

WARNING:TYPO_SPELLING: 'intensionally' may be misspelled - perhaps 'intentionally'?
#620: FILE: drivers/perfctr/x86.c:466:
+		/* On P4 this intensionally also clears the CCCR.OVF flag. */
 		              ^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#621: FILE: drivers/perfctr/x86.c:467:
+		wrmsr(msr_evntsel0+pmc_idx, 0, 0);
 		                  ^

ERROR:SPACING: space required before the open parenthesis '('
#649: FILE: drivers/perfctr/x86.c:495:
+	for(i = perfctr_cstatus_nractrs(cstatus); i < nrctrs; ++i) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#651: FILE: drivers/perfctr/x86.c:497:
+		/* Note: P4_MASK_FAST_RDPMC is a no-op for P6 and K7.
+		   We don't need to make it into a parameter. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#651: FILE: drivers/perfctr/x86.c:497:
+		   We don't need to make it into a parameter. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#654: FILE: drivers/perfctr/x86.c:500:
+		/* If the control wasn't ours we must disable the evntsels
+		   before reinitialising the counters, to prevent unexpected

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#655: FILE: drivers/perfctr/x86.c:501:
+		   counter increments and missed overflow interrupts. */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#658: FILE: drivers/perfctr/x86.c:504:
+			wrmsr(msr_evntsel0+pmc, 0, 0);
 			                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#661: FILE: drivers/perfctr/x86.c:507:
+		wrmsr(msr_perfctr0+pmc, state->pmc[i].start, -1);
 		                  ^

ERROR:SPACING: space required before the open parenthesis '('
#688: FILE: drivers/perfctr/x86.c:534:
+	for(i = 0; i < nrctrs; ++i) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#691: FILE: drivers/perfctr/x86.c:537:
+		unsigned int pmc = state->pmc[i].map;
+		if (evntsel != cache->control.evntsel[pmc]) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#693: FILE: drivers/perfctr/x86.c:539:
+			wrmsr(msr_evntsel0+pmc, evntsel, 0);
 			                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#752: FILE: drivers/perfctr/x86.c:598:
+	clear_msr_range(MSR_K7_EVNTSEL0, 4+4);
 	                                  ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#772: FILE: drivers/perfctr/x86.c:618:
+	if (state->control.nractrs == 1) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#779: FILE: drivers/perfctr/x86.c:625:
+	} else

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#787: FILE: drivers/perfctr/x86.c:633:
+	wrmsr(MSR_P6_EVNTSEL0+1, 0x00070079, 0);
 	                     ^

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#823: FILE: drivers/perfctr/x86.c:669:
+ *    as the first even-numbered pair, and the range is 1+ the range of the
+ *    the first even-numbered pair. For example, CCCR(0) and (1) map ESCR

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#836: FILE: drivers/perfctr/x86.c:682:
+	[0x00/4] {	[7] 0xA0,
 	     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#845: FILE: drivers/perfctr/x86.c:691:
+	[0x04/4] {	[0] 0xC0,
 	     ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#849: FILE: drivers/perfctr/x86.c:695:
+	[0x08/4] {	[1] 0xA4,
 	     ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#855: FILE: drivers/perfctr/x86.c:701:
+	/* 0x0C, 0x0D, and 0x10 as is,
+	   0x0E, 0x0F, and 0x11 are +1 except [3] is not in the domain */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#855: FILE: drivers/perfctr/x86.c:701:
+	   0x0E, 0x0F, and 0x11 are +1 except [3] is not in the domain */

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#856: FILE: drivers/perfctr/x86.c:702:
+	[0x0C/4] {	[4] 0xB8,
 	     ^

ERROR:SPACING: space required before the open parenthesis '('
#895: FILE: drivers/perfctr/x86.c:741:
+	for(i = 0; i < nrctrs; ++i) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#898: FILE: drivers/perfctr/x86.c:744:
+		/* check that pmc_map[] is well-defined;
+		   pmc_map[i] is what we pass to RDPMC, the PMC itself

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#899: FILE: drivers/perfctr/x86.c:745:
+		   is extracted by masking off the FAST_RDPMC flag */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#902: FILE: drivers/perfctr/x86.c:748:
+		if (pmc >= 18 || (pmc_mask & (1<<pmc)))
 		                               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#904: FILE: drivers/perfctr/x86.c:750:
+		pmc_mask |= (1<<pmc);
 		              ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#943: FILE: drivers/perfctr/x86.c:789:
+		/* XXX: Two counters could map to the same ESCR. Should we
+		   check that they use the same ESCR value? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#943: FILE: drivers/perfctr/x86.c:789:
+		   check that they use the same ESCR value? */

CHECK:BRACES: braces {} should be used on all arms of this statement
#947: FILE: drivers/perfctr/x86.c:793:
+	if (state->control.p4.pebs_enable) {
[...]
+	} else if (state->control.p4.pebs_matrix_vert)
[...]

ERROR:SPACING: space required before the open parenthesis '('
#987: FILE: drivers/perfctr/x86.c:833:
+	for(i = 0; i < nrctrs; ++i) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#989: FILE: drivers/perfctr/x86.c:835:
+		unsigned int escr_val, escr_off, cccr_val, pmc;
+		escr_val = state->control.p4.escr[i];

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#993: FILE: drivers/perfctr/x86.c:839:
+			wrmsr(MSR_P4_ESCR0+escr_off, escr_val, 0);
 			                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#999: FILE: drivers/perfctr/x86.c:845:
+			wrmsr(MSR_P4_CCCR0+pmc, cccr_val, 0);
 			                  ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1016: FILE: drivers/perfctr/x86.c:862:
+	/* MSR 0x3F0 seems to have a default value of 0xFC00, but current
+	   docs doesn't fully define it, so leave it alone for now. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1016: FILE: drivers/perfctr/x86.c:862:
+	   docs doesn't fully define it, so leave it alone for now. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1018: FILE: drivers/perfctr/x86.c:864:
+	/* clear PEBS_ENABLE and PEBS_MATRIX_VERT; they handle both PEBS
+	   and ReplayTagging, and should exist even if PEBS is disabled */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1018: FILE: drivers/perfctr/x86.c:864:
+	   and ReplayTagging, and should exist even if PEBS is disabled */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1068: FILE: drivers/perfctr/x86.c:914:
+		printk(KERN_ERR __FILE__ ":%s: unresolved call to %p at %p\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1069: FILE: drivers/perfctr/x86.c:915:
+		       __FUNCTION__, to, ra);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1071: FILE: drivers/perfctr/x86.c:917:
+	if (*((unsigned char*)ra - 5) != 0xE8) {

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1072: FILE: drivers/perfctr/x86.c:918:
+		printk(KERN_WARNING __FILE__ ":%s: unable to redirect caller %p to %p\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1073: FILE: drivers/perfctr/x86.c:919:
+		       __FUNCTION__, ra, to);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1076: FILE: drivers/perfctr/x86.c:922:
+	*(int*)((char*)ra - 4) = (char*)to - (char*)ra;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1076: FILE: drivers/perfctr/x86.c:922:
+	*(int*)((char*)ra - 4) = (char*)to - (char*)ra;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1076: FILE: drivers/perfctr/x86.c:922:
+	*(int*)((char*)ra - 4) = (char*)to - (char*)ra;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1076: FILE: drivers/perfctr/x86.c:922:
+	*(int*)((char*)ra - 4) = (char*)to - (char*)ra;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1079: FILE: drivers/perfctr/x86.c:925:
+static void (*write_control)(const struct perfctr_cpu_state*);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1096: FILE: drivers/perfctr/x86.c:942:
+static void (*cpu_isuspend)(struct perfctr_cpu_state*);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1103: FILE: drivers/perfctr/x86.c:949:
+static void (*cpu_iresume)(const struct perfctr_cpu_state*);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1111: FILE: drivers/perfctr/x86.c:957:
+/* Call perfctr_cpu_ireload() just before perfctr_cpu_resume() to
+   bypass internal caching and force a reload if the I-mode PMCs. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1111: FILE: drivers/perfctr/x86.c:957:
+   bypass internal caching and force a reload if the I-mode PMCs. */

ERROR:SPACING: space required before the open parenthesis '('
#1131: FILE: drivers/perfctr/x86.c:977:
+	for(pmc_mask = 0; pmc < nrctrs; ++pmc) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1137: FILE: drivers/perfctr/x86.c:983:
+			/* On a P4 we should now clear the OVF flag in the
+			   counter's CCCR. However, p4_isuspend() already

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1139: FILE: drivers/perfctr/x86.c:985:
+			   in order to stop the i-mode counters. */

ERROR:SPACING: space required before the open parenthesis '('
#1153: FILE: drivers/perfctr/x86.c:999:
+	for(; i < nrctrs; ++i)

ERROR:SPACING: space required before the open parenthesis '('
#1165: FILE: drivers/perfctr/x86.c:1011:
+	for(i = perfctr_cstatus_nractrs(cstatus); i < nrctrs; ++i)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1186: FILE: drivers/perfctr/x86.c:1032:
+	if (!(perfctr_info.cpu_features & PERFCTR_FEATURE_PCINT)
+	    && state->control.nrictrs)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1207: FILE: drivers/perfctr/x86.c:1053:
+	if (perfctr_cstatus_has_ictrs(state->cstatus))
+	    perfctr_cpu_isuspend(state);

ERROR:SPACING: space required before the open parenthesis '('
#1214: FILE: drivers/perfctr/x86.c:1060:
+	for(i = 0; i < nractrs; ++i)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1221: FILE: drivers/perfctr/x86.c:1067:
+	if (perfctr_cstatus_has_ictrs(state->cstatus))
+	    perfctr_cpu_iresume(state);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1229: FILE: drivers/perfctr/x86.c:1075:
+		unsigned int i, cstatus, nrctrs;
+		perfctr_cpu_read_counters(state, &now);

ERROR:SPACING: space required before the open parenthesis '('
#1234: FILE: drivers/perfctr/x86.c:1080:
+		for(i = 0; i < nrctrs; ++i)

ERROR:SPACING: space required before the open parenthesis '('
#1252: FILE: drivers/perfctr/x86.c:1098:
+	for(i = 0; i < nractrs; ++i) {

WARNING:SIZEOF_PARENTHESIS: sizeof *cache should be sizeof(*cache)
#1295: FILE: drivers/perfctr/x86.c:1141:
+	memset(cache, 0, sizeof *cache);

WARNING:SIZEOF_PARENTHESIS: sizeof state should be sizeof(state)
#1296: FILE: drivers/perfctr/x86.c:1142:
+	memset(&state, 0, sizeof state);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1318: FILE: drivers/perfctr/x86.c:1164:
+	unsigned int logical_processor_id = local_apic_physical_id & 1;
+	if (logical_processor_id != 0)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1320: FILE: drivers/perfctr/x86.c:1166:
+		cpu_set(smp_processor_id(), *(cpumask_t*)forbidden);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1334: FILE: drivers/perfctr/x86.c:1180:
+	printk(KERN_INFO "perfctr/x86.c: hyper-threaded P4s detected:"

WARNING:SPLIT_STRING: quoted string split across lines
#1335: FILE: drivers/perfctr/x86.c:1181:
+	printk(KERN_INFO "perfctr/x86.c: hyper-threaded P4s detected:"
+	       " restricting access for CPUs");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: space required before the open parenthesis '('
#1336: FILE: drivers/perfctr/x86.c:1182:
+	for(cpu = 0; cpu < NR_CPUS; ++cpu)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#1336: FILE: drivers/perfctr/x86.c:1182:
+	for(cpu = 0; cpu < NR_CPUS; ++cpu)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1338: FILE: drivers/perfctr/x86.c:1184:
+			printk(" %u", cpu);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1339: FILE: drivers/perfctr/x86.c:1185:
+	printk("\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1354: FILE: drivers/perfctr/x86.c:1200:
+		printk(KERN_WARNING "perfctr/x86.c: hyper-threaded P4s detected:"

WARNING:SPLIT_STRING: quoted string split across lines
#1355: FILE: drivers/perfctr/x86.c:1201:
+		printk(KERN_WARNING "perfctr/x86.c: hyper-threaded P4s detected:"
+		       " unsupported number of siblings: %u -- bailing out\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1402: FILE: drivers/perfctr/x86.c:1248:
+			/* Erratum Y3 probably does not apply since we
+			   read only the low 32 bits. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1402: FILE: drivers/perfctr/x86.c:1248:
+			   read only the low 32 bits. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#1486: FILE: drivers/perfctr/x86.c:1332:
+	static char mii_name[] __initdata = "Cyrix 6x86MX/MII/III";
+	if (!cpu_has_tsc)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1507: FILE: drivers/perfctr/x86.c:1353:
+	static char vc3_name[] __initdata = "VIA C3";
+	switch (current_cpu_data.x86) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1558: FILE: drivers/perfctr/x86.c:1404:
+	static char generic_name[] __initdata = "Generic x86 with TSC";
+	if (!cpu_has_tsc)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1586: FILE: drivers/perfctr/x86.c:1432:
+	/* PREEMPT note: when called via smp_call_function(),
+	   this is in IRQ context with preemption disabled. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1586: FILE: drivers/perfctr/x86.c:1432:
+	   this is in IRQ context with preemption disabled. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1598: FILE: drivers/perfctr/x86.c:1444:
+	/* PREEMPT note: when called via smp_call_function(),
+	   this is in IRQ context with preemption disabled. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1598: FILE: drivers/perfctr/x86.c:1444:
+	   this is in IRQ context with preemption disabled. */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1612: FILE: drivers/perfctr/x86.c:1458:
+	printk("perfctr/x86: PM suspend\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1618: FILE: drivers/perfctr/x86.c:1464:
+	printk("perfctr/x86: PM resume\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1689: FILE: drivers/perfctr/x86.c:1535:
+	/* RDPMC and RDTSC are on by default. They will be disabled
+	   by the init procedures if necessary. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1689: FILE: drivers/perfctr/x86.c:1535:
+	   by the init procedures if necessary. */

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1735: FILE: drivers/perfctr/x86.c:1581:
+static const char *current_service = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1766: FILE: drivers/perfctr/x86.c:1612:
+		printk(KERN_ERR "%s: attempt by %s to release while reserved by %s\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1767: FILE: drivers/perfctr/x86.c:1613:
+		       __FUNCTION__, service, current_service);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1785: FILE: drivers/perfctr/x86_tests.c:1:
+/* $Id: x86_tests.c,v 1.28 2004/05/23 23:22:44 mikpe Exp $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1785: FILE: drivers/perfctr/x86_tests.c:1:
+/* $Id: x86_tests.c,v 1.28 2004/05/23 23:22:44 mikpe Exp $

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1807: FILE: drivers/perfctr/x86_tests.c:23:
+#define P5_CESR_VAL		(0x16 | (3<<6))
                    		          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1810: FILE: drivers/perfctr/x86_tests.c:26:
+#define P6_EVNTSEL0_VAL		(0xC0 | (3<<16) | (1<<22))
                        		          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1810: FILE: drivers/perfctr/x86_tests.c:26:
+#define P6_EVNTSEL0_VAL		(0xC0 | (3<<16) | (1<<22))
                        		                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1813: FILE: drivers/perfctr/x86_tests.c:29:
+#define K7_EVNTSEL0_VAL		(0xC0 | (3<<16) | (1<<22))
                        		          ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1813: FILE: drivers/perfctr/x86_tests.c:29:
+#define K7_EVNTSEL0_VAL		(0xC0 | (3<<16) | (1<<22))
                        		                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1818: FILE: drivers/perfctr/x86_tests.c:34:
+#define P4_CRU_ESCR0_VAL	((2<<25) | (1<<9) | (0x3<<2))
                         	   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1818: FILE: drivers/perfctr/x86_tests.c:34:
+#define P4_CRU_ESCR0_VAL	((2<<25) | (1<<9) | (0x3<<2))
                         	             ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1818: FILE: drivers/perfctr/x86_tests.c:34:
+#define P4_CRU_ESCR0_VAL	((2<<25) | (1<<9) | (0x3<<2))
                         	                        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1819: FILE: drivers/perfctr/x86_tests.c:35:
+#define P4_IQ_CCCR0_VAL		((0x3<<16) | (4<<13) | (1<<12))
                        		     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1819: FILE: drivers/perfctr/x86_tests.c:35:
+#define P4_IQ_CCCR0_VAL		((0x3<<16) | (4<<13) | (1<<12))
                        		               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#1819: FILE: drivers/perfctr/x86_tests.c:35:
+#define P4_IQ_CCCR0_VAL		((0x3<<16) | (4<<13) | (1<<12))
                        		                         ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'S' - possible side-effects?
#1822: FILE: drivers/perfctr/x86_tests.c:38:
+#define X2(S)	S";"S

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1822: FILE: drivers/perfctr/x86_tests.c:38:
+#define X2(S)	S";"S

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1831: FILE: drivers/perfctr/x86_tests.c:47:
+static void __init do_rdpmc(unsigned pmc, unsigned unused2)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1831: FILE: drivers/perfctr/x86_tests.c:47:
+static void __init do_rdpmc(unsigned pmc, unsigned unused2)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1833: FILE: drivers/perfctr/x86_tests.c:49:
+	unsigned i;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1834: FILE: drivers/perfctr/x86_tests.c:50:
+	unsigned i;
+	for(i = 0; i < NITER/8; ++i)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1834: FILE: drivers/perfctr/x86_tests.c:50:
+	for(i = 0; i < NITER/8; ++i)
 	                    ^

ERROR:SPACING: space required before the open parenthesis '('
#1834: FILE: drivers/perfctr/x86_tests.c:50:
+	for(i = 0; i < NITER/8; ++i)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1838: FILE: drivers/perfctr/x86_tests.c:54:
+static void __init do_rdmsr(unsigned msr, unsigned unused2)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1838: FILE: drivers/perfctr/x86_tests.c:54:
+static void __init do_rdmsr(unsigned msr, unsigned unused2)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1840: FILE: drivers/perfctr/x86_tests.c:56:
+	unsigned i;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1841: FILE: drivers/perfctr/x86_tests.c:57:
+	unsigned i;
+	for(i = 0; i < NITER/8; ++i)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1841: FILE: drivers/perfctr/x86_tests.c:57:
+	for(i = 0; i < NITER/8; ++i)
 	                    ^

ERROR:SPACING: space required before the open parenthesis '('
#1841: FILE: drivers/perfctr/x86_tests.c:57:
+	for(i = 0; i < NITER/8; ++i)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1845: FILE: drivers/perfctr/x86_tests.c:61:
+static void __init do_wrmsr(unsigned msr, unsigned data)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1845: FILE: drivers/perfctr/x86_tests.c:61:
+static void __init do_wrmsr(unsigned msr, unsigned data)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1847: FILE: drivers/perfctr/x86_tests.c:63:
+	unsigned i;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1848: FILE: drivers/perfctr/x86_tests.c:64:
+	unsigned i;
+	for(i = 0; i < NITER/8; ++i)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1848: FILE: drivers/perfctr/x86_tests.c:64:
+	for(i = 0; i < NITER/8; ++i)
 	                    ^

ERROR:SPACING: space required before the open parenthesis '('
#1848: FILE: drivers/perfctr/x86_tests.c:64:
+	for(i = 0; i < NITER/8; ++i)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1852: FILE: drivers/perfctr/x86_tests.c:68:
+static void __init do_rdcr4(unsigned unused1, unsigned unused2)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1852: FILE: drivers/perfctr/x86_tests.c:68:
+static void __init do_rdcr4(unsigned unused1, unsigned unused2)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1854: FILE: drivers/perfctr/x86_tests.c:70:
+	unsigned i;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1856: FILE: drivers/perfctr/x86_tests.c:72:
+	unsigned long dummy;
+	for(i = 0; i < NITER/8; ++i)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1856: FILE: drivers/perfctr/x86_tests.c:72:
+	for(i = 0; i < NITER/8; ++i)
 	                    ^

ERROR:SPACING: space required before the open parenthesis '('
#1856: FILE: drivers/perfctr/x86_tests.c:72:
+	for(i = 0; i < NITER/8; ++i)

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1857: FILE: drivers/perfctr/x86_tests.c:73:
+		__asm__ __volatile__(X8(CR4MOV" %%cr4,%0") : "=r"(dummy));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1860: FILE: drivers/perfctr/x86_tests.c:76:
+static void __init do_wrcr4(unsigned cr4, unsigned unused2)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1860: FILE: drivers/perfctr/x86_tests.c:76:
+static void __init do_wrcr4(unsigned cr4, unsigned unused2)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1862: FILE: drivers/perfctr/x86_tests.c:78:
+	unsigned i;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1863: FILE: drivers/perfctr/x86_tests.c:79:
+	unsigned i;
+	for(i = 0; i < NITER/8; ++i)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1863: FILE: drivers/perfctr/x86_tests.c:79:
+	for(i = 0; i < NITER/8; ++i)
 	                    ^

ERROR:SPACING: space required before the open parenthesis '('
#1863: FILE: drivers/perfctr/x86_tests.c:79:
+	for(i = 0; i < NITER/8; ++i)

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#1864: FILE: drivers/perfctr/x86_tests.c:80:
+		__asm__ __volatile__(X8(CR4MOV" %0,%%cr4") : : "r"((long)cr4));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1867: FILE: drivers/perfctr/x86_tests.c:83:
+static void __init do_rdtsc(unsigned unused1, unsigned unused2)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1867: FILE: drivers/perfctr/x86_tests.c:83:
+static void __init do_rdtsc(unsigned unused1, unsigned unused2)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1869: FILE: drivers/perfctr/x86_tests.c:85:
+	unsigned i;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1870: FILE: drivers/perfctr/x86_tests.c:86:
+	unsigned i;
+	for(i = 0; i < NITER/8; ++i)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1870: FILE: drivers/perfctr/x86_tests.c:86:
+	for(i = 0; i < NITER/8; ++i)
 	                    ^

ERROR:SPACING: space required before the open parenthesis '('
#1870: FILE: drivers/perfctr/x86_tests.c:86:
+	for(i = 0; i < NITER/8; ++i)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1874: FILE: drivers/perfctr/x86_tests.c:90:
+static void __init do_wrlvtpc(unsigned val, unsigned unused2)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1874: FILE: drivers/perfctr/x86_tests.c:90:
+static void __init do_wrlvtpc(unsigned val, unsigned unused2)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1876: FILE: drivers/perfctr/x86_tests.c:92:
+	unsigned i;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1877: FILE: drivers/perfctr/x86_tests.c:93:
+	unsigned i;
+	for(i = 0; i < NITER/8; ++i) {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1877: FILE: drivers/perfctr/x86_tests.c:93:
+	for(i = 0; i < NITER/8; ++i) {
 	                    ^

ERROR:SPACING: space required before the open parenthesis '('
#1877: FILE: drivers/perfctr/x86_tests.c:93:
+	for(i = 0; i < NITER/8; ++i) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1889: FILE: drivers/perfctr/x86_tests.c:105:
+static void __init do_empty_loop(unsigned unused1, unsigned unused2)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1889: FILE: drivers/perfctr/x86_tests.c:105:
+static void __init do_empty_loop(unsigned unused1, unsigned unused2)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1891: FILE: drivers/perfctr/x86_tests.c:107:
+	unsigned i;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1892: FILE: drivers/perfctr/x86_tests.c:108:
+	unsigned i;
+	for(i = 0; i < NITER/8; ++i)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1892: FILE: drivers/perfctr/x86_tests.c:108:
+	for(i = 0; i < NITER/8; ++i)
 	                    ^

ERROR:SPACING: space required before the open parenthesis '('
#1892: FILE: drivers/perfctr/x86_tests.c:108:
+	for(i = 0; i < NITER/8; ++i)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1896: FILE: drivers/perfctr/x86_tests.c:112:
+static unsigned __init run(void (*doit)(unsigned, unsigned),

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1896: FILE: drivers/perfctr/x86_tests.c:112:
+static unsigned __init run(void (*doit)(unsigned, unsigned),

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1897: FILE: drivers/perfctr/x86_tests.c:113:
+			   unsigned arg1, unsigned arg2)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1897: FILE: drivers/perfctr/x86_tests.c:113:
+			   unsigned arg1, unsigned arg2)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1899: FILE: drivers/perfctr/x86_tests.c:115:
+	unsigned start, dummy, stop;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1900: FILE: drivers/perfctr/x86_tests.c:116:
+	unsigned start, dummy, stop;
+	rdtsc(start, dummy);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1908: FILE: drivers/perfctr/x86_tests.c:124:
+	printk(KERN_INFO "Please email the following PERFCTR INIT lines "

WARNING:SPLIT_STRING: quoted string split across lines
#1909: FILE: drivers/perfctr/x86_tests.c:125:
+	printk(KERN_INFO "Please email the following PERFCTR INIT lines "
+	       "to mikpe@csd.uu.se\n"

WARNING:SPLIT_STRING: quoted string split across lines
#1911: FILE: drivers/perfctr/x86_tests.c:127:
+	       KERN_INFO "To remove this message, rebuild the driver "
+	       "with CONFIG_PERFCTR_INIT_TESTS=n\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1912: FILE: drivers/perfctr/x86_tests.c:128:
+	printk(KERN_INFO "PERFCTR INIT: vendor %u, family %u, model %u, stepping %u, clock %u kHz\n",

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1921: FILE: drivers/perfctr/x86_tests.c:137:
+measure_overheads(unsigned msr_evntsel0, unsigned evntsel0, unsigned msr_perfctr0,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1921: FILE: drivers/perfctr/x86_tests.c:137:
+measure_overheads(unsigned msr_evntsel0, unsigned evntsel0, unsigned msr_perfctr0,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1921: FILE: drivers/perfctr/x86_tests.c:137:
+measure_overheads(unsigned msr_evntsel0, unsigned evntsel0, unsigned msr_perfctr0,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1922: FILE: drivers/perfctr/x86_tests.c:138:
+		  unsigned msr_cccr, unsigned cccr_val)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1922: FILE: drivers/perfctr/x86_tests.c:138:
+		  unsigned msr_cccr, unsigned cccr_val)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1937: FILE: drivers/perfctr/x86_tests.c:153:
+		? run(do_rdpmc,1,0) : 0;
 		              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1937: FILE: drivers/perfctr/x86_tests.c:153:
+		? run(do_rdpmc,1,0) : 0;
 		                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1958: FILE: drivers/perfctr/x86_tests.c:174:
+		? run(do_wrlvtpc, APIC_DM_NMI|APIC_LVT_MASKED, 0) : 0;
 		                             ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1968: FILE: drivers/perfctr/x86_tests.c:184:
+	printk(KERN_INFO "PERFCTR INIT: NITER == %u\n", NITER);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1969: FILE: drivers/perfctr/x86_tests.c:185:
+	printk(KERN_INFO "PERFCTR INIT: loop overhead is %u cycles\n", loop);

ERROR:SPACING: space required before the open parenthesis '('
#1970: FILE: drivers/perfctr/x86_tests.c:186:
+	for(i = 0; i < ARRAY_SIZE(ticks); ++i) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1972: FILE: drivers/perfctr/x86_tests.c:188:
+		unsigned int x;
+		if (!ticks[i])

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1975: FILE: drivers/perfctr/x86_tests.c:191:
+		printk(KERN_INFO "PERFCTR INIT: %s cost is %u.%u cycles (%u total)\n",

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1976: FILE: drivers/perfctr/x86_tests.c:192:
+		       name[i], x/10, x%10, ticks[i]);
 		                 ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#1976: FILE: drivers/perfctr/x86_tests.c:192:
+		       name[i], x/10, x%10, ticks[i]);
 		                       ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1998: FILE: drivers/perfctr/x86_tests.c:214:
+	printk(KERN_INFO "PERFCTR INIT: boot CESR == %#08x\n", cesr);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2004: FILE: drivers/perfctr/x86_tests.c:220:
+	measure_overheads(MSR_P6_EVNTSEL0+1, VC3_EVNTSEL1_VAL, MSR_P6_PERFCTR0+1, 0, 0);
 	                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2004: FILE: drivers/perfctr/x86_tests.c:220:
+	measure_overheads(MSR_P6_EVNTSEL0+1, VC3_EVNTSEL1_VAL, MSR_P6_PERFCTR0+1, 0, 0);
 	                                                                      ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2055: FILE: drivers/perfctr/x86_tests.c:271:
+		printk(KERN_INFO "%s: unknown CPU type %u\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2056: FILE: drivers/perfctr/x86_tests.c:272:
+		       __FUNCTION__, perfctr_x86_tests_type);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2064: FILE: drivers/perfctr/x86_tests.h:1:
+/* $Id: x86_tests.h,v 1.10 2004/05/22 20:48:57 mikpe Exp $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#2064: FILE: drivers/perfctr/x86_tests.h:1:
+/* $Id: x86_tests.h,v 1.10 2004/05/22 20:48:57 mikpe Exp $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2072: FILE: drivers/perfctr/x86_tests.h:9:
+/* 'enum perfctr_x86_tests_type' classifies CPUs according
+   to relevance for perfctr_x86_init_tests(). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2072: FILE: drivers/perfctr/x86_tests.h:9:
+   to relevance for perfctr_x86_init_tests(). */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2093: FILE: drivers/perfctr/x86_tests.h:30:
+extern void perfctr_x86_init_tests(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2161: FILE: include/asm-i386/perfctr.h:1:
+/* $Id: perfctr.h,v 1.52 2004/05/23 22:36:34 mikpe Exp $

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#2161: FILE: include/asm-i386/perfctr.h:1:
+/* $Id: perfctr.h,v 1.52 2004/05/23 22:36:34 mikpe Exp $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2218: FILE: include/asm-i386/perfctr.h:58:
+	/* The two tsc fields must be inlined. Placing them in a
+	   sub-struct causes unwanted internal padding on x86-64. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2218: FILE: include/asm-i386/perfctr.h:58:
+	   sub-struct causes unwanted internal padding on x86-64. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2233: FILE: include/asm-i386/perfctr.h:73:
+/* cstatus is a re-encoding of control.tsc_on/nractrs/nrictrs
+   which should have less overhead in most cases */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2233: FILE: include/asm-i386/perfctr.h:73:
+   which should have less overhead in most cases */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2239: FILE: include/asm-i386/perfctr.h:79:
+	return (tsc_on<<31) | (nrictrs<<16) | ((nractrs+nrictrs)<<8) | nractrs;
 	              ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2239: FILE: include/asm-i386/perfctr.h:79:
+	return (tsc_on<<31) | (nrictrs<<16) | ((nractrs+nrictrs)<<8) | nractrs;
 	                              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2239: FILE: include/asm-i386/perfctr.h:79:
+	return (tsc_on<<31) | (nrictrs<<16) | ((nractrs+nrictrs)<<8) | nractrs;
 	                                               ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2239: FILE: include/asm-i386/perfctr.h:79:
+	return (tsc_on<<31) | (nrictrs<<16) | ((nractrs+nrictrs)<<8) | nractrs;
 	                                                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2279: FILE: include/asm-i386/perfctr.h:119:
+#define SI_PMC_OVF	(__SI_FAULT|'P')
                   	           ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2293: FILE: include/asm-i386/perfctr.h:133:
+extern int perfctr_cpu_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2294: FILE: include/asm-i386/perfctr.h:134:
+extern void perfctr_cpu_exit(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2300: FILE: include/asm-i386/perfctr.h:140:
+extern const char *perfctr_cpu_reserve(const char *service);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2301: FILE: include/asm-i386/perfctr.h:141:
+extern void perfctr_cpu_release(const char *service);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2304: FILE: include/asm-i386/perfctr.h:144:
+/* PRE: state has no running interrupt-mode counters.
+   Check that the new control data is valid.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2308: FILE: include/asm-i386/perfctr.h:148:
+   Returns a negative error code if the control data is invalid. */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2309: FILE: include/asm-i386/perfctr.h:149:
+extern int perfctr_cpu_update_control(struct perfctr_cpu_state *state, int is_global);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2312: FILE: include/asm-i386/perfctr.h:152:
+/* Read a-mode counters. Subtract from start and accumulate into sums.
+   Must be called with preemption disabled. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2312: FILE: include/asm-i386/perfctr.h:152:
+   Must be called with preemption disabled. */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2313: FILE: include/asm-i386/perfctr.h:153:
+extern void perfctr_cpu_suspend(struct perfctr_cpu_state *state);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2316: FILE: include/asm-i386/perfctr.h:156:
+/* Write control registers. Read a-mode counters into start.
+   Must be called with preemption disabled. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2316: FILE: include/asm-i386/perfctr.h:156:
+   Must be called with preemption disabled. */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2317: FILE: include/asm-i386/perfctr.h:157:
+extern void perfctr_cpu_resume(struct perfctr_cpu_state *state);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2320: FILE: include/asm-i386/perfctr.h:160:
+/* Perform an efficient combined suspend/resume operation.
+   Must be called with preemption disabled. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2320: FILE: include/asm-i386/perfctr.h:160:
+   Must be called with preemption disabled. */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2321: FILE: include/asm-i386/perfctr.h:161:
+extern void perfctr_cpu_sample(struct perfctr_cpu_state *state);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2324: FILE: include/asm-i386/perfctr.h:164:
+/* The type of a perfctr overflow interrupt handler.
+   It will be called in IRQ context, with preemption disabled. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2324: FILE: include/asm-i386/perfctr.h:164:
+   It will be called in IRQ context, with preemption disabled. */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2332: FILE: include/asm-i386/perfctr.h:172:
+extern void perfctr_cpu_set_ihandler(perfctr_ihandler_t);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2333: FILE: include/asm-i386/perfctr.h:173:
+extern void perfctr_cpu_ireload(struct perfctr_cpu_state*);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2333: FILE: include/asm-i386/perfctr.h:173:
+extern void perfctr_cpu_ireload(struct perfctr_cpu_state*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct perfctr_cpu_state*' should also have an identifier name
#2333: FILE: include/asm-i386/perfctr.h:173:
+extern void perfctr_cpu_ireload(struct perfctr_cpu_state*);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2334: FILE: include/asm-i386/perfctr.h:174:
+extern unsigned int perfctr_cpu_identify_overflow(struct perfctr_cpu_state*);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2334: FILE: include/asm-i386/perfctr.h:174:
+extern unsigned int perfctr_cpu_identify_overflow(struct perfctr_cpu_state*);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct perfctr_cpu_state*' should also have an identifier name
#2334: FILE: include/asm-i386/perfctr.h:174:
+extern unsigned int perfctr_cpu_identify_overflow(struct perfctr_cpu_state*);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2341: FILE: include/asm-i386/perfctr.h:181:
+/* CPUs in `perfctr_cpus_forbidden_mask' must not use the
+   performance-monitoring counters. TSC use is unrestricted.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2344: FILE: include/asm-i386/perfctr.h:184:
+   private compat.h, since it needs to handle cpumask_t incompatibilities. */

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2351: FILE: include/asm-i386/perfctr.h:191:
+asmlinkage void perfctr_interrupt(struct pt_regs*);

ERROR:SPACING: space required before the open brace '{'
#2355: FILE: include/asm-i386/perfctr.h:195:
+#define perfctr_vector_init()	do{}while(0)

ERROR:SPACING: space required after that close brace '}'
#2355: FILE: include/asm-i386/perfctr.h:195:
+#define perfctr_vector_init()	do{}while(0)

ERROR:SPACING: space required before the open parenthesis '('
#2355: FILE: include/asm-i386/perfctr.h:195:
+#define perfctr_vector_init()	do{}while(0)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2381: FILE: include/asm-i386/unistd.h:293:
+#define __NR_vperfctr_open	(__NR_perfctr_info+1)
                           	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2382: FILE: include/asm-i386/unistd.h:294:
+#define __NR_vperfctr_control	(__NR_perfctr_info+2)
                              	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2383: FILE: include/asm-i386/unistd.h:295:
+#define __NR_vperfctr_unlink	(__NR_perfctr_info+3)
                             	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2384: FILE: include/asm-i386/unistd.h:296:
+#define __NR_vperfctr_iresume	(__NR_perfctr_info+4)
                              	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2385: FILE: include/asm-i386/unistd.h:297:
+#define __NR_vperfctr_read	(__NR_perfctr_info+5)
                           	                  ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000278262.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 52 errors, 147 warnings, 80 checks, 2294 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000278262.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
