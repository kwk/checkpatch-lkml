WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#24: 
   Correctly detect and print hash values, when manual hash detection is used.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#33: FILE: include/linux/reiserfs_fs.h:1963:
+char * reiserfs_hashname(int code);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#44: FILE: fs/reiserfs/super.c:853:
+    do { // Some serious "goto"-hater was there ;)$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#59: FILE: fs/reiserfs/super.c:874:
+	r5hash=GET_HASH_VALUE (r5_hash (de.de_name, de.de_namelen));

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#59: FILE: fs/reiserfs/super.c:874:
+	r5hash=GET_HASH_VALUE (r5_hash (de.de_name, de.de_namelen));

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#59: FILE: fs/reiserfs/super.c:874:
+	r5hash=GET_HASH_VALUE (r5_hash (de.de_name, de.de_namelen));
 	      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#60: FILE: fs/reiserfs/super.c:875:
+	teahash=GET_HASH_VALUE (keyed_hash (de.de_name, de.de_namelen));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#60: FILE: fs/reiserfs/super.c:875:
+	teahash=GET_HASH_VALUE (keyed_hash (de.de_name, de.de_namelen));

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#60: FILE: fs/reiserfs/super.c:875:
+	teahash=GET_HASH_VALUE (keyed_hash (de.de_name, de.de_namelen));
 	       ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#61: FILE: fs/reiserfs/super.c:876:
+	yurahash=GET_HASH_VALUE (yura_hash (de.de_name, de.de_namelen));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#61: FILE: fs/reiserfs/super.c:876:
+	yurahash=GET_HASH_VALUE (yura_hash (de.de_name, de.de_namelen));

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#61: FILE: fs/reiserfs/super.c:876:
+	yurahash=GET_HASH_VALUE (yura_hash (de.de_name, de.de_namelen));
 	        ^

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#62: FILE: fs/reiserfs/super.c:877:
+	if ( ( (teahash == r5hash) && (GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num]))) == r5hash) ) ||

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#62: FILE: fs/reiserfs/super.c:877:
+	if ( ( (teahash == r5hash) && (GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num]))) == r5hash) ) ||
[...]
+	    reiserfs_warning("reiserfs: Unable to automatically detect hash"

ERROR:SPACING: space prohibited after that open parenthesis '('
#62: FILE: fs/reiserfs/super.c:877:
+	if ( ( (teahash == r5hash) && (GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num]))) == r5hash) ) ||

ERROR:SPACING: space prohibited before that close parenthesis ')'
#62: FILE: fs/reiserfs/super.c:877:
+	if ( ( (teahash == r5hash) && (GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num]))) == r5hash) ) ||

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around de.de_deh[de.de_entry_num]
#62: FILE: fs/reiserfs/super.c:877:
+	if ( ( (teahash == r5hash) && (GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num]))) == r5hash) ) ||

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'teahash == r5hash'
#62: FILE: fs/reiserfs/super.c:877:
+	if ( ( (teahash == r5hash) && (GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num]))) == r5hash) ) ||
+	     ( (teahash == yurahash) && (yurahash == GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num])))) ) ||
+	     ( (r5hash == yurahash) && (yurahash == GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num])))) ) ) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'teahash == yurahash'
#62: FILE: fs/reiserfs/super.c:877:
+	if ( ( (teahash == r5hash) && (GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num]))) == r5hash) ) ||
+	     ( (teahash == yurahash) && (yurahash == GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num])))) ) ||
+	     ( (r5hash == yurahash) && (yurahash == GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num])))) ) ) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'yurahash == GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num])))'
#62: FILE: fs/reiserfs/super.c:877:
+	if ( ( (teahash == r5hash) && (GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num]))) == r5hash) ) ||
+	     ( (teahash == yurahash) && (yurahash == GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num])))) ) ||
+	     ( (r5hash == yurahash) && (yurahash == GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num])))) ) ) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'r5hash == yurahash'
#62: FILE: fs/reiserfs/super.c:877:
+	if ( ( (teahash == r5hash) && (GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num]))) == r5hash) ) ||
+	     ( (teahash == yurahash) && (yurahash == GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num])))) ) ||
+	     ( (r5hash == yurahash) && (yurahash == GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num])))) ) ) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'yurahash == GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num])))'
#62: FILE: fs/reiserfs/super.c:877:
+	if ( ( (teahash == r5hash) && (GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num]))) == r5hash) ) ||
+	     ( (teahash == yurahash) && (yurahash == GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num])))) ) ||
+	     ( (r5hash == yurahash) && (yurahash == GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num])))) ) ) {

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#63: FILE: fs/reiserfs/super.c:878:
+	     ( (teahash == yurahash) && (yurahash == GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num])))) ) ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#63: FILE: fs/reiserfs/super.c:878:
+	if ( ( (teahash == r5hash) && (GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num]))) == r5hash) ) ||
+	     ( (teahash == yurahash) && (yurahash == GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num])))) ) ||

ERROR:SPACING: space prohibited after that open parenthesis '('
#63: FILE: fs/reiserfs/super.c:878:
+	     ( (teahash == yurahash) && (yurahash == GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num])))) ) ||

ERROR:SPACING: space prohibited before that close parenthesis ')'
#63: FILE: fs/reiserfs/super.c:878:
+	     ( (teahash == yurahash) && (yurahash == GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num])))) ) ||

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around de.de_deh[de.de_entry_num]
#63: FILE: fs/reiserfs/super.c:878:
+	     ( (teahash == yurahash) && (yurahash == GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num])))) ) ||

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#64: FILE: fs/reiserfs/super.c:879:
+	     ( (r5hash == yurahash) && (yurahash == GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num])))) ) ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#64: FILE: fs/reiserfs/super.c:879:
+	     ( (r5hash == yurahash) && (yurahash == GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num])))) ) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#64: FILE: fs/reiserfs/super.c:879:
+	     ( (r5hash == yurahash) && (yurahash == GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num])))) ) ) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around de.de_deh[de.de_entry_num]
#64: FILE: fs/reiserfs/super.c:879:
+	     ( (r5hash == yurahash) && (yurahash == GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num])))) ) ) {

WARNING:SPLIT_STRING: quoted string split across lines
#66: FILE: fs/reiserfs/super.c:881:
+	    reiserfs_warning("reiserfs: Unable to automatically detect hash"
+		"function for device %s\n"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:MISSING_SPACE: break quoted strings at a space character
#66: FILE: fs/reiserfs/super.c:881:
+	    reiserfs_warning("reiserfs: Unable to automatically detect hash"
+		"function for device %s\n"

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#67: FILE: fs/reiserfs/super.c:882:
+		"please mount with -o hash={tea,rupasov,r5}\n", kdevname (s->s_dev));

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#73: FILE: fs/reiserfs/super.c:886:
+	if (GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num])) ) == yurahash)
 	    hash = YURA_HASH;

ERROR:SPACING: space prohibited after that open parenthesis '('
#73: FILE: fs/reiserfs/super.c:886:
+	if (GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num])) ) == yurahash)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#73: FILE: fs/reiserfs/super.c:886:
+	if (GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num])) ) == yurahash)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around de.de_deh[de.de_entry_num]
#73: FILE: fs/reiserfs/super.c:886:
+	if (GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num])) ) == yurahash)

CHECK:BRACES: braces {} should be used on all arms of this statement
#73: FILE: fs/reiserfs/super.c:886:
+	if (GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num])) ) == yurahash)
[...]
-	else
[...]
 	    hash = TEA_HASH;
[...]
-    }
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#76: FILE: fs/reiserfs/super.c:888:
+	else if (GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num])) ) == teahash)
 	    hash = TEA_HASH;

ERROR:SPACING: space prohibited after that open parenthesis '('
#76: FILE: fs/reiserfs/super.c:888:
+	else if (GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num])) ) == teahash)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#76: FILE: fs/reiserfs/super.c:888:
+	else if (GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num])) ) == teahash)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around de.de_deh[de.de_entry_num]
#76: FILE: fs/reiserfs/super.c:888:
+	else if (GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num])) ) == teahash)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#80: FILE: fs/reiserfs/super.c:890:
+	else if (GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num])) ) == r5hash)
+	    hash = R5_HASH;

ERROR:SPACING: space prohibited after that open parenthesis '('
#80: FILE: fs/reiserfs/super.c:890:
+	else if (GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num])) ) == r5hash)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#80: FILE: fs/reiserfs/super.c:890:
+	else if (GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num])) ) == r5hash)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around de.de_deh[de.de_entry_num]
#80: FILE: fs/reiserfs/super.c:890:
+	else if (GET_HASH_VALUE( deh_offset(&(de.de_deh[de.de_entry_num])) ) == r5hash)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#82: FILE: fs/reiserfs/super.c:892:
+	else {
+	    reiserfs_warning("reiserfs: Unrecognised hash function for "

CHECK:BRACES: Unbalanced braces around else statement
#82: FILE: fs/reiserfs/super.c:892:
+	else {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#84: FILE: fs/reiserfs/super.c:894:
+			     "device %s\n", kdevname (s->s_dev));

WARNING:SPLIT_STRING: quoted string split across lines
#84: FILE: fs/reiserfs/super.c:894:
+	    reiserfs_warning("reiserfs: Unrecognised hash function for "
+			     "device %s\n", kdevname (s->s_dev));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: fs/reiserfs/super.c:897:
+    } while (0);$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#94: FILE: fs/reiserfs/super.c:921:
 	if (reiserfs_rupasov_hash(s) && code != YURA_HASH) {
+	    printk("REISERFS: Error, %s hash detected, "

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#97: FILE: fs/reiserfs/super.c:922:
+	    printk("REISERFS: Error, %s hash detected, "

WARNING:SPACING: space prohibited before semicolon
#98: FILE: fs/reiserfs/super.c:923:
+		   "unable to force rupasov hash\n", reiserfs_hashname(code)) ;

WARNING:SPLIT_STRING: quoted string split across lines
#98: FILE: fs/reiserfs/super.c:923:
+	    printk("REISERFS: Error, %s hash detected, "
+		   "unable to force rupasov hash\n", reiserfs_hashname(code)) ;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#100: FILE: fs/reiserfs/super.c:925:
 	} else if (reiserfs_tea_hash(s) && code != TEA_HASH) {
+	    printk("REISERFS: Error, %s hash detected, "

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#103: FILE: fs/reiserfs/super.c:926:
+	    printk("REISERFS: Error, %s hash detected, "

WARNING:SPACING: space prohibited before semicolon
#104: FILE: fs/reiserfs/super.c:927:
+		   "unable to force tea hash\n", reiserfs_hashname(code)) ;

WARNING:SPLIT_STRING: quoted string split across lines
#104: FILE: fs/reiserfs/super.c:927:
+	    printk("REISERFS: Error, %s hash detected, "
+		   "unable to force tea hash\n", reiserfs_hashname(code)) ;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#106: FILE: fs/reiserfs/super.c:929:
 	} else if (reiserfs_r5_hash(s) && code != R5_HASH) {
+	    printk("REISERFS: Error, %s hash detected, "

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#109: FILE: fs/reiserfs/super.c:930:
+	    printk("REISERFS: Error, %s hash detected, "

WARNING:SPACING: space prohibited before semicolon
#110: FILE: fs/reiserfs/super.c:931:
+		   "unable to force r5 hash\n", reiserfs_hashname(code)) ;

WARNING:SPLIT_STRING: quoted string split across lines
#110: FILE: fs/reiserfs/super.c:931:
+	    printk("REISERFS: Error, %s hash detected, "
+		   "unable to force r5 hash\n", reiserfs_hashname(code)) ;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#120: FILE: fs/reiserfs/prints.c:480:
+char * reiserfs_hashname(int code)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: fs/reiserfs/prints.c:482:
+    if ( code == YURA_HASH)$

ERROR:SPACING: space prohibited after that open parenthesis '('
#122: FILE: fs/reiserfs/prints.c:482:
+    if ( code == YURA_HASH)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: fs/reiserfs/prints.c:484:
+    if ( code == TEA_HASH)$

ERROR:SPACING: space prohibited after that open parenthesis '('
#124: FILE: fs/reiserfs/prints.c:484:
+    if ( code == TEA_HASH)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: fs/reiserfs/prints.c:486:
+    if ( code == R5_HASH)$

ERROR:SPACING: space prohibited after that open parenthesis '('
#126: FILE: fs/reiserfs/prints.c:486:
+    if ( code == R5_HASH)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: fs/reiserfs/prints.c:489:
+    return "unknown";$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000477677.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 20 errors, 38 warnings, 14 checks, 105 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000477677.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
