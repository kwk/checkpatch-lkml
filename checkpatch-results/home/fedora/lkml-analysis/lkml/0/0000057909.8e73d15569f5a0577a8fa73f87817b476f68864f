ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#89: FILE: lib/statistic.c:66:
+#define statistic_ptr(stat, cpu) \
+	((struct percpu_data*)((stat)->data))->ptrs[(cpu)]

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#90: FILE: lib/statistic.c:67:
+	((struct percpu_data*)((stat)->data))->ptrs[(cpu)]

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#92: FILE: lib/statistic.c:69:
+#define statistic_ptr(stat, cpu) (stat)->data

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#158: FILE: lib/statistic.c:230:
+	return (likely(stat->data) ? 0 : -ENOMEM);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:LINE_SPACING: Missing a blank line after declarations
#175: FILE: lib/statistic.c:237:
+	int cpu, node;
+	stat->data = kzalloc(sizeof(struct percpu_data), GFP_KERNEL);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*stat->data)...) over kzalloc(sizeof(struct percpu_data)...)
#175: FILE: lib/statistic.c:237:
+	stat->data = kzalloc(sizeof(struct percpu_data), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:BRACES: braces {} should be used on all arms of this statement
#205: FILE: lib/statistic.c:262:
+	if (likely(!retval)) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#208: FILE: lib/statistic.c:265:
+	} else

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#212: FILE: lib/statistic.c:269:
+
+}

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#273: FILE: lib/statistic.c:893:
+	*(u64*)statistic_ptr(stat, smp_processor_id()) += incr;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#282: FILE: lib/statistic.c:901:
+	*(u64*)statistic_ptr(stat, smp_processor_id()) += value * incr;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#290: FILE: lib/statistic.c:908:
+	*(u64*)stat->data = total;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#299: FILE: lib/statistic.c:916:
+	*(u64*)stat->data = value * total;

WARNING:LINE_SPACING: Missing a blank line after declarations
#310: FILE: lib/statistic.c:962:
+	struct statistic_entry_util *util;
+	util = statistic_ptr(stat, smp_processor_id());

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#329: FILE: lib/statistic.c:1092:
+	((u64*)statistic_ptr(stat, smp_processor_id()))[i] += incr;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#337: FILE: lib/statistic.c:1099:
+	((u64*)statistic_ptr(stat, smp_processor_id()))[i] += incr;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#346: FILE: lib/statistic.c:1107:
+	((u64*)stat->data)[i] = total;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#354: FILE: lib/statistic.c:1114:
+	((u64*)stat->data)[i] = total;

WARNING:LINE_SPACING: Missing a blank line after declarations
#365: FILE: lib/statistic.c:1308:
+	struct statistic_sparse_list *slist;
+	slist = statistic_ptr(stat, smp_processor_id());

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000057909.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 3 warnings, 4 checks, 288 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000057909.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
