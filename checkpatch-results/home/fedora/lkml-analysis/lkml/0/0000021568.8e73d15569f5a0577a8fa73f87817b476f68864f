WARNING:TYPO_SPELLING: 'mininum' may be misspelled - perhaps 'minimum'?
#89: FILE: Documentation/sysctl/vm.txt:214:
+The mininum does not apply to pages that are placed using interleave
     ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#113: FILE: include/linux/mmzone.h:199:
+^Iunsigned long ^I^Imin_interleave_pages;$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ctl_table *' should also have an identifier name
#122: FILE: include/linux/mmzone.h:573:
+int sysctl_min_interleave_ratio_sysctl_handler(struct ctl_table *, int,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#122: FILE: include/linux/mmzone.h:573:
+int sysctl_min_interleave_ratio_sysctl_handler(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#122: FILE: include/linux/mmzone.h:573:
+int sysctl_min_interleave_ratio_sysctl_handler(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __user *' should also have an identifier name
#122: FILE: include/linux/mmzone.h:573:
+int sysctl_min_interleave_ratio_sysctl_handler(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t *' should also have an identifier name
#122: FILE: include/linux/mmzone.h:573:
+int sysctl_min_interleave_ratio_sysctl_handler(struct ctl_table *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#122: FILE: include/linux/mmzone.h:573:
+int sysctl_min_interleave_ratio_sysctl_handler(struct ctl_table *, int,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#123: FILE: include/linux/mmzone.h:574:
+int sysctl_min_interleave_ratio_sysctl_handler(struct ctl_table *, int,
+			struct file *, void __user *, size_t *, loff_t *);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#148: FILE: include/linux/sysctl.h:206:
+	VM_MIN_SLAB=35,		/* Percent pages ignored by zone reclaim */
 	           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#152: FILE: include/linux/sysctl.h:210:
+	VM_MIN_INTERLEAVE=39,	/* Limit for interleave */
 	                 ^

WARNING:DUPLICATED_SYSCTL_CONST: duplicated sysctl range checking value 'zero', consider using the shared one in include/linux/sysctl.h
#172: FILE: kernel/sysctl.c:1037:
+		.extra1		= &zero,

Commit d91bff3011cf ("proc/sysctl: add shared variables for range
check") added some shared const variables to be used instead of a local
copy in each source file.

Consider replacing the sysctl range checking value with the shared
one in include/linux/sysctl.h.  The following conversion scheme may
be used::

  &zero     ->  SYSCTL_ZERO
  &one      ->  SYSCTL_ONE
  &int_max  ->  SYSCTL_INT_MAX

See:

  1. https://lore.kernel.org/lkml/20190430180111.10688-1-mcroce@redhat.com/
  2. https://lore.kernel.org/lkml/20190531131422.14970-1-mcroce@redhat.com/

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#194: FILE: mm/mempolicy.c:1129:
+void clear_full_interleave_nodes(void) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#200: FILE: mm/mempolicy.c:1135:
+	unsigned next;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#282: FILE: mm/page_alloc.c:3235:
 }
+int sysctl_min_interleave_ratio_sysctl_handler(ctl_table *table, int write,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#283: FILE: mm/page_alloc.c:3236:
+int sysctl_min_interleave_ratio_sysctl_handler(ctl_table *table, int write,
+	struct file *file, void __user *buffer, size_t *length, loff_t *ppos)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#308: FILE: include/linux/mempolicy.h:159:
+extern int __interleave(int node, nodemask_t *nodes);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#309: FILE: include/linux/mempolicy.h:160:
+extern void clear_full_interleave_nodes(void);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#325: FILE: kernel/cpuset.c:2400:
+	node = __interleave(current->cpuset_mem_spread_rotor,
+			&current->mems_allowed);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000021568.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 10 warnings, 6 checks, 212 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000021568.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
