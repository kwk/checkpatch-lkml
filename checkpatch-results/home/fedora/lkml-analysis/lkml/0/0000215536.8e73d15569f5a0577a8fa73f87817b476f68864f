ERROR:CODE_INDENT: code indent should use tabs where possible
#89: FILE: fs/select.c:470:
+ ^Iint fdcount, err;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#89: FILE: fs/select.c:470:
+ ^Iint fdcount, err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: fs/select.c:470:
+ ^Iint fdcount, err;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#90: FILE: fs/select.c:471:
+ ^Iunsigned int i;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#90: FILE: fs/select.c:471:
+ ^Iunsigned int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: fs/select.c:471:
+ ^Iunsigned int i;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#92: FILE: fs/select.c:473:
+ ^Istruct poll_list *walk;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#92: FILE: fs/select.c:473:
+ ^Istruct poll_list *walk;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: fs/select.c:473:
+ ^Istruct poll_list *walk;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#100: FILE: fs/select.c:481:
+^I^Itimeout = expire - now; $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#104: FILE: fs/select.c:485:
+		if ((unsigned long) timeout < MAX_SCHEDULE_TIMEOUT / HZ)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#105: FILE: fs/select.c:486:
+			timeout = (unsigned long)(timeout*HZ+999)/1000+1;
 			                                 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#105: FILE: fs/select.c:486:
+			timeout = (unsigned long)(timeout*HZ+999)/1000+1;
 			                                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#105: FILE: fs/select.c:486:
+			timeout = (unsigned long)(timeout*HZ+999)/1000+1;
 			                                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#105: FILE: fs/select.c:486:
+			timeout = (unsigned long)(timeout*HZ+999)/1000+1;
 			                                              ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#116: FILE: fs/select.c:497:
+	while(i!=0) {
 	       ^

ERROR:SPACING: space required before the open parenthesis '('
#116: FILE: fs/select.c:497:
+	while(i!=0) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#118: FILE: fs/select.c:499:
+		struct poll_list *pp;
+		pp = kmalloc(sizeof(struct poll_list)+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: space preferred before that '+' (ctx:VxE)
#118: FILE: fs/select.c:499:
+		pp = kmalloc(sizeof(struct poll_list)+
 		                                     ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*pp)...) over kmalloc(sizeof(struct poll_list)...)
#118: FILE: fs/select.c:499:
+		pp = kmalloc(sizeof(struct poll_list)+

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: space preferred before that '*' (ctx:VxE)
#119: FILE: fs/select.c:500:
+				sizeof(struct pollfd)*
 				                     ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#120: FILE: fs/select.c:501:
+				(i>POLLFD_PER_PAGE?POLLFD_PER_PAGE:i),
 				  ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#120: FILE: fs/select.c:501:
+				(i>POLLFD_PER_PAGE?POLLFD_PER_PAGE:i),
 				                  ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#120: FILE: fs/select.c:501:
+				(i>POLLFD_PER_PAGE?POLLFD_PER_PAGE:i),
 				                                  ^

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#122: FILE: fs/select.c:503:
+		if(pp==NULL)
 		     ^

ERROR:SPACING: space required before the open parenthesis '('
#122: FILE: fs/select.c:503:
+		if(pp==NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!pp"
#122: FILE: fs/select.c:503:
+		if(pp==NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#124: FILE: fs/select.c:505:
+		pp->next=NULL;
 		        ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#125: FILE: fs/select.c:506:
+		pp->len = (i>POLLFD_PER_PAGE?POLLFD_PER_PAGE:i);
 		            ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#125: FILE: fs/select.c:506:
+		pp->len = (i>POLLFD_PER_PAGE?POLLFD_PER_PAGE:i);
 		                            ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#125: FILE: fs/select.c:506:
+		pp->len = (i>POLLFD_PER_PAGE?POLLFD_PER_PAGE:i);
 		                                            ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!head"
#126: FILE: fs/select.c:507:
+		if (head == NULL)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#132: FILE: fs/select.c:513:
+^I^Iif (copy_from_user(pp->entries, ufds + nfds-i, $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#132: FILE: fs/select.c:513:
+		if (copy_from_user(pp->entries, ufds + nfds-i, 
 		                                           ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#133: FILE: fs/select.c:514:
+		if (copy_from_user(pp->entries, ufds + nfds-i, 
+				sizeof(struct pollfd)*pp->len)) {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#133: FILE: fs/select.c:514:
+				sizeof(struct pollfd)*pp->len)) {
 				                     ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#140: FILE: fs/select.c:521:
+	err = fdcount = do_poll(nfds, head, &table, &timeout);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:SPACING: space required before the open parenthesis '('
#150: FILE: fs/select.c:531:
+	while(walk != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "walk"
#150: FILE: fs/select.c:531:
+	while(walk != NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#152: FILE: fs/select.c:533:
+		struct pollfd *fds = walk->entries;
+		if (copy_to_user(ufds, fds, sizeof(struct pollfd) * walk->len))

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: fs/select.c:537:
+  ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#156: FILE: fs/select.c:537:
+  ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: fs/select.c:537:
+  ^I}$

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#160: FILE: fs/select.c:541:
+	while(walk!=NULL) {
 	          ^

ERROR:SPACING: space required before the open parenthesis '('
#160: FILE: fs/select.c:541:
+	while(walk!=NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "walk"
#160: FILE: fs/select.c:541:
+	while(walk!=NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#162: FILE: fs/select.c:543:
+		struct poll_list *pp = walk->next;
+		kfree(walk);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#188: FILE: fs/select.c:602:
+	err = fdcount = do_poll(nfds, head, &table, &timeout);

CHECK:SPACING: No space is necessary after a cast
#193: FILE: fs/select.c:607:
+		restart->arg1 = (unsigned long) saved_ufds;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#194: FILE: fs/select.c:608:
+^I^Irestart->arg2 = (unsigned long) nfds; $

CHECK:SPACING: No space is necessary after a cast
#194: FILE: fs/select.c:608:
+		restart->arg2 = (unsigned long) nfds; 

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000215536.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 17 errors, 11 warnings, 23 checks, 146 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000215536.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
