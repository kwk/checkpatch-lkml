WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
diff -ruN linux-2535original/include/linux/cpufreq.h linux/include/linux/cp=

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#40: FILE: include/linux/cpufreq.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#41: FILE: include/linux/cpufreq.h:2:
+ *  linux/include/linux/cpufreq.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#47: FILE: include/linux/cpufreq.h:8:
+ * $Id: cpufreq.h,v 1.25 2002/09/14 22:42:57 rmk Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#60: FILE: include/linux/cpufreq.h:21:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#65: FILE: include/linux/cpufreq.h:26:
+int cpufreq_register_notifier(struct notifier_block *nb, unsigned int list=
                                                                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#66: FILE: include/linux/cpufreq.h:26:
);

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#67: FILE: include/linux/cpufreq.h:27:
+int cpufreq_unregister_notifier(struct notifier_block *nb, unsigned int li=
                                                                           ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#75: FILE: include/linux/cpufreq.h:34:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#83: FILE: include/linux/cpufreq.h:42:
+ * mille means. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#88: FILE: include/linux/cpufreq.h:47:
+        unsigned int            policy; /* see above */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: include/linux/cpufreq.h:47:
+        unsigned int            policy; /* see above */$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#96: FILE: include/linux/cpufreq.h:55:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#108: FILE: include/linux/cpufreq.h:67:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#123: FILE: include/linux/cpufreq.h:81:
+static inline unsigned long cpufreq_scale(unsigned long old, u_int div, u_=
                                                                           ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#125: FILE: include/linux/cpufreq.h:82:
+static inline unsigned long cpufreq_scale(unsigned long old, u_int div, u_=
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: spaces required around that '/=' (ctx:WxV)
#128: FILE: include/linux/cpufreq.h:85:
+	mult /=3D 100;
 	     ^

ERROR:SPACING: spaces required around that '/=' (ctx:WxV)
#129: FILE: include/linux/cpufreq.h:86:
+	div  /=3D 100;
 	     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#130: FILE: include/linux/cpufreq.h:87:
+        val   =3D (old / div) * mult;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: include/linux/cpufreq.h:87:
+        val   =3D (old / div) * mult;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#130: FILE: include/linux/cpufreq.h:87:
+        val   =3D (old / div) * mult;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#130: FILE: include/linux/cpufreq.h:87:
+        val   =3D (old / div) * mult;
               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#131: FILE: include/linux/cpufreq.h:88:
+        carry =3D old % div;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: include/linux/cpufreq.h:88:
+        carry =3D old % div;$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#131: FILE: include/linux/cpufreq.h:88:
+        carry =3D old % div;
               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#132: FILE: include/linux/cpufreq.h:89:
+	carry =3D carry * mult / div;
 	      ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#137: FILE: include/linux/cpufreq.h:94:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#145: FILE: include/linux/cpufreq.h:102:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#170: FILE: include/linux/cpufreq.h:127:
+void cpufreq_notify_transition(struct cpufreq_freqs *freqs, unsigned int s=
                                                                           ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#173: FILE: include/linux/cpufreq.h:129:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#174: FILE: include/linux/cpufreq.h:130:
+static inline void cpufreq_verify_within_limits(struct cpufreq_policy *pol=
                                                                           ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#176: FILE: include/linux/cpufreq.h:131:
+static inline void cpufreq_verify_within_limits(struct cpufreq_policy *pol=
+{

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#178: FILE: include/linux/cpufreq.h:133:
+		policy->min =3D min;
 		            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#180: FILE: include/linux/cpufreq.h:135:
+		policy->max =3D min;
 		            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#182: FILE: include/linux/cpufreq.h:137:
+		policy->min =3D max;
 		            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#184: FILE: include/linux/cpufreq.h:139:
+		policy->max =3D max;
 		            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#186: FILE: include/linux/cpufreq.h:141:
+		policy->min =3D policy->max;
 		            ^

WARNING:RETURN_VOID: void function return statements are not generally useful
#188: FILE: include/linux/cpufreq.h:143:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#202: FILE: include/linux/cpufreq.h:157:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#229: FILE: kernel/cpufreq.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#230: FILE: kernel/cpufreq.c:2:
+ *  linux/kernel/cpufreq.c

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#235: FILE: kernel/cpufreq.c:7:
+ *  $Id: cpufreq.c,v 1.42 2002/09/07 21:42:07 db Exp $

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#253: FILE: kernel/cpufreq.c:25:
+#include <asm/uaccess.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#259: FILE: kernel/cpufreq.c:31:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#266: FILE: kernel/cpufreq.c:38:
+static struct cpufreq_driver   ^I*cpufreq_driver;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#267: FILE: kernel/cpufreq.c:39:
+static DECLARE_MUTEX            (cpufreq_driver_sem);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#269: FILE: kernel/cpufreq.c:41:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#281: FILE: kernel/cpufreq.c:53:
+static DECLARE_MUTEX            (cpufreq_notifier_sem);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#283: FILE: kernel/cpufreq.c:55:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#288: FILE: kernel/cpufreq.c:60:
+static struct cpufreq_policy default_policy =3D {
                                             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#289: FILE: kernel/cpufreq.c:61:
+	.cpu    =3D CPUFREQ_ALL_CPUS,
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#290: FILE: kernel/cpufreq.c:62:
+	.min    =3D 0,
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#291: FILE: kernel/cpufreq.c:63:
+	.max    =3D 0,
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#292: FILE: kernel/cpufreq.c:64:
+	.policy =3D 0,
 	        ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#295: FILE: kernel/cpufreq.c:67:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#311: FILE: kernel/cpufreq.c:83:
+static int cpufreq_parse_policy(char input_string[42], struct cpufreq_poli=
                                                                           ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#313: FILE: kernel/cpufreq.c:84:
+static int cpufreq_parse_policy(char input_string[42], struct cpufreq_poli=
+{

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#314: FILE: kernel/cpufreq.c:85:
+	unsigned int            min =3D 0;
 	                            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#315: FILE: kernel/cpufreq.c:86:
+	unsigned int            max =3D 0;
 	                            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#316: FILE: kernel/cpufreq.c:87:
+	unsigned int            cpu =3D 0;
 	                            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#317: FILE: kernel/cpufreq.c:88:
+	char			policy_string[42] =3D {'\0'};
 	    			                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#319: FILE: kernel/cpufreq.c:90:
+	unsigned int            result =3D -EFAULT;
 	                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#319: FILE: kernel/cpufreq.c:90:
+	unsigned int            result =3D -EFAULT;
 	                                   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#320: FILE: kernel/cpufreq.c:91:
+	unsigned int            i =3D 0;
 	                          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#325: FILE: kernel/cpufreq.c:96:
+	policy->min =3D 0;
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#326: FILE: kernel/cpufreq.c:97:
+	policy->max =3D 0;
 	            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#327: FILE: kernel/cpufreq.c:98:
+	policy->policy =3D 0;
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#328: FILE: kernel/cpufreq.c:99:
+	policy->cpu =3D CPUFREQ_ALL_CPUS;
 	            ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#330: FILE: kernel/cpufreq.c:101:
+	if (sscanf(input_string, "%d:%d:%d:%s", &cpu, &min, &max, policy_string) =
=3D=3D 4)=20
+	{

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#330: FILE: kernel/cpufreq.c:101:
+	if (sscanf(input_string, "%d:%d:%d:%s", &cpu, &min, &max, policy_string) =

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#330: FILE: kernel/cpufreq.c:101:
+	if (sscanf(input_string, "%d:%d:%d:%s", &cpu, &min, &max, policy_string) =
=3D=3D 4)=20

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:NAKED_SSCANF: unchecked sscanf return value
#330: FILE: kernel/cpufreq.c:101:
+	if (sscanf(input_string, "%d:%d:%d:%s", &cpu, &min, &max, policy_string) =
=3D=3D 4)=20
+	{
+		policy->min =3D min;
+		policy->max =3D max;
+		policy->cpu =3D cpu;
+		result =3D 0;
+		goto scan_policy;
+	}

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#332: FILE: kernel/cpufreq.c:102:
+	if (sscanf(input_string, "%d:%d:%d:%s", &cpu, &min, &max, policy_string) =
+	{

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#333: FILE: kernel/cpufreq.c:103:
+		policy->min =3D min;
 		            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#334: FILE: kernel/cpufreq.c:104:
+		policy->max =3D max;
 		            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#335: FILE: kernel/cpufreq.c:105:
+		policy->cpu =3D cpu;
 		            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#336: FILE: kernel/cpufreq.c:106:
+		result =3D 0;
 		       ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#339: FILE: kernel/cpufreq.c:109:
+	if (sscanf(input_string, "%d%%%d%%%d%%%s", &cpu, &min, &max, policy_strin=
g) =3D=3D 4)
+	{

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#339: FILE: kernel/cpufreq.c:109:
+	if (sscanf(input_string, "%d%%%d%%%d%%%s", &cpu, &min, &max, policy_strin=
 	                                                                         ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#339: FILE: kernel/cpufreq.c:109:
+	if (sscanf(input_string, "%d%%%d%%%d%%%s", &cpu, &min, &max, policy_strin=

WARNING:NAKED_SSCANF: unchecked sscanf return value
#339: FILE: kernel/cpufreq.c:109:
+	if (sscanf(input_string, "%d%%%d%%%d%%%s", &cpu, &min, &max, policy_strin=
g) =3D=3D 4)
+	{
+		if (!cpufreq_get_policy(&current_policy, cpu)) {
+			policy->min =3D (min * current_policy.max_cpu_freq) / 100;
+			policy->max =3D (max * current_policy.max_cpu_freq) / 100;
+			policy->cpu =3D cpu;
+			result =3D 0;
+			goto scan_policy;
+		}
+	}

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#341: FILE: kernel/cpufreq.c:110:
+	if (sscanf(input_string, "%d%%%d%%%d%%%s", &cpu, &min, &max, policy_strin=
+	{

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#343: FILE: kernel/cpufreq.c:112:
+			policy->min =3D (min * current_policy.max_cpu_freq) / 100;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#343: FILE: kernel/cpufreq.c:112:
+			policy->min =3D (min * current_policy.max_cpu_freq) / 100;
 			            ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#344: FILE: kernel/cpufreq.c:113:
+			policy->max =3D (max * current_policy.max_cpu_freq) / 100;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#344: FILE: kernel/cpufreq.c:113:
+			policy->max =3D (max * current_policy.max_cpu_freq) / 100;
 			            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#345: FILE: kernel/cpufreq.c:114:
+			policy->cpu =3D cpu;
 			            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#346: FILE: kernel/cpufreq.c:115:
+			result =3D 0;
 			       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#351: FILE: kernel/cpufreq.c:120:
+	if (sscanf(input_string, "%d:%d:%s", &min, &max, policy_string) =3D=3D 3)=
 	                                                                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#351: FILE: kernel/cpufreq.c:120:
+	if (sscanf(input_string, "%d:%d:%s", &min, &max, policy_string) =3D=3D 3)=
 	                                                                   ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#351: FILE: kernel/cpufreq.c:120:
+	if (sscanf(input_string, "%d:%d:%s", &min, &max, policy_string) =3D=3D 3)=
 	                                                                         ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#351: FILE: kernel/cpufreq.c:120:
+	if (sscanf(input_string, "%d:%d:%s", &min, &max, policy_string) =3D=3D 3)=

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#351: FILE: kernel/cpufreq.c:120:
+	if (sscanf(input_string, "%d:%d:%s", &min, &max, policy_string) =3D=3D 3)=

WARNING:NAKED_SSCANF: unchecked sscanf return value
#351: FILE: kernel/cpufreq.c:120:
+	if (sscanf(input_string, "%d:%d:%s", &min, &max, policy_string) =3D=3D 3)=
=20
+	{
+		policy->min =3D min;
+		policy->max =3D max;
+		result =3D 0;
+		goto scan_policy;
+	}

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#353: FILE: kernel/cpufreq.c:121:
+	if (sscanf(input_string, "%d:%d:%s", &min, &max, policy_string) =3D=3D 3)=
+	{

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#354: FILE: kernel/cpufreq.c:122:
+		policy->min =3D min;
 		            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#355: FILE: kernel/cpufreq.c:123:
+		policy->max =3D max;
 		            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#356: FILE: kernel/cpufreq.c:124:
+		result =3D 0;
 		       ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#360: FILE: kernel/cpufreq.c:128:
+	if (sscanf(input_string, "%d%%%d%%%s", &min, &max, policy_string) =3D=3D =
3)
+	{

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#360: FILE: kernel/cpufreq.c:128:
+	if (sscanf(input_string, "%d%%%d%%%s", &min, &max, policy_string) =3D=3D =
 	                                                                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#360: FILE: kernel/cpufreq.c:128:
+	if (sscanf(input_string, "%d%%%d%%%s", &min, &max, policy_string) =3D=3D =
 	                                                                     ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#360: FILE: kernel/cpufreq.c:128:
+	if (sscanf(input_string, "%d%%%d%%%s", &min, &max, policy_string) =3D=3D =

WARNING:NAKED_SSCANF: unchecked sscanf return value
#360: FILE: kernel/cpufreq.c:128:
+	if (sscanf(input_string, "%d%%%d%%%s", &min, &max, policy_string) =3D=3D =
3)
+	{
+		if (!cpufreq_get_policy(&current_policy, cpu)) {
+			policy->min =3D (min * current_policy.max_cpu_freq) / 100;
+			policy->max =3D (max * current_policy.max_cpu_freq) / 100;
+			result =3D 0;
+			goto scan_policy;
+		}
+	}

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#362: FILE: kernel/cpufreq.c:129:
+	if (sscanf(input_string, "%d%%%d%%%s", &min, &max, policy_string) =3D=3D =
+	{

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#364: FILE: kernel/cpufreq.c:131:
+			policy->min =3D (min * current_policy.max_cpu_freq) / 100;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#364: FILE: kernel/cpufreq.c:131:
+			policy->min =3D (min * current_policy.max_cpu_freq) / 100;
 			            ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#365: FILE: kernel/cpufreq.c:132:
+			policy->max =3D (max * current_policy.max_cpu_freq) / 100;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#365: FILE: kernel/cpufreq.c:132:
+			policy->max =3D (max * current_policy.max_cpu_freq) / 100;
 			            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#366: FILE: kernel/cpufreq.c:133:
+			result =3D 0;
 			       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#375: FILE: kernel/cpufreq.c:142:
+	for (i=3D0;i<sizeof(policy_string);i++){
 	      ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#375: FILE: kernel/cpufreq.c:142:
+	for (i=3D0;i<sizeof(policy_string);i++){
 	          ^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#375: FILE: kernel/cpufreq.c:142:
+	for (i=3D0;i<sizeof(policy_string);i++){
 	            ^

ERROR:SPACING: space required after that ';' (ctx:VxV)
#375: FILE: kernel/cpufreq.c:142:
+	for (i=3D0;i<sizeof(policy_string);i++){
 	                                  ^

ERROR:SPACING: space required before the open brace '{'
#375: FILE: kernel/cpufreq.c:142:
+	for (i=3D0;i<sizeof(policy_string);i++){

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#376: FILE: kernel/cpufreq.c:143:
+		if (policy_string[i]=3D=3D'\0')
 		                    ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#376: FILE: kernel/cpufreq.c:143:
+		if (policy_string[i]=3D=3D'\0')
 		                       ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#376: FILE: kernel/cpufreq.c:143:
+		if (policy_string[i]=3D=3D'\0')

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#378: FILE: kernel/cpufreq.c:145:
+		policy_string[i] =3D tolower(policy_string[i]);
 		                 ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#381: FILE: kernel/cpufreq.c:148:
+	if (!strncmp(policy_string, "powersave", 6) || =20
+            !strncmp(policy_string, "eco", 3) ||      =20
+	    !strncmp(policy_string, "batter", 6) ||
+	    !strncmp(policy_string, "low", 3))=20
+	{

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#381: FILE: kernel/cpufreq.c:148:
+	if (!strncmp(policy_string, "powersave", 6) || =20
 	                                               ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#381: FILE: kernel/cpufreq.c:148:
+	if (!strncmp(policy_string, "powersave", 6) || =20

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#381: FILE: kernel/cpufreq.c:148:
+	if (!strncmp(policy_string, "powersave", 6) || =20
[...]
+	    !strncmp(policy_string, "low", 3))=20

ERROR:CODE_INDENT: code indent should use tabs where possible
#382: FILE: kernel/cpufreq.c:149:
+            !strncmp(policy_string, "eco", 3) ||      =20$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: kernel/cpufreq.c:149:
+            !strncmp(policy_string, "eco", 3) ||      =20$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#382: FILE: kernel/cpufreq.c:149:
+            !strncmp(policy_string, "eco", 3) ||      =20
                                                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#384: FILE: kernel/cpufreq.c:151:
+	    !strncmp(policy_string, "low", 3))=20
 	                                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#386: FILE: kernel/cpufreq.c:153:
+		result =3D 0;
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#387: FILE: kernel/cpufreq.c:154:
+		policy->policy =3D CPUFREQ_POLICY_POWERSAVE;
 		               ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#389: FILE: kernel/cpufreq.c:156:
+	else if (!strncmp(policy_string, "performance",6) ||
+	    !strncmp(policy_string, "high",4) ||
+	    !strncmp(policy_string, "full",4))
+	{

ERROR:SPACING: space required after that ',' (ctx:VxV)
#389: FILE: kernel/cpufreq.c:156:
+	else if (!strncmp(policy_string, "performance",6) ||
 	                                              ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#389: FILE: kernel/cpufreq.c:156:
+	}
+	else if (!strncmp(policy_string, "performance",6) ||

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#390: FILE: kernel/cpufreq.c:157:
+	else if (!strncmp(policy_string, "performance",6) ||
+	    !strncmp(policy_string, "high",4) ||

ERROR:SPACING: space required after that ',' (ctx:VxV)
#390: FILE: kernel/cpufreq.c:157:
+	    !strncmp(policy_string, "high",4) ||
 	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#391: FILE: kernel/cpufreq.c:158:
+	    !strncmp(policy_string, "full",4))
 	                                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#393: FILE: kernel/cpufreq.c:160:
+		result =3D 0;
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#394: FILE: kernel/cpufreq.c:161:
+		policy->policy =3D CPUFREQ_POLICY_PERFORMANCE;
 		               ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#396: FILE: kernel/cpufreq.c:163:
+	else if (!cpufreq_get_policy(&current_policy, policy->cpu))
+	{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#396: FILE: kernel/cpufreq.c:163:
+	}
+	else if (!cpufreq_get_policy(&current_policy, policy->cpu))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#398: FILE: kernel/cpufreq.c:165:
+		policy->policy =3D current_policy.policy;
 		               ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#400: FILE: kernel/cpufreq.c:167:
+	else
+	{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#400: FILE: kernel/cpufreq.c:167:
+	}
+	else

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#402: FILE: kernel/cpufreq.c:169:
+		policy->policy =3D 0;
 		               ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#408: FILE: kernel/cpufreq.c:175:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#417: FILE: kernel/cpufreq.c:184:
+	default_policy.cpu =3D CPUFREQ_ALL_CPUS;
 	                   ^

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#420: FILE: kernel/cpufreq.c:187:
+__setup("cpufreq=3D", cpufreq_setup);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#422: FILE: kernel/cpufreq.c:189:
+
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#431: FILE: kernel/cpufreq.c:198:
+static int cpufreq_proc_read (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#431: FILE: kernel/cpufreq.c:198:
+static int cpufreq_proc_read (

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#435: FILE: kernel/cpufreq.c:202:
+^Iint ^I^I^Icount,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#436: FILE: kernel/cpufreq.c:203:
+^Iint ^I^I^I*eof,$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#439: FILE: kernel/cpufreq.c:206:
+	char			*p =3D page;
 	    			   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#440: FILE: kernel/cpufreq.c:207:
+	int			len =3D 0;
 	   			    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#442: FILE: kernel/cpufreq.c:209:
+	unsigned int            min_pctg =3D 0;
 	                                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#443: FILE: kernel/cpufreq.c:210:
+	unsigned int            max_pctg =3D 0;
 	                                 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#444: FILE: kernel/cpufreq.c:211:
+	unsigned int            i =3D 0;
 	                          ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#446: FILE: kernel/cpufreq.c:213:
+	if (off !=3D 0)
 	        ^

ERROR:SPACING: spaces required around that '+=' (ctx:WxV)
#449: FILE: kernel/cpufreq.c:216:
+	p +=3D sprintf(p, "          minimum CPU frequency  -  maximum CPU freque=
 	  ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#459: FILE: kernel/cpufreq.c:225:
+		p +=3D sprintf(p, "CPU%3d    %9d kHz (%3d %%)  -  %9d kHz (%3d %%)  -  ",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#459: FILE: kernel/cpufreq.c:225:
+		p +=3D sprintf(p, "CPU%3d    %9d kHz (%3d %%)  -  %9d kHz (%3d %%)  -  ",

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#459: FILE: kernel/cpufreq.c:225:
+		p +=3D sprintf(p, "CPU%3d    %9d kHz (%3d %%)  -  %9d kHz (%3d %%)  -  ",
 		                      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#459: FILE: kernel/cpufreq.c:225:
+		p +=3D sprintf(p, "CPU%3d    %9d kHz (%3d %%)  -  %9d kHz (%3d %%)  -  ",
 		                             ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#459: FILE: kernel/cpufreq.c:225:
+		p +=3D sprintf(p, "CPU%3d    %9d kHz (%3d %%)  -  %9d kHz (%3d %%)  -  ",
 		                                      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxO)
#459: FILE: kernel/cpufreq.c:225:
+		p +=3D sprintf(p, "CPU%3d    %9d kHz (%3d %%)  -  %9d kHz (%3d %%)  -  ",
 		                                          ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxB)
#459: FILE: kernel/cpufreq.c:225:
+		p +=3D sprintf(p, "CPU%3d    %9d kHz (%3d %%)  -  %9d kHz (%3d %%)  -  ",
 		                                           ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#459: FILE: kernel/cpufreq.c:225:
+		p +=3D sprintf(p, "CPU%3d    %9d kHz (%3d %%)  -  %9d kHz (%3d %%)  -  ",
 		                                                  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#459: FILE: kernel/cpufreq.c:225:
+		p +=3D sprintf(p, "CPU%3d    %9d kHz (%3d %%)  -  %9d kHz (%3d %%)  -  ",
 		                                                           ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxO)
#459: FILE: kernel/cpufreq.c:225:
+		p +=3D sprintf(p, "CPU%3d    %9d kHz (%3d %%)  -  %9d kHz (%3d %%)  -  ",
 		                                                               ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxB)
#459: FILE: kernel/cpufreq.c:225:
+		p +=3D sprintf(p, "CPU%3d    %9d kHz (%3d %%)  -  %9d kHz (%3d %%)  -  ",
 		                                                                ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#487: FILE: kernel/cpufreq.c:253:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: kernel/cpufreq.c:255:
+ * cpufreq_proc_write - handles writing into /proc/cpufreq$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#490: FILE: kernel/cpufreq.c:256:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#491: FILE: kernel/cpufreq.c:257:
+ * This function calls the parsing script and then sets the policy$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#492: FILE: kernel/cpufreq.c:258:
+ * accordingly.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#493: FILE: kernel/cpufreq.c:259:
+ */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#495: FILE: kernel/cpufreq.c:261:
+        struct file^I^I*file,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#495: FILE: kernel/cpufreq.c:261:
+        struct file^I^I*file,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#496: FILE: kernel/cpufreq.c:262:
+        const char^I^I*buffer,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#496: FILE: kernel/cpufreq.c:262:
+        const char^I^I*buffer,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#497: FILE: kernel/cpufreq.c:263:
+        unsigned long^I^Icount,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#497: FILE: kernel/cpufreq.c:263:
+        unsigned long^I^Icount,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#498: FILE: kernel/cpufreq.c:264:
+        void^I^I^I*data)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#498: FILE: kernel/cpufreq.c:264:
+        void^I^I^I*data)$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#504: FILE: kernel/cpufreq.c:270:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#522: FILE: kernel/cpufreq.c:288:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#524: FILE: kernel/cpufreq.c:290:
+ * cpufreq_proc_init - add "cpufreq" to the /proc root directory$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#525: FILE: kernel/cpufreq.c:291:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#526: FILE: kernel/cpufreq.c:292:
+ * This function adds "cpufreq" to the /proc root directory.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#527: FILE: kernel/cpufreq.c:293:
+ */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#532: FILE: kernel/cpufreq.c:298:
+        /* are these acceptable values? */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#532: FILE: kernel/cpufreq.c:298:
+        /* are these acceptable values? */$

CHECK:SPACING: spaces preferred around that '/' (ctx:WxV)
#537: FILE: kernel/cpufreq.c:303:
+		printk(KERN_ERR "unable to create /proc/cpufreq entry\n");
 		                                  ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#537: FILE: kernel/cpufreq.c:303:
+		printk(KERN_ERR "unable to create /proc/cpufreq entry\n");
 		                                       ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#547: FILE: kernel/cpufreq.c:313:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#549: FILE: kernel/cpufreq.c:315:
+ * cpufreq_proc_exit - removes "cpufreq" from the /proc root directory.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#550: FILE: kernel/cpufreq.c:316:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#551: FILE: kernel/cpufreq.c:317:
+ * This function removes "cpufreq" from the /proc root directory.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#552: FILE: kernel/cpufreq.c:318:
+ */$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#561: FILE: kernel/cpufreq.c:327:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#564: FILE: kernel/cpufreq.c:330:
+ *                     NOTIFIER LISTS INTERFACE                      *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#565: FILE: kernel/cpufreq.c:331:
+ *********************************************************************/$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#568: FILE: kernel/cpufreq.c:334:
+ *^Icpufreq_register_notifier - register a driver with cpufreq$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#569: FILE: kernel/cpufreq.c:335:
+ *^I@nb: notifier function to register$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#570: FILE: kernel/cpufreq.c:336:
+ *      @list: CPUFREQ_TRANSITION_NOTIFIER or CPUFREQ_POLICY_NOTIFIER$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#571: FILE: kernel/cpufreq.c:337:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#572: FILE: kernel/cpufreq.c:338:
+ *^IAdd a driver to one of two lists: either a list of drivers that=20$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#573: FILE: kernel/cpufreq.c:339:
+ *      are notified about clock rate changes (once before and once after$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#574: FILE: kernel/cpufreq.c:340:
+ *      the transition), or a list of drivers that are notified about$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#575: FILE: kernel/cpufreq.c:341:
+ *      changes in cpufreq policy.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#576: FILE: kernel/cpufreq.c:342:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#577: FILE: kernel/cpufreq.c:343:
+ *^IThis function may sleep, and has the same return conditions as$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#578: FILE: kernel/cpufreq.c:344:
+ *^Inotifier_chain_register.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#579: FILE: kernel/cpufreq.c:345:
+ */$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#601: FILE: kernel/cpufreq.c:367:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#603: FILE: kernel/cpufreq.c:369:
+ *^Icpufreq_unregister_notifier - unregister a driver with cpufreq$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#604: FILE: kernel/cpufreq.c:370:
+ *^I@nb: notifier block to be unregistered$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#605: FILE: kernel/cpufreq.c:371:
+ *      @list: CPUFREQ_TRANSITION_NOTIFIER or CPUFREQ_POLICY_NOTIFIER$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#606: FILE: kernel/cpufreq.c:372:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#607: FILE: kernel/cpufreq.c:373:
+ *^IRemove a driver from the CPU frequency notifier list.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#608: FILE: kernel/cpufreq.c:374:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#609: FILE: kernel/cpufreq.c:375:
+ *^IThis function may sleep, and has the same return conditions as$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#610: FILE: kernel/cpufreq.c:376:
+ *^Inotifier_chain_unregister.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#611: FILE: kernel/cpufreq.c:377:
+ */$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#634: FILE: kernel/cpufreq.c:399:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#637: FILE: kernel/cpufreq.c:402:
+ *                          POLICY INTERFACE                         *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#638: FILE: kernel/cpufreq.c:403:
+ *********************************************************************/$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#641: FILE: kernel/cpufreq.c:406:
+ * cpufreq_get_policy - get the current cpufreq_policy$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#642: FILE: kernel/cpufreq.c:407:
+ * @policy: struct cpufreq_policy into which the current cpufreq_policy is=$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#644: FILE: kernel/cpufreq.c:409:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#645: FILE: kernel/cpufreq.c:410:
+ * Reads the current cpufreq policy.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#646: FILE: kernel/cpufreq.c:411:
+ */$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#667: FILE: kernel/cpufreq.c:432:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#669: FILE: kernel/cpufreq.c:434:
+ *^Icpufreq_set_policy - set a new CPUFreq policy$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#670: FILE: kernel/cpufreq.c:435:
+ *^I@policy: policy to be set.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#671: FILE: kernel/cpufreq.c:436:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#672: FILE: kernel/cpufreq.c:437:
+ *^ISets a new CPU frequency and voltage scaling policy.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#673: FILE: kernel/cpufreq.c:438:
+ */$

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#693: FILE: kernel/cpufreq.c:458:
+	/* adjust if neccessary - all reasons */
 	             ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#697: FILE: kernel/cpufreq.c:462:
+	/* adjust if neccessary - hardware incompatibility*/
 	             ^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#702: FILE: kernel/cpufreq.c:467:
+	   which might be different to the first one */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#731: FILE: kernel/cpufreq.c:496:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#734: FILE: kernel/cpufreq.c:499:
+ *                    DYNAMIC CPUFREQ SWITCHING                      *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#735: FILE: kernel/cpufreq.c:500:
+ *********************************************************************/$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#740: FILE: kernel/cpufreq.c:505:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#743: FILE: kernel/cpufreq.c:508:
+ *            EXTERNALLY AFFECTING FREQUENCY CHANGES                 *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#744: FILE: kernel/cpufreq.c:509:
+ *********************************************************************/$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#747: FILE: kernel/cpufreq.c:512:
+ * adjust_jiffies - adjust the system "loops_per_jiffy"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#748: FILE: kernel/cpufreq.c:513:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#749: FILE: kernel/cpufreq.c:514:
+ * This function alters the system "loops_per_jiffy" for the clock$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#750: FILE: kernel/cpufreq.c:515:
+ * speed change. Note that loops_per_jiffy is only updated if all$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#751: FILE: kernel/cpufreq.c:516:
+ * CPUs are affected - else there is a need for per-CPU loops_per_jiffy$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#752: FILE: kernel/cpufreq.c:517:
+ * values which are provided by various architectures.=20$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#753: FILE: kernel/cpufreq.c:518:
+ */$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#763: FILE: kernel/cpufreq.c:527:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#765: FILE: kernel/cpufreq.c:529:
+ * cpufreq_notify_transition - call notifier chain and adjust_jiffies on f=$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#767: FILE: kernel/cpufreq.c:530:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#768: FILE: kernel/cpufreq.c:531:
+ * This function calls the transition notifiers and the "adjust_jiffies" f=$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#770: FILE: kernel/cpufreq.c:532:
+ * twice on all CPU frequency changes that have external effects.=20$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#771: FILE: kernel/cpufreq.c:533:
+ */$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#792: FILE: kernel/cpufreq.c:551:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#795: FILE: kernel/cpufreq.c:554:
+ *               REGISTER / UNREGISTER CPUFREQ DRIVER                *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#796: FILE: kernel/cpufreq.c:555:
+ *********************************************************************/$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#799: FILE: kernel/cpufreq.c:558:
+ * cpufreq_register - register a CPU Frequency driver$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#800: FILE: kernel/cpufreq.c:559:
+ * @driver_data: A struct cpufreq_driver containing the values submitted b=$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#802: FILE: kernel/cpufreq.c:560:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#803: FILE: kernel/cpufreq.c:561:
+ *   Registers a CPU Frequency driver to this core code. This code=20$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#804: FILE: kernel/cpufreq.c:562:
+ * returns zero on success, -EBUSY when another driver got here first$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#805: FILE: kernel/cpufreq.c:563:
+ * (and isn't unregistered in the meantime).=20$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#806: FILE: kernel/cpufreq.c:564:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#807: FILE: kernel/cpufreq.c:565:
+ */$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#848: FILE: kernel/cpufreq.c:606:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#850: FILE: kernel/cpufreq.c:608:
+ * cpufreq_unregister - unregister the current CPUFreq driver$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#851: FILE: kernel/cpufreq.c:609:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#852: FILE: kernel/cpufreq.c:610:
+ *    Unregister the current CPUFreq driver. Only call this if you have=20$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#853: FILE: kernel/cpufreq.c:611:
+ * the right to do so, i.e. if you have succeeded in initialising before!$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#854: FILE: kernel/cpufreq.c:612:
+ * Returns zero if successful, and -EINVAL if the cpufreq_driver is$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#855: FILE: kernel/cpufreq.c:613:
+ * currently not initialised.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#856: FILE: kernel/cpufreq.c:614:
+ */$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#878: FILE: kernel/cpufreq.c:636:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#881: FILE: kernel/cpufreq.c:639:
+ *^Icpufreq_restore - restore the CPU clock frequency after resume$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#882: FILE: kernel/cpufreq.c:640:
+ *$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#883: FILE: kernel/cpufreq.c:641:
+ *^IRestore the CPU clock frequency so that our idea of the current$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#884: FILE: kernel/cpufreq.c:642:
+ *^Ifrequency reflects the actual hardware.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#885: FILE: kernel/cpufreq.c:643:
+ */$

ERROR:SPACING: space required before that '!' (ctx:VxV)
#892: FILE: kernel/cpufreq.c:650:
+		panic("cpufreq_restore() called from interrupt context!");
 		                                                      ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000432122.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 116 errors, 125 warnings, 43 checks, 874 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000432122.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
