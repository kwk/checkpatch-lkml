WARNING:TYPO_SPELLING: 'shrinked' may be misspelled - perhaps 'shrunk'?
#48: 
> > > > So, why is these slab cache are not getting purged/shrinked even
                                                           ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'unsed' may be misspelled - perhaps 'unused'?
#63: 
> unsed dentries. That is where we need to look. Will dig a bit
  ^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#66: 
Here's my really old patch where I saw some improvement for this scenario...

WARNING:PATCH_PREFIX: patch prefix 'fs' exists, appears to be a -p0 patch

ERROR:SPACING: space prohibited before that close parenthesis ')'
#96: FILE: dcache.c:68:
+#define RB_CLEAR(node)	((node)->rb_color = RB_NONE )

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#103: FILE: dcache.c:75:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#105: FILE: dcache.c:77:
+static void drb_delete(struct dentry* dentry)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#113: FILE: dcache.c:85:
+		BUG_ON(1);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#117: FILE: dcache.c:89:
+static  $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#118: FILE: dcache.c:90:
+struct dentry * drb_insert(struct dentry * dentry)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#118: FILE: dcache.c:90:
+struct dentry * drb_insert(struct dentry * dentry)

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#120: FILE: dcache.c:92:
+	struct rb_node ** p = &dentry_tree.rb_node;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#121: FILE: dcache.c:93:
+	struct rb_node * parent = NULL;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#122: FILE: dcache.c:94:
+	struct rb_node * node    = &dentry->d_rb;

ERROR:POINTER_LOCATION: "foo  * bar" should be "foo  *bar"
#123: FILE: dcache.c:95:
+	struct dentry  * cur    = NULL;

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#127: FILE: dcache.c:99:
+	while (*p)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#132: FILE: dcache.c:104:
+		if (dentry < cur)
[...]
+		else if (dentry > cur)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#136: FILE: dcache.c:108:
+		else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#142: FILE: dcache.c:114:
+^Irb_insert_color(node,&dentry_tree); $

ERROR:SPACING: space required after that ',' (ctx:VxO)
#142: FILE: dcache.c:114:
+	rb_insert_color(node,&dentry_tree); 
 	                    ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#142: FILE: dcache.c:114:
+	rb_insert_color(node,&dentry_tree); 
 	                     ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#146: FILE: dcache.c:118:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#199: FILE: dcache.c:476:
+static void prune_dcache(unsigned  requested)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#206: FILE: dcache.c:483:
+	unsigned found = 0;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#207: FILE: dcache.c:484:
+	unsigned count;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#208: FILE: dcache.c:485:
+	struct rb_node * next;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#216: FILE: dcache.c:493:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#217: FILE: dcache.c:494:
+       ^Icur = dentry_unused.prev;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#217: FILE: dcache.c:494:
+       ^Icur = dentry_unused.prev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: dcache.c:494:
+       ^Icur = dentry_unused.prev;$

WARNING:TYPO_SPELLING: 'entrys' may be misspelled - perhaps 'entries'?
#219: FILE: dcache.c:496:
+	/* grab NUM_LRU_PTRS entrys off the end of lru list */
 	                     ^^^^^^

ERROR:SPACING: space required before the open brace '{'
#221: FILE: dcache.c:498:
+	for (i = 0 ; i < NUM_LRU_PTRS ; i++ ){

ERROR:SPACING: space prohibited before that close parenthesis ')'
#221: FILE: dcache.c:498:
+	for (i = 0 ; i < NUM_LRU_PTRS ; i++ ){

ERROR:SPACING: space prohibited after that open parenthesis '('
#222: FILE: dcache.c:499:
+		if ( cur == &dentry_unused ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#222: FILE: dcache.c:499:
+		if ( cur == &dentry_unused ) {

WARNING:TYPO_SPELLING: 'entrys' may be misspelled - perhaps 'entries'?
#223: FILE: dcache.c:500:
+			/* if there aren't NUM_LRU_PTRS entrys, we probably
 			                                ^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#224: FILE: dcache.c:501:
+			/* if there aren't NUM_LRU_PTRS entrys, we probably
+			   can't even free a page now, give up */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#224: FILE: dcache.c:501:
+			   can't even free a page now, give up */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#228: FILE: dcache.c:505:
+^I^Ilru_ptrs[i] = &(list_entry(cur,struct dentry, d_lru)->d_rb); $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#228: FILE: dcache.c:505:
+		lru_ptrs[i] = &(list_entry(cur,struct dentry, d_lru)->d_rb); 
 		                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#231: FILE: dcache.c:508:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#233: FILE: dcache.c:510:
+^I$

WARNING:TYPO_SPELLING: 'abitrary' may be misspelled - perhaps 'arbitrary'?
#235: FILE: dcache.c:512:
+		count = 4 * PAGE_SIZE / sizeof(struct dentry) ; /* abitrary heuristic */
 		                                                   ^^^^^^^^

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#238: FILE: dcache.c:515:
+			if( ! next ) {
 			    ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#238: FILE: dcache.c:515:
+			if( ! next ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#238: FILE: dcache.c:515:
+			if( ! next ) {

ERROR:SPACING: space required before the open parenthesis '('
#238: FILE: dcache.c:515:
+			if( ! next ) {

ERROR:SPACING: space prohibited after that '!' (ctx:WxW)
#245: FILE: dcache.c:522:
+			if( ! list_empty( &dentry->d_lru) ) {
 			    ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#245: FILE: dcache.c:522:
+			if( ! list_empty( &dentry->d_lru) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#245: FILE: dcache.c:522:
+			if( ! list_empty( &dentry->d_lru) ) {

ERROR:SPACING: space required before the open parenthesis '('
#245: FILE: dcache.c:522:
+			if( ! list_empty( &dentry->d_lru) ) {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#250: FILE: dcache.c:527:
+^I^I^I^I//removed++; ^I/* ------ debug --------- */$

ERROR:SPACING: space prohibited after that open parenthesis '('
#259: FILE: dcache.c:536:
+	} while ( (found < requested / 2) && (i < NUM_LRU_PTRS ) );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#259: FILE: dcache.c:536:
+	} while ( (found < requested / 2) && (i < NUM_LRU_PTRS ) );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#263: FILE: dcache.c:540:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#265: FILE: dcache.c:542:
+^I//mod++;^I$

WARNING:PATCH_PREFIX: patch prefix 'include' exists, appears to be a -p0 patch

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000200586.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 36 errors, 18 warnings, 3 checks, 228 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000200586.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
