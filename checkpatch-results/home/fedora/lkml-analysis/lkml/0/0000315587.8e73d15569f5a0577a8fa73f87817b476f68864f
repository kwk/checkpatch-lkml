ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#38: 
--- a/drivers/i2c/chips/Kconfig	Tue Dec 30 12:33:21 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#72: FILE: drivers/i2c/chips/lm83.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#97: FILE: drivers/i2c/chips/lm83.c:26:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#98: FILE: drivers/i2c/chips/lm83.c:27:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: drivers/i2c/chips/lm83.c:44:
+    0x4c, 0x4e, I2C_CLIENT_END };$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#156: FILE: drivers/i2c/chips/lm83.c:85:
+#define TEMP_FROM_REG(val)	((val > 127 ? val-256 : val) * 1000)
                           	                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#156: FILE: drivers/i2c/chips/lm83.c:85:
+#define TEMP_FROM_REG(val)	((val > 127 ? val-256 : val) * 1000)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'val' may be better as '(val)' to avoid precedence issues
#156: FILE: drivers/i2c/chips/lm83.c:85:
+#define TEMP_FROM_REG(val)	((val > 127 ? val-256 : val) * 1000)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#157: FILE: drivers/i2c/chips/lm83.c:86:
+#define TEMP_TO_REG(val)	((val < 0 ? val+256 : val) / 1000)
                         	               ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#157: FILE: drivers/i2c/chips/lm83.c:86:
+#define TEMP_TO_REG(val)	((val < 0 ? val+256 : val) / 1000)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'val' may be better as '(val)' to avoid precedence issues
#157: FILE: drivers/i2c/chips/lm83.c:86:
+#define TEMP_TO_REG(val)	((val < 0 ? val+256 : val) / 1000)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#189: FILE: drivers/i2c/chips/lm83.c:118:
+static int lm83_detect(struct i2c_adapter *adapter, int address,
+    int kind);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: drivers/i2c/chips/lm83.c:118:
+    int kind);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#197: FILE: drivers/i2c/chips/lm83.c:126:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: drivers/i2c/chips/lm83.c:126:
+ $

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#212: FILE: drivers/i2c/chips/lm83.c:141:
+struct lm83_data
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#228: FILE: drivers/i2c/chips/lm83.c:157:
+static int lm83_id = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'value' may be better as '(value)' to avoid precedence issues
#234: FILE: drivers/i2c/chips/lm83.c:163:
+#define show_temp(suffix, value) \
+static ssize_t show_temp_##suffix(struct device *dev, char *buf) \
+{ \
+	struct i2c_client *client = to_i2c_client(dev); \
+	struct lm83_data *data = i2c_get_clientdata(client); \
+	lm83_update_client(client); \
+	return sprintf(buf, "%d\n", TEMP_FROM_REG(data->value)); \
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#242: FILE: drivers/i2c/chips/lm83.c:171:
+}
+show_temp(input1, temp_input[0]);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'value' - possible side-effects?
#252: FILE: drivers/i2c/chips/lm83.c:181:
+#define set_temp(suffix, value, reg) \
+static ssize_t set_temp_##suffix(struct device *dev, const char *buf, \
+	size_t count) \
+{ \
+	struct i2c_client *client = to_i2c_client(dev); \
+	struct lm83_data *data = i2c_get_clientdata(client); \
+	data->value = TEMP_TO_REG(simple_strtoul(buf, NULL, 10)); \
+	i2c_smbus_write_byte_data(client, reg, data->value); \
+	return count; \
+}

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'value' may be better as '(value)' to avoid precedence issues
#252: FILE: drivers/i2c/chips/lm83.c:181:
+#define set_temp(suffix, value, reg) \
+static ssize_t set_temp_##suffix(struct device *dev, const char *buf, \
+	size_t count) \
+{ \
+	struct i2c_client *client = to_i2c_client(dev); \
+	struct lm83_data *data = i2c_get_clientdata(client); \
+	data->value = TEMP_TO_REG(simple_strtoul(buf, NULL, 10)); \
+	i2c_smbus_write_byte_data(client, reg, data->value); \
+	return count; \
+}

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#258: FILE: drivers/i2c/chips/lm83.c:187:
+	data->value = TEMP_TO_REG(simple_strtoul(buf, NULL, 10)); \

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#262: FILE: drivers/i2c/chips/lm83.c:191:
+}
+set_temp(high1, temp_high[0], LM83_REG_W_LOCAL_HIGH);

WARNING:LINE_SPACING: Missing a blank line after declarations
#272: FILE: drivers/i2c/chips/lm83.c:201:
+	struct lm83_data *data = i2c_get_clientdata(client);
+	lm83_update_client(client);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_temp_input1' to 'temp_input1_show'
#274: FILE: drivers/i2c/chips/lm83.c:203:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#276: FILE: drivers/i2c/chips/lm83.c:205:
+static DEVICE_ATTR(temp_input1, S_IRUGO, show_temp_input1, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_temp_input2' to 'temp_input2_show'
#277: FILE: drivers/i2c/chips/lm83.c:206:
+static DEVICE_ATTR(temp_input2, S_IRUGO, show_temp_input2, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#277: FILE: drivers/i2c/chips/lm83.c:206:
+static DEVICE_ATTR(temp_input2, S_IRUGO, show_temp_input2, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_temp_input3' to 'temp_input3_show'
#278: FILE: drivers/i2c/chips/lm83.c:207:
+static DEVICE_ATTR(temp_input3, S_IRUGO, show_temp_input3, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#278: FILE: drivers/i2c/chips/lm83.c:207:
+static DEVICE_ATTR(temp_input3, S_IRUGO, show_temp_input3, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_temp_input4' to 'temp_input4_show'
#279: FILE: drivers/i2c/chips/lm83.c:208:
+static DEVICE_ATTR(temp_input4, S_IRUGO, show_temp_input4, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#279: FILE: drivers/i2c/chips/lm83.c:208:
+static DEVICE_ATTR(temp_input4, S_IRUGO, show_temp_input4, NULL);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_temp_high1' to 'temp_max1_show' 'set_temp_high1' to 'temp_max1_store'
#280: FILE: drivers/i2c/chips/lm83.c:209:
+static DEVICE_ATTR(temp_max1, S_IWUSR | S_IRUGO, show_temp_high1,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#280: FILE: drivers/i2c/chips/lm83.c:209:
+static DEVICE_ATTR(temp_max1, S_IWUSR | S_IRUGO, show_temp_high1,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: drivers/i2c/chips/lm83.c:210:
+    set_temp_high1);$

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_temp_high2' to 'temp_max2_show' 'set_temp_high2' to 'temp_max2_store'
#282: FILE: drivers/i2c/chips/lm83.c:211:
+static DEVICE_ATTR(temp_max2, S_IWUSR | S_IRUGO, show_temp_high2,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#282: FILE: drivers/i2c/chips/lm83.c:211:
+static DEVICE_ATTR(temp_max2, S_IWUSR | S_IRUGO, show_temp_high2,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: drivers/i2c/chips/lm83.c:212:
+    set_temp_high2);$

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_temp_high3' to 'temp_max3_show' 'set_temp_high3' to 'temp_max3_store'
#284: FILE: drivers/i2c/chips/lm83.c:213:
+static DEVICE_ATTR(temp_max3, S_IWUSR | S_IRUGO, show_temp_high3,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#284: FILE: drivers/i2c/chips/lm83.c:213:
+static DEVICE_ATTR(temp_max3, S_IWUSR | S_IRUGO, show_temp_high3,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: drivers/i2c/chips/lm83.c:214:
+    set_temp_high3);$

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_temp_high4' to 'temp_max4_show' 'set_temp_high4' to 'temp_max4_store'
#286: FILE: drivers/i2c/chips/lm83.c:215:
+static DEVICE_ATTR(temp_max4, S_IWUSR | S_IRUGO, show_temp_high4,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#286: FILE: drivers/i2c/chips/lm83.c:215:
+static DEVICE_ATTR(temp_max4, S_IWUSR | S_IRUGO, show_temp_high4,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#287: FILE: drivers/i2c/chips/lm83.c:216:
+    set_temp_high4);$

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_temp_crit' to 'temp_crit_show' 'set_temp_crit' to 'temp_crit_store'
#288: FILE: drivers/i2c/chips/lm83.c:217:
+static DEVICE_ATTR(temp_crit, S_IWUSR | S_IRUGO, show_temp_crit,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#288: FILE: drivers/i2c/chips/lm83.c:217:
+static DEVICE_ATTR(temp_crit, S_IWUSR | S_IRUGO, show_temp_crit,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: drivers/i2c/chips/lm83.c:218:
+    set_temp_crit);$

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_alarms' to 'alarms_show'
#290: FILE: drivers/i2c/chips/lm83.c:219:
+static DEVICE_ATTR(alarms, S_IRUGO, show_alarms, NULL);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#290: FILE: drivers/i2c/chips/lm83.c:219:
+static DEVICE_ATTR(alarms, S_IRUGO, show_alarms, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#308: FILE: drivers/i2c/chips/lm83.c:237:
+static int lm83_detect(struct i2c_adapter *adapter, int address,
+    int kind)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: drivers/i2c/chips/lm83.c:237:
+    int kind)$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#318: FILE: drivers/i2c/chips/lm83.c:247:
+	if (!(new_client = kmalloc(sizeof(struct i2c_client) +

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*new_client)...) over kmalloc(sizeof(struct i2c_client)...)
#318: FILE: drivers/i2c/chips/lm83.c:247:
+	if (!(new_client = kmalloc(sizeof(struct i2c_client) +

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#327: FILE: drivers/i2c/chips/lm83.c:256:
+	 * client data. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:SPACING: No space is necessary after a cast
#328: FILE: drivers/i2c/chips/lm83.c:257:
+	data = (struct lm83_data *) (new_client + 1);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#343: FILE: drivers/i2c/chips/lm83.c:272:
+	 * identification steps are skipped. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#352: FILE: drivers/i2c/chips/lm83.c:281:
+			dev_dbg(&client->dev,
+			    "LM83 detection failed at 0x%02x.\n", address);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#361: FILE: drivers/i2c/chips/lm83.c:290:
+		man_id = i2c_smbus_read_byte_data(new_client,
+		    LM83_REG_R_MAN_ID);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#363: FILE: drivers/i2c/chips/lm83.c:292:
+		chip_id = i2c_smbus_read_byte_data(new_client,
+		    LM83_REG_R_CHIP_ID);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#373: FILE: drivers/i2c/chips/lm83.c:302:
+			dev_info(&adapter->dev,
+			    "Unsupported chip (man_id=0x%02X, "

WARNING:SPLIT_STRING: quoted string split across lines
#374: FILE: drivers/i2c/chips/lm83.c:303:
+			    "Unsupported chip (man_id=0x%02X, "
+			    "chip_id=0x%02X).\n", man_id, chip_id);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#380: FILE: drivers/i2c/chips/lm83.c:309:
+	strlcpy(new_client->name, name, I2C_NAME_SIZE);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#386: FILE: drivers/i2c/chips/lm83.c:315:
+	if ((err = i2c_attach_client(new_client)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#418: FILE: drivers/i2c/chips/lm83.c:347:
+^I            TEMP_TO_REG(LM83_INIT_HIGH));$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#418: FILE: drivers/i2c/chips/lm83.c:347:
+		i2c_smbus_write_byte_data(client, LM83_REG_W_HIGH[nr],
+	            TEMP_TO_REG(LM83_INIT_HIGH));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#420: FILE: drivers/i2c/chips/lm83.c:349:
+	i2c_smbus_write_byte_data(client, LM83_REG_W_TCRIT,
+	    TEMP_TO_REG(LM83_INIT_CRIT));

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#427: FILE: drivers/i2c/chips/lm83.c:356:
+	if ((err = i2c_detach_client(client))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#429: FILE: drivers/i2c/chips/lm83.c:358:
+		dev_err(&client->dev,
+		    "Client deregistration failed, client not detached.\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'jiffies < data->last_updated'
#443: FILE: drivers/i2c/chips/lm83.c:372:
+	if ((jiffies - data->last_updated > HZ * 2) ||
+	    (jiffies < data->last_updated) ||
+	    !data->valid) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:JIFFIES_COMPARISON: Comparing jiffies is almost always wrong; prefer time_after, time_before and friends
#444: FILE: drivers/i2c/chips/lm83.c:373:
+	    (jiffies < data->last_updated) ||

WARNING:LINE_SPACING: Missing a blank line after declarations
#447: FILE: drivers/i2c/chips/lm83.c:376:
+		int nr;
+		dev_dbg(&client->dev, "Updating lm83 data.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#451: FILE: drivers/i2c/chips/lm83.c:380:
+			    i2c_smbus_read_byte_data(client,
+			    LM83_REG_R_TEMP[nr]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#454: FILE: drivers/i2c/chips/lm83.c:383:
+			    i2c_smbus_read_byte_data(client,
+			    LM83_REG_R_HIGH[nr]);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000315587.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 10 errors, 38 warnings, 25 checks, 443 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000315587.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
