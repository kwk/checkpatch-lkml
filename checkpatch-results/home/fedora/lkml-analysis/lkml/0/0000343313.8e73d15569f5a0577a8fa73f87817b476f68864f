WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#42: 
Unable to handle kernel NULL pointer dereference at virtual address 00000000

WARNING:TYPO_SPELLING: 'splitted' may be misspelled - perhaps 'split'?
#151: 
trivially splitted into several pieces, if needed. Some edges are not
          ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#194: FILE: drivers/net/irda/sa1100_ir.c:774:
+			printk(__FUNCTION__" More than one TX, remove 1st\n");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#194: FILE: drivers/net/irda/sa1100_ir.c:774:
+			printk(__FUNCTION__" More than one TX, remove 1st\n");

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#194: FILE: drivers/net/irda/sa1100_ir.c:774:
+			printk(__FUNCTION__" More than one TX, remove 1st\n");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#226: FILE: net/irda/iriap.c:101:
+		ERROR(__FUNCTION__ "(), Can't allocate objects hashbin!\n");

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#247: FILE: net/irda/irias_object.c:88:
+		ERROR(__FUNCTION__ "(), Unable to allocate object!\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!obj->attribs"
#255: FILE: net/irda/irias_object.c:98:
+	if (obj->attribs == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#256: FILE: net/irda/irias_object.c:99:
+		ERROR(__FUNCTION__ "(), Unable to allocate attribs!\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!self->discovery_log"
#273: FILE: net/irda/irlap.c:526:
+	if (self->discovery_log == NULL) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#274: FILE: net/irda/irlap.c:527:
+		ERROR(__FUNCTION__ "(), Unable to allocate discovery log!\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lap->lsaps"
#319: FILE: net/irda/irlmp.c:302:
+	if (lap->lsaps == NULL) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#320: FILE: net/irda/irlmp.c:303:
+		ERROR(__FUNCTION__ "(), unable to kmalloc lsaps\n");

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#331: FILE: net/irda/irlmp.c:339:
+		irda_queue_t* entry;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "link->lsaps"
#335: FILE: net/irda/irlmp.c:343:
+		if (link->lsaps != NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#337: FILE: net/irda/irlmp.c:345:
+			unsigned long flags;
+			spin_lock_irqsave(&irlmp->log_lock, flags);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "lsap"
#341: FILE: net/irda/irlmp.c:349:
+				ASSERT(lsap != NULL, continue;);

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#343: FILE: net/irda/irlmp.c:351:
+				IRDA_DEBUG(1, __FUNCTION__"(): Closing reference from %p to %p\n", lsap, link);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#343: FILE: net/irda/irlmp.c:351:
+				IRDA_DEBUG(1, __FUNCTION__"(): Closing reference from %p to %p\n", lsap, link);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#343: FILE: net/irda/irlmp.c:351:
+				IRDA_DEBUG(1, __FUNCTION__"(): Closing reference from %p to %p\n", lsap, link);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "lap->lsaps"
#376: FILE: net/irda/irlmp.c:735:
+	ASSERT(lap->lsaps != NULL, return;);

CHECK:SPACING: No space is necessary after a cast
#379: FILE: net/irda/irlmp.c:737:
+	lsap = hashbin_remove(lap->lsaps, (int) self, NULL);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!self->lap"
#406: FILE: net/irda/irlmp_event.c:875:
+		if (self->lap == NULL) {

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#408: FILE: net/irda/irlmp_event.c:877:
+			WARNING(__FUNCTION__ "(), Watchdog timeout on a \"dead\" LSAP\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#422: FILE: net/irda/irnet/irnet_irda.c:321:
+  if (self->iriap == NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#422: FILE: net/irda/irnet/irnet_irda.c:321:
+  if (self->iriap == NULL)
+    return -ENOMEM;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!self->iriap"
#422: FILE: net/irda/irnet/irnet_irda.c:321:
+  if (self->iriap == NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: net/irda/irnet/irnet_irda.c:322:
+    return -ENOMEM;$

WARNING:TABSTOP: Statements should start on a tabstop
#475: FILE: net/irda/irttp.c:1096:
+		       do {dev_kfree_skb(skb); return -1;} while (0););

ERROR:SPACING: space required after that ';' (ctx:VxV)
#475: FILE: net/irda/irttp.c:1096:
+		       do {dev_kfree_skb(skb); return -1;} while (0););
 		                                        ^

WARNING:TABSTOP: Statements should start on a tabstop
#484: FILE: net/irda/irttp.c:1334:
+		       do {dev_kfree_skb(skb); return -1;} while (0););

ERROR:SPACING: space required after that ';' (ctx:VxV)
#484: FILE: net/irda/irttp.c:1334:
+		       do {dev_kfree_skb(skb); return -1;} while (0););
 		                                        ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000343313.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 18 warnings, 11 checks, 267 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000343313.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
