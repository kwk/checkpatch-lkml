WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
The concept is near to the SYSEMU patch introduced by UML: you can specify that

WARNING:TABSTOP: Statements should start on a tabstop
#100: FILE: arch/i386/kernel/ptrace.c:481:
+		  if (addr == PTRACE_VM_TEST) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (18, 26)
#100: FILE: arch/i386/kernel/ptrace.c:481:
+		  if (addr == PTRACE_VM_TEST) {
+			  ret = PTRACE_VM_MASK;

WARNING:TABSTOP: Statements should start on a tabstop
#102: FILE: arch/i386/kernel/ptrace.c:483:
+			  break;

WARNING:TABSTOP: Statements should start on a tabstop
#103: FILE: arch/i386/kernel/ptrace.c:484:
+		  }

ERROR:TRAILING_WHITESPACE: trailing whitespace
#188: FILE: arch/powerpc/kernel/ptrace.c:341:
+^Icase PTRACE_SYSVM: $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TABSTOP: Statements should start on a tabstop
#189: FILE: arch/powerpc/kernel/ptrace.c:342:
+			     if (addr == PTRACE_VM_TEST) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (29, 37)
#189: FILE: arch/powerpc/kernel/ptrace.c:342:
+			     if (addr == PTRACE_VM_TEST) {
+				     ret = PTRACE_VM_MASK;

WARNING:TABSTOP: Statements should start on a tabstop
#191: FILE: arch/powerpc/kernel/ptrace.c:344:
+				     break;

WARNING:TABSTOP: Statements should start on a tabstop
#192: FILE: arch/powerpc/kernel/ptrace.c:345:
+			     }

CHECK:BRACES: braces {} should be used on all arms of this statement
#203: FILE: arch/powerpc/kernel/ptrace.c:353:
+		if (request == PTRACE_CONT)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#205: FILE: arch/powerpc/kernel/ptrace.c:355:
+		else {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#209: FILE: arch/powerpc/kernel/ptrace.c:359:
+				 * one operation */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#238: FILE: arch/powerpc/kernel/ptrace.c:579:
+^I    && (current->ptrace & PT_PTRACED) && $

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#238: FILE: arch/powerpc/kernel/ptrace.c:579:
 	     || test_thread_flag(TIF_SINGLESTEP))
+	    && (current->ptrace & PT_PTRACED) && 

ERROR:SPACING: spaces required around that '==' (ctx:VxV)
#239: FILE: arch/powerpc/kernel/ptrace.c:580:
+	    ((current->ptrace & PT_VM_SKIPEXIT)==0))
 	                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#282: FILE: arch/um/include/kern_util.h:73:
+extern int syscall_trace(union uml_pt_regs *regs, int entryexit);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#317: FILE: arch/um/kernel/ptrace.c:106:
+				 * one operation */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#319: FILE: arch/um/kernel/ptrace.c:108:
+^I^I^I} $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#371: FILE: arch/um/kernel/skas/syscall.c:27:
+	skip_call=syscall_trace(r, 0);
 	         ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#379: FILE: arch/um/kernel/skas/syscall.c:40:
+	if (skip_call == 0) {
 	syscall = UPT_SYSCALL_NR(r);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#406: FILE: arch/um/kernel/tt/syscall_kern.c:37:
+	skip_call=syscall_trace(&regs->regs, 0);
 	         ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#411: FILE: arch/um/kernel/tt/syscall_kern.c:42:
+	if (skip_call == 0) {
[...]
 	if((syscall >= NR_syscalls) || (syscall < 0))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#412: FILE: arch/um/kernel/tt/syscall_kern.c:43:
+^I^I^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#412: FILE: arch/um/kernel/tt/syscall_kern.c:43:
+	if (skip_call == 0) {
+			

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#420: FILE: arch/um/kernel/tt/syscall_kern.c:55:
 
+	}

WARNING:TYPO_SPELLING: 'fpr' may be misspelled - perhaps 'for'?
#465: FILE: include/linux/ptrace.h:74:
+/* options fpr PTRACE_VIEWOS */
            ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#491: FILE: init/Kconfig:228:
+config VIEWOS
+	bool "ViewOS Support (EXPERIMENTAL)"
+	help
+	  This option will enable kernel support for ViewOS partial virtualization.
+
+	  Say N if unsure.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (40, 32)
#507: FILE: kernel/ptrace.c:312:
 					if (buf[offset]==0)
+				break;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000076243.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 16 warnings, 6 checks, 357 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000076243.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
