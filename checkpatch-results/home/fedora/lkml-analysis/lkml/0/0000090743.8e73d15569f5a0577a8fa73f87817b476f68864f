ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#115: FILE: block/genhd.c:44:
+fastcall int blkdev_size(void) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ';' (ctx:WxV)
#138: FILE: block/genhd.c:54:
+		for (dp = major_names[offset] ;dp; dp=dp->next) {
 		                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#138: FILE: block/genhd.c:54:
+		for (dp = major_names[offset] ;dp; dp=dp->next) {
 		                                     ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#138: FILE: block/genhd.c:54:
+		for (dp = major_names[offset] ;dp; dp=dp->next) {
+			seq_printf(f, "%3d %s\n", dp->major, dp->name);
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#234: FILE: fs/char_dev.c:53:
+fastcall int chrdev_size(void) {

ERROR:SPACING: space required after that ';' (ctx:WxV)
#252: FILE: fs/char_dev.c:63:
+		for (cd = chrdevs[offset] ;cd; cd=cd->next) {
 		                          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#252: FILE: fs/char_dev.c:63:
+		for (cd = chrdevs[offset] ;cd; cd=cd->next) {
 		                                 ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#252: FILE: fs/char_dev.c:63:
+		for (cd = chrdevs[offset] ;cd; cd=cd->next) {
+			seq_printf(f, "%3d %s\n", cd->major, cd->name);
+		}

WARNING:CONST_STRUCT: struct file_operations should normally be const
#297: FILE: fs/proc/proc_misc.c:252:
+static struct file_operations proc_cpuinfo_operations = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:SPACING: No space is necessary after a cast
#308: FILE: fs/proc/proc_misc.c:261:
+	int i = *(loff_t *) v;

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#316: FILE: fs/proc/proc_misc.c:265:
+			seq_printf(f, "Character devices:\n");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#321: FILE: fs/proc/proc_misc.c:270:
+			seq_printf(f, "\nBlock devices:\n");

WARNING:CONST_STRUCT: struct seq_operations should normally be const
#442: FILE: fs/proc/proc_misc.c:294:
+static struct seq_operations devinfo_ops = {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#450: FILE: fs/proc/proc_misc.c:301:
+static int devinfo_open(struct inode *inode, struct file *filp)
                                                           ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#453: FILE: fs/proc/proc_misc.c:303:
+	return seq_open(filp, &devinfo_ops);
 	                ^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#484: FILE: include/linux/fs.h:1411:
+extern fastcall int chrdev_size(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: space required after that ',' (ctx:OxV)
#485: FILE: include/linux/fs.h:1412:
+extern void chrdev_show(struct seq_file *,off_t);
                                          ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#485: FILE: include/linux/fs.h:1412:
+extern void chrdev_show(struct seq_file *,off_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct seq_file *' should also have an identifier name
#485: FILE: include/linux/fs.h:1412:
+extern void chrdev_show(struct seq_file *,off_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'off_t' should also have an identifier name
#485: FILE: include/linux/fs.h:1412:
+extern void chrdev_show(struct seq_file *,off_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#498: FILE: include/linux/fs.h:1421:
+extern fastcall int blkdev_size(void);

ERROR:SPACING: space required after that ',' (ctx:OxV)
#499: FILE: include/linux/fs.h:1422:
+extern void blkdev_show(struct seq_file *,off_t);
                                          ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#499: FILE: include/linux/fs.h:1422:
+extern void blkdev_show(struct seq_file *,off_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct seq_file *' should also have an identifier name
#499: FILE: include/linux/fs.h:1422:
+extern void blkdev_show(struct seq_file *,off_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'off_t' should also have an identifier name
#499: FILE: include/linux/fs.h:1422:
+extern void blkdev_show(struct seq_file *,off_t);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000090743.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 8 errors, 12 warnings, 5 checks, 432 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000090743.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
