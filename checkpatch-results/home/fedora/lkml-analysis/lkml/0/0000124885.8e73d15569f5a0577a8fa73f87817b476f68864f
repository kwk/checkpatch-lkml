WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#82: FILE: drivers/message/i2o/i2o_config.c:41:
+extern int i2o_parm_issue(struct i2o_device *, int, void *, int, void *, int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct i2o_device *' should also have an identifier name
#82: FILE: drivers/message/i2o/i2o_config.c:41:
+extern int i2o_parm_issue(struct i2o_device *, int, void *, int, void *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#82: FILE: drivers/message/i2o/i2o_config.c:41:
+extern int i2o_parm_issue(struct i2o_device *, int, void *, int, void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#82: FILE: drivers/message/i2o/i2o_config.c:41:
+extern int i2o_parm_issue(struct i2o_device *, int, void *, int, void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#82: FILE: drivers/message/i2o/i2o_config.c:41:
+extern int i2o_parm_issue(struct i2o_device *, int, void *, int, void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#82: FILE: drivers/message/i2o/i2o_config.c:41:
+extern int i2o_parm_issue(struct i2o_device *, int, void *, int, void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#82: FILE: drivers/message/i2o/i2o_config.c:41:
+extern int i2o_parm_issue(struct i2o_device *, int, void *, int, void *, int);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around sg_list[sg_index]
#104: FILE: drivers/message/i2o/i2o_config.c:629:
+			p = &(sg_list[sg_index]);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: No space is necessary after a cast
#122: FILE: drivers/message/i2o/i2o_config.c:663:
+		reply[4] = ((u32) rcode) << 24;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#132: FILE: drivers/message/i2o/i2o_config.c:715:
+      sg_list_cleanup:

CHECK:SPACING: No space is necessary after a cast
#160: FILE: drivers/message/i2o/i2o_config.c:893:
+		reply[4] = ((u32) rcode) << 24;

WARNING:INDENTED_LABEL: labels should not be indented
#170: FILE: drivers/message/i2o/i2o_config.c:945:
+      sg_list_cleanup:

WARNING:MISORDERED_TYPE: type 'long unsigned int' should be specified in [[un]signed] [short|int|long|long long] order
#194: FILE: drivers/message/i2o/i2o_scsi.c:314:
+		 (long unsigned int)le64_to_cpu(lun));

WARNING:UNNECESSARY_INT: Prefer 'unsigned long' over 'long unsigned int' as the int is unnecessary
#194: FILE: drivers/message/i2o/i2o_scsi.c:314:
+		 (long unsigned int)le64_to_cpu(lun));

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000124885.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 11 warnings, 3 checks, 165 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000124885.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
