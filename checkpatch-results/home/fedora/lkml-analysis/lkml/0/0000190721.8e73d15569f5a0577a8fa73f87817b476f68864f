WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#53: 
in a seperate patch - that'll take a bit longer.
     ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'mabe' may be misspelled - perhaps 'maybe'?
#73: 
Andrew> mabe get_new_chunk() should return void*, avoid the casting?
        ^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#112: FILE: include/linux/genalloc.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#139: FILE: include/linux/genalloc.h:28:
+	spinlock_t lock;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct gen_pool *' should also have an identifier name
#140: FILE: include/linux/genalloc.h:29:
+	unsigned long (*get_new_chunk)(struct gen_pool *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#183: FILE: lib/genalloc.c:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#212: FILE: lib/genalloc.c:30:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#226: FILE: lib/genalloc.c:44:
+^Iif ((max_chunk_shift > (PAGE_SHIFT + 10)) || $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'max_chunk_shift < ALLOC_MIN_SHIFT'
#226: FILE: lib/genalloc.c:44:
+	if ((max_chunk_shift > (PAGE_SHIFT + 10)) || 
+	    ((max_chunk_shift < ALLOC_MIN_SHIFT) && max_chunk_shift))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*poolp)...) over kmalloc(sizeof(struct gen_pool)...)
#233: FILE: lib/genalloc.c:51:
+	poolp = kmalloc(sizeof(struct gen_pool), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*poolp->h)...) over kmalloc(sizeof(struct gen_pool_link)...)
#237: FILE: lib/genalloc.c:55:
+	poolp->h = kmalloc(sizeof(struct gen_pool_link) *

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#241: FILE: lib/genalloc.c:59:
+		printk(KERN_WARNING "gen_pool_alloc() failed to allocate\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#255: FILE: lib/genalloc.c:73:
+		printk(KERN_INFO "allocated %lx\n", tmp);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#265: FILE: lib/genalloc.c:83:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#282: FILE: lib/genalloc.c:100:
+^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#292: FILE: lib/genalloc.c:110:
+			struct gen_pool_link *ptr;
+			spin_unlock_irqrestore(&poolp->lock, flags);

CHECK:SPACING: No space is necessary after a cast
#303: FILE: lib/genalloc.c:121:
+	a = (unsigned long) h[j].next;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#307: FILE: lib/genalloc.c:125:
+		 * This should be split into a seperate function doing
 		                               ^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#314: FILE: lib/genalloc.c:132:
+			h[j].next = (struct gen_pool_link *) (a + s);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#323: FILE: lib/genalloc.c:141:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000190721.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 9 warnings, 9 checks, 248 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000190721.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
