WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#57: 
> > where we'd be doing that, but it sounds to me like it should be done here 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#78: FILE: arch/i386/kernel/cpu/mtrr/main.c:648:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: arch/i386/kernel/cpu/mtrr/main.c:648:
+ $

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#81: FILE: arch/i386/kernel/cpu/mtrr/main.c:651:
+struct mtrr_suspend_state
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: arch/i386/kernel/cpu/mtrr/main.c:652:
+     mtrr_type ltype;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: arch/i386/kernel/cpu/mtrr/main.c:653:
+     unsigned long lbase;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: arch/i386/kernel/cpu/mtrr/main.c:654:
+     unsigned int lsize;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#86: FILE: arch/i386/kernel/cpu/mtrr/main.c:656:
+};
+/* We return a pointer ptr on an area of *ptr bytes

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#87: FILE: arch/i386/kernel/cpu/mtrr/main.c:657:
+/* We return a pointer ptr on an area of *ptr bytes
+   beginning at ptr+sizeof(int)

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#88: FILE: arch/i386/kernel/cpu/mtrr/main.c:658:
+   This buffer has to be saved in some way during suspension */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#91: FILE: arch/i386/kernel/cpu/mtrr/main.c:661:
+     int i, len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: arch/i386/kernel/cpu/mtrr/main.c:662:
+     int *ptr = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: arch/i386/kernel/cpu/mtrr/main.c:663:
+     static struct mtrr_suspend_state *mtrr_suspend_buffer=NULL;$

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#93: FILE: arch/i386/kernel/cpu/mtrr/main.c:663:
+     static struct mtrr_suspend_state *mtrr_suspend_buffer=NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#93: FILE: arch/i386/kernel/cpu/mtrr/main.c:663:
+     static struct mtrr_suspend_state *mtrr_suspend_buffer=NULL;
                                                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#94: FILE: arch/i386/kernel/cpu/mtrr/main.c:664:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: arch/i386/kernel/cpu/mtrr/main.c:664:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#95: FILE: arch/i386/kernel/cpu/mtrr/main.c:665:
+     if(!mtrr_suspend_buffer)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#95: FILE: arch/i386/kernel/cpu/mtrr/main.c:665:
+     if(!mtrr_suspend_buffer)
+     {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 10)
#95: FILE: arch/i386/kernel/cpu/mtrr/main.c:665:
+     if(!mtrr_suspend_buffer)
+     {

ERROR:SPACING: space required before the open parenthesis '('
#95: FILE: arch/i386/kernel/cpu/mtrr/main.c:665:
+     if(!mtrr_suspend_buffer)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: arch/i386/kernel/cpu/mtrr/main.c:666:
+     {$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#97: FILE: arch/i386/kernel/cpu/mtrr/main.c:667:
+	  len = num_var_ranges * sizeof (struct mtrr_suspend_state) + sizeof(int);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#98: FILE: arch/i386/kernel/cpu/mtrr/main.c:668:
+	  ptr = kmalloc (len, GFP_KERNEL);

WARNING:TABSTOP: Statements should start on a tabstop
#99: FILE: arch/i386/kernel/cpu/mtrr/main.c:669:
+	  if (ptr == NULL)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 15)
#99: FILE: arch/i386/kernel/cpu/mtrr/main.c:669:
+	  if (ptr == NULL)
+	       return(NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ptr"
#99: FILE: arch/i386/kernel/cpu/mtrr/main.c:669:
+	  if (ptr == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TABSTOP: Statements should start on a tabstop
#100: FILE: arch/i386/kernel/cpu/mtrr/main.c:670:
+	       return(NULL);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: arch/i386/kernel/cpu/mtrr/main.c:675:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: arch/i386/kernel/cpu/mtrr/main.c:676:
+     for (i = 0; i < num_var_ranges; ++i,mtrr_suspend_buffer++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 10)
#106: FILE: arch/i386/kernel/cpu/mtrr/main.c:676:
+     for (i = 0; i < num_var_ranges; ++i,mtrr_suspend_buffer++)
+	  mtrr_if->get (i,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#106: FILE: arch/i386/kernel/cpu/mtrr/main.c:676:
+     for (i = 0; i < num_var_ranges; ++i,mtrr_suspend_buffer++)
                                         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#107: FILE: arch/i386/kernel/cpu/mtrr/main.c:677:
+	  mtrr_if->get (i,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around mtrr_suspend_buffer->lbase
#108: FILE: arch/i386/kernel/cpu/mtrr/main.c:678:
+		       &(mtrr_suspend_buffer->lbase),

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around mtrr_suspend_buffer->lsize
#109: FILE: arch/i386/kernel/cpu/mtrr/main.c:679:
+		       &(mtrr_suspend_buffer->lsize),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around mtrr_suspend_buffer->ltype
#110: FILE: arch/i386/kernel/cpu/mtrr/main.c:680:
+		       &(mtrr_suspend_buffer->ltype));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: arch/i386/kernel/cpu/mtrr/main.c:681:
+     return(ptr);$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#111: FILE: arch/i386/kernel/cpu/mtrr/main.c:681:
+     return(ptr);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: arch/i386/kernel/cpu/mtrr/main.c:687:
+     int i, len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: arch/i386/kernel/cpu/mtrr/main.c:688:
+     struct mtrr_suspend_state *mtrr_suspend_buffer;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#119: FILE: arch/i386/kernel/cpu/mtrr/main.c:689:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: arch/i386/kernel/cpu/mtrr/main.c:689:
+     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: arch/i386/kernel/cpu/mtrr/main.c:690:
+     len = num_var_ranges * sizeof (struct mtrr_suspend_state) + sizeof(int);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#120: FILE: arch/i386/kernel/cpu/mtrr/main.c:690:
+     len = num_var_ranges * sizeof (struct mtrr_suspend_state) + sizeof(int);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: arch/i386/kernel/cpu/mtrr/main.c:691:
+     if(*ptr != len)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#121: FILE: arch/i386/kernel/cpu/mtrr/main.c:691:
+     if(*ptr != len)
+     {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 10)
#121: FILE: arch/i386/kernel/cpu/mtrr/main.c:691:
+     if(*ptr != len)
+     {

ERROR:SPACING: space required before the open parenthesis '('
#121: FILE: arch/i386/kernel/cpu/mtrr/main.c:691:
+     if(*ptr != len)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: arch/i386/kernel/cpu/mtrr/main.c:692:
+     {$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#123: FILE: arch/i386/kernel/cpu/mtrr/main.c:693:
+	  printk ("mtrr: Resuming failed due to different number of MTRRs\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#123: FILE: arch/i386/kernel/cpu/mtrr/main.c:693:
+	  printk ("mtrr: Resuming failed due to different number of MTRRs\n");

WARNING:TABSTOP: Statements should start on a tabstop
#124: FILE: arch/i386/kernel/cpu/mtrr/main.c:694:
+	  return;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: arch/i386/kernel/cpu/mtrr/main.c:695:
+     }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: arch/i386/kernel/cpu/mtrr/main.c:696:
+     ptr++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: arch/i386/kernel/cpu/mtrr/main.c:697:
+     mtrr_suspend_buffer=(struct mtrr_suspend_state *)ptr;$

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#127: FILE: arch/i386/kernel/cpu/mtrr/main.c:697:
+     mtrr_suspend_buffer=(struct mtrr_suspend_state *)ptr;
                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#128: FILE: arch/i386/kernel/cpu/mtrr/main.c:698:
+     for (i = 0; i < num_var_ranges; ++i,mtrr_suspend_buffer++)     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: arch/i386/kernel/cpu/mtrr/main.c:698:
+     for (i = 0; i < num_var_ranges; ++i,mtrr_suspend_buffer++)     $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (5, 10)
#128: FILE: arch/i386/kernel/cpu/mtrr/main.c:698:
+     for (i = 0; i < num_var_ranges; ++i,mtrr_suspend_buffer++)     
+	  if (mtrr_suspend_buffer->lsize)	  

ERROR:SPACING: space required after that ',' (ctx:VxV)
#128: FILE: arch/i386/kernel/cpu/mtrr/main.c:698:
+     for (i = 0; i < num_var_ranges; ++i,mtrr_suspend_buffer++)     
                                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#129: FILE: arch/i386/kernel/cpu/mtrr/main.c:699:
+^I  if (mtrr_suspend_buffer->lsize)^I  $

WARNING:TABSTOP: Statements should start on a tabstop
#129: FILE: arch/i386/kernel/cpu/mtrr/main.c:699:
+	  if (mtrr_suspend_buffer->lsize)	  

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (10, 15)
#129: FILE: arch/i386/kernel/cpu/mtrr/main.c:699:
+	  if (mtrr_suspend_buffer->lsize)	  
+	       set_mtrr(i,

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#136: FILE: arch/i386/kernel/cpu/mtrr/main.c:706:
+EXPORT_SYMBOL(mtrr_resume);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000371230.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 43 warnings, 5 checks, 73 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000371230.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
