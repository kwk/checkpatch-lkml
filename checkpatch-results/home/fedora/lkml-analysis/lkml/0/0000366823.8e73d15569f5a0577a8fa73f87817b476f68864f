WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#55: FILE: fs/compat_ioctl.c:1:
+/* $Id: ioc,v 1.16 2003/05/27 17:51:29 pavel Exp $

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#55: FILE: fs/compat_ioctl.c:1:
+/* $Id: ioc,v 1.16 2003/05/27 17:51:29 pavel Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#60: FILE: fs/compat_ioctl.c:6:
+ * Copyright (C) 2001,2002  Andi Kleen, SuSE Labs $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#135: FILE: fs/compat_ioctl.c:81:
+#include <asm/uaccess.h>

WARNING:INCLUDE_LINUX: Use #include <linux/module.h> instead of <asm/module.h>
#142: FILE: fs/compat_ioctl.c:88:
+#include <asm/module.h>

ERROR:TRAILING_WHITESPACE: trailing whitespace
#181: FILE: fs/compat_ioctl.c:127:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#182: FILE: fs/compat_ioctl.c:128:
+	set_fs (KERNEL_DS);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#184: FILE: fs/compat_ioctl.c:130:
+	set_fs (old_fs);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#189: FILE: fs/compat_ioctl.c:135:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#189: FILE: fs/compat_ioctl.c:135:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#195: FILE: fs/compat_ioctl.c:141:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#196: FILE: fs/compat_ioctl.c:142:
+	if(get_user(val, (u32 *)arg))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#198: FILE: fs/compat_ioctl.c:144:
+	set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#200: FILE: fs/compat_ioctl.c:146:
+	set_fs (old_fs);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#210: FILE: fs/compat_ioctl.c:156:
+	case EXT2_IOC32_GETFLAGS: cmd = EXT2_IOC_GETFLAGS; break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#211: FILE: fs/compat_ioctl.c:157:
+	case EXT2_IOC32_SETFLAGS: cmd = EXT2_IOC_SETFLAGS; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#212: FILE: fs/compat_ioctl.c:158:
+	case EXT2_IOC32_GETVERSION: cmd = EXT2_IOC_GETVERSION; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#213: FILE: fs/compat_ioctl.c:159:
+	case EXT2_IOC32_SETVERSION: cmd = EXT2_IOC_SETVERSION; break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#217: FILE: fs/compat_ioctl.c:163:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: fs/compat_ioctl.c:163:
+ $

ERROR:SPACING: space required before the open parenthesis '('
#230: FILE: fs/compat_ioctl.c:176:
+	if(get_user(kp->tuner, &up->tuner))

ERROR:SPACING: space required before the open parenthesis '('
#232: FILE: fs/compat_ioctl.c:178:
+	for(i = 0; i < 32; i++)

ERROR:SPACING: space required before the open parenthesis '('
#246: FILE: fs/compat_ioctl.c:192:
+	if(put_user(kp->tuner, &up->tuner))

ERROR:SPACING: space required before the open parenthesis '('
#248: FILE: fs/compat_ioctl.c:194:
+	for(i = 0; i < 32; i++)

ERROR:SPACING: space required before the open parenthesis '('
#267: FILE: fs/compat_ioctl.c:213:
+	if(get_user(tmp, &up->base))

CHECK:SPACING: No space is necessary after a cast
#269: FILE: fs/compat_ioctl.c:215:
+	kp->base = (void *) ((unsigned long)tmp);

ERROR:SPACING: space required before the open parenthesis '('
#281: FILE: fs/compat_ioctl.c:227:
+	if(put_user(tmp, &up->base))

ERROR:SPACING: space required before the open parenthesis '('
#306: FILE: fs/compat_ioctl.c:252:
+	if(cp != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "cp"
#306: FILE: fs/compat_ioctl.c:252:
+	if(cp != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required before the open parenthesis '('
#317: FILE: fs/compat_ioctl.c:263:
+	if(get_user(kp->x, &up->x))

ERROR:SPACING: space required before the open parenthesis '('
#330: FILE: fs/compat_ioctl.c:276:
+	if(nclips == 0)

ERROR:SPACING: space required before the open parenthesis '('
#333: FILE: fs/compat_ioctl.c:279:
+	if(ucp == 0)

ERROR:SPACING: space required before the open parenthesis '('
#337: FILE: fs/compat_ioctl.c:283:
+	if(nclips < 0)

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#340: FILE: fs/compat_ioctl.c:286:
+	kcp = kmalloc(nclips * sizeof(struct video_clip), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

ERROR:SPACING: space required before the open parenthesis '('
#342: FILE: fs/compat_ioctl.c:288:
+	if(kcp == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!kcp"
#342: FILE: fs/compat_ioctl.c:288:
+	if(kcp == NULL)

ERROR:SPACING: space required before the open parenthesis '('
#346: FILE: fs/compat_ioctl.c:292:
+	for(i = 0; i < nclips; i++) {

ERROR:SPACING: space required before the open parenthesis '('
#364: FILE: fs/compat_ioctl.c:310:
+	if(put_user(kp->x, &up->x))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#375: FILE: fs/compat_ioctl.c:321:
+#define VIDIOCGTUNER32		_IOWR('v',4, struct video_tuner32)
                       		         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#376: FILE: fs/compat_ioctl.c:322:
+#define VIDIOCSTUNER32		_IOW('v',5, struct video_tuner32)
                       		        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#377: FILE: fs/compat_ioctl.c:323:
+#define VIDIOCGWIN32		_IOR('v',9, struct video_window32)
                     		        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#378: FILE: fs/compat_ioctl.c:324:
+#define VIDIOCSWIN32		_IOW('v',10, struct video_window32)
                     		        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#379: FILE: fs/compat_ioctl.c:325:
+#define VIDIOCGFBUF32		_IOR('v',11, struct video_buffer32)
                      		        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#380: FILE: fs/compat_ioctl.c:326:
+#define VIDIOCSFBUF32		_IOW('v',12, struct video_buffer32)
                      		        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#381: FILE: fs/compat_ioctl.c:327:
+#define VIDIOCGFREQ32		_IOR('v',14, u32)
                      		        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#382: FILE: fs/compat_ioctl.c:328:
+#define VIDIOCSFREQ32		_IOW('v',15, u32)
                      		        ^

ERROR:SPACING: space required before the open parenthesis '('
#397: FILE: fs/compat_ioctl.c:343:
+	switch(cmd) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#398: FILE: fs/compat_ioctl.c:344:
+	case VIDIOCGTUNER32: cmd = VIDIOCGTUNER; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#399: FILE: fs/compat_ioctl.c:345:
+	case VIDIOCSTUNER32: cmd = VIDIOCSTUNER; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#400: FILE: fs/compat_ioctl.c:346:
+	case VIDIOCGWIN32: cmd = VIDIOCGWIN; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#401: FILE: fs/compat_ioctl.c:347:
+	case VIDIOCSWIN32: cmd = VIDIOCSWIN; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#402: FILE: fs/compat_ioctl.c:348:
+	case VIDIOCGFBUF32: cmd = VIDIOCGFBUF; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#403: FILE: fs/compat_ioctl.c:349:
+	case VIDIOCSFBUF32: cmd = VIDIOCSFBUF; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#404: FILE: fs/compat_ioctl.c:350:
+	case VIDIOCGFREQ32: cmd = VIDIOCGFREQ; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#405: FILE: fs/compat_ioctl.c:351:
+	case VIDIOCSFREQ32: cmd = VIDIOCSFREQ; break;

ERROR:SPACING: space required before the open parenthesis '('
#408: FILE: fs/compat_ioctl.c:354:
+	switch(cmd) {

ERROR:SPACING: space required before the open parenthesis '('
#426: FILE: fs/compat_ioctl.c:372:
+	if(err)

ERROR:SPACING: space required before the open parenthesis '('
#433: FILE: fs/compat_ioctl.c:379:
+	if(cmd == VIDIOCSWIN)

ERROR:SPACING: space required before the open parenthesis '('
#436: FILE: fs/compat_ioctl.c:382:
+	if(err == 0) {

ERROR:SPACING: space required before the open parenthesis '('
#437: FILE: fs/compat_ioctl.c:383:
+		switch(cmd) {

ERROR:SPACING: space required before the open parenthesis '('
#469: FILE: fs/compat_ioctl.c:415:
+	if(!err) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#488: FILE: fs/compat_ioctl.c:434:
+        union {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: fs/compat_ioctl.c:434:
+        union {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#489: FILE: fs/compat_ioctl.c:435:
+                char    ifrn_name[IFNAMSIZ];            /* if name, e.g. "en0" */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: fs/compat_ioctl.c:435:
+                char    ifrn_name[IFNAMSIZ];            /* if name, e.g. "en0" */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#490: FILE: fs/compat_ioctl.c:436:
+        } ifr_ifrn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#490: FILE: fs/compat_ioctl.c:436:
+        } ifr_ifrn;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#491: FILE: fs/compat_ioctl.c:437:
+        union {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#491: FILE: fs/compat_ioctl.c:437:
+        union {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#492: FILE: fs/compat_ioctl.c:438:
+                struct  sockaddr ifru_addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#492: FILE: fs/compat_ioctl.c:438:
+                struct  sockaddr ifru_addr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#493: FILE: fs/compat_ioctl.c:439:
+                struct  sockaddr ifru_dstaddr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#493: FILE: fs/compat_ioctl.c:439:
+                struct  sockaddr ifru_dstaddr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#494: FILE: fs/compat_ioctl.c:440:
+                struct  sockaddr ifru_broadaddr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#494: FILE: fs/compat_ioctl.c:440:
+                struct  sockaddr ifru_broadaddr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#495: FILE: fs/compat_ioctl.c:441:
+                struct  sockaddr ifru_netmask;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#495: FILE: fs/compat_ioctl.c:441:
+                struct  sockaddr ifru_netmask;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#496: FILE: fs/compat_ioctl.c:442:
+                struct  sockaddr ifru_hwaddr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#496: FILE: fs/compat_ioctl.c:442:
+                struct  sockaddr ifru_hwaddr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#497: FILE: fs/compat_ioctl.c:443:
+                short   ifru_flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#497: FILE: fs/compat_ioctl.c:443:
+                short   ifru_flags;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#498: FILE: fs/compat_ioctl.c:444:
+                compat_int_t     ifru_ivalue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#498: FILE: fs/compat_ioctl.c:444:
+                compat_int_t     ifru_ivalue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#499: FILE: fs/compat_ioctl.c:445:
+                compat_int_t     ifru_mtu;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#499: FILE: fs/compat_ioctl.c:445:
+                compat_int_t     ifru_mtu;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#500: FILE: fs/compat_ioctl.c:446:
+                struct  ifmap32 ifru_map;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#500: FILE: fs/compat_ioctl.c:446:
+                struct  ifmap32 ifru_map;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#501: FILE: fs/compat_ioctl.c:447:
+                char    ifru_slave[IFNAMSIZ];   /* Just fits the size */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#501: FILE: fs/compat_ioctl.c:447:
+                char    ifru_slave[IFNAMSIZ];   /* Just fits the size */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#503: FILE: fs/compat_ioctl.c:449:
+                compat_caddr_t ifru_data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#503: FILE: fs/compat_ioctl.c:449:
+                compat_caddr_t ifru_data;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#505: FILE: fs/compat_ioctl.c:451:
+        } ifr_ifru;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#505: FILE: fs/compat_ioctl.c:451:
+        } ifr_ifru;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#509: FILE: fs/compat_ioctl.c:455:
+        compat_int_t^Iifc_len;                        /* size of buffer       */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#509: FILE: fs/compat_ioctl.c:455:
+        compat_int_t^Iifc_len;                        /* size of buffer       */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#510: FILE: fs/compat_ioctl.c:456:
+        compat_caddr_t  ifcbuf;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#510: FILE: fs/compat_ioctl.c:456:
+        compat_caddr_t  ifcbuf;$

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#527: FILE: fs/compat_ioctl.c:473:
+	strlcpy(ifr32.ifr_name, dev->name, sizeof(ifr32.ifr_name));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#529: FILE: fs/compat_ioctl.c:475:
+^I$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#531: FILE: fs/compat_ioctl.c:477:
+	return (err ? -EFAULT : 0);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:SPACING: space required before the open parenthesis '('
#548: FILE: fs/compat_ioctl.c:494:
+	if(ifc32.ifcbuf == 0) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#553: FILE: fs/compat_ioctl.c:499:
+		ifc.ifc_len = ((ifc32.ifc_len / sizeof (struct ifreq32)) + 1) *

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#554: FILE: fs/compat_ioctl.c:500:
+			sizeof (struct ifreq);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#555: FILE: fs/compat_ioctl.c:501:
+		ifc.ifc_buf = kmalloc (ifc.ifc_len, GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#561: FILE: fs/compat_ioctl.c:507:
+	for (i = 0; i < ifc32.ifc_len; i += sizeof (struct ifreq32)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#562: FILE: fs/compat_ioctl.c:508:
+		if (copy_from_user(ifr, ifr32, sizeof (struct ifreq32))) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#563: FILE: fs/compat_ioctl.c:509:
+			kfree (ifc.ifc_buf);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#567: FILE: fs/compat_ioctl.c:513:
+^I^Iifr32++; $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#569: FILE: fs/compat_ioctl.c:515:
+	old_fs = get_fs(); set_fs (KERNEL_DS);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#570: FILE: fs/compat_ioctl.c:516:
+^Ierr = sys_ioctl (fd, SIOCGIFCONF, (unsigned long)&ifc);^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#570: FILE: fs/compat_ioctl.c:516:
+	err = sys_ioctl (fd, SIOCGIFCONF, (unsigned long)&ifc);	

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#571: FILE: fs/compat_ioctl.c:517:
+	set_fs (old_fs);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#576: FILE: fs/compat_ioctl.c:522:
+		     i += sizeof (struct ifreq32), j += sizeof (struct ifreq)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#576: FILE: fs/compat_ioctl.c:522:
+		     i += sizeof (struct ifreq32), j += sizeof (struct ifreq)) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#577: FILE: fs/compat_ioctl.c:523:
+			int k = copy_to_user(ifr32, ifr, sizeof (struct ifreq32));

WARNING:LINE_SPACING: Missing a blank line after declarations
#578: FILE: fs/compat_ioctl.c:524:
+			int k = copy_to_user(ifr32, ifr, sizeof (struct ifreq32));
+			ifr32++;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#584: FILE: fs/compat_ioctl.c:530:
+^I^I       $

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#585: FILE: fs/compat_ioctl.c:531:
+		       
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#598: FILE: fs/compat_ioctl.c:544:
+					ifc32.ifc_len = i - sizeof (struct ifreq32);

ERROR:SPACING: space required before the open parenthesis '('
#604: FILE: fs/compat_ioctl.c:550:
+	if(ifc.ifc_buf != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ifc.ifc_buf"
#604: FILE: fs/compat_ioctl.c:550:
+	if(ifc.ifc_buf != NULL)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#605: FILE: fs/compat_ioctl.c:551:
+		kfree (ifc.ifc_buf);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#615: FILE: fs/compat_ioctl.c:561:
+^I$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#629: FILE: fs/compat_ioctl.c:575:
+	case ETHTOOL_GDRVINFO:	len = sizeof(struct ethtool_drvinfo); break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#633: FILE: fs/compat_ioctl.c:579:
+	case ETHTOOL_NWAY_RST:  len = sizeof(struct ethtool_value); break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#641: FILE: fs/compat_ioctl.c:587:
+^I^Iif (len > PAGE_SIZE - sizeof(struct ethtool_regs)) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#644: FILE: fs/compat_ioctl.c:590:
+^I^I}^I^I^I$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#649: FILE: fs/compat_ioctl.c:595:
+	case ETHTOOL_SSET:      len = sizeof(struct ethtool_cmd); break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#651: FILE: fs/compat_ioctl.c:597:
+               err = -EOPNOTSUPP;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#651: FILE: fs/compat_ioctl.c:597:
+               err = -EOPNOTSUPP;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#652: FILE: fs/compat_ioctl.c:598:
+               goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#652: FILE: fs/compat_ioctl.c:598:
+               goto out;$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#661: FILE: fs/compat_ioctl.c:607:
+	set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#662: FILE: fs/compat_ioctl.c:608:
+	err = sys_ioctl (fd, cmd, (unsigned long)&ifr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#663: FILE: fs/compat_ioctl.c:609:
+	set_fs (old_fs);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#678: FILE: fs/compat_ioctl.c:624:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#685: FILE: fs/compat_ioctl.c:631:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#717: FILE: fs/compat_ioctl.c:663:
+	set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#718: FILE: fs/compat_ioctl.c:664:
+	err = sys_ioctl (fd, cmd, (unsigned long)&ifr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#719: FILE: fs/compat_ioctl.c:665:
+	set_fs (old_fs);

CHECK:SPACING: No space is necessary after a cast
#734: FILE: fs/compat_ioctl.c:680:
+	struct ifreq32 *u_ifreq32 = (struct ifreq32 *) arg;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around u_ifreq32->ifr_ifrn.ifrn_name[0]
#739: FILE: fs/compat_ioctl.c:685:
+	if (copy_from_user(&tmp_buf[0], &(u_ifreq32->ifr_ifrn.ifrn_name[0]),

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: No space is necessary after a cast
#754: FILE: fs/compat_ioctl.c:700:
+	return sys_ioctl(fd, cmd, (unsigned long) u_ifreq64);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#762: FILE: fs/compat_ioctl.c:708:
+^I$

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#766: FILE: fs/compat_ioctl.c:712:
+		err |= __get_user(ifr.ifr_map.mem_start, &(((struct ifreq32 *)arg)->ifr_ifru.ifru_map.mem_start));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#767: FILE: fs/compat_ioctl.c:713:
+		err |= __get_user(ifr.ifr_map.mem_end, &(((struct ifreq32 *)arg)->ifr_ifru.ifru_map.mem_end));

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#768: FILE: fs/compat_ioctl.c:714:
+		err |= __get_user(ifr.ifr_map.base_addr, &(((struct ifreq32 *)arg)->ifr_ifru.ifru_map.base_addr));

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#769: FILE: fs/compat_ioctl.c:715:
+		err |= __get_user(ifr.ifr_map.irq, &(((struct ifreq32 *)arg)->ifr_ifru.ifru_map.irq));

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#770: FILE: fs/compat_ioctl.c:716:
+		err |= __get_user(ifr.ifr_map.dma, &(((struct ifreq32 *)arg)->ifr_ifru.ifru_map.dma));

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#771: FILE: fs/compat_ioctl.c:717:
+		err |= __get_user(ifr.ifr_map.port, &(((struct ifreq32 *)arg)->ifr_ifru.ifru_map.port));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#781: FILE: fs/compat_ioctl.c:727:
+	set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#782: FILE: fs/compat_ioctl.c:728:
+	err = sys_ioctl (fd, cmd, (unsigned long)&ifr);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#783: FILE: fs/compat_ioctl.c:729:
+	set_fs (old_fs);

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#802: FILE: fs/compat_ioctl.c:748:
+			err |= __put_user(ifr.ifr_map.mem_start, &(((struct ifreq32 *)arg)->ifr_ifru.ifru_map.mem_start));

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#803: FILE: fs/compat_ioctl.c:749:
+			err |= __put_user(ifr.ifr_map.mem_end, &(((struct ifreq32 *)arg)->ifr_ifru.ifru_map.mem_end));

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#804: FILE: fs/compat_ioctl.c:750:
+			err |= __put_user(ifr.ifr_map.base_addr, &(((struct ifreq32 *)arg)->ifr_ifru.ifru_map.base_addr));

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#805: FILE: fs/compat_ioctl.c:751:
+			err |= __put_user(ifr.ifr_map.irq, &(((struct ifreq32 *)arg)->ifr_ifru.ifru_map.irq));

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#806: FILE: fs/compat_ioctl.c:752:
+			err |= __put_user(ifr.ifr_map.dma, &(((struct ifreq32 *)arg)->ifr_ifru.ifru_map.dma));

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#807: FILE: fs/compat_ioctl.c:753:
+			err |= __put_user(ifr.ifr_map.port, &(((struct ifreq32 *)arg)->ifr_ifru.ifru_map.port));

ERROR:CODE_INDENT: code indent should use tabs where possible
#817: FILE: fs/compat_ioctl.c:763:
+        u32   ^I^Irt_pad1;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#817: FILE: fs/compat_ioctl.c:763:
+        u32   ^I^Irt_pad1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#817: FILE: fs/compat_ioctl.c:763:
+        u32   ^I^Irt_pad1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#818: FILE: fs/compat_ioctl.c:764:
+        struct sockaddr rt_dst;         /* target address               */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#818: FILE: fs/compat_ioctl.c:764:
+        struct sockaddr rt_dst;         /* target address               */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#819: FILE: fs/compat_ioctl.c:765:
+        struct sockaddr rt_gateway;     /* gateway addr (RTF_GATEWAY)   */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#819: FILE: fs/compat_ioctl.c:765:
+        struct sockaddr rt_gateway;     /* gateway addr (RTF_GATEWAY)   */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#820: FILE: fs/compat_ioctl.c:766:
+        struct sockaddr rt_genmask;     /* target network mask (IP)     */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#820: FILE: fs/compat_ioctl.c:766:
+        struct sockaddr rt_genmask;     /* target network mask (IP)     */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#821: FILE: fs/compat_ioctl.c:767:
+        unsigned short  rt_flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#821: FILE: fs/compat_ioctl.c:767:
+        unsigned short  rt_flags;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#822: FILE: fs/compat_ioctl.c:768:
+        short           rt_pad2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#822: FILE: fs/compat_ioctl.c:768:
+        short           rt_pad2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#823: FILE: fs/compat_ioctl.c:769:
+        u32   ^I^Irt_pad3;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#823: FILE: fs/compat_ioctl.c:769:
+        u32   ^I^Irt_pad3;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#823: FILE: fs/compat_ioctl.c:769:
+        u32   ^I^Irt_pad3;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#824: FILE: fs/compat_ioctl.c:770:
+        unsigned char   rt_tos;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#824: FILE: fs/compat_ioctl.c:770:
+        unsigned char   rt_tos;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#825: FILE: fs/compat_ioctl.c:771:
+        unsigned char   rt_class;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#825: FILE: fs/compat_ioctl.c:771:
+        unsigned char   rt_class;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#826: FILE: fs/compat_ioctl.c:772:
+        short           rt_pad4;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#826: FILE: fs/compat_ioctl.c:772:
+        short           rt_pad4;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#827: FILE: fs/compat_ioctl.c:773:
+        short           rt_metric;      /* +1 for binary compatibility! */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#827: FILE: fs/compat_ioctl.c:773:
+        short           rt_metric;      /* +1 for binary compatibility! */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#828: FILE: fs/compat_ioctl.c:774:
+        /* char * */ u32 rt_dev;        /* forcing the device at add    */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#829: FILE: fs/compat_ioctl.c:775:
+        u32   ^I^Irt_mtu;         /* per route MTU/Window         */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#829: FILE: fs/compat_ioctl.c:775:
+        u32   ^I^Irt_mtu;         /* per route MTU/Window         */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#829: FILE: fs/compat_ioctl.c:775:
+        u32   ^I^Irt_mtu;         /* per route MTU/Window         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#830: FILE: fs/compat_ioctl.c:776:
+        u32   ^I^Irt_window;      /* Window clamping              */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#830: FILE: fs/compat_ioctl.c:776:
+        u32   ^I^Irt_window;      /* Window clamping              */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#830: FILE: fs/compat_ioctl.c:776:
+        u32   ^I^Irt_window;      /* Window clamping              */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#831: FILE: fs/compat_ioctl.c:777:
+        unsigned short  rt_irtt;        /* Initial RTT                  */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#831: FILE: fs/compat_ioctl.c:777:
+        unsigned short  rt_irtt;        /* Initial RTT                  */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#857: FILE: fs/compat_ioctl.c:803:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#861: FILE: fs/compat_ioctl.c:807:
+		ret = copy_from_user (&r6.rtmsg_dst, &(((struct in6_rtmsg32 *)arg)->rtmsg_dst),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#862: FILE: fs/compat_ioctl.c:808:
+		ret = copy_from_user (&r6.rtmsg_dst, &(((struct in6_rtmsg32 *)arg)->rtmsg_dst),
+			3 * sizeof(struct in6_addr));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#863: FILE: fs/compat_ioctl.c:809:
+		ret |= __get_user (r6.rtmsg_type, &(((struct in6_rtmsg32 *)arg)->rtmsg_type));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#864: FILE: fs/compat_ioctl.c:810:
+		ret |= __get_user (r6.rtmsg_dst_len, &(((struct in6_rtmsg32 *)arg)->rtmsg_dst_len));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#865: FILE: fs/compat_ioctl.c:811:
+		ret |= __get_user (r6.rtmsg_src_len, &(((struct in6_rtmsg32 *)arg)->rtmsg_src_len));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#866: FILE: fs/compat_ioctl.c:812:
+		ret |= __get_user (r6.rtmsg_metric, &(((struct in6_rtmsg32 *)arg)->rtmsg_metric));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#867: FILE: fs/compat_ioctl.c:813:
+		ret |= __get_user (r6.rtmsg_info, &(((struct in6_rtmsg32 *)arg)->rtmsg_info));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#868: FILE: fs/compat_ioctl.c:814:
+		ret |= __get_user (r6.rtmsg_flags, &(((struct in6_rtmsg32 *)arg)->rtmsg_flags));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#869: FILE: fs/compat_ioctl.c:815:
+		ret |= __get_user (r6.rtmsg_ifindex, &(((struct in6_rtmsg32 *)arg)->rtmsg_ifindex));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#870: FILE: fs/compat_ioctl.c:816:
+^I^I$

CHECK:SPACING: No space is necessary after a cast
#871: FILE: fs/compat_ioctl.c:817:
+		r = (void *) &r6;

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#873: FILE: fs/compat_ioctl.c:819:
+		ret = copy_from_user (&r4.rt_dst, &(((struct rtentry32 *)arg)->rt_dst), 3 * sizeof(struct sockaddr));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#873: FILE: fs/compat_ioctl.c:819:
+		ret = copy_from_user (&r4.rt_dst, &(((struct rtentry32 *)arg)->rt_dst), 3 * sizeof(struct sockaddr));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#874: FILE: fs/compat_ioctl.c:820:
+		ret |= __get_user (r4.rt_flags, &(((struct rtentry32 *)arg)->rt_flags));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#875: FILE: fs/compat_ioctl.c:821:
+		ret |= __get_user (r4.rt_metric, &(((struct rtentry32 *)arg)->rt_metric));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#876: FILE: fs/compat_ioctl.c:822:
+		ret |= __get_user (r4.rt_mtu, &(((struct rtentry32 *)arg)->rt_mtu));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#877: FILE: fs/compat_ioctl.c:823:
+		ret |= __get_user (r4.rt_window, &(((struct rtentry32 *)arg)->rt_window));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#878: FILE: fs/compat_ioctl.c:824:
+		ret |= __get_user (r4.rt_irtt, &(((struct rtentry32 *)arg)->rt_irtt));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#879: FILE: fs/compat_ioctl.c:825:
+		ret |= __get_user (rtdev, &(((struct rtentry32 *)arg)->rt_dev));

CHECK:BRACES: braces {} should be used on all arms of this statement
#880: FILE: fs/compat_ioctl.c:826:
+		if (rtdev) {
[...]
+		} else
[...]

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#881: FILE: fs/compat_ioctl.c:827:
+			ret |= copy_from_user (devname, compat_ptr(rtdev), 15);

CHECK:BRACES: Unbalanced braces around else statement
#883: FILE: fs/compat_ioctl.c:829:
+		} else

CHECK:SPACING: No space is necessary after a cast
#886: FILE: fs/compat_ioctl.c:832:
+		r = (void *) &r4;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#892: FILE: fs/compat_ioctl.c:838:
+	set_fs (KERNEL_DS);

CHECK:SPACING: No space is necessary after a cast
#893: FILE: fs/compat_ioctl.c:839:
+	ret = sys_ioctl (fd, cmd, (long) r);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#893: FILE: fs/compat_ioctl.c:839:
+	ret = sys_ioctl (fd, cmd, (long) r);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#894: FILE: fs/compat_ioctl.c:840:
+	set_fs (old_fs);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#908: FILE: fs/compat_ioctl.c:854:
+                        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#908: FILE: fs/compat_ioctl.c:854:
+                        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#908: FILE: fs/compat_ioctl.c:854:
+                        $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#914: FILE: fs/compat_ioctl.c:860:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#915: FILE: fs/compat_ioctl.c:861:
+	set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#917: FILE: fs/compat_ioctl.c:863:
+	set_fs (old_fs);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#919: FILE: fs/compat_ioctl.c:865:
+		err = copy_to_user ((struct hd_geometry32 *)arg, &geo, 4);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#920: FILE: fs/compat_ioctl.c:866:
+		err |= __put_user (geo.start, &(((struct hd_geometry32 *)arg)->start));

ERROR:CODE_INDENT: code indent should use tabs where possible
#927: FILE: fs/compat_ioctl.c:873:
+        compat_caddr_t^Ismem_start;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#927: FILE: fs/compat_ioctl.c:873:
+        compat_caddr_t^Ismem_start;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#936: FILE: fs/compat_ioctl.c:882:
+        compat_caddr_t^Immio_start;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#936: FILE: fs/compat_ioctl.c:882:
+        compat_caddr_t^Immio_start;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#978: FILE: fs/compat_ioctl.c:924:
+^I^Iif (cmap.len > PAGE_SIZE/sizeof(u16)) { $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#978: FILE: fs/compat_ioctl.c:924:
+		if (cmap.len > PAGE_SIZE/sizeof(u16)) { 
 		                        ^

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#983: FILE: fs/compat_ioctl.c:929:
+		cmap.red = kmalloc(cmap.len * sizeof(__u16), GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#986: FILE: fs/compat_ioctl.c:932:
+		cmap.green = kmalloc(cmap.len * sizeof(__u16), GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#989: FILE: fs/compat_ioctl.c:935:
+		cmap.blue = kmalloc(cmap.len * sizeof(__u16), GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#993: FILE: fs/compat_ioctl.c:939:
+			cmap.transp = kmalloc(cmap.len * sizeof(__u16), GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#997: FILE: fs/compat_ioctl.c:943:
+^I^I^I$

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#1004: FILE: fs/compat_ioctl.c:950:
+		if (cmap.transp) err |= __copy_from_user(cmap.transp, compat_ptr(transp), cmap.len * sizeof(__u16));

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1004: FILE: fs/compat_ioctl.c:950:
+		if (cmap.transp) err |= __copy_from_user(cmap.transp, compat_ptr(transp), cmap.len * sizeof(__u16));

WARNING:LINE_SPACING: Missing a blank line after declarations
#1013: FILE: fs/compat_ioctl.c:959:
+			static int count;
+			if (++count <= 20)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1014: FILE: fs/compat_ioctl.c:960:
+				printk("%s: Unknown fb ioctl cmd fd(%d) "

WARNING:SPLIT_STRING: quoted string split across lines
#1015: FILE: fs/compat_ioctl.c:961:
+				printk("%s: Unknown fb ioctl cmd fd(%d) "
+				       "cmd(%08x) arg(%08lx)\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1016: FILE: fs/compat_ioctl.c:962:
+				       __FUNCTION__, fd, cmd, arg);

ERROR:SPACING: space required before the open parenthesis '('
#1017: FILE: fs/compat_ioctl.c:963:
+		} while(0);

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1018: FILE: fs/compat_ioctl.c:964:
+		return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#1027: FILE: fs/compat_ioctl.c:973:
+		err = __copy_to_user((char *)((struct fb_fix_screeninfo32 *)arg)->id, (char *)fix.id, sizeof(fix.id));

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#1028: FILE: fs/compat_ioctl.c:974:
+		err |= __put_user((__u32)(unsigned long)fix.smem_start, &((struct fb_fix_screeninfo32 *)arg)->smem_start);

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1036: FILE: fs/compat_ioctl.c:982:
+		err |= __put_user(fix.line_length, &((struct fb_fix_screeninfo32 *)arg)->line_length);

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#1037: FILE: fs/compat_ioctl.c:983:
+		err |= __put_user((__u32)(unsigned long)fix.mmio_start, &((struct fb_fix_screeninfo32 *)arg)->mmio_start);

WARNING:LONG_LINE: line length of 137 exceeds 100 columns
#1040: FILE: fs/compat_ioctl.c:986:
+		err |= __copy_to_user((char *)((struct fb_fix_screeninfo32 *)arg)->reserved, (char *)fix.reserved, sizeof(fix.reserved));

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#1047: FILE: fs/compat_ioctl.c:993:
+			err |= __copy_to_user(compat_ptr(transp), cmap.transp, cmap.len * sizeof(__u16));

WARNING:TRAILING_SEMICOLON: trailing semicolon indicates no statements, indent implies otherwise
#1055: FILE: fs/compat_ioctl.c:1001:
+out:	if (cmap.red) kfree(cmap.red);
+	if (cmap.green) kfree(cmap.green);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1055: FILE: fs/compat_ioctl.c:1001:
+out:	if (cmap.red) kfree(cmap.red);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1056: FILE: fs/compat_ioctl.c:1002:
+	if (cmap.green) kfree(cmap.green);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1057: FILE: fs/compat_ioctl.c:1003:
+	if (cmap.blue) kfree(cmap.blue);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1058: FILE: fs/compat_ioctl.c:1004:
+	if (cmap.transp) kfree(cmap.transp);

ERROR:SPACING: space required before the open parenthesis '('
#1073: FILE: fs/compat_ioctl.c:1019:
+	if(error == 0) {

ERROR:SPACING: space required before the open parenthesis '('
#1075: FILE: fs/compat_ioctl.c:1021:
+		if(put_user(kval, uvp))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1081: FILE: fs/compat_ioctl.c:1027:
+
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1082: FILE: fs/compat_ioctl.c:1028:
+typedef struct sg_io_hdr32 {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1090: FILE: fs/compat_ioctl.c:1036:
+	compat_uint_t dxferp;		/* [i], [*io] points to data transfer memory
+					      or scatter gather list */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1090: FILE: fs/compat_ioctl.c:1036:
+					      or scatter gather list */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#1108: FILE: fs/compat_ioctl.c:1054:
+typedef struct sg_iovec32 {

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#1123: FILE: fs/compat_ioctl.c:1069:
+	sgp->dxferp = kmalloc(sgp->iovec_count *
+			      sizeof(sg_iovec_t), GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#1130: FILE: fs/compat_ioctl.c:1076:
+	kiov = (sg_iovec_t *) sgp->dxferp;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1133: FILE: fs/compat_ioctl.c:1079:
+		u32 iov_base32;
+		if (__get_user(iov_base32, &uiov->iov_base) ||

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1201: FILE: fs/compat_ioctl.c:1147:
+		if ((ret = alloc_sg_iovec(&sg_io64, dxferp32))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1207: FILE: fs/compat_ioctl.c:1153:
+^I^Iif (err) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1210: FILE: fs/compat_ioctl.c:1156:
+^I^Isg_io64.dxferp = compat_ptr(dxferp32); $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1220: FILE: fs/compat_ioctl.c:1166:
+	set_fs (KERNEL_DS);

CHECK:SPACING: No space is necessary after a cast
#1221: FILE: fs/compat_ioctl.c:1167:
+	err = sys_ioctl (fd, cmd, (unsigned long) &sg_io64);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1221: FILE: fs/compat_ioctl.c:1167:
+	err = sys_ioctl (fd, cmd, (unsigned long) &sg_io64);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1222: FILE: fs/compat_ioctl.c:1168:
+	set_fs (old_fs);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1243: FILE: fs/compat_ioctl.c:1189:
+	if (sg_io64.cmdp)
+		kfree(sg_io64.cmdp);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1245: FILE: fs/compat_ioctl.c:1191:
+	if (sg_io64.sbp)
+		kfree(sg_io64.sbp);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#1246: FILE: fs/compat_ioctl.c:1192:
+	if (sg_io64.dxferp && sg_io64.iovec_count)
+			free_sg_iovec(&sg_io64);

CHECK:SPACING: No space is necessary after a cast
#1261: FILE: fs/compat_ioctl.c:1207:
+	struct sock_fprog32 *u_fprog32 = (struct sock_fprog32 *) arg;

CHECK:SPACING: No space is necessary after a cast
#1282: FILE: fs/compat_ioctl.c:1228:
+	return sys_ioctl(fd, cmd, (unsigned long) u_fprog64);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1290: FILE: fs/compat_ioctl.c:1236:
+};
+#define PPPIOCSCOMPRESS32	_IOW('t', 77, struct ppp_option_data32)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1296: FILE: fs/compat_ioctl.c:1242:
+};
+#define PPPIOCGIDLE32		_IOR('t', 63, struct ppp_idle32)

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#1315: FILE: fs/compat_ioctl.c:1261:
+		if (copy_from_user(&data32, (struct ppp_option_data32 *)arg, sizeof(struct ppp_option_data32)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1317: FILE: fs/compat_ioctl.c:1263:
+^I^Iif (data32.length > PAGE_SIZE) $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1319: FILE: fs/compat_ioctl.c:1265:
+		data.ptr = kmalloc (data32.length, GFP_KERNEL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1334: FILE: fs/compat_ioctl.c:1280:
+			static int count;
+			if (++count <= 20)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1335: FILE: fs/compat_ioctl.c:1281:
+				printk("ppp_ioctl: Unknown cmd fd(%d) "

WARNING:SPLIT_STRING: quoted string split across lines
#1336: FILE: fs/compat_ioctl.c:1282:
+				printk("ppp_ioctl: Unknown cmd fd(%d) "
+				       "cmd(%08x) arg(%08x)\n",

ERROR:SPACING: space required before the open parenthesis '('
#1338: FILE: fs/compat_ioctl.c:1284:
+		} while(0);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1341: FILE: fs/compat_ioctl.c:1287:
+	set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1342: FILE: fs/compat_ioctl.c:1288:
+	err = sys_ioctl (fd, kcmd, (unsigned long)karg);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1343: FILE: fs/compat_ioctl.c:1289:
+	set_fs (old_fs);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1362: FILE: fs/compat_ioctl.c:1308:
+
+

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1372: FILE: fs/compat_ioctl.c:1318:
+};
+#define MTIOCGET32	_IOR('m', 2, struct mtget32)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1377: FILE: fs/compat_ioctl.c:1323:
+};
+#define MTIOCPOS32	_IOR('m', 3, struct mtpos32)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1400: FILE: fs/compat_ioctl.c:1346:
+};
+#define	MTIOCGETCONFIG32	_IOR('m', 4, struct mtconfiginfo32)

ERROR:SPACING: space required before the open parenthesis '('
#1413: FILE: fs/compat_ioctl.c:1359:
+	switch(cmd) {

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#1437: FILE: fs/compat_ioctl.c:1383:
+				     + sizeof(((struct mtconfiginfo32 *)arg)->debug), sizeof(__u32));

WARNING:LINE_SPACING: Missing a blank line after declarations
#1444: FILE: fs/compat_ioctl.c:1390:
+			static int count;
+			if (++count <= 20)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1445: FILE: fs/compat_ioctl.c:1391:
+				printk("mt_ioctl: Unknown cmd fd(%d) "

WARNING:SPLIT_STRING: quoted string split across lines
#1446: FILE: fs/compat_ioctl.c:1392:
+				printk("mt_ioctl: Unknown cmd fd(%d) "
+				       "cmd(%08x) arg(%08x)\n",

ERROR:SPACING: space required before the open parenthesis '('
#1448: FILE: fs/compat_ioctl.c:1394:
+		} while(0);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1451: FILE: fs/compat_ioctl.c:1397:
+	set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1452: FILE: fs/compat_ioctl.c:1398:
+	err = sys_ioctl (fd, kcmd, (unsigned long)karg);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1453: FILE: fs/compat_ioctl.c:1399:
+	set_fs (old_fs);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1477: FILE: fs/compat_ioctl.c:1423:
+^I^I^I    ^I^I   + sizeof(((struct mtconfiginfo32 *)arg)->debug),$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1477: FILE: fs/compat_ioctl.c:1423:
+^I^I^I    ^I^I   + sizeof(((struct mtconfiginfo32 *)arg)->debug),$

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1483: FILE: fs/compat_ioctl.c:1429:
+	return err ? -EFAULT: 0;
 	                    ^

ERROR:SPACING: space required before the open parenthesis '('
#1519: FILE: fs/compat_ioctl.c:1465:
+	switch(cmd) {

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1527: FILE: fs/compat_ioctl.c:1473:
+		err |= __get_user(cdread.cdread_buflen, &((struct cdrom_read32 *)arg)->cdread_buflen);

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#1536: FILE: fs/compat_ioctl.c:1482:
+		err = copy_from_user(&cdreadaudio.addr, &((struct cdrom_read_audio32 *)arg)->addr, sizeof(cdreadaudio.addr));

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#1537: FILE: fs/compat_ioctl.c:1483:
+		err |= __get_user(cdreadaudio.addr_format, &((struct cdrom_read_audio32 *)arg)->addr_format);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1538: FILE: fs/compat_ioctl.c:1484:
+^I^Ierr |= __get_user(cdreadaudio.nframes, &((struct cdrom_read_audio32 *)arg)->nframes); $

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1538: FILE: fs/compat_ioctl.c:1484:
+		err |= __get_user(cdreadaudio.nframes, &((struct cdrom_read_audio32 *)arg)->nframes); 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1542: FILE: fs/compat_ioctl.c:1488:
+^I^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1543: FILE: fs/compat_ioctl.c:1489:
+		
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1544: FILE: fs/compat_ioctl.c:1490:
+		if (verify_area(VERIFY_WRITE, compat_ptr(addr), cdreadaudio.nframes*2352))
 		                                                                   ^

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#1550: FILE: fs/compat_ioctl.c:1496:
+		err = copy_from_user(cgc.cmd, &((struct cdrom_generic_command32 *)arg)->cmd, sizeof(cgc.cmd));

WARNING:LINE_SPACING: Missing a blank line after declarations
#1562: FILE: fs/compat_ioctl.c:1508:
+			static int count;
+			if (++count <= 20)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1563: FILE: fs/compat_ioctl.c:1509:
+				printk("cdrom_ioctl: Unknown cmd fd(%d) "

WARNING:SPLIT_STRING: quoted string split across lines
#1564: FILE: fs/compat_ioctl.c:1510:
+				printk("cdrom_ioctl: Unknown cmd fd(%d) "
+				       "cmd(%08x) arg(%08x)\n",

ERROR:SPACING: space required before the open parenthesis '('
#1566: FILE: fs/compat_ioctl.c:1512:
+		} while(0);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1569: FILE: fs/compat_ioctl.c:1515:
+	set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1570: FILE: fs/compat_ioctl.c:1516:
+	err = sys_ioctl (fd, cmd, (unsigned long)karg);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1571: FILE: fs/compat_ioctl.c:1517:
+	set_fs (old_fs);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1573: FILE: fs/compat_ioctl.c:1519:
+	if (data)
+		kfree(data);

ERROR:SPACING: space required before the open parenthesis '('
#1598: FILE: fs/compat_ioctl.c:1544:
+	switch(cmd) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1604: FILE: fs/compat_ioctl.c:1550:
+^I^I$

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#1605: FILE: fs/compat_ioctl.c:1551:
+		err |= __copy_from_user((char *)&l.lo_offset, (char *)&((struct loop_info32 *)arg)->lo_offset,

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#1606: FILE: fs/compat_ioctl.c:1552:
+					   8 + (unsigned long)l.lo_init - (unsigned long)&l.lo_offset);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1610: FILE: fs/compat_ioctl.c:1556:
+			set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1611: FILE: fs/compat_ioctl.c:1557:
+			err = sys_ioctl (fd, cmd, (unsigned long)&l);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1612: FILE: fs/compat_ioctl.c:1558:
+			set_fs (old_fs);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1616: FILE: fs/compat_ioctl.c:1562:
+		set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1617: FILE: fs/compat_ioctl.c:1563:
+		err = sys_ioctl (fd, cmd, (unsigned long)&l);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1618: FILE: fs/compat_ioctl.c:1564:
+		set_fs (old_fs);

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#1625: FILE: fs/compat_ioctl.c:1571:
+					   (char *)&l.lo_offset, (unsigned long)l.lo_init - (unsigned long)&l.lo_offset);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1632: FILE: fs/compat_ioctl.c:1578:
+		static int count;
+		if (++count <= 20)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1633: FILE: fs/compat_ioctl.c:1579:
+			printk("%s: Unknown loop ioctl cmd, fd(%d) "

WARNING:SPLIT_STRING: quoted string split across lines
#1634: FILE: fs/compat_ioctl.c:1580:
+			printk("%s: Unknown loop ioctl cmd, fd(%d) "
+			       "cmd(%08x) arg(%08lx)\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1635: FILE: fs/compat_ioctl.c:1581:
+			       __FUNCTION__, fd, cmd, arg);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1641: FILE: fs/compat_ioctl.c:1587:
+extern int tty_ioctl(struct inode * inode, struct file * file, unsigned int cmd, unsigned long arg);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1641: FILE: fs/compat_ioctl.c:1587:
+extern int tty_ioctl(struct inode * inode, struct file * file, unsigned int cmd, unsigned long arg);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1647: FILE: fs/compat_ioctl.c:1593:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1650: FILE: fs/compat_ioctl.c:1596:
+^I                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1650: FILE: fs/compat_ioctl.c:1596:
+^I                $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1654: FILE: fs/compat_ioctl.c:1600:
+^I                                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1654: FILE: fs/compat_ioctl.c:1600:
+^I                                                $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1657: FILE: fs/compat_ioctl.c:1603:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1664: FILE: fs/compat_ioctl.c:1610:
+^Ireturn 0;                                                    $

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#1673: FILE: fs/compat_ioctl.c:1619:
+static int do_fontx_ioctl(unsigned int fd, int cmd, struct consolefontdesc32 *user_cfd, struct file *file)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1680: FILE: fs/compat_ioctl.c:1626:
+	if (perm < 0) return perm;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1681: FILE: fs/compat_ioctl.c:1627:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1684: FILE: fs/compat_ioctl.c:1630:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1686: FILE: fs/compat_ioctl.c:1632:
+ ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1686: FILE: fs/compat_ioctl.c:1632:
+ ^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1686: FILE: fs/compat_ioctl.c:1632:
+ ^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1727: FILE: fs/compat_ioctl.c:1673:
+                                        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1727: FILE: fs/compat_ioctl.c:1673:
+                                        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1727: FILE: fs/compat_ioctl.c:1673:
+                                        $

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#1728: FILE: fs/compat_ioctl.c:1674:
+static int do_kdfontop_ioctl(unsigned int fd, unsigned int cmd, struct console_font_op32 *fontop, struct file *file)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1733: FILE: fs/compat_ioctl.c:1679:
+^I$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1734: FILE: fs/compat_ioctl.c:1680:
+	if (perm < 0) return perm;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1735: FILE: fs/compat_ioctl.c:1681:
+^I$

CHECK:SPACING: No space is necessary after a cast
#1736: FILE: fs/compat_ioctl.c:1682:
+	if (copy_from_user(&op, (void *) fontop, sizeof(struct console_font_op32)))

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1744: FILE: fs/compat_ioctl.c:1690:
+	if (i) return i;

CHECK:SPACING: No space is necessary after a cast
#1746: FILE: fs/compat_ioctl.c:1692:
+	if (copy_to_user((void *) fontop, &op, sizeof(struct console_font_op32)))

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#1756: FILE: fs/compat_ioctl.c:1702:
+static int do_unimap_ioctl(unsigned int fd, unsigned int cmd, struct unimapdesc32 *user_ud, struct file *file)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1760: FILE: fs/compat_ioctl.c:1706:
+^I$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1761: FILE: fs/compat_ioctl.c:1707:
+	if (perm < 0) return perm;

WARNING:SIZEOF_PARENTHESIS: sizeof tmp should be sizeof(tmp)
#1762: FILE: fs/compat_ioctl.c:1708:
+	if (copy_from_user(&tmp, user_ud, sizeof tmp))

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1766: FILE: fs/compat_ioctl.c:1712:
+		if (!perm) return -EPERM;

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#1769: FILE: fs/compat_ioctl.c:1715:
+		return con_get_unimap(fg_console, tmp.entry_ct, &(user_ud->entry_ct), compat_ptr(tmp.entries));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around user_ud->entry_ct
#1769: FILE: fs/compat_ioctl.c:1715:
+		return con_get_unimap(fg_console, tmp.entry_ct, &(user_ud->entry_ct), compat_ptr(tmp.entries));

ERROR:CODE_INDENT: code indent should use tabs where possible
#1793: FILE: fs/compat_ioctl.c:1739:
+        compat_int_t^Inumber;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1793: FILE: fs/compat_ioctl.c:1739:
+        compat_int_t^Inumber;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1794: FILE: fs/compat_ioctl.c:1740:
+        compat_int_t^Ilength;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1794: FILE: fs/compat_ioctl.c:1740:
+        compat_int_t^Ilength;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1795: FILE: fs/compat_ioctl.c:1741:
+        compat_caddr_t^Iarg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1795: FILE: fs/compat_ioctl.c:1741:
+        compat_caddr_t^Iarg;$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1803: FILE: fs/compat_ioctl.c:1749:
+#define ATM_GETLINKRATE32 _IOW('a', ATMIOC_ITF+1, struct atmif_sioc32)
                                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1804: FILE: fs/compat_ioctl.c:1750:
+#define ATM_GETNAMES32    _IOW('a', ATMIOC_ITF+3, struct atm_iobuf32)
                                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1805: FILE: fs/compat_ioctl.c:1751:
+#define ATM_GETTYPE32     _IOW('a', ATMIOC_ITF+4, struct atmif_sioc32)
                                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1806: FILE: fs/compat_ioctl.c:1752:
+#define ATM_GETESI32	  _IOW('a', ATMIOC_ITF+5, struct atmif_sioc32)
                     	                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1807: FILE: fs/compat_ioctl.c:1753:
+#define ATM_GETADDR32	  _IOW('a', ATMIOC_ITF+6, struct atmif_sioc32)
                      	                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1808: FILE: fs/compat_ioctl.c:1754:
+#define ATM_RSTADDR32	  _IOW('a', ATMIOC_ITF+7, struct atmif_sioc32)
                      	                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1809: FILE: fs/compat_ioctl.c:1755:
+#define ATM_ADDADDR32	  _IOW('a', ATMIOC_ITF+8, struct atmif_sioc32)
                      	                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1810: FILE: fs/compat_ioctl.c:1756:
+#define ATM_DELADDR32	  _IOW('a', ATMIOC_ITF+9, struct atmif_sioc32)
                      	                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1811: FILE: fs/compat_ioctl.c:1757:
+#define ATM_GETCIRANGE32  _IOW('a', ATMIOC_ITF+10, struct atmif_sioc32)
                                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1812: FILE: fs/compat_ioctl.c:1758:
+#define ATM_SETCIRANGE32  _IOW('a', ATMIOC_ITF+11, struct atmif_sioc32)
                                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1813: FILE: fs/compat_ioctl.c:1759:
+#define ATM_SETESI32      _IOW('a', ATMIOC_ITF+12, struct atmif_sioc32)
                                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1814: FILE: fs/compat_ioctl.c:1760:
+#define ATM_SETESIF32     _IOW('a', ATMIOC_ITF+13, struct atmif_sioc32)
                                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1815: FILE: fs/compat_ioctl.c:1761:
+#define ATM_GETSTAT32     _IOW('a', ATMIOC_SARCOM+0, struct atmif_sioc32)
                                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1816: FILE: fs/compat_ioctl.c:1762:
+#define ATM_GETSTATZ32    _IOW('a', ATMIOC_SARCOM+1, struct atmif_sioc32)
                                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1817: FILE: fs/compat_ioctl.c:1763:
+#define ATM_GETLOOP32	  _IOW('a', ATMIOC_SARCOM+2, struct atmif_sioc32)
                      	                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1818: FILE: fs/compat_ioctl.c:1764:
+#define ATM_SETLOOP32	  _IOW('a', ATMIOC_SARCOM+3, struct atmif_sioc32)
                      	                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1819: FILE: fs/compat_ioctl.c:1765:
+#define ATM_QUERYLOOP32	  _IOW('a', ATMIOC_SARCOM+4, struct atmif_sioc32)
                        	                         ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1822: FILE: fs/compat_ioctl.c:1768:
+        unsigned int cmd32;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1822: FILE: fs/compat_ioctl.c:1768:
+        unsigned int cmd32;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1823: FILE: fs/compat_ioctl.c:1769:
+        unsigned int cmd;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1823: FILE: fs/compat_ioctl.c:1769:
+        unsigned int cmd;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1825: FILE: fs/compat_ioctl.c:1771:
+        { ATM_GETLINKRATE32, ATM_GETLINKRATE },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1825: FILE: fs/compat_ioctl.c:1771:
+        { ATM_GETLINKRATE32, ATM_GETLINKRATE },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1827: FILE: fs/compat_ioctl.c:1773:
+        { ATM_GETTYPE32,     ATM_GETTYPE },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1827: FILE: fs/compat_ioctl.c:1773:
+        { ATM_GETTYPE32,     ATM_GETTYPE },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1828: FILE: fs/compat_ioctl.c:1774:
+        { ATM_GETESI32,      ATM_GETESI },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1828: FILE: fs/compat_ioctl.c:1774:
+        { ATM_GETESI32,      ATM_GETESI },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1829: FILE: fs/compat_ioctl.c:1775:
+        { ATM_GETADDR32,     ATM_GETADDR },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1829: FILE: fs/compat_ioctl.c:1775:
+        { ATM_GETADDR32,     ATM_GETADDR },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1830: FILE: fs/compat_ioctl.c:1776:
+        { ATM_RSTADDR32,     ATM_RSTADDR },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1830: FILE: fs/compat_ioctl.c:1776:
+        { ATM_RSTADDR32,     ATM_RSTADDR },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1831: FILE: fs/compat_ioctl.c:1777:
+        { ATM_ADDADDR32,     ATM_ADDADDR },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1831: FILE: fs/compat_ioctl.c:1777:
+        { ATM_ADDADDR32,     ATM_ADDADDR },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1832: FILE: fs/compat_ioctl.c:1778:
+        { ATM_DELADDR32,     ATM_DELADDR },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1832: FILE: fs/compat_ioctl.c:1778:
+        { ATM_DELADDR32,     ATM_DELADDR },$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1833: FILE: fs/compat_ioctl.c:1779:
+        { ATM_GETCIRANGE32,  ATM_GETCIRANGE },$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1833: FILE: fs/compat_ioctl.c:1779:
+        { ATM_GETCIRANGE32,  ATM_GETCIRANGE },$

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(atm_ioctl_map)
#1844: FILE: fs/compat_ioctl.c:1790:
+#define NR_ATM_IOCTL (sizeof(atm_ioctl_map)/sizeof(atm_ioctl_map[0]))

The ARRAY_SIZE(foo) macro should be preferred over
sizeof(foo)/sizeof(foo[0]) for finding number of elements in an
array.

The macro is defined in include/linux/kernel.h::

  #define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1844: FILE: fs/compat_ioctl.c:1790:
+#define NR_ATM_IOCTL (sizeof(atm_ioctl_map)/sizeof(atm_ioctl_map[0]))
                                            ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1846: FILE: fs/compat_ioctl.c:1792:
+
+

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1854: FILE: fs/compat_ioctl.c:1800:
+	err = copy_from_user(&iobuf32, (struct atm_iobuf32*)arg,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1855: FILE: fs/compat_ioctl.c:1801:
+	err = copy_from_user(&iobuf32, (struct atm_iobuf32*)arg,
+	    sizeof(struct atm_iobuf32));

CHECK:SPACING: No space is necessary after a cast
#1861: FILE: fs/compat_ioctl.c:1807:
+	if (iobuf32.buffer == (compat_caddr_t) NULL || iobuf32.length == 0) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1862: FILE: fs/compat_ioctl.c:1808:
+		iobuf.buffer = (void*)(unsigned long)iobuf32.buffer;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1869: FILE: fs/compat_ioctl.c:1815:
+	old_fs = get_fs(); set_fs (KERNEL_DS);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1870: FILE: fs/compat_ioctl.c:1816:
+^Ierr = sys_ioctl (fd, cmd, (unsigned long)&iobuf);      $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1870: FILE: fs/compat_ioctl.c:1816:
+	err = sys_ioctl (fd, cmd, (unsigned long)&iobuf);      

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1871: FILE: fs/compat_ioctl.c:1817:
+	set_fs (old_fs);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1872: FILE: fs/compat_ioctl.c:1818:
+        if(!err)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1872: FILE: fs/compat_ioctl.c:1818:
+        if(!err)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#1872: FILE: fs/compat_ioctl.c:1818:
+        if(!err)
+	err = __put_user(iobuf.length, &(((struct atm_iobuf32*)arg)->length));

ERROR:SPACING: space required before the open parenthesis '('
#1872: FILE: fs/compat_ioctl.c:1818:
+        if(!err)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1873: FILE: fs/compat_ioctl.c:1819:
+	err = __put_user(iobuf.length, &(((struct atm_iobuf32*)arg)->length));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1878: FILE: fs/compat_ioctl.c:1824:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#1881: FILE: fs/compat_ioctl.c:1827:
+        struct atmif_sioc32 sioc32;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1881: FILE: fs/compat_ioctl.c:1827:
+        struct atmif_sioc32 sioc32;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1882: FILE: fs/compat_ioctl.c:1828:
+        struct atmif_sioc   sioc = { 0, 0, NULL };$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1882: FILE: fs/compat_ioctl.c:1828:
+        struct atmif_sioc   sioc = { 0, 0, NULL };$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1883: FILE: fs/compat_ioctl.c:1829:
+        mm_segment_t old_fs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1883: FILE: fs/compat_ioctl.c:1829:
+        mm_segment_t old_fs;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1884: FILE: fs/compat_ioctl.c:1830:
+        int err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1884: FILE: fs/compat_ioctl.c:1830:
+        int err;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1885: FILE: fs/compat_ioctl.c:1831:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1885: FILE: fs/compat_ioctl.c:1831:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1885: FILE: fs/compat_ioctl.c:1831:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1886: FILE: fs/compat_ioctl.c:1832:
+        err = copy_from_user(&sioc32, (struct atmif_sioc32*)arg,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1886: FILE: fs/compat_ioctl.c:1832:
+        err = copy_from_user(&sioc32, (struct atmif_sioc32*)arg,$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1886: FILE: fs/compat_ioctl.c:1832:
+        err = copy_from_user(&sioc32, (struct atmif_sioc32*)arg,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1888: FILE: fs/compat_ioctl.c:1834:
+        if (err)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1888: FILE: fs/compat_ioctl.c:1834:
+        if (err)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1889: FILE: fs/compat_ioctl.c:1835:
+                return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1889: FILE: fs/compat_ioctl.c:1835:
+                return -EFAULT;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1891: FILE: fs/compat_ioctl.c:1837:
+        sioc.number = sioc32.number;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1891: FILE: fs/compat_ioctl.c:1837:
+        sioc.number = sioc32.number;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1892: FILE: fs/compat_ioctl.c:1838:
+        sioc.length = sioc32.length;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1892: FILE: fs/compat_ioctl.c:1838:
+        sioc.length = sioc32.length;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1893: FILE: fs/compat_ioctl.c:1839:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1893: FILE: fs/compat_ioctl.c:1839:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1893: FILE: fs/compat_ioctl.c:1839:
+        $

CHECK:SPACING: No space is necessary after a cast
#1894: FILE: fs/compat_ioctl.c:1840:
+	if (sioc32.arg == (compat_caddr_t) NULL || sioc32.length == 0) {

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1895: FILE: fs/compat_ioctl.c:1841:
+		sioc.arg = (void*)(unsigned long)sioc32.arg;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1896: FILE: fs/compat_ioctl.c:1842:
+        } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1896: FILE: fs/compat_ioctl.c:1842:
+        } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1900: FILE: fs/compat_ioctl.c:1846:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1900: FILE: fs/compat_ioctl.c:1846:
+        }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1901: FILE: fs/compat_ioctl.c:1847:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1901: FILE: fs/compat_ioctl.c:1847:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1901: FILE: fs/compat_ioctl.c:1847:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1902: FILE: fs/compat_ioctl.c:1848:
+        old_fs = get_fs(); set_fs (KERNEL_DS);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1902: FILE: fs/compat_ioctl.c:1848:
+        old_fs = get_fs(); set_fs (KERNEL_DS);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1902: FILE: fs/compat_ioctl.c:1848:
+        old_fs = get_fs(); set_fs (KERNEL_DS);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1903: FILE: fs/compat_ioctl.c:1849:
+        err = sys_ioctl (fd, cmd, (unsigned long)&sioc);^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1903: FILE: fs/compat_ioctl.c:1849:
+        err = sys_ioctl (fd, cmd, (unsigned long)&sioc);^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1903: FILE: fs/compat_ioctl.c:1849:
+        err = sys_ioctl (fd, cmd, (unsigned long)&sioc);^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1903: FILE: fs/compat_ioctl.c:1849:
+        err = sys_ioctl (fd, cmd, (unsigned long)&sioc);	

ERROR:CODE_INDENT: code indent should use tabs where possible
#1904: FILE: fs/compat_ioctl.c:1850:
+        set_fs (old_fs);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1904: FILE: fs/compat_ioctl.c:1850:
+        set_fs (old_fs);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1904: FILE: fs/compat_ioctl.c:1850:
+        set_fs (old_fs);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#1905: FILE: fs/compat_ioctl.c:1851:
+	if (!err)
+        err = __put_user(sioc.length, &(((struct atmif_sioc32*)arg)->length));

ERROR:CODE_INDENT: code indent should use tabs where possible
#1906: FILE: fs/compat_ioctl.c:1852:
+        err = __put_user(sioc.length, &(((struct atmif_sioc32*)arg)->length));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1906: FILE: fs/compat_ioctl.c:1852:
+        err = __put_user(sioc.length, &(((struct atmif_sioc32*)arg)->length));$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1906: FILE: fs/compat_ioctl.c:1852:
+        err = __put_user(sioc.length, &(((struct atmif_sioc32*)arg)->length));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1910: FILE: fs/compat_ioctl.c:1856:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#1913: FILE: fs/compat_ioctl.c:1859:
+        int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1913: FILE: fs/compat_ioctl.c:1859:
+        int i;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1914: FILE: fs/compat_ioctl.c:1860:
+        unsigned int cmd = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1914: FILE: fs/compat_ioctl.c:1860:
+        unsigned int cmd = 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1915: FILE: fs/compat_ioctl.c:1861:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1915: FILE: fs/compat_ioctl.c:1861:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1915: FILE: fs/compat_ioctl.c:1861:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1934: FILE: fs/compat_ioctl.c:1880:
+^I        if (i == NR_ATM_IOCTL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#1934: FILE: fs/compat_ioctl.c:1880:
+	        if (i == NR_ATM_IOCTL) {
+	        return -EINVAL;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1934: FILE: fs/compat_ioctl.c:1880:
+	        if (i == NR_ATM_IOCTL) {
+	        return -EINVAL;
+	        }

ERROR:CODE_INDENT: code indent should use tabs where possible
#1935: FILE: fs/compat_ioctl.c:1881:
+^I        return -EINVAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1936: FILE: fs/compat_ioctl.c:1882:
+^I        }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1937: FILE: fs/compat_ioctl.c:1883:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1937: FILE: fs/compat_ioctl.c:1883:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1937: FILE: fs/compat_ioctl.c:1883:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1938: FILE: fs/compat_ioctl.c:1884:
+        switch (cmd) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1938: FILE: fs/compat_ioctl.c:1884:
+        switch (cmd) {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1941: FILE: fs/compat_ioctl.c:1887:
+^I    $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1943: FILE: fs/compat_ioctl.c:1889:
+        case ATM_GETTYPE:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1943: FILE: fs/compat_ioctl.c:1889:
+        case ATM_GETTYPE:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1944: FILE: fs/compat_ioctl.c:1890:
+        case ATM_GETESI:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1944: FILE: fs/compat_ioctl.c:1890:
+        case ATM_GETESI:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1945: FILE: fs/compat_ioctl.c:1891:
+        case ATM_GETADDR:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1945: FILE: fs/compat_ioctl.c:1891:
+        case ATM_GETADDR:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1946: FILE: fs/compat_ioctl.c:1892:
+        case ATM_RSTADDR:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1946: FILE: fs/compat_ioctl.c:1892:
+        case ATM_RSTADDR:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1947: FILE: fs/compat_ioctl.c:1893:
+        case ATM_ADDADDR:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1947: FILE: fs/compat_ioctl.c:1893:
+        case ATM_ADDADDR:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1948: FILE: fs/compat_ioctl.c:1894:
+        case ATM_DELADDR:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1948: FILE: fs/compat_ioctl.c:1894:
+        case ATM_DELADDR:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1949: FILE: fs/compat_ioctl.c:1895:
+        case ATM_GETCIRANGE:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1949: FILE: fs/compat_ioctl.c:1895:
+        case ATM_GETCIRANGE:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1958: FILE: fs/compat_ioctl.c:1904:
+                return do_atmif_sioc(fd, cmd, arg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1958: FILE: fs/compat_ioctl.c:1904:
+                return do_atmif_sioc(fd, cmd, arg);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1959: FILE: fs/compat_ioctl.c:1905:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1959: FILE: fs/compat_ioctl.c:1905:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1961: FILE: fs/compat_ioctl.c:1907:
+        return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1961: FILE: fs/compat_ioctl.c:1907:
+        return -EINVAL;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1981: FILE: fs/compat_ioctl.c:1927:
+                                $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1981: FILE: fs/compat_ioctl.c:1927:
+                                $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1981: FILE: fs/compat_ioctl.c:1927:
+                                $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1988: FILE: fs/compat_ioctl.c:1934:
+^I$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1993: FILE: fs/compat_ioctl.c:1939:
+	if (err) return err;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1999: FILE: fs/compat_ioctl.c:1945:
+                if (copy_from_user(&p, a.data, sizeof(struct blkpg_partition)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1999: FILE: fs/compat_ioctl.c:1945:
+                if (copy_from_user(&p, a.data, sizeof(struct blkpg_partition)))$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2002: FILE: fs/compat_ioctl.c:1948:
+		set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2004: FILE: fs/compat_ioctl.c:1950:
+		set_fs (old_fs);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2007: FILE: fs/compat_ioctl.c:1953:
+^I}                                        $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2017: FILE: fs/compat_ioctl.c:1963:
+#define BLKBSZGET_32   _IOR(0x12,112,int)
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2017: FILE: fs/compat_ioctl.c:1963:
+#define BLKBSZGET_32   _IOR(0x12,112,int)
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2018: FILE: fs/compat_ioctl.c:1964:
+#define BLKBSZSET_32   _IOW(0x12,113,int)
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2018: FILE: fs/compat_ioctl.c:1964:
+#define BLKBSZSET_32   _IOW(0x12,113,int)
                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2019: FILE: fs/compat_ioctl.c:1965:
+#define BLKGETSIZE64_32        _IOR(0x12,114,int)
                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2019: FILE: fs/compat_ioctl.c:1965:
+#define BLKGETSIZE64_32        _IOR(0x12,114,int)
                                             ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2023: FILE: fs/compat_ioctl.c:1969:
+       return sys_ioctl(fd, BLKBSZGET, arg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2028: FILE: fs/compat_ioctl.c:1974:
+       return sys_ioctl(fd, BLKBSZSET, arg);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2032: FILE: fs/compat_ioctl.c:1978:
+                          unsigned long arg)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2032: FILE: fs/compat_ioctl.c:1978:
+static int do_blkgetsize64(unsigned int fd, unsigned int cmd,
+                          unsigned long arg)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2032: FILE: fs/compat_ioctl.c:1978:
+                          unsigned long arg)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2034: FILE: fs/compat_ioctl.c:1980:
+       return sys_ioctl(fd, BLKGETSIZE64, arg);$

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(fd_ioctl_trans_table)
#2149: FILE: fs/compat_ioctl.c:2095:
+#define NR_FD_IOCTL_TRANS (sizeof(fd_ioctl_trans_table)/sizeof(fd_ioctl_trans_table[0]))

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2149: FILE: fs/compat_ioctl.c:2095:
+#define NR_FD_IOCTL_TRANS (sizeof(fd_ioctl_trans_table)/sizeof(fd_ioctl_trans_table[0]))
                                                        ^

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#2166: FILE: fs/compat_ioctl.c:2112:
+	switch (cmd) {
+		case FDSETPRM32:
+		case FDDEFPRM32:
+		case FDGETPRM32:
[...]
+		case FDSETDRVPRM32:
+		case FDGETDRVPRM32:
[...]
+		case FDGETDRVSTAT32:
+		case FDPOLLDRVSTAT32:
[...]
+		case FDGETFDCSTAT32:
[...]
+		case FDWERRORGET32:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2173: FILE: fs/compat_ioctl.c:2119:
+			f = karg = kmalloc(sizeof(struct floppy_struct), GFP_KERNEL);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*karg)...) over kmalloc(sizeof(struct floppy_struct)...)
#2173: FILE: fs/compat_ioctl.c:2119:
+			f = karg = kmalloc(sizeof(struct floppy_struct), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#2199: FILE: fs/compat_ioctl.c:2145:
+			f = karg = kmalloc(sizeof(struct floppy_drive_params), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*karg)...) over kmalloc(sizeof(struct floppy_drive_params)...)
#2199: FILE: fs/compat_ioctl.c:2145:
+			f = karg = kmalloc(sizeof(struct floppy_drive_params), GFP_KERNEL);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#2205: FILE: fs/compat_ioctl.c:2151:
+			err |= __get_user(f->max_dtr, &((struct floppy_drive_params32 *)arg)->max_dtr);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#2209: FILE: fs/compat_ioctl.c:2155:
+			err |= __get_user(f->spinup, &((struct floppy_drive_params32 *)arg)->spinup);

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#2210: FILE: fs/compat_ioctl.c:2156:
+			err |= __get_user(f->spindown, &((struct floppy_drive_params32 *)arg)->spindown);

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#2211: FILE: fs/compat_ioctl.c:2157:
+			err |= __get_user(f->spindown_offset, &((struct floppy_drive_params32 *)arg)->spindown_offset);

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#2212: FILE: fs/compat_ioctl.c:2158:
+			err |= __get_user(f->select_delay, &((struct floppy_drive_params32 *)arg)->select_delay);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#2214: FILE: fs/compat_ioctl.c:2160:
+			err |= __get_user(f->tracks, &((struct floppy_drive_params32 *)arg)->tracks);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#2215: FILE: fs/compat_ioctl.c:2161:
+			err |= __get_user(f->timeout, &((struct floppy_drive_params32 *)arg)->timeout);

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#2216: FILE: fs/compat_ioctl.c:2162:
+			err |= __get_user(f->interleave_sect, &((struct floppy_drive_params32 *)arg)->interleave_sect);

WARNING:LONG_LINE: line length of 139 exceeds 100 columns
#2217: FILE: fs/compat_ioctl.c:2163:
+			err |= __copy_from_user(&f->max_errors, &((struct floppy_drive_params32 *)arg)->max_errors, sizeof(f->max_errors));

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#2219: FILE: fs/compat_ioctl.c:2165:
+			err |= __get_user(f->read_track, &((struct floppy_drive_params32 *)arg)->read_track);

WARNING:LONG_LINE: line length of 137 exceeds 100 columns
#2220: FILE: fs/compat_ioctl.c:2166:
+			err |= __copy_from_user(f->autodetect, ((struct floppy_drive_params32 *)arg)->autodetect, sizeof(f->autodetect));

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#2221: FILE: fs/compat_ioctl.c:2167:
+			err |= __get_user(f->checkfreq, &((struct floppy_drive_params32 *)arg)->checkfreq);

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#2222: FILE: fs/compat_ioctl.c:2168:
+			err |= __get_user(f->native_format, &((struct floppy_drive_params32 *)arg)->native_format);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*karg)...) over kmalloc(sizeof(struct floppy_drive_struct)...)
#2231: FILE: fs/compat_ioctl.c:2177:
+			karg = kmalloc(sizeof(struct floppy_drive_struct), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*karg)...) over kmalloc(sizeof(struct floppy_fdc_state)...)
#2236: FILE: fs/compat_ioctl.c:2182:
+			karg = kmalloc(sizeof(struct floppy_fdc_state), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*karg)...) over kmalloc(sizeof(struct floppy_write_errors)...)
#2241: FILE: fs/compat_ioctl.c:2187:
+			karg = kmalloc(sizeof(struct floppy_write_errors), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2248: FILE: fs/compat_ioctl.c:2194:
+	set_fs (KERNEL_DS);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2249: FILE: fs/compat_ioctl.c:2195:
+	err = sys_ioctl (fd, kcmd, (unsigned long)karg);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2250: FILE: fs/compat_ioctl.c:2196:
+	set_fs (old_fs);

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#2253: FILE: fs/compat_ioctl.c:2199:
+	switch (cmd) {
+		case FDGETPRM32:
[...]
+		case FDGETDRVPRM32:
[...]
+		case FDGETDRVSTAT32:
+		case FDPOLLDRVSTAT32:
[...]
+		case FDGETFDCSTAT32:
[...]
+		case FDWERRORGET32:
[...]
+		default:

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#2275: FILE: fs/compat_ioctl.c:2221:
+			err |= __put_user(f->max_dtr, &((struct floppy_drive_params32 *)arg)->max_dtr);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#2279: FILE: fs/compat_ioctl.c:2225:
+			err |= __put_user(f->spinup, &((struct floppy_drive_params32 *)arg)->spinup);

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#2280: FILE: fs/compat_ioctl.c:2226:
+			err |= __put_user(f->spindown, &((struct floppy_drive_params32 *)arg)->spindown);

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#2281: FILE: fs/compat_ioctl.c:2227:
+			err |= __put_user(f->spindown_offset, &((struct floppy_drive_params32 *)arg)->spindown_offset);

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#2282: FILE: fs/compat_ioctl.c:2228:
+			err |= __put_user(f->select_delay, &((struct floppy_drive_params32 *)arg)->select_delay);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#2284: FILE: fs/compat_ioctl.c:2230:
+			err |= __put_user(f->tracks, &((struct floppy_drive_params32 *)arg)->tracks);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#2285: FILE: fs/compat_ioctl.c:2231:
+			err |= __put_user(f->timeout, &((struct floppy_drive_params32 *)arg)->timeout);

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#2286: FILE: fs/compat_ioctl.c:2232:
+			err |= __put_user(f->interleave_sect, &((struct floppy_drive_params32 *)arg)->interleave_sect);

WARNING:LONG_LINE: line length of 137 exceeds 100 columns
#2287: FILE: fs/compat_ioctl.c:2233:
+			err |= __copy_to_user(&((struct floppy_drive_params32 *)arg)->max_errors, &f->max_errors, sizeof(f->max_errors));

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#2289: FILE: fs/compat_ioctl.c:2235:
+			err |= __put_user(f->read_track, &((struct floppy_drive_params32 *)arg)->read_track);

WARNING:LONG_LINE: line length of 135 exceeds 100 columns
#2290: FILE: fs/compat_ioctl.c:2236:
+			err |= __copy_to_user(((struct floppy_drive_params32 *)arg)->autodetect, f->autodetect, sizeof(f->autodetect));

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#2291: FILE: fs/compat_ioctl.c:2237:
+			err |= __put_user(f->checkfreq, &((struct floppy_drive_params32 *)arg)->checkfreq);

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#2292: FILE: fs/compat_ioctl.c:2238:
+			err |= __put_user(f->native_format, &((struct floppy_drive_params32 *)arg)->native_format);

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#2301: FILE: fs/compat_ioctl.c:2247:
+			err |= __put_user(f->spinup_date, &((struct floppy_drive_struct32 *)arg)->spinup_date);

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#2302: FILE: fs/compat_ioctl.c:2248:
+			err |= __put_user(f->select_date, &((struct floppy_drive_struct32 *)arg)->select_date);

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#2303: FILE: fs/compat_ioctl.c:2249:
+			err |= __put_user(f->first_read_date, &((struct floppy_drive_struct32 *)arg)->first_read_date);

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#2304: FILE: fs/compat_ioctl.c:2250:
+			err |= __put_user(f->probed_format, &((struct floppy_drive_struct32 *)arg)->probed_format);

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#2306: FILE: fs/compat_ioctl.c:2252:
+			err |= __put_user(f->maxblock, &((struct floppy_drive_struct32 *)arg)->maxblock);

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#2307: FILE: fs/compat_ioctl.c:2253:
+			err |= __put_user(f->maxtrack, &((struct floppy_drive_struct32 *)arg)->maxtrack);

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#2308: FILE: fs/compat_ioctl.c:2254:
+			err |= __put_user(f->generation, &((struct floppy_drive_struct32 *)arg)->generation);

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#2309: FILE: fs/compat_ioctl.c:2255:
+			err |= __put_user(f->keep_data, &((struct floppy_drive_struct32 *)arg)->keep_data);

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#2310: FILE: fs/compat_ioctl.c:2256:
+			err |= __put_user(f->fd_ref, &((struct floppy_drive_struct32 *)arg)->fd_ref);

WARNING:LONG_LINE: line length of 107 exceeds 100 columns
#2311: FILE: fs/compat_ioctl.c:2257:
+			err |= __put_user(f->fd_device, &((struct floppy_drive_struct32 *)arg)->fd_device);

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#2312: FILE: fs/compat_ioctl.c:2258:
+			err |= __put_user(f->last_checked, &((struct floppy_drive_struct32 *)arg)->last_checked);

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#2313: FILE: fs/compat_ioctl.c:2259:
+			err |= __put_user((u64)f->dmabuf, &((struct floppy_drive_struct32 *)arg)->dmabuf);

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#2314: FILE: fs/compat_ioctl.c:2260:
+			err |= __put_user((u64)f->bufblocks, &((struct floppy_drive_struct32 *)arg)->bufblocks);

ERROR:CODE_INDENT: code indent should use tabs where possible
#2328: FILE: fs/compat_ioctl.c:2274:
+^I^I^I    ^I^I   + sizeof(((struct floppy_fdc_state32 *)arg)->address),$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2328: FILE: fs/compat_ioctl.c:2274:
+^I^I^I    ^I^I   + sizeof(((struct floppy_fdc_state32 *)arg)->address),$

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#2330: FILE: fs/compat_ioctl.c:2276:
+			err |= __put_user(f->driver_version, &((struct floppy_fdc_state32 *)arg)->driver_version);

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#2331: FILE: fs/compat_ioctl.c:2277:
+			err |= __copy_to_user(((struct floppy_fdc_state32 *)arg)->track, f->track, sizeof(f->track));

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#2338: FILE: fs/compat_ioctl.c:2284:
+			err = __put_user(f->write_errors, &((struct floppy_write_errors32 *)arg)->write_errors);

WARNING:LONG_LINE: line length of 125 exceeds 100 columns
#2339: FILE: fs/compat_ioctl.c:2285:
+			err |= __put_user(f->first_error_sector, &((struct floppy_write_errors32 *)arg)->first_error_sector);

WARNING:LONG_LINE: line length of 133 exceeds 100 columns
#2340: FILE: fs/compat_ioctl.c:2286:
+			err |= __put_user(f->first_error_generation, &((struct floppy_write_errors32 *)arg)->first_error_generation);

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#2341: FILE: fs/compat_ioctl.c:2287:
+			err |= __put_user(f->last_error_sector, &((struct floppy_write_errors32 *)arg)->last_error_sector);

WARNING:LONG_LINE: line length of 131 exceeds 100 columns
#2342: FILE: fs/compat_ioctl.c:2288:
+			err |= __put_user(f->last_error_generation, &((struct floppy_write_errors32 *)arg)->last_error_generation);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#2343: FILE: fs/compat_ioctl.c:2289:
+			err |= __put_user(f->badness, &((struct floppy_write_errors32 *)arg)->badness);

WARNING:TRAILING_SEMICOLON: trailing semicolon indicates no statements, indent implies otherwise
#2352: FILE: fs/compat_ioctl.c:2298:
+out:	if (karg) kfree(karg);
+	return err;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2352: FILE: fs/compat_ioctl.c:2298:
+out:	if (karg) kfree(karg);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'u_int32_t'
#2357: FILE: fs/compat_ioctl.c:2303:
+	u_int32_t start;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'u_int32_t'
#2358: FILE: fs/compat_ioctl.c:2304:
+	u_int32_t length;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2362: FILE: fs/compat_ioctl.c:2308:
+#define MEMWRITEOOB32 ^I_IOWR('M',3,struct mtd_oob_buf32)$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2362: FILE: fs/compat_ioctl.c:2308:
+#define MEMWRITEOOB32 	_IOWR('M',3,struct mtd_oob_buf32)
                       	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2362: FILE: fs/compat_ioctl.c:2308:
+#define MEMWRITEOOB32 	_IOWR('M',3,struct mtd_oob_buf32)
                       	           ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2363: FILE: fs/compat_ioctl.c:2309:
+#define MEMREADOOB32 ^I_IOWR('M',4,struct mtd_oob_buf32)$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2363: FILE: fs/compat_ioctl.c:2309:
+#define MEMREADOOB32 	_IOWR('M',4,struct mtd_oob_buf32)
                      	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2363: FILE: fs/compat_ioctl.c:2309:
+#define MEMREADOOB32 	_IOWR('M',4,struct mtd_oob_buf32)
                      	           ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2367: FILE: fs/compat_ioctl.c:2313:
+^Imm_segment_t ^I^I^Iold_fs ^I= get_fs();$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2368: FILE: fs/compat_ioctl.c:2314:
+^Istruct mtd_oob_buf32^I*uarg ^I= (struct mtd_oob_buf32 *)arg;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2373: FILE: fs/compat_ioctl.c:2319:
+^Iif (get_user(karg.start, &uarg->start) ^I^I||$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2378: FILE: fs/compat_ioctl.c:2324:
+^Ikarg.ptr = compat_ptr(tmp); $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2383: FILE: fs/compat_ioctl.c:2329:
+^Iif (MEMREADOOB32 == cmd) $

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#2383: FILE: fs/compat_ioctl.c:2329:
+	if (MEMREADOOB32 == cmd) 

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#2385: FILE: fs/compat_ioctl.c:2331:
+	else if (MEMWRITEOOB32 == cmd)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#2391: FILE: fs/compat_ioctl.c:2337:
+	if (0 == ret && cmd == MEMREADOOB32) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2397: FILE: fs/compat_ioctl.c:2343:
+}^I$

WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#2445: FILE: fs/compat_ioctl.c:2391:
+/* Note SIOCRTMSG is no longer, so this is safe and * the user would have seen just an -EINVAL anyways. */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2474: FILE: fs/compat_ioctl.c:2420:
+HANDLE_IOCTL(SG_IO,sg_ioctl_trans)
                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2492: FILE: fs/compat_ioctl.c:2438:
+#define AUTOFS_IOC_SETTIMEOUT32 _IOWR(0x93,0x64,unsigned int)
                                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2492: FILE: fs/compat_ioctl.c:2438:
+#define AUTOFS_IOC_SETTIMEOUT32 _IOWR(0x93,0x64,unsigned int)
                                                ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000366823.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 243 errors, 319 warnings, 67 checks, 2491 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000366823.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
