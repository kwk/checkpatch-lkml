WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
This is just an update of the library for handling async SPI messages using kernel threads, one per each SPI controller. The only change is that thread's mutex has been changed to spinlock, in order to make it possible to call transfer function from the interrupt context.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#88: FILE: drivers/spi/spi-thread.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#89: FILE: drivers/spi/spi-thread.c:2:
+ *  drivers/spi/spi-thread.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#92: FILE: drivers/spi/spi-thread.c:5:
+ * ^IVitaly Wool <vwool@ru.mvista.com>$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#93: FILE: drivers/spi/spi-thread.c:6:
+ * ^IDmitry Pervushin <dpervushin@gmail.com>$

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#114: FILE: drivers/spi/spi-thread.c:27:
+#include <asm/atomic.h>

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#125: FILE: drivers/spi/spi-thread.c:38:
+	spinlock_t lock;

WARNING:SPACING: Unnecessary space before function pointer arguments
#126: FILE: drivers/spi/spi-thread.c:39:
+	int (*xfer) (struct spi_master *, struct spi_message *);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct spi_master *' should also have an identifier name
#126: FILE: drivers/spi/spi-thread.c:39:
+	int (*xfer) (struct spi_master *, struct spi_message *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct spi_message *' should also have an identifier name
#126: FILE: drivers/spi/spi-thread.c:39:
+	int (*xfer) (struct spi_master *, struct spi_message *);

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#134: FILE: drivers/spi/spi-thread.c:47:
+int spi_start_async (struct spi_master *master, int (*xfer)(struct spi_master *, struct spi_message *))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#134: FILE: drivers/spi/spi-thread.c:47:
+int spi_start_async (struct spi_master *master, int (*xfer)(struct spi_master *, struct spi_message *))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#136: FILE: drivers/spi/spi-thread.c:49:
+	struct threaded_async_data *td = kzalloc (sizeof (struct threaded_async_data), GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#136: FILE: drivers/spi/spi-thread.c:49:
+	struct threaded_async_data *td = kzalloc (sizeof (struct threaded_async_data), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*td)...) over kzalloc(sizeof (struct threaded_async_data)...)
#136: FILE: drivers/spi/spi-thread.c:49:
+	struct threaded_async_data *td = kzalloc (sizeof (struct threaded_async_data), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#168: FILE: drivers/spi/spi-thread.c:81:
+void spi_stop_async (struct spi_master *master)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#174: FILE: drivers/spi/spi-thread.c:87:
+		atomic_inc (&td->exiting);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#186: FILE: drivers/spi/spi-thread.c:99:
+ * ^IThread wakes up if there is signal to exit (bd->exiting is set)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#187: FILE: drivers/spi/spi-thread.c:100:
+ * ^Ior there are any messages in bus' queue.$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#193: FILE: drivers/spi/spi-thread.c:106:
+	if (!td || atomic_read(&td->exiting)) {
+		goto out;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#218: FILE: drivers/spi/spi-thread.c:131:
+ * ^IThis function is started as separate thread to perform actual$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#219: FILE: drivers/spi/spi-thread.c:132:
+ * ^Itransfers on SPI bus$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#227: FILE: drivers/spi/spi-thread.c:140:
+	while (!kthread_should_stop()) {
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#240: FILE: drivers/spi/spi-thread.c:153:
+			list_del (&message->queue);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#263: FILE: drivers/spi/spi-thread.c:176:
+ * ^IThis function queues the message to SPI controller's queue.$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#291: FILE: include/linux/spi/spi-thread.h:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#304: FILE: include/linux/spi/spi-thread.h:14:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#305: FILE: include/linux/spi/spi-thread.h:15:
+#if defined (CONFIG_SPI_THREAD)

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#306: FILE: include/linux/spi/spi-thread.h:16:
+extern int spi_start_async (struct spi_master *, int (*)(struct spi_master *, struct spi_message *));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#306: FILE: include/linux/spi/spi-thread.h:16:
+extern int spi_start_async (struct spi_master *, int (*)(struct spi_master *, struct spi_message *));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#306: FILE: include/linux/spi/spi-thread.h:16:
+extern int spi_start_async (struct spi_master *, int (*)(struct spi_master *, struct spi_message *));

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#307: FILE: include/linux/spi/spi-thread.h:17:
+extern void spi_stop_async (struct spi_master *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#307: FILE: include/linux/spi/spi-thread.h:17:
+extern void spi_stop_async (struct spi_master *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct spi_master *' should also have an identifier name
#307: FILE: include/linux/spi/spi-thread.h:17:
+extern void spi_stop_async (struct spi_master *);

WARNING:LONG_LINE: line length of 117 exceeds 100 columns
#309: FILE: include/linux/spi/spi-thread.h:19:
+static inline int spi_start_async (struct spi_master *master, int (*xfer)(struct spi_master *, struct spi_message *))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#309: FILE: include/linux/spi/spi-thread.h:19:
+static inline int spi_start_async (struct spi_master *master, int (*xfer)(struct spi_master *, struct spi_message *))

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#313: FILE: include/linux/spi/spi-thread.h:23:
+}
+static inline void spi_stop_async (struct spi_master *master)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#313: FILE: include/linux/spi/spi-thread.h:23:
+static inline void spi_stop_async (struct spi_master *master)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#335: FILE: include/linux/spi/spi.h:212:
+^Ivoid ^I^I^I*context;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000125152.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 0 errors, 32 warnings, 7 checks, 270 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000125152.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
