WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#43: FILE: drivers/s390/char/dcssshm.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#60: FILE: drivers/s390/char/dcssshm.c:18:
+#include <asm/ccwdev.h> ^I// for s390_root_dev_(un)register()$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#65: FILE: drivers/s390/char/dcssshm.c:23:
+#define PRINT_DEBUG(x...) printk(KERN_DEBUG DCSSSHM_NAME " debug: " x)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#69: FILE: drivers/s390/char/dcssshm.c:27:
+#define PRINT_INFO(x...)  printk(KERN_INFO DCSSSHM_NAME " info: " x)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#70: FILE: drivers/s390/char/dcssshm.c:28:
+#define PRINT_WARN(x...)  printk(KERN_WARNING DCSSSHM_NAME " warning: " x)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#71: FILE: drivers/s390/char/dcssshm.c:29:
+#define PRINT_ERR(x...)	  printk(KERN_ERR DCSSSHM_NAME " error: " x)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#73: FILE: drivers/s390/char/dcssshm.c:31:
+static ssize_t dcssshm_add_store(struct device * dev, const char * buf,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#73: FILE: drivers/s390/char/dcssshm.c:31:
+static ssize_t dcssshm_add_store(struct device * dev, const char * buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#74: FILE: drivers/s390/char/dcssshm.c:32:
+static ssize_t dcssshm_add_store(struct device * dev, const char * buf,
+				  size_t count);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#75: FILE: drivers/s390/char/dcssshm.c:33:
+static ssize_t dcssshm_remove_store(struct device * dev, const char * buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#75: FILE: drivers/s390/char/dcssshm.c:33:
+static ssize_t dcssshm_remove_store(struct device * dev, const char * buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#76: FILE: drivers/s390/char/dcssshm.c:34:
+static ssize_t dcssshm_remove_store(struct device * dev, const char * buf,
+				  size_t count);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#77: FILE: drivers/s390/char/dcssshm.c:35:
+static ssize_t dcssshm_save_store(struct device * dev, const char * buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#77: FILE: drivers/s390/char/dcssshm.c:35:
+static ssize_t dcssshm_save_store(struct device * dev, const char * buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#80: FILE: drivers/s390/char/dcssshm.c:38:
+static ssize_t dcssshm_shared_store(struct device * dev, const char * buf,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#80: FILE: drivers/s390/char/dcssshm.c:38:
+static ssize_t dcssshm_shared_store(struct device * dev, const char * buf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#81: FILE: drivers/s390/char/dcssshm.c:39:
+static ssize_t dcssshm_shared_store(struct device * dev, const char * buf,
+				  size_t count);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#84: FILE: drivers/s390/char/dcssshm.c:42:
+static int   dcssshm_open(struct inode *inode, struct file *filp);
                                                             ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#85: FILE: drivers/s390/char/dcssshm.c:43:
+static int   dcssshm_release(struct inode *inode, struct file *filp);
                                                                ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#86: FILE: drivers/s390/char/dcssshm.c:44:
+static int dcssshm_mmap(struct file * file, struct vm_area_struct * vma);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#86: FILE: drivers/s390/char/dcssshm.c:44:
+static int dcssshm_mmap(struct file * file, struct vm_area_struct * vma);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#87: FILE: drivers/s390/char/dcssshm.c:45:
+static struct page * dcssshm_nopage_in_place(struct vm_area_struct * area,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#87: FILE: drivers/s390/char/dcssshm.c:45:
+static struct page * dcssshm_nopage_in_place(struct vm_area_struct * area,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#88: FILE: drivers/s390/char/dcssshm.c:46:
+static struct page * dcssshm_nopage_in_place(struct vm_area_struct * area,
+				      unsigned long address, int* type);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#88: FILE: drivers/s390/char/dcssshm.c:46:
+				      unsigned long address, int* type);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#89: FILE: drivers/s390/char/dcssshm.c:47:
+static loff_t dcssshm_llseek (struct file* file, loff_t offset, int orig);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#89: FILE: drivers/s390/char/dcssshm.c:47:
+static loff_t dcssshm_llseek (struct file* file, loff_t offset, int orig);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'dcssshm_add_store' to 'add_store'
#91: FILE: drivers/s390/char/dcssshm.c:49:
+static DEVICE_ATTR(add, S_IWUSR, NULL, dcssshm_add_store);

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#91: FILE: drivers/s390/char/dcssshm.c:49:
+static DEVICE_ATTR(add, S_IWUSR, NULL, dcssshm_add_store);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'dcssshm_remove_store' to 'remove_store'
#92: FILE: drivers/s390/char/dcssshm.c:50:
+static DEVICE_ATTR(remove, S_IWUSR, NULL, dcssshm_remove_store);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#92: FILE: drivers/s390/char/dcssshm.c:50:
+static DEVICE_ATTR(remove, S_IWUSR, NULL, dcssshm_remove_store);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'dcssshm_save_show' to 'save_show' 'dcssshm_save_store' to 'save_store'
#93: FILE: drivers/s390/char/dcssshm.c:51:
+static DEVICE_ATTR(save, S_IWUSR | S_IRUGO, dcssshm_save_show,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#93: FILE: drivers/s390/char/dcssshm.c:51:
+static DEVICE_ATTR(save, S_IWUSR | S_IRUGO, dcssshm_save_show,

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'dcssshm_shared_show' to 'shared_show' 'dcssshm_shared_store' to 'shared_store'
#95: FILE: drivers/s390/char/dcssshm.c:53:
+static DEVICE_ATTR(shared, S_IWUSR | S_IRUGO, dcssshm_shared_show,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#95: FILE: drivers/s390/char/dcssshm.c:53:
+static DEVICE_ATTR(shared, S_IWUSR | S_IRUGO, dcssshm_shared_show,

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#98: FILE: drivers/s390/char/dcssshm.c:56:
+static int dcssshm_major = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:CONST_STRUCT: struct vm_operations_struct should normally be const
#116: FILE: drivers/s390/char/dcssshm.c:74:
+static struct vm_operations_struct dcssshm_vm_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct file_operations should normally be const
#120: FILE: drivers/s390/char/dcssshm.c:78:
+static struct file_operations dcssshm_fops =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#121: FILE: drivers/s390/char/dcssshm.c:79:
+static struct file_operations dcssshm_fops =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#137: FILE: drivers/s390/char/dcssshm.c:95:
+dcssshm_segment_warn(int rc, char* seg_name)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#144: FILE: drivers/s390/char/dcssshm.c:102:
+	case -ENOSYS:

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:ENOTSUPP: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
#152: FILE: drivers/s390/char/dcssshm.c:110:
+	case -ENOTSUPP:

ENOTSUPP is not a standard error code and should be avoided in new patches.
EOPNOTSUPP should be used instead.

See: https://lore.kernel.org/netdev/20200510182252.GA411829@lunn.ch/

WARNING:SPLIT_STRING: quoted string split across lines
#154: FILE: drivers/s390/char/dcssshm.c:112:
+		PRINT_WARN("cannot load/query segment %s, is a multi-part "
+			   "segment\n", seg_name);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#158: FILE: drivers/s390/char/dcssshm.c:116:
+		PRINT_WARN("cannot load/query segment %s, overlaps with "
+			   "storage\n", seg_name);

WARNING:SPLIT_STRING: quoted string split across lines
#162: FILE: drivers/s390/char/dcssshm.c:120:
+		PRINT_WARN("cannot load/query segment %s, overlaps with "
+			   "already loaded dcss\n", seg_name);

WARNING:SPLIT_STRING: quoted string split across lines
#166: FILE: drivers/s390/char/dcssshm.c:124:
+		PRINT_WARN("cannot load/query segment %s, exceeds kernel "
+			   "mapping range\n", seg_name);

WARNING:SPLIT_STRING: quoted string split across lines
#170: FILE: drivers/s390/char/dcssshm.c:128:
+		PRINT_WARN("cannot load/query segment %s, already loaded in "
+			   "incompatible mode\n", seg_name);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#183: FILE: drivers/s390/char/dcssshm.c:141:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev_info"
#207: FILE: drivers/s390/char/dcssshm.c:165:
+	if (dev_info == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#209: FILE: drivers/s390/char/dcssshm.c:167:
+	for (minor = 0; minor < (1<<MINORBITS); minor++) {
 	                          ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#215: FILE: drivers/s390/char/dcssshm.c:173:
+		if (!found) break; // got unused minor

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:BRACES: braces {} are not necessary for single statement blocks
#234: FILE: drivers/s390/char/dcssshm.c:192:
+		if (!strcmp(name, entry->segment_name)) {
+			return entry;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#252: FILE: drivers/s390/char/dcssshm.c:210:
+		if (minor == entry->minor) {
+			return entry;
+		}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#259: FILE: drivers/s390/char/dcssshm.c:217:
+
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'count > 1'
#280: FILE: drivers/s390/char/dcssshm.c:238:
+	if ((count > 1) && (inbuf[1] != '\n') && (inbuf[1] != '\0')) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#295: FILE: drivers/s390/char/dcssshm.c:253:
+		rc = segment_modify_shared(dev_info->segment_name,
+						SEGMENT_SHARED);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#297: FILE: drivers/s390/char/dcssshm.c:255:
+			BUG_ON (rc == -EINVAL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#297: FILE: drivers/s390/char/dcssshm.c:255:
+			BUG_ON (rc == -EINVAL);

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#302: FILE: drivers/s390/char/dcssshm.c:260:
+			switch (dev_info->segment_type) {
+				case SEG_TYPE_SR:
+				case SEG_TYPE_ER:
+				case SEG_TYPE_SC:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#306: FILE: drivers/s390/char/dcssshm.c:264:
+					dev_info->is_ro=1;
 					               ^

WARNING:SPLIT_STRING: quoted string split across lines
#313: FILE: drivers/s390/char/dcssshm.c:271:
+			PRINT_ERR("Segment type SC (%s) cannot be loaded in "
+				  "non-shared mode\n", dev_info->segment_name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#318: FILE: drivers/s390/char/dcssshm.c:276:
+		rc = segment_modify_shared(dev_info->segment_name,
+						SEGMENT_EXCLUSIVE);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#320: FILE: drivers/s390/char/dcssshm.c:278:
+			BUG_ON (rc == -EINVAL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#320: FILE: drivers/s390/char/dcssshm.c:278:
+			BUG_ON (rc == -EINVAL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#338: FILE: drivers/s390/char/dcssshm.c:296:
+	PRINT_ERR("Could not reload segment %s, removing it now!\n",
+			dev_info->segment_name);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'count > 1'
#368: FILE: drivers/s390/char/dcssshm.c:326:
+	if ((count > 1) && (inbuf[1] != '\n') && (inbuf[1] != '\0')) {

WARNING:SPLIT_STRING: quoted string split across lines
#385: FILE: drivers/s390/char/dcssshm.c:343:
+			PRINT_INFO("Segment %s is currently busy, it will "
+				   "be saved when it becomes idle...\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#395: FILE: drivers/s390/char/dcssshm.c:353:
+			PRINT_INFO("Pending save for segment %s deactivated\n",
+					dev_info->segment_name);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!local_buf"
#422: FILE: drivers/s390/char/dcssshm.c:380:
+	if (local_buf == NULL) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#429: FILE: drivers/s390/char/dcssshm.c:387:
+	for (i = 0; ((buf[i] != '\0') && (buf[i] != '\n') && i < count); i++) {
+		local_buf[i] = toupper(buf[i]);
+	}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i == 0'
#433: FILE: drivers/s390/char/dcssshm.c:391:
+	if ((i == 0) || (i > 8)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i > 8'
#433: FILE: drivers/s390/char/dcssshm.c:391:
+	if ((i == 0) || (i > 8)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev_info"
#443: FILE: drivers/s390/char/dcssshm.c:401:
+	if (dev_info != NULL) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*dev_info)...) over kmalloc(sizeof(struct dcssshm_dev_info)...)
#451: FILE: drivers/s390/char/dcssshm.c:409:
+	dev_info = kmalloc(sizeof(struct dcssshm_dev_info), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev_info"
#452: FILE: drivers/s390/char/dcssshm.c:410:
+	if (dev_info == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev_info->cdev"
#458: FILE: drivers/s390/char/dcssshm.c:416:
+	if (dev_info->cdev == NULL) {

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#464: FILE: drivers/s390/char/dcssshm.c:422:
+	strlcpy(dev_info->dev.bus_id, local_buf, BUS_ID_SIZE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#475: FILE: drivers/s390/char/dcssshm.c:433:
+	rc = segment_load(local_buf, SEGMENT_SHARED,
+				&dev_info->start, &dev_info->end);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#477: FILE: drivers/s390/char/dcssshm.c:435:
+		dcssshm_segment_warn (rc, dev_info->segment_name);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#487: FILE: drivers/s390/char/dcssshm.c:445:
+		dev_info->is_ro=1;
 		               ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#489: FILE: drivers/s390/char/dcssshm.c:447:
+		dev_info->is_ro=0;
 		               ^

WARNING:SPLIT_STRING: quoted string split across lines
#499: FILE: drivers/s390/char/dcssshm.c:457:
+		PRINT_ERR("No free minor number available! "
+			  "Unloading segment...\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#504: FILE: drivers/s390/char/dcssshm.c:462:
+	dev_info->cdev->dev = MKDEV (dcssshm_major, dev_info->minor);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#516: FILE: drivers/s390/char/dcssshm.c:474:
+		PRINT_ERR("Segment %s could not be registered RC=%d\n",
+				local_buf, rc);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#529: FILE: drivers/s390/char/dcssshm.c:487:
+	rc = cdev_add (dev_info->cdev, dev_info->cdev->dev, 1);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#550: FILE: drivers/s390/char/dcssshm.c:508:
+	kobject_put (&dev_info->cdev->kobj);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#569: FILE: drivers/s390/char/dcssshm.c:527:
+	if (dev != dcssshm_root_dev) {
+		return -EINVAL;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#573: FILE: drivers/s390/char/dcssshm.c:531:
+	if (local_buf == NULL) {
+		return -ENOMEM;
+	}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!local_buf"
#573: FILE: drivers/s390/char/dcssshm.c:531:
+	if (local_buf == NULL) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#580: FILE: drivers/s390/char/dcssshm.c:538:
+	for (i = 0; ((*(buf+i)!='\0') && (*(buf+i)!='\n') && i < count); i++) {
 	                   ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#580: FILE: drivers/s390/char/dcssshm.c:538:
+	for (i = 0; ((*(buf+i)!='\0') && (*(buf+i)!='\n') && i < count); i++) {
 	                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#580: FILE: drivers/s390/char/dcssshm.c:538:
+	for (i = 0; ((*(buf+i)!='\0') && (*(buf+i)!='\n') && i < count); i++) {
 	                                       ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#580: FILE: drivers/s390/char/dcssshm.c:538:
+	for (i = 0; ((*(buf+i)!='\0') && (*(buf+i)!='\n') && i < count); i++) {
 	                                          ^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#580: FILE: drivers/s390/char/dcssshm.c:538:
+	for (i = 0; ((*(buf+i)!='\0') && (*(buf+i)!='\n') && i < count); i++) {
+		local_buf[i] = toupper(buf[i]);
+	}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i == 0'
#584: FILE: drivers/s390/char/dcssshm.c:542:
+	if ((i == 0) || (i > 8)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'i > 8'
#584: FILE: drivers/s390/char/dcssshm.c:542:
+	if ((i == 0) || (i > 8)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev_info"
#591: FILE: drivers/s390/char/dcssshm.c:549:
+	if (dev_info == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#608: FILE: drivers/s390/char/dcssshm.c:566:
+	PRINT_DEBUG("Segment %s unloaded successfully\n",
+			dev_info->segment_name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#609: FILE: drivers/s390/char/dcssshm.c:567:
+	cdev_del (dev_info->cdev);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#621: FILE: drivers/s390/char/dcssshm.c:579:
+dcssshm_open(struct inode *inode, struct file *filp)
                                                ^^^^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#623: FILE: drivers/s390/char/dcssshm.c:581:
+	struct dcssshm_dev_info* dev_info;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#637: FILE: drivers/s390/char/dcssshm.c:595:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#648: FILE: drivers/s390/char/dcssshm.c:606:
+dcssshm_release(struct inode *inode, struct file *filp)
                                                   ^^^^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#650: FILE: drivers/s390/char/dcssshm.c:608:
+	struct dcssshm_dev_info *dev_info = (struct dcssshm_dev_info*)filp->private_data;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'dev_info->save_pending'
#654: FILE: drivers/s390/char/dcssshm.c:612:
+	if (atomic_dec_and_test(&dev_info->use_count)
+	    && (dev_info->save_pending)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#655: FILE: drivers/s390/char/dcssshm.c:613:
+	if (atomic_dec_and_test(&dev_info->use_count)
+	    && (dev_info->save_pending)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#657: FILE: drivers/s390/char/dcssshm.c:615:
+		PRINT_INFO("Segment %s became idle and is being saved now\n",
+			    dev_info->segment_name);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#666: FILE: drivers/s390/char/dcssshm.c:624:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#668: FILE: drivers/s390/char/dcssshm.c:626:
+dcssshm_mmap(struct file * file, struct vm_area_struct * vma)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#668: FILE: drivers/s390/char/dcssshm.c:626:
+dcssshm_mmap(struct file * file, struct vm_area_struct * vma)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#676: FILE: drivers/s390/char/dcssshm.c:634:
+dcssshm_nopage_in_place(struct vm_area_struct * area, unsigned long address,

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#677: FILE: drivers/s390/char/dcssshm.c:635:
+			int* type)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#679: FILE: drivers/s390/char/dcssshm.c:637:
+	struct dcssshm_dev_info* dev_info = area->vm_file->private_data;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#684: FILE: drivers/s390/char/dcssshm.c:642:
+	if ((pgoff+1)*PAGE_SIZE-1 > dev_info->end - dev_info->start)
 	          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#684: FILE: drivers/s390/char/dcssshm.c:642:
+	if ((pgoff+1)*PAGE_SIZE-1 > dev_info->end - dev_info->start)
 	             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#684: FILE: drivers/s390/char/dcssshm.c:642:
+	if ((pgoff+1)*PAGE_SIZE-1 > dev_info->end - dev_info->start)
 	                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#686: FILE: drivers/s390/char/dcssshm.c:644:
+	return virt_to_page((unsigned long)(dev_info->start+pgoff*PAGE_SIZE));
 	                                                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#686: FILE: drivers/s390/char/dcssshm.c:644:
+	return virt_to_page((unsigned long)(dev_info->start+pgoff*PAGE_SIZE));
 	                                                         ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#690: FILE: drivers/s390/char/dcssshm.c:648:
+dcssshm_llseek (struct file* file, loff_t offset, int orig)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#690: FILE: drivers/s390/char/dcssshm.c:648:
+dcssshm_llseek (struct file* file, loff_t offset, int orig)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#693: FILE: drivers/s390/char/dcssshm.c:651:
+	struct dcssshm_dev_info *dev_info = (struct dcssshm_dev_info*)

WARNING:LINE_SPACING: Missing a blank line after declarations
#731: FILE: drivers/s390/char/dcssshm.c:689:
+	dev_t dev;
+	dcssshm_root_dev = s390_root_dev_register("dcssshm");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#748: FILE: drivers/s390/char/dcssshm.c:706:
+	rc = alloc_chrdev_region (&dev, 0, 256, "dcssshm");

WARNING:TYPO_SPELLING: 'falied' may be misspelled - perhaps 'failed'?
#750: FILE: drivers/s390/char/dcssshm.c:708:
+	        PRINT_ERR("alloc_chrdev_region falied!\n");
 	                                       ^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#750: FILE: drivers/s390/char/dcssshm.c:708:
+^I        PRINT_ERR("alloc_chrdev_region falied!\n");$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:RETURN_VOID: void function return statements are not generally useful
#765: FILE: drivers/s390/char/dcssshm.c:723:
+	return;
+}

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000220519.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 34 errors, 52 warnings, 40 checks, 749 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000220519.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
