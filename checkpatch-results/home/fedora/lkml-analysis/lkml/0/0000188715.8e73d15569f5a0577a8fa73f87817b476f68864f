WARNING:TYPO_SPELLING: 'havent' may be misspelled - perhaps 'haven't'?
#45: 
o  I still havent looked at the memory side of things. 
           ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#70: 
diff -Naurp linux-2.6.12-rc1-mm1.orig/include/linux/init.h linux-2.6.12-rc1-mm1/include/linux/init.h

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#79: FILE: include/linux/init.h:221:
 #define __devinit

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#80: FILE: include/linux/init.h:222:
 #define __devinitdata

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#81: FILE: include/linux/init.h:223:
 #define __devexit

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#89: FILE: include/linux/sched.h:158:
+extern void rebuild_sched_domains(cpumask_t span1, cpumask_t span2);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#101: FILE: kernel/cpuset.c:60:
+^I/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#102: FILE: kernel/cpuset.c:61:
+^I * CPUs allowed to tasks in cpuset and $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#105: FILE: kernel/cpuset.c:64:
+^Icpumask_t cpus_allowed;^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#136: FILE: kernel/cpuset.c:142:
+^I.flags = ((1 << CS_CPU_EXCLUSIVE) | (1 << CS_CPU_ISOLATED) | $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#164: FILE: kernel/cpuset.c:610:
+^Iif ((is_cpu_isolated(trial) && !is_cpu_exclusive(cur)) $

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#165: FILE: kernel/cpuset.c:611:
+	if ((is_cpu_isolated(trial) && !is_cpu_exclusive(cur)) 
+	   || (!is_cpu_exclusive(trial) && is_cpu_isolated(cur)))

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#180: FILE: kernel/cpuset.c:634:
+	t = old_parent = *par;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

ERROR:CODE_INDENT: code indent should use tabs where possible
#184: FILE: kernel/cpuset.c:638:
+        if (cpus_empty(all_map) || par == NULL)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: kernel/cpuset.c:638:
+        if (cpus_empty(all_map) || par == NULL)$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!par"
#184: FILE: kernel/cpuset.c:638:
+        if (cpus_empty(all_map) || par == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:CODE_INDENT: code indent should use tabs where possible
#185: FILE: kernel/cpuset.c:639:
+                return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: kernel/cpuset.c:639:
+                return;$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#205: FILE: kernel/cpuset.c:659:
+	if ((cpus_equal(t.cpus_allowed, old_parent.cpus_allowed)
+	     && cpus_equal(t.isolated_map, old_parent.isolated_map)))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#240: FILE: kernel/cpuset.c:695:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#241: FILE: kernel/cpuset.c:696:
+         * If current isolated cpuset has isolated children $

ERROR:CODE_INDENT: code indent should use tabs where possible
#241: FILE: kernel/cpuset.c:696:
+         * If current isolated cpuset has isolated children $

ERROR:CODE_INDENT: code indent should use tabs where possible
#242: FILE: kernel/cpuset.c:697:
+         * disallow changes to cpu mask$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#263: FILE: kernel/cpuset.c:743:
+	trialcs = oldcs = *cs;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#324: FILE: kernel/cpuset.c:948:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#325: FILE: kernel/cpuset.c:949:
+^I*tmp++ = '[';^I$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#329: FILE: kernel/cpuset.c:953:
+	return (tmp-page);
 	           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#369: FILE: kernel/cpuset.c:1347:
+	if ((err = cpuset_add_file(cs_dentry, &cft_cpu_isolated)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#495: FILE: kernel/sched.c:4984:
+	init_sched_build_groups(sched_group_nodes, cpu_map,
 					&cpu_to_node_group);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#546: FILE: kernel/sched.c:5041:
+static void __devinit arch_init_sched_domains(void)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000188715.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 8 warnings, 8 checks, 484 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000188715.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
