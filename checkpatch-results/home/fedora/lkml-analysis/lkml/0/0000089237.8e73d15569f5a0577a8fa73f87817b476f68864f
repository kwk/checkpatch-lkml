WARNING:LEADING_SPACE: please, no spaces at the start of a line
#52: FILE: mm/page_alloc.c:440:
+       if (!PageCompound(page)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#52: FILE: mm/page_alloc.c:440:
+       if (!PageCompound(page)) {
+               for (i =3D 1 ; i < (1 << order) ; ++i) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#53: FILE: mm/page_alloc.c:441:
+               for (i =3D 1 ; i < (1 << order) ; ++i) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#53: FILE: mm/page_alloc.c:441:
+               for (i =3D 1 ; i < (1 << order) ; ++i) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#53: FILE: mm/page_alloc.c:441:
+               for (i =3D 1 ; i < (1 << order) ; ++i) {
+                       __put_page(page + i);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#53: FILE: mm/page_alloc.c:441:
+               for (i =3D 1 ; i < (1 << order) ; ++i) {
                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#53: FILE: mm/page_alloc.c:441:
+               for (i =3D 1 ; i < (1 << order) ; ++i) {
+                       __put_page(page + i);
+               }

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#54: FILE: mm/page_alloc.c:442:
+                       __put_page(page + i);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#54: FILE: mm/page_alloc.c:442:
+                       __put_page(page + i);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#55: FILE: mm/page_alloc.c:443:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#55: FILE: mm/page_alloc.c:443:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#56: FILE: mm/page_alloc.c:444:
+       }$

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#65: FILE: mm/page_alloc.c:462:
int order)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: mm/page_alloc.c:464:
+       int i;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#78: FILE: mm/page_alloc.c:487:
+               for (i =3D 1; i < (1 << order); i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: mm/page_alloc.c:487:
+               for (i =3D 1; i < (1 << order); i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#78: FILE: mm/page_alloc.c:487:
+               for (i =3D 1; i < (1 << order); i++)
+                       set_page_refcounted(page + i);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#78: FILE: mm/page_alloc.c:487:
+               for (i =3D 1; i < (1 << order); i++)
                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#79: FILE: mm/page_alloc.c:488:
+                       set_page_refcounted(page + i);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: mm/page_alloc.c:488:
+                       set_page_refcounted(page + i);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#88: FILE: mm/page_alloc.c:530:
+       int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: mm/page_alloc.c:563:
+       if (!(gfp_flags & __GFP_COMP)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#101: FILE: mm/page_alloc.c:563:
+       if (!(gfp_flags & __GFP_COMP)) {
[...]
+               for (i =3D 1; i < (1 << order); i++)

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: mm/page_alloc.c:564:
+               /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#103: FILE: mm/page_alloc.c:565:
+                * Reference all the pages for this order, otherwise if$

ERROR:CODE_INDENT: code indent should use tabs where possible
#104: FILE: mm/page_alloc.c:566:
+                * anyone accesses one of the pages with (get/put) it$

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: mm/page_alloc.c:567:
+                * will be freed. - eg: access_process_vm()$

ERROR:CODE_INDENT: code indent should use tabs where possible
#106: FILE: mm/page_alloc.c:568:
+                */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#107: FILE: mm/page_alloc.c:569:
+               for (i =3D 1; i < (1 << order); i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: mm/page_alloc.c:569:
+               for (i =3D 1; i < (1 << order); i++)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#107: FILE: mm/page_alloc.c:569:
+               for (i =3D 1; i < (1 << order); i++)
+                       set_page_refcounted(page + i);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#107: FILE: mm/page_alloc.c:569:
+               for (i =3D 1; i < (1 << order); i++)
                       ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#108: FILE: mm/page_alloc.c:570:
+                       set_page_refcounted(page + i);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#108: FILE: mm/page_alloc.c:570:
+                       set_page_refcounted(page + i);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: mm/page_alloc.c:571:
+       }$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#138: FILE: mm/page_alloc.c:441:
+		for (i = 1 ; i < (1 << order) ; ++i) {
+			__put_page(page + i);
+		}

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000089237.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 16 errors, 20 warnings, 0 checks, 125 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000089237.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
