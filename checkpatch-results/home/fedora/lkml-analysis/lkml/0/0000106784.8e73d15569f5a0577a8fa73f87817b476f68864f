WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
--- linux-work.orig/drivers/macintosh/Kconfig	2006-01-12 16:33:08.000000000 +1100

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#46: FILE: drivers/macintosh/Kconfig:190:
+config WINDFARM_PM112
+	tristate "Support for thermal management on PowerMac11,2"
+	depends on WINDFARM && I2C && PMAC_SMU
+	select I2C_PMAC_SMU
+	help
+	  This driver provides thermal control for the PowerMac11,2
+	  which are the recent dual and quad G5 machines using the
+	  970MP dual-core processor.
 

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#140: FILE: drivers/macintosh/windfarm_core.c:186:
+	val = simple_strtoul(buf, &endp, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#218: FILE: drivers/macintosh/windfarm_max6690_sensor.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#240: FILE: drivers/macintosh/windfarm_max6690_sensor.c:23:
+/* This currently only exports the external temperature sensor,
+   since that's all the control loops need. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#240: FILE: drivers/macintosh/windfarm_max6690_sensor.c:23:
+   since that's all the control loops need. */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!max->i2c.adapter"
#270: FILE: drivers/macintosh/windfarm_max6690_sensor.c:53:
+	if (max->i2c.adapter == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*max)...) over kzalloc(sizeof(struct wf_6690_sensor)...)
#303: FILE: drivers/macintosh/windfarm_max6690_sensor.c:86:
+	max = kzalloc(sizeof(struct wf_6690_sensor), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!max"
#304: FILE: drivers/macintosh/windfarm_max6690_sensor.c:87:
+	if (max == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#305: FILE: drivers/macintosh/windfarm_max6690_sensor.c:88:
+		printk(KERN_ERR "windfarm: Couldn't create MAX6690 sensor %s: "

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#305: FILE: drivers/macintosh/windfarm_max6690_sensor.c:88:
+	if (max == NULL) {
+		printk(KERN_ERR "windfarm: Couldn't create MAX6690 sensor %s: "

WARNING:SPLIT_STRING: quoted string split across lines
#306: FILE: drivers/macintosh/windfarm_max6690_sensor.c:89:
+		printk(KERN_ERR "windfarm: Couldn't create MAX6690 sensor %s: "
+		       "no memory\n", name);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#315: FILE: drivers/macintosh/windfarm_max6690_sensor.c:98:
+	strncpy(max->i2c.name, name, I2C_NAME_SIZE-1);
 	                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#318: FILE: drivers/macintosh/windfarm_max6690_sensor.c:101:
+		printk(KERN_ERR "windfarm: failed to attach MAX6690 sensor\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bus"
#341: FILE: drivers/macintosh/windfarm_max6690_sensor.c:124:
+	if (bus == NULL)

CHECK:SPACING: No space is necessary after a cast
#349: FILE: drivers/macintosh/windfarm_max6690_sensor.c:132:
+		reg = (u32 *) get_property(dev, "reg", NULL);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#352: FILE: drivers/macintosh/windfarm_max6690_sensor.c:135:
+		printk("found max6690, loc=%s reg=%x\n", loc, *reg);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#416: FILE: drivers/macintosh/windfarm_pid.c:132:
+	prop = st->last_delta = (new_temp - adj);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#437: FILE: drivers/macintosh/windfarm_pm112.c:1:
+/*

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#464: FILE: drivers/macintosh/windfarm_pm112.c:28:
+#define DBG(args...)	printk(args)

ERROR:SPACING: space required before the open parenthesis '('
#466: FILE: drivers/macintosh/windfarm_pm112.c:30:
+#define DBG(args...)	do { } while(0)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#470: FILE: drivers/macintosh/windfarm_pm112.c:34:
+#define DBG_LOTS(args...)	printk(args)

ERROR:SPACING: space required before the open parenthesis '('
#472: FILE: drivers/macintosh/windfarm_pm112.c:36:
+#define DBG_LOTS(args...)	do { } while(0)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#483: FILE: drivers/macintosh/windfarm_pm112.c:47:
+#define NR_CPU_FANS	3 * NR_CHIPS

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#501: FILE: drivers/macintosh/windfarm_pm112.c:65:
+};
+static struct wf_control *cpufreq_clamp;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#559: FILE: drivers/macintosh/windfarm_pm112.c:123:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hdr"
#574: FILE: drivers/macintosh/windfarm_pm112.c:138:
+	if (hdr == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#575: FILE: drivers/macintosh/windfarm_pm112.c:139:
+		printk(KERN_WARNING"windfarm: can't get CPU PID fan config\n");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#575: FILE: drivers/macintosh/windfarm_pm112.c:139:
+		printk(KERN_WARNING"windfarm: can't get CPU PID fan config\n");

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

CHECK:BRACES: braces {} should be used on all arms of this statement
#582: FILE: drivers/macintosh/windfarm_pm112.c:146:
+	if (hdr) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#584: FILE: drivers/macintosh/windfarm_pm112.c:148:
+		struct smu_sdbp_fvt *fvt = (struct smu_sdbp_fvt *)&hdr[1];
+		tmax = fvt->maxtemp << 16;

CHECK:BRACES: Unbalanced braces around else statement
#585: FILE: drivers/macintosh/windfarm_pm112.c:149:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#641: FILE: drivers/macintosh/windfarm_pm112.c:205:
+			printk(KERN_ERR "windfarm: Overtemp due to immediate CPU"

WARNING:SPLIT_STRING: quoted string split across lines
#642: FILE: drivers/macintosh/windfarm_pm112.c:206:
+			printk(KERN_ERR "windfarm: Overtemp due to immediate CPU"
+			       " temperature !\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#647: FILE: drivers/macintosh/windfarm_pm112.c:211:
+			printk(KERN_ERR "windfarm: Critical overtemp due to"

WARNING:SPLIT_STRING: quoted string split across lines
#648: FILE: drivers/macintosh/windfarm_pm112.c:212:
+			printk(KERN_ERR "windfarm: Critical overtemp due to"
+			       " immediate CPU temperature !\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#668: FILE: drivers/macintosh/windfarm_pm112.c:232:
+			printk(KERN_ERR "windfarm: Overtemp due to average CPU"

WARNING:SPLIT_STRING: quoted string split across lines
#669: FILE: drivers/macintosh/windfarm_pm112.c:233:
+			printk(KERN_ERR "windfarm: Overtemp due to average CPU"
+			       " temperature !\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#674: FILE: drivers/macintosh/windfarm_pm112.c:238:
+			printk(KERN_ERR "windfarm: Critical overtemp due to"

WARNING:SPLIT_STRING: quoted string split across lines
#675: FILE: drivers/macintosh/windfarm_pm112.c:239:
+			printk(KERN_ERR "windfarm: Critical overtemp due to"
+			       " average CPU temperature !\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#691: FILE: drivers/macintosh/windfarm_pm112.c:255:
+		printk(KERN_ERR "windfarm: Overtemp condition cleared !\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#715: FILE: drivers/macintosh/windfarm_pm112.c:279:
+			printk(KERN_WARNING "windfarm: CPU %d temperature "

WARNING:SPLIT_STRING: quoted string split across lines
#716: FILE: drivers/macintosh/windfarm_pm112.c:280:
+			printk(KERN_WARNING "windfarm: CPU %d temperature "
+			       "sensor error %d\n", cpu, err);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#730: FILE: drivers/macintosh/windfarm_pm112.c:294:
+			printk(KERN_WARNING "windfarm: CPU %d power "

WARNING:SPLIT_STRING: quoted string split across lines
#731: FILE: drivers/macintosh/windfarm_pm112.c:295:
+			printk(KERN_WARNING "windfarm: CPU %d power "
+			       "sensor error %d\n", cpu, err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#746: FILE: drivers/macintosh/windfarm_pm112.c:310:
+		DBG_LOTS("[%d] P=%d.%.3d T=%d.%.3d ",
+		    cpu, FIX32TOPRINT(power), FIX32TOPRINT(temp));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ct"
#764: FILE: drivers/macintosh/windfarm_pm112.c:328:
+		if (ct == NULL)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#768: FILE: drivers/macintosh/windfarm_pm112.c:332:
+			printk(KERN_WARNING "windfarm: fan %s reports "

WARNING:SPLIT_STRING: quoted string split across lines
#769: FILE: drivers/macintosh/windfarm_pm112.c:333:
+			printk(KERN_WARNING "windfarm: fan %s reports "
+			       "error %d\n", ct->name, err);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#808: FILE: drivers/macintosh/windfarm_pm112.c:372:
+		printk(KERN_WARNING "windfarm: U4 temp sensor error %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#820: FILE: drivers/macintosh/windfarm_pm112.c:384:
+		printk(KERN_WARNING "windfarm: backside fan error %d\n", err);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#857: FILE: drivers/macintosh/windfarm_pm112.c:421:
+		printk(KERN_WARNING "windfarm: drive bay temp sensor "

WARNING:SPLIT_STRING: quoted string split across lines
#858: FILE: drivers/macintosh/windfarm_pm112.c:422:
+		printk(KERN_WARNING "windfarm: drive bay temp sensor "
+		       "error %d\n", err);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#869: FILE: drivers/macintosh/windfarm_pm112.c:433:
+		printk(KERN_WARNING "windfarm: drive bay fan error %d\n", err);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#903: FILE: drivers/macintosh/windfarm_pm112.c:467:
+		printk(KERN_WARNING "windfarm: slots power sensor error %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#915: FILE: drivers/macintosh/windfarm_pm112.c:479:
+		printk(KERN_WARNING "windfarm: slots fan error %d\n", err);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cpufreq_clamp"
#988: FILE: drivers/macintosh/windfarm_pm112.c:552:
+	if (cpufreq_clamp == NULL && !strcmp(ct->name, "cpufreq-clamp")) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cpu_fans[i]"
#995: FILE: drivers/macintosh/windfarm_pm112.c:559:
+			if (cpu_fans[i] == NULL && wf_get_control(ct) == 0)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!backside_fan"
#1003: FILE: drivers/macintosh/windfarm_pm112.c:567:
+			if (backside_fan == NULL && wf_get_control(ct) == 0)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!slots_fan"
#1006: FILE: drivers/macintosh/windfarm_pm112.c:570:
+			if (slots_fan == NULL && wf_get_control(ct) == 0)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!drive_bay_fan"
#1009: FILE: drivers/macintosh/windfarm_pm112.c:573:
+			if (drive_bay_fan == NULL && wf_get_control(ct) == 0)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cpu_fans[i]"
#1016: FILE: drivers/macintosh/windfarm_pm112.c:580:
+		if (cpu_fans[i] == NULL)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1022: FILE: drivers/macintosh/windfarm_pm112.c:586:
+		if ((ct = cpu_fans[i]) != NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1035: FILE: drivers/macintosh/windfarm_pm112.c:599:
+	if (!strncmp(sr->name, "cpu-temp-", 9)) {
[...]
+	} else if (!strncmp(sr->name, "cpu-power-", 10)) {
[...]
+	} else if (!strcmp(sr->name, "hd-temp")) {
[...]
+	} else if (!strcmp(sr->name, "slots-power")) {
[...]
+	} else if (!strcmp(sr->name, "u4-temp")) {
[...]
+	} else
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sens_cpu_temp[i]"
#1038: FILE: drivers/macintosh/windfarm_pm112.c:602:
+		    sens_cpu_temp[i] == NULL && wf_get_sensor(sr) == 0)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sens_cpu_power[i]"
#1044: FILE: drivers/macintosh/windfarm_pm112.c:608:
+		    sens_cpu_power[i] == NULL && wf_get_sensor(sr) == 0)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hd_temp"
#1047: FILE: drivers/macintosh/windfarm_pm112.c:611:
+		if (hd_temp == NULL && wf_get_sensor(sr) == 0)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!slots_power"
#1050: FILE: drivers/macintosh/windfarm_pm112.c:614:
+		if (slots_power == NULL && wf_get_sensor(sr) == 0)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!u4_temp"
#1053: FILE: drivers/macintosh/windfarm_pm112.c:617:
+		if (u4_temp == NULL && wf_get_sensor(sr) == 0)

CHECK:BRACES: Unbalanced braces around else statement
#1055: FILE: drivers/macintosh/windfarm_pm112.c:619:
+	} else

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sens_cpu_temp[i]"
#1060: FILE: drivers/macintosh/windfarm_pm112.c:624:
+		if (sens_cpu_temp[i] == NULL || sens_cpu_power[i] == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sens_cpu_power[i]"
#1060: FILE: drivers/macintosh/windfarm_pm112.c:624:
+		if (sens_cpu_temp[i] == NULL || sens_cpu_power[i] == NULL)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1119: FILE: drivers/macintosh/windfarm_pm112.c:683:
+	printk(KERN_INFO "windfarm: initializing for dual-core desktop G5\n");

WARNING:TYPO_SPELLING: 'coment' may be misspelled - perhaps 'comment'?
#1203: FILE: drivers/macintosh/windfarm_smu_controls.c:99:
+	/* Handle fallback (see coment above) */
 	                        ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1205: FILE: drivers/macintosh/windfarm_smu_controls.c:101:
+		printk(KERN_WARNING "windfarm: SMU failed new fan command "

WARNING:SPLIT_STRING: quoted string split across lines
#1206: FILE: drivers/macintosh/windfarm_smu_controls.c:102:
+		printk(KERN_WARNING "windfarm: SMU failed new fan command "
+		       "falling back to old method\n");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cpudiode"
#1268: FILE: drivers/macintosh/windfarm_smu_sensors.c:223:
+		if (cpudiode == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cpuvcp"
#1277: FILE: drivers/macintosh/windfarm_smu_sensors.c:232:
+		if (cpuvcp == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cpuvcp"
#1286: FILE: drivers/macintosh/windfarm_smu_sensors.c:241:
+		if (cpuvcp == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "hdr"
#1309: FILE: drivers/macintosh/windfarm_smu_sensors.c:389:
+	if (hdr != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "hdr"
#1326: FILE: drivers/macintosh/windfarm_smu_sensors.c:397:
+	if (hdr != NULL)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1361: FILE: drivers/macintosh/windfarm_smu_sat.c:1:
+/*

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1389: FILE: drivers/macintosh/windfarm_smu_sat.c:29:
+#define DBG(args...)	printk(args)

ERROR:SPACING: space required before the open parenthesis '('
#1391: FILE: drivers/macintosh/windfarm_smu_sat.c:31:
+#define DBG(args...)	do { } while(0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1462: FILE: drivers/macintosh/windfarm_smu_sat.c:102:
+	if (sat_id > 1 || (sat = sats[sat_id]) == NULL)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1467: FILE: drivers/macintosh/windfarm_smu_sat.c:107:
+		printk(KERN_ERR "smu_sat_get_sdb_part wr error %d\n", err);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1473: FILE: drivers/macintosh/windfarm_smu_sat.c:113:
+		printk(KERN_ERR "smu_sat_get_sdb_part rd len error\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1477: FILE: drivers/macintosh/windfarm_smu_sat.c:117:
+		printk(KERN_ERR "smu_sat_get_sdb_part no partition %x\n", id);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buf"
#1484: FILE: drivers/macintosh/windfarm_smu_sat.c:124:
+	if (buf == NULL)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1490: FILE: drivers/macintosh/windfarm_smu_sat.c:130:
+			printk(KERN_ERR "smu_sat_get_sdb_part rd err %d\n",

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1495: FILE: drivers/macintosh/windfarm_smu_sat.c:135:
+		buf[i+1] = data[0];
 		     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1496: FILE: drivers/macintosh/windfarm_smu_sat.c:136:
+		buf[i+2] = data[3];
 		     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1497: FILE: drivers/macintosh/windfarm_smu_sat.c:137:
+		buf[i+3] = data[2];
 		     ^

CHECK:SPACING: No space is necessary after a cast
#1508: FILE: drivers/macintosh/windfarm_smu_sat.c:148:
+	return (struct smu_sdbp_header *) buf;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1527: FILE: drivers/macintosh/windfarm_smu_sat.c:167:
+		int i;
+		DBG(KERN_DEBUG "wf_sat_get: data is");

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sat->i2c.adapter"
#1543: FILE: drivers/macintosh/windfarm_smu_sat.c:183:
+	if (sat->i2c.adapter == NULL)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1554: FILE: drivers/macintosh/windfarm_smu_sat.c:194:
+	val = ((sat->cache[i] << 8) + sat->cache[i+1]) << sens->shift;
 	                                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1558: FILE: drivers/macintosh/windfarm_smu_sat.c:198:
+		val = (val * ((sat->cache[i] << 8) + sat->cache[i+1])) >> 4;
 		                                                 ^

CHECK:SPACING: No space is necessary after a cast
#1604: FILE: drivers/macintosh/windfarm_smu_sat.c:244:
+	reg = (u32 *) get_property(dev, "reg", NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!reg"
#1605: FILE: drivers/macintosh/windfarm_smu_sat.c:245:
+	if (reg == NULL)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*sat)...) over kzalloc(sizeof(struct wf_sat)...)
#1610: FILE: drivers/macintosh/windfarm_smu_sat.c:250:
+	sat = kzalloc(sizeof(struct wf_sat), GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sat"
#1611: FILE: drivers/macintosh/windfarm_smu_sat.c:251:
+	if (sat == NULL)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1620: FILE: drivers/macintosh/windfarm_smu_sat.c:260:
+	strncpy(sat->i2c.name, "smu-sat", I2C_NAME_SIZE-1);
 	                                               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1623: FILE: drivers/macintosh/windfarm_smu_sat.c:263:
+		printk(KERN_ERR "windfarm: failed to attach smu-sat to i2c\n");

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1627: FILE: drivers/macintosh/windfarm_smu_sat.c:267:
+	vsens[0] = vsens[1] = -1;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1628: FILE: drivers/macintosh/windfarm_smu_sat.c:268:
+	isens[0] = isens[1] = -1;

CHECK:SPACING: No space is necessary after a cast
#1631: FILE: drivers/macintosh/windfarm_smu_sat.c:271:
+		reg = (u32 *) get_property(child, "reg", NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!reg"
#1634: FILE: drivers/macintosh/windfarm_smu_sat.c:274:
+		if (reg == NULL || loc == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!loc"
#1634: FILE: drivers/macintosh/windfarm_smu_sat.c:274:
+		if (reg == NULL || loc == NULL)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1648: FILE: drivers/macintosh/windfarm_smu_sat.c:288:
+			printk(KERN_ERR "wf_sat_create: don't understand "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'wf_sat_create', this function's name, in a string
#1648: FILE: drivers/macintosh/windfarm_smu_sat.c:288:
+			printk(KERN_ERR "wf_sat_create: don't understand "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#1649: FILE: drivers/macintosh/windfarm_smu_sat.c:289:
+			printk(KERN_ERR "wf_sat_create: don't understand "
+			       "location %s for %s\n", loc, child->full_name);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1653: FILE: drivers/macintosh/windfarm_smu_sat.c:293:
+		if (sat->nr < 0)
[...]
+		else if (sat->nr != chip) {
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1656: FILE: drivers/macintosh/windfarm_smu_sat.c:296:
+			printk(KERN_ERR "wf_sat_create: can't cope with "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'wf_sat_create', this function's name, in a string
#1656: FILE: drivers/macintosh/windfarm_smu_sat.c:296:
+			printk(KERN_ERR "wf_sat_create: can't cope with "

WARNING:SPLIT_STRING: quoted string split across lines
#1657: FILE: drivers/macintosh/windfarm_smu_sat.c:297:
+			printk(KERN_ERR "wf_sat_create: can't cope with "
+			       "multiple CPU chips on one SAT (%s)\n", loc);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1661: FILE: drivers/macintosh/windfarm_smu_sat.c:301:
+		if (strcmp(type, "voltage-sensor") == 0) {
[...]
+		} else if (strcmp(type, "current-sensor") == 0) {
[...]
+		} else if (strcmp(type, "temp-sensor") == 0) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1672: FILE: drivers/macintosh/windfarm_smu_sat.c:312:
+		} else

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*sens)...) over kzalloc(sizeof(struct wf_sat_sensor)...)
#1676: FILE: drivers/macintosh/windfarm_smu_sat.c:316:
+		sens = kzalloc(sizeof(struct wf_sat_sensor) + 16, GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sens"
#1677: FILE: drivers/macintosh/windfarm_smu_sat.c:317:
+		if (sens == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1678: FILE: drivers/macintosh/windfarm_smu_sat.c:318:
+			printk(KERN_ERR "wf_sat_create: couldn't create "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'wf_sat_create', this function's name, in a string
#1678: FILE: drivers/macintosh/windfarm_smu_sat.c:318:
+			printk(KERN_ERR "wf_sat_create: couldn't create "

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1678: FILE: drivers/macintosh/windfarm_smu_sat.c:318:
+		if (sens == NULL) {
+			printk(KERN_ERR "wf_sat_create: couldn't create "

WARNING:SPLIT_STRING: quoted string split across lines
#1679: FILE: drivers/macintosh/windfarm_smu_sat.c:319:
+			printk(KERN_ERR "wf_sat_create: couldn't create "
+			       "%s sensor %d (no memory)\n", name, cpu);

CHECK:SPACING: No space is necessary after a cast
#1688: FILE: drivers/macintosh/windfarm_smu_sat.c:328:
+		sens->sens.name = (char *) (sens + 1);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*sens)...) over kzalloc(sizeof(struct wf_sat_sensor)...)
#1702: FILE: drivers/macintosh/windfarm_smu_sat.c:342:
+		sens = kzalloc(sizeof(struct wf_sat_sensor) + 16, GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sens"
#1703: FILE: drivers/macintosh/windfarm_smu_sat.c:343:
+		if (sens == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1704: FILE: drivers/macintosh/windfarm_smu_sat.c:344:
+			printk(KERN_ERR "wf_sat_create: couldn't create power "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'wf_sat_create', this function's name, in a string
#1704: FILE: drivers/macintosh/windfarm_smu_sat.c:344:
+			printk(KERN_ERR "wf_sat_create: couldn't create power "

WARNING:SPLIT_STRING: quoted string split across lines
#1705: FILE: drivers/macintosh/windfarm_smu_sat.c:345:
+			printk(KERN_ERR "wf_sat_create: couldn't create power "
+			       "sensor %d (no memory)\n", cpu);

CHECK:SPACING: No space is necessary after a cast
#1714: FILE: drivers/macintosh/windfarm_smu_sat.c:354:
+		sens->sens.name = (char *) (sens + 1);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bus"
#1738: FILE: drivers/macintosh/windfarm_smu_sat.c:378:
+	if (bus == NULL)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1788: FILE: include/asm-powerpc/smu.h:525:
+extern struct smu_sdbp_header *smu_sat_get_sdb_partition(unsigned int sat_id,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1789: FILE: include/asm-powerpc/smu.h:526:
+extern struct smu_sdbp_header *smu_sat_get_sdb_partition(unsigned int sat_id,
+					int id, unsigned int *size);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1791: FILE: include/asm-powerpc/smu.h:528:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000106784.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 63 warnings, 66 checks, 1979 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000106784.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
