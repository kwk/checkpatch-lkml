WARNING:TYPO_SPELLING: 'inclued' may be misspelled - perhaps 'included'?
#58: 
To test the OOM killer algorithm I also inclued a proc entry
                                        ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#117: FILE: linux-2.4.0-test10/mm/oom_kill.c:111:
+		printk(KERN_DEBUG "OOMkill: task %d (%s) has oom_nice=%d. start points:

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#118: FILE: linux-2.4.0-test10/mm/oom_kill.c:111:
%d\n",

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#129: FILE: linux-2.4.0-test10/mm/oom_kill.c:122:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#156: FILE: linux-2.4.0-test10/mm/oom_kill.c:179:
+	printk(KERN_ERR "Out of Memory: Killed process %d (%s).\n", p->pid,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#158: FILE: linux-2.4.0-test10/mm/oom_kill.c:180:
+	printk(KERN_ERR "Out of Memory: Killed process %d (%s).\n", p->pid,


WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#166: FILE: linux-2.4.0-test10/mm/oom_nice.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#182: FILE: linux-2.4.0-test10/mm/oom_nice.c:17:
+#include <asm/uaccess.h>

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#196: FILE: linux-2.4.0-test10/mm/oom_nice.c:31:
+static struct oom_nice_entry *entries = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: __always_unused or __maybe_unused is preferred over __attribute__((__unused__))
#197: FILE: linux-2.4.0-test10/mm/oom_nice.c:32:
+static rwlock_t entries_lock __attribute__((unused)) = RW_LOCK_UNLOCKED;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#199: FILE: linux-2.4.0-test10/mm/oom_nice.c:34:
+int get_oom_nice(struct task_struct * ts)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#214: FILE: linux-2.4.0-test10/mm/oom_nice.c:49:
+		if (strncmp(ts->comm,e->process_name,16) == 0)
 		                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#214: FILE: linux-2.4.0-test10/mm/oom_nice.c:49:
+		if (strncmp(ts->comm,e->process_name,16) == 0)
 		                                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#231: FILE: linux-2.4.0-test10/mm/oom_nice.c:66:
+		if (strcmp(process_name,e->process_name) == 0)
 		                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#243: FILE: linux-2.4.0-test10/mm/oom_nice.c:78:
+static int proc_write_nice(struct file *file, const char *buffer,
+			       unsigned long _count, void *data)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#251: FILE: linux-2.4.0-test10/mm/oom_nice.c:86:
+	if (buffer[count-1] == '\n')
 	                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#260: FILE: linux-2.4.0-test10/mm/oom_nice.c:95:
+	if (!(process_name = kmalloc(count+1,GFP_USER)))
 	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#260: FILE: linux-2.4.0-test10/mm/oom_nice.c:95:
+	if (!(process_name = kmalloc(count+1,GFP_USER)))
 	                                    ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#260: FILE: linux-2.4.0-test10/mm/oom_nice.c:95:
+	if (!(process_name = kmalloc(count+1,GFP_USER)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#267: FILE: linux-2.4.0-test10/mm/oom_nice.c:102:
+		if (get_user(c,(char *)buffer++))
 		              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#277: FILE: linux-2.4.0-test10/mm/oom_nice.c:112:
+		if (get_user(c,(char *)buffer++))
 		              ^

CHECK:SPACING: No space is necessary after a cast
#308: FILE: linux-2.4.0-test10/mm/oom_nice.c:143:
+		if (!(e = (struct oom_nice_entry *) kmalloc(sizeof(struct

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#308: FILE: linux-2.4.0-test10/mm/oom_nice.c:143:
+		if (!(e = (struct oom_nice_entry *) kmalloc(sizeof(struct

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#308: FILE: linux-2.4.0-test10/mm/oom_nice.c:143:
+		if (!(e = (struct oom_nice_entry *) kmalloc(sizeof(struct

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#320: FILE: linux-2.4.0-test10/mm/oom_nice.c:154:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#320: FILE: linux-2.4.0-test10/mm/oom_nice.c:154:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#335: FILE: linux-2.4.0-test10/mm/oom_nice.c:169:
+static int proc_read_nice(char *page, char **start, off_t off,
+			    int count, int *eof, void *data)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#345: FILE: linux-2.4.0-test10/mm/oom_nice.c:179:
+			sprintf(p,"%s=-\n",e->process_name);
 			         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#345: FILE: linux-2.4.0-test10/mm/oom_nice.c:179:
+			sprintf(p,"%s=-\n",e->process_name);
 			                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#347: FILE: linux-2.4.0-test10/mm/oom_nice.c:181:
+			sprintf(p,"%s=%d\n",e->process_name,e->nice);
 			         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#347: FILE: linux-2.4.0-test10/mm/oom_nice.c:181:
+			sprintf(p,"%s=%d\n",e->process_name,e->nice);
 			                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#347: FILE: linux-2.4.0-test10/mm/oom_nice.c:181:
+			sprintf(p,"%s=%d\n",e->process_name,e->nice);
 			                                   ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#363: FILE: linux-2.4.0-test10/mm/oom_nice.c:197:
+extern int badness(struct task_struct * ts);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#366: FILE: linux-2.4.0-test10/mm/oom_nice.c:200:
+static int proc_test(char *page, char **start, off_t off,
+			    int count, int *eof, void *data)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#384: FILE: linux-2.4.0-test10/mm/oom_nice.c:218:
+		sprintf(page,"Error: no bad process could be found.\n");
 		            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#386: FILE: linux-2.4.0-test10/mm/oom_nice.c:220:
+		sprintf(page,"OOM killer would have killed process %d (%s) with %d
 		            ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#406: FILE: linux-2.4.0-test10/mm/oom_nice.c:239:
+	oom_nice = create_proc_entry("sys/vm/oom_nice", S_IFREG | S_IWUSR, NULL);
 	                                 ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#406: FILE: linux-2.4.0-test10/mm/oom_nice.c:239:
+	oom_nice = create_proc_entry("sys/vm/oom_nice", S_IFREG | S_IWUSR, NULL);
 	                                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#413: FILE: linux-2.4.0-test10/mm/oom_nice.c:246:
+	test = create_proc_entry("sys/vm/oom_nice_test", S_IFREG | S_IWUSR, NULL);
 	                             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#413: FILE: linux-2.4.0-test10/mm/oom_nice.c:246:
+	test = create_proc_entry("sys/vm/oom_nice_test", S_IFREG | S_IWUSR, NULL);
 	                                ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000567097.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 20 errors, 7 warnings, 13 checks, 333 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000567097.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
