WARNING:TYPO_SPELLING: 'filesytems' may be misspelled - perhaps 'filesystems'?
#30: 
> Does anyone know of a good way of creating UFS filesytems under Linux?  I
                                                 ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
> had a go at porting BSD ufsutils a few years ago and nearly died.  There's

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#49: FILE: err.c:1:
+#include <stdarg.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#56: FILE: err.c:8:
+simulation of BSD functions $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#56: FILE: err.c:8:
+/*----------------------------------------------------
+simulation of BSD functions 

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#57: FILE: err.c:9:
+----------------------------------------------------*/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#58: FILE: err.c:10:
+void errx(int n,char *fmt, ...)
                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#60: FILE: err.c:12:
+        va_list pvar;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#60: FILE: err.c:12:
+        va_list pvar;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#61: FILE: err.c:13:
+        va_start(pvar, fmt);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#61: FILE: err.c:13:
+        va_list pvar;
+        va_start(pvar, fmt);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: err.c:13:
+        va_start(pvar, fmt);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#62: FILE: err.c:14:
+        vfprintf(stderr,fmt,pvar);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#62: FILE: err.c:14:
+        vfprintf(stderr,fmt,pvar);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#62: FILE: err.c:14:
+        vfprintf(stderr,fmt,pvar);
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#62: FILE: err.c:14:
+        vfprintf(stderr,fmt,pvar);
                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#63: FILE: err.c:15:
+        va_end(pvar);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#63: FILE: err.c:15:
+        va_end(pvar);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#64: FILE: err.c:16:
+        exit(n);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#64: FILE: err.c:16:
+        exit(n);$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#66: FILE: err.c:18:
+}
+/*----------------------------------------------------*/

ERROR:SPACING: space required after that ',' (ctx:VxV)
#67: FILE: err.c:19:
+void err(int n,char *fmt, ...)
               ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#69: FILE: err.c:21:
+        va_list pvar;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#69: FILE: err.c:21:
+        va_list pvar;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#70: FILE: err.c:22:
+        va_start(pvar, fmt);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#70: FILE: err.c:22:
+        va_list pvar;
+        va_start(pvar, fmt);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: err.c:22:
+        va_start(pvar, fmt);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#71: FILE: err.c:23:
+        vfprintf(stderr,fmt,pvar);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: err.c:23:
+        vfprintf(stderr,fmt,pvar);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#71: FILE: err.c:23:
+        vfprintf(stderr,fmt,pvar);
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#71: FILE: err.c:23:
+        vfprintf(stderr,fmt,pvar);
                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#72: FILE: err.c:24:
+        va_end(pvar);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: err.c:24:
+        va_end(pvar);$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#81: FILE: err.h:1:
+#ifndef _ERR_H_

ERROR:SPACING: space required after that ',' (ctx:VxV)
#84: FILE: err.h:4:
+extern void errx(int n,char *fmt, ...);
                       ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#84: FILE: err.h:4:
+extern void errx(int n,char *fmt, ...);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#85: FILE: err.h:5:
+extern void err(int n,char *fmt, ...);
                      ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#85: FILE: err.h:5:
+extern void err(int n,char *fmt, ...);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#131: FILE: libufs/sblock.c:62:
+		if (bread(disk, superblock/disk->d_bsize, disk->d_sb, SBLOCKSIZE) == -1) {
 		                          ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#192: FILE: mkfs.c:140:
+                strncpy((char *)sblock.fs_volname, (char *)volumelabel, MAXVOLLEN);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: mkfs.c:140:
+                strncpy((char *)sblock.fs_volname, (char *)volumelabel, MAXVOLLEN);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#209: FILE: mkfs.c:934:
+                printf("fsinit: inode value out of range (%llu).\n", (unsigned long long)ino);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: mkfs.c:934:
+                printf("fsinit: inode value out of range (%llu).\n", (unsigned long long)ino);$

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - u_int32_t arc4random() should probably be u_int32_t arc4random(void)
#218: FILE: mkfs.c:1045:
+u_int32_t arc4random()

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: mkfs.c:1047:
+    return (rand());$

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#220: FILE: mkfs.c:1047:
+    return (rand());

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#267: FILE: mkufs.c:100:
+                     $

ERROR:CODE_INDENT: code indent should use tabs where possible
#267: FILE: mkufs.c:100:
+                     $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: mkufs.c:100:
+                     $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#271: FILE: mkufs.c:102:
+                            $

ERROR:CODE_INDENT: code indent should use tabs where possible
#271: FILE: mkufs.c:102:
+                            $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: mkufs.c:102:
+                            $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#284: FILE: mkufs.c:110:
+{    $

ERROR:CODE_INDENT: code indent should use tabs where possible
#293: FILE: mkufs.c:136:
+                        volumelabel = (u_char *) optarg;$

CHECK:SPACING: No space is necessary after a cast
#293: FILE: mkufs.c:136:
+                        volumelabel = (u_char *) optarg;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: mkufs.c:136:
+                        volumelabel = (u_char *) optarg;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#300: FILE: mkufs.c:142:
+                        if (strlen((char *)volumelabel) >= MAXVOLLEN) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: mkufs.c:142:
+                        if (strlen((char *)volumelabel) >= MAXVOLLEN) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#309: FILE: mkufs.c:211:
+                        p_label = (u_char *)optarg;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#309: FILE: mkufs.c:211:
+                        p_label = (u_char *)optarg;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#319: FILE: mkufs.c:380:
+{    $

WARNING:TABSTOP: Statements should start on a tabstop
#328: FILE: mkufs.c:392:
+	     if ( (fd = open((char *)p_label, O_RDONLY) ) < 0 )

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (13, 13)
#328: FILE: mkufs.c:392:
+	     if ( (fd = open((char *)p_label, O_RDONLY) ) < 0 )
         {

ERROR:SPACING: space prohibited after that open parenthesis '('
#328: FILE: mkufs.c:392:
+	     if ( (fd = open((char *)p_label, O_RDONLY) ) < 0 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#328: FILE: mkufs.c:392:
+	     if ( (fd = open((char *)p_label, O_RDONLY) ) < 0 )

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#328: FILE: mkufs.c:392:
+	     if ( (fd = open((char *)p_label, O_RDONLY) ) < 0 )

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000075815.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 34 errors, 27 warnings, 5 checks, 252 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000075815.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
