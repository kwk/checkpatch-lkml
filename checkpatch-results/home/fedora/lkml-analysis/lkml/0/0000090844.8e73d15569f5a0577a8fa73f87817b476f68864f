WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#284: FILE: arch/um/os-Linux/tty_log.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:SPACING: space required before the open brace '{'
#332: FILE: arch/um/os-Linux/tty_log.c:49:
+	if(tty_log_fd != -1){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#332: FILE: arch/um/os-Linux/tty_log.c:49:
+	if(tty_log_fd != -1){

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#333: FILE: arch/um/os-Linux/tty_log.c:50:
+^I^Idata = ((struct tty_log_buf) { .what ^I= TTY_LOG_OPEN,$

CHECK:SPACING: No space is necessary after a cast
#334: FILE: arch/um/os-Linux/tty_log.c:51:
+					       .tty  = (unsigned long) tty,

ERROR:SPACING: space prohibited before that close parenthesis ')'
#338: FILE: arch/um/os-Linux/tty_log.c:55:
+					       .usec = tv.tv_usec } );

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#341: FILE: arch/um/os-Linux/tty_log.c:58:
+		return(tty_log_fd);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:SPACING: No space is necessary after a cast
#344: FILE: arch/um/os-Linux/tty_log.c:61:
+	sprintf(buf, "%s/%0u-%0u", tty_log_dir, (unsigned int) tv.tv_sec,

ERROR:CODE_INDENT: code indent should use tabs where possible
#345: FILE: arch/um/os-Linux/tty_log.c:62:
+ ^I^I(unsigned int) tv.tv_usec);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#345: FILE: arch/um/os-Linux/tty_log.c:62:
+ ^I^I(unsigned int) tv.tv_usec);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#345: FILE: arch/um/os-Linux/tty_log.c:62:
+	sprintf(buf, "%s/%0u-%0u", tty_log_dir, (unsigned int) tv.tv_sec,
+ 		(unsigned int) tv.tv_usec);

CHECK:SPACING: No space is necessary after a cast
#345: FILE: arch/um/os-Linux/tty_log.c:62:
+ 		(unsigned int) tv.tv_usec);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: arch/um/os-Linux/tty_log.c:62:
+ ^I^I(unsigned int) tv.tv_usec);$

ERROR:SPACING: space required before the open brace '{'
#349: FILE: arch/um/os-Linux/tty_log.c:66:
+	if(fd < 0){

ERROR:SPACING: space required before the open parenthesis '('
#349: FILE: arch/um/os-Linux/tty_log.c:66:
+	if(fd < 0){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#350: FILE: arch/um/os-Linux/tty_log.c:67:
+		printk("open_tty_log : couldn't open '%s', errno = %d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'open_tty_log', this function's name, in a string
#350: FILE: arch/um/os-Linux/tty_log.c:67:
+		printk("open_tty_log : couldn't open '%s', errno = %d\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:SPACING: space required before the open brace '{'
#361: FILE: arch/um/os-Linux/tty_log.c:78:
+	if(tty_log_fd != -1){

ERROR:SPACING: space required before the open parenthesis '('
#361: FILE: arch/um/os-Linux/tty_log.c:78:
+	if(tty_log_fd != -1){

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#363: FILE: arch/um/os-Linux/tty_log.c:80:
+^I^Idata = ((struct tty_log_buf) { .what ^I= TTY_LOG_CLOSE,$

CHECK:SPACING: No space is necessary after a cast
#364: FILE: arch/um/os-Linux/tty_log.c:81:
+					       .tty  = (unsigned long) tty,

ERROR:SPACING: space prohibited before that close parenthesis ')'
#368: FILE: arch/um/os-Linux/tty_log.c:85:
+					       .usec = tv.tv_usec } );

ERROR:SPACING: space required before the open brace '{'
#380: FILE: arch/um/os-Linux/tty_log.c:97:
+	while(len > 0){

ERROR:SPACING: space required before the open parenthesis '('
#380: FILE: arch/um/os-Linux/tty_log.c:97:
+	while(len > 0){

CHECK:SPACING: No space is necessary after a cast
#382: FILE: arch/um/os-Linux/tty_log.c:99:
+		missed = copy_from_user_proc(chunk, (char *) buf, try);

ERROR:SPACING: space required before the open parenthesis '('
#385: FILE: arch/um/os-Linux/tty_log.c:102:
+		if(n != try) {

ERROR:SPACING: space required before the open parenthesis '('
#386: FILE: arch/um/os-Linux/tty_log.c:103:
+			if(n < 0)

ERROR:SPACING: space required before the open parenthesis '('
#390: FILE: arch/um/os-Linux/tty_log.c:107:
+		if(missed != 0)

ERROR:SPACING: space required before the open brace '{'
#407: FILE: arch/um/os-Linux/tty_log.c:124:
+	if(fd == tty_log_fd){

ERROR:SPACING: space required before the open parenthesis '('
#407: FILE: arch/um/os-Linux/tty_log.c:124:
+	if(fd == tty_log_fd){

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#410: FILE: arch/um/os-Linux/tty_log.c:127:
+^I^Idata = ((struct tty_log_buf) { .what ^I= TTY_LOG_WRITE,$

CHECK:SPACING: No space is necessary after a cast
#411: FILE: arch/um/os-Linux/tty_log.c:128:
+					       .tty  = (unsigned long) tty,

ERROR:SPACING: space prohibited before that close parenthesis ')'
#415: FILE: arch/um/os-Linux/tty_log.c:132:
+					       .usec = tv.tv_usec } );

ERROR:SPACING: space required after that ',' (ctx:VxO)
#426: FILE: arch/um/os-Linux/tty_log.c:143:
+	char **ptr,*arg;
 	          ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#426: FILE: arch/um/os-Linux/tty_log.c:143:
+	char **ptr,*arg;
 	           ^

ERROR:SPACING: space required before the open parenthesis '('
#429: FILE: arch/um/os-Linux/tty_log.c:146:
+	if(tty_log_fd == -1) return;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#429: FILE: arch/um/os-Linux/tty_log.c:146:
+	if(tty_log_fd == -1) return;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required before the open brace '{'
#434: FILE: arch/um/os-Linux/tty_log.c:151:
+	for(ptr = argv; ; ptr++){

ERROR:SPACING: space required before the open parenthesis '('
#434: FILE: arch/um/os-Linux/tty_log.c:151:
+	for(ptr = argv; ; ptr++){

ERROR:SPACING: space required before the open parenthesis '('
#435: FILE: arch/um/os-Linux/tty_log.c:152:
+		if(copy_from_user_proc(&arg, ptr, sizeof(arg)))

ERROR:SPACING: space required before the open parenthesis '('
#437: FILE: arch/um/os-Linux/tty_log.c:154:
+		if(arg == NULL) break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#437: FILE: arch/um/os-Linux/tty_log.c:154:
+		if(arg == NULL) break;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!arg"
#437: FILE: arch/um/os-Linux/tty_log.c:154:
+		if(arg == NULL) break;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#441: FILE: arch/um/os-Linux/tty_log.c:158:
+^Idata = ((struct tty_log_buf) { .what ^I= TTY_LOG_EXEC,$

CHECK:SPACING: No space is necessary after a cast
#442: FILE: arch/um/os-Linux/tty_log.c:159:
+				       .tty  = (unsigned long) tty,

ERROR:SPACING: space prohibited before that close parenthesis ')'
#446: FILE: arch/um/os-Linux/tty_log.c:163:
+				       .usec = tv.tv_usec } );

ERROR:SPACING: space required before the open brace '{'
#449: FILE: arch/um/os-Linux/tty_log.c:166:
+	for(ptr = argv; ; ptr++){

ERROR:SPACING: space required before the open parenthesis '('
#449: FILE: arch/um/os-Linux/tty_log.c:166:
+	for(ptr = argv; ; ptr++){

ERROR:SPACING: space required before the open parenthesis '('
#450: FILE: arch/um/os-Linux/tty_log.c:167:
+		if(copy_from_user_proc(&arg, ptr, sizeof(arg)))

ERROR:SPACING: space required before the open parenthesis '('
#452: FILE: arch/um/os-Linux/tty_log.c:169:
+		if(arg == NULL) break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#452: FILE: arch/um/os-Linux/tty_log.c:169:
+		if(arg == NULL) break;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!arg"
#452: FILE: arch/um/os-Linux/tty_log.c:169:
+		if(arg == NULL) break;

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#465: FILE: arch/um/os-Linux/tty_log.c:182:
+	return(0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#477: FILE: arch/um/os-Linux/tty_log.c:194:
+__uml_setup("tty_log_dir=", set_tty_log_dir,
+"tty_log_dir=<directory>\n"

ERROR:SPACING: space required before the open brace '{'
#487: FILE: arch/um/os-Linux/tty_log.c:204:
+	if((*end != '\0') || (end == name)){

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'end == name'
#487: FILE: arch/um/os-Linux/tty_log.c:204:
+	if((*end != '\0') || (end == name)){

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space required before the open parenthesis '('
#487: FILE: arch/um/os-Linux/tty_log.c:204:
+	if((*end != '\0') || (end == name)){

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'set_tty_log_fd', this function's name, in a string
#488: FILE: arch/um/os-Linux/tty_log.c:205:
+		printf("set_tty_log_fd - strtoul failed on '%s'\n", name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#497: FILE: arch/um/os-Linux/tty_log.c:214:
+__uml_setup("tty_log_fd=", set_tty_log_fd,
+"tty_log_fd=<fd>\n"

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000090844.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 36 errors, 10 warnings, 13 checks, 257 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000090844.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
