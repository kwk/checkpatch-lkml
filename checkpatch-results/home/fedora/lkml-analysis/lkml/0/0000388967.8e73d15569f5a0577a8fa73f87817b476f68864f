WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#29: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#30: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#31: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#32: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#33: 
#	           ChangeSet	1.1132  -> 1.1133 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#34: 
#	drivers/char/watchdog/Kconfig	1.8     -> 1.9    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#35: 
#	drivers/char/watchdog/Makefile	1.8     -> 1.9    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#36: 
#	               (new)	        -> 1.1     drivers/char/watchdog/ztwd.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#37: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#38: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#39: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#40: 
# 03/02/28	rusty@penguin.co.intel.com	1.1133

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#41: 
# Adding the ztwd watchdog timer

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#42: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#43: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#45: 
--- a/drivers/char/watchdog/Kconfig	Fri Feb 28 20:10:03 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#55: FILE: drivers/char/watchdog/Kconfig:384:
+          This is a driver for the hardware watchdog on the ZT55XX line $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#78: FILE: drivers/char/watchdog/ztwd.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#84: FILE: drivers/char/watchdog/ztwd.c:7:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#94: FILE: drivers/char/watchdog/ztwd.c:17:
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#95: FILE: drivers/char/watchdog/ztwd.c:18:
+ * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#96: FILE: drivers/char/watchdog/ztwd.c:19:
+ * THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#97: FILE: drivers/char/watchdog/ztwd.c:20:
+ * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#98: FILE: drivers/char/watchdog/ztwd.c:21:
+ * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#99: FILE: drivers/char/watchdog/ztwd.c:22:
+ * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#100: FILE: drivers/char/watchdog/ztwd.c:23:
+ * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#101: FILE: drivers/char/watchdog/ztwd.c:24:
+ * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#105: FILE: drivers/char/watchdog/ztwd.c:28:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#106: FILE: drivers/char/watchdog/ztwd.c:29:
+ * 675 Mass Ave, Cambridge, MA 02139, USA.$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#117: FILE: drivers/char/watchdog/ztwd.c:40:
+ * on the ZT55XX line of single board computers. $

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#128: FILE: drivers/char/watchdog/ztwd.c:51:
+#include <asm/io.h>

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#131: FILE: drivers/char/watchdog/ztwd.c:54:
+#define dbg(format, arg...)				\
+		 printk (KERN_DEBUG "%s: " format "\n",	\
+			 __FUNCTION__, ## arg);

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#131: FILE: drivers/char/watchdog/ztwd.c:54:
+#define dbg(format, arg...)				\
+		 printk (KERN_DEBUG "%s: " format "\n",	\
+			 __FUNCTION__, ## arg);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#132: FILE: drivers/char/watchdog/ztwd.c:55:
+		 printk (KERN_DEBUG "%s: " format "\n",	\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#132: FILE: drivers/char/watchdog/ztwd.c:55:
+		 printk (KERN_DEBUG "%s: " format "\n",	\

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#133: FILE: drivers/char/watchdog/ztwd.c:56:
+			 __FUNCTION__, ## arg);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#134: FILE: drivers/char/watchdog/ztwd.c:57:
+#define trace(format, arg...)				 \
+                 printk(KERN_INFO "%s(" format ")\n",    \
+		        __FUNCTION__ , ## arg);

ERROR:CODE_INDENT: code indent should use tabs where possible
#135: FILE: drivers/char/watchdog/ztwd.c:58:
+                 printk(KERN_INFO "%s(" format ")\n",    \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: drivers/char/watchdog/ztwd.c:58:
+                 printk(KERN_INFO "%s(" format ")\n",    \$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#135: FILE: drivers/char/watchdog/ztwd.c:58:
+                 printk(KERN_INFO "%s(" format ")\n",    \

ERROR:CODE_INDENT: code indent should use tabs where possible
#136: FILE: drivers/char/watchdog/ztwd.c:59:
+^I^I        __FUNCTION__ , ## arg);$

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#136: FILE: drivers/char/watchdog/ztwd.c:59:
+		        __FUNCTION__ , ## arg);
 		                     ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#136: FILE: drivers/char/watchdog/ztwd.c:59:
+		        __FUNCTION__ , ## arg);

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: drivers/char/watchdog/ztwd.c:66:
+                printk(KERN_ERR "%s: " format "\n", \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: drivers/char/watchdog/ztwd.c:66:
+                printk(KERN_ERR "%s: " format "\n", \$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#143: FILE: drivers/char/watchdog/ztwd.c:66:
+                printk(KERN_ERR "%s: " format "\n", \

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#144: FILE: drivers/char/watchdog/ztwd.c:67:
+		       __FUNCTION__ , ## arg)
 		                    ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#144: FILE: drivers/char/watchdog/ztwd.c:67:
+		       __FUNCTION__ , ## arg)

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: drivers/char/watchdog/ztwd.c:69:
+                printk(KERN_INFO "%s: " format "\n", \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: drivers/char/watchdog/ztwd.c:69:
+                printk(KERN_INFO "%s: " format "\n", \$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#146: FILE: drivers/char/watchdog/ztwd.c:69:
+                printk(KERN_INFO "%s: " format "\n", \

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#147: FILE: drivers/char/watchdog/ztwd.c:70:
+		       __FUNCTION__ , ## arg)
 		                    ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#147: FILE: drivers/char/watchdog/ztwd.c:70:
+		       __FUNCTION__ , ## arg)

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: drivers/char/watchdog/ztwd.c:72:
+                printk(KERN_WARNING "%s: " format "\n", \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: drivers/char/watchdog/ztwd.c:72:
+                printk(KERN_WARNING "%s: " format "\n", \$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#149: FILE: drivers/char/watchdog/ztwd.c:72:
+                printk(KERN_WARNING "%s: " format "\n", \

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#150: FILE: drivers/char/watchdog/ztwd.c:73:
+		       __FUNCTION__ , ## arg)
 		                    ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#150: FILE: drivers/char/watchdog/ztwd.c:73:
+		       __FUNCTION__ , ## arg)

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#172: FILE: drivers/char/watchdog/ztwd.c:95:
+static int nowayout = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#173: FILE: drivers/char/watchdog/ztwd.c:96:
+static int bootstatus = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#174: FILE: drivers/char/watchdog/ztwd.c:97:
+static int status = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#175: FILE: drivers/char/watchdog/ztwd.c:98:
+static int pretimeout = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: drivers/char/watchdog/ztwd.c:102:
+    ^Iuint8_t value;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#179: FILE: drivers/char/watchdog/ztwd.c:102:
+    ^Iuint8_t value;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: drivers/char/watchdog/ztwd.c:102:
+    ^Iuint8_t value;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#179: FILE: drivers/char/watchdog/ztwd.c:102:
+    	uint8_t value;

ERROR:CODE_INDENT: code indent should use tabs where possible
#192: FILE: drivers/char/watchdog/ztwd.c:115:
+    ^Iuint8_t value;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#192: FILE: drivers/char/watchdog/ztwd.c:115:
+    ^Iuint8_t value;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#192: FILE: drivers/char/watchdog/ztwd.c:115:
+    ^Iuint8_t value;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#192: FILE: drivers/char/watchdog/ztwd.c:115:
+    	uint8_t value;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#207: FILE: drivers/char/watchdog/ztwd.c:130:
+static int ztwd_keepalive(struct watchdog_driver *d) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#215: FILE: drivers/char/watchdog/ztwd.c:138:
+static int ztwd_get_status(struct watchdog_driver *d, int *s) $

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#217: FILE: drivers/char/watchdog/ztwd.c:140:
+	uint8_t value;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#227: FILE: drivers/char/watchdog/ztwd.c:150:
+static int ztwd_get_bootstatus(struct watchdog_driver *d, int *bs) $

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#236: FILE: drivers/char/watchdog/ztwd.c:159:
+	uint8_t value;

WARNING:TYPO_SPELLING: 'recieved' may be misspelled - perhaps 'received'?
#240: FILE: drivers/char/watchdog/ztwd.c:163:
+		dbg("recieved a null timeout pointer!");
 		     ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#267: FILE: drivers/char/watchdog/ztwd.c:190:
+^I^I*timeout = 256;^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#275: FILE: drivers/char/watchdog/ztwd.c:198:
+    ^Iuint8_t value;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#275: FILE: drivers/char/watchdog/ztwd.c:198:
+    ^Iuint8_t value;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: drivers/char/watchdog/ztwd.c:198:
+    ^Iuint8_t value;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#275: FILE: drivers/char/watchdog/ztwd.c:198:
+    	uint8_t value;

WARNING:TYPO_SPELLING: 'specifed' may be misspelled - perhaps 'specified'?
#279: FILE: drivers/char/watchdog/ztwd.c:202:
+	    	dbg("invalid time specifed"); 
 	    	                  ^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#279: FILE: drivers/char/watchdog/ztwd.c:202:
+^I    ^Idbg("invalid time specifed"); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#279: FILE: drivers/char/watchdog/ztwd.c:202:
+^I    ^Idbg("invalid time specifed"); $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#279: FILE: drivers/char/watchdog/ztwd.c:202:
+^I    ^Idbg("invalid time specifed"); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#280: FILE: drivers/char/watchdog/ztwd.c:203:
+^I    ^Ireturn 1;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#280: FILE: drivers/char/watchdog/ztwd.c:203:
+^I    ^Ireturn 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#292: FILE: drivers/char/watchdog/ztwd.c:215:
+^I    ^Itimeout = WD_TC_32S;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#292: FILE: drivers/char/watchdog/ztwd.c:215:
+^I    ^Itimeout = WD_TC_32S;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#294: FILE: drivers/char/watchdog/ztwd.c:217:
+^I    ^Itimeout = WD_TC_64S;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#294: FILE: drivers/char/watchdog/ztwd.c:217:
+^I    ^Itimeout = WD_TC_64S;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#296: FILE: drivers/char/watchdog/ztwd.c:219:
+^I    ^Itimeout = WD_TC_128S;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#296: FILE: drivers/char/watchdog/ztwd.c:219:
+^I    ^Itimeout = WD_TC_128S;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#298: FILE: drivers/char/watchdog/ztwd.c:221:
+^I    ^Itimeout = WD_TC_256S;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#298: FILE: drivers/char/watchdog/ztwd.c:221:
+^I    ^Itimeout = WD_TC_256S;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#300: FILE: drivers/char/watchdog/ztwd.c:223:
+^I    ^Itimeout = WD_TC_256S;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#300: FILE: drivers/char/watchdog/ztwd.c:223:
+^I    ^Itimeout = WD_TC_256S;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#301: FILE: drivers/char/watchdog/ztwd.c:224:
+^I$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#306: FILE: drivers/char/watchdog/ztwd.c:229:
+	outb (value, WD_CTL_REG);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#313: FILE: drivers/char/watchdog/ztwd.c:236:
+	*c = WDIOS_DISABLECARD|WDIOS_ENABLECARD;
 	                      ^

WARNING:CONST_STRUCT: struct watchdog_ops should normally be const
#331: FILE: drivers/char/watchdog/ztwd.c:254:
+static struct watchdog_ops ztwd_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#355: FILE: drivers/char/watchdog/ztwd.c:278:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#356: FILE: drivers/char/watchdog/ztwd.c:279:
+ * ZT55XX specific controls $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#361: FILE: drivers/char/watchdog/ztwd.c:284:
+static ssize_t pretimeout_enable_show(struct device_driver * d, char * buf)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#361: FILE: drivers/char/watchdog/ztwd.c:284:
+static ssize_t pretimeout_enable_show(struct device_driver * d, char * buf)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#364: FILE: drivers/char/watchdog/ztwd.c:287:
+	return sprintf(buf, "%i\n",pretimeout);
 	                          ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#366: FILE: drivers/char/watchdog/ztwd.c:289:
+}
+static ssize_t pretimeout_enable_store(struct device_driver *d,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#367: FILE: drivers/char/watchdog/ztwd.c:290:
+^I^I^I^I       const char * buf, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#367: FILE: drivers/char/watchdog/ztwd.c:290:
+				       const char * buf, 

ERROR:SPACING: space required after that ',' (ctx:VxV)
#371: FILE: drivers/char/watchdog/ztwd.c:294:
+	if (sscanf(buf,"%i",&pretimeout) != 1)
 	              ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#371: FILE: drivers/char/watchdog/ztwd.c:294:
+	if (sscanf(buf,"%i",&pretimeout) != 1)
 	                   ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#371: FILE: drivers/char/watchdog/ztwd.c:294:
+	if (sscanf(buf,"%i",&pretimeout) != 1)
 	                    ^

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#371: FILE: drivers/char/watchdog/ztwd.c:294:
+	if (sscanf(buf,"%i",&pretimeout) != 1)
+		return -EINVAL;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#376: FILE: drivers/char/watchdog/ztwd.c:299:
+DRIVER_ATTR(pretimeout_enable,0644,pretimeout_enable_show,
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#376: FILE: drivers/char/watchdog/ztwd.c:299:
+DRIVER_ATTR(pretimeout_enable,0644,pretimeout_enable_show,
                                   ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#380: FILE: drivers/char/watchdog/ztwd.c:303:
+static ssize_t pretimeout_action_show(struct device_driver * d, char * buf)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#380: FILE: drivers/char/watchdog/ztwd.c:303:
+static ssize_t pretimeout_action_show(struct device_driver * d, char * buf)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#382: FILE: drivers/char/watchdog/ztwd.c:305:
+	uint8_t value;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#383: FILE: drivers/char/watchdog/ztwd.c:306:
+^I$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#386: FILE: drivers/char/watchdog/ztwd.c:309:
+	return sprintf(buf, "%i\n",value&WD_STAGE1_ACTION_MASK?1:0);
 	                          ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#386: FILE: drivers/char/watchdog/ztwd.c:309:
+	return sprintf(buf, "%i\n",value&WD_STAGE1_ACTION_MASK?1:0);
 	                                ^

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#386: FILE: drivers/char/watchdog/ztwd.c:309:
+	return sprintf(buf, "%i\n",value&WD_STAGE1_ACTION_MASK?1:0);
 	                                                      ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#386: FILE: drivers/char/watchdog/ztwd.c:309:
+	return sprintf(buf, "%i\n",value&WD_STAGE1_ACTION_MASK?1:0);
 	                                                        ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#388: FILE: drivers/char/watchdog/ztwd.c:311:
+}
+static ssize_t pretimeout_action_store(struct device_driver *d,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#389: FILE: drivers/char/watchdog/ztwd.c:312:
+^I^I^I^I       const char * buf, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#389: FILE: drivers/char/watchdog/ztwd.c:312:
+				       const char * buf, 

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#393: FILE: drivers/char/watchdog/ztwd.c:316:
+	uint8_t value;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#396: FILE: drivers/char/watchdog/ztwd.c:319:
+	if (sscanf(buf,"%i",&tmp) != 1)
 	              ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#396: FILE: drivers/char/watchdog/ztwd.c:319:
+	if (sscanf(buf,"%i",&tmp) != 1)
 	                   ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#396: FILE: drivers/char/watchdog/ztwd.c:319:
+	if (sscanf(buf,"%i",&tmp) != 1)
 	                    ^

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#396: FILE: drivers/char/watchdog/ztwd.c:319:
+	if (sscanf(buf,"%i",&tmp) != 1)
+		return -EINVAL;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#407: FILE: drivers/char/watchdog/ztwd.c:330:
+DRIVER_ATTR(pretimeout_action,0644,pretimeout_action_show,
                              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#407: FILE: drivers/char/watchdog/ztwd.c:330:
+DRIVER_ATTR(pretimeout_action,0644,pretimeout_action_show,
                                   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#413: FILE: drivers/char/watchdog/ztwd.c:336:
+    ^Iuint8_t value;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#413: FILE: drivers/char/watchdog/ztwd.c:336:
+    ^Iuint8_t value;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#413: FILE: drivers/char/watchdog/ztwd.c:336:
+    ^Iuint8_t value;$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#413: FILE: drivers/char/watchdog/ztwd.c:336:
+    	uint8_t value;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#422: FILE: drivers/char/watchdog/ztwd.c:345:
+^Ivalue = inb(WD_CTL_REG);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#430: FILE: drivers/char/watchdog/ztwd.c:353:
+^I}^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#444: FILE: drivers/char/watchdog/ztwd.c:367:
+^Idriver_create_file(&ztwd_driver.driver, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#446: FILE: drivers/char/watchdog/ztwd.c:369:
+^Idriver_create_file(&ztwd_driver.driver, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#456: FILE: drivers/char/watchdog/ztwd.c:379:
+^Idriver_remove_file(&ztwd_driver.driver, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#458: FILE: drivers/char/watchdog/ztwd.c:381:
+^Idriver_remove_file(&ztwd_driver.driver, $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000388967.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 74 errors, 56 warnings, 14 checks, 412 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000388967.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
