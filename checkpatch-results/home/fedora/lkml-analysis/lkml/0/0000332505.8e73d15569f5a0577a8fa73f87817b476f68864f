WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#21: 
Well, looks like the first mail got munged.  Here's the original mail with the patch inline.... Sorry for the trash.

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#32: 
boot parameters at the end of the the empty_zero_page; rather, based on =

ERROR:TRAILING_WHITESPACE: trailing whitespace
#84: FILE: arch/i386/Kconfig:843:
+^Ibool $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#106: FILE: arch/i386/kernel/acpi/boot.c:299:
+^I$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#118: FILE: arch/i386/kernel/efi.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#121: FILE: arch/i386/kernel/efi.c:4:
+ * Based on Extensible Firmware Interface Specification version 1.0 $

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#152: FILE: arch/i386/kernel/efi.c:35:
+#include <asm/io.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#154: FILE: arch/i386/kernel/efi.c:37:
+#include <asm/pgtable.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#155: FILE: arch/i386/kernel/efi.c:38:
+#include <asm/processor.h>

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#161: FILE: arch/i386/kernel/efi.c:44:
+#define PFX ^I^I"EFI: "$

WARNING:STORAGE_CLASS: storage class 'asmlinkage' should be located before type 'efi_status_t'
#163: FILE: arch/i386/kernel/efi.c:46:
+extern efi_status_t asmlinkage efi_call_phys(void *, ...);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#163: FILE: arch/i386/kernel/efi.c:46:
+extern efi_status_t asmlinkage efi_call_phys(void *, ...);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#169: FILE: arch/i386/kernel/efi.c:52:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#170: FILE: arch/i386/kernel/efi.c:53:
+ * We require an early boot_ioremap mapping mechanism initially $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#172: FILE: arch/i386/kernel/efi.c:55:
+extern void * boot_ioremap(unsigned long, unsigned long);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#172: FILE: arch/i386/kernel/efi.c:55:
+extern void * boot_ioremap(unsigned long, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#172: FILE: arch/i386/kernel/efi.c:55:
+extern void * boot_ioremap(unsigned long, unsigned long);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#172: FILE: arch/i386/kernel/efi.c:55:
+extern void * boot_ioremap(unsigned long, unsigned long);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#175: FILE: arch/i386/kernel/efi.c:58:
+ * efi_dir is allocated here, but the directory isn't created $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#185: FILE: arch/i386/kernel/efi.c:68:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#188: FILE: arch/i386/kernel/efi.c:71:
+ * prelog/epilog before/after the invocation to disable interrupt, to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#204: FILE: arch/i386/kernel/efi.c:87:
+^I$

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#210: FILE: arch/i386/kernel/efi.c:93:
+	__asm__ __volatile__("movl %%cr4, %0":"=r"(cr4));
 	                                     ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#235: FILE: arch/i386/kernel/efi.c:118:
+	__asm__ __volatile__("lgdt %0":"=m"
 	                              ^

CHECK:SPACING: No space is necessary after a cast
#236: FILE: arch/i386/kernel/efi.c:119:
+			    (*(struct Xgt_desc_struct *) __pa(&cpu_gdt_descr[0])));

CHECK:CAMELCASE: Avoid CamelCase: <Xgt_desc_struct>
#236: FILE: arch/i386/kernel/efi.c:119:
+			    (*(struct Xgt_desc_struct *) __pa(&cpu_gdt_descr[0])));

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:TRAILING_WHITESPACE: trailing whitespace
#243: FILE: arch/i386/kernel/efi.c:126:
+^Icpu_gdt_descr[0].address = $

CHECK:SPACING: No space is necessary after a cast
#244: FILE: arch/i386/kernel/efi.c:127:
+		(unsigned long) __va(cpu_gdt_descr[0].address);

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#245: FILE: arch/i386/kernel/efi.c:128:
+	__asm__ __volatile__("lgdt %0":"=m"(cpu_gdt_descr));
 	                              ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#246: FILE: arch/i386/kernel/efi.c:129:
+	__asm__ __volatile__("movl %%cr4, %0":"=r"(cr4));
 	                                     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#267: FILE: arch/i386/kernel/efi.c:150:
+static efi_status_t $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#268: FILE: arch/i386/kernel/efi.c:151:
+phys_efi_set_virtual_address_map(unsigned long memory_map_size, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#270: FILE: arch/i386/kernel/efi.c:153:
+^I^I^I^I u32 descriptor_version, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#274: FILE: arch/i386/kernel/efi.c:157:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#276: FILE: arch/i386/kernel/efi.c:159:
+^Istatus = efi_call_phys(efi_phys.set_virtual_address_map, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#277: FILE: arch/i386/kernel/efi.c:160:
+	status = efi_call_phys(efi_phys.set_virtual_address_map, 
+				     memory_map_size, descriptor_size,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#283: FILE: arch/i386/kernel/efi.c:166:
+efi_status_t $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#291: FILE: arch/i386/kernel/efi.c:174:
+^Ireturn status; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#303: FILE: arch/i386/kernel/efi.c:186:
+^I^I            tm.second);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#303: FILE: arch/i386/kernel/efi.c:186:
+	tv->tv_sec = mktime(tm.year, tm.month, tm.day, tm.hour, tm.minute,
+		            tm.second);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#307: FILE: arch/i386/kernel/efi.c:190:
+int is_available_memory(efi_memory_desc_t * md)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#312: FILE: arch/i386/kernel/efi.c:195:
+	switch (md->type) {
+		case EFI_LOADER_CODE:
+		case EFI_LOADER_DATA:
+		case EFI_BOOT_SERVICES_CODE:
+		case EFI_BOOT_SERVICES_DATA:
+		case EFI_CONVENTIONAL_MEMORY:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_WHITESPACE: trailing whitespace
#323: FILE: arch/i386/kernel/efi.c:206:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#324: FILE: arch/i386/kernel/efi.c:207:
+ * We need to map the EFI memory map again after paging_init().  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#329: FILE: arch/i386/kernel/efi.c:212:
+^I$

CHECK:SPACING: No space is necessary after a cast
#331: FILE: arch/i386/kernel/efi.c:214:
+		bt_ioremap((unsigned long) memmap.phys_map,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#332: FILE: arch/i386/kernel/efi.c:215:
+		bt_ioremap((unsigned long) memmap.phys_map,
+			(memmap.nr_map * sizeof(efi_memory_desc_t)));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!memmap.map"
#334: FILE: arch/i386/kernel/efi.c:217:
+	if (memmap.map == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#335: FILE: arch/i386/kernel/efi.c:218:
+		printk(KERN_ERR PFX "Could not remap the EFI memmap!\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#336: FILE: arch/i386/kernel/efi.c:219:
+}^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#342: FILE: arch/i386/kernel/efi.c:225:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#345: FILE: arch/i386/kernel/efi.c:228:
+		printk(KERN_INFO "mem%02u: type=%u, attr=0x%llx, "

WARNING:SPLIT_STRING: quoted string split across lines
#346: FILE: arch/i386/kernel/efi.c:229:
+		printk(KERN_INFO "mem%02u: type=%u, attr=0x%llx, "
+			"range=[0x%016llx-0x%016llx) (%lluMB)\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#371: FILE: arch/i386/kernel/efi.c:254:
+^I^Iif ((md->num_pages == 0) || (!is_available_memory(md)))^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'md->num_pages == 0'
#371: FILE: arch/i386/kernel/efi.c:254:
+		if ((md->num_pages == 0) || (!is_available_memory(md)))	

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#382: FILE: arch/i386/kernel/efi.c:265:
+				printk(KERN_INFO PFX "Unordered memory map\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#383: FILE: arch/i386/kernel/efi.c:266:
+			if (prev.end == curr.start)
[...]
+			else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#385: FILE: arch/i386/kernel/efi.c:268:
+			else {

CHECK:SPACING: No space is necessary after a cast
#387: FILE: arch/i386/kernel/efi.c:270:
+				    (unsigned long) (PAGE_ALIGN(prev.start));

CHECK:SPACING: No space is necessary after a cast
#388: FILE: arch/i386/kernel/efi.c:271:
+				end = (unsigned long) (prev.end & PAGE_MASK);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'end > start'
#389: FILE: arch/i386/kernel/efi.c:272:
+				if ((end > start)
+				    && (*callback) (start, end, arg) < 0)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#390: FILE: arch/i386/kernel/efi.c:273:
+				if ((end > start)
+				    && (*callback) (start, end, arg) < 0)

CHECK:SPACING: No space is necessary after a cast
#397: FILE: arch/i386/kernel/efi.c:280:
+		start = (unsigned long) PAGE_ALIGN(prev.start);

CHECK:SPACING: No space is necessary after a cast
#398: FILE: arch/i386/kernel/efi.c:281:
+		end = (unsigned long) (prev.end & PAGE_MASK);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#413: FILE: arch/i386/kernel/efi.c:296:
+	memset(&efi, 0, sizeof(efi) );

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#418: FILE: arch/i386/kernel/efi.c:301:
+	memmap.nr_map = EFI_MEMMAP_SIZE/EFI_MEMDESC_SIZE;
 	                               ^

CHECK:SPACING: No space is necessary after a cast
#422: FILE: arch/i386/kernel/efi.c:305:
+		boot_ioremap((unsigned long) efi_phys.systab,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#423: FILE: arch/i386/kernel/efi.c:306:
+		boot_ioremap((unsigned long) efi_phys.systab,
+			sizeof(efi_system_table_t));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#427: FILE: arch/i386/kernel/efi.c:310:
+^Iif (efi.systab == NULL) $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!efi.systab"
#427: FILE: arch/i386/kernel/efi.c:310:
+	if (efi.systab == NULL) 

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#428: FILE: arch/i386/kernel/efi.c:311:
+		printk(KERN_ERR PFX "Woah! Couldn't map the EFI system table.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#430: FILE: arch/i386/kernel/efi.c:313:
+		printk(KERN_ERR PFX "Woah! EFI system table signature incorrect\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#432: FILE: arch/i386/kernel/efi.c:315:
+		printk(KERN_ERR PFX

WARNING:SPLIT_STRING: quoted string split across lines
#434: FILE: arch/i386/kernel/efi.c:317:
+		       "Warning: EFI system table major version mismatch: "
+		       "got %d.%02d, expected %d.%02d\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#439: FILE: arch/i386/kernel/efi.c:322:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#440: FILE: arch/i386/kernel/efi.c:323:
+^I * Grab some details from the system table $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#446: FILE: arch/i386/kernel/efi.c:329:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#447: FILE: arch/i386/kernel/efi.c:330:
+^I * Show what we know for posterity $

CHECK:SPACING: No space is necessary after a cast
#449: FILE: arch/i386/kernel/efi.c:332:
+	c16 = (efi_char16_t *) boot_ioremap(efi.systab->fw_vendor, 2);

CHECK:BRACES: braces {} should be used on all arms of this statement
#450: FILE: arch/i386/kernel/efi.c:333:
+	if (c16) {
[...]
+	} else
[...]

ERROR:TRAILING_WHITESPACE: trailing whitespace
#451: FILE: arch/i386/kernel/efi.c:334:
+^I^Ifor (i = 0; i < sizeof(vendor) && *c16; ++i) $

CHECK:BRACES: Unbalanced braces around else statement
#454: FILE: arch/i386/kernel/efi.c:337:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#455: FILE: arch/i386/kernel/efi.c:338:
+		printk(KERN_ERR PFX "Could not map the firmware vendor!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#457: FILE: arch/i386/kernel/efi.c:340:
+	printk(KERN_INFO PFX "EFI v%u.%.02u by %s \n",

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#457: FILE: arch/i386/kernel/efi.c:340:
+	printk(KERN_INFO PFX "EFI v%u.%.02u by %s \n",

CHECK:SPACING: No space is necessary after a cast
#465: FILE: arch/i386/kernel/efi.c:348:
+				boot_ioremap((unsigned long) config_tables,

ERROR:CODE_INDENT: code indent should use tabs where possible
#466: FILE: arch/i386/kernel/efi.c:349:
+^I^I^I        num_config_tables * sizeof(efi_config_table_t));$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#466: FILE: arch/i386/kernel/efi.c:349:
+				boot_ioremap((unsigned long) config_tables,
+			        num_config_tables * sizeof(efi_config_table_t));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!config_tables"
#468: FILE: arch/i386/kernel/efi.c:351:
+	if (config_tables == NULL)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#469: FILE: arch/i386/kernel/efi.c:352:
+		printk(KERN_ERR PFX "Could not map EFI Configuration Table!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#474: FILE: arch/i386/kernel/efi.c:357:
+			printk(KERN_INFO " MPS=0x%lx ", config_tables[i].table);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#475: FILE: arch/i386/kernel/efi.c:358:
+		} else
+		    if (efi_guidcmp(config_tables[i].guid, ACPI_20_TABLE_GUID) == 0) {

CHECK:BRACES: Unbalanced braces around else statement
#475: FILE: arch/i386/kernel/efi.c:358:
+		} else

WARNING:TABSTOP: Statements should start on a tabstop
#476: FILE: arch/i386/kernel/efi.c:359:
+		    if (efi_guidcmp(config_tables[i].guid, ACPI_20_TABLE_GUID) == 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#478: FILE: arch/i386/kernel/efi.c:361:
+			printk(KERN_INFO " ACPI 2.0=0x%lx ", config_tables[i].table);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#479: FILE: arch/i386/kernel/efi.c:362:
+		} else
+		    if (efi_guidcmp(config_tables[i].guid, ACPI_TABLE_GUID) == 0) {

CHECK:BRACES: Unbalanced braces around else statement
#479: FILE: arch/i386/kernel/efi.c:362:
+		} else

WARNING:TABSTOP: Statements should start on a tabstop
#480: FILE: arch/i386/kernel/efi.c:363:
+		    if (efi_guidcmp(config_tables[i].guid, ACPI_TABLE_GUID) == 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#482: FILE: arch/i386/kernel/efi.c:365:
+			printk(KERN_INFO " ACPI=0x%lx ", config_tables[i].table);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#483: FILE: arch/i386/kernel/efi.c:366:
+		} else
+		    if (efi_guidcmp(config_tables[i].guid, SMBIOS_TABLE_GUID) == 0) {

CHECK:BRACES: Unbalanced braces around else statement
#483: FILE: arch/i386/kernel/efi.c:366:
+		} else

WARNING:TABSTOP: Statements should start on a tabstop
#484: FILE: arch/i386/kernel/efi.c:367:
+		    if (efi_guidcmp(config_tables[i].guid, SMBIOS_TABLE_GUID) == 0) {

CHECK:SPACING: No space is necessary after a cast
#485: FILE: arch/i386/kernel/efi.c:368:
+			efi.smbios = (void *) config_tables[i].table;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#486: FILE: arch/i386/kernel/efi.c:369:
+			printk(KERN_INFO " SMBIOS=0x%lx ", config_tables[i].table);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#487: FILE: arch/i386/kernel/efi.c:370:
+		} else
+		    if (efi_guidcmp(config_tables[i].guid, HCDP_TABLE_GUID) == 0) {

CHECK:BRACES: Unbalanced braces around else statement
#487: FILE: arch/i386/kernel/efi.c:370:
+		} else

WARNING:TABSTOP: Statements should start on a tabstop
#488: FILE: arch/i386/kernel/efi.c:371:
+		    if (efi_guidcmp(config_tables[i].guid, HCDP_TABLE_GUID) == 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#490: FILE: arch/i386/kernel/efi.c:373:
+			printk(KERN_INFO " HCDP=0x%lx ", config_tables[i].table);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#491: FILE: arch/i386/kernel/efi.c:374:
+		} else
+		    if (efi_guidcmp(config_tables[i].guid, UGA_IO_PROTOCOL_GUID) == 0) {

CHECK:BRACES: Unbalanced braces around else statement
#491: FILE: arch/i386/kernel/efi.c:374:
+		} else

WARNING:TABSTOP: Statements should start on a tabstop
#492: FILE: arch/i386/kernel/efi.c:375:
+		    if (efi_guidcmp(config_tables[i].guid, UGA_IO_PROTOCOL_GUID) == 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#494: FILE: arch/i386/kernel/efi.c:377:
+			printk(KERN_INFO " UGA=0x%lx ", config_tables[i].table);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#495: FILE: arch/i386/kernel/efi.c:378:
+^I^I} $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#497: FILE: arch/i386/kernel/efi.c:380:
+	printk("\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#498: FILE: arch/i386/kernel/efi.c:381:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#500: FILE: arch/i386/kernel/efi.c:383:
+^I * Check out the runtime services table. We need to map $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#501: FILE: arch/i386/kernel/efi.c:384:
+^I * the runtime services table so that we can grab the physical $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#502: FILE: arch/i386/kernel/efi.c:385:
+^I * address of several of the EFI runtime functions, needed to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#505: FILE: arch/i386/kernel/efi.c:388:
+^I    $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#506: FILE: arch/i386/kernel/efi.c:389:
+^Iruntime = (efi_runtime_services_t *) boot_ioremap((unsigned long) $

CHECK:SPACING: No space is necessary after a cast
#506: FILE: arch/i386/kernel/efi.c:389:
+	runtime = (efi_runtime_services_t *) boot_ioremap((unsigned long) 

ERROR:CODE_INDENT: code indent should use tabs where possible
#508: FILE: arch/i386/kernel/efi.c:391:
+^I^I^I^I      ^I^Isizeof(efi_runtime_services_t));$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#508: FILE: arch/i386/kernel/efi.c:391:
+^I^I^I^I      ^I^Isizeof(efi_runtime_services_t));$

CHECK:BRACES: braces {} should be used on all arms of this statement
#509: FILE: arch/i386/kernel/efi.c:392:
+	if (runtime != NULL) {
[...]
+	} else
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "runtime"
#509: FILE: arch/i386/kernel/efi.c:392:
+	if (runtime != NULL) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#510: FILE: arch/i386/kernel/efi.c:393:
+^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#511: FILE: arch/i386/kernel/efi.c:394:
+^I ^I * We will only need *early* access to the following $

ERROR:CODE_INDENT: code indent should use tabs where possible
#511: FILE: arch/i386/kernel/efi.c:394:
+^I ^I * We will only need *early* access to the following $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#511: FILE: arch/i386/kernel/efi.c:394:
+^I ^I * We will only need *early* access to the following $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#512: FILE: arch/i386/kernel/efi.c:395:
+^I^I * two EFI runtime services before set_virtual_address_map $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#513: FILE: arch/i386/kernel/efi.c:396:
+^I^I * is invoked.  $

ERROR:CODE_INDENT: code indent should use tabs where possible
#514: FILE: arch/i386/kernel/efi.c:397:
+ ^I ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#514: FILE: arch/i386/kernel/efi.c:397:
+ ^I ^I */$

CHECK:SPACING: No space is necessary after a cast
#515: FILE: arch/i386/kernel/efi.c:398:
+		efi_phys.get_time = (efi_get_time_t *) runtime->get_time;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#516: FILE: arch/i386/kernel/efi.c:399:
+^I^Iefi_phys.set_virtual_address_map = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#517: FILE: arch/i386/kernel/efi.c:400:
+^I^I^I(efi_set_virtual_address_map_t *) $

CHECK:SPACING: No space is necessary after a cast
#517: FILE: arch/i386/kernel/efi.c:400:
+			(efi_set_virtual_address_map_t *) 

CHECK:BRACES: Unbalanced braces around else statement
#519: FILE: arch/i386/kernel/efi.c:402:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#520: FILE: arch/i386/kernel/efi.c:403:
+		printk(KERN_ERR PFX "Could not map the runtime service table!\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#524: FILE: arch/i386/kernel/efi.c:407:
+^Imemmap.map = (efi_memory_desc_t *) $

CHECK:SPACING: No space is necessary after a cast
#524: FILE: arch/i386/kernel/efi.c:407:
+	memmap.map = (efi_memory_desc_t *) 

CHECK:SPACING: No space is necessary after a cast
#525: FILE: arch/i386/kernel/efi.c:408:
+		boot_ioremap((unsigned long) EFI_MEMMAP, EFI_MEMMAP_SIZE);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#526: FILE: arch/i386/kernel/efi.c:409:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!memmap.map"
#527: FILE: arch/i386/kernel/efi.c:410:
+	if (memmap.map == NULL)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#528: FILE: arch/i386/kernel/efi.c:411:
+		printk(KERN_ERR PFX "Could not map the EFI memory map!\n");

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#530: FILE: arch/i386/kernel/efi.c:413:
+	if (EFI_MEMDESC_SIZE != sizeof(efi_memory_desc_t)) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#531: FILE: arch/i386/kernel/efi.c:414:
+		printk(KERN_WARNING PFX "Warning! Kernel-defined memdesc doesn't "

WARNING:SPLIT_STRING: quoted string split across lines
#532: FILE: arch/i386/kernel/efi.c:415:
+		printk(KERN_WARNING PFX "Warning! Kernel-defined memdesc doesn't "
+			   "match the one from EFI!\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#539: FILE: arch/i386/kernel/efi.c:422:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#540: FILE: arch/i386/kernel/efi.c:423:
+ * This function will switch the EFI runtime services to virtual mode.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#544: FILE: arch/i386/kernel/efi.c:427:
+ * This enables the runtime services to be called without having to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#545: FILE: arch/i386/kernel/efi.c:428:
+ * thunk back into physical mode for every invocation.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#555: FILE: arch/i386/kernel/efi.c:438:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#558: FILE: arch/i386/kernel/efi.c:441:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#560: FILE: arch/i386/kernel/efi.c:443:
+^I^I^Imd->virt_addr = $

CHECK:SPACING: No space is necessary after a cast
#561: FILE: arch/i386/kernel/efi.c:444:
+				(u64) ioremap((unsigned long) md->phys_addr,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#562: FILE: arch/i386/kernel/efi.c:445:
+^I^I^I^I^I      (unsigned long) (md->num_pages $

CHECK:SPACING: No space is necessary after a cast
#562: FILE: arch/i386/kernel/efi.c:445:
+					      (unsigned long) (md->num_pages 

CHECK:SPACING: No space is necessary after a cast
#564: FILE: arch/i386/kernel/efi.c:447:
+			if (!(unsigned long) md->virt_addr) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#565: FILE: arch/i386/kernel/efi.c:448:
+^I^I^I^Iprintk(KERN_ERR PFX "ioremap of md: 0x%lX failed \n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#565: FILE: arch/i386/kernel/efi.c:448:
+				printk(KERN_ERR PFX "ioremap of md: 0x%lX failed \n", 

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#565: FILE: arch/i386/kernel/efi.c:448:
+				printk(KERN_ERR PFX "ioremap of md: 0x%lX failed \n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#566: FILE: arch/i386/kernel/efi.c:449:
+				printk(KERN_ERR PFX "ioremap of md: 0x%lX failed \n", 
+					(unsigned long) md->phys_addr);

CHECK:SPACING: No space is necessary after a cast
#566: FILE: arch/i386/kernel/efi.c:449:
+					(unsigned long) md->phys_addr);

WARNING:LONG_LINE: line length of 199 exceeds 100 columns
#569: FILE: arch/i386/kernel/efi.c:452:
+			if (((unsigned long)md->phys_addr <= (unsigned long)efi_phys.systab) && ((unsigned long)efi_phys.systab < md->phys_addr + ((unsigned long) md->num_pages << EFI_PAGE_SHIFT))) {

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#569: FILE: arch/i386/kernel/efi.c:452:
+			if (((unsigned long)md->phys_addr <= (unsigned long)efi_phys.systab) && ((unsigned long)efi_phys.systab < md->phys_addr + ((unsigned long) md->num_pages << EFI_PAGE_SHIFT))) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#570: FILE: arch/i386/kernel/efi.c:453:
+^I^I^I^Iefi.systab = (efi_system_table_t *) $

CHECK:SPACING: No space is necessary after a cast
#570: FILE: arch/i386/kernel/efi.c:453:
+				efi.systab = (efi_system_table_t *) 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#571: FILE: arch/i386/kernel/efi.c:454:
+^I^I^I^I^I((md->virt_addr - md->phys_addr) + $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#572: FILE: arch/i386/kernel/efi.c:455:
+^I^I^I^I^I(u64)efi_phys.systab); $

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#578: FILE: arch/i386/kernel/efi.c:461:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#579: FILE: arch/i386/kernel/efi.c:462:
+^I$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#580: FILE: arch/i386/kernel/efi.c:463:
+	status = phys_efi_set_virtual_address_map(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#581: FILE: arch/i386/kernel/efi.c:464:
+^I^I^Isizeof(efi_memory_desc_t) * memmap.nr_map, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#584: FILE: arch/i386/kernel/efi.c:467:
+^I^I       ^Imemmap.phys_map);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#584: FILE: arch/i386/kernel/efi.c:467:
+^I^I       ^Imemmap.phys_map);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#585: FILE: arch/i386/kernel/efi.c:468:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#587: FILE: arch/i386/kernel/efi.c:470:
+		printk (KERN_ALERT "You are screwed! "

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#587: FILE: arch/i386/kernel/efi.c:470:
+		printk (KERN_ALERT "You are screwed! "

WARNING:SPLIT_STRING: quoted string split across lines
#588: FILE: arch/i386/kernel/efi.c:471:
+		printk (KERN_ALERT "You are screwed! "
+			"Unable to switch EFI into virtual mode "

WARNING:SPLIT_STRING: quoted string split across lines
#589: FILE: arch/i386/kernel/efi.c:472:
+			"Unable to switch EFI into virtual mode "
+			"(status=%lx)\n", status);

CHECK:SPACING: No space is necessary after a cast
#598: FILE: arch/i386/kernel/efi.c:481:
+	efi.get_time = (efi_get_time_t *) efi.systab->runtime->get_time;

CHECK:SPACING: No space is necessary after a cast
#599: FILE: arch/i386/kernel/efi.c:482:
+	efi.set_time = (efi_set_time_t *) efi.systab->runtime->set_time;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#616: FILE: arch/i386/kernel/efi.c:499:
+void __init $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#626: FILE: arch/i386/kernel/efi.c:509:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#679: FILE: arch/i386/kernel/efi.c:562:
+			printk(KERN_ERR PFX "Failed to allocate res %s : 0x%lx-0x%lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#680: FILE: arch/i386/kernel/efi.c:563:
+			printk(KERN_ERR PFX "Failed to allocate res %s : 0x%lx-0x%lx\n",
+				res->name, res->start, res->end);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#681: FILE: arch/i386/kernel/efi.c:564:
+^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#700: FILE: arch/i386/kernel/efi.c:583:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'md->phys_addr <= phys_addr'
#703: FILE: arch/i386/kernel/efi.c:586:
+		if ((md->phys_addr <= phys_addr) && (phys_addr <
+			(md->phys_addr + (md-> num_pages << EFI_PAGE_SHIFT)) ))

ERROR:SPACING: spaces prohibited around that '->' (ctx:VxW)
#704: FILE: arch/i386/kernel/efi.c:587:
+			(md->phys_addr + (md-> num_pages << EFI_PAGE_SHIFT)) ))
 			                    ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#704: FILE: arch/i386/kernel/efi.c:587:
+			(md->phys_addr + (md-> num_pages << EFI_PAGE_SHIFT)) ))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'md->phys_addr <= phys_addr'
#717: FILE: arch/i386/kernel/efi.c:600:
+		if ((md->phys_addr <= phys_addr) && (phys_addr <
+			(md->phys_addr + (md-> num_pages << EFI_PAGE_SHIFT)) ))

ERROR:SPACING: spaces prohibited around that '->' (ctx:VxW)
#718: FILE: arch/i386/kernel/efi.c:601:
+			(md->phys_addr + (md-> num_pages << EFI_PAGE_SHIFT)) ))
 			                    ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#718: FILE: arch/i386/kernel/efi.c:601:
+			(md->phys_addr + (md-> num_pages << EFI_PAGE_SHIFT)) ))

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#728: FILE: arch/i386/kernel/efi_stub.S:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#748: FILE: arch/i386/kernel/efi_stub.S:21:
+ * at the end no matter how many we use, because we can not assure EFI runtime $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#755: FILE: arch/i386/kernel/efi_stub.S:28:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#758: FILE: arch/i386/kernel/efi_stub.S:31:
+^I * the values of these registers are the same. And, the corresponding $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#775: FILE: arch/i386/kernel/efi_stub.S:48:
+^I * 2. Now on the top of stack is the return $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#777: FILE: arch/i386/kernel/efi_stub.S:50:
+^I * parameter 2, ..., param n. To make things easy, we save the return $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#802: FILE: arch/i386/kernel/efi_stub.S:75:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#810: FILE: arch/i386/kernel/efi_stub.S:83:
+^I * 6. After EFI runtime service returns, control will return to $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#831: FILE: arch/i386/kernel/efi_stub.S:104:
+^I/* $

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#884: FILE: arch/i386/kernel/reboot.c:268:
+			__asm__ __volatile__("lidt %0": :"m" (no_idt));
 			                              ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#884: FILE: arch/i386/kernel/reboot.c:268:
+			__asm__ __volatile__("lidt %0": :"m" (no_idt));
 			                                ^

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#924: FILE: arch/i386/kernel/setup.c:61:
+int efi_enabled = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#940: FILE: arch/i386/kernel/setup.c:158:
+						(((current_size-size) + PAGE_SIZE-1) >> PAGE_SHIFT);
 						               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#940: FILE: arch/i386/kernel/setup.c:158:
+						(((current_size-size) + PAGE_SIZE-1) >> PAGE_SHIFT);
 						                                 ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#946: FILE: arch/i386/kernel/setup.c:164:
+^I} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#956: FILE: arch/i386/kernel/setup.c:180:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#958: FILE: arch/i386/kernel/setup.c:182:
+       ^I^Ix = e820.nr_map;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#958: FILE: arch/i386/kernel/setup.c:182:
+       ^I^Ix = e820.nr_map;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#958: FILE: arch/i386/kernel/setup.c:182:
+       ^I^Ix = e820.nr_map;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#964: FILE: arch/i386/kernel/setup.c:184:
+		if (x == E820MAX) {
+		    printk(KERN_ERR "Ooops! Too many entries in the memory map!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#965: FILE: arch/i386/kernel/setup.c:185:
+		    printk(KERN_ERR "Ooops! Too many entries in the memory map!\n");

WARNING:TABSTOP: Statements should start on a tabstop
#966: FILE: arch/i386/kernel/setup.c:186:
+		    return;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#995: FILE: arch/i386/kernel/setup.c:609:
+static int __init $

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#1001: FILE: arch/i386/kernel/setup.c:615:
+		pfn = PFN_UP(end -1);
 		                 ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1008: FILE: arch/i386/kernel/setup.c:622:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1030: FILE: arch/i386/kernel/setup.c:711:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1035: FILE: arch/i386/kernel/setup.c:716:
+static int __init $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1067: FILE: arch/i386/kernel/setup.c:867:
+static void __init $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1073: FILE: arch/i386/kernel/setup.c:871:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1099: FILE: arch/i386/kernel/setup.c:910:
+^Ielse $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1102: FILE: arch/i386/kernel/setup.c:913:
+ ^I /* EFI systems may still have VGA */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1102: FILE: arch/i386/kernel/setup.c:913:
+ ^I /* EFI systems may still have VGA */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1102: FILE: arch/i386/kernel/setup.c:913:
+ ^I /* EFI systems may still have VGA */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1110: FILE: arch/i386/kernel/setup.c:1033:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1111: FILE: arch/i386/kernel/setup.c:1034:
+ * Determine if we were loaded by an EFI loader.  If so, then we have also been $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1112: FILE: arch/i386/kernel/setup.c:1035:
+ * passed the efi memmap, systab, etc., so we should use these data structures $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1113: FILE: arch/i386/kernel/setup.c:1036:
+ * for initialization.  Note, the efi init code path is determined by the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1114: FILE: arch/i386/kernel/setup.c:1037:
+ * global efi_enabled. This allows the same kernel image to be used on existing $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1115: FILE: arch/i386/kernel/setup.c:1038:
+ * systems (with a traditional BIOS) as well as on EFI systems.  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1124: FILE: arch/i386/kernel/setup.c:1048:
+^I/* FIXME: This isn't an official loader_type right $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1125: FILE: arch/i386/kernel/setup.c:1049:
+^I * now but does currently work with elilo. $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'LOADER_TYPE == 0x50'
#1127: FILE: arch/i386/kernel/setup.c:1051:
+	if ((LOADER_TYPE == 0x50) && EFI_SYSTAB)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1183: FILE: arch/i386/kernel/time.c:167:
+^Iunsigned long ^Iflags;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1184: FILE: arch/i386/kernel/time.c:168:
+^Iefi_status_t ^Istatus;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1185: FILE: arch/i386/kernel/time.c:169:
+^Iefi_time_t ^Ieft;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1186: FILE: arch/i386/kernel/time.c:170:
+^Iefi_time_cap_t ^Icap;$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1196: FILE: arch/i386/kernel/time.c:180:
+	if (((abs(real_minutes - eft.minute) + 15)/30) & 1)
 	                                          ^

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#1219: FILE: arch/i386/kernel/time.c:247:
+		if ((efi_enabled && (!efi_set_rtc_mmss(xtime.tv_sec) )) || (set_rtc_mmss(xtime.tv_sec) == 0))

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1219: FILE: arch/i386/kernel/time.c:247:
+		if ((efi_enabled && (!efi_set_rtc_mmss(xtime.tv_sec) )) || (set_rtc_mmss(xtime.tv_sec) == 0))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1241: FILE: arch/i386/kernel/time.c:326:
+		printk("Oops: efitime: can't read time status: 0x%lx\n", status);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1244: FILE: arch/i386/kernel/time.c:329:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1300: FILE: arch/i386/mm/init.c:65:
+^I^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1305: FILE: arch/i386/mm/init.c:70:
+			addr = (md->phys_addr+PAGE_SIZE-1) >> PAGE_SHIFT;
 			                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1305: FILE: arch/i386/mm/init.c:70:
+			addr = (md->phys_addr+PAGE_SIZE-1) >> PAGE_SHIFT;
 			                               ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pagenr >= addr'
#1308: FILE: arch/i386/mm/init.c:73:
+			if ((pagenr >= addr) && (pagenr < end))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pagenr < end'
#1308: FILE: arch/i386/mm/init.c:73:
+			if ((pagenr >= addr) && (pagenr < end))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1327: FILE: drivers/acpi/Kconfig:255:
+ ^Ibool "Obtain RSDP from EFI Configuration Table" $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1335: FILE: drivers/acpi/Kconfig:261:
+ ^I   the EFI Configuration Table.  On Itanium systems this is $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1337: FILE: drivers/acpi/Kconfig:263:
+ ^I   EFI firmware should leave this enabled.  Platforms with $

CHECK:SPACING: No space is necessary after a cast
#1360: FILE: include/asm-i386/setup.h:32:
+#define EFI_SYSTAB ((efi_system_table_t *) *((unsigned long *)(PARAM+0x1c4)))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1360: FILE: include/asm-i386/setup.h:32:
+#define EFI_SYSTAB ((efi_system_table_t *) *((unsigned long *)(PARAM+0x1c4)))
                                                                     ^

CHECK:SPACING: No space is necessary after a cast
#1361: FILE: include/asm-i386/setup.h:33:
+#define EFI_MEMDESC_SIZE (*((unsigned long *) (PARAM+0x1c8)))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1361: FILE: include/asm-i386/setup.h:33:
+#define EFI_MEMDESC_SIZE (*((unsigned long *) (PARAM+0x1c8)))
                                                     ^

CHECK:SPACING: No space is necessary after a cast
#1362: FILE: include/asm-i386/setup.h:34:
+#define EFI_MEMDESC_VERSION (*((unsigned long *) (PARAM+0x1cc)))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1362: FILE: include/asm-i386/setup.h:34:
+#define EFI_MEMDESC_VERSION (*((unsigned long *) (PARAM+0x1cc)))
                                                        ^

CHECK:SPACING: No space is necessary after a cast
#1363: FILE: include/asm-i386/setup.h:35:
+#define EFI_MEMMAP ((efi_memory_desc_t *) *((unsigned long *)(PARAM+0x1d0)))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1363: FILE: include/asm-i386/setup.h:35:
+#define EFI_MEMMAP ((efi_memory_desc_t *) *((unsigned long *)(PARAM+0x1d0)))
                                                                    ^

CHECK:SPACING: No space is necessary after a cast
#1364: FILE: include/asm-i386/setup.h:36:
+#define EFI_MEMMAP_SIZE (*((unsigned long *) (PARAM+0x1d4)))

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1364: FILE: include/asm-i386/setup.h:36:
+#define EFI_MEMMAP_SIZE (*((unsigned long *) (PARAM+0x1d4)))
                                                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1384: FILE: include/linux/efi.h:94:
+/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1385: FILE: include/linux/efi.h:95:
+ * For current x86 implementations of EFI, there is $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1396: FILE: include/linux/efi.h:106:
+#if defined (__i386__)

CHECK:ARCH_DEFINES: architecture specific defines should be avoided
#1396: FILE: include/linux/efi.h:106:
+#if defined (__i386__)

Architecture specific defines should be avoided wherever
possible.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1426: FILE: include/linux/efi.h:213:
+    EFI_GUID(  0x61a4d49e, 0x6f68, 0x4f1b, 0xb9, 0x22, 0xa8, 0x6e, 0xed, 0xb, 0x7, 0xa2 )$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1426: FILE: include/linux/efi.h:213:
+    EFI_GUID(  0x61a4d49e, 0x6f68, 0x4f1b, 0xb9, 0x22, 0xa8, 0x6e, 0xed, 0xb, 0x7, 0xa2 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1426: FILE: include/linux/efi.h:213:
+    EFI_GUID(  0x61a4d49e, 0x6f68, 0x4f1b, 0xb9, 0x22, 0xa8, 0x6e, 0xed, 0xb, 0x7, 0xa2 )

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1465: FILE: include/linux/efi.h:290:
+extern void efi_map_memmap(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1472: FILE: include/linux/efi.h:297:
+extern void efi_initialize_iomem_resources(struct resource *code_resource,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1473: FILE: include/linux/efi.h:298:
+extern void efi_initialize_iomem_resources(struct resource *code_resource,
+					struct resource *data_resource);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1474: FILE: include/linux/efi.h:299:
+extern efi_status_t phys_efi_get_time(efi_time_t *tm, efi_time_cap_t *tc);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000332505.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 115 errors, 72 warnings, 88 checks, 1334 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000332505.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
