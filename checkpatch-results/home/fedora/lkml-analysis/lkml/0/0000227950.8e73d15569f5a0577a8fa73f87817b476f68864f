WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
Here's the suspend2 version of the process refrigerator. We do things in three steps:

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#255: FILE: drivers/ieee1394/ieee1394_core.c:1036:
+			printk("khpsbpkt: received unexpected signal?!\n" );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#255: FILE: drivers/ieee1394/ieee1394_core.c:1036:
+			printk("khpsbpkt: received unexpected signal?!\n" );

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#521: FILE: drivers/pnp/pnpbios/core.c:183:
+		if(current->flags & PF_FREEZE)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#634: FILE: fs/buffer.c:179:
+	 * want to sync it to disk. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#637: FILE: fs/buffer.c:182:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#685: FILE: fs/buffer.c:307:
+	 * want to sync it to disk. */

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#707: FILE: fs/buffer.c:334:
+EXPORT_SYMBOL(sys_sync);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1019: FILE: include/linux/sched.h:714:
+#define PF_SYNCTHREAD^I0x00800000^I/* this thread can start activity during the $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1020: FILE: include/linux/sched.h:715:
+#define PF_SYNCTHREAD	0x00800000	/* this thread can start activity during the 
+					   early part of freezing processes */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1020: FILE: include/linux/sched.h:715:
+					   early part of freezing processes */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1034: FILE: include/linux/sched.h:732:
+extern void refrigerator(unsigned long);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:BRACES: braces {} should be used on all arms of this statement
#1038: FILE: include/linux/sched.h:736:
+	if (unlikely(current->flags & PF_FREEZE)) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1041: FILE: include/linux/sched.h:739:
+	} else

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1059: FILE: include/linux/sched.h:1149:
+extern void refrigerator(unsigned long);

ERROR:SPACING: space required before the open parenthesis '('
#1062: FILE: include/linux/sched.h:1152:
+#define refrigerator(a)			do { } while(0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1104: FILE: kernel/fork.c:1129:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1180: FILE: kernel/power/power.h:48:
+extern int freeze_processes(int no_progress);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1181: FILE: kernel/power/power.h:49:
+extern void thaw_processes(int which_threads);

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1192: FILE: kernel/power/process.c:2:
+ * kernel/power/process.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1206: FILE: kernel/power/process.c:15:
+ * Ideally, the image saved to disk would be an atomic copy of the entire $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1207: FILE: kernel/power/process.c:16:
+ * contents of all RAM and related hardware state. One of the first $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1209: FILE: kernel/power/process.c:18:
+ * of other processes. We can't stop all other processes, however, since some $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1210: FILE: kernel/power/process.c:19:
+ * are needed in doing the I/O to save the image. Freeze_and_free.c contains $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1212: FILE: kernel/power/process.c:21:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1225: FILE: kernel/power/process.c:34:
+ * then (if necessary) unfreezing them and eating more memory until it looks $

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#1245: FILE: kernel/power/process.c:47:
+volatile struct suspend2_core_ops * suspend2_core_ops = NULL;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1245: FILE: kernel/power/process.c:47:
+volatile struct suspend2_core_ops * suspend2_core_ops = NULL;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1245: FILE: kernel/power/process.c:47:
+volatile struct suspend2_core_ops * suspend2_core_ops = NULL;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#1246: FILE: kernel/power/process.c:48:
+unsigned long suspend_action = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#1247: FILE: kernel/power/process.c:49:
+unsigned long suspend_result = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#1248: FILE: kernel/power/process.c:50:
+unsigned long suspend_debug_state = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#1251: FILE: kernel/power/process.c:53:
+unsigned int suspend_task = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1253: FILE: kernel/power/process.c:55:
+atomic_t __nosavedata suspend_cpu_counter = { 0 }; $

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1259: FILE: kernel/power/process.c:61:
+extern void suspend_relinquish_console(void);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1276: FILE: kernel/power/process.c:77:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1286: FILE: kernel/power/process.c:87:
+	/* You need correct to work with real-time processes.
+	   OTOH, this way one process may see (via /proc/) some other

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1288: FILE: kernel/power/process.c:89:
+^I   suspended. We probably do not care). $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1291: FILE: kernel/power/process.c:92:
+	if ((flag) && (current->flags & PF_FREEZE)) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1293: FILE: kernel/power/process.c:94:
+		suspend_message(SUSPEND_FREEZER, SUSPEND_VERBOSE, 0,
+			"\n%s (%d) refrigerated and sigpending recalculated.",

CHECK:BRACES: Unbalanced braces around else statement
#1298: FILE: kernel/power/process.c:99:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1300: FILE: kernel/power/process.c:101:
+		suspend_message(SUSPEND_FREEZER, SUSPEND_VERBOSE, 0,
+			"\n%s (%d) refrigerated.",

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1310: FILE: kernel/power/process.c:111:
+				spin_lock_irqsave(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1313: FILE: kernel/power/process.c:114:
+				spin_unlock_irqrestore(

CHECK:BRACES: Unbalanced braces around else statement
#1318: FILE: kernel/power/process.c:119:
+	} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1327: FILE: kernel/power/process.c:128:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1329: FILE: kernel/power/process.c:130:
+static void __smp_pause(void * data)

ERROR:SPACING: space required before the open parenthesis '('
#1332: FILE: kernel/power/process.c:133:
+	while(test_suspend_state(SUSPEND_FREEZE_SMP)) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1356: FILE: kernel/power/process.c:155:
+^I^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1363: FILE: kernel/power/process.c:162:
+extern void __smp_suspend_lowlevel(void * info);

ERROR:SPACING: space required before the open parenthesis '('
#1376: FILE: kernel/power/process.c:175:
+#define smp_pause() do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#1377: FILE: kernel/power/process.c:176:
+#define smp_continue() do { } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#1378: FILE: kernel/power/process.c:177:
+#define smp_suspend() do { } while(0)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1386: FILE: kernel/power/process.c:185:
+ * ^I^Iint^I^I^IWhich group of processes to consider.$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1389: FILE: kernel/power/process.c:188:
+static int to_be_frozen(struct task_struct * p, int type_being_frozen) {

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1389: FILE: kernel/power/process.c:188:
+static int to_be_frozen(struct task_struct * p, int type_being_frozen) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1390: FILE: kernel/power/process.c:189:
+static int to_be_frozen(struct task_struct * p, int type_being_frozen) {
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p == current'
#1391: FILE: kernel/power/process.c:190:
+	if ((p == current) ||
 	    (p->flags & PF_NOFREEZE) ||
 	    (p->exit_state == EXIT_ZOMBIE) ||
 	    (p->exit_state == EXIT_DEAD) ||
+	    (p->state == TASK_TRACED) ||
+	    (p->state == TASK_STOPPED))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->exit_state == EXIT_ZOMBIE'
#1391: FILE: kernel/power/process.c:190:
+	if ((p == current) ||
 	    (p->flags & PF_NOFREEZE) ||
 	    (p->exit_state == EXIT_ZOMBIE) ||
 	    (p->exit_state == EXIT_DEAD) ||
+	    (p->state == TASK_TRACED) ||
+	    (p->state == TASK_STOPPED))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->exit_state == EXIT_DEAD'
#1391: FILE: kernel/power/process.c:190:
+	if ((p == current) ||
 	    (p->flags & PF_NOFREEZE) ||
 	    (p->exit_state == EXIT_ZOMBIE) ||
 	    (p->exit_state == EXIT_DEAD) ||
+	    (p->state == TASK_TRACED) ||
+	    (p->state == TASK_STOPPED))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->state == TASK_TRACED'
#1391: FILE: kernel/power/process.c:190:
+	if ((p == current) ||
 	    (p->flags & PF_NOFREEZE) ||
 	    (p->exit_state == EXIT_ZOMBIE) ||
 	    (p->exit_state == EXIT_DEAD) ||
+	    (p->state == TASK_TRACED) ||
+	    (p->state == TASK_STOPPED))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->state == TASK_STOPPED'
#1391: FILE: kernel/power/process.c:190:
+	if ((p == current) ||
 	    (p->flags & PF_NOFREEZE) ||
 	    (p->exit_state == EXIT_ZOMBIE) ||
 	    (p->exit_state == EXIT_DEAD) ||
+	    (p->state == TASK_TRACED) ||
+	    (p->state == TASK_STOPPED))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type_being_frozen < 3'
#1400: FILE: kernel/power/process.c:197:
+	if ((!(p->mm)) && (type_being_frozen < 3))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'type_being_frozen == 1'
#1402: FILE: kernel/power/process.c:199:
+	if ((p->flags & PF_SYNCTHREAD) && (type_being_frozen == 1))

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1413: FILE: kernel/power/process.c:208:
+ * ^I^Ifrozen. As a side effect, update the progress bar too.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1415: FILE: kernel/power/process.c:210:
+ * ^I^Iint^IWhether we are displaying our progress.$

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1417: FILE: kernel/power/process.c:212:
+static int num_to_be_frozen(int type_being_frozen, int no_progress) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1418: FILE: kernel/power/process.c:213:
+^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1418: FILE: kernel/power/process.c:213:
+static int num_to_be_frozen(int type_being_frozen, int no_progress) {
+	

CHECK:BRACES: braces {} should be used on all arms of this statement
#1425: FILE: kernel/power/process.c:220:
+		if (to_be_frozen(p, type_being_frozen)) {
[...]
+		} else if (to_be_frozen(p, 3))
[...]

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!no_progress'
#1434: FILE: kernel/power/process.c:229:
+	if ((!no_progress) && (suspend2_core_ops)) {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1435: FILE: kernel/power/process.c:230:
+		suspend2_core_ops->update_status(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1438: FILE: kernel/power/process.c:233:
+^I^I^I^I"%d/%d", $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1455: FILE: kernel/power/process.c:250:
+extern void show_task(struct task_struct * p);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1472: FILE: kernel/power/process.c:259:
+	suspend_message(SUSPEND_FREEZER, SUSPEND_VERBOSE, 1,
+		"\n STARTING TO FREEZE TYPE %d THREADS.\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1499: FILE: kernel/power/process.c:265:
+^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1527: FILE: kernel/power/process.c:293:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1540: FILE: kernel/power/process.c:298:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1542: FILE: kernel/power/process.c:300:
+^I^I^Isuspend_message(SUSPEND_FREEZER, SUSPEND_VERBOSE, 0, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1543: FILE: kernel/power/process.c:301:
+			suspend_message(SUSPEND_FREEZER, SUSPEND_VERBOSE, 0, 
+				"\n   %s: pid %d",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1554: FILE: kernel/power/process.c:311:
+			suspend_message(SUSPEND_FREEZER, SUSPEND_VERBOSE, 0,
+				"\n Number of threads signalled this iteration is %d.\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1564: FILE: kernel/power/process.c:316:
+^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1566: FILE: kernel/power/process.c:318:
+^I^I */^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1572: FILE: kernel/power/process.c:324:
+^I^I$

ERROR:SPACING: space required before the open parenthesis '('
#1580: FILE: kernel/power/process.c:332:
+	} while(still_to_do && (!TEST_RESULT_STATE(SUSPEND_ABORTED)) &&

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1590: FILE: kernel/power/process.c:342:
+^I^I^Iif (!to_be_frozen(p, type)) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1592: FILE: kernel/power/process.c:344:
+^I^I^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1594: FILE: kernel/power/process.c:346:
+				printk(KERN_ERR name_suspend

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1596: FILE: kernel/power/process.c:348:
+				printk(KERN_ERR "Tasks that refused to be refrigerated"

WARNING:SPLIT_STRING: quoted string split across lines
#1597: FILE: kernel/power/process.c:349:
+				printk(KERN_ERR "Tasks that refused to be refrigerated"
+					" and haven't since exited:\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1600: FILE: kernel/power/process.c:352:
+^I^I^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1602: FILE: kernel/power/process.c:354:
+				printk(" - %s (#%d) signalled but "

WARNING:SPLIT_STRING: quoted string split across lines
#1603: FILE: kernel/power/process.c:355:
+				printk(" - %s (#%d) signalled but "
+					"didn't enter refrigerator.\n",

CHECK:BRACES: Unbalanced braces around else statement
#1606: FILE: kernel/power/process.c:358:
+			} else

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1607: FILE: kernel/power/process.c:359:
+				printk(" - %s (#%d) wasn't "

WARNING:SPLIT_STRING: quoted string split across lines
#1608: FILE: kernel/power/process.c:360:
+				printk(" - %s (#%d) wasn't "
+					"signalled.\n",

CHECK:BRACES: Unbalanced braces around else statement
#1612: FILE: kernel/power/process.c:364:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1614: FILE: kernel/power/process.c:366:
+		suspend_message(SUSPEND_FREEZER, SUSPEND_VERBOSE, 1,
+			"\n\nSuccessfully froze processes of type %d.\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1621: FILE: kernel/power/process.c:373:
+ * $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1637: FILE: kernel/power/process.c:389:
+	num_type[0] = num_type[1] = num_type[2] = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1642: FILE: kernel/power/process.c:394:
+	suspend_result = 0;	/* Might be called from pm_disk or suspend -
+				   ensure reset */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1642: FILE: kernel/power/process.c:394:
+				   ensure reset */

CHECK:BRACES: braces {} should be used on all arms of this statement
#1647: FILE: kernel/power/process.c:399:
+			if (p->flags & PF_SYNCTHREAD) {
[...]
+			} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1649: FILE: kernel/power/process.c:401:
+				suspend_message(SUSPEND_FREEZER, SUSPEND_MEDIUM, 0,
+					"%s (%d) is a syncthread at entrance to "

WARNING:SPLIT_STRING: quoted string split across lines
#1650: FILE: kernel/power/process.c:402:
+					"%s (%d) is a syncthread at entrance to "
+					"fridge\n", p->comm, p->pid);

CHECK:BRACES: Unbalanced braces around else statement
#1652: FILE: kernel/power/process.c:404:
+			} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1657: FILE: kernel/power/process.c:409:
+				suspend_message(SUSPEND_FREEZER, SUSPEND_MEDIUM, 0,
+					"%s (%d) is NO_FREEZE.\n",

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!no_progress'
#1679: FILE: kernel/power/process.c:427:
+	if ((!no_progress) && (suspend2_core_ops))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1692: FILE: kernel/power/process.c:440:
+		printk("Enabling timer freezer. If you get a hang, note " \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#1692: FILE: kernel/power/process.c:440:
+		printk("Enabling timer freezer. If you get a hang, note " \

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1703: FILE: kernel/power/process.c:451:
+	suspend_message(SUSPEND_FREEZER, SUSPEND_VERBOSE, 1,
+				"Left freezer loop.\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#1723: FILE: kernel/power/process.c:469:
+	struct task_struct *p, *g;
+	suspend_message(SUSPEND_FREEZER, SUSPEND_LOW, 1, "Thawing tasks\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1724: FILE: kernel/power/process.c:470:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1731: FILE: kernel/power/process.c:477:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1732: FILE: kernel/power/process.c:478:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1740: FILE: kernel/power/process.c:486:
+^I$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'which_threads == FREEZER_KERNEL_THREADS'
#1750: FILE: kernel/power/process.c:493:
+			if ((which_threads == FREEZER_KERNEL_THREADS) &&
+				(p->mm))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->mm'
#1750: FILE: kernel/power/process.c:493:
+			if ((which_threads == FREEZER_KERNEL_THREADS) &&
+				(p->mm))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1751: FILE: kernel/power/process.c:494:
+			if ((which_threads == FREEZER_KERNEL_THREADS) &&
+				(p->mm))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1767: FILE: kernel/power/process.c:506:
+^I$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1773: FILE: kernel/power/process.c:512:
+EXPORT_SYMBOL(suspend_task);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1775: FILE: kernel/power/process.c:514:
+EXPORT_SYMBOL(software_suspend_state);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1776: FILE: kernel/power/process.c:515:
+EXPORT_SYMBOL(freeze_processes);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1777: FILE: kernel/power/process.c:516:
+EXPORT_SYMBOL(thaw_processes);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1780: FILE: kernel/power/process.c:519:
+EXPORT_SYMBOL(smp_continue);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1794: FILE: kernel/signal.c:2183:
+			if (current->flags & PF_FREEZE) {
+				refrigerator(PF_FREEZE);
+			}

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000227950.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 50 errors, 33 warnings, 43 checks, 1605 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000227950.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
