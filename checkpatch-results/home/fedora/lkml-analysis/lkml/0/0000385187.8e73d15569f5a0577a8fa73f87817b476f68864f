WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
subtly changes the PR_SET_DUMPABLE prctl. We believe this is neccessary and 

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#32: 
subtly changes the PR_SET_DUMPABLE prctl. We believe this is neccessary and 
                                                             ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#100: FILE: arch/i386/kernel/process.c:498:
+int arch_kernel_thread(int (*fn)(void *), void * arg, unsigned long flags)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#129: FILE: arch/ia64/kernel/process.c:472:
+arch_kernel_thread (int (*fn)(void *), void *arg, unsigned long flags)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#141: FILE: arch/m68k/kernel/process.c:127:
+int arch_kernel_thread(int (*fn)(void *), void * arg, unsigned long flags)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#153: FILE: arch/mips/kernel/process.c:158:
+int arch_kernel_thread(int (*fn)(void *), void * arg, unsigned long flags)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#219: FILE: arch/s390/kernel/process.c:108:
+int arch_kernel_thread(int (*fn)(void *), void * arg, unsigned long flags)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#231: FILE: arch/s390x/kernel/process.c:105:
+int arch_kernel_thread(int (*fn)(void *), void * arg, unsigned long flags)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#243: FILE: arch/sh/kernel/process.c:121:
+int arch_kernel_thread(int (*fn)(void *), void * arg, unsigned long flags)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#255: FILE: arch/sparc/kernel/process.c:679:
+pid_t arch_kernel_thread(int (*fn)(void *), void * arg, unsigned long flags)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#267: FILE: arch/sparc64/kernel/process.c:661:
+pid_t arch_kernel_thread(int (*fn)(void *), void * arg, unsigned long flags)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#279: FILE: arch/um/kernel/process_kern.c:174:
+int arch_kernel_thread(int (*fn)(void *), void * arg, unsigned long flags)

ERROR:SPACING: space required before the open parenthesis '('
#287: FILE: arch/um/kernel/process_kern.c:181:
+	if(pid < 0) panic("do_fork failed in arch_kernel_thread");

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#287: FILE: arch/um/kernel/process_kern.c:181:
+	if(pid < 0) panic("do_fork failed in arch_kernel_thread");

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'arch_kernel_thread', this function's name, in a string
#287: FILE: arch/um/kernel/process_kern.c:181:
+	if(pid < 0) panic("do_fork failed in arch_kernel_thread");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#323: FILE: include/asm-alpha/processor.h:122:
+extern long arch_kernel_thread(int (*fn)(void *), void *arg, unsigned long flags);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#335: FILE: include/asm-arm/processor.h:120:
+extern int arch_kernel_thread(int (*fn)(void *), void *arg, unsigned long flags);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#347: FILE: include/asm-cris/processor.h:84:
+extern int arch_kernel_thread(int (*fn)(void *), void * arg, unsigned long flags);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#347: FILE: include/asm-cris/processor.h:84:
+extern int arch_kernel_thread(int (*fn)(void *), void * arg, unsigned long flags);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#359: FILE: include/asm-i386/processor.h:436:
+extern int arch_kernel_thread(int (*fn)(void *), void * arg, unsigned long flags);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#359: FILE: include/asm-i386/processor.h:436:
+extern int arch_kernel_thread(int (*fn)(void *), void * arg, unsigned long flags);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#371: FILE: include/asm-ia64/processor.h:479:
+extern int arch_kernel_thread (int (*fn)(void *), void *arg, unsigned long flags);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#371: FILE: include/asm-ia64/processor.h:479:
+extern int arch_kernel_thread (int (*fn)(void *), void *arg, unsigned long flags);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#383: FILE: include/asm-m68k/processor.h:108:
+extern int arch_kernel_thread(int (*fn)(void *), void * arg, unsigned long flags);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#383: FILE: include/asm-m68k/processor.h:108:
+extern int arch_kernel_thread(int (*fn)(void *), void * arg, unsigned long flags);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#395: FILE: include/asm-mips/processor.h:189:
+extern int arch_kernel_thread(int (*fn)(void *), void * arg, unsigned long flags);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#395: FILE: include/asm-mips/processor.h:189:
+extern int arch_kernel_thread(int (*fn)(void *), void * arg, unsigned long flags);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#407: FILE: include/asm-mips64/processor.h:248:
+extern int arch_kernel_thread(int (*fn)(void *), void * arg, unsigned long flags);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#407: FILE: include/asm-mips64/processor.h:248:
+extern int arch_kernel_thread(int (*fn)(void *), void * arg, unsigned long flags);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#419: FILE: include/asm-parisc/processor.h:308:
+extern int arch_kernel_thread(int (*fn)(void *), void * arg, unsigned long flags);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#419: FILE: include/asm-parisc/processor.h:308:
+extern int arch_kernel_thread(int (*fn)(void *), void * arg, unsigned long flags);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#431: FILE: include/asm-ppc/processor.h:596:
+extern long arch_kernel_thread(int (*fn)(void *), void *arg, unsigned long flags);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#443: FILE: include/asm-ppc64/processor.h:612:
+extern long arch_kernel_thread(int (*fn)(void *), void *arg, unsigned long flags);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#455: FILE: include/asm-s390/processor.h:116:
+extern int arch_kernel_thread(int (*fn)(void *), void * arg, unsigned long flags);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#455: FILE: include/asm-s390/processor.h:116:
+extern int arch_kernel_thread(int (*fn)(void *), void * arg, unsigned long flags);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#467: FILE: include/asm-s390x/processor.h:130:
+extern int arch_kernel_thread(int (*fn)(void *), void * arg, unsigned long flags);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#467: FILE: include/asm-s390x/processor.h:130:
+extern int arch_kernel_thread(int (*fn)(void *), void * arg, unsigned long flags);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#479: FILE: include/asm-sh/processor.h:140:
+extern int arch_kernel_thread(int (*fn)(void *), void * arg, unsigned long flags);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#479: FILE: include/asm-sh/processor.h:140:
+extern int arch_kernel_thread(int (*fn)(void *), void * arg, unsigned long flags);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#491: FILE: include/asm-sparc/processor.h:149:
+extern pid_t arch_kernel_thread(int (*fn)(void *), void * arg, unsigned long flags);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#491: FILE: include/asm-sparc/processor.h:149:
+extern pid_t arch_kernel_thread(int (*fn)(void *), void * arg, unsigned long flags);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#503: FILE: include/asm-sparc64/processor.h:273:
+extern pid_t arch_kernel_thread(int (*fn)(void *), void * arg, unsigned long flags);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#503: FILE: include/asm-sparc64/processor.h:273:
+extern pid_t arch_kernel_thread(int (*fn)(void *), void * arg, unsigned long flags);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'tsk' - possible side-effects?
#522: FILE: include/linux/sched.h:489:
+#define is_dumpable(tsk)	((tsk)->task_dumpable && (tsk)->mm->dumpable)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#531: FILE: include/linux/sched.h:854:
+extern long kernel_thread(int (*fn)(void *), void * arg, unsigned long flags);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#531: FILE: include/linux/sched.h:854:
+extern long kernel_thread(int (*fn)(void *), void * arg, unsigned long flags);

WARNING:INCLUDE_LINUX: Use #include <linux/processor.h> instead of <asm/processor.h>
#543: FILE: kernel/fork.c:31:
+#include <asm/processor.h>

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#551: FILE: kernel/fork.c:579:
+long kernel_thread(int (*fn)(void *), void * arg, unsigned long flags)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#554: FILE: kernel/fork.c:582:
+	unsigned old_task_dumpable;

WARNING:MEMORY_BARRIER: memory barrier without comment
#586: FILE: kernel/ptrace.c:24:
+	mb();

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '&init_mm == mm'
#606: FILE: kernel/ptrace.c:130:
+	if (!is_dumpable(tsk) || (&init_mm == mm))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000385187.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 24 errors, 8 warnings, 19 checks, 429 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000385187.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
