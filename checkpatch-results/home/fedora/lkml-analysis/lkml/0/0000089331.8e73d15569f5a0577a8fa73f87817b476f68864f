WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#35: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:BRACES: braces {} should be used on all arms of this statement
#129: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:95:
+		if (len > pmtu) {
[...]
+		else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#133: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:99:
+		}
+		else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#143: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:109:
+		/* FALLTHROUGH */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

CHECK:BRACES: braces {} should be used on all arms of this statement
#147: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:113:
+		if (len > pmtu)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#149: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:115:
+		else {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#250: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:216:
+			qp->s_psn = wqe->psn = qp->s_next_psn;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#261: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:227:
+		qp->s_len = len = wqe->length;

CHECK:SPACING: No space is necessary after a cast
#268: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:234:
+			if (qp->s_lsn != (u32) -1 &&

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#278: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:244:
+			if (wqe->wr.opcode == IB_WR_SEND)
[...]
+			else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#280: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:246:
+			else {

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#296: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:262:
+			/* FALLTHROUGH */

CHECK:SPACING: No space is necessary after a cast
#299: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:265:
+			if (qp->s_lsn != (u32) -1 &&

CHECK:BRACES: braces {} should be used on all arms of this statement
#315: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:281:
+			if (wqe->wr.opcode == IB_WR_RDMA_WRITE)
[...]
+			else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#317: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:283:
+			else {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#321: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:287:
+				 * after RETH */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#362: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:328:
+			ohdr->u.atomic_eth.vaddr = cpu_to_be64(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#364: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:330:
+			ohdr->u.atomic_eth.rkey = cpu_to_be32(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#366: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:332:
+			ohdr->u.atomic_eth.swap_data = cpu_to_be64(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#368: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:334:
+			ohdr->u.atomic_eth.compare_data = cpu_to_be64(

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#405: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:371:
+		/* FALLTHROUGH */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#408: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:374:
+		/* FALLTHROUGH */

CHECK:BRACES: braces {} should be used on all arms of this statement
#425: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:391:
+		if (wqe->wr.opcode == IB_WR_SEND)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#427: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:393:
+		else {

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#447: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:413:
+		/* FALLTHROUGH */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#450: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:416:
+		/* FALLTHROUGH */

CHECK:BRACES: braces {} should be used on all arms of this statement
#467: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:433:
+		if (wqe->wr.opcode == IB_WR_RDMA_WRITE)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#469: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:435:
+		else {

CHECK:SPACING: No space is necessary after a cast
#616: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:582:
+				     (u32 *) &qp->s_hdr, qp->s_cur_size,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#633: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:599:
+	if (qp->s_ack_state != OP(ACKNOWLEDGE) &&

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#691: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:657:
+	if (qp->s_ack_state >= OP(COMPARE_SWAP)) {
[...]
+	else
[...]

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#696: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:662:
+	}
+	else

CHECK:SPACING: No space is necessary after a cast
#710: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:676:
+	if (ipath_verbs_send(dev->dd, qp->s_hdrwords, (u32 *) &qp->s_hdr,

CHECK:BRACES: braces {} should be used on all arms of this statement
#1054: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1020:
+		if (ipath_cmp24(psn, wqe->psn) <= 0) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1057: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1023:
+		} else

WARNING:INDENTED_LABEL: labels should not be indented
#1103: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1069:
+		class_b:

WARNING:INDENTED_LABEL: labels should not be indented
#1126: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1092:
+	reserved:

CHECK:BRACES: braces {} should be used on all arms of this statement
#1177: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1143:
+			if (!header_in_data)
[...]
+			else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1179: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1145:
+			else {

CHECK:SPACING: No space is necessary after a cast
#1180: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1146:
+				aeth = be32_to_cpu(((__be32 *) data)[0]);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1193: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1159:
+		if (!header_in_data)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1195: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1161:
+		else {

CHECK:SPACING: No space is necessary after a cast
#1196: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1162:
+			aeth = be32_to_cpu(((__be32 *) data)[0]);

CHECK:SPACING: No space is necessary after a cast
#1200: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1166:
+			*(u64 *) qp->s_sge.sge.vaddr = *(u64 *) data;

WARNING:INDENTED_LABEL: labels should not be indented
#1218: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1184:
+	rdma_read:

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1254: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1220:
+		/* FALLTHROUGH */

CHECK:BRACES: braces {} should be used on all arms of this statement
#1282: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1248:
+		if (!header_in_data)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1284: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1250:
+		else {

CHECK:SPACING: No space is necessary after a cast
#1285: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1251:
+			aeth = be32_to_cpu(((__be32 *) data)[0]);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1387: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1353:
+		if (!header_in_data)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1389: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1355:
+		else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1485: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1451:
+		if (header_in_data) {
[...]
+		} else
[...]

CHECK:SPACING: No space is necessary after a cast
#1486: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1452:
+			psn = be32_to_cpu(((__be32 *) data)[0]);

CHECK:BRACES: Unbalanced braces around else statement
#1488: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1454:
+		} else

WARNING:INDENTED_LABEL: labels should not be indented
#1529: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1495:
+	nack_inv:

WARNING:INDENTED_LABEL: labels should not be indented
#1587: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1553:
+		rnr_nak:

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1606: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1572:
+		/* FALLTHROUGH */

WARNING:INDENTED_LABEL: labels should not be indented
#1609: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1575:
+	send_middle:

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1632: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1598:
+		/* FALLTHROUGH */

WARNING:INDENTED_LABEL: labels should not be indented
#1634: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1600:
+	send_last_imm:

CHECK:SPACING: No space is necessary after a cast
#1636: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1602:
+			wc.imm_data = *(__be32 *) data;

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1644: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1610:
+		/* FALLTHROUGH */

WARNING:INDENTED_LABEL: labels should not be indented
#1647: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1613:
+	send_last:

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_be32 should be cpu_to_be32
#1678: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1644:
+				__constant_cpu_to_be32(1 << 23)) != 0);

Use of __constant_<foo> form is discouraged for the following functions::

  __constant_cpu_to_be[x]
  __constant_cpu_to_le[x]
  __constant_be[x]_to_cpu
  __constant_le[x]_to_cpu
  __constant_htons
  __constant_ntohs

Using any of these outside of include/uapi/ is not preferred as using the
function without __constant_ is identical when the argument is a
constant.

In big endian systems, the macros like __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to the same expression::

  #define __constant_cpu_to_be32(x) ((__force __be32)(__u32)(x))
  #define __cpu_to_be32(x)          ((__force __be32)(__u32)(x))

In little endian systems, the macros __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to __constant_swab32 and __swab32.  __swab32
has a __builtin_constant_p check::

  #define __swab32(x)				\
    (__builtin_constant_p((__u32)(x)) ?	\
    ___constant_swab32(x) :			\
    __fswab32(x))

So ultimately they have a special case for constants.
Similar is the case with all of the macros in the list.  Thus
using the __constant_... forms are unnecessarily verbose and
not preferred outside of include/uapi.

See: https://lore.kernel.org/lkml/1400106425.12666.6.camel@joe-AO725/

CHECK:BRACES: braces {} should be used on all arms of this statement
#1686: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1652:
+		if (!header_in_data)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1688: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1654:
+		else {

WARNING:INDENTED_LABEL: labels should not be indented
#1705: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1671:
+			nack_acc:

CHECK:BRACES: braces {} should be used on all arms of this statement
#1747: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1713:
+		if (!header_in_data)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1749: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1715:
+		else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1810: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1776:
+		if (!header_in_data)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1812: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1778:
+		else {

CHECK:SPACING: No space is necessary after a cast
#1831: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1797:
+		qp->r_atomic_data = *(u64 *) qp->r_sge.sge.vaddr;

CHECK:SPACING: No space is necessary after a cast
#1833: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1799:
+			*(u64 *) qp->r_sge.sge.vaddr =

CHECK:SPACING: No space is necessary after a cast
#1837: FILE: drivers/infiniband/hw/ipath/ipath_rc.c:1803:
+			*(u64 *) qp->r_sge.sge.vaddr = sdata;

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000089331.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 22 warnings, 49 checks, 1857 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000089331.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
