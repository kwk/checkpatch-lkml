WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
- Zarlink MT312 satellite channel decoder driver contributed by Andreas Oberritter

ERROR:TRAILING_WHITESPACE: trailing whitespace
#41: FILE: drivers/media/dvb/frontends/Kconfig:102:
+^I  If you don't know what tuner module is soldered on your $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#42: FILE: drivers/media/dvb/frontends/Kconfig:103:
+^I  DVB adapter simply enable all supported frontends, the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#58: FILE: drivers/media/dvb/frontends/Kconfig:124:
+^I  If you don't know what tuner module is soldered on your $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#59: FILE: drivers/media/dvb/frontends/Kconfig:125:
+^I  DVB adapter simply enable all supported frontends, the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#75: FILE: drivers/media/dvb/frontends/mt312.c:1:
+/* $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#75: FILE: drivers/media/dvb/frontends/mt312.c:1:
+/* 

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#76: FILE: drivers/media/dvb/frontends/mt312.c:2:
+/* 
+    Driver for Zarlink MT312 Satellite Channel Decoder

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#92: FILE: drivers/media/dvb/frontends/mt312.c:18:
+    along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#93: FILE: drivers/media/dvb/frontends/mt312.c:19:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#155: FILE: drivers/media/dvb/frontends/mt312.c:81:
+		printk(KERN_ERR "%s: ret == %d\n", __FUNCTION__, ret);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#155: FILE: drivers/media/dvb/frontends/mt312.c:81:
+		printk(KERN_ERR "%s: ret == %d\n", __FUNCTION__, ret);

WARNING:LINE_SPACING: Missing a blank line after declarations
#161: FILE: drivers/media/dvb/frontends/mt312.c:87:
+		int i;
+		printk(KERN_INFO "R(%d):", reg & 0x7f);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#161: FILE: drivers/media/dvb/frontends/mt312.c:87:
+		printk(KERN_INFO "R(%d):", reg & 0x7f);

CHECK:SPACING: No space is necessary after a cast
#163: FILE: drivers/media/dvb/frontends/mt312.c:89:
+			printk(" %02x", ((const u8 *) buf)[i]);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#163: FILE: drivers/media/dvb/frontends/mt312.c:89:
+			printk(" %02x", ((const u8 *) buf)[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#164: FILE: drivers/media/dvb/frontends/mt312.c:90:
+		printk("\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#182: FILE: drivers/media/dvb/frontends/mt312.c:108:
+		int i;
+		printk(KERN_INFO "W(%d):", reg & 0x7f);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#182: FILE: drivers/media/dvb/frontends/mt312.c:108:
+		printk(KERN_INFO "W(%d):", reg & 0x7f);

CHECK:SPACING: No space is necessary after a cast
#184: FILE: drivers/media/dvb/frontends/mt312.c:110:
+			printk(" %02x", ((const u8 *) src)[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#184: FILE: drivers/media/dvb/frontends/mt312.c:110:
+			printk(" %02x", ((const u8 *) src)[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#185: FILE: drivers/media/dvb/frontends/mt312.c:111:
+		printk("\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#200: FILE: drivers/media/dvb/frontends/mt312.c:126:
+		printk(KERN_ERR "%s: ret == %d\n", __FUNCTION__, ret);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#200: FILE: drivers/media/dvb/frontends/mt312.c:126:
+		printk(KERN_ERR "%s: ret == %d\n", __FUNCTION__, ret);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#208: FILE: drivers/media/dvb/frontends/mt312.c:134:
+				const enum mt312_reg_addr reg, u8 * val)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#220: FILE: drivers/media/dvb/frontends/mt312.c:146:
+			   u8 * buf, const u8 len)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#230: FILE: drivers/media/dvb/frontends/mt312.c:156:
+	if ((ret = mt312_writereg(i2c, GPP_CTRL, 0x40)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#233: FILE: drivers/media/dvb/frontends/mt312.c:159:
+	if ((ret = i2c->xfer(i2c, &msg, 1)) != 1)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#234: FILE: drivers/media/dvb/frontends/mt312.c:160:
+		printk(KERN_ERR "%s: i/o error (ret == %d)\n", __FUNCTION__, ret);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#234: FILE: drivers/media/dvb/frontends/mt312.c:160:
+		printk(KERN_ERR "%s: i/o error (ret == %d)\n", __FUNCTION__, ret);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#236: FILE: drivers/media/dvb/frontends/mt312.c:162:
+	if ((ret = mt312_writereg(i2c, GPP_CTRL, 0x00)) < 0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#278: FILE: drivers/media/dvb/frontends/mt312.c:204:
+	printk(KERN_INFO "synth dword = %02x%02x%02x%02x\n", buf[0],

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#295: FILE: drivers/media/dvb/frontends/mt312.c:221:
+	if ((ret = mt312_writereg(i2c, CONFIG, 0x8c)) < 0)

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#299: FILE: drivers/media/dvb/frontends/mt312.c:225:
+	udelay(150);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#302: FILE: drivers/media/dvb/frontends/mt312.c:228:
+	if ((ret = mt312_reset(i2c, 1)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#311: FILE: drivers/media/dvb/frontends/mt312.c:237:
+	if ((ret = mt312_write(i2c, SYS_CLK, buf, sizeof(buf))) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#314: FILE: drivers/media/dvb/frontends/mt312.c:240:
+	if ((ret = mt312_writereg(i2c, SNR_THS_HIGH, 0x32)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#321: FILE: drivers/media/dvb/frontends/mt312.c:247:
+	if ((ret = mt312_write(i2c, TS_SW_LIM_L, buf, sizeof(buf))) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#324: FILE: drivers/media/dvb/frontends/mt312.c:250:
+	if ((ret = mt312_writereg(i2c, CS_SW_LIM, 0x69)) < 0)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'c->msg_len == 0'
#336: FILE: drivers/media/dvb/frontends/mt312.c:262:
+	if ((c->msg_len == 0) || (c->msg_len > sizeof(c->msg)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'c->msg_len > sizeof(c->msg)'
#336: FILE: drivers/media/dvb/frontends/mt312.c:262:
+	if ((c->msg_len == 0) || (c->msg_len > sizeof(c->msg)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#339: FILE: drivers/media/dvb/frontends/mt312.c:265:
+	if ((ret = mt312_readreg(i2c, DISEQC_MODE, &diseqc_mode)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#342: FILE: drivers/media/dvb/frontends/mt312.c:268:
+	if ((ret =

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#346: FILE: drivers/media/dvb/frontends/mt312.c:272:
+	if ((ret =

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#354: FILE: drivers/media/dvb/frontends/mt312.c:280:
+		if ((ret =

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#378: FILE: drivers/media/dvb/frontends/mt312.c:304:
+	if ((ret = mt312_readreg(i2c, DISEQC_MODE, &diseqc_mode)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#381: FILE: drivers/media/dvb/frontends/mt312.c:307:
+	if ((ret =

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#399: FILE: drivers/media/dvb/frontends/mt312.c:325:
+	if ((ret = mt312_readreg(i2c, DISEQC_MODE, &diseqc_mode)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#402: FILE: drivers/media/dvb/frontends/mt312.c:328:
+	if ((ret =

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#420: FILE: drivers/media/dvb/frontends/mt312.c:346:
+static int mt312_read_status(struct dvb_i2c_bus *i2c, fe_status_t * s)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#427: FILE: drivers/media/dvb/frontends/mt312.c:353:
+	if ((ret = mt312_read(i2c, QPSK_STAT_H, status, sizeof(status))) < 0)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#444: FILE: drivers/media/dvb/frontends/mt312.c:370:
+static int mt312_read_bercnt(struct dvb_i2c_bus *i2c, u32 * ber)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#449: FILE: drivers/media/dvb/frontends/mt312.c:375:
+	if ((ret = mt312_read(i2c, RS_BERCNT_H, buf, 3)) < 0)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#457: FILE: drivers/media/dvb/frontends/mt312.c:383:
+static int mt312_read_agc(struct dvb_i2c_bus *i2c, u16 * signal_strength)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#464: FILE: drivers/media/dvb/frontends/mt312.c:390:
+	if ((ret = mt312_read(i2c, AGC_H, buf, sizeof(buf))) < 0)

CHECK:SPACING: No space is necessary after a cast
#468: FILE: drivers/media/dvb/frontends/mt312.c:394:
+	err_db = (s16) (((buf[1] & 0x03) << 14) | buf[2] << 6) >> 6;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#472: FILE: drivers/media/dvb/frontends/mt312.c:398:
+	printk(KERN_DEBUG "agc=%08x err_db=%hd\n", agc, err_db);

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hd' is unnecessary
#472: FILE: drivers/media/dvb/frontends/mt312.c:398:
+	printk(KERN_DEBUG "agc=%08x err_db=%hd\n", agc, err_db);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#477: FILE: drivers/media/dvb/frontends/mt312.c:403:
+static int mt312_read_snr(struct dvb_i2c_bus *i2c, u16 * snr)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#482: FILE: drivers/media/dvb/frontends/mt312.c:408:
+	if ((ret = mt312_read(i2c, M_SNR_H, &buf, sizeof(buf))) < 0)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#490: FILE: drivers/media/dvb/frontends/mt312.c:416:
+static int mt312_read_ubc(struct dvb_i2c_bus *i2c, u32 * ubc)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#495: FILE: drivers/media/dvb/frontends/mt312.c:421:
+	if ((ret = mt312_read(i2c, RS_UBC_H, &buf, sizeof(buf))) < 0)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#511: FILE: drivers/media/dvb/frontends/mt312.c:437:
+	const u8 fec_tab[10] =
+	    { 0x00, 0x01, 0x02, 0x04, 0x3f, 0x08, 0x10, 0x20, 0x3f, 0x3f };

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->frequency < mt312_info.frequency_min'
#514: FILE: drivers/media/dvb/frontends/mt312.c:440:
+	if ((p->frequency < mt312_info.frequency_min)
+	    || (p->frequency > mt312_info.frequency_max))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->frequency > mt312_info.frequency_max'
#514: FILE: drivers/media/dvb/frontends/mt312.c:440:
+	if ((p->frequency < mt312_info.frequency_min)
+	    || (p->frequency > mt312_info.frequency_max))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#515: FILE: drivers/media/dvb/frontends/mt312.c:441:
+	if ((p->frequency < mt312_info.frequency_min)
+	    || (p->frequency > mt312_info.frequency_max))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->inversion < INVERSION_OFF'
#518: FILE: drivers/media/dvb/frontends/mt312.c:444:
+	if ((p->inversion < INVERSION_OFF)
+	    || (p->inversion > INVERSION_AUTO))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->inversion > INVERSION_AUTO'
#518: FILE: drivers/media/dvb/frontends/mt312.c:444:
+	if ((p->inversion < INVERSION_OFF)
+	    || (p->inversion > INVERSION_AUTO))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#519: FILE: drivers/media/dvb/frontends/mt312.c:445:
+	if ((p->inversion < INVERSION_OFF)
+	    || (p->inversion > INVERSION_AUTO))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->u.qpsk.symbol_rate < mt312_info.symbol_rate_min'
#522: FILE: drivers/media/dvb/frontends/mt312.c:448:
+	if ((p->u.qpsk.symbol_rate < mt312_info.symbol_rate_min)
+	    || (p->u.qpsk.symbol_rate > mt312_info.symbol_rate_max))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->u.qpsk.symbol_rate > mt312_info.symbol_rate_max'
#522: FILE: drivers/media/dvb/frontends/mt312.c:448:
+	if ((p->u.qpsk.symbol_rate < mt312_info.symbol_rate_min)
+	    || (p->u.qpsk.symbol_rate > mt312_info.symbol_rate_max))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#523: FILE: drivers/media/dvb/frontends/mt312.c:449:
+	if ((p->u.qpsk.symbol_rate < mt312_info.symbol_rate_min)
+	    || (p->u.qpsk.symbol_rate > mt312_info.symbol_rate_max))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->u.qpsk.fec_inner < FEC_NONE'
#526: FILE: drivers/media/dvb/frontends/mt312.c:452:
+	if ((p->u.qpsk.fec_inner < FEC_NONE)
+	    || (p->u.qpsk.fec_inner > FEC_AUTO))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->u.qpsk.fec_inner > FEC_AUTO'
#526: FILE: drivers/media/dvb/frontends/mt312.c:452:
+	if ((p->u.qpsk.fec_inner < FEC_NONE)
+	    || (p->u.qpsk.fec_inner > FEC_AUTO))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#527: FILE: drivers/media/dvb/frontends/mt312.c:453:
+	if ((p->u.qpsk.fec_inner < FEC_NONE)
+	    || (p->u.qpsk.fec_inner > FEC_AUTO))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->u.qpsk.fec_inner == FEC_4_5'
#530: FILE: drivers/media/dvb/frontends/mt312.c:456:
+	if ((p->u.qpsk.fec_inner == FEC_4_5)
+	    || (p->u.qpsk.fec_inner == FEC_8_9))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'p->u.qpsk.fec_inner == FEC_8_9'
#530: FILE: drivers/media/dvb/frontends/mt312.c:456:
+	if ((p->u.qpsk.fec_inner == FEC_4_5)
+	    || (p->u.qpsk.fec_inner == FEC_8_9))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#531: FILE: drivers/media/dvb/frontends/mt312.c:457:
+	if ((p->u.qpsk.fec_inner == FEC_4_5)
+	    || (p->u.qpsk.fec_inner == FEC_8_9))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#534: FILE: drivers/media/dvb/frontends/mt312.c:460:
+	if ((ret =

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#557: FILE: drivers/media/dvb/frontends/mt312.c:483:
+	if ((ret = mt312_write(i2c, SYM_RATE_H, buf, sizeof(buf))) < 0)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#564: FILE: drivers/media/dvb/frontends/mt312.c:490:
+			       fe_spectral_inversion_t * i)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#569: FILE: drivers/media/dvb/frontends/mt312.c:495:
+	if ((ret = mt312_readreg(i2c, VIT_MODE, &vit_mode)) < 0)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#578: FILE: drivers/media/dvb/frontends/mt312.c:504:
+static int mt312_get_symbol_rate(struct dvb_i2c_bus *i2c, u32 * sr)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#587: FILE: drivers/media/dvb/frontends/mt312.c:513:
+	if ((ret = mt312_readreg(i2c, SYM_RATE_H, &sym_rate_h)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#591: FILE: drivers/media/dvb/frontends/mt312.c:517:
+		if ((ret = mt312_writereg(i2c, MON_CTRL, 0x03)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#594: FILE: drivers/media/dvb/frontends/mt312.c:520:
+		if ((ret = mt312_read(i2c, MONITOR_H, buf, sizeof(buf))) < 0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#599: FILE: drivers/media/dvb/frontends/mt312.c:525:
+		printk(KERN_DEBUG "sr(auto) = %u\n",

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#602: FILE: drivers/media/dvb/frontends/mt312.c:528:
+		if ((ret = mt312_writereg(i2c, MON_CTRL, 0x05)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#605: FILE: drivers/media/dvb/frontends/mt312.c:531:
+		if ((ret = mt312_read(i2c, MONITOR_H, buf, sizeof(buf))) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#610: FILE: drivers/media/dvb/frontends/mt312.c:536:
+		if ((ret = mt312_read(i2c, SYM_RAT_OP_H, buf, sizeof(buf))) < 0)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#615: FILE: drivers/media/dvb/frontends/mt312.c:541:
+		printk(KERN_DEBUG "sym_rat_op=%d dec_ratio=%d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#617: FILE: drivers/media/dvb/frontends/mt312.c:543:
+		printk(KERN_DEBUG "*sr(manual) = %lu\n",

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#625: FILE: drivers/media/dvb/frontends/mt312.c:551:
+static int mt312_get_code_rate(struct dvb_i2c_bus *i2c, fe_code_rate_t * cr)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#628: FILE: drivers/media/dvb/frontends/mt312.c:554:
+	const fe_code_rate_t fec_tab[8] =
+	    { FEC_1_2, FEC_2_3, FEC_3_4, FEC_5_6, FEC_6_7, FEC_7_8,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#636: FILE: drivers/media/dvb/frontends/mt312.c:562:
+	if ((ret = mt312_readreg(i2c, FEC_STATUS, &fec_status)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#649: FILE: drivers/media/dvb/frontends/mt312.c:575:
+	if ((ret = mt312_get_inversion(i2c, &p->inversion)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#652: FILE: drivers/media/dvb/frontends/mt312.c:578:
+	if ((ret = mt312_get_symbol_rate(i2c, &p->u.qpsk.symbol_rate)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#655: FILE: drivers/media/dvb/frontends/mt312.c:581:
+	if ((ret = mt312_get_code_rate(i2c, &p->u.qpsk.fec_inner)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#667: FILE: drivers/media/dvb/frontends/mt312.c:593:
+	if ((ret = mt312_reset(i2c, 1)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#670: FILE: drivers/media/dvb/frontends/mt312.c:596:
+	if ((ret = mt312_readreg(i2c, CONFIG, &config)) < 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#674: FILE: drivers/media/dvb/frontends/mt312.c:600:
+	if ((ret = mt312_writereg(i2c, CONFIG, config & 0x7f)) < 0)

CHECK:SPACING: No space is necessary after a cast
#696: FILE: drivers/media/dvb/frontends/mt312.c:622:
+		if ((long) fe->data == ID_MT312)

CHECK:SPACING: No space is necessary after a cast
#702: FILE: drivers/media/dvb/frontends/mt312.c:628:
+		return mt312_send_burst(i2c, (fe_sec_mini_cmd_t) arg);

CHECK:SPACING: No space is necessary after a cast
#705: FILE: drivers/media/dvb/frontends/mt312.c:631:
+		return mt312_set_tone(i2c, (fe_sec_tone_mode_t) arg);

CHECK:SPACING: No space is necessary after a cast
#708: FILE: drivers/media/dvb/frontends/mt312.c:634:
+		return mt312_set_voltage(i2c, (fe_sec_voltage_t) arg);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#758: FILE: drivers/media/dvb/frontends/mt312.c:684:
+	if ((ret = mt312_readreg(i2c, ID, &id)) < 0)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id != ID_VP310'
#761: FILE: drivers/media/dvb/frontends/mt312.c:687:
+	if ((id != ID_VP310) && (id != ID_MT312))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'id != ID_MT312'
#761: FILE: drivers/media/dvb/frontends/mt312.c:687:
+	if ((id != ID_VP310) && (id != ID_MT312))

CHECK:SPACING: No space is necessary after a cast
#764: FILE: drivers/media/dvb/frontends/mt312.c:690:
+	return dvb_register_frontend(mt312_ioctl, i2c, (void *) (long) id,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#793: FILE: drivers/media/dvb/frontends/mt312.h:1:
+/* $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#793: FILE: drivers/media/dvb/frontends/mt312.h:1:
+/* 

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#794: FILE: drivers/media/dvb/frontends/mt312.h:2:
+/* 
+    Driver for Zarlink MT312 QPSK Frontend

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#810: FILE: drivers/media/dvb/frontends/mt312.h:18:
+    along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#811: FILE: drivers/media/dvb/frontends/mt312.h:19:
+    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#959: FILE: drivers/media/dvb/frontends/tda10045h.c:1:
+  /*

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#960: FILE: drivers/media/dvb/frontends/tda10045h.c:2:
+  /*
+     Driver for Philips TDA10045H OFDM Frontend

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#974: FILE: drivers/media/dvb/frontends/tda10045h.c:16:
+     along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#975: FILE: drivers/media/dvb/frontends/tda10045h.c:17:
+     Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#980: FILE: drivers/media/dvb/frontends/tda10045h.c:22:
+/*
+    This driver needs a copy of the DLL "ttlcdacc.dll" from the Haupauge or Technotrend

ERROR:TRAILING_WHITESPACE: trailing whitespace
#983: FILE: drivers/media/dvb/frontends/tda10045h.c:25:
+  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#986: FILE: drivers/media/dvb/frontends/tda10045h.c:28:
+ $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#990: FILE: drivers/media/dvb/frontends/tda10045h.c:32:
+
+

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1005: FILE: drivers/media/dvb/frontends/tda10045h.c:47:
+static int tda10045h_debug = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1007: FILE: drivers/media/dvb/frontends/tda10045h.c:49:
+    "/usr/lib/DVB/driver/frontends/tda10045h.mc";$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1009: FILE: drivers/media/dvb/frontends/tda10045h.c:51:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1057: FILE: drivers/media/dvb/frontends/tda10045h.c:99:
+
+

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros starting with if should be enclosed by a do - while loop to avoid possible if/else logic defects
#1058: FILE: drivers/media/dvb/frontends/tda10045h.c:100:
+#define dprintk if (tda10045h_debug) printk

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1078: FILE: drivers/media/dvb/frontends/tda10045h.c:120:
+};
+#pragma pack()

WARNING:LONG_LINE: line length of 123 exceeds 100 columns
#1085: FILE: drivers/media/dvb/frontends/tda10045h.c:127:
+static struct fwinfo tda10045h_fwinfo[] = { {.file_size = 286720,.fw_offset = 0x34cc5,.fw_size = 30555},	/* 2.15a */

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1085: FILE: drivers/media/dvb/frontends/tda10045h.c:127:
+};
+static struct fwinfo tda10045h_fwinfo[] = { {.file_size = 286720,.fw_offset = 0x34cc5,.fw_size = 30555},	/* 2.15a */

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1085: FILE: drivers/media/dvb/frontends/tda10045h.c:127:
+static struct fwinfo tda10045h_fwinfo[] = { {.file_size = 286720,.fw_offset = 0x34cc5,.fw_size = 30555},	/* 2.15a */
                                                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1085: FILE: drivers/media/dvb/frontends/tda10045h.c:127:
+static struct fwinfo tda10045h_fwinfo[] = { {.file_size = 286720,.fw_offset = 0x34cc5,.fw_size = 30555},	/* 2.15a */
                                                                                      ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1087: FILE: drivers/media/dvb/frontends/tda10045h.c:129:
+};
+static int tda10045h_fwinfo_count =

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1088: FILE: drivers/media/dvb/frontends/tda10045h.c:130:
+    sizeof(tda10045h_fwinfo) / sizeof(struct fwinfo);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1090: FILE: drivers/media/dvb/frontends/tda10045h.c:132:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1093: FILE: drivers/media/dvb/frontends/tda10045h.c:135:
+    { 0x02, 0x00, 0x3d, 0x00, 0x48, 0x17, 0x89, 0xc7, 0x14 };$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1093: FILE: drivers/media/dvb/frontends/tda10045h.c:135:
+static u8 bandwidth_8mhz[] =
+    { 0x02, 0x00, 0x3d, 0x00, 0x48, 0x17, 0x89, 0xc7, 0x14 };

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1095: FILE: drivers/media/dvb/frontends/tda10045h.c:137:
+    { 0x02, 0x00, 0x37, 0x00, 0x4a, 0x2f, 0x6d, 0x76, 0xdb };$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1095: FILE: drivers/media/dvb/frontends/tda10045h.c:137:
+static u8 bandwidth_7mhz[] =
+    { 0x02, 0x00, 0x37, 0x00, 0x4a, 0x2f, 0x6d, 0x76, 0xdb };

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1097: FILE: drivers/media/dvb/frontends/tda10045h.c:139:
+    { 0x02, 0x00, 0x3d, 0x00, 0x60, 0x1e, 0xa7, 0x45, 0x4f };$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1097: FILE: drivers/media/dvb/frontends/tda10045h.c:139:
+static u8 bandwidth_6mhz[] =
+    { 0x02, 0x00, 0x3d, 0x00, 0x60, 0x1e, 0xa7, 0x45, 0x4f };

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1106: FILE: drivers/media/dvb/frontends/tda10045h.c:148:
+	struct i2c_msg msg = {.addr = TDA10045H_ADDRESS,.flags = 0,.buf =
 	                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1106: FILE: drivers/media/dvb/frontends/tda10045h.c:148:
+	struct i2c_msg msg = {.addr = TDA10045H_ADDRESS,.flags = 0,.buf =
 	                                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1107: FILE: drivers/media/dvb/frontends/tda10045h.c:149:
+		    buf,.len = 2
 		       ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1110: FILE: drivers/media/dvb/frontends/tda10045h.c:152:
+	dprintk("%s: reg=0x%x, data=0x%x\n", __FUNCTION__, reg, data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1116: FILE: drivers/media/dvb/frontends/tda10045h.c:158:
+		dprintk("%s: error reg=0x%x, data=0x%x, ret=%i\n",
+		       __FUNCTION__, reg, data, ret);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1116: FILE: drivers/media/dvb/frontends/tda10045h.c:158:
+		       __FUNCTION__, reg, data, ret);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1118: FILE: drivers/media/dvb/frontends/tda10045h.c:160:
+	dprintk("%s: success reg=0x%x, data=0x%x, ret=%i\n", __FUNCTION__,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1129: FILE: drivers/media/dvb/frontends/tda10045h.c:171:
+	struct i2c_msg msg[] = { {.addr = TDA10045H_ADDRESS,.flags =
 	                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1130: FILE: drivers/media/dvb/frontends/tda10045h.c:172:
+				  0,.buf = b0,.len = 1},
 				   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1130: FILE: drivers/media/dvb/frontends/tda10045h.c:172:
+				  0,.buf = b0,.len = 1},
 				             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1131: FILE: drivers/media/dvb/frontends/tda10045h.c:173:
+	{.addr = TDA10045H_ADDRESS,.flags = I2C_M_RD,.buf = b1,.len = 1}
 	                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1131: FILE: drivers/media/dvb/frontends/tda10045h.c:173:
+	{.addr = TDA10045H_ADDRESS,.flags = I2C_M_RD,.buf = b1,.len = 1}
 	                                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1131: FILE: drivers/media/dvb/frontends/tda10045h.c:173:
+	{.addr = TDA10045H_ADDRESS,.flags = I2C_M_RD,.buf = b1,.len = 1}
 	                                                      ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1134: FILE: drivers/media/dvb/frontends/tda10045h.c:176:
+	dprintk("%s: reg=0x%x\n", __FUNCTION__, reg);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1139: FILE: drivers/media/dvb/frontends/tda10045h.c:181:
+		dprintk("%s: error reg=0x%x, ret=%i\n", __FUNCTION__, reg,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1140: FILE: drivers/media/dvb/frontends/tda10045h.c:182:
+		dprintk("%s: error reg=0x%x, ret=%i\n", __FUNCTION__, reg,
+		       ret);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1144: FILE: drivers/media/dvb/frontends/tda10045h.c:186:
+	dprintk("%s: success reg=0x%x, data=0x%x, ret=%i\n", __FUNCTION__,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1153: FILE: drivers/media/dvb/frontends/tda10045h.c:195:
+        int val;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1153: FILE: drivers/media/dvb/frontends/tda10045h.c:195:
+        int val;$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1154: FILE: drivers/media/dvb/frontends/tda10045h.c:196:
+	dprintk("%s: reg=0x%x, mask=0x%x, data=0x%x\n", __FUNCTION__, reg,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1177: FILE: drivers/media/dvb/frontends/tda10045h.c:219:
+	dprintk("%s: reg=0x%x, len=0x%x\n", __FUNCTION__, reg, len);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1192: FILE: drivers/media/dvb/frontends/tda10045h.c:234:
+        int result;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1192: FILE: drivers/media/dvb/frontends/tda10045h.c:234:
+        int result;$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1193: FILE: drivers/media/dvb/frontends/tda10045h.c:235:
+	dprintk("%s\n", __FUNCTION__);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1203: FILE: drivers/media/dvb/frontends/tda10045h.c:245:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1204: FILE: drivers/media/dvb/frontends/tda10045h.c:246:
+	dprintk("%s\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1216: FILE: drivers/media/dvb/frontends/tda10045h.c:258:
+	dprintk("%s: cmd=0x%x, arg=0x%x\n", __FUNCTION__, cmd, arg);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1227: FILE: drivers/media/dvb/frontends/tda10045h.c:269:
+	while (counter++ < 5) {
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data1 < 0'
#1231: FILE: drivers/media/dvb/frontends/tda10045h.c:273:
+		if ((data1 < 0) || (data2 < 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'data2 < 0'
#1231: FILE: drivers/media/dvb/frontends/tda10045h.c:273:
+		if ((data1 < 0) || (data2 < 0))

WARNING:TYPO_SPELLING: 'finshed' may be misspelled - perhaps 'finished'?
#1234: FILE: drivers/media/dvb/frontends/tda10045h.c:276:
+		// finshed yet?
 		   ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1255: FILE: drivers/media/dvb/frontends/tda10045h.c:297:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1263: FILE: drivers/media/dvb/frontends/tda10045h.c:305:
+	struct i2c_msg fw_msg = {.addr = TDA10045H_ADDRESS,.flags =
 	                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1264: FILE: drivers/media/dvb/frontends/tda10045h.c:306:
+		    0,.buf = fw_buf,.len = 0
 		     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1264: FILE: drivers/media/dvb/frontends/tda10045h.c:306:
+		    0,.buf = fw_buf,.len = 0
 		                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1266: FILE: drivers/media/dvb/frontends/tda10045h.c:308:
+	struct i2c_msg tuner_msg = {.addr = 0,.flags = 0,.buf = 0,.len = 0
 	                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1266: FILE: drivers/media/dvb/frontends/tda10045h.c:308:
+	struct i2c_msg tuner_msg = {.addr = 0,.flags = 0,.buf = 0,.len = 0
 	                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1266: FILE: drivers/media/dvb/frontends/tda10045h.c:308:
+	struct i2c_msg tuner_msg = {.addr = 0,.flags = 0,.buf = 0,.len = 0
 	                                                         ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1276: FILE: drivers/media/dvb/frontends/tda10045h.c:318:
+	dprintk("%s\n", __FUNCTION__);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1282: FILE: drivers/media/dvb/frontends/tda10045h.c:324:
+		printk("%s: Unable to open firmware %s\n", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1282: FILE: drivers/media/dvb/frontends/tda10045h.c:324:
+		printk("%s: Unable to open firmware %s\n", __FUNCTION__,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1288: FILE: drivers/media/dvb/frontends/tda10045h.c:330:
+		printk("%s: Firmware %s is empty\n", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1288: FILE: drivers/media/dvb/frontends/tda10045h.c:330:
+		printk("%s: Firmware %s is empty\n", __FUNCTION__,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1300: FILE: drivers/media/dvb/frontends/tda10045h.c:342:
+		printk("%s: Unsupported firmware %s\n", __FUNCTION__,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1300: FILE: drivers/media/dvb/frontends/tda10045h.c:342:
+		printk("%s: Unsupported firmware %s\n", __FUNCTION__,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!firmware"
#1309: FILE: drivers/media/dvb/frontends/tda10045h.c:351:
+	if (firmware == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1310: FILE: drivers/media/dvb/frontends/tda10045h.c:352:
+		printk("%s: Out of memory loading firmware\n",

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1310: FILE: drivers/media/dvb/frontends/tda10045h.c:352:
+	if (firmware == NULL) {
+		printk("%s: Out of memory loading firmware\n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1311: FILE: drivers/media/dvb/frontends/tda10045h.c:353:
+		       __FUNCTION__);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1318: FILE: drivers/media/dvb/frontends/tda10045h.c:360:
+		printk("%s: Failed to read firmware\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1318: FILE: drivers/media/dvb/frontends/tda10045h.c:360:
+		printk("%s: Failed to read firmware\n", __FUNCTION__);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1331: FILE: drivers/media/dvb/frontends/tda10045h.c:373:
+	if (i2c->xfer(i2c, &tuner_msg, 1) != 1) {
+		i2c->xfer(i2c, &tuner_msg, 1);
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1348: FILE: drivers/media/dvb/frontends/tda10045h.c:390:
+		if (tx_size > 64) {
+			tx_size = 64;
+		}

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1361: FILE: drivers/media/dvb/frontends/tda10045h.c:403:
+		dprintk("%s: fw_pos=0x%x\n", __FUNCTION__, fw_pos);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1371: FILE: drivers/media/dvb/frontends/tda10045h.c:413:
+		printk("%s: firmware upload failed!\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1371: FILE: drivers/media/dvb/frontends/tda10045h.c:413:
+		printk("%s: firmware upload failed!\n", __FUNCTION__);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1391: FILE: drivers/media/dvb/frontends/tda10045h.c:433:
+	while (counter++ < 5) {
+

WARNING:TYPO_SPELLING: 'finshed' may be misspelled - perhaps 'finished'?
#1397: FILE: drivers/media/dvb/frontends/tda10045h.c:439:
+		// finshed yet?
 		   ^^^^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1475: FILE: drivers/media/dvb/frontends/tda10045h.c:517:
+	struct i2c_msg tuner_msg = {.addr = 0,.flags = 0,.buf =
 	                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1475: FILE: drivers/media/dvb/frontends/tda10045h.c:517:
+	struct i2c_msg tuner_msg = {.addr = 0,.flags = 0,.buf =
 	                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1476: FILE: drivers/media/dvb/frontends/tda10045h.c:518:
+		    tuner_buf,.len = sizeof(tuner_buf)
 		             ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1480: FILE: drivers/media/dvb/frontends/tda10045h.c:522:
+	dprintk("%s\n", __FUNCTION__);

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1492: FILE: drivers/media/dvb/frontends/tda10045h.c:534:
+		if (fe_params->frequency < 550000000) {
[...]
+		} else {
[...]

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1511: FILE: drivers/media/dvb/frontends/tda10045h.c:553:
+				if (tuner_buf[0] & 0x40) {
[...]
+				} else {
[...]

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1518: FILE: drivers/media/dvb/frontends/tda10045h.c:560:
+			if (counter2 > 10) {
+				break;
+			}

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#1564: FILE: drivers/media/dvb/frontends/tda10045h.c:606:
+			if (fe_params->frequency <= 300000000) {
[...]
+			} else {
[...]

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1596: FILE: drivers/media/dvb/frontends/tda10045h.c:638:
+		if (i2c->xfer(i2c, &tuner_msg, 1) != 1) {
+			return -EIO;
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1601: FILE: drivers/media/dvb/frontends/tda10045h.c:643:
+		if (i2c->xfer(i2c, &tuner_msg, 1) != 1) {
+			return -EIO;
+		}

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1612: FILE: drivers/media/dvb/frontends/tda10045h.c:654:
+	dprintk("%s: success\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1625: FILE: drivers/media/dvb/frontends/tda10045h.c:667:
+	dprintk("%s\n", __FUNCTION__);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1632: FILE: drivers/media/dvb/frontends/tda10045h.c:674:
+        // hardcoded to use auto as much as possible$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1633: FILE: drivers/media/dvb/frontends/tda10045h.c:675:
+        fe_params->u.ofdm.code_rate_HP = FEC_AUTO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1633: FILE: drivers/media/dvb/frontends/tda10045h.c:675:
+        fe_params->u.ofdm.code_rate_HP = FEC_AUTO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1634: FILE: drivers/media/dvb/frontends/tda10045h.c:676:
+        fe_params->u.ofdm.guard_interval = GUARD_INTERVAL_AUTO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1634: FILE: drivers/media/dvb/frontends/tda10045h.c:676:
+        fe_params->u.ofdm.guard_interval = GUARD_INTERVAL_AUTO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1635: FILE: drivers/media/dvb/frontends/tda10045h.c:677:
+        fe_params->u.ofdm.transmission_mode = TRANSMISSION_MODE_AUTO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1635: FILE: drivers/media/dvb/frontends/tda10045h.c:677:
+        fe_params->u.ofdm.transmission_mode = TRANSMISSION_MODE_AUTO;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1636: FILE: drivers/media/dvb/frontends/tda10045h.c:678:
+   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1636: FILE: drivers/media/dvb/frontends/tda10045h.c:678:
+   $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'fe_params->u.ofdm.code_rate_HP == FEC_AUTO'
#1638: FILE: drivers/media/dvb/frontends/tda10045h.c:680:
+	if ((fe_params->u.ofdm.code_rate_HP == FEC_AUTO) ||
+	    (fe_params->u.ofdm.code_rate_LP == FEC_AUTO) ||
+	    (fe_params->u.ofdm.constellation == QAM_AUTO) ||
+	    (fe_params->u.ofdm.hierarchy_information == HIERARCHY_AUTO)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'fe_params->u.ofdm.code_rate_LP == FEC_AUTO'
#1638: FILE: drivers/media/dvb/frontends/tda10045h.c:680:
+	if ((fe_params->u.ofdm.code_rate_HP == FEC_AUTO) ||
+	    (fe_params->u.ofdm.code_rate_LP == FEC_AUTO) ||
+	    (fe_params->u.ofdm.constellation == QAM_AUTO) ||
+	    (fe_params->u.ofdm.hierarchy_information == HIERARCHY_AUTO)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'fe_params->u.ofdm.constellation == QAM_AUTO'
#1638: FILE: drivers/media/dvb/frontends/tda10045h.c:680:
+	if ((fe_params->u.ofdm.code_rate_HP == FEC_AUTO) ||
+	    (fe_params->u.ofdm.code_rate_LP == FEC_AUTO) ||
+	    (fe_params->u.ofdm.constellation == QAM_AUTO) ||
+	    (fe_params->u.ofdm.hierarchy_information == HIERARCHY_AUTO)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'fe_params->u.ofdm.hierarchy_information == HIERARCHY_AUTO'
#1638: FILE: drivers/media/dvb/frontends/tda10045h.c:680:
+	if ((fe_params->u.ofdm.code_rate_HP == FEC_AUTO) ||
+	    (fe_params->u.ofdm.code_rate_LP == FEC_AUTO) ||
+	    (fe_params->u.ofdm.constellation == QAM_AUTO) ||
+	    (fe_params->u.ofdm.hierarchy_information == HIERARCHY_AUTO)) {

WARNING:LONG_LINE_COMMENT: line length of 102 exceeds 100 columns
#1643: FILE: drivers/media/dvb/frontends/tda10045h.c:685:
+		tda10045h_write_mask(i2c, TDA10045H_IN_CONF1, 0x03, 0);	// turn off constellation bits

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'fe_params->u.ofdm.code_rate_LP'
#1659: FILE: drivers/media/dvb/frontends/tda10045h.c:701:
+			    tda10045h_encode_fec(fe_params->u.ofdm.
+						 code_rate_LP);

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1822: FILE: drivers/media/dvb/frontends/tda10045h.c:864:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1827: FILE: drivers/media/dvb/frontends/tda10045h.c:869:
+{
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1828: FILE: drivers/media/dvb/frontends/tda10045h.c:870:
+	dprintk("%s\n", __FUNCTION__);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1832: FILE: drivers/media/dvb/frontends/tda10045h.c:874:
+	if (tda10045h_read_byte(i2c, TDA10045H_CONFC1) & 0x20) {
+		fe_params->inversion = INVERSION_ON;
+	}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1871: FILE: drivers/media/dvb/frontends/tda10045h.c:913:
+	if (tda10045h_read_byte(i2c, TDA10045H_OUT_CONF1) & 0x10) {
+		fe_params->u.ofdm.transmission_mode = TRANSMISSION_MODE_8K;
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1912: FILE: drivers/media/dvb/frontends/tda10045h.c:954:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1914: FILE: drivers/media/dvb/frontends/tda10045h.c:956:
+int tda10045h_read_status(struct dvb_i2c_bus *i2c, fe_status_t * fe_status)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1918: FILE: drivers/media/dvb/frontends/tda10045h.c:960:
+	dprintk("%s\n", __FUNCTION__);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1922: FILE: drivers/media/dvb/frontends/tda10045h.c:964:
+	if (status == -1) {
+		return -EIO;
+	}

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1934: FILE: drivers/media/dvb/frontends/tda10045h.c:976:
+	dprintk("%s: ------------------ raw_status=0x%x\n", __FUNCTION__, status);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1937: FILE: drivers/media/dvb/frontends/tda10045h.c:979:
+	dprintk("%s: fe_status=0x%x\n", __FUNCTION__, *fe_status);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1942: FILE: drivers/media/dvb/frontends/tda10045h.c:984:
+int tda10045h_read_signal_strength(struct dvb_i2c_bus *i2c, u16 * signal)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1946: FILE: drivers/media/dvb/frontends/tda10045h.c:988:
+	dprintk("%s\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1956: FILE: drivers/media/dvb/frontends/tda10045h.c:998:
+	dprintk("%s: signal=0x%x\n", __FUNCTION__, *signal);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1960: FILE: drivers/media/dvb/frontends/tda10045h.c:1002:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1962: FILE: drivers/media/dvb/frontends/tda10045h.c:1004:
+int tda10045h_read_snr(struct dvb_i2c_bus *i2c, u16 * snr)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1966: FILE: drivers/media/dvb/frontends/tda10045h.c:1008:
+	dprintk("%s\n", __FUNCTION__);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1972: FILE: drivers/media/dvb/frontends/tda10045h.c:1014:
+        // FIXME: calculate this properly$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1976: FILE: drivers/media/dvb/frontends/tda10045h.c:1018:
+	dprintk("%s: snr=0x%x\n", __FUNCTION__, *snr);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1981: FILE: drivers/media/dvb/frontends/tda10045h.c:1023:
+int tda10045h_read_ucblocks(struct dvb_i2c_bus *i2c, u32 * ucblocks)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1987: FILE: drivers/media/dvb/frontends/tda10045h.c:1029:
+	dprintk("%s\n", __FUNCTION__);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1994: FILE: drivers/media/dvb/frontends/tda10045h.c:1036:
+        tmp &= 0x7f;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1994: FILE: drivers/media/dvb/frontends/tda10045h.c:1036:
+        tmp &= 0x7f;$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp2 < tmp'
#2004: FILE: drivers/media/dvb/frontends/tda10045h.c:1046:
+		if ((tmp2 < tmp) || (tmp2 == 0))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'tmp2 == 0'
#2004: FILE: drivers/media/dvb/frontends/tda10045h.c:1046:
+		if ((tmp2 < tmp) || (tmp2 == 0))

ERROR:CODE_INDENT: code indent should use tabs where possible
#2007: FILE: drivers/media/dvb/frontends/tda10045h.c:1049:
+        // FIXME: calculate this properly$

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#2010: FILE: drivers/media/dvb/frontends/tda10045h.c:1052:
+	if (tmp != 0x7f) {
[...]
+	} else {
[...]

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2015: FILE: drivers/media/dvb/frontends/tda10045h.c:1057:
+	dprintk("%s: ucblocks=0x%x\n", __FUNCTION__, *ucblocks);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#2020: FILE: drivers/media/dvb/frontends/tda10045h.c:1062:
+int tda10045h_read_vber(struct dvb_i2c_bus *i2c, u32 * vber)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2022: FILE: drivers/media/dvb/frontends/tda10045h.c:1064:
+{
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2023: FILE: drivers/media/dvb/frontends/tda10045h.c:1065:
+	dprintk("%s\n", __FUNCTION__);

ERROR:CODE_INDENT: code indent should use tabs where possible
#2034: FILE: drivers/media/dvb/frontends/tda10045h.c:1076:
+        // FIXME: calculate this properly$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2035: FILE: drivers/media/dvb/frontends/tda10045h.c:1077:
+^I$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2037: FILE: drivers/media/dvb/frontends/tda10045h.c:1079:
+	dprintk("%s: vber=0x%x\n", __FUNCTION__, *vber);

CHECK:SPACING: No space is necessary after a cast
#2046: FILE: drivers/media/dvb/frontends/tda10045h.c:1088:
+	struct tda10045h_state *tda_state = (struct tda10045h_state *) &(fe->data);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around fe->data
#2046: FILE: drivers/media/dvb/frontends/tda10045h.c:1088:
+	struct tda10045h_state *tda_state = (struct tda10045h_state *) &(fe->data);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2048: FILE: drivers/media/dvb/frontends/tda10045h.c:1090:
+	dprintk("%s: cmd=0x%x\n", __FUNCTION__, cmd);

CHECK:SPACING: No space is necessary after a cast
#2057: FILE: drivers/media/dvb/frontends/tda10045h.c:1099:
+		return tda10045h_read_status(i2c, (fe_status_t *) arg);

CHECK:SPACING: No space is necessary after a cast
#2060: FILE: drivers/media/dvb/frontends/tda10045h.c:1102:
+		return tda10045h_read_vber(i2c, (u32 *) arg);

CHECK:SPACING: No space is necessary after a cast
#2063: FILE: drivers/media/dvb/frontends/tda10045h.c:1105:
+		return tda10045h_read_signal_strength(i2c, (u16 *) arg);

CHECK:SPACING: No space is necessary after a cast
#2066: FILE: drivers/media/dvb/frontends/tda10045h.c:1108:
+		return tda10045h_read_snr(i2c, (u16 *) arg);

CHECK:SPACING: No space is necessary after a cast
#2069: FILE: drivers/media/dvb/frontends/tda10045h.c:1111:
+		return tda10045h_read_ucblocks(i2c, (u32 *) arg);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2102: FILE: drivers/media/dvb/frontends/tda10045h.c:1144:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2107: FILE: drivers/media/dvb/frontends/tda10045h.c:1149:
+	struct i2c_msg tuner_msg = {.addr = 0,.flags = 0,.buf = 0,.len = 0
 	                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2107: FILE: drivers/media/dvb/frontends/tda10045h.c:1149:
+	struct i2c_msg tuner_msg = {.addr = 0,.flags = 0,.buf = 0,.len = 0
 	                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2107: FILE: drivers/media/dvb/frontends/tda10045h.c:1149:
+	struct i2c_msg tuner_msg = {.addr = 0,.flags = 0,.buf = 0,.len = 0
 	                                                         ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2111: FILE: drivers/media/dvb/frontends/tda10045h.c:1153:
+	dprintk("%s\n", __FUNCTION__);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2124: FILE: drivers/media/dvb/frontends/tda10045h.c:1166:
+		printk("tda10045h: Detected, tuner type A.\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2139: FILE: drivers/media/dvb/frontends/tda10045h.c:1181:
+		printk("tda10045h: Detected, but with unknown tuner.\n");

CHECK:SPACING: No space is necessary after a cast
#2147: FILE: drivers/media/dvb/frontends/tda10045h.c:1189:
+	dvb_register_frontend(tda10045h_ioctl, i2c, (void *)(*((u32*) &tda_state)),

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2147: FILE: drivers/media/dvb/frontends/tda10045h.c:1189:
+	dvb_register_frontend(tda10045h_ioctl, i2c, (void *)(*((u32*) &tda_state)),

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2154: FILE: drivers/media/dvb/frontends/tda10045h.c:1196:
+
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#2158: FILE: drivers/media/dvb/frontends/tda10045h.c:1200:
+	dprintk("%s\n", __FUNCTION__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2163: FILE: drivers/media/dvb/frontends/tda10045h.c:1205:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2171: FILE: drivers/media/dvb/frontends/tda10045h.c:1213:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000359788.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 111 errors, 103 warnings, 67 checks, 2141 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000359788.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
