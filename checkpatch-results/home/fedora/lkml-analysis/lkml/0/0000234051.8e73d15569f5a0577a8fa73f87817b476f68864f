WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#168: FILE: arch/um/kernel/skas/include/mmu-skas.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#297: FILE: arch/um/kernel/skas/include/mode_kern-skas.h:1:
+/*

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#309: FILE: arch/um/kernel/skas/include/mode_kern-skas.h:13:
+extern void flush_thread_skas(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#310: FILE: arch/um/kernel/skas/include/mode_kern-skas.h:14:
+extern void *switch_to_skas(void *prev, void *next);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#311: FILE: arch/um/kernel/skas/include/mode_kern-skas.h:15:
+extern void start_thread_skas(struct pt_regs *regs, unsigned long eip,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#313: FILE: arch/um/kernel/skas/include/mode_kern-skas.h:17:
+extern int copy_thread_skas(int nr, unsigned long clone_flags,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#316: FILE: arch/um/kernel/skas/include/mode_kern-skas.h:20:
+extern void release_thread_skas(struct task_struct *task);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#317: FILE: arch/um/kernel/skas/include/mode_kern-skas.h:21:
+extern void exit_thread_skas(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#318: FILE: arch/um/kernel/skas/include/mode_kern-skas.h:22:
+extern void initial_thread_cb_skas(void (*proc)(void *), void *arg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#319: FILE: arch/um/kernel/skas/include/mode_kern-skas.h:23:
+extern void init_idle_skas(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#320: FILE: arch/um/kernel/skas/include/mode_kern-skas.h:24:
+extern void flush_tlb_kernel_range_skas(unsigned long start,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#322: FILE: arch/um/kernel/skas/include/mode_kern-skas.h:26:
+extern void flush_tlb_kernel_vm_skas(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#323: FILE: arch/um/kernel/skas/include/mode_kern-skas.h:27:
+extern void __flush_tlb_one_skas(unsigned long addr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#324: FILE: arch/um/kernel/skas/include/mode_kern-skas.h:28:
+extern void flush_tlb_range_skas(struct vm_area_struct *vma,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#326: FILE: arch/um/kernel/skas/include/mode_kern-skas.h:30:
+extern void flush_tlb_mm_skas(struct mm_struct *mm);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#327: FILE: arch/um/kernel/skas/include/mode_kern-skas.h:31:
+extern void force_flush_all_skas(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#328: FILE: arch/um/kernel/skas/include/mode_kern-skas.h:32:
+extern long execute_syscall_skas(void *r);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#329: FILE: arch/um/kernel/skas/include/mode_kern-skas.h:33:
+extern void before_mem_skas(unsigned long unused);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#330: FILE: arch/um/kernel/skas/include/mode_kern-skas.h:34:
+extern unsigned long set_task_sizes_skas(int arg, unsigned long *host_size_out,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#332: FILE: arch/um/kernel/skas/include/mode_kern-skas.h:36:
+extern int start_uml_skas(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#333: FILE: arch/um/kernel/skas/include/mode_kern-skas.h:37:
+extern int external_pid_skas(struct task_struct *task);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#334: FILE: arch/um/kernel/skas/include/mode_kern-skas.h:38:
+extern int thread_pid_skas(struct task_struct *task);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#354: FILE: arch/um/kernel/skas/include/mode-skas.h:1:
+/*

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#367: FILE: arch/um/kernel/skas/include/mode-skas.h:14:
+extern void user_time_init_skas(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#368: FILE: arch/um/kernel/skas/include/mode-skas.h:15:
+extern int copy_sc_from_user_skas(int pid, union uml_pt_regs *regs,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#370: FILE: arch/um/kernel/skas/include/mode-skas.h:17:
+extern int copy_sc_to_user_skas(int pid, void *to_ptr, void *fp,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#373: FILE: arch/um/kernel/skas/include/mode-skas.h:20:
+extern void sig_handler_common_skas(int sig, void *sc_ptr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#374: FILE: arch/um/kernel/skas/include/mode-skas.h:21:
+extern void halt_skas(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#375: FILE: arch/um/kernel/skas/include/mode-skas.h:22:
+extern void reboot_skas(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#376: FILE: arch/um/kernel/skas/include/mode-skas.h:23:
+extern void kill_off_processes_skas(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#377: FILE: arch/um/kernel/skas/include/mode-skas.h:24:
+extern int is_skas_winch(int pid, int fd, void *data);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#439: FILE: arch/um/kernel/skas/include/uaccess-skas.h:1:
+/*

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'addr' - possible side-effects?
#449: FILE: arch/um/kernel/skas/include/uaccess-skas.h:11:
+#define access_ok_skas(type, addr, size) \
+	((segment_eq(get_fs(), KERNEL_DS)) || \
+	 (((unsigned long) (addr) < TASK_SIZE) && \
+	  ((unsigned long) (addr) + (size) <= TASK_SIZE)))

CHECK:SPACING: No space is necessary after a cast
#451: FILE: arch/um/kernel/skas/include/uaccess-skas.h:13:
+	 (((unsigned long) (addr) < TASK_SIZE) && \

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#452: FILE: arch/um/kernel/skas/include/uaccess-skas.h:14:
+	  ((unsigned long) (addr) + (size) <= TASK_SIZE)))

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#454: FILE: arch/um/kernel/skas/include/uaccess-skas.h:16:
+static inline int verify_area_skas(int type, const void * addr,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#457: FILE: arch/um/kernel/skas/include/uaccess-skas.h:19:
+	return(access_ok_skas(type, addr, size) ? 0 : -EFAULT);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#460: FILE: arch/um/kernel/skas/include/uaccess-skas.h:22:
+extern int copy_from_user_skas(void *to, const void *from, int n);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#461: FILE: arch/um/kernel/skas/include/uaccess-skas.h:23:
+extern int copy_to_user_skas(void *to, const void *from, int n);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#462: FILE: arch/um/kernel/skas/include/uaccess-skas.h:24:
+extern int strncpy_from_user_skas(char *dst, const char *src, int count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#463: FILE: arch/um/kernel/skas/include/uaccess-skas.h:25:
+extern int __clear_user_skas(void *mem, int len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#464: FILE: arch/um/kernel/skas/include/uaccess-skas.h:26:
+extern int clear_user_skas(void *mem, int len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#465: FILE: arch/um/kernel/skas/include/uaccess-skas.h:27:
+extern int strnlen_user_skas(const void *str, int len);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#510: FILE: arch/um/kernel/tt/include/mmu-tt.h:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#636: FILE: arch/um/kernel/tt/include/mode_kern-tt.h:1:
+/*

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#649: FILE: arch/um/kernel/tt/include/mode_kern-tt.h:14:
+extern void *switch_to_tt(void *prev, void *next);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#650: FILE: arch/um/kernel/tt/include/mode_kern-tt.h:15:
+extern void flush_thread_tt(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#651: FILE: arch/um/kernel/tt/include/mode_kern-tt.h:16:
+extern void start_thread_tt(struct pt_regs *regs, unsigned long eip,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#652: FILE: arch/um/kernel/tt/include/mode_kern-tt.h:17:
+extern void start_thread_tt(struct pt_regs *regs, unsigned long eip,
+			   unsigned long esp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#653: FILE: arch/um/kernel/tt/include/mode_kern-tt.h:18:
+extern int copy_thread_tt(int nr, unsigned long clone_flags, unsigned long sp,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#656: FILE: arch/um/kernel/tt/include/mode_kern-tt.h:21:
+extern void release_thread_tt(struct task_struct *task);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#657: FILE: arch/um/kernel/tt/include/mode_kern-tt.h:22:
+extern void exit_thread_tt(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#658: FILE: arch/um/kernel/tt/include/mode_kern-tt.h:23:
+extern void initial_thread_cb_tt(void (*proc)(void *), void *arg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#659: FILE: arch/um/kernel/tt/include/mode_kern-tt.h:24:
+extern void init_idle_tt(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#660: FILE: arch/um/kernel/tt/include/mode_kern-tt.h:25:
+extern void flush_tlb_kernel_range_tt(unsigned long start, unsigned long end);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#661: FILE: arch/um/kernel/tt/include/mode_kern-tt.h:26:
+extern void flush_tlb_kernel_vm_tt(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#662: FILE: arch/um/kernel/tt/include/mode_kern-tt.h:27:
+extern void __flush_tlb_one_tt(unsigned long addr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#663: FILE: arch/um/kernel/tt/include/mode_kern-tt.h:28:
+extern void flush_tlb_range_tt(struct vm_area_struct *vma,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#665: FILE: arch/um/kernel/tt/include/mode_kern-tt.h:30:
+extern void flush_tlb_mm_tt(struct mm_struct *mm);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#666: FILE: arch/um/kernel/tt/include/mode_kern-tt.h:31:
+extern void force_flush_all_tt(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#667: FILE: arch/um/kernel/tt/include/mode_kern-tt.h:32:
+extern long execute_syscall_tt(void *r);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#668: FILE: arch/um/kernel/tt/include/mode_kern-tt.h:33:
+extern void before_mem_tt(unsigned long brk_start);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#669: FILE: arch/um/kernel/tt/include/mode_kern-tt.h:34:
+extern unsigned long set_task_sizes_tt(int arg, unsigned long *host_size_out,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#671: FILE: arch/um/kernel/tt/include/mode_kern-tt.h:36:
+extern int start_uml_tt(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#672: FILE: arch/um/kernel/tt/include/mode_kern-tt.h:37:
+extern int external_pid_tt(struct task_struct *task);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#673: FILE: arch/um/kernel/tt/include/mode_kern-tt.h:38:
+extern int thread_pid_tt(struct task_struct *task);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#693: FILE: arch/um/kernel/tt/include/mode-tt.h:1:
+/*

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#707: FILE: arch/um/kernel/tt/include/mode-tt.h:15:
+extern int tracer(int (*init_proc)(void *), void *sp);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#708: FILE: arch/um/kernel/tt/include/mode-tt.h:16:
+extern void user_time_init_tt(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#709: FILE: arch/um/kernel/tt/include/mode-tt.h:17:
+extern int copy_sc_from_user_tt(void *to_ptr, void *from_ptr, void *data);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#710: FILE: arch/um/kernel/tt/include/mode-tt.h:18:
+extern int copy_sc_to_user_tt(void *to_ptr, void *fp, void *from_ptr,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#712: FILE: arch/um/kernel/tt/include/mode-tt.h:20:
+extern void sig_handler_common_tt(int sig, void *sc);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#713: FILE: arch/um/kernel/tt/include/mode-tt.h:21:
+extern void syscall_handler_tt(int sig, union uml_pt_regs *regs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#714: FILE: arch/um/kernel/tt/include/mode-tt.h:22:
+extern void reboot_tt(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#715: FILE: arch/um/kernel/tt/include/mode-tt.h:23:
+extern void halt_tt(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#716: FILE: arch/um/kernel/tt/include/mode-tt.h:24:
+extern int is_tracer_winch(int pid, int fd, void *data);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#717: FILE: arch/um/kernel/tt/include/mode-tt.h:25:
+extern void kill_off_processes_tt(void);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#810: FILE: arch/um/kernel/tt/include/uaccess-tt.h:1:
+/*

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'addr' - possible side-effects?
#831: FILE: arch/um/kernel/tt/include/uaccess-tt.h:22:
+#define under_task_size(addr, size) \
+	(((unsigned long) (addr) < TASK_SIZE) && \
+         (((unsigned long) (addr) + (size)) < TASK_SIZE))

CHECK:SPACING: No space is necessary after a cast
#832: FILE: arch/um/kernel/tt/include/uaccess-tt.h:23:
+	(((unsigned long) (addr) < TASK_SIZE) && \

ERROR:CODE_INDENT: code indent should use tabs where possible
#833: FILE: arch/um/kernel/tt/include/uaccess-tt.h:24:
+         (((unsigned long) (addr) + (size)) < TASK_SIZE))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:SPACING: No space is necessary after a cast
#833: FILE: arch/um/kernel/tt/include/uaccess-tt.h:24:
+         (((unsigned long) (addr) + (size)) < TASK_SIZE))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#833: FILE: arch/um/kernel/tt/include/uaccess-tt.h:24:
+         (((unsigned long) (addr) + (size)) < TASK_SIZE))$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'addr' - possible side-effects?
#835: FILE: arch/um/kernel/tt/include/uaccess-tt.h:26:
+#define is_stack(addr, size) \
+	(((unsigned long) (addr) < STACK_TOP) && \
+	 ((unsigned long) (addr) >= STACK_TOP - ABOVE_KMEM) && \
+	 (((unsigned long) (addr) + (size)) <= STACK_TOP))

CHECK:SPACING: No space is necessary after a cast
#836: FILE: arch/um/kernel/tt/include/uaccess-tt.h:27:
+	(((unsigned long) (addr) < STACK_TOP) && \

CHECK:SPACING: No space is necessary after a cast
#837: FILE: arch/um/kernel/tt/include/uaccess-tt.h:28:
+	 ((unsigned long) (addr) >= STACK_TOP - ABOVE_KMEM) && \

CHECK:SPACING: No space is necessary after a cast
#838: FILE: arch/um/kernel/tt/include/uaccess-tt.h:29:
+	 (((unsigned long) (addr) + (size)) <= STACK_TOP))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'addr' - possible side-effects?
#840: FILE: arch/um/kernel/tt/include/uaccess-tt.h:31:
+#define access_ok_tt(type, addr, size) \
+	((type == VERIFY_READ) || (segment_eq(get_fs(), KERNEL_DS)) || \
+         (((unsigned long) (addr) <= ((unsigned long) (addr) + (size))) && \
+          (under_task_size(addr, size) || is_stack(addr, size))))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'size' - possible side-effects?
#840: FILE: arch/um/kernel/tt/include/uaccess-tt.h:31:
+#define access_ok_tt(type, addr, size) \
+	((type == VERIFY_READ) || (segment_eq(get_fs(), KERNEL_DS)) || \
+         (((unsigned long) (addr) <= ((unsigned long) (addr) + (size))) && \
+          (under_task_size(addr, size) || is_stack(addr, size))))

ERROR:CODE_INDENT: code indent should use tabs where possible
#842: FILE: arch/um/kernel/tt/include/uaccess-tt.h:33:
+         (((unsigned long) (addr) <= ((unsigned long) (addr) + (size))) && \$

CHECK:SPACING: No space is necessary after a cast
#842: FILE: arch/um/kernel/tt/include/uaccess-tt.h:33:
+         (((unsigned long) (addr) <= ((unsigned long) (addr) + (size))) && \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#842: FILE: arch/um/kernel/tt/include/uaccess-tt.h:33:
+         (((unsigned long) (addr) <= ((unsigned long) (addr) + (size))) && \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#843: FILE: arch/um/kernel/tt/include/uaccess-tt.h:34:
+          (under_task_size(addr, size) || is_stack(addr, size))))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#843: FILE: arch/um/kernel/tt/include/uaccess-tt.h:34:
+          (under_task_size(addr, size) || is_stack(addr, size))))$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#845: FILE: arch/um/kernel/tt/include/uaccess-tt.h:36:
+static inline int verify_area_tt(int type, const void * addr,

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#848: FILE: arch/um/kernel/tt/include/uaccess-tt.h:39:
+	return(access_ok_tt(type, addr, size) ? 0 : -EFAULT);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#851: FILE: arch/um/kernel/tt/include/uaccess-tt.h:42:
+extern unsigned long get_fault_addr(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#853: FILE: arch/um/kernel/tt/include/uaccess-tt.h:44:
+extern int __do_copy_from_user(void *to, const void *from, int n,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#855: FILE: arch/um/kernel/tt/include/uaccess-tt.h:46:
+extern int __do_strncpy_from_user(char *dst, const char *src, size_t n,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#857: FILE: arch/um/kernel/tt/include/uaccess-tt.h:48:
+extern int __do_clear_user(void *mem, size_t len, void **fault_addr,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#859: FILE: arch/um/kernel/tt/include/uaccess-tt.h:50:
+extern int __do_strnlen_user(const char *str, unsigned long n,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#862: FILE: arch/um/kernel/tt/include/uaccess-tt.h:53:
+extern int copy_from_user_tt(void *to, const void *from, int n);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#863: FILE: arch/um/kernel/tt/include/uaccess-tt.h:54:
+extern int copy_to_user_tt(void *to, const void *from, int n);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#864: FILE: arch/um/kernel/tt/include/uaccess-tt.h:55:
+extern int strncpy_from_user_tt(char *dst, const char *src, int count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#865: FILE: arch/um/kernel/tt/include/uaccess-tt.h:56:
+extern int __clear_user_tt(void *mem, int len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#866: FILE: arch/um/kernel/tt/include/uaccess-tt.h:57:
+extern int clear_user_tt(void *mem, int len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#867: FILE: arch/um/kernel/tt/include/uaccess-tt.h:58:
+extern int strnlen_user_tt(const void *str, int len);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000234051.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 11 warnings, 89 checks, 402 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000234051.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
