WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
inlined is the patch that adds support for Display Update Module and RGB framebuffer device on Philips PNX4008 ARM board.

WARNING:TYPO_SPELLING: 'dum' may be misspelled - perhaps 'dumb'?
#33: 
 pnx4008/dum.h      |  243 ++++++++++++++
         ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#60: FILE: drivers/video/pnx4008/dum.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'dum' may be misspelled - perhaps 'dumb'?
#61: FILE: drivers/video/pnx4008/dum.h:2:
+ * linux/drivers/video/pnx4008/dum.h
                                ^^^

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#61: FILE: drivers/video/pnx4008/dum.h:2:
+ * linux/drivers/video/pnx4008/dum.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:TYPO_SPELLING: 'DUM' may be misspelled - perhaps 'DUMB'?
#79: FILE: drivers/video/pnx4008/dum.h:20:
+/* DUM CFG ADDRESSES */
    ^^^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#87: FILE: drivers/video/pnx4008/dum.h:28:
+#define DUM_CH_MIN(i)		(*((volatile u32 *)DUM_CH_MIN_ADR + (i) * 5))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#88: FILE: drivers/video/pnx4008/dum.h:29:
+#define DUM_CH_MAX(i)		(*((volatile u32 *)DUM_CH_MAX_ADR + (i) * 5))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#89: FILE: drivers/video/pnx4008/dum.h:30:
+#define DUM_CH_CONF(i)		(*((volatile u32 *)DUM_CH_CONF_ADR + (i) * 5))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#90: FILE: drivers/video/pnx4008/dum.h:31:
+#define DUM_CH_STAT(i)		(*((volatile u32 *)DUM_CH_STAT_ADR + (i) * 5))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#91: FILE: drivers/video/pnx4008/dum.h:32:
+#define DUM_CH_CTRL(i)		(*((volatile u32 *)DUM_CH_CTRL_ADR + (i) * 5))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#113: FILE: drivers/video/pnx4008/dum.h:54:
+#define DUM_CONF              (*(volatile u32 *)(DUM_CONF_ADR))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#114: FILE: drivers/video/pnx4008/dum.h:55:
+#define DUM_CTRL              (*(volatile u32 *)(DUM_CTRL_ADR))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#115: FILE: drivers/video/pnx4008/dum.h:56:
+#define DUM_STAT              (*(volatile u32 *)(DUM_STAT_ADR))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#116: FILE: drivers/video/pnx4008/dum.h:57:
+#define DUM_DECODE            (*(volatile u32 *)(DUM_DECODE_ADR))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#117: FILE: drivers/video/pnx4008/dum.h:58:
+#define DUM_COM_BASE          (*(volatile u32 *)(DUM_COM_BASE_ADR))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#118: FILE: drivers/video/pnx4008/dum.h:59:
+#define DUM_SYNC_C            (*(volatile u32 *)(DUM_SYNC_C_ADR))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#119: FILE: drivers/video/pnx4008/dum.h:60:
+#define DUM_CLK_DIV           (*(volatile u32 *)(DUM_CLK_DIV_ADR))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#120: FILE: drivers/video/pnx4008/dum.h:61:
+#define DUM_DIRTY_LOW         (*(volatile u32 *)(DUM_DIRTY_LOW_ADR))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#121: FILE: drivers/video/pnx4008/dum.h:62:
+#define DUM_DIRTY_HIGH        (*(volatile u32 *)(DUM_DIRTY_HIGH_ADR))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#122: FILE: drivers/video/pnx4008/dum.h:63:
+#define DUM_FORMAT            (*(volatile u32 *)(DUM_FORMAT_ADR))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#123: FILE: drivers/video/pnx4008/dum.h:64:
+#define DUM_WTCFG1            (*(volatile u32 *)(DUM_WTCFG1_ADR))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#124: FILE: drivers/video/pnx4008/dum.h:65:
+#define DUM_RTCFG1            (*(volatile u32 *)(DUM_RTCFG1_ADR))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#125: FILE: drivers/video/pnx4008/dum.h:66:
+#define DUM_WTCFG2            (*(volatile u32 *)(DUM_WTCFG2_ADR))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#126: FILE: drivers/video/pnx4008/dum.h:67:
+#define DUM_RTCFG2            (*(volatile u32 *)(DUM_RTCFG2_ADR))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#127: FILE: drivers/video/pnx4008/dum.h:68:
+#define DUM_TCFG              (*(volatile u32 *)(DUM_TCFG_ADR))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#128: FILE: drivers/video/pnx4008/dum.h:69:
+#define DUM_OUTP_FORMAT1      (*(volatile u32 *)(DUM_OUTP_FORMAT1_ADR))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#129: FILE: drivers/video/pnx4008/dum.h:70:
+#define DUM_OUTP_FORMAT2      (*(volatile u32 *)(DUM_OUTP_FORMAT2_ADR))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#130: FILE: drivers/video/pnx4008/dum.h:71:
+#define DUM_SYNC_MODE         (*(volatile u32 *)(DUM_SYNC_MODE_ADR))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#131: FILE: drivers/video/pnx4008/dum.h:72:
+#define DUM_SYNC_OUT_C        (*(volatile u32 *)(DUM_SYNC_OUT_C_ADR))

WARNING:TYPO_SPELLING: 'DUM' may be misspelled - perhaps 'DUMB'?
#133: FILE: drivers/video/pnx4008/dum.h:74:
+/* DUM SLAVE ADDRESSES */
    ^^^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#140: FILE: drivers/video/pnx4008/dum.h:81:
+#define DUM_SLAVE_WRITE_W  ((volatile u32 *)(DUM_SLAVE_WRITE_ADR))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#141: FILE: drivers/video/pnx4008/dum.h:82:
+#define DUM_SLAVE_WRITE_HW ((volatile u16 *)(DUM_SLAVE_WRITE_ADR))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#142: FILE: drivers/video/pnx4008/dum.h:83:
+#define DUM_SLAVE_READ1_I  ((volatile u8 *)(DUM_SLAVE_READ1_I_ADR))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#143: FILE: drivers/video/pnx4008/dum.h:84:
+#define DUM_SLAVE_READ1_R  ((volatile u16 *)(DUM_SLAVE_READ1_R_ADR))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#144: FILE: drivers/video/pnx4008/dum.h:85:
+#define DUM_SLAVE_READ2_I  ((volatile u8 *)(DUM_SLAVE_READ2_I_ADR))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#145: FILE: drivers/video/pnx4008/dum.h:86:
+#define DUM_SLAVE_READ2_R  ((volatile u16 *)(DUM_SLAVE_READ2_R_ADR))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(0x100) over __attribute__((aligned(0x100)))
#276: FILE: drivers/video/pnx4008/dum.h:217:
+} __attribute__ ((aligned(0x100)));

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#308: FILE: drivers/video/pnx4008/fbcommon.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#323: FILE: drivers/video/pnx4008/fbcommon.h:16:
+ * the Free Software Foundation, Inc., 59 Temple Place - Suite 330,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#325: FILE: drivers/video/pnx4008/fbcommon.h:18:
+ * Boston, MA 02111-1307, USA, or http://www.gnu.org/licenses/gpl.html
+*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#356: FILE: drivers/video/pnx4008/rgbfb.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#357: FILE: drivers/video/pnx4008/rgbfb.c:2:
+ * drivers/video/pnx4008/rgbfb.c

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#385: FILE: drivers/video/pnx4008/rgbfb.c:30:
+#include <asm/uaccess.h>

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#391: FILE: drivers/video/pnx4008/rgbfb.c:36:
+extern u32 rgb_lcd_video_start;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#392: FILE: drivers/video/pnx4008/rgbfb.c:37:
+extern u32 rgb_lcd_video_size;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#393: FILE: drivers/video/pnx4008/rgbfb.c:38:
+extern u32 lcd_phys_video_start;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#413: FILE: drivers/video/pnx4008/rgbfb.c:58:
+};
+static struct fb_fix_screeninfo rgbfb_fix __initdata = {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct fb_ops should normally be const
#457: FILE: drivers/video/pnx4008/rgbfb.c:102:
+static struct fb_ops rgbfb_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#485: FILE: drivers/video/pnx4008/rgbfb.c:130:
+static int __devinit rgbfb_probe(struct platform_device *pdev)

CHECK:SPACING: No space is necessary after a cast
#498: FILE: drivers/video/pnx4008/rgbfb.c:143:
+				 (dma_addr_t *) &rgbfb_fix.smem_start,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#501: FILE: drivers/video/pnx4008/rgbfb.c:146:
+	if ((ret = pnx4008_alloc_dum_channel(pdev->id)) < 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#501: FILE: drivers/video/pnx4008/rgbfb.c:146:
+	if ((ret = pnx4008_alloc_dum_channel(pdev->id)) < 0)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#503: FILE: drivers/video/pnx4008/rgbfb.c:148:
+	else {

CHECK:SPACING: No space is necessary after a cast
#506: FILE: drivers/video/pnx4008/rgbfb.c:151:
+		chan_uf.dirty = (u32 *) NULL;

CHECK:SPACING: No space is necessary after a cast
#507: FILE: drivers/video/pnx4008/rgbfb.c:152:
+		chan_uf.source = (u32 *) rgbfb_fix.smem_start;

ERROR:SPACING: spaces required around that '<' (ctx:VxW)
#513: FILE: drivers/video/pnx4008/rgbfb.c:158:
+		if ((ret = pnx4008_put_dum_channel_uf(chan_uf, pdev->id))< 0)
 		                                                         ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#513: FILE: drivers/video/pnx4008/rgbfb.c:158:
+		if ((ret = pnx4008_put_dum_channel_uf(chan_uf, pdev->id))< 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#516: FILE: drivers/video/pnx4008/rgbfb.c:161:
+		if ((ret =

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#521: FILE: drivers/video/pnx4008/rgbfb.c:166:
+		if ((ret =

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#587: FILE: drivers/video/Kconfig:1563:
+config FB_PNX4008_DUM
+	tristate "Display Update Module support on Philips PNX4008 board"
+	depends on FB && ARCH_PNX4008
+	---help---
+	  Say Y here to enable support for PNX4008 Display Update Module (DUM)
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:TYPO_SPELLING: 'DUM' may be misspelled - perhaps 'DUMB'?
#591: FILE: drivers/video/Kconfig:1567:
+	  Say Y here to enable support for PNX4008 Display Update Module (DUM)
 	                                                                  ^^^

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#593: FILE: drivers/video/Kconfig:1569:
+config FB_PNX4008_DUM_RGB
+	tristate "RGB Framebuffer support on Philips PNX4008 board"
+	depends on FB_PNX4008_DUM
+	select FB_CFB_FILLRECT
+	select FB_CFB_COPYAREA
+	select FB_CFB_IMAGEBLIT
+	---help---
+	  Say Y here to enable support for PNX4008 RGB Framebuffer
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#623: FILE: drivers/video/pnx4008/sdum.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#624: FILE: drivers/video/pnx4008/sdum.c:2:
+ * drivers/video/pnx4008/sdum.c

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#654: FILE: drivers/video/pnx4008/sdum.c:32:
+#include <asm/uaccess.h>

WARNING:TYPO_SPELLING: 'dum' may be misspelled - perhaps 'dumb'?
#659: FILE: drivers/video/pnx4008/sdum.c:37:
+#include "dum.h"
           ^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#705: FILE: drivers/video/pnx4008/sdum.c:83:
+	u32 r = nof_pixels_dxy(ch_setup);
+	switch (ch_setup->format) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#729: FILE: drivers/video/pnx4008/sdum.c:107:
+static void build_disp_window(struct dum_ch_setup * ch_setup, struct disp_window * dw)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#729: FILE: drivers/video/pnx4008/sdum.c:107:
+static void build_disp_window(struct dum_ch_setup * ch_setup, struct disp_window * dw)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#738: FILE: drivers/video/pnx4008/sdum.c:116:
+}
+static int get_channel(struct dumchannel *p_chan)

CHECK:BRACES: braces {} should be used on all arms of this statement
#742: FILE: drivers/video/pnx4008/sdum.c:120:
+	if (i < 0 || i > MAX_DUM_CHANNELS)
[...]
+	else {
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#744: FILE: drivers/video/pnx4008/sdum.c:122:
+		return -EINVAL;
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#744: FILE: drivers/video/pnx4008/sdum.c:122:
+	else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#759: FILE: drivers/video/pnx4008/sdum.c:137:
+	if (i < 0 || i > MAX_DUM_CHANNELS)
[...]
+	else {
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#761: FILE: drivers/video/pnx4008/sdum.c:139:
+		return -EINVAL;
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#761: FILE: drivers/video/pnx4008/sdum.c:139:
+	else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#792: FILE: drivers/video/pnx4008/sdum.c:170:
+	if (i < 0 || i > MAX_DUM_CHANNELS)
[...]
+	else if ((cmd_ptr0_virtaddr =
[...]
+	else {
[...]

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#794: FILE: drivers/video/pnx4008/sdum.c:172:
+	else if ((cmd_ptr0_virtaddr =

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#799: FILE: drivers/video/pnx4008/sdum.c:177:
+		return -EIOREMAPFAILED;
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#799: FILE: drivers/video/pnx4008/sdum.c:177:
+	else {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#801: FILE: drivers/video/pnx4008/sdum.c:179:
+		if ((cmd_str_virtaddr =

CHECK:SPACING: No space is necessary after a cast
#802: FILE: drivers/video/pnx4008/sdum.c:180:
+		     (u16 *) ioremap_nocache(cmd_str_physaddr,

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#806: FILE: drivers/video/pnx4008/sdum.c:184:
+			return -EIOREMAPFAILED;
+		} else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#808: FILE: drivers/video/pnx4008/sdum.c:186:
+			int t;
+			for (t = 0; t < 8; t++)

CHECK:SPACING: No space is necessary after a cast
#810: FILE: drivers/video/pnx4008/sdum.c:188:
+				    *((u16 *) & (cmds.prestringlen) + t);

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#810: FILE: drivers/video/pnx4008/sdum.c:188:
+				    *((u16 *) & (cmds.prestringlen) + t);
 				              ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around cmds.prestringlen
#810: FILE: drivers/video/pnx4008/sdum.c:188:
+				    *((u16 *) & (cmds.prestringlen) + t);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: No space is necessary after a cast
#814: FILE: drivers/video/pnx4008/sdum.c:192:
+				    *((u16 *) & (cmds.precmd) + t);

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#814: FILE: drivers/video/pnx4008/sdum.c:192:
+				    *((u16 *) & (cmds.precmd) + t);
 				              ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around cmds.precmd
#814: FILE: drivers/video/pnx4008/sdum.c:192:
+				    *((u16 *) & (cmds.precmd) + t);

CHECK:SPACING: No space is necessary after a cast
#819: FILE: drivers/video/pnx4008/sdum.c:197:
+				    *((u16 *) & (cmds.postcmd) + t);

ERROR:SPACING: space prohibited after that '&' (ctx:WxW)
#819: FILE: drivers/video/pnx4008/sdum.c:197:
+				    *((u16 *) & (cmds.postcmd) + t);
 				              ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around cmds.postcmd
#819: FILE: drivers/video/pnx4008/sdum.c:197:
+				    *((u16 *) & (cmds.postcmd) + t);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#829: FILE: drivers/video/pnx4008/sdum.c:207:
+static u32 dum_ch_setup(int ch_no, struct dum_ch_setup * ch_setup)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ch_setup->xmirror'
#839: FILE: drivers/video/pnx4008/sdum.c:217:
+	if ((ch_setup->xmirror) || (ch_setup->ymirror) || (ch_setup->rotate)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ch_setup->ymirror'
#839: FILE: drivers/video/pnx4008/sdum.c:217:
+	if ((ch_setup->xmirror) || (ch_setup->ymirror) || (ch_setup->rotate)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ch_setup->rotate'
#839: FILE: drivers/video/pnx4008/sdum.c:217:
+	if ((ch_setup->xmirror) || (ch_setup->ymirror) || (ch_setup->rotate)) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#839: FILE: drivers/video/pnx4008/sdum.c:217:
+	if ((ch_setup->xmirror) || (ch_setup->ymirror) || (ch_setup->rotate)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#849: FILE: drivers/video/pnx4008/sdum.c:227:
+	} else

CHECK:SPACING: No space is necessary after a cast
#864: FILE: drivers/video/pnx4008/sdum.c:242:
+	    (u16) ((ch_setup->disp_no << 4) | (BIT(3)) | (ch_setup->format));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ch_setup->minadr == 0'
#869: FILE: drivers/video/pnx4008/sdum.c:247:
+	if ((ch_setup->minadr == 0) && (ch_setup->maxadr == 0)
+	    && (ch_setup->xmin == 0)
+	    && (ch_setup->ymin == 0) && (ch_setup->xmax == 0)
+	    && (ch_setup->ymax == 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ch_setup->maxadr == 0'
#869: FILE: drivers/video/pnx4008/sdum.c:247:
+	if ((ch_setup->minadr == 0) && (ch_setup->maxadr == 0)
+	    && (ch_setup->xmin == 0)
+	    && (ch_setup->ymin == 0) && (ch_setup->xmax == 0)
+	    && (ch_setup->ymax == 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ch_setup->xmin == 0'
#869: FILE: drivers/video/pnx4008/sdum.c:247:
+	if ((ch_setup->minadr == 0) && (ch_setup->maxadr == 0)
+	    && (ch_setup->xmin == 0)
+	    && (ch_setup->ymin == 0) && (ch_setup->xmax == 0)
+	    && (ch_setup->ymax == 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ch_setup->ymin == 0'
#869: FILE: drivers/video/pnx4008/sdum.c:247:
+	if ((ch_setup->minadr == 0) && (ch_setup->maxadr == 0)
+	    && (ch_setup->xmin == 0)
+	    && (ch_setup->ymin == 0) && (ch_setup->xmax == 0)
+	    && (ch_setup->ymax == 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ch_setup->xmax == 0'
#869: FILE: drivers/video/pnx4008/sdum.c:247:
+	if ((ch_setup->minadr == 0) && (ch_setup->maxadr == 0)
+	    && (ch_setup->xmin == 0)
+	    && (ch_setup->ymin == 0) && (ch_setup->xmax == 0)
+	    && (ch_setup->ymax == 0)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ch_setup->ymax == 0'
#869: FILE: drivers/video/pnx4008/sdum.c:247:
+	if ((ch_setup->minadr == 0) && (ch_setup->maxadr == 0)
+	    && (ch_setup->xmin == 0)
+	    && (ch_setup->ymin == 0) && (ch_setup->xmax == 0)
+	    && (ch_setup->ymax == 0)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#870: FILE: drivers/video/pnx4008/sdum.c:248:
+	if ((ch_setup->minadr == 0) && (ch_setup->maxadr == 0)
+	    && (ch_setup->xmin == 0)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#871: FILE: drivers/video/pnx4008/sdum.c:249:
+	    && (ch_setup->xmin == 0)
+	    && (ch_setup->ymin == 0) && (ch_setup->xmax == 0)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#872: FILE: drivers/video/pnx4008/sdum.c:250:
+	    && (ch_setup->ymin == 0) && (ch_setup->xmax == 0)
+	    && (ch_setup->ymax == 0)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#877: FILE: drivers/video/pnx4008/sdum.c:255:
+		u32 nbytes = nof_bytes(ch_setup);
+		cmds->pixdatlen_low = (nbytes & 0xFFFF);

CHECK:CAMELCASE: Avoid CamelCase: <xA>
#940: FILE: drivers/video/pnx4008/sdum.c:318:
+		cmds->precmd[0xA] =

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <xB>
#942: FILE: drivers/video/pnx4008/sdum.c:320:
+		cmds->precmd[0xB] =

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#954: FILE: drivers/video/pnx4008/sdum.c:332:
+	if ((ret = put_cmd_string(cmds_c)) != 0) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#954: FILE: drivers/video/pnx4008/sdum.c:332:
+	if ((ret = put_cmd_string(cmds_c)) != 0) {
+		return ret;
+	}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#969: FILE: drivers/video/pnx4008/sdum.c:347:
+static u32 display_open(int ch_no, int auto_update, u32 * dirty_buffer,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#970: FILE: drivers/video/pnx4008/sdum.c:348:
+			u32 * frame_buffer, u32 xpos, u32 ypos, u32 w, u32 h)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#972: FILE: drivers/video/pnx4008/sdum.c:350:
+{
+

CHECK:SPACING: No space is necessary after a cast
#1004: FILE: drivers/video/pnx4008/sdum.c:382:
+	k.minadr = (u32) frame_buffer;

CHECK:SPACING: No space is necessary after a cast
#1005: FILE: drivers/video/pnx4008/sdum.c:383:
+	k.maxadr = (u32) frame_buffer + (((w - 1) << 10) | ((h << 2) - 2));

CHECK:SPACING: No space is necessary after a cast
#1007: FILE: drivers/video/pnx4008/sdum.c:385:
+	k.dirtybuffer = (u32) dirty_buffer;

WARNING:TYPO_SPELLING: 'DUM' may be misspelled - perhaps 'DUMB'?
#1032: FILE: drivers/video/pnx4008/sdum.c:410:
+	/* enable DUM clock */
 	          ^^^

WARNING:TYPO_SPELLING: 'DUM' may be misspelled - perhaps 'DUMB'?
#1035: FILE: drivers/video/pnx4008/sdum.c:413:
+		printk(KERN_ERR "pnx4008_dum: Unable to access DUM clock\n");
 		                                               ^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1035: FILE: drivers/video/pnx4008/sdum.c:413:
+		printk(KERN_ERR "pnx4008_dum: Unable to access DUM clock\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1064: FILE: drivers/video/pnx4008/sdum.c:442:
+	if ((cmdptrs =

CHECK:SPACING: No space is necessary after a cast
#1065: FILE: drivers/video/pnx4008/sdum.c:443:
+	     (u32 *) ioremap_nocache(DUM_COM_BASE,

WARNING:LINE_SPACING: Missing a blank line after declarations
#1126: FILE: drivers/video/pnx4008/sdum.c:504:
+	int ret = -1;
+	for (i = 0; i < ARRAY_SIZE(fb_addr); i++)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1140: FILE: drivers/video/pnx4008/sdum.c:518:
+EXPORT_SYMBOL(pnx4008_get_fb_addresses);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

CHECK:BRACES: braces {} should be used on all arms of this statement
#1149: FILE: drivers/video/pnx4008/sdum.c:527:
+	if (i == MAX_DUM_CHANNELS)
[...]
+	else {
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1151: FILE: drivers/video/pnx4008/sdum.c:529:
+		return -ENORESOURCESLEFT;
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#1151: FILE: drivers/video/pnx4008/sdum.c:529:
+	else {

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1157: FILE: drivers/video/pnx4008/sdum.c:535:
+EXPORT_SYMBOL(pnx4008_alloc_dum_channel);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1161: FILE: drivers/video/pnx4008/sdum.c:539:
+	if (channr < 0 || channr > MAX_DUM_CHANNELS)
[...]
+	else if (dum_data.fb_owning_channel[channr] != dev_id)
[...]
+	else {
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1165: FILE: drivers/video/pnx4008/sdum.c:543:
+		return -EFBNOTOWNER;
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#1165: FILE: drivers/video/pnx4008/sdum.c:543:
+	else {

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1173: FILE: drivers/video/pnx4008/sdum.c:551:
+EXPORT_SYMBOL(pnx4008_free_dum_channel);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1179: FILE: drivers/video/pnx4008/sdum.c:557:
+	if (i < 0 || i > MAX_DUM_CHANNELS)
[...]
+	else if (dum_data.fb_owning_channel[i] != dev_id)
[...]
+	else {
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1183: FILE: drivers/video/pnx4008/sdum.c:561:
+		return -EFBNOTOWNER;
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#1183: FILE: drivers/video/pnx4008/sdum.c:561:
+	else {

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1195: FILE: drivers/video/pnx4008/sdum.c:573:
+EXPORT_SYMBOL(pnx4008_get_dum_channel_uf);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1202: FILE: drivers/video/pnx4008/sdum.c:580:
+	if (i < 0 || i > MAX_DUM_CHANNELS)
[...]
+	else if (dum_data.fb_owning_channel[i] != dev_id)
[...]
+	else if ((ret =
[...]
+	else {
[...]

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1206: FILE: drivers/video/pnx4008/sdum.c:584:
+	else if ((ret =

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1212: FILE: drivers/video/pnx4008/sdum.c:590:
+		return ret;
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#1212: FILE: drivers/video/pnx4008/sdum.c:590:
+	else {

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1224: FILE: drivers/video/pnx4008/sdum.c:602:
+EXPORT_SYMBOL(pnx4008_put_dum_channel_uf);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1231: FILE: drivers/video/pnx4008/sdum.c:609:
+	if (channr < 0 || channr > MAX_DUM_CHANNELS)
[...]
+	else if (dum_data.fb_owning_channel[channr] != dev_id)
[...]
+	else {
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1235: FILE: drivers/video/pnx4008/sdum.c:613:
+		return -EFBNOTOWNER;
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#1235: FILE: drivers/video/pnx4008/sdum.c:613:
+	else {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1237: FILE: drivers/video/pnx4008/sdum.c:615:
+		if ((ret = get_channel(&chan)) != 0)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1244: FILE: drivers/video/pnx4008/sdum.c:622:
+EXPORT_SYMBOL(pnx4008_get_dum_channel_config);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1248: FILE: drivers/video/pnx4008/sdum.c:626:
+	if (channr < 0 || channr > MAX_DUM_CHANNELS)
[...]
+	else if (dum_data.fb_owning_channel[channr] != dev_id)
[...]
+	else {
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1252: FILE: drivers/video/pnx4008/sdum.c:630:
+		return -EFBNOTOWNER;
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#1252: FILE: drivers/video/pnx4008/sdum.c:630:
+	else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1253: FILE: drivers/video/pnx4008/sdum.c:631:
+		if (val == CONF_SYNC_ON) {
[...]
+		} else if (val == CONF_SYNC_OFF)
[...]
+		else
[...]

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1266: FILE: drivers/video/pnx4008/sdum.c:644:
+EXPORT_SYMBOL(pnx4008_set_dum_channel_sync);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1270: FILE: drivers/video/pnx4008/sdum.c:648:
+	if (channr < 0 || channr > MAX_DUM_CHANNELS)
[...]
+	else if (dum_data.fb_owning_channel[channr] != dev_id)
[...]
+	else {
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1274: FILE: drivers/video/pnx4008/sdum.c:652:
+		return -EFBNOTOWNER;
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#1274: FILE: drivers/video/pnx4008/sdum.c:652:
+	else {

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1286: FILE: drivers/video/pnx4008/sdum.c:664:
+EXPORT_SYMBOL(pnx4008_set_dum_chanel_dirty_detect);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#1295: FILE: drivers/video/pnx4008/sdum.c:673:
+		return -EFBNOTOWNER;
+	else

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1301: FILE: drivers/video/pnx4008/sdum.c:679:
+EXPORT_SYMBOL(pnx4008_force_update_dum_channel);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1318: FILE: drivers/video/pnx4008/sdum.c:696:
+EXPORT_SYMBOL(pnx4008_sdum_mmap);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#1331: FILE: drivers/video/pnx4008/sdum.c:709:
+EXPORT_SYMBOL(pnx4008_set_dum_exit_notification);

WARNING:TYPO_SPELLING: 'DUM' may be misspelled - perhaps 'DUMB'?
#1333: FILE: drivers/video/pnx4008/sdum.c:711:
+/* Platform device driver for DUM */
                               ^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1341: FILE: drivers/video/pnx4008/sdum.c:719:
+	if (!IS_ERR(clk)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1344: FILE: drivers/video/pnx4008/sdum.c:722:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#1362: FILE: drivers/video/pnx4008/sdum.c:740:
+	if (!IS_ERR(clk)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1365: FILE: drivers/video/pnx4008/sdum.c:743:
+	} else

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1372: FILE: drivers/video/pnx4008/sdum.c:750:
+		udelay(10);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1384: FILE: drivers/video/pnx4008/sdum.c:762:
+static int __devinit sdum_probe(struct platform_device *pdev)

CHECK:SPACING: No space is necessary after a cast
#1389: FILE: drivers/video/pnx4008/sdum.c:767:
+	dum_data.lcd_virt_start = (u32) dma_alloc_writecombine(&pdev->dev,

CHECK:SPACING: No space is necessary after a cast
#1402: FILE: drivers/video/pnx4008/sdum.c:780:
+	    (u32 *) ioremap_nocache(dum_data.slave_phys_base, sizeof(u32));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dum_data.slave_virt_base"
#1404: FILE: drivers/video/pnx4008/sdum.c:782:
+	if (dum_data.slave_virt_base == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'DUM' may be misspelled - perhaps 'DUMB'?
#1409: FILE: drivers/video/pnx4008/sdum.c:787:
+	/* initialize DUM and LCD display */
 	              ^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1459: FILE: drivers/video/pnx4008/sdum.c:837:
+	dma_free_writecombine(&pdev->dev, FB_DMA_SIZE,
+			(void *)dum_data.lcd_virt_start,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1494: FILE: drivers/video/pnx4008/sdum.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1509: FILE: drivers/video/pnx4008/sdum.h:16:
+ * the Free Software Foundation, Inc., 59 Temple Place - Suite 330,$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1511: FILE: drivers/video/pnx4008/sdum.h:18:
+ * Boston, MA 02111-1307, USA, or http://www.gnu.org/licenses/gpl.html
+*/

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1515: FILE: drivers/video/pnx4008/sdum.h:22:
+#define RGB_MEM_WINDOW(x) (0x10000000 + (x)*0x00100000)
                                            ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1517: FILE: drivers/video/pnx4008/sdum.h:24:
+#define QCIF_OFFSET(x) (((x) == 0) ? 0x00000: ((x) == 1) ? 0x30000: -1)
                                             ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1517: FILE: drivers/video/pnx4008/sdum.h:24:
+#define QCIF_OFFSET(x) (((x) == 0) ? 0x00000: ((x) == 1) ? 0x30000: -1)
                                                                   ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#1517: FILE: drivers/video/pnx4008/sdum.h:24:
+#define QCIF_OFFSET(x) (((x) == 0) ? 0x00000: ((x) == 1) ? 0x30000: -1)

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1518: FILE: drivers/video/pnx4008/sdum.h:25:
+#define CIF_OFFSET(x)  (((x) == 0) ? 0x00000: ((x) == 1) ? 0x60000: -1)
                                             ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1518: FILE: drivers/video/pnx4008/sdum.h:25:
+#define CIF_OFFSET(x)  (((x) == 0) ? 0x00000: ((x) == 1) ? 0x60000: -1)
                                                                   ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#1518: FILE: drivers/video/pnx4008/sdum.h:25:
+#define CIF_OFFSET(x)  (((x) == 0) ? 0x00000: ((x) == 1) ? 0x60000: -1)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1520: FILE: drivers/video/pnx4008/sdum.h:27:
+#define CTRL_SETDIRTY^I ^I(0x00000001)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1525: FILE: drivers/video/pnx4008/sdum.h:32:
+#define SYNC_ENABLED(conf) ^I((conf) & 0x0004)$

WARNING:TYPO_SPELLING: 'DUM' may be misspelled - perhaps 'DUMB'?
#1533: FILE: drivers/video/pnx4008/sdum.h:40:
+/* DUM Transit State Timing Configuration */
    ^^^

WARNING:TYPO_SPELLING: 'DUM' may be misspelled - perhaps 'DUMB'?
#1536: FILE: drivers/video/pnx4008/sdum.h:43:
+/* DUM Sync count clock divider */
    ^^^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1593: FILE: drivers/video/pnx4008/sdum.h:100:
+	uint16_t prestringlen;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1594: FILE: drivers/video/pnx4008/sdum.h:101:
+	uint16_t poststringlen;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1595: FILE: drivers/video/pnx4008/sdum.h:102:
+	uint16_t format;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1596: FILE: drivers/video/pnx4008/sdum.h:103:
+	uint16_t reserved;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1597: FILE: drivers/video/pnx4008/sdum.h:104:
+	uint16_t startaddr_low;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1598: FILE: drivers/video/pnx4008/sdum.h:105:
+	uint16_t startaddr_high;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1599: FILE: drivers/video/pnx4008/sdum.h:106:
+	uint16_t pixdatlen_low;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1600: FILE: drivers/video/pnx4008/sdum.h:107:
+	uint16_t pixdatlen_high;

CHECK:CAMELCASE: Avoid CamelCase: <pChan_uf>
#1618: FILE: drivers/video/pnx4008/sdum.h:125:
+int pnx4008_get_dum_channel_uf(struct dumchannel_uf *pChan_uf, int dev_id);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1632: FILE: drivers/video/pnx4008/sdum.h:139:
+			     dma_addr_t * phys_addr, int *fb_length);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000064126.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 26 errors, 95 warnings, 78 checks, 1550 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000064126.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
