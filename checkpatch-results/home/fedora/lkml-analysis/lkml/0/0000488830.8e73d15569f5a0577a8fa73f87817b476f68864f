WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#52: 
--- ../2.4.16.uml.clean/arch/um/fs/hostfs/hostfs_kern.c	Mon Dec 31 03:15:49 2001

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#78: FILE: drivers/block/rd.c:676:
+	if ((inode = get_empty_inode(NULL)) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#87: FILE: drivers/block/rd.c:686:
+	if ((out_inode = get_empty_inode(NULL)) == NULL)

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:INDENTED_LABEL: labels should not be indented
#100: FILE: fs/ext2/super.c:802:
+	owner:		THIS_MODULE,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#101: FILE: fs/ext2/super.c:803:
+	fs_flags:	FS_REQUIRES_DEV,
 	        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#101: FILE: fs/ext2/super.c:803:
+	fs_flags:	FS_REQUIRES_DEV,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#102: FILE: fs/ext2/super.c:804:
+	name:		"ext2",
 	    ^

WARNING:INDENTED_LABEL: labels should not be indented
#102: FILE: fs/ext2/super.c:804:
+	name:		"ext2",

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#103: FILE: fs/ext2/super.c:805:
+	read_super:	ext2_read_super,
 	          ^

WARNING:INDENTED_LABEL: labels should not be indented
#103: FILE: fs/ext2/super.c:805:
+	read_super:	ext2_read_super,

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#104: FILE: fs/ext2/super.c:806:
+	super_size:	sizeof(struct ext2_sb_info),
 	          ^

WARNING:INDENTED_LABEL: labels should not be indented
#104: FILE: fs/ext2/super.c:806:
+	super_size:	sizeof(struct ext2_sb_info),

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#105: FILE: fs/ext2/super.c:807:
+	inode_size:	sizeof(struct ext2_inode_info)
 	          ^

WARNING:INDENTED_LABEL: labels should not be indented
#105: FILE: fs/ext2/super.c:807:
+	inode_size:	sizeof(struct ext2_inode_info)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#107: FILE: fs/ext2/super.c:809:
+ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: fs/ext2/super.c:809:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: fs/ext2/super.c:812:
+        return register_filesystem(&ext2_fs);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: fs/ext2/super.c:812:
+        return register_filesystem(&ext2_fs);$

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#132: FILE: fs/inode.c:80:
+static inline struct inode *alloc_inode (struct super_block *sb)

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#134: FILE: fs/inode.c:82:
+	kmem_cache_t *cache = sb? sb->s_type->inode_cache: NULL;
 	                        ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#134: FILE: fs/inode.c:82:
+	kmem_cache_t *cache = sb? sb->s_type->inode_cache: NULL;
 	                                                 ^

CHECK:SPACING: No space is necessary after a cast
#135: FILE: fs/inode.c:83:
+	return (struct inode *) kmem_cache_alloc (cache? cache: inode_cachep, SLAB_KERNEL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#135: FILE: fs/inode.c:83:
+	kmem_cache_t *cache = sb? sb->s_type->inode_cache: NULL;
+	return (struct inode *) kmem_cache_alloc (cache? cache: inode_cachep, SLAB_KERNEL);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#135: FILE: fs/inode.c:83:
+	return (struct inode *) kmem_cache_alloc (cache? cache: inode_cachep, SLAB_KERNEL);

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#135: FILE: fs/inode.c:83:
+	return (struct inode *) kmem_cache_alloc (cache? cache: inode_cachep, SLAB_KERNEL);
 	                                               ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#135: FILE: fs/inode.c:83:
+	return (struct inode *) kmem_cache_alloc (cache? cache: inode_cachep, SLAB_KERNEL);
 	                                                      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#138: FILE: fs/inode.c:86:
+static void destroy_inode (struct inode *inode) $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#138: FILE: fs/inode.c:86:
+static void destroy_inode (struct inode *inode) 

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#141: FILE: fs/inode.c:89:
+	kmem_cache_t *cache = sb? sb->s_type->inode_cache: NULL;
 	                        ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#141: FILE: fs/inode.c:89:
+	kmem_cache_t *cache = sb? sb->s_type->inode_cache: NULL;
 	                                                 ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#145: FILE: fs/inode.c:92:
+	kmem_cache_free (cache? cache: inode_cachep, inode);

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#145: FILE: fs/inode.c:92:
+	kmem_cache_free (cache? cache: inode_cachep, inode);
 	                      ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#145: FILE: fs/inode.c:92:
+	kmem_cache_free (cache? cache: inode_cachep, inode);
 	                             ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#157: FILE: fs/inode.c:671:
+void prune_icache (int goal)

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#173: FILE: fs/inode.c:736:
+#if 0

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#178: FILE: fs/inode.c:741:
+		kmem_cache_shrink (fs->inode_cache);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#190: FILE: fs/inode.c:784:
+static void clean_inode (struct super_block *sb, struct inode *inode)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#196: FILE: fs/inode.c:789:
+	unsigned given = sb? sb->s_type->inode_size: 0; // only rd.c has null sb

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#196: FILE: fs/inode.c:789:
+	unsigned given = sb? sb->s_type->inode_size: 0; // only rd.c has null sb
 	                   ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#196: FILE: fs/inode.c:789:
+	unsigned given = sb? sb->s_type->inode_size: 0; // only rd.c has null sb
 	                                           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#197: FILE: fs/inode.c:790:
+	unsigned given = sb? sb->s_type->inode_size: 0; // only rd.c has null sb
+	memset(&inode->u, 0, given? given: sizeof(inode->u));

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#197: FILE: fs/inode.c:790:
+	memset(&inode->u, 0, given? given: sizeof(inode->u));
 	                          ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#197: FILE: fs/inode.c:790:
+	memset(&inode->u, 0, given? given: sizeof(inode->u));
 	                                 ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#207: FILE: fs/inode.c:823:
+struct inode *get_empty_inode (struct super_block *sb)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#216: FILE: fs/inode.c:829:
+	inode = alloc_inode (sb);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#241: FILE: fs/inode.c:858:
+	inode = alloc_inode (sb);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#269: FILE: fs/inode.c:917:
+int create_inode_cache (struct file_system_type *fs)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#272: FILE: fs/inode.c:920:
+^I^Iif (!(fs->inode_cache = kmem_cache_create (fs->name, $

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#272: FILE: fs/inode.c:920:
+		if (!(fs->inode_cache = kmem_cache_create (fs->name, 

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#272: FILE: fs/inode.c:920:
+		if (!(fs->inode_cache = kmem_cache_create (fs->name, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#273: FILE: fs/inode.c:921:
+		if (!(fs->inode_cache = kmem_cache_create (fs->name, 
+		    fs->inode_size + sizeof(struct inode) - sizeof(get_empty_inode(0)->u),

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#279: FILE: fs/inode.c:927:
+int destroy_inode_cache (struct file_system_type *fs)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#281: FILE: fs/inode.c:929:
+	printk("Destroying inode cache for %s\n", fs->name);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#282: FILE: fs/inode.c:930:
+	return kmem_cache_destroy (fs->inode_cache)? -EBUSY: 0;

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#282: FILE: fs/inode.c:930:
+	return kmem_cache_destroy (fs->inode_cache)? -EBUSY: 0;
 	                                           ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#282: FILE: fs/inode.c:930:
+	return kmem_cache_destroy (fs->inode_cache)? -EBUSY: 0;
 	                                                   ^

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#304: FILE: fs/super.c:108:
+int register_filesystem (struct file_system_type *fs)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#321: FILE: fs/super.c:123:
+		if (!(err = create_inode_cache (fs)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#321: FILE: fs/super.c:123:
+		if (!(err = create_inode_cache (fs)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#334: FILE: fs/super.c:141:
+int unregister_filesystem (struct file_system_type *fs)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#348: FILE: fs/super.c:149:
+			if (fs->inode_cache && (err = destroy_inode_cache (fs)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#348: FILE: fs/super.c:149:
+			if (fs->inode_cache && (err = destroy_inode_cache (fs)))

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#385: FILE: include/linux/fs.h:958:
+	unsigned super_size, inode_size;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#399: FILE: include/linux/fs.h:1337:
+extern struct inode *get_empty_inode (struct super_block *sb);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#399: FILE: include/linux/fs.h:1337:
+extern struct inode *get_empty_inode (struct super_block *sb);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#402: FILE: include/linux/fs.h:1339:
+static inline struct inode *new_inode (struct super_block *sb)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#414: FILE: include/linux/fs.h:1349:
+int create_inode_cache (struct file_system_type *fs);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#415: FILE: include/linux/fs.h:1350:
+int destroy_inode_cache (struct file_system_type *fs);

WARNING:PATCH_PREFIX: patch prefix '.' exists, appears to be a -p0 patch

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000488830.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 28 errors, 44 warnings, 3 checks, 345 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000488830.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
