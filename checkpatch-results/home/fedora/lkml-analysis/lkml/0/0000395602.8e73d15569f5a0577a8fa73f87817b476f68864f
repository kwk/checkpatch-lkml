WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
diff -urN -X /home/axboe/cdrom/exclude /opt/kernel/linux-2.4.20/drivers/block/elevator.c linux/drivers/block/elevator.c

WARNING:USE_RELATIVE_PATH: use relative pathname instead of absolute in changelog text
#41: 
diff -urN -X /home/axboe/cdrom/exclude /opt/kernel/linux-2.4.20/drivers/block/elevator.c linux/drivers/block/elevator.c

WARNING:USE_RELATIVE_PATH: use relative pathname instead of absolute in changelog text
#42: 
--- /opt/kernel/linux-2.4.20/drivers/block/elevator.c	2002-11-29 00:53:12.000000000 +0100

ERROR:CODE_INDENT: code indent should use tabs where possible
#89: FILE: drivers/block/ll_rw_blk.c:268:
+        q->ordered = flag;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: drivers/block/ll_rw_blk.c:268:
+        q->ordered = flag;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#118: FILE: drivers/block/ll_rw_blk.c:942:
+^Iif (buffer_ordered_tag(bh)) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#120: FILE: drivers/block/ll_rw_blk.c:944:
+^Ielse if (buffer_ordered_flush(bh)) $

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#135: FILE: drivers/block/ll_rw_blk.c:958:
+	latency = rw_ahead = 0;	/* normal case; gets changed below for READA */

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:LONG_LINE: line length of 105 exceeds 100 columns
#187: FILE: drivers/ide/ide.c:574:
+	flush_rq->buffer[0] = (drive->id->cfs_enable_2 & 0x2400) ? WIN_FLUSH_CACHE_EXT : WIN_FLUSH_CACHE;

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:BRACES: braces {} should be used on all arms of this statement
#189: FILE: drivers/ide/ide.c:576:
+	if (post)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#191: FILE: drivers/ide/ide.c:578:
+	else {

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: drivers/ide/ide.c:613:
+                 * if this is a write barrier, flush the writecache before$

WARNING:TYPO_SPELLING: 'finsh' may be misspelled - perhaps 'finish'?
#214: FILE: drivers/ide/ide.c:614:
+                 * allowing new requests to finsh and before signalling
                                             ^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#214: FILE: drivers/ide/ide.c:614:
+                 * allowing new requests to finsh and before signalling$

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: drivers/ide/ide.c:615:
+                 * completion of this request$

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: drivers/ide/ide.c:616:
+                 */$

CHECK:BRACES: braces {} should be used on all arms of this statement
#217: FILE: drivers/ide/ide.c:617:
+		if (rq->cmd_flags & RQ_WRITE_ORDERED)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#219: FILE: drivers/ide/ide.c:619:
+		else {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#268: FILE: drivers/ide/ide.c:1019:
+		if ((stat & (BUSY_STAT|ERR_STAT)) == ERR_STAT)
 		                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!drive"
#281: FILE: drivers/ide/ide.c:1127:
+	if (drive == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#287: FILE: drivers/ide/ide.c:1132:
+	if ((rq = HWGROUP(drive)->rq) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#316: FILE: drivers/ide/ide.c:1677:
+ ^I^I/*$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#316: FILE: drivers/ide/ide.c:1677:
+ ^I^I/*$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: drivers/ide/ide.c:1677:
+ ^I^I/*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#317: FILE: drivers/ide/ide.c:1678:
+ ^I^I * if rq is a barrier write, issue pre cache flush if not$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#317: FILE: drivers/ide/ide.c:1678:
+ ^I^I * if rq is a barrier write, issue pre cache flush if not$

ERROR:CODE_INDENT: code indent should use tabs where possible
#318: FILE: drivers/ide/ide.c:1679:
+ ^I^I * already done$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#318: FILE: drivers/ide/ide.c:1679:
+ ^I^I * already done$

ERROR:CODE_INDENT: code indent should use tabs where possible
#319: FILE: drivers/ide/ide.c:1680:
+ ^I^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#319: FILE: drivers/ide/ide.c:1680:
+ ^I^I */$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#321: FILE: drivers/ide/ide.c:1682:
+		if ((rq->cmd_flags & RQ_WRITE_ORDERED)
+		    && !(rq->cmd_flags & RQ_WRITE_PREFLUSH))

ERROR:CODE_INDENT: code indent should use tabs where possible
#322: FILE: drivers/ide/ide.c:1683:
+ ^I^I^Irq = ide_queue_flush_cmd(drive, rq, 0);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#322: FILE: drivers/ide/ide.c:1683:
+ ^I^I^Irq = ide_queue_flush_cmd(drive, rq, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: drivers/ide/ide.c:1683:
+ ^I^I^Irq = ide_queue_flush_cmd(drive, rq, 0);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#323: FILE: drivers/ide/ide.c:1684:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: drivers/ide/ide.c:1684:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#324: FILE: drivers/ide/ide.c:1685:
+ ^I^Ihwgroup->rq = rq;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#324: FILE: drivers/ide/ide.c:1685:
+ ^I^Ihwgroup->rq = rq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: drivers/ide/ide.c:1685:
+ ^I^Ihwgroup->rq = rq;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#325: FILE: drivers/ide/ide.c:1686:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: drivers/ide/ide.c:1686:
+ $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#337: FILE: drivers/ide/ide.c:3975:
+			printk("%s: safely enabled flush\n", drive->name);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#353: FILE: fs/jbd/commit.c:603:
+		/* if we're on an ide device, setting BH_Ordered_Flush
+		   will force a write cache flush before and after the

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#354: FILE: fs/jbd/commit.c:604:
+		   commit block.  Otherwise, it'll do nothing.  */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#356: FILE: fs/jbd/commit.c:606:
+^I^Iset_bit(BH_Ordered_Flush, &bh->b_state); $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#410: FILE: include/linux/blkdev.h:224:
+extern void blk_queue_ordered(request_queue_t *, int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'request_queue_t *' should also have an identifier name
#410: FILE: include/linux/blkdev.h:224:
+extern void blk_queue_ordered(request_queue_t *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#410: FILE: include/linux/blkdev.h:224:
+extern void blk_queue_ordered(request_queue_t *, int);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#447: FILE: include/linux/fs.h:290:
+#define buffer_ordered_tag(bh)	__buffer_state(bh,Ordered_Tag)
                               	                 ^

CHECK:CAMELCASE: Avoid CamelCase: <Ordered_Tag>
#447: FILE: include/linux/fs.h:290:
+#define buffer_ordered_tag(bh)	__buffer_state(bh,Ordered_Tag)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: space required after that ',' (ctx:VxV)
#448: FILE: include/linux/fs.h:291:
+#define buffer_ordered_hard(bh)	__buffer_state(bh,Ordered_Hard)
                                	                 ^

CHECK:CAMELCASE: Avoid CamelCase: <Ordered_Hard>
#448: FILE: include/linux/fs.h:291:
+#define buffer_ordered_hard(bh)	__buffer_state(bh,Ordered_Hard)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#449: FILE: include/linux/fs.h:292:
+#define buffer_ordered_flush(bh)	__buffer_state(bh,Ordered_Flush)
                                 	                 ^

CHECK:CAMELCASE: Avoid CamelCase: <Ordered_Flush>
#449: FILE: include/linux/fs.h:292:
+#define buffer_ordered_flush(bh)	__buffer_state(bh,Ordered_Flush)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#450: FILE: include/linux/fs.h:293:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#450: FILE: include/linux/fs.h:293:
+ $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000395602.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 23 warnings, 12 checks, 382 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000395602.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
