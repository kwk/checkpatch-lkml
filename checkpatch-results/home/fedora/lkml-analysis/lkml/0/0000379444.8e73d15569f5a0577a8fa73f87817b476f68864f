WARNING:PATCH_PREFIX: patch prefix 'drivers' exists, appears to be a -p0 patch

CHECK:LINE_SPACING: Please don't use multiple blank lines
#69: FILE: block/rd.c:363:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#78: FILE: block/rd.c:372:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#80: FILE: block/rd.c:374:
+	int len;
+	len = sprintf(page, "%d\n", rd_size);

ERROR:CODE_INDENT: code indent should use tabs where possible
#81: FILE: block/rd.c:375:
+       ^Ireturn len;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#81: FILE: block/rd.c:375:
+       ^Ireturn len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#81: FILE: block/rd.c:375:
+       ^Ireturn len;$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#85: FILE: block/rd.c:379:
+static char rd_buf[MAX_RDSTR_LEN+1];
                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#93: FILE: block/rd.c:387:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#96: FILE: block/rd.c:390:
+		struct block_device *bdev = rd_bdev[i];
+		if (bdev != NULL ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#96: FILE: block/rd.c:390:
+		if (bdev != NULL ) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "bdev"
#96: FILE: block/rd.c:390:
+		if (bdev != NULL ) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#97: FILE: block/rd.c:391:
+			down (&bdev->bd_sem);

ERROR:SPACING: space required before the open brace '{'
#98: FILE: block/rd.c:392:
+			if ( bdev->bd_openers > 1 ){

ERROR:SPACING: space prohibited after that open parenthesis '('
#98: FILE: block/rd.c:392:
+			if ( bdev->bd_openers > 1 ){

ERROR:SPACING: space prohibited before that close parenthesis ')'
#98: FILE: block/rd.c:392:
+			if ( bdev->bd_openers > 1 ){

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#99: FILE: block/rd.c:393:
+				up (&bdev->bd_sem);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#102: FILE: block/rd.c:396:
+			up (&bdev->bd_sem);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#104: FILE: block/rd.c:398:
+^I}^I$

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#105: FILE: block/rd.c:399:
+	if (len>MAX_RDSTR_LEN)
 	       ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#107: FILE: block/rd.c:401:
+^Ielse $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#109: FILE: block/rd.c:403:
+^I$

ERROR:SPACING: space required before the open brace '{'
#110: FILE: block/rd.c:404:
+	if (copy_from_user(rd_buf, buf, len)){

WARNING:BRACES: braces {} are not necessary for single statement blocks
#110: FILE: block/rd.c:404:
+	if (copy_from_user(rd_buf, buf, len)){
+		return -EFAULT;
+	}

ERROR:SPACING: space required after that ',' (ctx:VxV)
#113: FILE: block/rd.c:407:
+	temp = simple_strtol(rd_buf,NULL,0);
 	                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#113: FILE: block/rd.c:407:
+	temp = simple_strtol(rd_buf,NULL,0);
 	                                ^

WARNING:CONSIDER_KSTRTO: simple_strtol is obsolete, use kstrtol instead
#113: FILE: block/rd.c:407:
+	temp = simple_strtol(rd_buf,NULL,0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

ERROR:SPACING: space prohibited before that close parenthesis ')'
#115: FILE: block/rd.c:409:
+	if (temp < 0 ) return len;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#115: FILE: block/rd.c:409:
+	if (temp < 0 ) return len;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#117: FILE: block/rd.c:411:
+^Ird_size = temp;^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#122: FILE: block/rd.c:416:
+		struct block_device *bdev = rd_bdev[i];
+		set_capacity(disk, rd_size * 2);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#123: FILE: block/rd.c:417:
+		if (bdev != NULL ) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "bdev"
#123: FILE: block/rd.c:417:
+		if (bdev != NULL ) {

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#124: FILE: block/rd.c:418:
+			down (&bdev->bd_sem);

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#125: FILE: block/rd.c:419:
+			bdev->bd_inode->i_size = get_capacity(rd_disks[i])<<9;
 			                                                  ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#126: FILE: block/rd.c:420:
+			up (&bdev->bd_sem);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#128: FILE: block/rd.c:422:
+^I}^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#140: FILE: block/rd.c:522:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#140: FILE: block/rd.c:522:
 
+	

ERROR:TRAILING_WHITESPACE: trailing whitespace
#142: FILE: block/rd.c:524:
+/* The entry would be created at /proc/ramdisk_size */^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#143: FILE: block/rd.c:525:
+^Ird_sz = create_proc_entry("ramdisk_size", 0644, NULL); $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rd_sz"
#144: FILE: block/rd.c:526:
+	if (rd_sz != NULL) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#148: FILE: block/rd.c:530:
+		printk("RAMDISK: proc entry could not be created\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#149: FILE: block/rd.c:531:
+^I}^I$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000379444.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 22 errors, 14 warnings, 8 checks, 97 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000379444.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
