WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
diff -urN linux-2.5.41/drivers/isdn/capi/capifs.c linux/drivers/isdn/capi/capifs.c

CHECK:SPACING: No space is necessary after a cast
#54: FILE: drivers/isdn/capi/capifs.c:313:
+	s->s_fs_info = (void *) sbi;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: fs/coda/inode.c:178:
+        sb->s_fs_info = sbi;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: fs/coda/inode.c:178:
+        sb->s_fs_info = sbi;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: fs/devfs/base.c:2486:
+    struct fs_info *fs_info = inode->i_sb->s_fs_info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#287: FILE: fs/devfs/base.c:2633:
+    fs_info = inode->i_sb->s_fs_info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: fs/devfs/base.c:2697:
+    struct fs_info *fs_info = inode->i_sb->s_fs_info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: fs/devfs/base.c:2828:
+    fs_info = inode->i_sb->s_fs_info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: fs/devfs/base.c:2857:
+    struct fs_info *fs_info = dir->i_sb->s_fs_info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: fs/devfs/base.c:2910:
+    struct fs_info *fs_info = dir->i_sb->s_fs_info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: fs/devfs/base.c:2999:
+    struct fs_info *fs_info = dir->i_sb->s_fs_info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: fs/devfs/base.c:3021:
+    struct fs_info *fs_info = dir->i_sb->s_fs_info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: fs/devfs/base.c:3053:
+    struct fs_info *fs_info = dir->i_sb->s_fs_info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: fs/devfs/base.c:3085:
+    struct fs_info *fs_info = dir->i_sb->s_fs_info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: fs/devfs/base.c:3088:
+    if (dir->i_sb->s_fs_info != inode->i_sb->s_fs_info) return -EINVAL;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#363: FILE: fs/devfs/base.c:3088:
+    if (dir->i_sb->s_fs_info != inode->i_sb->s_fs_info) return -EINVAL;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#372: FILE: fs/devfs/base.c:3116:
+    struct fs_info *fs_info = dir->i_sb->s_fs_info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: fs/devfs/base.c:3204:
+    sb->s_fs_info = &fs_info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#390: FILE: fs/devfs/base.c:3213:
+    DPRINTK (DEBUG_S_READ, "(): made devfs ptr: %p\n", sb->s_fs_info);$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#390: FILE: fs/devfs/base.c:3213:
+    DPRINTK (DEBUG_S_READ, "(): made devfs ptr: %p\n", sb->s_fs_info);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#399: FILE: fs/devfs/base.c:3245:
+    struct fs_info *fs_info = file->f_dentry->d_inode->i_sb->s_fs_info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: fs/devfs/base.c:3346:
+    struct fs_info *fs_info = inode->i_sb->s_fs_info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#417: FILE: fs/devfs/base.c:3403:
+    struct fs_info *fs_info = inode->i_sb->s_fs_info;$

CHECK:SPACING: No space is necessary after a cast
#678: FILE: fs/jffs/inode-v23.c:91:
+	sb->s_fs_info = (void *) 0;

CHECK:SPACING: No space is necessary after a cast
#687: FILE: fs/jffs/inode-v23.c:114:
+	c = (struct jffs_control *) sb->s_fs_info;

CHECK:SPACING: No space is necessary after a cast
#705: FILE: fs/jffs/inode-v23.c:164:
+	struct jffs_control *c = (struct jffs_control *) sb->s_fs_info;

CHECK:SPACING: No space is necessary after a cast
#741: FILE: fs/jffs/inode-v23.c:385:
+	struct jffs_control *c = (struct jffs_control *) sb->s_fs_info;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#804: FILE: fs/jffs/inode-v23.c:1564:
+	if (!(c = (struct jffs_control *)inode->i_sb->s_fs_info)) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: No space is necessary after a cast
#822: FILE: fs/jffs/inode-v23.c:1751:
+		c = (struct jffs_control *) inode->i_sb->s_fs_info;

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'sb' may be better as '(sb)' to avoid precedence issues
#855: FILE: fs/jffs2/os-linux.h:21:
+#define JFFS2_SB_INFO(sb) (sb->s_fs_info)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1062: FILE: fs/reiserfs/super.c:405:
+  kfree(s->s_fs_info);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1063: FILE: fs/reiserfs/super.c:406:
+  s->s_fs_info = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1072: FILE: fs/reiserfs/super.c:1167:
+    s->s_fs_info = sbi;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1081: FILE: fs/reiserfs/super.c:1338:
+    s->s_fs_info = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1290: FILE: include/linux/coda_psdev.h:29:
+    return ((struct coda_sb_info *)((sb)->s_fs_info));$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1352: FILE: include/linux/fs.h:670:
+^Ivoid ^I^I^I*s_fs_info;^I/* Filesystem private info */$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1413: FILE: include/linux/nfs_fs.h:195:
 }
+#define NFS_SB(s)		((struct nfs_server *)(s->s_fs_info))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 's' may be better as '(s)' to avoid precedence issues
#1413: FILE: include/linux/nfs_fs.h:195:
+#define NFS_SB(s)		((struct nfs_server *)(s->s_fs_info))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000425234.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 3 errors, 26 warnings, 9 checks, 1142 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000425234.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
