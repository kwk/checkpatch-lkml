WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#59: 
//  EXTRAVERSION =
    ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#97: FILE: arch/i386/kernel/process.c:521:
+			printk("WARNING: dead process %8s still has LDT? <%p/%d>\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#98: FILE: arch/i386/kernel/process.c:522:
+			printk("WARNING: dead process %8s still has LDT? <%p/%d>\n",
+					dead_task->comm,

WARNING:TYPO_SPELLING: 'warnig' may be misspelled - perhaps 'warning'?
#145: FILE: arch/i386/kernel/ldt.c:22:
+#ifdef CONFIG_SMP /* avoids "defined but not used" warnig */
                                                    ^^^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#162: FILE: arch/i386/kernel/ldt.c:39:
+	mincount = (mincount+511)&(~511);
 	                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#162: FILE: arch/i386/kernel/ldt.c:39:
+	mincount = (mincount+511)&(~511);
 	                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#163: FILE: arch/i386/kernel/ldt.c:40:
+	if (mincount*LDT_ENTRY_SIZE > PAGE_SIZE)
 	            ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#164: FILE: arch/i386/kernel/ldt.c:41:
+		newldt = vmalloc(mincount*LDT_ENTRY_SIZE);
 		                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#166: FILE: arch/i386/kernel/ldt.c:43:
+		newldt = kmalloc(mincount*LDT_ENTRY_SIZE, GFP_KERNEL);
 		                         ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#172: FILE: arch/i386/kernel/ldt.c:49:
+		memcpy(newldt, pc->ldt, oldsize*LDT_ENTRY_SIZE);
 		                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#174: FILE: arch/i386/kernel/ldt.c:51:
+	memset(newldt+oldsize*LDT_ENTRY_SIZE, 0, (mincount-oldsize)*LDT_ENTRY_SIZE);
 	             ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#174: FILE: arch/i386/kernel/ldt.c:51:
+	memset(newldt+oldsize*LDT_ENTRY_SIZE, 0, (mincount-oldsize)*LDT_ENTRY_SIZE);
 	                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#174: FILE: arch/i386/kernel/ldt.c:51:
+	memset(newldt+oldsize*LDT_ENTRY_SIZE, 0, (mincount-oldsize)*LDT_ENTRY_SIZE);
 	                                                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#174: FILE: arch/i386/kernel/ldt.c:51:
+	memset(newldt+oldsize*LDT_ENTRY_SIZE, 0, (mincount-oldsize)*LDT_ENTRY_SIZE);
 	                                                           ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#175: FILE: arch/i386/kernel/ldt.c:52:
+	wmb();

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#181: FILE: arch/i386/kernel/ldt.c:58:
+		if (current->mm->cpu_vm_mask != (1<<smp_processor_id()))
 		                                  ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#185: FILE: arch/i386/kernel/ldt.c:62:
+	wmb();

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#187: FILE: arch/i386/kernel/ldt.c:64:
+		if (oldsize*LDT_ENTRY_SIZE > PAGE_SIZE)
 		           ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#198: FILE: arch/i386/kernel/ldt.c:75:
+	int err = alloc_ldt(new, old->size, 0);
+	if (err < 0) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#199: FILE: arch/i386/kernel/ldt.c:76:
+		printk(KERN_WARNING "ldt allocation failed\n");

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#203: FILE: arch/i386/kernel/ldt.c:80:
+	memcpy(new->ldt, old->ldt, old->size*LDT_ENTRY_SIZE);
 	                                    ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#217: FILE: arch/i386/kernel/ldt.c:90:
+	struct mm_struct * old_mm;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#238: FILE: arch/i386/kernel/ldt.c:111:
+		if (mm->context.size*LDT_ENTRY_SIZE > PAGE_SIZE)
 		                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#257: FILE: arch/i386/kernel/ldt.c:127:
+	if (bytecount > LDT_ENTRY_SIZE*LDT_ENTRIES)
 	                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#258: FILE: arch/i386/kernel/ldt.c:128:
+		bytecount = LDT_ENTRY_SIZE*LDT_ENTRIES;
 		                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#262: FILE: arch/i386/kernel/ldt.c:131:
+	size = mm->context.size*LDT_ENTRY_SIZE;
 	                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#278: FILE: arch/i386/kernel/ldt.c:143:
+		clear_user(ptr+size, bytecount-size);
 		              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#278: FILE: arch/i386/kernel/ldt.c:143:
+		clear_user(ptr+size, bytecount-size);
 		                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#289: FILE: arch/i386/kernel/ldt.c:156:
+	size = 5*sizeof(struct desc_struct);
 	        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#308: FILE: arch/i386/kernel/ldt.c:193:
+		error = alloc_ldt(&current->mm->context, ldt_info.entry_number+1, 1);
 		                                                              ^

CHECK:SPACING: No space is necessary after a cast
#319: FILE: arch/i386/kernel/ldt.c:198:
+	lp = (__u32 *) ((ldt_info.entry_number << 3) + (char *) mm->context.ldt);

ERROR:POINTER_LOCATION: "foo *	bar" should be "foo *bar"
#346: FILE: include/asm-i386/mmu.h:13:
+	void *	ldt;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#357: FILE: include/asm-i386/desc.h:82:
+static inline void load_LDT (mm_context_t *pc)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#402: FILE: include/asm-i386/mmu_context.h:44:
+		if (next->context.size+prev->context.size)
 		                      ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000491614.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 2 errors, 8 warnings, 24 checks, 357 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000491614.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
