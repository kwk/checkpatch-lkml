WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#33: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#38: FILE: kernel/power/prepare_image.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#39: FILE: kernel/power/prepare_image.h:2:
+ * kernel/power/prepare_image.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#47: FILE: kernel/power/prepare_image.h:10:
+extern int suspend_prepare_image(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#48: FILE: kernel/power/prepare_image.h:11:
+extern void suspend_recalculate_image_contents(int storage_available);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#49: FILE: kernel/power/prepare_image.h:12:
+extern long real_nr_free_pages(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#61: FILE: kernel/power/prepare_image.h:24:
+extern int suspend_expected_compression_ratio(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#73: FILE: kernel/power/prepare_image.h:36:
+extern long storage_needed(int use_ecr, int ignore_extra_p1_allowance);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#74: FILE: kernel/power/prepare_image.h:37:
+extern long ram_to_suspend(void);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#79: FILE: kernel/power/prepare_image.h:42:
+static inline struct page* rodata_start_page(void)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#84: FILE: kernel/power/prepare_image.h:47:
+static inline struct page* rodata_end_page(void)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#90: FILE: kernel/power/prepare_image.h:53:
+static inline struct page* rodata_start_page(void)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#95: FILE: kernel/power/prepare_image.h:58:
+static inline struct page* rodata_end_page(void)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#104: FILE: kernel/power/prepare_image.h:67:
+static inline struct page* rotext_start_page(void)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#110: FILE: kernel/power/prepare_image.h:73:
+static inline struct page* rotext_start_page(void)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#116: FILE: kernel/power/prepare_image.h:79:
+static inline struct page* rotext_end_page(void)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#121: FILE: kernel/power/prepare_image.h:84:
+static inline struct page* nosave_start_page(void)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#126: FILE: kernel/power/prepare_image.h:89:
+static inline struct page* nosave_end_page(void)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000064659.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 3 warnings, 6 checks, 92 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000064659.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
