WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
> The fix would be to add an argument to the function pmap_create() in order to 

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#67: FILE: Makefile:4:
+EXTRAVERSION = -18.3-p3
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#117: FILE: fs/lockd/clntproc.c:132:
+		if (!(clnt = nlm_bind_host(host, resport))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#134: FILE: fs/lockd/clntproc.c:266:
+		if ((clnt = nlm_bind_host(host, req->a_resport)) == NULL)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#143: FILE: fs/lockd/clntproc.c:334:
+	if ((clnt = nlm_bind_host(host, req->a_resport)) == NULL)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#152: FILE: fs/lockd/clntproc.c:362:
+	if ((clnt = nlm_bind_host(host, req->a_resport)) == NULL)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#186: FILE: fs/lockd/host.c:196:
+			cap_raise (current->cap_effective, CAP_NET_BIND_SERVICE);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#228: FILE: fs/nfs/mount_clnt.c:85:
+	if (!(xprt = xprt_create_proto(IPPROTO_UDP, srvaddr, NULL, 1)))

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#246: FILE: fs/super.c:525:
+};
+#define UNNAMED_NMAJ (sizeof(unnamed_dev_majors)/sizeof(int))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#246: FILE: fs/super.c:525:
+#define UNNAMED_NMAJ (sizeof(unnamed_dev_majors)/sizeof(int))
                                                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#250: FILE: fs/super.c:529:
+static unsigned long unnamed_dev_in_use[(UNNAMED_NMAJ*256)/(8*sizeof(long))];
                                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#250: FILE: fs/super.c:529:
+static unsigned long unnamed_dev_in_use[(UNNAMED_NMAJ*256)/(8*sizeof(long))];
                                                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#250: FILE: fs/super.c:529:
+static unsigned long unnamed_dev_in_use[(UNNAMED_NMAJ*256)/(8*sizeof(long))];
                                                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#269: FILE: fs/super.c:547:
+	for (i = 1; i < unnamed_dev_nmaj*256; i++) {
 	                                ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#272: FILE: fs/super.c:549:
+			return MKDEV(unnamed_maj_in_use[i/256], i & 255);
 			                                 ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#293: FILE: fs/super.c:565:
+			printk("VFS: put_unnamed_dev: freeing unused device %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#294: FILE: fs/super.c:566:
+			printk("VFS: put_unnamed_dev: freeing unused device %s\n",
+			    kdevname(dev));

WARNING:CONST_STRUCT: struct block_device_operations should normally be const
#318: FILE: fs/super.c:1136:
+static struct block_device_operations majorhog_fops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:INDENTED_LABEL: labels should not be indented
#319: FILE: fs/super.c:1137:
+	open:		majorhog_open,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#322: FILE: fs/super.c:1140:
+void majorhog_init(void) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#322: FILE: fs/super.c:1140:
+void majorhog_init(void) 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#332: FILE: fs/super.c:1150:
+		if (devfs_register_blkdev(unnamed_dev_majors[i],
+		    "unnamed", &majorhog_fops) == 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#335: FILE: fs/super.c:1153:
+			printk(KERN_WARNING "Unable to hog major number %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#336: FILE: fs/super.c:1154:
+			printk(KERN_WARNING "Unable to hog major number %d\n",
+			    unnamed_dev_majors[i]);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#359: FILE: include/linux/lockd/lockd.h:148:
+struct rpc_clnt * nlm_bind_host(struct nlm_host *, int);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nlm_host *' should also have an identifier name
#359: FILE: include/linux/lockd/lockd.h:148:
+struct rpc_clnt * nlm_bind_host(struct nlm_host *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#359: FILE: include/linux/lockd/lockd.h:148:
+struct rpc_clnt * nlm_bind_host(struct nlm_host *, int);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#415: FILE: net/sunrpc/pmap_clnt.c:63:
+	if (!(pmap_clnt = pmap_create(clnt->cl_server, sap, map->pm_prot, 0)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#424: FILE: net/sunrpc/pmap_clnt.c:104:
+	if (!(pmap_clnt = pmap_create(hostname, sin, prot, 0)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#434: FILE: net/sunrpc/pmap_clnt.c:162:
+	if (!(pmap_clnt = pmap_create("localhost", &sin, IPPROTO_UDP, 1))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#450: FILE: net/sunrpc/pmap_clnt.c:193:
+	if (!(xprt = xprt_create_proto(proto, srvaddr, NULL, resport)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#471: FILE: net/sunrpc/xprt.c:437:
+		if (!(sock = xprt_create_socket(xprt->prot, &xprt->timeout,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#472: FILE: net/sunrpc/xprt.c:438:
+		if (!(sock = xprt_create_socket(xprt->prot, &xprt->timeout,
+		    xprt->resport)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#519: FILE: net/sunrpc/xprt.c:1612:
+xprt_create_proto(int proto, struct sockaddr_in *sap, struct rpc_timeout *to,
+    int use_resport)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#519: FILE: net/sunrpc/xprt.c:1612:
+    int use_resport)$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#527: FILE: net/sunrpc/xprt.c:1619:
+	if (!(sock = xprt_create_socket(proto, to, use_resport)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#531: FILE: net/sunrpc/xprt.c:1622:
+	if (!(xprt = xprt_setup(sock, proto, sap, to, use_resport)))

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000482606.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 14 errors, 10 warnings, 13 checks, 415 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000482606.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
