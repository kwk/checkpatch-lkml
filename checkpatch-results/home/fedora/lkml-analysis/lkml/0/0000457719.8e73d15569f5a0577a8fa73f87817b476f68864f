WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#45: 
# This is a BitKeeper generated patch for the following project:

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#46: 
# Project Name: Linux kernel tree

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#47: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#47: 
# This patch format is intended for GNU patch command version 2.5 or higher.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#48: 
# This patch includes the following deltas:

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#49: 
#	           ChangeSet	1.568   -> 1.569  

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#50: 
#	drivers/block/swim_iop.c	1.6     -> 1.7    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#51: 
#	drivers/block/cpqarray.c	1.33    -> 1.34   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#52: 
#	drivers/block/paride/pt.c	1.8     -> 1.9    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#53: 
#	drivers/block/paride/pg.c	1.7     -> 1.8    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#54: 
#	drivers/block/swim3.c	1.8     -> 1.9    

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#55: 
#	  drivers/block/rd.c	1.35    -> 1.36   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#56: 
#	drivers/block/DAC960.c	1.26    -> 1.27   

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#57: 
#

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#58: 
# The following is the BitKeeper ChangeSet Log

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#59: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#60: 
# 02/05/19	acme@conectiva.com.br	1.569

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#61: 
# drivers/block/*.c

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#62: 
# 

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#63: 
#   - fix copy_{to,from}_user error handling, thanks to Rusty for

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#64: 
#     pointing this out on lkml

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#65: 
# --------------------------------------------

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#66: 
#

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#68: 
--- a/drivers/block/DAC960.c	Sun May 19 22:03:33 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:CAMELCASE: Avoid CamelCase: <UserCommand>
#77: FILE: drivers/block/DAC960.c:5476:
+	if (copy_from_user(&UserCommand, UserSpaceUserCommand,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <UserSpaceUserCommand>
#77: FILE: drivers/block/DAC960.c:5476:
+	if (copy_from_user(&UserCommand, UserSpaceUserCommand,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#78: FILE: drivers/block/DAC960.c:5477:
+	if (copy_from_user(&UserCommand, UserSpaceUserCommand,
+				   sizeof(DAC960_V1_UserCommand_T))) {

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_V1_UserCommand_T>
#78: FILE: drivers/block/DAC960.c:5477:
+				   sizeof(DAC960_V1_UserCommand_T))) {

CHECK:CAMELCASE: Avoid CamelCase: <ErrorCode>
#79: FILE: drivers/block/DAC960.c:5478:
+		ErrorCode = -EFAULT;

CHECK:CAMELCASE: Avoid CamelCase: <Failure1>
#80: FILE: drivers/block/DAC960.c:5479:
+		goto Failure1;

WARNING:TABSTOP: Statements should start on a tabstop
#92: FILE: drivers/block/DAC960.c:5493:
+	    if (copy_from_user(&DCDB, UserCommand.DCDB,

WARNING:TABSTOP: Statements should start on a tabstop
#96: FILE: drivers/block/DAC960.c:5497:
+	    }

WARNING:TABSTOP: Statements should start on a tabstop
#108: FILE: drivers/block/DAC960.c:5523:
+	    if (copy_from_user(DataTransferBuffer,

CHECK:CAMELCASE: Avoid CamelCase: <DataTransferBuffer>
#108: FILE: drivers/block/DAC960.c:5523:
+	    if (copy_from_user(DataTransferBuffer,

CHECK:CAMELCASE: Avoid CamelCase: <DataTransferLength>
#110: FILE: drivers/block/DAC960.c:5525:
+			       -DataTransferLength)) {

WARNING:TABSTOP: Statements should start on a tabstop
#113: FILE: drivers/block/DAC960.c:5528:
+	    }

WARNING:TABSTOP: Statements should start on a tabstop
#124: FILE: drivers/block/DAC960.c:5576:
+	    if (copy_to_user(UserCommand.DataTransferBuffer,

WARNING:TABSTOP: Statements should start on a tabstop
#128: FILE: drivers/block/DAC960.c:5580:
+	  }

WARNING:TABSTOP: Statements should start on a tabstop
#137: FILE: drivers/block/DAC960.c:5586:
+	    if (copy_to_user(UserCommand.DCDB, &DCDB,

WARNING:TABSTOP: Statements should start on a tabstop
#141: FILE: drivers/block/DAC960.c:5590:
+	    }

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_V2_UserCommand_T>
#153: FILE: drivers/block/DAC960.c:5614:
+			   sizeof(DAC960_V2_UserCommand_T))) {

CHECK:CAMELCASE: Avoid CamelCase: <Failure2>
#155: FILE: drivers/block/DAC960.c:5616:
+		goto Failure2;

WARNING:TABSTOP: Statements should start on a tabstop
#168: FILE: drivers/block/DAC960.c:5636:
+	    if (copy_from_user(DataTransferBuffer,

WARNING:TABSTOP: Statements should start on a tabstop
#173: FILE: drivers/block/DAC960.c:5641:
+	    }

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#183: FILE: drivers/block/DAC960.c:5712:
+	if (copy_to_user(&UserSpaceUserCommand->DataTransferLength,
 				 &DataTransferResidue,

CHECK:CAMELCASE: Avoid CamelCase: <DataTransferResidue>
#190: FILE: drivers/block/DAC960.c:5713:
+				 sizeof(DataTransferResidue))) {

CHECK:CAMELCASE: Avoid CamelCase: <RequestSenseLength>
#194: FILE: drivers/block/DAC960.c:5717:
+	if (copy_to_user(&UserSpaceUserCommand->RequestSenseLength,

WARNING:TABSTOP: Statements should start on a tabstop
#204: FILE: drivers/block/DAC960.c:5724:
+	    if (copy_to_user(UserCommand.DataTransferBuffer,

WARNING:TABSTOP: Statements should start on a tabstop
#208: FILE: drivers/block/DAC960.c:5728:
+	    }

WARNING:TABSTOP: Statements should start on a tabstop
#215: FILE: drivers/block/DAC960.c:5732:
+	    if (copy_to_user(UserCommand.RequestSenseBuffer,

CHECK:CAMELCASE: Avoid CamelCase: <RequestSenseBuffer>
#215: FILE: drivers/block/DAC960.c:5732:
+	    if (copy_to_user(UserCommand.RequestSenseBuffer,

WARNING:TABSTOP: Statements should start on a tabstop
#219: FILE: drivers/block/DAC960.c:5736:
+	    }

CHECK:CAMELCASE: Avoid CamelCase: <GetHealthStatus>
#230: FILE: drivers/block/DAC960.c:5755:
+	if (copy_from_user(&GetHealthStatus, UserSpaceGetHealthStatus,

CHECK:CAMELCASE: Avoid CamelCase: <UserSpaceGetHealthStatus>
#230: FILE: drivers/block/DAC960.c:5755:
+	if (copy_from_user(&GetHealthStatus, UserSpaceGetHealthStatus,

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_V2_GetHealthStatus_T>
#231: FILE: drivers/block/DAC960.c:5756:
+			   sizeof(DAC960_V2_GetHealthStatus_T)))

CHECK:CAMELCASE: Avoid CamelCase: <HealthStatusBuffer>
#244: FILE: drivers/block/DAC960.c:5765:
+	if (copy_from_user(&HealthStatusBuffer,

CHECK:CAMELCASE: Avoid CamelCase: <DAC960_V2_HealthStatusBuffer_T>
#246: FILE: drivers/block/DAC960.c:5767:
+			   sizeof(DAC960_V2_HealthStatusBuffer_T)))

CHECK:CAMELCASE: Avoid CamelCase: <Controller>
#260: FILE: drivers/block/DAC960.c:5779:
+			 Controller->V2.HealthStatusBuffer,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#300: FILE: drivers/block/cpqarray.c:1213:
+		if (copy_from_user(p, (void*)io->sg[0].addr, io->sg[0].size)) {

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#302: FILE: drivers/block/cpqarray.c:1215:
+^I^I^Icmd_free(h, c, 0); $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#313: FILE: drivers/block/cpqarray.c:1254:
+		if (copy_from_user(p, (void*)io->sg[0].addr, io->sg[0].size)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#315: FILE: drivers/block/cpqarray.c:1256:
+                        cmd_free(h, c, 0);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: drivers/block/cpqarray.c:1256:
+                        cmd_free(h, c, 0);$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#326: FILE: drivers/block/cpqarray.c:1295:
+		if (copy_to_user((void*)io->sg[0].addr, p, io->sg[0].size)) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#367: FILE: drivers/block/paride/pg.c:689:
+		if (copy_to_user(buf+hs,PG.bufptr,copy))
 		                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#367: FILE: drivers/block/paride/pg.c:689:
+		if (copy_to_user(buf+hs,PG.bufptr,copy))
 		                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#367: FILE: drivers/block/paride/pg.c:689:
+		if (copy_to_user(buf+hs,PG.bufptr,copy))
 		                                 ^

WARNING:TABSTOP: Statements should start on a tabstop
#380: FILE: drivers/block/paride/pt.c:863:
+		    if (copy_to_user(buf + t, PT.bufptr, b)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#381: FILE: drivers/block/paride/pt.c:864:
+^I    ^I^Ipi_disconnect(PI);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#381: FILE: drivers/block/paride/pt.c:864:
+^I    ^I^Ipi_disconnect(PI);$

WARNING:TABSTOP: Statements should start on a tabstop
#383: FILE: drivers/block/paride/pt.c:866:
+		    }

WARNING:TABSTOP: Statements should start on a tabstop
#392: FILE: drivers/block/paride/pt.c:950:
+		    if (copy_from_user(PT.bufptr, buf + t, b)) {

WARNING:TABSTOP: Statements should start on a tabstop
#395: FILE: drivers/block/paride/pt.c:953:
+		    }

ERROR:CODE_INDENT: code indent should use tabs where possible
#422: FILE: drivers/block/swim3.c:843:
+^I        if (copy_to_user((void *) param, (void *)&floppy_type,$

CHECK:SPACING: No space is necessary after a cast
#422: FILE: drivers/block/swim3.c:843:
+	        if (copy_to_user((void *) param, (void *)&floppy_type,

ERROR:CODE_INDENT: code indent should use tabs where possible
#439: FILE: drivers/block/swim_iop.c:363:
+^I        if (copy_to_user((void *) param, (void *) &floppy_type,$

CHECK:SPACING: No space is necessary after a cast
#439: FILE: drivers/block/swim_iop.c:363:
+	        if (copy_to_user((void *) param, (void *) &floppy_type,

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000457719.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 11 errors, 43 warnings, 23 checks, 336 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000457719.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
