WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
D:   smp_prepare_cpus(maxcpus): probe for cpus and set up cpu_possible(cpu).

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#67: FILE: include/linux/smp.h:37:
+extern void smp_prepare_cpus(unsigned int max_cpus);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#74: FILE: include/linux/smp.h:42:
+extern int __cpu_up(unsigned int cpunum);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#81: FILE: include/linux/smp.h:47:
+extern void smp_cpus_done(unsigned int max_cpus);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#92: FILE: include/linux/smp.h:77:
+extern int register_cpu_notifier(struct notifier_block *nb);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#93: FILE: include/linux/smp.h:78:
+extern void unregister_cpu_notifier(struct notifier_block *nb);

ERROR:SPACING: space required before the open parenthesis '('
#106: FILE: include/linux/smp.h:105:
+#define unregister_cpu_notifier(nb) do { } while(0)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#136: FILE: init/main.c:115:
+__setup("nosmp", nosmp);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#144: FILE: init/main.c:123:
+__setup("maxcpus=", maxcpus);

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#164: FILE: init/main.c:339:
+	for (i = 0; i < NR_CPUS; i++) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#168: FILE: init/main.c:343:
+			printk("Bringing up %i\n", i);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#174: FILE: init/main.c:349:
+	printk("CPUS done %u\n", max_cpus);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#176: FILE: init/main.c:351:
+#if 0

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#241: FILE: kernel/cpu.c:1:
+/* CPU control.

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#256: FILE: kernel/cpu.c:16:
+static struct notifier_block *cpu_chain = NULL;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#266: FILE: kernel/cpu.c:26:
+	notifier_chain_unregister(&cpu_chain,nb);
 	                                    ^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#269: FILE: kernel/cpu.c:29:
+int __devinit cpu_up(unsigned int cpu)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#273: FILE: kernel/cpu.c:33:
+^Iif ((ret = down_interruptible(&cpucontrol)) != 0) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#273: FILE: kernel/cpu.c:33:
+	if ((ret = down_interruptible(&cpucontrol)) != 0) 

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#283: FILE: kernel/cpu.c:43:
+	if (ret != 0) goto out;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#285: FILE: kernel/cpu.c:45:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#288: FILE: kernel/cpu.c:48:
+	printk("CPU %u IS NOW UP!\n", cpu);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#311: FILE: kernel/sched.c:1759:
+#if 0 /* FIXME: Grab cpu_lock, return error on this case. --RR */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#367: FILE: kernel/sched.c:1870:
+		printk("Starting migration thread for cpu %li\n",

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#394: FILE: kernel/sched.c:1890:
+__initcall(migration_init);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#412: FILE: kernel/softirq.c:401:
+static int __devinit cpu_callback(struct notifier_block *nfb,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#432: FILE: kernel/softirq.c:410:
+			printk("ksoftirqd for %i failed\n", hotcpu);

WARNING:YIELD: Using yield() is generally wrong. See yield() kernel-doc (sched/core.c)
#437: FILE: kernel/softirq.c:415:
+			yield();

ERROR:CODE_INDENT: code indent should use tabs where possible
#439: FILE: kernel/softirq.c:417:
+ ^I}$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#439: FILE: kernel/softirq.c:417:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#439: FILE: kernel/softirq.c:417:
+ ^I}$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000446547.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 17 warnings, 7 checks, 374 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000446547.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
