WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
Binary files virgin-2.4.13/arch/i386/kernel/.mpparse.c.swp and linux-2.4.13/arch/i386/kernel/.mpparse.c.swp differ

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#43: FILE: arch/i386/kernel/mpparse.c:39:
+int mp_bus_id_to_node [MAX_MP_BUSSES];

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

ERROR:TRAILING_WHITESPACE: trailing whitespace
#59: FILE: arch/i386/kernel/mpparse.c:123:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#64: FILE: arch/i386/kernel/mpparse.c:128:
+static int mpc_record; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#82: FILE: arch/i386/kernel/mpparse.c:140:
+^I^Ilogical_apicid = (quad << 4) + $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#84: FILE: arch/i386/kernel/mpparse.c:142:
+		printk("Processor #%d %s APIC version %d (quad %d, apic %d)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#85: FILE: arch/i386/kernel/mpparse.c:143:
+		printk("Processor #%d %s APIC version %d (quad %d, apic %d)\n",
+			m->mpc_apicid,

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#86: FILE: arch/i386/kernel/mpparse.c:144:
+			mpc_family((m->mpc_cpufeature & CPU_FAMILY_MASK)>>8 ,
 			                                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#86: FILE: arch/i386/kernel/mpparse.c:144:
+			mpc_family((m->mpc_cpufeature & CPU_FAMILY_MASK)>>8 ,
 			                                                    ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#87: FILE: arch/i386/kernel/mpparse.c:145:
+				   (m->mpc_cpufeature & CPU_MODEL_MASK)>>4),
 				                                       ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#90: FILE: arch/i386/kernel/mpparse.c:148:
+		printk("Processor #%d %s APIC version %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#91: FILE: arch/i386/kernel/mpparse.c:149:
+		printk("Processor #%d %s APIC version %d\n",
+			m->mpc_apicid,

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#92: FILE: arch/i386/kernel/mpparse.c:150:
+			mpc_family((m->mpc_cpufeature & CPU_FAMILY_MASK)>>8 ,
 			                                                ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#92: FILE: arch/i386/kernel/mpparse.c:150:
+			mpc_family((m->mpc_cpufeature & CPU_FAMILY_MASK)>>8 ,
 			                                                    ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#93: FILE: arch/i386/kernel/mpparse.c:151:
+				   (m->mpc_cpufeature & CPU_MODEL_MASK)>>4),
 				                                       ^

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#115: FILE: arch/i386/kernel/mpparse.c:217:
+	if (clustered_apic_mode) {
[...]
+	} else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#116: FILE: arch/i386/kernel/mpparse.c:218:
+		phys_cpu_present_map |= (logical_apicid&0xf) << (4*quad);
 		                                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#116: FILE: arch/i386/kernel/mpparse.c:218:
+		phys_cpu_present_map |= (logical_apicid&0xf) << (4*quad);
 		                                                  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#129: FILE: arch/i386/kernel/mpparse.c:238:
+^I$

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#132: FILE: arch/i386/kernel/mpparse.c:241:
+		printk("Bus #%d is %s (node %d)\n", m->mpc_busid, str, mp_bus_id_to_node[m->mpc_busid]);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#132: FILE: arch/i386/kernel/mpparse.c:241:
+		printk("Bus #%d is %s (node %d)\n", m->mpc_busid, str, mp_bus_id_to_node[m->mpc_busid]);

CHECK:CAMELCASE: Avoid CamelCase: <Dprintk>
#134: FILE: arch/i386/kernel/mpparse.c:243:
+		Dprintk("Bus #%d is %s\n", m->mpc_busid, str);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#143: FILE: arch/i386/kernel/mpparse.c:316:
+static void __init MP_translation_info (struct mpc_config_translation *m)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#145: FILE: arch/i386/kernel/mpparse.c:318:
+^Iprintk("Translation: record %d, type %d, quad %d, global %d, local %d\n", mpc_record, m->trans_type, $

WARNING:LONG_LINE: line length of 109 exceeds 100 columns
#145: FILE: arch/i386/kernel/mpparse.c:318:
+	printk("Translation: record %d, type %d, quad %d, global %d, local %d\n", mpc_record, m->trans_type, 

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#145: FILE: arch/i386/kernel/mpparse.c:318:
+	printk("Translation: record %d, type %d, quad %d, global %d, local %d\n", mpc_record, m->trans_type, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#146: FILE: arch/i386/kernel/mpparse.c:319:
+	printk("Translation: record %d, type %d, quad %d, global %d, local %d\n", mpc_record, m->trans_type, 
+		m->trans_quad, m->trans_global, m->trans_local);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#148: FILE: arch/i386/kernel/mpparse.c:321:
+^Iif (mpc_record >= MAX_MPC_ENTRY) $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#149: FILE: arch/i386/kernel/mpparse.c:322:
+		printk("MAX_MPC_ENTRY exceeded!\n");

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#157: FILE: arch/i386/kernel/mpparse.c:330:
+static void __init smp_read_mpc_oem(struct mp_config_oemtable *oemtable, \

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#160: FILE: arch/i386/kernel/mpparse.c:333:
+	int count = sizeof (*oemtable); /* the header size */

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#161: FILE: arch/i386/kernel/mpparse.c:334:
+	unsigned char *oemptr = ((unsigned char *)oemtable)+count;
 	                                                   ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#162: FILE: arch/i386/kernel/mpparse.c:335:
+^I$

CHECK:SPACING: No space is necessary after a cast
#163: FILE: arch/i386/kernel/mpparse.c:336:
+	printk("Found an OEM MPC table at %08lx - parsing it ... \n", (u_long) oemtable);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#163: FILE: arch/i386/kernel/mpparse.c:336:
+	printk("Found an OEM MPC table at %08lx - parsing it ... \n", (u_long) oemtable);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#163: FILE: arch/i386/kernel/mpparse.c:336:
+	printk("Found an OEM MPC table at %08lx - parsing it ... \n", (u_long) oemtable);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#164: FILE: arch/i386/kernel/mpparse.c:337:
+	if (memcmp(oemtable->oem_signature,MPC_OEM_SIGNATURE,4))
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#164: FILE: arch/i386/kernel/mpparse.c:337:
+	if (memcmp(oemtable->oem_signature,MPC_OEM_SIGNATURE,4))
 	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#164: FILE: arch/i386/kernel/mpparse.c:337:
+	if (memcmp(oemtable->oem_signature,MPC_OEM_SIGNATURE,4))
 	                                                    ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#166: FILE: arch/i386/kernel/mpparse.c:339:
+		printk("SMP mpc oemtable: bad signature [%c%c%c%c]!\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#167: FILE: arch/i386/kernel/mpparse.c:340:
+		printk("SMP mpc oemtable: bad signature [%c%c%c%c]!\n",
+			oemtable->oem_signature[0],

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#173: FILE: arch/i386/kernel/mpparse.c:346:
+	if (mpf_checksum((unsigned char *)oemtable,oemtable->oem_length))
+	{

ERROR:SPACING: space required after that ',' (ctx:VxV)
#173: FILE: arch/i386/kernel/mpparse.c:346:
+	if (mpf_checksum((unsigned char *)oemtable,oemtable->oem_length))
 	                                          ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#175: FILE: arch/i386/kernel/mpparse.c:348:
+		printk("SMP oem mptable: checksum error!\n");

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#179: FILE: arch/i386/kernel/mpparse.c:352:
+		switch (*oemptr) {
+			case MP_TRANSLATION:
[...]
+			default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#182: FILE: arch/i386/kernel/mpparse.c:355:
+				struct mpc_config_translation *m=
 				                                ^

CHECK:SPACING: No space is necessary after a cast
#192: FILE: arch/i386/kernel/mpparse.c:365:
+				printk("Unrecognised OEM table entry type! - %d\n", (int) *oemptr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#192: FILE: arch/i386/kernel/mpparse.c:365:
+				printk("Unrecognised OEM table entry type! - %d\n", (int) *oemptr);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: arch/i386/kernel/mpparse.c:369:
+       }$

CHECK:SPACING: No space is necessary after a cast
#209: FILE: arch/i386/kernel/mpparse.c:419:
+		smp_read_mpc_oem((struct mp_config_oemtable *) mpc->mpc_oemptr, mpc->mpc_oemsize);

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#260: FILE: include/asm-i386/mpspec.h:155:
+struct mp_config_oemtable
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#270: FILE: include/asm-i386/mpspec.h:165:
+struct mpc_config_translation
+{

ERROR:CODE_INDENT: code indent should use tabs where possible
#271: FILE: include/asm-i386/mpspec.h:166:
+        unsigned char mpc_type;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: include/asm-i386/mpspec.h:166:
+        unsigned char mpc_type;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#272: FILE: include/asm-i386/mpspec.h:167:
+        unsigned char trans_len;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: include/asm-i386/mpspec.h:167:
+        unsigned char trans_len;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#273: FILE: include/asm-i386/mpspec.h:168:
+        unsigned char trans_type;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: include/asm-i386/mpspec.h:168:
+        unsigned char trans_type;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#274: FILE: include/asm-i386/mpspec.h:169:
+        unsigned char trans_quad;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: include/asm-i386/mpspec.h:169:
+        unsigned char trans_quad;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#275: FILE: include/asm-i386/mpspec.h:170:
+        unsigned char trans_global;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: include/asm-i386/mpspec.h:170:
+        unsigned char trans_global;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#276: FILE: include/asm-i386/mpspec.h:171:
+        unsigned char trans_local;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: include/asm-i386/mpspec.h:171:
+        unsigned char trans_local;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#277: FILE: include/asm-i386/mpspec.h:172:
+        unsigned short trans_reserved;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: include/asm-i386/mpspec.h:172:
+        unsigned short trans_reserved;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000504457.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 26 errors, 25 warnings, 15 checks, 242 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000504457.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
