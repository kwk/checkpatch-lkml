WARNING:SPACING: space prohibited between function name and open parenthesis '('
#104: FILE: ipc/shm.c:123:
+	fput (shp->shm_file);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#121: FILE: ipc/shm.c:146:
+	if(shp->shm_nattch == 0 &&

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#123: FILE: ipc/shm.c:148:
+		shm_destroy (shp);

WARNING:INDENTED_LABEL: labels should not be indented
#132: FILE: ipc/shm.c:163:
+	mmap:	shm_mmap

ERROR:SPACING: space required before the open parenthesis '('
#153: FILE: ipc/shm.c:358:
+		if(shp == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!shp"
#153: FILE: ipc/shm.c:358:
+		if(shp == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required before the open brace '{'
#180: FILE: ipc/shm.c:498:
+			if (shp->shm_nattch){

CHECK:BRACES: braces {} should be used on all arms of this statement
#180: FILE: ipc/shm.c:498:
+			if (shp->shm_nattch){
[...]
+			} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#184: FILE: ipc/shm.c:502:
+			} else

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#207: FILE: ipc/shm.c:611:
+	down (&shm_ids.sem);

ERROR:SPACING: space required before the open parenthesis '('
#208: FILE: ipc/shm.c:612:
+	if(!(shp = shm_lock(shmid)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#208: FILE: ipc/shm.c:612:
+	if(!(shp = shm_lock(shmid)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#209: FILE: ipc/shm.c:613:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: space required before the open parenthesis '('
#211: FILE: ipc/shm.c:615:
+	if(shp->shm_nattch == 0 &&

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#213: FILE: ipc/shm.c:617:
+		shm_destroy (shp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#215: FILE: ipc/shm.c:619:
+	up (&shm_ids.sem);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#264: FILE: mm/shmem.c:229:
+	entry = shmem_swp_entry (info, page->index);

WARNING:TYPO_SPELLING: 'allocted' may be misspelled - perhaps 'allocated'?
#265: FILE: mm/shmem.c:230:
+	if (!entry)	/* this had been allocted on page allocation */
 	           	                 ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#266: FILE: mm/shmem.c:231:
+		BUG();

ERROR:CODE_INDENT: code indent should use tabs where possible
#269: FILE: mm/shmem.c:234:
+                __swap_free(swap, 2);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: mm/shmem.c:234:
+                __swap_free(swap, 2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#271: FILE: mm/shmem.c:236:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: mm/shmem.c:236:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#273: FILE: mm/shmem.c:238:
+        *entry = swap;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: mm/shmem.c:238:
+        *entry = swap;$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000560604.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 9 errors, 13 warnings, 3 checks, 214 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000560604.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
