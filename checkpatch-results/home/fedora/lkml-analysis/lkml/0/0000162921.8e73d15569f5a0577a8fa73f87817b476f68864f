ERROR:TRAILING_WHITESPACE: trailing whitespace
#106: FILE: include/linux/mm.h:633:
+/* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 119 exceeds 100 columns
#119: FILE: include/linux/mm.h:713:
+extern int __handle_mm_fault(struct mm_struct *mm,struct vm_area_struct *vma, unsigned long address, int write_access);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxV)
#119: FILE: include/linux/mm.h:713:
+extern int __handle_mm_fault(struct mm_struct *mm,struct vm_area_struct *vma, unsigned long address, int write_access);
                                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#119: FILE: include/linux/mm.h:713:
+extern int __handle_mm_fault(struct mm_struct *mm,struct vm_area_struct *vma, unsigned long address, int write_access);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LONG_LINE: line length of 124 exceeds 100 columns
#121: FILE: include/linux/mm.h:715:
+static inline int handle_mm_fault(struct mm_struct *mm, struct vm_area_struct *vma, unsigned long address, int write_access)

ERROR:SPACING: spaces required around that '&&' (ctx:WxO)
#147: FILE: mm/memory.c:822:
+				if (write && !pte_dirty(pte) &&!PageDirty(page))
 				                             ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#173: FILE: mm/memory.c:965:
+				switch (__handle_mm_fault(mm, vma, start,
+							write_access)) {

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#181: FILE: mm/memory.c:973:
+					/* FALLTHRU */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#198: FILE: mm/memory.c:1264:
+			return VM_FAULT_MINOR|VM_FAULT_WRITE;
 			                     ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#238: FILE: mm/memory.c:2020:
+int __handle_mm_fault(struct mm_struct *mm, struct vm_area_struct * vma,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#239: FILE: mm/memory.c:2021:
+int __handle_mm_fault(struct mm_struct *mm, struct vm_area_struct * vma,
 		unsigned long address, int write_access)

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000162921.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 4 errors, 3 warnings, 4 checks, 134 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000162921.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
