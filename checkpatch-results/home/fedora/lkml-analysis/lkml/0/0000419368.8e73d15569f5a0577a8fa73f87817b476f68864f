WARNING:TYPO_SPELLING: 'explaination' may be misspelled - perhaps 'explanation'?
#26: 
Short explaination:=20
      ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'accomodate' may be misspelled - perhaps 'accommodate'?
#99: 
The i8259 is remapped to 0x30-0x3f to accomodate this.=20
                                      ^^^^^^^^^^

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#204: 
  This program is free software; you can redistribute it and/or modify it u=

WARNING:TYPO_SPELLING: 'WITHO' may be misspelled - perhaps 'WITH'?
#210: 
  This program is distributed in the hope that it will be useful, but WITHO=
                                                                      ^^^^^

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#222: 
#include <errno.h>

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#223: 
#include "/home/ldb/src/linux-2.5.44_multiring/include/asm-i386/unistd.h"

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#224: 
#include "/home/ldb/src/linux-2.5.44_multiring/include/asm-i386/multiring.h=

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#226: 
#include "/home/ldb/src/linux-2.5.44_multiring/include/asm-i386/ldt.h"

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#227: 
#include <signal.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#228: 
#include <stdlib.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#229: 
#include <stdio.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#230: 
#include <sched.h>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#231: 
#define CLONE_IDT	0x00800000

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#241: 
#define test_entry_int ((test_entry_int_t)test_entry_intbuf)

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#299: 
		printf("about to multiring_set %x %x\n", (xcs << 16) | ((unsigned long)te=
		                                                                       ^^

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#390: 
#define ldt_sel(num, ring) (((num) << 3) | (1 << 2) | (ring))

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#413: 
#ifdef CRASH_INT

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#416: 
#endif

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#419: 
#ifdef CRASH_SEGV

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#421: 
#endif

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#448: 
#define idt_gate(sel, addr, ring) (((sel) << 16) | ((unsigned long)addr & 0=

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#495: 
#ifdef ELEVATE

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#497: 
#endif

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#534: 
te.b);
^^

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#594: 
#ifdef DO_EXEC

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#596: 
#endif

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#598: 
#ifdef EXPLOIT_GDT

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#601: 
#endif

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#606: 
#ifdef EXPLOIT_IDT

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#609: 
#else

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#612: 
#endif=09

WARNING:TYPO_SPELLING: 'useable' may be misspelled - perhaps 'usable'?
#645: 
	ldt.useable =3D 0;
	    ^^^^^^^

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#646: 
#ifdef EXPLOIT_LDT

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#657: 
#endif

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#693: FILE: arch/i386/Config.help:166:
=20

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#729: FILE: arch/i386/kernel/cpu/common.c:245:
 }
+extern void load_idt_table_init(unsigned cpu, pgprot_t prot);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#729: FILE: arch/i386/kernel/cpu/common.c:245:
+extern void load_idt_table_init(unsigned cpu, pgprot_t prot);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#738: FILE: arch/i386/kernel/cpu/common.c:262:
+	c->f00f_bug =3D 0;
 	            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#747: FILE: arch/i386/kernel/cpu/common.c:355:
+		if(c->f00f_bug)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#748: FILE: arch/i386/kernel/cpu/common.c:356:
+			boot_cpu_data.f00f_bug =3D 1;
 			                       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#759: FILE: arch/i386/kernel/cpu/common.c:366:
+	load_idt_table_init((c =3D=3D &boot_cpu_data) ? 0 : (c - cpu_data), boot_=
 	                       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#759: FILE: arch/i386/kernel/cpu/common.c:366:
+	load_idt_table_init((c =3D=3D &boot_cpu_data) ? 0 : (c - cpu_data), boot_=
 	                          ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#759: FILE: arch/i386/kernel/cpu/common.c:366:
+	load_idt_table_init((c =3D=3D &boot_cpu_data) ? 0 : (c - cpu_data), boot_=
 	                              ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#759: FILE: arch/i386/kernel/cpu/common.c:366:
+	load_idt_table_init((c =3D=3D &boot_cpu_data) ? 0 : (c - cpu_data), boot_=
 	                                                                         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#779: FILE: arch/i386/kernel/cpu/intel.c:173:
+		static int f00f_workaround_message =3D 0;
 		                                   ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#784: FILE: arch/i386/kernel/cpu/intel.c:175:
+		if ( !f00f_workaround_message ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#784: FILE: arch/i386/kernel/cpu/intel.c:175:
+		if ( !f00f_workaround_message ) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#819: FILE: arch/i386/kernel/i8259.c:286:
+	/* ICW2: 8259A-1 IR0-7 mapped to FIRST_EXTERNAL_VECTOR-FIRST_EXTERNAL_VEC=
+	outb_p(FIRST_EXTERNAL_VECTOR + 0, 0x21);

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#830: FILE: arch/i386/kernel/i8259.c:294:
+	/* ICW2: 8259A-2 IR0-7 mapped to FIRST_EXTERNAL_VECTOR+8-FIRST_EXTERNAL_V=
+	outb_p(FIRST_EXTERNAL_VECTOR + 8, 0xA1);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#851: FILE: arch/i386/kernel/ldt.c:84:
 }
+static inline int copy_idt(mm_context_t* new, mm_context_t* old, unsigned =

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#851: FILE: arch/i386/kernel/ldt.c:84:
+static inline int copy_idt(mm_context_t* new, mm_context_t* old, unsigned =

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#851: FILE: arch/i386/kernel/ldt.c:84:
+static inline int copy_idt(mm_context_t* new, mm_context_t* old, unsigned =

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#851: FILE: arch/i386/kernel/ldt.c:84:
+static inline int copy_idt(mm_context_t* new, mm_context_t* old, unsigned =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#853: FILE: arch/i386/kernel/ldt.c:85:
+static inline int copy_idt(mm_context_t* new, mm_context_t* old, unsigned =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#854: FILE: arch/i386/kernel/ldt.c:86:
+	struct desc_struct* oldidt;

WARNING:LINE_SPACING: Missing a blank line after declarations
#855: FILE: arch/i386/kernel/ldt.c:87:
+	struct desc_struct* oldidt;
+	if(flags & (CLONE_VM | CLONE_IDT))

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#855: FILE: arch/i386/kernel/ldt.c:87:
+	if(flags & (CLONE_VM | CLONE_IDT))
+	{

ERROR:SPACING: space required before the open parenthesis '('
#855: FILE: arch/i386/kernel/ldt.c:87:
+	if(flags & (CLONE_VM | CLONE_IDT))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#857: FILE: arch/i386/kernel/ldt.c:89:
+		oldidt =3D kmap_idt(old);
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#860: FILE: arch/i386/kernel/ldt.c:92:
+		new->idt =3D old->idt;
 		         ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#862: FILE: arch/i386/kernel/ldt.c:94:
+	else
+	{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#862: FILE: arch/i386/kernel/ldt.c:94:
+	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#864: FILE: arch/i386/kernel/ldt.c:96:
+		struct desc_struct* newidt;

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#866: FILE: arch/i386/kernel/ldt.c:98:
+		union idt idtu;
+	=09

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#866: FILE: arch/i386/kernel/ldt.c:98:
+	=09
 	^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#867: FILE: arch/i386/kernel/ldt.c:99:
+		newidt =3D alloc_idt(&idtu);
 		       ^

ERROR:SPACING: space required before the open parenthesis '('
#868: FILE: arch/i386/kernel/ldt.c:100:
+		if(!newidt)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#870: FILE: arch/i386/kernel/ldt.c:102:
+		oldidt =3D kmap_read_idt(old);
 		       ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#874: FILE: arch/i386/kernel/ldt.c:106:
+		wmb();

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#875: FILE: arch/i386/kernel/ldt.c:107:
+		new->idt =3D idtu;
 		         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#893: FILE: arch/i386/kernel/ldt.c:122:
+	mm->context.idt.opaque =3D 0;
 	                       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#894: FILE: arch/i386/kernel/ldt.c:123:
+	mm->context.bad_segments =3D 0;=09
 	                         ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#894: FILE: arch/i386/kernel/ldt.c:123:
+	mm->context.bad_segments =3D 0;=09
 	                              ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#894: FILE: arch/i386/kernel/ldt.c:123:
+	mm->context.bad_segments =3D 0;=09
 	                               ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#900: FILE: arch/i386/kernel/ldt.c:125:
+	if (old_mm)
+	{

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#902: FILE: arch/i386/kernel/ldt.c:127:
+		mm->context.bad_segments =3D old_mm->context.bad_segments;
 		                         ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#903: FILE: arch/i386/kernel/ldt.c:128:
+		if(old_mm->context.size > 0 || (old_mm->context.idt.opaque && !(flags & =
CLONE_CLEAR_IDT)))
+		{

ERROR:SPACING: space required before the open parenthesis '('
#903: FILE: arch/i386/kernel/ldt.c:128:
+		if(old_mm->context.size > 0 || (old_mm->context.idt.opaque && !(flags & =

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#903: FILE: arch/i386/kernel/ldt.c:128:
+		if(old_mm->context.size > 0 || (old_mm->context.idt.opaque && !(flags & =

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#905: FILE: arch/i386/kernel/ldt.c:129:
+		if(old_mm->context.size > 0 || (old_mm->context.idt.opaque && !(flags & =
+		{

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#907: FILE: arch/i386/kernel/ldt.c:131:
+			mm->context.bad_segments =3D old_mm->context.bad_segments;		=09
 			                         ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#907: FILE: arch/i386/kernel/ldt.c:131:
+			mm->context.bad_segments =3D old_mm->context.bad_segments;		=09
 			                                                          		^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#908: FILE: arch/i386/kernel/ldt.c:132:
+			retval =3D 0;
 			       ^

ERROR:SPACING: space required before the open parenthesis '('
#909: FILE: arch/i386/kernel/ldt.c:133:
+			if(old_mm->context.size > 0)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#910: FILE: arch/i386/kernel/ldt.c:134:
+				retval =3D copy_ldt(&mm->context, &old_mm->context);
 				       ^

ERROR:SPACING: space required before the open parenthesis '('
#911: FILE: arch/i386/kernel/ldt.c:135:
+			if(!retval && old_mm->context.idt.opaque && !(flags & CLONE_CLEAR_IDT))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#912: FILE: arch/i386/kernel/ldt.c:136:
+				retval =3D copy_idt(&mm->context, &old_mm->context, flags);
 				       ^

ERROR:SPACING: space required before the open parenthesis '('
#922: FILE: arch/i386/kernel/ldt.c:159:
+	if(mm->context.idt.opaque)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#931: FILE: arch/i386/kernel/ldt.c:234:
+	error =3D LDT_handle_perm(&ldt_info, &mm->context);
 	      ^

ERROR:SPACING: space required before the open parenthesis '('
#932: FILE: arch/i386/kernel/ldt.c:235:
+	if(error)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#942: FILE: arch/i386/kernel/ldt.c:261:
+	if(mm->context.idt.opaque)
+	{

ERROR:SPACING: space required before the open parenthesis '('
#942: FILE: arch/i386/kernel/ldt.c:261:
+	if(mm->context.idt.opaque)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#944: FILE: arch/i386/kernel/ldt.c:263:
+		error =3D -EINVAL;
 		      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#944: FILE: arch/i386/kernel/ldt.c:263:
+		error =3D -EINVAL;
 		          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#945: FILE: arch/i386/kernel/ldt.c:264:
+		if(ldt_info.dpl =3D=3D 0)
 		                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#945: FILE: arch/i386/kernel/ldt.c:264:
+		if(ldt_info.dpl =3D=3D 0)
 		                   ^

ERROR:SPACING: space required before the open parenthesis '('
#945: FILE: arch/i386/kernel/ldt.c:264:
+		if(ldt_info.dpl =3D=3D 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#945: FILE: arch/i386/kernel/ldt.c:264:
+		if(ldt_info.dpl =3D=3D 0)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#947: FILE: arch/i386/kernel/ldt.c:266:
+		entry_2 =3D (entry_2 & ~(3 << 13)) | (ldt_info.dpl << 13);	=09

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#947: FILE: arch/i386/kernel/ldt.c:266:
+		entry_2 =3D (entry_2 & ~(3 << 13)) | (ldt_info.dpl << 13);	=09
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#947: FILE: arch/i386/kernel/ldt.c:266:
+		entry_2 =3D (entry_2 & ~(3 << 13)) | (ldt_info.dpl << 13);	=09
 		                                                          	^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#952: FILE: arch/i386/kernel/ldt.c:270:
+	*(lp+1) =3D 0;
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#952: FILE: arch/i386/kernel/ldt.c:270:
+	*(lp+1) =3D 0;
 	        ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#953: FILE: arch/i386/kernel/ldt.c:271:
+	wmb();

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#954: FILE: arch/i386/kernel/ldt.c:272:
+=09
 ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#956: FILE: arch/i386/kernel/ldt.c:274:
+	wmb();

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#966: FILE: arch/i386/kernel/ldt.c:307:
+int LDT_handle_over_page_offset(mm_context_t* ctx)

ERROR:SPACING: space required before the open parenthesis '('
#968: FILE: arch/i386/kernel/ldt.c:309:
+	if(ctx->idt.opaque)

ERROR:SPACING: space required before the open parenthesis '('
#970: FILE: arch/i386/kernel/ldt.c:311:
+	else if(ctx->bad_segments)

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#972: FILE: arch/i386/kernel/ldt.c:313:
+		return 0;
+	else

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#972: FILE: arch/i386/kernel/ldt.c:313:
+	else
+	{

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#974: FILE: arch/i386/kernel/ldt.c:315:
+		int ret =3D 0;
 		        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#975: FILE: arch/i386/kernel/ldt.c:316:
+		int ret =3D 0;
+		down(&ctx->sem);

ERROR:SPACING: space required before the open parenthesis '('
#976: FILE: arch/i386/kernel/ldt.c:317:
+		if(ctx->idt.opaque)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#977: FILE: arch/i386/kernel/ldt.c:318:
+			ret =3D -EPERM;
 			    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#977: FILE: arch/i386/kernel/ldt.c:318:
+			ret =3D -EPERM;
 			        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#979: FILE: arch/i386/kernel/ldt.c:320:
+			ctx->bad_segments =3D 1;
 			                  ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1006: FILE: arch/i386/kernel/multiring.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/uaccess.h> instead of <asm/uaccess.h>
#1020: FILE: arch/i386/kernel/multiring.c:15:
+#include <asm/uaccess.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#1025: FILE: arch/i386/kernel/multiring.c:20:
+#define MULTIRING_NR_VECTORS ((MULTIRING_AUTO_LAST_VECTOR - MULTIRING_AUTO=
                                                                           ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1040: FILE: arch/i386/kernel/multiring.c:33:
+static inline unsigned multiring_fix_selector(unsigned sel)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1040: FILE: arch/i386/kernel/multiring.c:33:
+static inline unsigned multiring_fix_selector(unsigned sel)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1042: FILE: arch/i386/kernel/multiring.c:35:
+	unsigned tsel =3D sel | 3;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1042: FILE: arch/i386/kernel/multiring.c:35:
+	unsigned tsel =3D sel | 3;
 	              ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1043: FILE: arch/i386/kernel/multiring.c:36:
+	unsigned tsel =3D sel | 3;
+	if(tsel =3D=3D USER_DS_RPL(3))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1043: FILE: arch/i386/kernel/multiring.c:36:
+	if(tsel =3D=3D USER_DS_RPL(3))
 	        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1043: FILE: arch/i386/kernel/multiring.c:36:
+	if(tsel =3D=3D USER_DS_RPL(3))
 	           ^

ERROR:SPACING: space required before the open parenthesis '('
#1043: FILE: arch/i386/kernel/multiring.c:36:
+	if(tsel =3D=3D USER_DS_RPL(3))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1043: FILE: arch/i386/kernel/multiring.c:36:
+	if(tsel =3D=3D USER_DS_RPL(3))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1045: FILE: arch/i386/kernel/multiring.c:38:
+	else if(tsel =3D=3D USER_CS_RPL(3))
 	             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1045: FILE: arch/i386/kernel/multiring.c:38:
+	else if(tsel =3D=3D USER_CS_RPL(3))
 	                ^

ERROR:SPACING: space required before the open parenthesis '('
#1045: FILE: arch/i386/kernel/multiring.c:38:
+	else if(tsel =3D=3D USER_CS_RPL(3))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1045: FILE: arch/i386/kernel/multiring.c:38:
+	else if(tsel =3D=3D USER_CS_RPL(3))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int*' to bare use of 'unsigned*'
#1051: FILE: arch/i386/kernel/multiring.c:44:
+static inline void multiring_fix_selector_ptr(unsigned* sel)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1051: FILE: arch/i386/kernel/multiring.c:44:
+static inline void multiring_fix_selector_ptr(unsigned* sel)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1053: FILE: arch/i386/kernel/multiring.c:46:
+	*sel =3D multiring_fix_selector(*sel);
 	     ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1056: FILE: arch/i386/kernel/multiring.c:49:
+static inline struct pt_regs* get_pt_regs(task_t* tsk)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1056: FILE: arch/i386/kernel/multiring.c:49:
+static inline struct pt_regs* get_pt_regs(task_t* tsk)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1058: FILE: arch/i386/kernel/multiring.c:51:
+	return (struct pt_regs*)tsk->thread.esp0 - 1;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1061: FILE: arch/i386/kernel/multiring.c:54:
+void multiring_init_task(task_t* tsk)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1062: FILE: arch/i386/kernel/multiring.c:55:
+{	=09
  	^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1064: FILE: arch/i386/kernel/multiring.c:57:
+		unsigned oldsel, newsel;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1065: FILE: arch/i386/kernel/multiring.c:58:
+		struct pt_regs* regs;

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1066: FILE: arch/i386/kernel/multiring.c:59:
+		struct pt_regs* regs;
+	=09

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#1066: FILE: arch/i386/kernel/multiring.c:59:
+	=09
 	^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1067: FILE: arch/i386/kernel/multiring.c:60:
+		regs =3D get_pt_regs(tsk);
 		     ^

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#1069: FILE: arch/i386/kernel/multiring.c:62:
+#define multiring_fix_loaded_selector(selname) \
+		savesegment(selname, oldsel); \
+		newsel =3D multiring_fix_selector(oldsel); \
+		if(oldsel !=3D newsel) \
+			loadsegment(selname, oldsel);

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'selname' - possible side-effects?
#1069: FILE: arch/i386/kernel/multiring.c:62:
+#define multiring_fix_loaded_selector(selname) \
+		savesegment(selname, oldsel); \
+		newsel =3D multiring_fix_selector(oldsel); \
+		if(oldsel !=3D newsel) \
+			loadsegment(selname, oldsel);

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#1069: FILE: arch/i386/kernel/multiring.c:62:
+#define multiring_fix_loaded_selector(selname) \
+		savesegment(selname, oldsel); \
+		newsel =3D multiring_fix_selector(oldsel); \
+		if(oldsel !=3D newsel) \
+			loadsegment(selname, oldsel);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1071: FILE: arch/i386/kernel/multiring.c:64:
+		newsel =3D multiring_fix_selector(oldsel); \
 		       ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#1072: FILE: arch/i386/kernel/multiring.c:65:
+		if(oldsel !=3D newsel) \
 		          ^

ERROR:SPACING: space required before the open parenthesis '('
#1072: FILE: arch/i386/kernel/multiring.c:65:
+		if(oldsel !=3D newsel) \

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1074: FILE: arch/i386/kernel/multiring.c:67:
+			loadsegment(selname, oldsel);
+	=09

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#1074: FILE: arch/i386/kernel/multiring.c:67:
+	=09
 	^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int*' to bare use of 'unsigned*'
#1075: FILE: arch/i386/kernel/multiring.c:68:
+		multiring_fix_selector_ptr((unsigned*)&regs->xds);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1075: FILE: arch/i386/kernel/multiring.c:68:
+		multiring_fix_selector_ptr((unsigned*)&regs->xds);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int*' to bare use of 'unsigned*'
#1076: FILE: arch/i386/kernel/multiring.c:69:
+		multiring_fix_selector_ptr((unsigned*)&regs->xes);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1076: FILE: arch/i386/kernel/multiring.c:69:
+		multiring_fix_selector_ptr((unsigned*)&regs->xes);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int*' to bare use of 'unsigned*'
#1077: FILE: arch/i386/kernel/multiring.c:70:
+		multiring_fix_selector_ptr((unsigned*)&regs->xcs);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1077: FILE: arch/i386/kernel/multiring.c:70:
+		multiring_fix_selector_ptr((unsigned*)&regs->xcs);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int*' to bare use of 'unsigned*'
#1078: FILE: arch/i386/kernel/multiring.c:71:
+		multiring_fix_selector_ptr((unsigned*)&regs->xss);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1078: FILE: arch/i386/kernel/multiring.c:71:
+		multiring_fix_selector_ptr((unsigned*)&regs->xss);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1079: FILE: arch/i386/kernel/multiring.c:72:
+		if(tsk !=3D current)
+		{

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#1079: FILE: arch/i386/kernel/multiring.c:72:
+		if(tsk !=3D current)
 		       ^

ERROR:SPACING: space required before the open parenthesis '('
#1079: FILE: arch/i386/kernel/multiring.c:72:
+		if(tsk !=3D current)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int*' to bare use of 'unsigned*'
#1081: FILE: arch/i386/kernel/multiring.c:74:
+			multiring_fix_selector_ptr((unsigned*)&tsk->thread.fs);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1081: FILE: arch/i386/kernel/multiring.c:74:
+			multiring_fix_selector_ptr((unsigned*)&tsk->thread.fs);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int*' to bare use of 'unsigned*'
#1082: FILE: arch/i386/kernel/multiring.c:75:
+			multiring_fix_selector_ptr((unsigned*)&tsk->thread.gs);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1082: FILE: arch/i386/kernel/multiring.c:75:
+			multiring_fix_selector_ptr((unsigned*)&tsk->thread.gs);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1084: FILE: arch/i386/kernel/multiring.c:77:
+		else
+		{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1084: FILE: arch/i386/kernel/multiring.c:77:
+		}
+		else

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1092: FILE: arch/i386/kernel/multiring.c:85:
+void load_IDT_nolock(mm_context_t* ctx, unsigned cpu)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1092: FILE: arch/i386/kernel/multiring.c:85:
+void load_IDT_nolock(mm_context_t* ctx, unsigned cpu)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1097: FILE: arch/i386/kernel/multiring.c:90:
+asmlinkage int sys_multiring(unsigned op, unsigned arg1, unsigned arg2, un=

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1097: FILE: arch/i386/kernel/multiring.c:90:
+asmlinkage int sys_multiring(unsigned op, unsigned arg1, unsigned arg2, un=

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1097: FILE: arch/i386/kernel/multiring.c:90:
+asmlinkage int sys_multiring(unsigned op, unsigned arg1, unsigned arg2, un=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#1097: FILE: arch/i386/kernel/multiring.c:90:
+asmlinkage int sys_multiring(unsigned op, unsigned arg1, unsigned arg2, un=
                                                                           ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1099: FILE: arch/i386/kernel/multiring.c:91:
+asmlinkage int sys_multiring(unsigned op, unsigned arg1, unsigned arg2, un=
+{

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1100: FILE: arch/i386/kernel/multiring.c:92:
+	mm_context_t* ctx =3D &current->mm->context;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1100: FILE: arch/i386/kernel/multiring.c:92:
+	mm_context_t* ctx =3D &current->mm->context;
 	                  ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#1100: FILE: arch/i386/kernel/multiring.c:92:
+	mm_context_t* ctx =3D &current->mm->context;
 	                      ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1102: FILE: arch/i386/kernel/multiring.c:94:
+	unsigned i;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1105: FILE: arch/i386/kernel/multiring.c:97:
+	struct desc_struct* idt;

ERROR:SPACING: space required before the open parenthesis '('
#1108: FILE: arch/i386/kernel/multiring.c:100:
+	if(!boot_cpu_data.wp_works_ok)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1109: FILE: arch/i386/kernel/multiring.c:101:
+		return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1110: FILE: arch/i386/kernel/multiring.c:102:
+		return -ENOSYS;
+	=09

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#1110: FILE: arch/i386/kernel/multiring.c:102:
+	=09
 	^

ERROR:SPACING: space required before the open parenthesis '('
#1111: FILE: arch/i386/kernel/multiring.c:103:
+	if(op > MULTIRING_LAST_OP)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1114: FILE: arch/i386/kernel/multiring.c:106:
+	switch(op)
+	{

ERROR:SPACING: space required before the open parenthesis '('
#1114: FILE: arch/i386/kernel/multiring.c:106:
+	switch(op)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1123: FILE: arch/i386/kernel/multiring.c:114:
+		unsigned ring =3D arg1;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1123: FILE: arch/i386/kernel/multiring.c:114:
+		unsigned ring =3D arg1;
 		              ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1124: FILE: arch/i386/kernel/multiring.c:115:
+		unsigned esp =3D arg2;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1124: FILE: arch/i386/kernel/multiring.c:115:
+		unsigned esp =3D arg2;
 		             ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1125: FILE: arch/i386/kernel/multiring.c:116:
+		unsigned ss =3D arg3;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1125: FILE: arch/i386/kernel/multiring.c:116:
+		unsigned ss =3D arg3;
 		            ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1126: FILE: arch/i386/kernel/multiring.c:117:
+		unsigned ss =3D arg3;
+		if(ring =3D=3D 0)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1126: FILE: arch/i386/kernel/multiring.c:117:
+		if(ring =3D=3D 0)
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1126: FILE: arch/i386/kernel/multiring.c:117:
+		if(ring =3D=3D 0)
 		           ^

ERROR:SPACING: space required before the open parenthesis '('
#1126: FILE: arch/i386/kernel/multiring.c:117:
+		if(ring =3D=3D 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1126: FILE: arch/i386/kernel/multiring.c:117:
+		if(ring =3D=3D 0)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1128: FILE: arch/i386/kernel/multiring.c:119:
+		if(ring >=3D 3 || ring !=3D (ss & 3))

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#1128: FILE: arch/i386/kernel/multiring.c:119:
+		if(ring >=3D 3 || ring !=3D (ss & 3))
 		        ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#1128: FILE: arch/i386/kernel/multiring.c:119:
+		if(ring >=3D 3 || ring !=3D (ss & 3))
 		                       ^

ERROR:SPACING: space required before the open parenthesis '('
#1128: FILE: arch/i386/kernel/multiring.c:119:
+		if(ring >=3D 3 || ring !=3D (ss & 3))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1131: FILE: arch/i386/kernel/multiring.c:122:
+		current->thread.espss12[ring - 1].esp =3D esp;
 		                                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1132: FILE: arch/i386/kernel/multiring.c:123:
+		current->thread.espss12[ring - 1].ss  =3D ss;
 		                                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1134: FILE: arch/i386/kernel/multiring.c:125:
+		cpu =3D get_cpu();
 		    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1135: FILE: arch/i386/kernel/multiring.c:126:
+		tss =3D init_tss + cpu;
 		    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1136: FILE: arch/i386/kernel/multiring.c:127:
+		tss->espss12[ring - 1].esp =3D esp;
 		                           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1137: FILE: arch/i386/kernel/multiring.c:128:
+		tss->espss12[ring - 1].ss  =3D ss;
 		                           ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#1142: FILE: arch/i386/kernel/multiring.c:133:
+=09
 ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1145: FILE: arch/i386/kernel/multiring.c:136:
+		unsigned ring =3D arg1;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1145: FILE: arch/i386/kernel/multiring.c:136:
+		unsigned ring =3D arg1;
 		              ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int*' to bare use of 'unsigned*'
#1146: FILE: arch/i386/kernel/multiring.c:137:
+		unsigned* esp =3D (unsigned*)arg2;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int*' to bare use of 'unsigned*'
#1146: FILE: arch/i386/kernel/multiring.c:137:
+		unsigned* esp =3D (unsigned*)arg2;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1146: FILE: arch/i386/kernel/multiring.c:137:
+		unsigned* esp =3D (unsigned*)arg2;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1146: FILE: arch/i386/kernel/multiring.c:137:
+		unsigned* esp =3D (unsigned*)arg2;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1146: FILE: arch/i386/kernel/multiring.c:137:
+		unsigned* esp =3D (unsigned*)arg2;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1146: FILE: arch/i386/kernel/multiring.c:137:
+		unsigned* esp =3D (unsigned*)arg2;
 		              ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int*' to bare use of 'unsigned*'
#1147: FILE: arch/i386/kernel/multiring.c:138:
+		unsigned* ss =3D (unsigned*)arg3;	=09

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int*' to bare use of 'unsigned*'
#1147: FILE: arch/i386/kernel/multiring.c:138:
+		unsigned* ss =3D (unsigned*)arg3;	=09

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1147: FILE: arch/i386/kernel/multiring.c:138:
+		unsigned* ss =3D (unsigned*)arg3;	=09

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1147: FILE: arch/i386/kernel/multiring.c:138:
+		unsigned* ss =3D (unsigned*)arg3;	=09

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1147: FILE: arch/i386/kernel/multiring.c:138:
+		unsigned* ss =3D (unsigned*)arg3;	=09

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1147: FILE: arch/i386/kernel/multiring.c:138:
+		unsigned* ss =3D (unsigned*)arg3;	=09
 		             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1147: FILE: arch/i386/kernel/multiring.c:138:
+		unsigned* ss =3D (unsigned*)arg3;	=09
 		                                 	^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1148: FILE: arch/i386/kernel/multiring.c:139:
+		unsigned* ss =3D (unsigned*)arg3;	=09
+		if(ring =3D=3D 0)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1148: FILE: arch/i386/kernel/multiring.c:139:
+		if(ring =3D=3D 0)
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1148: FILE: arch/i386/kernel/multiring.c:139:
+		if(ring =3D=3D 0)
 		           ^

ERROR:SPACING: space required before the open parenthesis '('
#1148: FILE: arch/i386/kernel/multiring.c:139:
+		if(ring =3D=3D 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1148: FILE: arch/i386/kernel/multiring.c:139:
+		if(ring =3D=3D 0)

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#1150: FILE: arch/i386/kernel/multiring.c:141:
+		if(ring >=3D 3)
 		        ^

ERROR:SPACING: space required before the open parenthesis '('
#1150: FILE: arch/i386/kernel/multiring.c:141:
+		if(ring >=3D 3)

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1152: FILE: arch/i386/kernel/multiring.c:143:
+			return -EINVAL;
+	=09

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#1152: FILE: arch/i386/kernel/multiring.c:143:
+	=09
 	^

ERROR:SPACING: space required before the open parenthesis '('
#1153: FILE: arch/i386/kernel/multiring.c:144:
+		if(put_user(current->thread.espss12[ring - 1].esp, esp)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1154: FILE: arch/i386/kernel/multiring.c:145:
+		if(put_user(current->thread.espss12[ring - 1].esp, esp)
+		   || put_user(current->thread.espss12[ring - 1].ss, ss))

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1161: FILE: arch/i386/kernel/multiring.c:152:
+		unsigned first, last;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1162: FILE: arch/i386/kernel/multiring.c:153:
+		char* ptr =3D (char*)arg3;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1162: FILE: arch/i386/kernel/multiring.c:153:
+		char* ptr =3D (char*)arg3;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1162: FILE: arch/i386/kernel/multiring.c:153:
+		char* ptr =3D (char*)arg3;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1162: FILE: arch/i386/kernel/multiring.c:153:
+		char* ptr =3D (char*)arg3;
 		          ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1163: FILE: arch/i386/kernel/multiring.c:154:
+		char* ptr =3D (char*)arg3;
+		if(arg1 <=3D arg2)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1163: FILE: arch/i386/kernel/multiring.c:154:
+		if(arg1 <=3D arg2)
+		{

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#1163: FILE: arch/i386/kernel/multiring.c:154:
+		if(arg1 <=3D arg2)
 		        ^

ERROR:SPACING: space required before the open parenthesis '('
#1163: FILE: arch/i386/kernel/multiring.c:154:
+		if(arg1 <=3D arg2)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1165: FILE: arch/i386/kernel/multiring.c:156:
+			first =3D arg1;
 			      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1166: FILE: arch/i386/kernel/multiring.c:157:
+			last =3D arg2;
 			     ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1168: FILE: arch/i386/kernel/multiring.c:159:
+		else
+		{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1168: FILE: arch/i386/kernel/multiring.c:159:
+		}
+		else

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1170: FILE: arch/i386/kernel/multiring.c:161:
+			first =3D arg2;
 			      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1171: FILE: arch/i386/kernel/multiring.c:162:
+			last =3D arg1;
 			     ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1174: FILE: arch/i386/kernel/multiring.c:165:
+		ret =3D (last - first + 1) * 8;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1174: FILE: arch/i386/kernel/multiring.c:165:
+		ret =3D (last - first + 1) * 8;
 		    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1175: FILE: arch/i386/kernel/multiring.c:166:
+		idt =3D kmap_read_idt_or_table(ctx);
 		    ^

ERROR:SPACING: space required before the open parenthesis '('
#1176: FILE: arch/i386/kernel/multiring.c:167:
+		if(copy_to_user(ptr, &idt[first], ret))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1177: FILE: arch/i386/kernel/multiring.c:168:
+			ret =3D -EFAULT;
 			    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#1177: FILE: arch/i386/kernel/multiring.c:168:
+			ret =3D -EFAULT;
 			        ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1184: FILE: arch/i386/kernel/multiring.c:175:
+		unsigned vec =3D arg1;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1184: FILE: arch/i386/kernel/multiring.c:175:
+		unsigned vec =3D arg1;
 		             ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int*' to bare use of 'unsigned*'
#1185: FILE: arch/i386/kernel/multiring.c:176:
+		unsigned* ptr =3D (unsigned*)arg2;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int*' to bare use of 'unsigned*'
#1185: FILE: arch/i386/kernel/multiring.c:176:
+		unsigned* ptr =3D (unsigned*)arg2;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1185: FILE: arch/i386/kernel/multiring.c:176:
+		unsigned* ptr =3D (unsigned*)arg2;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1185: FILE: arch/i386/kernel/multiring.c:176:
+		unsigned* ptr =3D (unsigned*)arg2;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1185: FILE: arch/i386/kernel/multiring.c:176:
+		unsigned* ptr =3D (unsigned*)arg2;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1185: FILE: arch/i386/kernel/multiring.c:176:
+		unsigned* ptr =3D (unsigned*)arg2;
 		              ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1186: FILE: arch/i386/kernel/multiring.c:177:
+		unsigned* ptr =3D (unsigned*)arg2;
+		ret =3D 0;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1186: FILE: arch/i386/kernel/multiring.c:177:
+		ret =3D 0;
 		    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1187: FILE: arch/i386/kernel/multiring.c:178:
+		idt =3D kmap_read_idt_or_table(ctx);
 		    ^

ERROR:SPACING: space required before the open parenthesis '('
#1188: FILE: arch/i386/kernel/multiring.c:179:
+		if(copy_to_user(ptr, &idt[vec], 8))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1189: FILE: arch/i386/kernel/multiring.c:180:
+			ret =3D -EFAULT;
 			    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#1189: FILE: arch/i386/kernel/multiring.c:180:
+			ret =3D -EFAULT;
 			        ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#1191: FILE: arch/i386/kernel/multiring.c:182:
+		return ret;=09
 		          ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#1191: FILE: arch/i386/kernel/multiring.c:182:
+		return ret;=09
 		           ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#1194: FILE: arch/i386/kernel/multiring.c:185:
+=09
 ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1195: FILE: arch/i386/kernel/multiring.c:186:
+	if(!current->thread.multiring_mode)
+	{

ERROR:SPACING: space required before the open parenthesis '('
#1195: FILE: arch/i386/kernel/multiring.c:186:
+	if(!current->thread.multiring_mode)

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#1197: FILE: arch/i386/kernel/multiring.c:188:
+		if(op !=3D MULTIRING_ELEVATE)
 		      ^

ERROR:SPACING: space required before the open parenthesis '('
#1197: FILE: arch/i386/kernel/multiring.c:188:
+		if(op !=3D MULTIRING_ELEVATE)

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1199: FILE: arch/i386/kernel/multiring.c:190:
+			return -ENXIO;
+	=09

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#1199: FILE: arch/i386/kernel/multiring.c:190:
+	=09
 	^

ERROR:SPACING: space required before the open parenthesis '('
#1200: FILE: arch/i386/kernel/multiring.c:191:
+		if(ctx->bad_segments)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1204: FILE: arch/i386/kernel/multiring.c:195:
+		ret =3D -EPERM;
 		    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#1204: FILE: arch/i386/kernel/multiring.c:195:
+		ret =3D -EPERM;
 		        ^

ERROR:SPACING: space required before the open parenthesis '('
#1205: FILE: arch/i386/kernel/multiring.c:196:
+		if(ctx->bad_segments)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1208: FILE: arch/i386/kernel/multiring.c:199:
+		if(!ctx->idt.opaque)
+		{

ERROR:SPACING: space required before the open parenthesis '('
#1208: FILE: arch/i386/kernel/multiring.c:199:
+		if(!ctx->idt.opaque)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1211: FILE: arch/i386/kernel/multiring.c:202:
+			union idt idtu;
+			idt =3D alloc_idt(&idtu);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1211: FILE: arch/i386/kernel/multiring.c:202:
+			idt =3D alloc_idt(&idtu);
 			    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1212: FILE: arch/i386/kernel/multiring.c:203:
+			ret =3D -ENOMEM;
 			    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#1212: FILE: arch/i386/kernel/multiring.c:203:
+			ret =3D -ENOMEM;
 			        ^

ERROR:SPACING: space required before the open parenthesis '('
#1213: FILE: arch/i386/kernel/multiring.c:204:
+			if(!idt)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1216: FILE: arch/i386/kernel/multiring.c:207:
+			idt[SYSCALL_VECTOR].b =3D (idt[SYSCALL_VECTOR].b &~ 0x6000) | (MULTIRIN=

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1216: FILE: arch/i386/kernel/multiring.c:207:
+			idt[SYSCALL_VECTOR].b =3D (idt[SYSCALL_VECTOR].b &~ 0x6000) | (MULTIRIN=
 			                      ^

CHECK:SPACING: spaces preferred around that '&' (ctx:WxO)
#1216: FILE: arch/i386/kernel/multiring.c:207:
+			idt[SYSCALL_VECTOR].b =3D (idt[SYSCALL_VECTOR].b &~ 0x6000) | (MULTIRIN=
 			                                                 ^

ERROR:SPACING: space prohibited after that '~' (ctx:OxW)
#1216: FILE: arch/i386/kernel/multiring.c:207:
+			idt[SYSCALL_VECTOR].b =3D (idt[SYSCALL_VECTOR].b &~ 0x6000) | (MULTIRIN=
 			                                                  ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#1216: FILE: arch/i386/kernel/multiring.c:207:
+			idt[SYSCALL_VECTOR].b =3D (idt[SYSCALL_VECTOR].b &~ 0x6000) | (MULTIRIN=
 			                                                                       ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#1220: FILE: arch/i386/kernel/multiring.c:210:
+			wmb();

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1221: FILE: arch/i386/kernel/multiring.c:211:
+			ctx->idt =3D idtu;
 			         ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#1222: FILE: arch/i386/kernel/multiring.c:212:
+			wmb();

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1225: FILE: arch/i386/kernel/multiring.c:215:
+			cpu =3D get_cpu();
 			    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1226: FILE: arch/i386/kernel/multiring.c:216:
+			if (current->mm->cpu_vm_mask !=3D (1 << cpu))

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#1226: FILE: arch/i386/kernel/multiring.c:216:
+			if (current->mm->cpu_vm_mask !=3D (1 << cpu))
 			                             ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1233: FILE: arch/i386/kernel/multiring.c:223:
+		cpu =3D get_cpu();
 		    ^

ERROR:SPACING: space required before the open parenthesis '('
#1234: FILE: arch/i386/kernel/multiring.c:224:
+		if(!current->thread.multiring_mode)

WARNING:INDENTED_LABEL: labels should not be indented
#1239: FILE: arch/i386/kernel/multiring.c:229:
+	  out_up:

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#1243: FILE: arch/i386/kernel/multiring.c:233:
+=09
 ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1246: FILE: arch/i386/kernel/multiring.c:236:
+		unsigned vec =3D arg1;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1246: FILE: arch/i386/kernel/multiring.c:236:
+		unsigned vec =3D arg1;
 		             ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1247: FILE: arch/i386/kernel/multiring.c:237:
+		unsigned vec =3D arg1;
+		idt =3D kmap_write_idt(ctx);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1247: FILE: arch/i386/kernel/multiring.c:237:
+		idt =3D kmap_write_idt(ctx);
 		    ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1248: FILE: arch/i386/kernel/multiring.c:238:
+		if(vec =3D=3D MULTIRING_VEC_FREE)
+		{

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1248: FILE: arch/i386/kernel/multiring.c:238:
+		if(vec =3D=3D MULTIRING_VEC_FREE)
 		       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1248: FILE: arch/i386/kernel/multiring.c:238:
+		if(vec =3D=3D MULTIRING_VEC_FREE)
 		          ^

ERROR:SPACING: space required before the open parenthesis '('
#1248: FILE: arch/i386/kernel/multiring.c:238:
+		if(vec =3D=3D MULTIRING_VEC_FREE)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1248: FILE: arch/i386/kernel/multiring.c:238:
+		if(vec =3D=3D MULTIRING_VEC_FREE)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1250: FILE: arch/i386/kernel/multiring.c:240:
+			for(i =3D 0; i < MULTIRING_NR_VECTORS; ++i)
+			{

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1250: FILE: arch/i386/kernel/multiring.c:240:
+			for(i =3D 0; i < MULTIRING_NR_VECTORS; ++i)
 			      ^

ERROR:SPACING: space required before the open parenthesis '('
#1250: FILE: arch/i386/kernel/multiring.c:240:
+			for(i =3D 0; i < MULTIRING_NR_VECTORS; ++i)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1252: FILE: arch/i386/kernel/multiring.c:242:
+				vec =3D idx2vec[i];
 				    ^

ERROR:SPACING: space required before the open parenthesis '('
#1253: FILE: arch/i386/kernel/multiring.c:243:
+				if(!idt[vec].a && !idt[vec].b)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1256: FILE: arch/i386/kernel/multiring.c:246:
+			ret =3D -ENOSPC;
 			    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#1256: FILE: arch/i386/kernel/multiring.c:246:
+			ret =3D -ENOSPC;
 			        ^

WARNING:INDENTED_LABEL: labels should not be indented
#1258: FILE: arch/i386/kernel/multiring.c:248:
+		  found_free:

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1260: FILE: arch/i386/kernel/multiring.c:250:
+		else
+		{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1260: FILE: arch/i386/kernel/multiring.c:250:
+		}
+		else

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1262: FILE: arch/i386/kernel/multiring.c:252:
+			ret =3D -EPERM;
 			    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#1262: FILE: arch/i386/kernel/multiring.c:252:
+			ret =3D -EPERM;
 			        ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1263: FILE: arch/i386/kernel/multiring.c:253:
+			if(vec2idx[vec] =3D=3D (unsigned char)~0)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1263: FILE: arch/i386/kernel/multiring.c:253:
+			if(vec2idx[vec] =3D=3D (unsigned char)~0)
 			                ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1263: FILE: arch/i386/kernel/multiring.c:253:
+			if(vec2idx[vec] =3D=3D (unsigned char)~0)
 			                   ^

ERROR:SPACING: space required before the open parenthesis '('
#1263: FILE: arch/i386/kernel/multiring.c:253:
+			if(vec2idx[vec] =3D=3D (unsigned char)~0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1263: FILE: arch/i386/kernel/multiring.c:253:
+			if(vec2idx[vec] =3D=3D (unsigned char)~0)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1267: FILE: arch/i386/kernel/multiring.c:257:
+		if(op =3D=3D MULTIRING_COPY)
+		{

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1267: FILE: arch/i386/kernel/multiring.c:257:
+		if(op =3D=3D MULTIRING_COPY)
 		      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1267: FILE: arch/i386/kernel/multiring.c:257:
+		if(op =3D=3D MULTIRING_COPY)
 		         ^

ERROR:SPACING: space required before the open parenthesis '('
#1267: FILE: arch/i386/kernel/multiring.c:257:
+		if(op =3D=3D MULTIRING_COPY)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1267: FILE: arch/i386/kernel/multiring.c:257:
+		if(op =3D=3D MULTIRING_COPY)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1269: FILE: arch/i386/kernel/multiring.c:259:
+			unsigned from =3D arg2;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1269: FILE: arch/i386/kernel/multiring.c:259:
+			unsigned from =3D arg2;
 			              ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1270: FILE: arch/i386/kernel/multiring.c:260:
+			unsigned from =3D arg2;
+			ret =3D -EPERM;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1270: FILE: arch/i386/kernel/multiring.c:260:
+			ret =3D -EPERM;
 			    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#1270: FILE: arch/i386/kernel/multiring.c:260:
+			ret =3D -EPERM;
 			        ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1271: FILE: arch/i386/kernel/multiring.c:261:
+			if(vec2idx[from] =3D=3D (unsigned char)~0)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1271: FILE: arch/i386/kernel/multiring.c:261:
+			if(vec2idx[from] =3D=3D (unsigned char)~0)
 			                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1271: FILE: arch/i386/kernel/multiring.c:261:
+			if(vec2idx[from] =3D=3D (unsigned char)~0)
 			                    ^

ERROR:SPACING: space required before the open parenthesis '('
#1271: FILE: arch/i386/kernel/multiring.c:261:
+			if(vec2idx[from] =3D=3D (unsigned char)~0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1271: FILE: arch/i386/kernel/multiring.c:261:
+			if(vec2idx[from] =3D=3D (unsigned char)~0)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1273: FILE: arch/i386/kernel/multiring.c:263:
+			gate =3D idt[from];
 			     ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1275: FILE: arch/i386/kernel/multiring.c:265:
+		else
+		{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1275: FILE: arch/i386/kernel/multiring.c:265:
+		}
+		else

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1277: FILE: arch/i386/kernel/multiring.c:267:
+			gate.a =3D arg2;
 			       ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1278: FILE: arch/i386/kernel/multiring.c:268:
+			gate.b =3D arg3;
 			       ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1279: FILE: arch/i386/kernel/multiring.c:269:
+			if(gate.b & 0x8000)
+			{

ERROR:SPACING: space required before the open parenthesis '('
#1279: FILE: arch/i386/kernel/multiring.c:269:
+			if(gate.b & 0x8000)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1281: FILE: arch/i386/kernel/multiring.c:271:
+				ret =3D -EINVAL;
 				    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#1281: FILE: arch/i386/kernel/multiring.c:271:
+				ret =3D -EINVAL;
 				        ^

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#1282: FILE: arch/i386/kernel/multiring.c:272:
+				if((gate.b & 0x10ff) || (~gate.b & 0x700) || !(gate.b & 0x6000)) /* re=

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 0)
#1282: FILE: arch/i386/kernel/multiring.c:272:
+				if((gate.b & 0x10ff) || (~gate.b & 0x700) || !(gate.b & 0x6000)) /* re=
served_is_bad || !trap_gate || dpl0 */

ERROR:SPACING: space required before the open parenthesis '('
#1282: FILE: arch/i386/kernel/multiring.c:272:
+				if((gate.b & 0x10ff) || (~gate.b & 0x700) || !(gate.b & 0x6000)) /* re=

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1284: FILE: arch/i386/kernel/multiring.c:273:
+				if((gate.b & 0x10ff) || (~gate.b & 0x700) || !(gate.b & 0x6000)) /* re=
+					goto out_put_idt;

WARNING:LONG_LINE_COMMENT: line length of 103 exceeds 100 columns
#1286: FILE: arch/i386/kernel/multiring.c:275:
+				if(!(gate.a & 0x30000) && (gate.a >> 16) && (gate.a !=3D idt_table[SYS=

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1350: FILE: arch/i386/kernel/process.c:256:
+	tsk->thread.multiring_mode =3D 0;
 	                           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1371: FILE: arch/i386/kernel/process.c:279:
+	tsk =3D current;
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1380: FILE: arch/i386/kernel/process.c:289:
+	p->thread.espss12[0] =3D tsk->thread.espss12[0];
 	                     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1381: FILE: arch/i386/kernel/process.c:290:
+	p->thread.espss12[1] =3D tsk->thread.espss12[1];
 	                     ^

WARNING:TYPO_SPELLING: 'contex' may be misspelled - perhaps 'context'?
#1396: FILE: arch/i386/kernel/process.c:308:
+	p->thread.multiring_mode =3D (tsk->thread.multiring_mode && p->mm->contex=
 	                                                                   ^^^^^^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1396: FILE: arch/i386/kernel/process.c:308:
+	p->thread.multiring_mode =3D (tsk->thread.multiring_mode && p->mm->contex=

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1396: FILE: arch/i386/kernel/process.c:308:
+	p->thread.multiring_mode =3D (tsk->thread.multiring_mode && p->mm->contex=
 	                         ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#1396: FILE: arch/i386/kernel/process.c:308:
+	p->thread.multiring_mode =3D (tsk->thread.multiring_mode && p->mm->contex=
 	                                                                         ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#1398: FILE: arch/i386/kernel/process.c:309:
+=09
 ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1415: FILE: arch/i386/kernel/process.c:333:
+		if(unlikely(current->mm->context.idt.opaque))
+		{

ERROR:SPACING: space required before the open parenthesis '('
#1415: FILE: arch/i386/kernel/process.c:333:
+		if(unlikely(current->mm->context.idt.opaque))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1417: FILE: arch/i386/kernel/process.c:335:
+			if(unlikely(info.dpl =3D=3D 0))
 			                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1417: FILE: arch/i386/kernel/process.c:335:
+			if(unlikely(info.dpl =3D=3D 0))
 			                        ^

ERROR:SPACING: space required before the open parenthesis '('
#1417: FILE: arch/i386/kernel/process.c:335:
+			if(unlikely(info.dpl =3D=3D 0))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1417: FILE: arch/i386/kernel/process.c:335:
+			if(unlikely(info.dpl =3D=3D 0))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1419: FILE: arch/i386/kernel/process.c:337:
+			desc->b =3D (desc->b & ~(3 << 13)) | (info.dpl << 13);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1419: FILE: arch/i386/kernel/process.c:337:
+			desc->b =3D (desc->b & ~(3 << 13)) | (info.dpl << 13);
 			        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1429: FILE: arch/i386/kernel/process.c:432:
+	tss->espss12[0] =3D next->espss12[0];
 	                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1430: FILE: arch/i386/kernel/process.c:433:
+	tss->espss12[1] =3D next->espss12[1];=09
 	                ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#1430: FILE: arch/i386/kernel/process.c:433:
+	tss->espss12[1] =3D next->espss12[1];=09
 	                                    ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#1430: FILE: arch/i386/kernel/process.c:433:
+	tss->espss12[1] =3D next->espss12[1];=09
 	                                     ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#1431: FILE: arch/i386/kernel/process.c:434:
+=09
 ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#1443: FILE: arch/i386/kernel/process.c:616:
+=09
 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1444: FILE: arch/i386/kernel/process.c:617:
+	idx =3D info.entry_number;
 	    ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#1445: FILE: arch/i386/kernel/process.c:618:
+=09
 ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1464: FILE: arch/i386/kernel/process.c:642:
+		if(unlikely(current->mm->context.idt.opaque))
+		{

ERROR:SPACING: space required before the open parenthesis '('
#1464: FILE: arch/i386/kernel/process.c:642:
+		if(unlikely(current->mm->context.idt.opaque))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1466: FILE: arch/i386/kernel/process.c:644:
+			if(unlikely(info.dpl =3D=3D 0))
 			                     ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1466: FILE: arch/i386/kernel/process.c:644:
+			if(unlikely(info.dpl =3D=3D 0))
 			                        ^

ERROR:SPACING: space required before the open parenthesis '('
#1466: FILE: arch/i386/kernel/process.c:644:
+			if(unlikely(info.dpl =3D=3D 0))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1466: FILE: arch/i386/kernel/process.c:644:
+			if(unlikely(info.dpl =3D=3D 0))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1468: FILE: arch/i386/kernel/process.c:646:
+			desc->b =3D (desc->b & ~(3 << 13)) | (info.dpl << 13);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1468: FILE: arch/i386/kernel/process.c:646:
+			desc->b =3D (desc->b & ~(3 << 13)) | (info.dpl << 13);
 			        ^

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1475: FILE: arch/i386/kernel/process.c:651:
+	 * We must not get preempted while modifying the TLS.
+	 */=09

ERROR:SPACING: spaces required around that '=' (ctx:CxV)
#1475: FILE: arch/i386/kernel/process.c:651:
+	 */=09
 	   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1476: FILE: arch/i386/kernel/process.c:652:
+	cpu =3D get_cpu();=09
 	    ^

ERROR:SPACING: space required after that ';' (ctx:VxO)
#1476: FILE: arch/i386/kernel/process.c:652:
+	cpu =3D get_cpu();=09
 	                 ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#1476: FILE: arch/i386/kernel/process.c:652:
+	cpu =3D get_cpu();=09
 	                  ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1493: FILE: arch/i386/kernel/process.c:705:
+	info.dpl =3D GET_DPL(desc);
 	         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1543: FILE: arch/i386/kernel/signal.c:165:
+	  regs->x##seg =3D (tmp & 3) ? tmp : (tmp | USER_RING); }

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1543: FILE: arch/i386/kernel/signal.c:165:
+	  regs->x##seg =3D (tmp & 3) ? tmp : (tmp | USER_RING); }
 	               ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#1552: FILE: arch/i386/kernel/signal.c:340:
+	else if ((regs->xss & 0xfffc) !=3D USER_DS_RPL(0) &&
 	                              ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1560: FILE: arch/i386/kernel/signal.c:353:
+	unsigned ring;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1572: FILE: arch/i386/kernel/signal.c:401:
+	ring =3D get_user_ring();
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1573: FILE: arch/i386/kernel/signal.c:402:
+	regs->xds =3D regs->xes =3D regs->xss =3D USER_DS_RPL(ring);
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1573: FILE: arch/i386/kernel/signal.c:402:
+	regs->xds =3D regs->xes =3D regs->xss =3D USER_DS_RPL(ring);
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1573: FILE: arch/i386/kernel/signal.c:402:
+	regs->xds =3D regs->xes =3D regs->xss =3D USER_DS_RPL(ring);
 	                                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1574: FILE: arch/i386/kernel/signal.c:403:
+	regs->xcs =3D USER_CS_RPL(ring);
 	          ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1583: FILE: arch/i386/kernel/signal.c:426:
+	unsigned ring;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1595: FILE: arch/i386/kernel/signal.c:477:
+	ring =3D get_user_ring();
 	     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1596: FILE: arch/i386/kernel/signal.c:478:
+	regs->xds =3D regs->xes =3D regs->xss =3D USER_DS_RPL(ring);
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1596: FILE: arch/i386/kernel/signal.c:478:
+	regs->xds =3D regs->xes =3D regs->xss =3D USER_DS_RPL(ring);
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1596: FILE: arch/i386/kernel/signal.c:478:
+	regs->xds =3D regs->xes =3D regs->xss =3D USER_DS_RPL(ring);
 	                                      ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1597: FILE: arch/i386/kernel/signal.c:479:
+	regs->xcs =3D USER_CS_RPL(ring);
 	          ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1632: FILE: arch/i386/kernel/traps.c:68:
+pte_t* idt_pte;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1642: FILE: arch/i386/kernel/traps.c:257:
+void __init load_idt_table_init(unsigned cpu, pgprot_t prot)

CHECK:CAMELCASE: Avoid CamelCase: <Xgt_desc_struct>
#1644: FILE: arch/i386/kernel/traps.c:259:
+	struct Xgt_desc_struct map_idt_descr;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#1645: FILE: arch/i386/kernel/traps.c:260:
+=09
 ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1646: FILE: arch/i386/kernel/traps.c:261:
+	if(use_highidt
+#ifdef CONFIG_X86_F00F_BUG
+	   || (pgprot_val(prot) =3D=3D __PAGE_KERNEL_RO)
+#endif	  =20
+	)
+	{

ERROR:SPACING: space required before the open parenthesis '('
#1646: FILE: arch/i386/kernel/traps.c:261:
+	if(use_highidt

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1646: FILE: arch/i386/kernel/traps.c:261:
+	if(use_highidt

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1648: FILE: arch/i386/kernel/traps.c:263:
+#ifdef CONFIG_X86_F00F_BUG
+	   || (pgprot_val(prot) =3D=3D __PAGE_KERNEL_RO)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1648: FILE: arch/i386/kernel/traps.c:263:
+	   || (pgprot_val(prot) =3D=3D __PAGE_KERNEL_RO)
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1648: FILE: arch/i386/kernel/traps.c:263:
+	   || (pgprot_val(prot) =3D=3D __PAGE_KERNEL_RO)
 	                           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1649: FILE: arch/i386/kernel/traps.c:264:
+#endif	  =20
       	  ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1652: FILE: arch/i386/kernel/traps.c:267:
+		unsigned idt_vstart;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1653: FILE: arch/i386/kernel/traps.c:268:
+		unsigned idt_vstart;
+		idt_vstart =3D __fix_to_virt(FIX_IDT_BEGIN);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1653: FILE: arch/i386/kernel/traps.c:268:
+		idt_vstart =3D __fix_to_virt(FIX_IDT_BEGIN);
 		           ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1654: FILE: arch/i386/kernel/traps.c:269:
+		idt_pte =3D pte_offset_kernel(pmd_offset(pgd_offset_k(idt_vstart), (idt_=
 		        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#1654: FILE: arch/i386/kernel/traps.c:269:
+		idt_pte =3D pte_offset_kernel(pmd_offset(pgd_offset_k(idt_vstart), (idt_=
 		                                                                        ^

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1656: FILE: arch/i386/kernel/traps.c:270:
+		idt_pte =3D pte_offset_kernel(pmd_offset(pgd_offset_k(idt_vstart), (idt_=
+	=09

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#1656: FILE: arch/i386/kernel/traps.c:270:
+	=09
 	^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1657: FILE: arch/i386/kernel/traps.c:271:
+		idt_table_pte =3D pfn_pte(__pa(idt_table) >> PAGE_SHIFT, prot);
 		              ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1659: FILE: arch/i386/kernel/traps.c:273:
+		map_idt_descr.size =3D IDT_SIZE - 1;
 		                   ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1660: FILE: arch/i386/kernel/traps.c:274:
+		map_idt_descr.address =3D __fix_to_virt(FIX_IDT_BEGIN + cpu);
 		                      ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1661: FILE: arch/i386/kernel/traps.c:275:
+		__asm__ __volatile__("lidt %0": "=3Dm" (map_idt_descr));
 		                              ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1663: FILE: arch/i386/kernel/traps.c:277:
+	}
+	else

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#1664: FILE: arch/i386/kernel/traps.c:278:
+		__asm__ __volatile__("lidt %0": "=3Dm" (idt_descr));
 		                              ^

ERROR:SPACING: space required before the open parenthesis '('
#1859: FILE: arch/i386/mm/fault.c:159:
+	if(current->thread.multiring_mode && (regs->xcs & 3))

ERROR:SPACING: spaces required around that '|=' (ctx:WxV)
#1860: FILE: arch/i386/mm/fault.c:160:
+		error_code |=3D 4;
 		           ^

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#1861: FILE: arch/i386/mm/fault.c:161:
+=09
 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1883: FILE: arch/i386/mm/fault.c:1024:
+	retval =3D init_new_context_flags(current, bprm.mm, CLONE_EXEC);
 	       ^

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#1903: FILE: include/asm-i386/desc.h:8:
+#define USER_CSDS_B(data, ring) (0x00c09200 | (((__PAGE_OFFSET - 1) >> PAG=
                                                                           ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1903: FILE: include/asm-i386/desc.h:8:
+#define USER_CSDS_B(data, ring) (0x00c09200 | (((__PAGE_OFFSET - 1) >> PAG=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#1911: FILE: include/asm-i386/desc.h:11:
+extern struct desc_struct cpu_gdt_table[NR_CPUS][GDT_ENTRIES], idt_table[I=
                                                                           ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1929: FILE: include/asm-i386/desc.h:79:
+extern int LDT_handle_over_page_offset(mm_context_t* ctx);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1929: FILE: include/asm-i386/desc.h:79:
+extern int LDT_handle_over_page_offset(mm_context_t* ctx);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1931: FILE: include/asm-i386/desc.h:81:
+static inline int LDT_handle_perm(struct user_desc* info, mm_context_t* ct=

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1931: FILE: include/asm-i386/desc.h:81:
+static inline int LDT_handle_perm(struct user_desc* info, mm_context_t* ct=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#1931: FILE: include/asm-i386/desc.h:81:
+static inline int LDT_handle_perm(struct user_desc* info, mm_context_t* ct=
                                                                           ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1933: FILE: include/asm-i386/desc.h:82:
+static inline int LDT_handle_perm(struct user_desc* info, mm_context_t* ct=
+{

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1934: FILE: include/asm-i386/desc.h:83:
+	unsigned limit;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1935: FILE: include/asm-i386/desc.h:84:
+	unsigned maxlim;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1936: FILE: include/asm-i386/desc.h:85:
+	unsigned maxlim;
+	if(info->base_addr >=3D __PAGE_OFFSET)

ERROR:SPACING: spaces required around that '>=' (ctx:WxV)
#1936: FILE: include/asm-i386/desc.h:85:
+	if(info->base_addr >=3D __PAGE_OFFSET)
 	                   ^

ERROR:SPACING: space required before the open parenthesis '('
#1936: FILE: include/asm-i386/desc.h:85:
+	if(info->base_addr >=3D __PAGE_OFFSET)

ERROR:SPACING: spaces required around that '=' (ctx:ExV)
#1938: FILE: include/asm-i386/desc.h:87:
+=09
 ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1939: FILE: include/asm-i386/desc.h:88:
+	limit =3D info->limit & 0xfffff;
 	      ^

ERROR:SPACING: space required before the open parenthesis '('
#1940: FILE: include/asm-i386/desc.h:89:
+	if(info->limit_in_pages)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1941: FILE: include/asm-i386/desc.h:90:
+		limit =3D (limit << PAGE_SHIFT) + (PAGE_SIZE - 1);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1941: FILE: include/asm-i386/desc.h:90:
+		limit =3D (limit << PAGE_SHIFT) + (PAGE_SIZE - 1);
 		      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1943: FILE: include/asm-i386/desc.h:92:
+	maxlim =3D (__PAGE_OFFSET - 1) - info->base_addr;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1943: FILE: include/asm-i386/desc.h:92:
+	maxlim =3D (__PAGE_OFFSET - 1) - info->base_addr;
 	       ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1944: FILE: include/asm-i386/desc.h:93:
+	if(limit > maxlim)
+	{

ERROR:SPACING: space required before the open parenthesis '('
#1944: FILE: include/asm-i386/desc.h:93:
+	if(limit > maxlim)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1946: FILE: include/asm-i386/desc.h:95:
+		if(maxlim <=3D 0xfffff)
+		{

ERROR:SPACING: spaces required around that '<=' (ctx:WxV)
#1946: FILE: include/asm-i386/desc.h:95:
+		if(maxlim <=3D 0xfffff)
 		          ^

ERROR:SPACING: space required before the open parenthesis '('
#1946: FILE: include/asm-i386/desc.h:95:
+		if(maxlim <=3D 0xfffff)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1948: FILE: include/asm-i386/desc.h:97:
+			info->limit =3D maxlim;
 			            ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1949: FILE: include/asm-i386/desc.h:98:
+			info->limit_in_pages =3D 0;		=09
 			                     ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1949: FILE: include/asm-i386/desc.h:98:
+			info->limit_in_pages =3D 0;		=09
 			                           		^

ERROR:SPACING: space required before the open parenthesis '('
#1951: FILE: include/asm-i386/desc.h:100:
+		else if(!(info->base_addr & ~PAGE_MASK))

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1951: FILE: include/asm-i386/desc.h:100:
+		}
+		else if(!(info->base_addr & ~PAGE_MASK))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#1952: FILE: include/asm-i386/desc.h:101:
+			info->limit =3D maxlim >> PAGE_SHIFT;
 			            ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1966: FILE: include/asm-i386/desc.h:152:
 }
+static inline unsigned get_user_ring(void)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1966: FILE: include/asm-i386/desc.h:152:
+static inline unsigned get_user_ring(void)

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#1969: FILE: include/asm-i386/desc.h:155:
+	return unlikely(current->thread.multiring_mode) ? MULTIRING_USER_RING : U=
 	                                                                         ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1992: FILE: include/asm-i386/fixmap.h:52:
+extern int __fix_idt_begin_should_have_been_optimized_away(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1993: FILE: include/asm-i386/fixmap.h:53:
+extern int __fix_idt_end_should_have_been_optimized_away(void);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2007: FILE: include/asm-i386/fixmap.h:72:
+	FIX_IDT_END =3D FIX_IDT_BEGIN + NR_CPUS - 1,
 	            ^

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#2007: FILE: include/asm-i386/fixmap.h:72:
+	FIX_IDT_END =3D FIX_IDT_BEGIN + NR_CPUS - 1,

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2010: FILE: include/asm-i386/fixmap.h:75:
+#define FIX_IDT_END __fix_idt_end_should_have_been_optimized_away()=09
                                                                    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2010: FILE: include/asm-i386/fixmap.h:75:
+#define FIX_IDT_END __fix_idt_end_should_have_been_optimized_away()=09

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2022: FILE: include/asm-i386/idt.h:1:
+/*

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#2036: FILE: include/asm-i386/idt.h:15:
+#include <asm/atomic.h>

WARNING:INCLUDE_LINUX: Use #include <linux/pgtable.h> instead of <asm/pgtable.h>
#2042: FILE: include/asm-i386/idt.h:21:
+#include <asm/pgtable.h>

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2058: FILE: include/asm-i386/idt.h:37:
+extern pte_t* idt_pte;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2059: FILE: include/asm-i386/idt.h:38:
+extern unsigned idt_prot;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2063: FILE: include/asm-i386/idt.h:42:
+static inline struct desc_struct* kmap_idt(mm_context_t* ctx)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2063: FILE: include/asm-i386/idt.h:42:
+static inline struct desc_struct* kmap_idt(mm_context_t* ctx)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2065: FILE: include/asm-i386/idt.h:44:
+	if(use_highidt)
+	{

ERROR:SPACING: space required before the open parenthesis '('
#2065: FILE: include/asm-i386/idt.h:44:
+	if(use_highidt)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2067: FILE: include/asm-i386/idt.h:46:
+		if(!cpu_has_f00f_bug)
+		{

ERROR:SPACING: space required before the open parenthesis '('
#2067: FILE: include/asm-i386/idt.h:46:
+		if(!cpu_has_f00f_bug)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2069: FILE: include/asm-i386/idt.h:48:
+			unsigned cpu =3D get_cpu();

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2069: FILE: include/asm-i386/idt.h:48:
+			unsigned cpu =3D get_cpu();
 			             ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2070: FILE: include/asm-i386/idt.h:49:
+			unsigned cpu =3D get_cpu();
+			return (struct desc_struct*)__fix_to_virt(FIX_IDT_BEGIN + cpu);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2070: FILE: include/asm-i386/idt.h:49:
+			return (struct desc_struct*)__fix_to_virt(FIX_IDT_BEGIN + cpu);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2072: FILE: include/asm-i386/idt.h:51:
+		else
+		{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#2072: FILE: include/asm-i386/idt.h:51:
+		}
+		else

ERROR:SPACING: space required after that ';' (ctx:VxO)
#2078: FILE: include/asm-i386/idt.h:57:
+	return ctx->idt.addr;=09
 	                    ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#2078: FILE: include/asm-i386/idt.h:57:
+	return ctx->idt.addr;=09
 	                     ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2081: FILE: include/asm-i386/idt.h:60:
+static inline rwlock_t* idt_lock(struct desc_struct* idt)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2081: FILE: include/asm-i386/idt.h:60:
+static inline rwlock_t* idt_lock(struct desc_struct* idt)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2083: FILE: include/asm-i386/idt.h:62:
+	return (rwlock_t*)((char*)idt + IDT_SIZE);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2083: FILE: include/asm-i386/idt.h:62:
+	return (rwlock_t*)((char*)idt + IDT_SIZE);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2087: FILE: include/asm-i386/idt.h:66:
+static inline struct desc_struct* kmap_read_idt(mm_context_t* ctx)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2087: FILE: include/asm-i386/idt.h:66:
+static inline struct desc_struct* kmap_read_idt(mm_context_t* ctx)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2089: FILE: include/asm-i386/idt.h:68:
+	struct desc_struct* idt =3D kmap_idt(ctx);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2089: FILE: include/asm-i386/idt.h:68:
+	struct desc_struct* idt =3D kmap_idt(ctx);
 	                        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2090: FILE: include/asm-i386/idt.h:69:
+	struct desc_struct* idt =3D kmap_idt(ctx);
+	read_lock(idt_lock(idt));

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2095: FILE: include/asm-i386/idt.h:74:
+static inline struct desc_struct* kmap_write_idt(mm_context_t* ctx)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2095: FILE: include/asm-i386/idt.h:74:
+static inline struct desc_struct* kmap_write_idt(mm_context_t* ctx)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2097: FILE: include/asm-i386/idt.h:76:
+	struct desc_struct* idt =3D kmap_idt(ctx);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2097: FILE: include/asm-i386/idt.h:76:
+	struct desc_struct* idt =3D kmap_idt(ctx);
 	                        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2098: FILE: include/asm-i386/idt.h:77:
+	struct desc_struct* idt =3D kmap_idt(ctx);
+	write_lock(idt_lock(idt));

ERROR:SPACING: space required after that ';' (ctx:VxO)
#2099: FILE: include/asm-i386/idt.h:78:
+	return idt;=09
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#2099: FILE: include/asm-i386/idt.h:78:
+	return idt;=09
 	           ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2102: FILE: include/asm-i386/idt.h:81:
+static inline struct desc_struct* kmap_read_idt_or_table(mm_context_t* ctx=

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2102: FILE: include/asm-i386/idt.h:81:
+static inline struct desc_struct* kmap_read_idt_or_table(mm_context_t* ctx=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#2102: FILE: include/asm-i386/idt.h:81:
+static inline struct desc_struct* kmap_read_idt_or_table(mm_context_t* ctx=
                                                                           ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2104: FILE: include/asm-i386/idt.h:82:
+static inline struct desc_struct* kmap_read_idt_or_table(mm_context_t* ctx=
+{

ERROR:SPACING: space required before the open parenthesis '('
#2105: FILE: include/asm-i386/idt.h:83:
+	if(current->thread.multiring_mode)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2111: FILE: include/asm-i386/idt.h:89:
+static inline void kunmap_idt(mm_context_t* ctx, struct desc_struct* idt)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2111: FILE: include/asm-i386/idt.h:89:
+static inline void kunmap_idt(mm_context_t* ctx, struct desc_struct* idt)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2113: FILE: include/asm-i386/idt.h:91:
+	if(use_highidt)
+	{

ERROR:SPACING: space required before the open parenthesis '('
#2113: FILE: include/asm-i386/idt.h:91:
+	if(use_highidt)

ERROR:SPACING: space required before the open parenthesis '('
#2115: FILE: include/asm-i386/idt.h:93:
+		if(!cpu_has_f00f_bug)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2122: FILE: include/asm-i386/idt.h:100:
+static inline void kunmap_read_idt(mm_context_t* ctx, struct desc_struct* =

CHECK:SPACING: spaces preferred around that '*' (ctx:VxW)
#2122: FILE: include/asm-i386/idt.h:100:
+static inline void kunmap_read_idt(mm_context_t* ctx, struct desc_struct* =
                                                                         ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2124: FILE: include/asm-i386/idt.h:101:
+static inline void kunmap_read_idt(mm_context_t* ctx, struct desc_struct* =
+{

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2129: FILE: include/asm-i386/idt.h:106:
+static inline void kunmap_write_idt(mm_context_t* ctx, struct desc_struct*=

ERROR:SPACING: spaces required around that '*=' (ctx:VxE)
#2129: FILE: include/asm-i386/idt.h:106:
+static inline void kunmap_write_idt(mm_context_t* ctx, struct desc_struct*=
                                                                          ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2136: FILE: include/asm-i386/idt.h:113:
+static inline void kunmap_read_idt_or_table(mm_context_t* ctx, struct desc=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#2136: FILE: include/asm-i386/idt.h:113:
+static inline void kunmap_read_idt_or_table(mm_context_t* ctx, struct desc=
                                                                           ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2138: FILE: include/asm-i386/idt.h:114:
+static inline void kunmap_read_idt_or_table(mm_context_t* ctx, struct desc=
+{

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#2139: FILE: include/asm-i386/idt.h:115:
+	if(idt !=3D idt_table)
 	       ^

ERROR:SPACING: space required before the open parenthesis '('
#2139: FILE: include/asm-i386/idt.h:115:
+	if(idt !=3D idt_table)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2143: FILE: include/asm-i386/idt.h:119:
+static inline void load_idt_table(unsigned cpu)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2145: FILE: include/asm-i386/idt.h:121:
+	if(use_highidt || cpu_has_f00f_bug)
+	{

ERROR:SPACING: space required before the open parenthesis '('
#2145: FILE: include/asm-i386/idt.h:121:
+	if(use_highidt || cpu_has_f00f_bug)

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#2150: FILE: include/asm-i386/idt.h:126:
+	}
+	else

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2151: FILE: include/asm-i386/idt.h:127:
+		__asm__ __volatile__("lidt %0": "=3Dm" (idt_descr));
 		                              ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2154: FILE: include/asm-i386/idt.h:130:
+static inline void change_gdt_ring(unsigned cpu, unsigned ring)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2154: FILE: include/asm-i386/idt.h:130:
+static inline void change_gdt_ring(unsigned cpu, unsigned ring)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2156: FILE: include/asm-i386/idt.h:132:
+	cpu_gdt_table[cpu][GDT_ENTRY_DEFAULT_USER_CS].b =3D USER_CSDS_B(0, ring);
 	                                                ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2157: FILE: include/asm-i386/idt.h:133:
+	cpu_gdt_table[cpu][GDT_ENTRY_DEFAULT_USER_DS].b =3D USER_CSDS_B(1, ring);
 	                                                ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2160: FILE: include/asm-i386/idt.h:136:
+extern void multiring_init_task(task_t* tsk);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2160: FILE: include/asm-i386/idt.h:136:
+extern void multiring_init_task(task_t* tsk);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2162: FILE: include/asm-i386/idt.h:138:
+static inline void load_IDT_nolock_inline(task_t* tsk, mm_context_t* ctx, =

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2162: FILE: include/asm-i386/idt.h:138:
+static inline void load_IDT_nolock_inline(task_t* tsk, mm_context_t* ctx, =

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2164: FILE: include/asm-i386/idt.h:139:
+static inline void load_IDT_nolock_inline(task_t* tsk, mm_context_t* ctx, =
+{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2165: FILE: include/asm-i386/idt.h:140:
+	if(!ctx->idt.opaque)
+	{

ERROR:SPACING: space required before the open parenthesis '('
#2165: FILE: include/asm-i386/idt.h:140:
+	if(!ctx->idt.opaque)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2173: FILE: include/asm-i386/idt.h:148:
+	if(use_highidt || cpu_has_f00f_bug)
+	{

ERROR:SPACING: space required before the open parenthesis '('
#2173: FILE: include/asm-i386/idt.h:148:
+	if(use_highidt || cpu_has_f00f_bug)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2179: FILE: include/asm-i386/idt.h:154:
+	else
+	{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#2179: FILE: include/asm-i386/idt.h:154:
+	}
+	else

WARNING:LINE_SPACING: Missing a blank line after declarations
#2182: FILE: include/asm-i386/idt.h:157:
+		struct Xgt_desc_struct map_idt_descr;
+		map_idt_descr.size =3D IDT_SIZE - 1;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2182: FILE: include/asm-i386/idt.h:157:
+		map_idt_descr.size =3D IDT_SIZE - 1;
 		                   ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2183: FILE: include/asm-i386/idt.h:158:
+		map_idt_descr.address =3D (unsigned long)ctx->idt.addr;

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2183: FILE: include/asm-i386/idt.h:158:
+		map_idt_descr.address =3D (unsigned long)ctx->idt.addr;
 		                      ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#2184: FILE: include/asm-i386/idt.h:159:
+		__asm__ __volatile__("lidt %0": "=3Dm" (map_idt_descr));
 		                              ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2186: FILE: include/asm-i386/idt.h:161:
+	if(unlikely(!tsk->thread.multiring_mode))
+	{

ERROR:SPACING: space required before the open parenthesis '('
#2186: FILE: include/asm-i386/idt.h:161:
+	if(unlikely(!tsk->thread.multiring_mode))

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2189: FILE: include/asm-i386/idt.h:164:
+		tsk->thread.multiring_mode =3D 1;
 		                           ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2193: FILE: include/asm-i386/idt.h:168:
+static inline void load_IDT_inline(task_t* tsk, mm_context_t* ctx)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2193: FILE: include/asm-i386/idt.h:168:
+static inline void load_IDT_inline(task_t* tsk, mm_context_t* ctx)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2195: FILE: include/asm-i386/idt.h:170:
+	unsigned cpu =3D get_cpu();

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2195: FILE: include/asm-i386/idt.h:170:
+	unsigned cpu =3D get_cpu();
 	             ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2196: FILE: include/asm-i386/idt.h:171:
+	unsigned cpu =3D get_cpu();
+	load_IDT_nolock_inline(tsk, ctx, cpu);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2200: FILE: include/asm-i386/idt.h:175:
+extern void load_IDT_nolock(mm_context_t* ctx, unsigned cpu);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2200: FILE: include/asm-i386/idt.h:175:
+extern void load_IDT_nolock(mm_context_t* ctx, unsigned cpu);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2200: FILE: include/asm-i386/idt.h:175:
+extern void load_IDT_nolock(mm_context_t* ctx, unsigned cpu);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2202: FILE: include/asm-i386/idt.h:177:
+static inline void load_IDT(mm_context_t* ctx)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2204: FILE: include/asm-i386/idt.h:179:
+	unsigned cpu =3D get_cpu();

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2204: FILE: include/asm-i386/idt.h:179:
+	unsigned cpu =3D get_cpu();
 	             ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2205: FILE: include/asm-i386/idt.h:180:
+	unsigned cpu =3D get_cpu();
+	load_IDT_nolock(ctx, cpu);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2209: FILE: include/asm-i386/idt.h:184:
+static inline atomic_t* idt_refcnt(struct desc_struct* idt)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2209: FILE: include/asm-i386/idt.h:184:
+static inline atomic_t* idt_refcnt(struct desc_struct* idt)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2211: FILE: include/asm-i386/idt.h:186:
+	return (atomic_t*)((char*)idt + IDT_SIZE + sizeof(spinlock_t));

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2211: FILE: include/asm-i386/idt.h:186:
+	return (atomic_t*)((char*)idt + IDT_SIZE + sizeof(spinlock_t));

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2214: FILE: include/asm-i386/idt.h:189:
+static inline struct desc_struct* __alloc_idt(union idt* idtu)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2214: FILE: include/asm-i386/idt.h:189:
+static inline struct desc_struct* __alloc_idt(union idt* idtu)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2216: FILE: include/asm-i386/idt.h:191:
+	if(use_highidt)
+	{

ERROR:SPACING: space required before the open parenthesis '('
#2216: FILE: include/asm-i386/idt.h:191:
+	if(use_highidt)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2219: FILE: include/asm-i386/idt.h:194:
+		idtu->page =3D alloc_page(GFP_KERNEL | __GFP_HIGHMEM);
 		           ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2220: FILE: include/asm-i386/idt.h:195:
+		return (struct desc_struct*)kmap(idtu->page);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2222: FILE: include/asm-i386/idt.h:197:
+	else
+	{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#2222: FILE: include/asm-i386/idt.h:197:
+	}
+	else

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#2225: FILE: include/asm-i386/idt.h:200:
+		return idtu->addr =3D (struct desc_struct*)__get_free_page(GFP_KERNEL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2225: FILE: include/asm-i386/idt.h:200:
+		return idtu->addr =3D (struct desc_struct*)__get_free_page(GFP_KERNEL);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2225: FILE: include/asm-i386/idt.h:200:
+		return idtu->addr =3D (struct desc_struct*)__get_free_page(GFP_KERNEL);
 		                  ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2229: FILE: include/asm-i386/idt.h:204:
+static inline struct desc_struct* alloc_idt(union idt* idtu)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2229: FILE: include/asm-i386/idt.h:204:
+static inline struct desc_struct* alloc_idt(union idt* idtu)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2231: FILE: include/asm-i386/idt.h:206:
+	struct desc_struct* idt =3D __alloc_idt(idtu);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2231: FILE: include/asm-i386/idt.h:206:
+	struct desc_struct* idt =3D __alloc_idt(idtu);
 	                        ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2232: FILE: include/asm-i386/idt.h:207:
+	struct desc_struct* idt =3D __alloc_idt(idtu);
+	if(idt)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2232: FILE: include/asm-i386/idt.h:207:
+	if(idt)
+	{

ERROR:SPACING: space required before the open parenthesis '('
#2232: FILE: include/asm-i386/idt.h:207:
+	if(idt)

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2234: FILE: include/asm-i386/idt.h:209:
+		*idt_lock(idt) =3D RW_LOCK_UNLOCKED;
 		               ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2240: FILE: include/asm-i386/idt.h:215:
+static inline void kunmap_new_idt(union idt* idtu, struct desc_struct* idt=

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2240: FILE: include/asm-i386/idt.h:215:
+static inline void kunmap_new_idt(union idt* idtu, struct desc_struct* idt=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#2240: FILE: include/asm-i386/idt.h:215:
+static inline void kunmap_new_idt(union idt* idtu, struct desc_struct* idt=
                                                                           ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2242: FILE: include/asm-i386/idt.h:216:
+static inline void kunmap_new_idt(union idt* idtu, struct desc_struct* idt=
+{

ERROR:SPACING: space required before the open parenthesis '('
#2243: FILE: include/asm-i386/idt.h:217:
+	if(use_highidt)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2247: FILE: include/asm-i386/idt.h:221:
+static inline void __free_idt(mm_context_t* ctx)

ERROR:SPACING: space required before the open parenthesis '('
#2249: FILE: include/asm-i386/idt.h:223:
+	if(use_highidt)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2255: FILE: include/asm-i386/idt.h:229:
+static inline void free_idt(mm_context_t* ctx)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2257: FILE: include/asm-i386/idt.h:231:
+	struct desc_struct* idt =3D kmap_idt(ctx);

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2257: FILE: include/asm-i386/idt.h:231:
+	struct desc_struct* idt =3D kmap_idt(ctx);
 	                        ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2258: FILE: include/asm-i386/idt.h:232:
+	int free =3D atomic_dec_and_test(idt_refcnt(idt));
 	         ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2259: FILE: include/asm-i386/idt.h:233:
+	int free =3D atomic_dec_and_test(idt_refcnt(idt));
+	kunmap_idt(ctx, idt);

ERROR:SPACING: space required before the open parenthesis '('
#2260: FILE: include/asm-i386/idt.h:234:
+	if(free)

ERROR:SPACING: space required after that ';' (ctx:VxO)
#2276: FILE: include/asm-i386/ldt.h:27:
+	unsigned int  dpl:2;=20
 	                   ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#2276: FILE: include/asm-i386/ldt.h:27:
+	unsigned int  dpl:2;=20
 	                    ^

ERROR:SPACING: spaces required around that '!=' (ctx:WxV)
#2310: FILE: include/asm-i386/mmu_context.h:52:
+		if (unlikely(prev->context.idt.opaque !=3D next->context.idt.opaque))
 		                                      ^

ERROR:OPEN_BRACE: open brace '{' following union go on the same line
#2326: FILE: include/asm-i386/mmu.h:12:
+union idt
+{

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2327: FILE: include/asm-i386/mmu.h:13:
+	struct desc_struct* addr;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2328: FILE: include/asm-i386/mmu.h:14:
+	struct page* page;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2348: FILE: include/asm-i386/multiring.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#2349: FILE: include/asm-i386/multiring.h:2:
+ * linux/include/asm-i386/multiring.h: header for multiple privilege rings=

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#2377: FILE: include/asm-i386/multiring.h:30:
+struct multiring_gate
+{

ERROR:SPACING: space required after that ';' (ctx:VxO)
#2379: FILE: include/asm-i386/multiring.h:32:
+	unsigned long b;=09
 	               ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#2379: FILE: include/asm-i386/multiring.h:32:
+	unsigned long b;=09
 	                ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2394: FILE: include/asm-i386/multiring.h:47:
+_syscall1(int, multiring0, unsigned, op);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2395: FILE: include/asm-i386/multiring.h:48:
+_syscall2(int, multiring1, unsigned, op, unsigned long, arg1);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2396: FILE: include/asm-i386/multiring.h:49:
+_syscall3(int, multiring2, unsigned, op, unsigned long, arg1, unsigned lon=

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2396: FILE: include/asm-i386/multiring.h:49:
+_syscall3(int, multiring2, unsigned, op, unsigned long, arg1, unsigned lon=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#2396: FILE: include/asm-i386/multiring.h:49:
+_syscall3(int, multiring2, unsigned, op, unsigned long, arg1, unsigned lon=
                                                                           ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2398: FILE: include/asm-i386/multiring.h:50:
+_syscall4(int, multiring3, unsigned, op, unsigned long, arg1, unsigned lon=

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2398: FILE: include/asm-i386/multiring.h:50:
+_syscall4(int, multiring3, unsigned, op, unsigned long, arg1, unsigned lon=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#2398: FILE: include/asm-i386/multiring.h:50:
+_syscall4(int, multiring3, unsigned, op, unsigned long, arg1, unsigned lon=
                                                                           ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2404: FILE: include/asm-i386/multiring.h:55:
+/*
+  Check whether the program is in multiring mode.

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - int multiring_check() should probably be int multiring_check(void)
#2411: FILE: include/asm-i386/multiring.h:62:
+static inline int multiring_check()

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2417: FILE: include/asm-i386/multiring.h:68:
+/* Enters multiring mode.
+   This fails if you have previously set up a "bad segment" with modify_ld=

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - int multiring_elevate() should probably be int multiring_elevate(void)
#2435: FILE: include/asm-i386/multiring.h:80:
+static inline int multiring_elevate()

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2441: FILE: include/asm-i386/multiring.h:86:
+/*
+  Return TSS ESP/SS value for a privilege ring

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2448: FILE: include/asm-i386/multiring.h:93:
+static inline int multiring_get_espss(unsigned ring, unsigned* esp, unsign=

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int*' to bare use of 'unsigned*'
#2448: FILE: include/asm-i386/multiring.h:93:
+static inline int multiring_get_espss(unsigned ring, unsigned* esp, unsign=

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2448: FILE: include/asm-i386/multiring.h:93:
+static inline int multiring_get_espss(unsigned ring, unsigned* esp, unsign=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#2448: FILE: include/asm-i386/multiring.h:93:
+static inline int multiring_get_espss(unsigned ring, unsigned* esp, unsign=
                                                                           ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2450: FILE: include/asm-i386/multiring.h:94:
+static inline int multiring_get_espss(unsigned ring, unsigned* esp, unsign=
+{

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#2451: FILE: include/asm-i386/multiring.h:95:
+	return multiring3(MULTIRING_GET_ESPSS, ring, (unsigned long)esp, (unsigne=
 	                                                                         ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2456: FILE: include/asm-i386/multiring.h:99:
+/*
+  Set TSS ESP/SS value for a privilege ring

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2465: FILE: include/asm-i386/multiring.h:107:
+static inline int multiring_set_espss(unsigned ring, unsigned esp, unsigne=

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2465: FILE: include/asm-i386/multiring.h:107:
+static inline int multiring_set_espss(unsigned ring, unsigned esp, unsigne=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#2465: FILE: include/asm-i386/multiring.h:107:
+static inline int multiring_set_espss(unsigned ring, unsigned esp, unsigne=
                                                                           ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2467: FILE: include/asm-i386/multiring.h:108:
+static inline int multiring_set_espss(unsigned ring, unsigned esp, unsigne=
+{

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2472: FILE: include/asm-i386/multiring.h:113:
+/*
+  Get a single interrupt gate.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2478: FILE: include/asm-i386/multiring.h:119:
+static inline int multiring_get(unsigned vec, struct multiring_gate* gate)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#2478: FILE: include/asm-i386/multiring.h:119:
+static inline int multiring_get(unsigned vec, struct multiring_gate* gate)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2484: FILE: include/asm-i386/multiring.h:125:
+/*
+  Get a range of interrupt gates.

WARNING:TYPO_SPELLING: 'numer' may be misspelled - perhaps 'number'?
#2488: FILE: include/asm-i386/multiring.h:129:
+  last: last vector numer
                     ^^^^^

WARNING:TYPO_SPELLING: 'struc' may be misspelled - perhaps 'struct'?
#2492: FILE: include/asm-i386/multiring.h:132:
+static inline int multiring_get_range(unsigned first, unsigned last, struc=
                                                                      ^^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2492: FILE: include/asm-i386/multiring.h:132:
+static inline int multiring_get_range(unsigned first, unsigned last, struc=

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2492: FILE: include/asm-i386/multiring.h:132:
+static inline int multiring_get_range(unsigned first, unsigned last, struc=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#2492: FILE: include/asm-i386/multiring.h:132:
+static inline int multiring_get_range(unsigned first, unsigned last, struc=
                                                                           ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2494: FILE: include/asm-i386/multiring.h:133:
+static inline int multiring_get_range(unsigned first, unsigned last, struc=
+{

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#2495: FILE: include/asm-i386/multiring.h:134:
+	return multiring3(MULTIRING_GET_RANGE, first, last, (unsigned long)gates)=
 	                                                                         ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2500: FILE: include/asm-i386/multiring.h:138:
+/*
+  Set an interrupt gate.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2520: FILE: include/asm-i386/multiring.h:154:
+static inline int multiring_set(unsigned vec, unsigned long a, unsigned lo=

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2520: FILE: include/asm-i386/multiring.h:154:
+static inline int multiring_set(unsigned vec, unsigned long a, unsigned lo=

ERROR:SPACING: spaces required around that '=' (ctx:VxE)
#2520: FILE: include/asm-i386/multiring.h:154:
+static inline int multiring_set(unsigned vec, unsigned long a, unsigned lo=
                                                                           ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#2522: FILE: include/asm-i386/multiring.h:155:
+static inline int multiring_set(unsigned vec, unsigned long a, unsigned lo=
+{

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2533: FILE: include/asm-i386/multiring.h:166:
+static inline int multiring_free(unsigned vec)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2539: FILE: include/asm-i386/multiring.h:172:
+/*
+  Set an interrupt gate based on another one

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2555: FILE: include/asm-i386/multiring.h:186:
+static inline int multiring_copy(unsigned vec, unsigned from)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2555: FILE: include/asm-i386/multiring.h:186:
+static inline int multiring_copy(unsigned vec, unsigned from)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2561: FILE: include/asm-i386/multiring.h:192:
+static inline int multiring_copy_free(unsigned from)

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#2580: FILE: include/asm-i386/processor.h:335:
+struct espss
+{

ERROR:SPACING: space required after that ';' (ctx:VxO)
#2606: FILE: include/asm-i386/processor.h:378:
+	unsigned char	multiring_mode;=09
 	             	              ^

ERROR:SPACING: spaces required around that '=' (ctx:OxV)
#2606: FILE: include/asm-i386/processor.h:378:
+	unsigned char	multiring_mode;=09
 	             	               ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2616: FILE: include/asm-i386/processor.h:397:
+^I0, 0, 0, 0, 0, ^I^I^I^I^I^I\$

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2637: FILE: include/asm-i386/processor.h:424:
+	regs->xds =3D USER_DS_RPL(USER_RING);					\
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2638: FILE: include/asm-i386/processor.h:425:
+	regs->xes =3D USER_DS_RPL(USER_RING);					\
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2639: FILE: include/asm-i386/processor.h:426:
+	regs->xss =3D USER_DS_RPL(USER_RING);					\
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2640: FILE: include/asm-i386/processor.h:427:
+	regs->xcs =3D USER_CS_RPL(USER_RING);					\
 	          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2695: FILE: include/asm-i386/system.h:99:
+#define savesegment(seg,value) \
                        ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2695: FILE: include/asm-i386/system.h:99:
+#define savesegment(seg,value) \
+	asm volatile("movl %%" #seg ",%0":"=3Dm" (*(int *)&(value)))

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#2696: FILE: include/asm-i386/system.h:100:
+	asm volatile("movl %%" #seg ",%0":"=3Dm" (*(int *)&(value)))
 	                                 ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2729: FILE: include/asm-i386/unistd.h:56:
+#define CLONE_IDT	0x00800000	/* set if IDT is shared between processes (no=
+#define CLONE_CLEAR_IDT	0x01000000	/* set to clear the IDT */

ERROR:SPACING: spaces required around that '=' (ctx:WxV)
#2752: FILE: include/asm-i386/unistd.h:441:
+#endif	=09
       	^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000419368.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 474 errors, 175 warnings, 37 checks, 1899 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000419368.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
