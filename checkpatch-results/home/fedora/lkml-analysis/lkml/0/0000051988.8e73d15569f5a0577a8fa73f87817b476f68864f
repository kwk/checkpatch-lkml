WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#110: FILE: arch/um/os-Linux/sys-i386/signal.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: No space is necessary after a cast
#121: FILE: arch/um/os-Linux/sys-i386/signal.c:12:
+	struct sigcontext *sc = (struct sigcontext *) (&sig + 1);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#130: FILE: arch/um/os-Linux/sys-x86_64/signal.c:1:
+/*

WARNING:LINE_SPACING: Missing a blank line after declarations
#142: FILE: arch/um/os-Linux/sys-x86_64/signal.c:13:
+	struct ucontext *uc;
+	asm("movq %%rdx, %0" : "=r" (uc));

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#144: FILE: arch/um/os-Linux/sys-x86_64/signal.c:15:
+	(*handlers[sig])(sig, (struct sigcontext *) &uc->uc_mcontext);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#199: FILE: arch/um/os-Linux/signal.c:119:
+extern void hard_handler(int sig);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: space required before the open parenthesis '('
#215: FILE: arch/um/os-Linux/signal.c:133:
+	while((mask = va_arg(ap, int)) != -1)

ERROR:SPACING: space required before the open parenthesis '('
#232: FILE: arch/um/os-Linux/process.c:249:
+	if(usr1_handler){

ERROR:SPACING: space required before the open parenthesis '('
#239: FILE: arch/um/os-Linux/process.c:256:
+		if(sigaction(SIGUSR1, &sa, NULL) < 0)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'init_new_thread_stack', this function's name, in a string
#240: FILE: arch/um/os-Linux/process.c:257:
+			panic("init_new_thread_stack - sigaction failed - "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#241: FILE: arch/um/os-Linux/process.c:258:
+			panic("init_new_thread_stack - sigaction failed - "
+			      "errno = %d\n", errno);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: space required before the open brace '{'
#304: FILE: arch/um/os-Linux/main.c:89:
+	if(sigaction(sig, &action, NULL) < 0){

ERROR:SPACING: space required before the open parenthesis '('
#304: FILE: arch/um/os-Linux/main.c:89:
+	if(sigaction(sig, &action, NULL) < 0){

CHECK:SPACING: No space is necessary after a cast
#355: FILE: arch/um/os-Linux/skas/process.c:206:
+		sa.sa_handler = (void *) v;

ERROR:SPACING: space required before the open parenthesis '('
#357: FILE: arch/um/os-Linux/skas/process.c:208:
+		if(sigaction(SIGSEGV, &sa, NULL) < 0)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'userspace_tramp', this function's name, in a string
#358: FILE: arch/um/os-Linux/skas/process.c:209:
+			panic("userspace_tramp - setting SIGSEGV handler "

WARNING:SPLIT_STRING: quoted string split across lines
#359: FILE: arch/um/os-Linux/skas/process.c:210:
+			panic("userspace_tramp - setting SIGSEGV handler "
+			      "failed - errno = %d\n", errno);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000051988.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 8 warnings, 3 checks, 229 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000051988.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
