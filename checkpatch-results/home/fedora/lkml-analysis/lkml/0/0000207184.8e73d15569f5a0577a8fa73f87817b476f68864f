WARNING:TYPO_SPELLING: 'signficiant' may be misspelled - perhaps 'significant'?
#37: 
This can result in a signficiant performance hit for HPC applications
                     ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#98: FILE: include/linux/sysctl.h:173:
+	VM_TOSS_PAGE_CACHE_NODES=29, /* nodemask_t: nodes to free page cache on */
 	                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#107: FILE: include/linux/sysctl.h:807:
+extern int proc_dobitmap_list(ctl_table *table, int, struct file *,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#107: FILE: include/linux/sysctl.h:807:
+extern int proc_dobitmap_list(ctl_table *table, int, struct file *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#107: FILE: include/linux/sysctl.h:807:
+extern int proc_dobitmap_list(ctl_table *table, int, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __user *' should also have an identifier name
#107: FILE: include/linux/sysctl.h:807:
+extern int proc_dobitmap_list(ctl_table *table, int, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t *' should also have an identifier name
#107: FILE: include/linux/sysctl.h:807:
+extern int proc_dobitmap_list(ctl_table *table, int, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#107: FILE: include/linux/sysctl.h:807:
+extern int proc_dobitmap_list(ctl_table *table, int, struct file *,

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#132: FILE: kernel/sysctl.c:80:
+extern int proc_do_toss_page_cache_nodes(ctl_table *, int, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ctl_table *' should also have an identifier name
#132: FILE: kernel/sysctl.c:80:
+extern int proc_do_toss_page_cache_nodes(ctl_table *, int, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#132: FILE: kernel/sysctl.c:80:
+extern int proc_do_toss_page_cache_nodes(ctl_table *, int, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#132: FILE: kernel/sysctl.c:80:
+extern int proc_do_toss_page_cache_nodes(ctl_table *, int, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __user *' should also have an identifier name
#132: FILE: kernel/sysctl.c:80:
+extern int proc_do_toss_page_cache_nodes(ctl_table *, int, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t *' should also have an identifier name
#132: FILE: kernel/sysctl.c:80:
+extern int proc_do_toss_page_cache_nodes(ctl_table *, int, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#132: FILE: kernel/sysctl.c:80:
+extern int proc_do_toss_page_cache_nodes(ctl_table *, int, struct file *,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#164: FILE: kernel/sysctl.c:2097:
+ * @filp: the file structure
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#179: FILE: kernel/sysctl.c:2112:
+int proc_dobitmap_list(ctl_table *table, int write, struct file *filp,
                                                                  ^^^^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#188: FILE: kernel/sysctl.c:2121:
+		if ((buff = kmalloc(*lenp + 1, GFP_KERNEL)) == 0)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#193: FILE: kernel/sysctl.c:2126:
+^I^Iretval = bitmap_parselist(buff, (unsigned long *)table->data, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#194: FILE: kernel/sysctl.c:2127:
+					  table->maxlen*8);
 					               ^

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#197: FILE: kernel/sysctl.c:2130:
+		return retval;
+	} else {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#202: FILE: kernel/sysctl.c:2135:
+			if ((buff = kmalloc(*lenp, GFP_KERNEL)) == 0)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#204: FILE: kernel/sysctl.c:2137:
+^I^I^Iretval = bitmap_scnlistprintf(buff, (*lenp)-1, $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#204: FILE: kernel/sysctl.c:2137:
+			retval = bitmap_scnlistprintf(buff, (*lenp)-1, 
 			                                           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#205: FILE: kernel/sysctl.c:2138:
+^I^I^I^I(const unsigned long *) table->data, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#205: FILE: kernel/sysctl.c:2138:
+			retval = bitmap_scnlistprintf(buff, (*lenp)-1, 
+				(const unsigned long *) table->data, 

CHECK:SPACING: No space is necessary after a cast
#205: FILE: kernel/sysctl.c:2138:
+				(const unsigned long *) table->data, 

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#206: FILE: kernel/sysctl.c:2139:
+						      table->maxlen*8);
 						                   ^

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#214: FILE: kernel/sysctl.c:2147:
+			return 0;
+		} else {

WARNING:RETURN_VOID: void function return statements are not generally useful
#306: FILE: mm/vmscan.c:927:
+	return;
+}

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#331: FILE: mm/vmscan.c:952:
+	int i, errors=0;
 	             ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#338: FILE: mm/vmscan.c:959:
+		volatile void	*vv;

CHECK:SPACING: No space is necessary after a cast
#350: FILE: mm/vmscan.c:971:
+	bitmap.vv = (volatile void *) &toss_page_cache_nodes;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#350: FILE: mm/vmscan.c:971:
+	bitmap.vv = (volatile void *) &toss_page_cache_nodes;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#372: FILE: mm/vmscan.c:993:
+	     node = find_next_bit(bitmap.cu, MAX_NUMNODES, node+1)) {
 	                                                       ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000207184.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 7 errors, 20 warnings, 8 checks, 299 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000207184.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
