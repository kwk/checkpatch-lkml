WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#25: 
ChangeSet 1.1315.1.7, 2003/09/15 16:53:41-07:00, mporter@kernel.crashing.org

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#44: 
--- a/drivers/i2c/Kconfig	Mon Sep 22 16:15:04 2003

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#52: FILE: drivers/i2c/Kconfig:206:
+config I2C_IBM_IIC
+	tristate "IBM IIC I2C"
 	depends on IBM_OCP && I2C
 
 
 
 
 

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1040: FILE: drivers/i2c/i2c-ibm_iic.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1041: FILE: drivers/i2c/i2c-ibm_iic.c:2:
+ * drivers/i2c/i2c-ibm_iic.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1048: FILE: drivers/i2c/i2c-ibm_iic.c:9:
+ * Based on original work by $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1049: FILE: drivers/i2c/i2c-ibm_iic.c:10:
+ * ^IIan DaSilva  <idasilva@mvista.com>$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1051: FILE: drivers/i2c/i2c-ibm_iic.c:12:
+ * ^IMatt Porter  <mporter@mvista.com>$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1057: FILE: drivers/i2c/i2c-ibm_iic.c:18:
+ *   ^ICopyright 1995-97 Simon G. Vogl$

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#1060: FILE: drivers/i2c/i2c-ibm_iic.c:21:
+ *   	With some changes from Kyösti Mälkki <kmalkki@cc.hut.fi> 
      	                         ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1060: FILE: drivers/i2c/i2c-ibm_iic.c:21:
+ *   ^IWith some changes from Kyösti Mälkki <kmalkki@cc.hut.fi> $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1060: FILE: drivers/i2c/i2c-ibm_iic.c:21:
+ *   ^IWith some changes from Kyösti Mälkki <kmalkki@cc.hut.fi> $

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#1077: FILE: drivers/i2c/i2c-ibm_iic.c:38:
+#include <asm/io.h>

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1090: FILE: drivers/i2c/i2c-ibm_iic.c:51:
+static int iic_scan = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1094: FILE: drivers/i2c/i2c-ibm_iic.c:55:
+static int iic_force_poll = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#1098: FILE: drivers/i2c/i2c-ibm_iic.c:59:
+static int iic_force_fast = 0;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1113: FILE: drivers/i2c/i2c-ibm_iic.c:74:
+#  define DBG(x...)	printk(KERN_DEBUG "ibm-iic" ##x)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1118: FILE: drivers/i2c/i2c-ibm_iic.c:79:
+#  define DBG2(x...) ^IDBG( ##x )$

ERROR:SPACING: space prohibited after that open parenthesis '('
#1118: FILE: drivers/i2c/i2c-ibm_iic.c:79:
+#  define DBG2(x...) 	DBG( ##x )

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1118: FILE: drivers/i2c/i2c-ibm_iic.c:79:
+#  define DBG2(x...) 	DBG( ##x )

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1120: FILE: drivers/i2c/i2c-ibm_iic.c:81:
+#  define DBG2(x...) ^I((void)0)$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1123: FILE: drivers/i2c/i2c-ibm_iic.c:84:
+static void dump_iic_regs(const char* header, struct ibm_iic_private* dev)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1123: FILE: drivers/i2c/i2c-ibm_iic.c:84:
+static void dump_iic_regs(const char* header, struct ibm_iic_private* dev)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1125: FILE: drivers/i2c/i2c-ibm_iic.c:86:
+	volatile struct iic_regs *iic = dev->vaddr;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1126: FILE: drivers/i2c/i2c-ibm_iic.c:87:
+	volatile struct iic_regs *iic = dev->vaddr;
+	printk(KERN_DEBUG "ibm-iic%d: %s\n", dev->idx, header);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1126: FILE: drivers/i2c/i2c-ibm_iic.c:87:
+	printk(KERN_DEBUG "ibm-iic%d: %s\n", dev->idx, header);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1127: FILE: drivers/i2c/i2c-ibm_iic.c:88:
+	printk(KERN_DEBUG "  cntl     = 0x%02x, mdcntl = 0x%02x\n"

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1131: FILE: drivers/i2c/i2c-ibm_iic.c:92:
+^I^Iin_8(&iic->cntl), in_8(&iic->mdcntl), in_8(&iic->sts), $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1132: FILE: drivers/i2c/i2c-ibm_iic.c:93:
+^I^Iin_8(&iic->extsts), in_8(&iic->clkdiv), in_8(&iic->xfrcnt), $

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1135: FILE: drivers/i2c/i2c-ibm_iic.c:96:
+}
+#  define DUMP_REGS(h,dev)	dump_iic_regs((h),(dev))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1135: FILE: drivers/i2c/i2c-ibm_iic.c:96:
+#  define DUMP_REGS(h,dev)	dump_iic_regs((h),(dev))
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1135: FILE: drivers/i2c/i2c-ibm_iic.c:96:
+#  define DUMP_REGS(h,dev)	dump_iic_regs((h),(dev))
                           	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1137: FILE: drivers/i2c/i2c-ibm_iic.c:98:
+#  define DUMP_REGS(h,dev)	((void)0)
                      ^

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1141: FILE: drivers/i2c/i2c-ibm_iic.c:102:
+static inline void iic_interrupt_mode(struct ibm_iic_private* dev, int enable)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1145: FILE: drivers/i2c/i2c-ibm_iic.c:106:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1145: FILE: drivers/i2c/i2c-ibm_iic.c:106:
+ $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1149: FILE: drivers/i2c/i2c-ibm_iic.c:110:
+static void iic_dev_init(struct ibm_iic_private* dev)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1151: FILE: drivers/i2c/i2c-ibm_iic.c:112:
+	volatile struct iic_regs *iic = dev->vaddr;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1154: FILE: drivers/i2c/i2c-ibm_iic.c:115:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1180: FILE: drivers/i2c/i2c-ibm_iic.c:141:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1191: FILE: drivers/i2c/i2c-ibm_iic.c:152:
+/* $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1194: FILE: drivers/i2c/i2c-ibm_iic.c:155:
+static void iic_dev_reset(struct ibm_iic_private* dev)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1196: FILE: drivers/i2c/i2c-ibm_iic.c:157:
+	volatile struct iic_regs *iic = dev->vaddr;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1199: FILE: drivers/i2c/i2c-ibm_iic.c:160:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1202: FILE: drivers/i2c/i2c-ibm_iic.c:163:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1203: FILE: drivers/i2c/i2c-ibm_iic.c:164:
+    ^I/* Place chip in the reset state */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1203: FILE: drivers/i2c/i2c-ibm_iic.c:164:
+    ^I/* Place chip in the reset state */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1203: FILE: drivers/i2c/i2c-ibm_iic.c:164:
+    ^I/* Place chip in the reset state */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1205: FILE: drivers/i2c/i2c-ibm_iic.c:166:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1207: FILE: drivers/i2c/i2c-ibm_iic.c:168:
+^Idc = in_8(&iic->directcntl);^I$

ERROR:SPACING: space required before the open brace '{'
#1208: FILE: drivers/i2c/i2c-ibm_iic.c:169:
+	if (!DIRCTNL_FREE(dc)){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1210: FILE: drivers/i2c/i2c-ibm_iic.c:171:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1212: FILE: drivers/i2c/i2c-ibm_iic.c:173:
+^I^Iout_8(&iic->directcntl, DIRCNTL_SDAC | DIRCNTL_SCC);^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1213: FILE: drivers/i2c/i2c-ibm_iic.c:174:
+^I$

ERROR:SPACING: space required before the open brace '{'
#1215: FILE: drivers/i2c/i2c-ibm_iic.c:176:
+		for (i = 0; i < 100; ++i){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1219: FILE: drivers/i2c/i2c-ibm_iic.c:180:
+^I^I^I$

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1223: FILE: drivers/i2c/i2c-ibm_iic.c:184:
+			udelay(10);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1226: FILE: drivers/i2c/i2c-ibm_iic.c:187:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1231: FILE: drivers/i2c/i2c-ibm_iic.c:192:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1234: FILE: drivers/i2c/i2c-ibm_iic.c:195:
+^I$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1244: FILE: drivers/i2c/i2c-ibm_iic.c:205:
+	struct ibm_iic_private* dev = (struct ibm_iic_private*)dev_id;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1244: FILE: drivers/i2c/i2c-ibm_iic.c:205:
+	struct ibm_iic_private* dev = (struct ibm_iic_private*)dev_id;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1245: FILE: drivers/i2c/i2c-ibm_iic.c:206:
+	volatile struct iic_regs* iic = dev->vaddr;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1245: FILE: drivers/i2c/i2c-ibm_iic.c:206:
+	volatile struct iic_regs* iic = dev->vaddr;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1246: FILE: drivers/i2c/i2c-ibm_iic.c:207:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1247: FILE: drivers/i2c/i2c-ibm_iic.c:208:
+^IDBG2("%d: irq handler, STS = 0x%02x, EXTSTS = 0x%02x\n", $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1249: FILE: drivers/i2c/i2c-ibm_iic.c:210:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1253: FILE: drivers/i2c/i2c-ibm_iic.c:214:
+^I$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1261: FILE: drivers/i2c/i2c-ibm_iic.c:222:
+static int iic_xfer_result(struct ibm_iic_private* dev)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1263: FILE: drivers/i2c/i2c-ibm_iic.c:224:
+^Ivolatile struct iic_regs *iic = dev->vaddr;^I$

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1263: FILE: drivers/i2c/i2c-ibm_iic.c:224:
+	volatile struct iic_regs *iic = dev->vaddr;	

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1264: FILE: drivers/i2c/i2c-ibm_iic.c:225:
+^I$

ERROR:SPACING: space required before the open brace '{'
#1265: FILE: drivers/i2c/i2c-ibm_iic.c:226:
+	if (unlikely(in_8(&iic->sts) & STS_ERR)){

CHECK:BRACES: braces {} should be used on all arms of this statement
#1265: FILE: drivers/i2c/i2c-ibm_iic.c:226:
+	if (unlikely(in_8(&iic->sts) & STS_ERR)){
[...]
+	else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1266: FILE: drivers/i2c/i2c-ibm_iic.c:227:
+^I^IDBG("%d: xfer error, EXTSTS = 0x%02x\n", dev->idx, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1267: FILE: drivers/i2c/i2c-ibm_iic.c:228:
+		DBG("%d: xfer error, EXTSTS = 0x%02x\n", dev->idx, 
+			in_8(&iic->extsts));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1268: FILE: drivers/i2c/i2c-ibm_iic.c:229:
+^I^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1270: FILE: drivers/i2c/i2c-ibm_iic.c:231:
+^I^Iout_8(&iic->extsts, EXTSTS_IRQP | EXTSTS_IRQD | $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1272: FILE: drivers/i2c/i2c-ibm_iic.c:233:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1275: FILE: drivers/i2c/i2c-ibm_iic.c:236:
+^I^I$

ERROR:SPACING: space required before the open brace '{'
#1281: FILE: drivers/i2c/i2c-ibm_iic.c:242:
+		if ((in_8(&iic->extsts) & EXTSTS_BCS_MASK) != EXTSTS_BCS_FREE){

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1287: FILE: drivers/i2c/i2c-ibm_iic.c:248:
+	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1294: FILE: drivers/i2c/i2c-ibm_iic.c:255:
+static void iic_abort_xfer(struct ibm_iic_private* dev)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1296: FILE: drivers/i2c/i2c-ibm_iic.c:257:
+	volatile struct iic_regs *iic = dev->vaddr;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1298: FILE: drivers/i2c/i2c-ibm_iic.c:259:
+^I$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'iic_abort_xfer', this function's name, in a string
#1299: FILE: drivers/i2c/i2c-ibm_iic.c:260:
+	DBG("%d: iic_abort_xfer\n", dev->idx);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1300: FILE: drivers/i2c/i2c-ibm_iic.c:261:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1302: FILE: drivers/i2c/i2c-ibm_iic.c:263:
+^I$

ERROR:SPACING: space required before the open brace '{'
#1308: FILE: drivers/i2c/i2c-ibm_iic.c:269:
+	while ((in_8(&iic->extsts) & EXTSTS_BCS_MASK) != EXTSTS_BCS_FREE){

ERROR:SPACING: space required before the open brace '{'
#1309: FILE: drivers/i2c/i2c-ibm_iic.c:270:
+		if (time_after(jiffies, x)){

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1326: FILE: drivers/i2c/i2c-ibm_iic.c:287:
+static int iic_wait_for_tc(struct ibm_iic_private* dev){

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1326: FILE: drivers/i2c/i2c-ibm_iic.c:287:
+static int iic_wait_for_tc(struct ibm_iic_private* dev){

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open brace '{'
#1326: FILE: drivers/i2c/i2c-ibm_iic.c:287:
+static int iic_wait_for_tc(struct ibm_iic_private* dev){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1327: FILE: drivers/i2c/i2c-ibm_iic.c:288:
+^I$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1327: FILE: drivers/i2c/i2c-ibm_iic.c:288:
+static int iic_wait_for_tc(struct ibm_iic_private* dev){
+	

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1328: FILE: drivers/i2c/i2c-ibm_iic.c:289:
+	volatile struct iic_regs *iic = dev->vaddr;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1330: FILE: drivers/i2c/i2c-ibm_iic.c:291:
+^I$

ERROR:SPACING: space required before the open brace '{'
#1331: FILE: drivers/i2c/i2c-ibm_iic.c:292:
+	if (dev->irq >= 0){

ERROR:CODE_INDENT: code indent should use tabs where possible
#1334: FILE: drivers/i2c/i2c-ibm_iic.c:295:
+    ^I^Iinit_waitqueue_entry(&wait, current);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1334: FILE: drivers/i2c/i2c-ibm_iic.c:295:
+    ^I^Iinit_waitqueue_entry(&wait, current);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1334: FILE: drivers/i2c/i2c-ibm_iic.c:295:
+    ^I^Iinit_waitqueue_entry(&wait, current);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1335: FILE: drivers/i2c/i2c-ibm_iic.c:296:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1342: FILE: drivers/i2c/i2c-ibm_iic.c:303:
+^I^I$

ERROR:SPACING: space required before the open brace '{'
#1343: FILE: drivers/i2c/i2c-ibm_iic.c:304:
+		if (unlikely(signal_pending(current))){

ERROR:SPACING: space required before the open brace '{'
#1346: FILE: drivers/i2c/i2c-ibm_iic.c:307:
+		} else if (unlikely(in_8(&iic->sts) & STS_PT)){

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1351: FILE: drivers/i2c/i2c-ibm_iic.c:312:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#1351: FILE: drivers/i2c/i2c-ibm_iic.c:312:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1354: FILE: drivers/i2c/i2c-ibm_iic.c:315:
+^I^I$

ERROR:SPACING: space required before the open brace '{'
#1355: FILE: drivers/i2c/i2c-ibm_iic.c:316:
+		while (in_8(&iic->sts) & STS_PT){

ERROR:SPACING: space required before the open brace '{'
#1356: FILE: drivers/i2c/i2c-ibm_iic.c:317:
+			if (unlikely(time_after(jiffies, x))){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1361: FILE: drivers/i2c/i2c-ibm_iic.c:322:
+^I^I$

ERROR:SPACING: space required before the open brace '{'
#1362: FILE: drivers/i2c/i2c-ibm_iic.c:323:
+			if (unlikely(signal_pending(current))){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1368: FILE: drivers/i2c/i2c-ibm_iic.c:329:
+^I^I}^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1370: FILE: drivers/i2c/i2c-ibm_iic.c:331:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1375: FILE: drivers/i2c/i2c-ibm_iic.c:336:
+^I$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'iic_wait_for_tc', this function's name, in a string
#1376: FILE: drivers/i2c/i2c-ibm_iic.c:337:
+	DBG2("%d: iic_wait_for_tc -> %d\n", dev->idx, ret);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1377: FILE: drivers/i2c/i2c-ibm_iic.c:338:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1384: FILE: drivers/i2c/i2c-ibm_iic.c:345:
+static int iic_xfer_bytes(struct ibm_iic_private* dev, struct i2c_msg* pm, $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1384: FILE: drivers/i2c/i2c-ibm_iic.c:345:
+static int iic_xfer_bytes(struct ibm_iic_private* dev, struct i2c_msg* pm, 

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1384: FILE: drivers/i2c/i2c-ibm_iic.c:345:
+static int iic_xfer_bytes(struct ibm_iic_private* dev, struct i2c_msg* pm, 

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1387: FILE: drivers/i2c/i2c-ibm_iic.c:348:
+	volatile struct iic_regs *iic = dev->vaddr;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1388: FILE: drivers/i2c/i2c-ibm_iic.c:349:
+	char* buf = pm->buf;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1393: FILE: drivers/i2c/i2c-ibm_iic.c:354:
+	u8 cntl = (in_8(&iic->cntl) & CNTL_AMD) | CNTL_PT;
+	if (pm->flags & I2C_M_RD)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1395: FILE: drivers/i2c/i2c-ibm_iic.c:356:
+^I$

ERROR:SPACING: space required before the open brace '{'
#1397: FILE: drivers/i2c/i2c-ibm_iic.c:358:
+	for (i = 0; i < loops; ++i, len -= 4){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1400: FILE: drivers/i2c/i2c-ibm_iic.c:361:
+^I^I$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1403: FILE: drivers/i2c/i2c-ibm_iic.c:364:
+				out_8((volatile u8*)&iic->mdbuf, *buf++);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1403: FILE: drivers/i2c/i2c-ibm_iic.c:364:
+				out_8((volatile u8*)&iic->mdbuf, *buf++);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1404: FILE: drivers/i2c/i2c-ibm_iic.c:365:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1409: FILE: drivers/i2c/i2c-ibm_iic.c:370:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1411: FILE: drivers/i2c/i2c-ibm_iic.c:372:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1414: FILE: drivers/i2c/i2c-ibm_iic.c:375:
+^I^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#1418: FILE: drivers/i2c/i2c-ibm_iic.c:379:
+		if (unlikely(ret < 0))
[...]
+		else if (unlikely(ret != count)){
[...]

ERROR:SPACING: space required before the open brace '{'
#1420: FILE: drivers/i2c/i2c-ibm_iic.c:381:
+		else if (unlikely(ret != count)){

WARNING:TYPO_SPELLING: 'transfered' may be misspelled - perhaps 'transferred'?
#1421: FILE: drivers/i2c/i2c-ibm_iic.c:382:
+			DBG("%d: xfer_bytes, requested %d, transfered %d\n", 
 			                                   ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1421: FILE: drivers/i2c/i2c-ibm_iic.c:382:
+^I^I^IDBG("%d: xfer_bytes, requested %d, transfered %d\n", $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1422: FILE: drivers/i2c/i2c-ibm_iic.c:383:
+			DBG("%d: xfer_bytes, requested %d, transfered %d\n", 
+				dev->idx, count, ret);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1423: FILE: drivers/i2c/i2c-ibm_iic.c:384:
+^I^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1426: FILE: drivers/i2c/i2c-ibm_iic.c:387:
+    ^I^I^I^Iiic_abort_xfer(dev);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1426: FILE: drivers/i2c/i2c-ibm_iic.c:387:
+    ^I^I^I^Iiic_abort_xfer(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1426: FILE: drivers/i2c/i2c-ibm_iic.c:387:
+    ^I^I^I^Iiic_abort_xfer(dev);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1427: FILE: drivers/i2c/i2c-ibm_iic.c:388:
+^I^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1429: FILE: drivers/i2c/i2c-ibm_iic.c:390:
+^I^I^Ibreak;^I^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1431: FILE: drivers/i2c/i2c-ibm_iic.c:392:
+^I^I$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1434: FILE: drivers/i2c/i2c-ibm_iic.c:395:
+				*buf++ = in_8((volatile u8*)&iic->mdbuf);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1434: FILE: drivers/i2c/i2c-ibm_iic.c:395:
+				*buf++ = in_8((volatile u8*)&iic->mdbuf);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1436: FILE: drivers/i2c/i2c-ibm_iic.c:397:
+^I$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1443: FILE: drivers/i2c/i2c-ibm_iic.c:404:
+static inline void iic_address(struct ibm_iic_private* dev, struct i2c_msg* msg)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1443: FILE: drivers/i2c/i2c-ibm_iic.c:404:
+static inline void iic_address(struct ibm_iic_private* dev, struct i2c_msg* msg)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1445: FILE: drivers/i2c/i2c-ibm_iic.c:406:
+	volatile struct iic_regs *iic = dev->vaddr;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1447: FILE: drivers/i2c/i2c-ibm_iic.c:408:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1448: FILE: drivers/i2c/i2c-ibm_iic.c:409:
+^IDBG2("%d: iic_address, 0x%03x (%d-bit)\n", dev->idx, $

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'iic_address', this function's name, in a string
#1448: FILE: drivers/i2c/i2c-ibm_iic.c:409:
+	DBG2("%d: iic_address, 0x%03x (%d-bit)\n", dev->idx, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1449: FILE: drivers/i2c/i2c-ibm_iic.c:410:
+	DBG2("%d: iic_address, 0x%03x (%d-bit)\n", dev->idx, 
+		addr, msg->flags & I2C_M_TEN ? 10 : 7);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1450: FILE: drivers/i2c/i2c-ibm_iic.c:411:
+^I$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1451: FILE: drivers/i2c/i2c-ibm_iic.c:412:
+	if (msg->flags & I2C_M_TEN){
+	    out_8(&iic->cntl, CNTL_AMD);

ERROR:SPACING: space required before the open brace '{'
#1451: FILE: drivers/i2c/i2c-ibm_iic.c:412:
+	if (msg->flags & I2C_M_TEN){

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1456: FILE: drivers/i2c/i2c-ibm_iic.c:417:
+	else {
+	    out_8(&iic->cntl, 0);

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1456: FILE: drivers/i2c/i2c-ibm_iic.c:417:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#1456: FILE: drivers/i2c/i2c-ibm_iic.c:417:
+	else {

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1462: FILE: drivers/i2c/i2c-ibm_iic.c:423:
+static inline int iic_invalid_address(const struct i2c_msg* p)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1467: FILE: drivers/i2c/i2c-ibm_iic.c:428:
+static inline int iic_address_neq(const struct i2c_msg* p1, $

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1467: FILE: drivers/i2c/i2c-ibm_iic.c:428:
+static inline int iic_address_neq(const struct i2c_msg* p1, 

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1468: FILE: drivers/i2c/i2c-ibm_iic.c:429:
+				  const struct i2c_msg* p2)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1470: FILE: drivers/i2c/i2c-ibm_iic.c:431:
+^Ireturn (p1->addr != p2->addr) $

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1471: FILE: drivers/i2c/i2c-ibm_iic.c:432:
+	return (p1->addr != p2->addr) 
+		|| ((p1->flags & I2C_M_TEN) != (p2->flags & I2C_M_TEN));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1472: FILE: drivers/i2c/i2c-ibm_iic.c:433:
+} $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1475: FILE: drivers/i2c/i2c-ibm_iic.c:436:
+ * Generic master transfer entrypoint. $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1480: FILE: drivers/i2c/i2c-ibm_iic.c:441:
+    ^Istruct ibm_iic_private* dev = (struct ibm_iic_private*)(i2c_get_adapdata(adap));$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1480: FILE: drivers/i2c/i2c-ibm_iic.c:441:
+    ^Istruct ibm_iic_private* dev = (struct ibm_iic_private*)(i2c_get_adapdata(adap));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1480: FILE: drivers/i2c/i2c-ibm_iic.c:441:
+    ^Istruct ibm_iic_private* dev = (struct ibm_iic_private*)(i2c_get_adapdata(adap));$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1480: FILE: drivers/i2c/i2c-ibm_iic.c:441:
+    	struct ibm_iic_private* dev = (struct ibm_iic_private*)(i2c_get_adapdata(adap));

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1480: FILE: drivers/i2c/i2c-ibm_iic.c:441:
+    	struct ibm_iic_private* dev = (struct ibm_iic_private*)(i2c_get_adapdata(adap));

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1481: FILE: drivers/i2c/i2c-ibm_iic.c:442:
+	volatile struct iic_regs *iic = dev->vaddr;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1483: FILE: drivers/i2c/i2c-ibm_iic.c:444:
+^I$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'iic_xfer', this function's name, in a string
#1484: FILE: drivers/i2c/i2c-ibm_iic.c:445:
+	DBG2("%d: iic_xfer, %d msg(s)\n", dev->idx, num);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1485: FILE: drivers/i2c/i2c-ibm_iic.c:446:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1488: FILE: drivers/i2c/i2c-ibm_iic.c:449:
+^I$

ERROR:SPACING: space required before the open brace '{'
#1492: FILE: drivers/i2c/i2c-ibm_iic.c:453:
+	if (unlikely(iic_invalid_address(&msgs[0]))){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1493: FILE: drivers/i2c/i2c-ibm_iic.c:454:
+^I^IDBG("%d: invalid address 0x%03x (%d-bit)\n", dev->idx, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1494: FILE: drivers/i2c/i2c-ibm_iic.c:455:
+		DBG("%d: invalid address 0x%03x (%d-bit)\n", dev->idx, 
+			msgs[0].addr, msgs[0].flags & I2C_M_TEN ? 10 : 7);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1496: FILE: drivers/i2c/i2c-ibm_iic.c:457:
+^I}^I^I$

ERROR:SPACING: space required before the open brace '{'
#1497: FILE: drivers/i2c/i2c-ibm_iic.c:458:
+	for (i = 0; i < num; ++i){

ERROR:SPACING: space required before the open brace '{'
#1498: FILE: drivers/i2c/i2c-ibm_iic.c:459:
+		if (unlikely(msgs[i].len <= 0)){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1499: FILE: drivers/i2c/i2c-ibm_iic.c:460:
+^I^I^IDBG("%d: invalid len %d in msg[%d]\n", dev->idx, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1500: FILE: drivers/i2c/i2c-ibm_iic.c:461:
+			DBG("%d: invalid len %d in msg[%d]\n", dev->idx, 
+				msgs[i].len, i);

ERROR:SPACING: space required before the open brace '{'
#1503: FILE: drivers/i2c/i2c-ibm_iic.c:464:
+		if (unlikely(iic_address_neq(&msgs[0], &msgs[i]))){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1508: FILE: drivers/i2c/i2c-ibm_iic.c:469:
+^I$

ERROR:SPACING: space required before the open brace '{'
#1510: FILE: drivers/i2c/i2c-ibm_iic.c:471:
+	if (unlikely((in_8(&iic->extsts) & EXTSTS_BCS_MASK) != EXTSTS_BCS_FREE)){

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'iic_xfer', this function's name, in a string
#1511: FILE: drivers/i2c/i2c-ibm_iic.c:472:
+		DBG("%d: iic_xfer, bus is not free\n", dev->idx);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1512: FILE: drivers/i2c/i2c-ibm_iic.c:473:
+^I^I$

WARNING:TYPO_SPELLING: 'happend' may be misspelled - perhaps 'happened'?
#1513: FILE: drivers/i2c/i2c-ibm_iic.c:474:
+		/* Usually it means something serious has happend.
 		                                          ^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1516: FILE: drivers/i2c/i2c-ibm_iic.c:477:
+^I^I * Probably we were not able to recover from the $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1522: FILE: drivers/i2c/i2c-ibm_iic.c:483:
+^I^I$

ERROR:SPACING: space required before the open brace '{'
#1523: FILE: drivers/i2c/i2c-ibm_iic.c:484:
+		if ((in_8(&iic->extsts) & EXTSTS_BCS_MASK) != EXTSTS_BCS_FREE){

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'iic_xfer', this function's name, in a string
#1524: FILE: drivers/i2c/i2c-ibm_iic.c:485:
+			DBG("%d: iic_xfer, bus is still not free\n", dev->idx);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1527: FILE: drivers/i2c/i2c-ibm_iic.c:488:
+^I} $

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1528: FILE: drivers/i2c/i2c-ibm_iic.c:489:
+	} 
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#1528: FILE: drivers/i2c/i2c-ibm_iic.c:489:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1532: FILE: drivers/i2c/i2c-ibm_iic.c:493:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1535: FILE: drivers/i2c/i2c-ibm_iic.c:496:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1537: FILE: drivers/i2c/i2c-ibm_iic.c:498:
+    ^Ifor (i = 0; i < num && !ret; ++i)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1537: FILE: drivers/i2c/i2c-ibm_iic.c:498:
+    ^Ifor (i = 0; i < num && !ret; ++i)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1537: FILE: drivers/i2c/i2c-ibm_iic.c:498:
+    ^Ifor (i = 0; i < num && !ret; ++i)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1549: FILE: drivers/i2c/i2c-ibm_iic.c:510:
+^I.name ^I^I= "IBM IIC algorithm",$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1550: FILE: drivers/i2c/i2c-ibm_iic.c:511:
+^I.id   ^I^I= I2C_ALGO_OCP,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1551: FILE: drivers/i2c/i2c-ibm_iic.c:512:
+^I.master_xfer ^I= iic_xfer,$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1563: FILE: drivers/i2c/i2c-ibm_iic.c:524:
+static void __devinit iic_scan_bus(struct ibm_iic_private* dev)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1563: FILE: drivers/i2c/i2c-ibm_iic.c:524:
+static void __devinit iic_scan_bus(struct ibm_iic_private* dev)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1572: FILE: drivers/i2c/i2c-ibm_iic.c:533:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1573: FILE: drivers/i2c/i2c-ibm_iic.c:534:
+	printk(KERN_INFO "ibm-iic%d: scanning bus...\n" KERN_INFO, dev->idx);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1574: FILE: drivers/i2c/i2c-ibm_iic.c:535:
+^I$

ERROR:SPACING: space required before the open brace '{'
#1576: FILE: drivers/i2c/i2c-ibm_iic.c:537:
+		if (iic_xfer(&dev->adap, &msg, 1) == 1){

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1578: FILE: drivers/i2c/i2c-ibm_iic.c:539:
+			printk(" 0x%02x", msg.addr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1581: FILE: drivers/i2c/i2c-ibm_iic.c:542:
+^Iprintk("%sibm-iic%d: %d device(s) detected\n", $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1581: FILE: drivers/i2c/i2c-ibm_iic.c:542:
+	printk("%sibm-iic%d: %d device(s) detected\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1582: FILE: drivers/i2c/i2c-ibm_iic.c:543:
+	printk("%sibm-iic%d: %d device(s) detected\n", 
+		found ? "\n" KERN_INFO : "", dev->idx, found);

ERROR:SPACING: space required before the open brace '{'
#1595: FILE: drivers/i2c/i2c-ibm_iic.c:556:
+	if (!opb){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1596: FILE: drivers/i2c/i2c-ibm_iic.c:557:
+		printk(KERN_WARNING "ibm-iic: using compatibility value for OPB freq,"

WARNING:SPLIT_STRING: quoted string split across lines
#1597: FILE: drivers/i2c/i2c-ibm_iic.c:558:
+		printk(KERN_WARNING "ibm-iic: using compatibility value for OPB freq,"
+			" fix your board specific setup\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1603: FILE: drivers/i2c/i2c-ibm_iic.c:564:
+^I$

ERROR:SPACING: space required before the open brace '{'
#1604: FILE: drivers/i2c/i2c-ibm_iic.c:565:
+	if (opb < 20 || opb > 150){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#1605: FILE: drivers/i2c/i2c-ibm_iic.c:566:
+		printk(KERN_CRIT "ibm-iic: invalid OPB clock frequency %u MHz\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1606: FILE: drivers/i2c/i2c-ibm_iic.c:567:
+		printk(KERN_CRIT "ibm-iic: invalid OPB clock frequency %u MHz\n",
+			opb);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1615: FILE: drivers/i2c/i2c-ibm_iic.c:576:
+static int __devinit iic_probe(struct ocp_device *ocp){

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#1615: FILE: drivers/i2c/i2c-ibm_iic.c:576:
+static int __devinit iic_probe(struct ocp_device *ocp){

ERROR:SPACING: space required before the open brace '{'
#1615: FILE: drivers/i2c/i2c-ibm_iic.c:576:
+static int __devinit iic_probe(struct ocp_device *ocp){

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1616: FILE: drivers/i2c/i2c-ibm_iic.c:577:
+static int __devinit iic_probe(struct ocp_device *ocp){
+

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1617: FILE: drivers/i2c/i2c-ibm_iic.c:578:
+	struct ibm_iic_private* dev;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1618: FILE: drivers/i2c/i2c-ibm_iic.c:579:
+	struct i2c_adapter* adap;

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1620: FILE: drivers/i2c/i2c-ibm_iic.c:581:
+	bd_t* bd = (bd_t*)&__res;

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1620: FILE: drivers/i2c/i2c-ibm_iic.c:581:
+	bd_t* bd = (bd_t*)&__res;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1621: FILE: drivers/i2c/i2c-ibm_iic.c:582:
+^I$

ERROR:SPACING: space required before the open brace '{'
#1622: FILE: drivers/i2c/i2c-ibm_iic.c:583:
+	if (!(dev = kmalloc(sizeof(*dev), GFP_KERNEL))){

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1622: FILE: drivers/i2c/i2c-ibm_iic.c:583:
+	if (!(dev = kmalloc(sizeof(*dev), GFP_KERNEL))){

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#1623: FILE: drivers/i2c/i2c-ibm_iic.c:584:
+		printk(KERN_CRIT "ibm-iic: failed to allocate device data\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1630: FILE: drivers/i2c/i2c-ibm_iic.c:591:
+^I$

ERROR:SPACING: space required before the open brace '{'
#1631: FILE: drivers/i2c/i2c-ibm_iic.c:592:
+	if (!(dev->vaddr = ioremap(ocp->paddr, sizeof(struct iic_regs)))){

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1631: FILE: drivers/i2c/i2c-ibm_iic.c:592:
+	if (!(dev->vaddr = ioremap(ocp->paddr, sizeof(struct iic_regs)))){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#1632: FILE: drivers/i2c/i2c-ibm_iic.c:593:
+		printk(KERN_CRIT "ibm-iic%d: failed to ioremap device registers\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1633: FILE: drivers/i2c/i2c-ibm_iic.c:594:
+		printk(KERN_CRIT "ibm-iic%d: failed to ioremap device registers\n",
+			dev->idx);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1637: FILE: drivers/i2c/i2c-ibm_iic.c:598:
+^I$

ERROR:SPACING: space required before the open brace '{'
#1641: FILE: drivers/i2c/i2c-ibm_iic.c:602:
+	if (dev->irq >= 0){

WARNING:TYPO_SPELLING: 'intialization' may be misspelled - perhaps 'initialization'?
#1642: FILE: drivers/i2c/i2c-ibm_iic.c:603:
+		/* Disable interrupts until we finish intialization,
 		                                      ^^^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1643: FILE: drivers/i2c/i2c-ibm_iic.c:604:
+		/* Disable interrupts until we finish intialization,
+		   assumes level-sensitive IRQ setup...

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: space required before the open brace '{'
#1646: FILE: drivers/i2c/i2c-ibm_iic.c:607:
+		if (request_irq(dev->irq, iic_handler, 0, "IBM IIC", dev)){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1647: FILE: drivers/i2c/i2c-ibm_iic.c:608:
+^I^I^Iprintk(KERN_ERR "ibm-iic%d: request_irq %d failed\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1647: FILE: drivers/i2c/i2c-ibm_iic.c:608:
+			printk(KERN_ERR "ibm-iic%d: request_irq %d failed\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1648: FILE: drivers/i2c/i2c-ibm_iic.c:609:
+			printk(KERN_ERR "ibm-iic%d: request_irq %d failed\n", 
+				dev->idx, dev->irq);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1649: FILE: drivers/i2c/i2c-ibm_iic.c:610:
+^I^I^I/* Fallback to the polling mode */^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1653: FILE: drivers/i2c/i2c-ibm_iic.c:614:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1655: FILE: drivers/i2c/i2c-ibm_iic.c:616:
+^I^Iprintk(KERN_WARNING "ibm-iic%d: using polling mode\n", $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1655: FILE: drivers/i2c/i2c-ibm_iic.c:616:
+		printk(KERN_WARNING "ibm-iic%d: using polling mode\n", 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1656: FILE: drivers/i2c/i2c-ibm_iic.c:617:
+		printk(KERN_WARNING "ibm-iic%d: using polling mode\n", 
+			dev->idx);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1657: FILE: drivers/i2c/i2c-ibm_iic.c:618:
+^I^I$

WARNING:ARRAY_SIZE: Prefer ARRAY_SIZE(bd->bi_iic_fast)
#1659: FILE: drivers/i2c/i2c-ibm_iic.c:620:
+	BUG_ON(dev->idx >= sizeof(bd->bi_iic_fast) / sizeof(bd->bi_iic_fast[0]));

The ARRAY_SIZE(foo) macro should be preferred over
sizeof(foo)/sizeof(foo[0]) for finding number of elements in an
array.

The macro is defined in include/linux/kernel.h::

  #define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1659: FILE: drivers/i2c/i2c-ibm_iic.c:620:
+	BUG_ON(dev->idx >= sizeof(bd->bi_iic_fast) / sizeof(bd->bi_iic_fast[0]));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1661: FILE: drivers/i2c/i2c-ibm_iic.c:622:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1662: FILE: drivers/i2c/i2c-ibm_iic.c:623:
+^I/* clckdiv is the same for *all* IIC interfaces, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1667: FILE: drivers/i2c/i2c-ibm_iic.c:628:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1670: FILE: drivers/i2c/i2c-ibm_iic.c:631:
+^I$

ERROR:SPACING: space required before the open brace '{'
#1682: FILE: drivers/i2c/i2c-ibm_iic.c:643:
+	if ((ret = i2c_add_adapter(adap)) != 0){

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1682: FILE: drivers/i2c/i2c-ibm_iic.c:643:
+	if ((ret = i2c_add_adapter(adap)) != 0){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#1683: FILE: drivers/i2c/i2c-ibm_iic.c:644:
+		printk(KERN_CRIT "ibm-iic%d: failed to register i2c adapter\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1684: FILE: drivers/i2c/i2c-ibm_iic.c:645:
+		printk(KERN_CRIT "ibm-iic%d: failed to register i2c adapter\n",
+			dev->idx);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1687: FILE: drivers/i2c/i2c-ibm_iic.c:648:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1688: FILE: drivers/i2c/i2c-ibm_iic.c:649:
+	printk(KERN_INFO "ibm-iic%d: using %s mode\n", dev->idx,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1689: FILE: drivers/i2c/i2c-ibm_iic.c:650:
+	printk(KERN_INFO "ibm-iic%d: using %s mode\n", dev->idx,
+		dev->fast_mode ? "fast (400 kHz)" : "standard (100 kHz)");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1697: FILE: drivers/i2c/i2c-ibm_iic.c:658:
+fail:^I$

ERROR:SPACING: space required before the open brace '{'
#1698: FILE: drivers/i2c/i2c-ibm_iic.c:659:
+	if (dev->irq >= 0){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1701: FILE: drivers/i2c/i2c-ibm_iic.c:662:
+^I}^I$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1703: FILE: drivers/i2c/i2c-ibm_iic.c:664:
+	iounmap((void*)dev->vaddr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1704: FILE: drivers/i2c/i2c-ibm_iic.c:665:
+fail2:^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1706: FILE: drivers/i2c/i2c-ibm_iic.c:667:
+^Ikfree(dev);^I$

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1713: FILE: drivers/i2c/i2c-ibm_iic.c:674:
+static void __devexit iic_remove(struct ocp_device *ocp)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1715: FILE: drivers/i2c/i2c-ibm_iic.c:676:
+	struct ibm_iic_private* dev = (struct ibm_iic_private*)ocp_get_drvdata(ocp);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#1715: FILE: drivers/i2c/i2c-ibm_iic.c:676:
+	struct ibm_iic_private* dev = (struct ibm_iic_private*)ocp_get_drvdata(ocp);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1716: FILE: drivers/i2c/i2c-ibm_iic.c:677:
+	struct ibm_iic_private* dev = (struct ibm_iic_private*)ocp_get_drvdata(ocp);
+	BUG_ON(dev == NULL);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1716: FILE: drivers/i2c/i2c-ibm_iic.c:677:
+	BUG_ON(dev == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#1716: FILE: drivers/i2c/i2c-ibm_iic.c:677:
+	BUG_ON(dev == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required before the open brace '{'
#1717: FILE: drivers/i2c/i2c-ibm_iic.c:678:
+	if (i2c_del_adapter(&dev->adap)){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#1718: FILE: drivers/i2c/i2c-ibm_iic.c:679:
+		printk(KERN_CRIT "ibm-iic%d: failed to delete i2c adapter :(\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1719: FILE: drivers/i2c/i2c-ibm_iic.c:680:
+		printk(KERN_CRIT "ibm-iic%d: failed to delete i2c adapter :(\n",
+			dev->idx);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1721: FILE: drivers/i2c/i2c-ibm_iic.c:682:
+		if (dev->irq >= 0){
+		    iic_interrupt_mode(dev, 0);	

ERROR:SPACING: space required before the open brace '{'
#1721: FILE: drivers/i2c/i2c-ibm_iic.c:682:
+		if (dev->irq >= 0){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1722: FILE: drivers/i2c/i2c-ibm_iic.c:683:
+^I^I    iic_interrupt_mode(dev, 0);^I$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 20)
#1727: FILE: drivers/i2c/i2c-ibm_iic.c:688:
+		if (dev->irq >= 0){
+		    iic_interrupt_mode(dev, 0);	

ERROR:SPACING: space required before the open brace '{'
#1727: FILE: drivers/i2c/i2c-ibm_iic.c:688:
+		if (dev->irq >= 0){

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1728: FILE: drivers/i2c/i2c-ibm_iic.c:689:
+^I^I    iic_interrupt_mode(dev, 0);^I$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1731: FILE: drivers/i2c/i2c-ibm_iic.c:692:
+		iounmap((void*)dev->vaddr);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1736: FILE: drivers/i2c/i2c-ibm_iic.c:697:
+static struct ocp_device_id ibm_iic_ids[] __devinitdata = $

WARNING:HOTPLUG_SECTION: Using __devinitdata is unnecessary
#1736: FILE: drivers/i2c/i2c-ibm_iic.c:697:
+static struct ocp_device_id ibm_iic_ids[] __devinitdata = 

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1737: FILE: drivers/i2c/i2c-ibm_iic.c:698:
+static struct ocp_device_id ibm_iic_ids[] __devinitdata = 
+{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1745: FILE: drivers/i2c/i2c-ibm_iic.c:706:
+static struct ocp_driver ibm_iic_driver =
+{

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1746: FILE: drivers/i2c/i2c-ibm_iic.c:707:
+^I.name ^I^I= "ocp_iic",$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1758: FILE: drivers/i2c/i2c-ibm_iic.c:719:
+	printk(KERN_INFO "IBM IIC driver v" DRIVER_VERSION "\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1773: FILE: drivers/i2c/i2c-ibm_iic.h:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1774: FILE: drivers/i2c/i2c-ibm_iic.h:2:
+ * drivers/i2c/i2c-ibm_iic.h

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1777: FILE: drivers/i2c/i2c-ibm_iic.h:5:
+ * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1781: FILE: drivers/i2c/i2c-ibm_iic.h:9:
+ * Based on original work by $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1782: FILE: drivers/i2c/i2c-ibm_iic.h:10:
+ * ^IIan DaSilva  <idasilva@mvista.com>$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1784: FILE: drivers/i2c/i2c-ibm_iic.h:12:
+ * ^IMatt Porter  <mporter@mvista.com>$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1798: FILE: drivers/i2c/i2c-ibm_iic.h:26:
+#include <linux/i2c.h> $

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1820: FILE: drivers/i2c/i2c-ibm_iic.h:48:
+	volatile struct iic_regs *vaddr;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1834: FILE: drivers/i2c/i2c-ibm_iic.h:62:
+#define CNTL_CHT^I0x04 $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000335122.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 196 errors, 84 warnings, 25 checks, 875 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000335122.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
