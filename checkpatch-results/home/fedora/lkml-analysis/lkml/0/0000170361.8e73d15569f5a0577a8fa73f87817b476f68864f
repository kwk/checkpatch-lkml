WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
diff -ruNp 624-filewriter.patch-old/kernel/power/suspend_file.c 624-filewriter.patch-new/kernel/power/suspend_file.c

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#31: FILE: kernel/power/suspend_file.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:TRAILING_WHITESPACE: trailing whitespace
#37: FILE: kernel/power/suspend_file.c:7:
+ * $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#91: FILE: kernel/power/suspend_file.c:61:
+extern asmlinkage long sys_open(const char __user * filename, int flags, int mode);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#91: FILE: kernel/power/suspend_file.c:61:
+extern asmlinkage long sys_open(const char __user * filename, int flags, int mode);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#92: FILE: kernel/power/suspend_file.c:62:
+extern asmlinkage long sys_close(unsigned int fd);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#106: FILE: kernel/power/suspend_file.c:76:
+static struct inode * target_inode;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#108: FILE: kernel/power/suspend_file.c:78:
+static struct block_device * target_bdev;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#109: FILE: kernel/power/suspend_file.c:79:
+static int used_devt = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#110: FILE: kernel/power/suspend_file.c:80:
+static dev_t target_dev_t = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#111: FILE: kernel/power/suspend_file.c:81:
+static int target_firstblock = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#113: FILE: kernel/power/suspend_file.c:83:
+static int target_storage_available = 0;

CHECK:BIT_MACRO: Prefer using the BIT macro
#116: FILE: kernel/power/suspend_file.c:86:
+#define target_blocksperpage (1 << target_blockshift)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#121: FILE: kernel/power/suspend_file.c:91:
+/*
+static char * description[7] = {

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#132: FILE: kernel/power/suspend_file.c:102:
+static char HaveImage[] = "HaveImage\n";

CHECK:CAMELCASE: Avoid CamelCase: <HaveImage>
#132: FILE: kernel/power/suspend_file.c:102:
+static char HaveImage[] = "HaveImage\n";

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#133: FILE: kernel/power/suspend_file.c:103:
+static char NoImage[] =   "Suspend2\n";

CHECK:CAMELCASE: Avoid CamelCase: <NoImage>
#133: FILE: kernel/power/suspend_file.c:103:
+static char NoImage[] =   "Suspend2\n";

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#140: FILE: kernel/power/suspend_file.c:110:
+static unsigned long * header_link = NULL;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#140: FILE: kernel/power/suspend_file.c:110:
+static unsigned long * header_link = NULL;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#150: FILE: kernel/power/suspend_file.c:120:
+static int readahead_index = 0, readahead_submit_index = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#151: FILE: kernel/power/suspend_file.c:121:
+static int readahead_allocs = 0, readahead_frees = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#153: FILE: kernel/power/suspend_file.c:123:
+static char * filewriter_buffer = NULL;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#153: FILE: kernel/power/suspend_file.c:123:
+static char * filewriter_buffer = NULL;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#154: FILE: kernel/power/suspend_file.c:124:
+static int filewriter_buffer_posn = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#155: FILE: kernel/power/suspend_file.c:125:
+static int filewriter_page_index = 0;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#182: FILE: kernel/power/suspend_file.c:152:
+	struct extent * pd1start_block_extent;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#201: FILE: kernel/power/suspend_file.c:171:
+ * get that location when saving or reloading pageset1.*/

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#202: FILE: kernel/power/suspend_file.c:172:
+static int current_stream = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to NULL
#205: FILE: kernel/power/suspend_file.c:175:
+static struct extent * currentblockextent = NULL;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#205: FILE: kernel/power/suspend_file.c:175:
+static struct extent * currentblockextent = NULL;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#206: FILE: kernel/power/suspend_file.c:176:
+static unsigned long currentblockoffset = 0;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#209: FILE: kernel/power/suspend_file.c:179:
+static struct submit_params * first_header_submit_info = NULL,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: kernel/power/suspend_file.c:180:
+ * last_header_submit_info = NULL, * current_header_submit_info = NULL;$

ERROR:SPACING: space prohibited after that '*' (ctx:ExW)
#210: FILE: kernel/power/suspend_file.c:180:
+ * last_header_submit_info = NULL, * current_header_submit_info = NULL;
  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that '*' (ctx:WxW)
#210: FILE: kernel/power/suspend_file.c:180:
+ * last_header_submit_info = NULL, * current_header_submit_info = NULL;
                                    ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#216: FILE: kernel/power/suspend_file.c:186:
+/* $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#220: FILE: kernel/power/suspend_file.c:190:
+static int get_target_type(struct inode * inode)

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#222: FILE: kernel/power/suspend_file.c:192:
+	switch (inode->i_mode & S_IFMT) {
+		case S_IFSOCK:
[...]
+		case S_IFLNK:
[...]
+		case S_IFREG:
[...]
+		case S_IFBLK:
[...]
+		case S_IFDIR:
[...]
+		case S_IFCHR:
[...]
+		case S_IFIFO:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_WHITESPACE: trailing whitespace
#247: FILE: kernel/power/suspend_file.c:217:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#254: FILE: kernel/power/suspend_file.c:224:
+^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#255: FILE: kernel/power/suspend_file.c:225:
+	if (target_is_normal_file()) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#260: FILE: kernel/power/suspend_file.c:230:
+			sector_t new_sector = bmap(target_inode, i);
+			if (!new_sector) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#260: FILE: kernel/power/suspend_file.c:230:
+			if (!new_sector) {
[...]
+			} else
[...]

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#264: FILE: kernel/power/suspend_file.c:234:
+					extent_min = extent_max = i;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:BRACES: Unbalanced braces around else statement
#265: FILE: kernel/power/suspend_file.c:235:
+			} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#268: FILE: kernel/power/suspend_file.c:238:
+^I$

CHECK:BRACES: Unbalanced braces around else statement
#270: FILE: kernel/power/suspend_file.c:240:
+	} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#277: FILE: kernel/power/suspend_file.c:247:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#285: FILE: kernel/power/suspend_file.c:255:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#289: FILE: kernel/power/suspend_file.c:259:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#290: FILE: kernel/power/suspend_file.c:260:
+^I^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#291: FILE: kernel/power/suspend_file.c:261:
+^I^I^I * I'd love to be able to fill in holes and resize $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#297: FILE: kernel/power/suspend_file.c:267:
+^I^I^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#303: FILE: kernel/power/suspend_file.c:273:
+			if (new_sector == extent_max + 1)
[...]
+			else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#305: FILE: kernel/power/suspend_file.c:275:
+			else {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#307: FILE: kernel/power/suspend_file.c:277:
+					append_extent_to_extent_chain(

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#310: FILE: kernel/power/suspend_file.c:280:
+				extent_min = extent_max = new_sector;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#315: FILE: kernel/power/suspend_file.c:285:
+			append_extent_to_extent_chain(&block_chain,
+				       extent_min, extent_max);

CHECK:BRACES: Unbalanced braces around else statement
#316: FILE: kernel/power/suspend_file.c:286:
+	} else

CHECK:SPACING: spaces preferred around that '-' (ctx:WxV)
#320: FILE: kernel/power/suspend_file.c:290:
+			 last_header_submit_info->block[target_blocksperpage -1]
 			                                                     ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#321: FILE: kernel/power/suspend_file.c:291:
+				+ 1: 0;
 				   ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#324: FILE: kernel/power/suspend_file.c:294:
+			append_extent_to_extent_chain(&block_chain,
+			 new_start, new_start +

ERROR:TRAILING_WHITESPACE: trailing whitespace
#325: FILE: kernel/power/suspend_file.c:295:
+^I^I^I (min(main_pages, target_storage_available) << $

ERROR:CODE_INDENT: code indent should use tabs where possible
#326: FILE: kernel/power/suspend_file.c:296:
+^I^I^I  ^I^Itarget_blockshift) - 1);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#326: FILE: kernel/power/suspend_file.c:296:
+^I^I^I  ^I^Itarget_blockshift) - 1);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#333: FILE: kernel/power/suspend_file.c:303:
+^I^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#347: FILE: kernel/power/suspend_file.c:317:
+^I}^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#352: FILE: kernel/power/suspend_file.c:322:
+^Iif ((suspend_bio_ops.get_block_size(target_bdev) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#355: FILE: kernel/power/suspend_file.c:325:
+^I    ^I^I^I == -EINVAL)) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#355: FILE: kernel/power/suspend_file.c:325:
+^I    ^I^I^I == -EINVAL)) {$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#356: FILE: kernel/power/suspend_file.c:326:
+		printk(KERN_ERR name_suspend "Filewriter: Failed to set the blocksize.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#361: FILE: kernel/power/suspend_file.c:331:
+^I^I$

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#362: FILE: kernel/power/suspend_file.c:332:
+		
+}

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#390: FILE: kernel/power/suspend_file.c:360:
+static int try_to_parse_target_dev_t(char * commandline)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#406: FILE: kernel/power/suspend_file.c:376:
+			suspend_early_boot_message(1, SUSPEND_CONTINUE_REQ,
+				"Failed to translate \"%s\" into a device id.\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#409: FILE: kernel/power/suspend_file.c:379:
+			printk(name_suspend "Can't translate \"%s\" into a device id yet.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#410: FILE: kernel/power/suspend_file.c:380:
+			printk(name_suspend "Can't translate \"%s\" into a device id yet.\n",
+					commandline);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#413: FILE: kernel/power/suspend_file.c:383:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#417: FILE: kernel/power/suspend_file.c:387:
+		printk("Open by devnum returned %p given %x.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#418: FILE: kernel/power/suspend_file.c:388:
+		printk("Open by devnum returned %p given %x.\n",
+				target_bdev, target_dev_t);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#422: FILE: kernel/power/suspend_file.c:392:
+			suspend_early_boot_message(1, SUSPEND_CONTINUE_REQ,
+				"Failed to get access to the device on which"

WARNING:SPLIT_STRING: quoted string split across lines
#423: FILE: kernel/power/suspend_file.c:393:
+				"Failed to get access to the device on which"
+				" Software Suspend's header should be found.");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#425: FILE: kernel/power/suspend_file.c:395:
+			printk("Failed to get access to the device on which "

WARNING:SPLIT_STRING: quoted string split across lines
#426: FILE: kernel/power/suspend_file.c:396:
+			printk("Failed to get access to the device on which "
+				"Software Suspend's header should be found.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#435: FILE: kernel/power/suspend_file.c:405:
+ ^I/* $

ERROR:CODE_INDENT: code indent should use tabs where possible
#435: FILE: kernel/power/suspend_file.c:405:
+ ^I/* $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#435: FILE: kernel/power/suspend_file.c:405:
+ ^I/* $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#435: FILE: kernel/power/suspend_file.c:405:
+ ^I/* $

CHECK:SPACING: No space is necessary after a cast
#440: FILE: kernel/power/suspend_file.c:410:
+	memset((char *) &filewriter_header_data, 0, sizeof(filewriter_header_data));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#447: FILE: kernel/power/suspend_file.c:417:
+int parse_signature(char * header, int restore)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#457: FILE: kernel/power/suspend_file.c:427:
+^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#474: FILE: kernel/power/suspend_file.c:444:
+static int prepare_signature(struct submit_params * header_page_info,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#475: FILE: kernel/power/suspend_file.c:445:
+static int prepare_signature(struct submit_params * header_page_info,
+		char * current_header)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#475: FILE: kernel/power/suspend_file.c:445:
+		char * current_header)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#477: FILE: kernel/power/suspend_file.c:447:
+^I/* $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#492: FILE: kernel/power/suspend_file.c:462:
+		struct submit_params * next = first_header_submit_info->next;

WARNING:LINE_SPACING: Missing a blank line after declarations
#493: FILE: kernel/power/suspend_file.c:463:
+		struct submit_params * next = first_header_submit_info->next;
+		kfree(first_header_submit_info);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#496: FILE: kernel/power/suspend_file.c:466:
+^I$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'free_header_data', this function's name, in a string
#498: FILE: kernel/power/suspend_file.c:468:
+			" Freed swap pages in free_header_data.\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#499: FILE: kernel/power/suspend_file.c:469:
+	first_header_submit_info = last_header_submit_info = NULL;

WARNING:RETURN_VOID: void function return statements are not generally useful
#501: FILE: kernel/power/suspend_file.c:471:
+	return;
+}

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#510: FILE: kernel/power/suspend_file.c:480:
+	switch (target_type) {
+		case 0:
+		case 5:
+		case 6: /* Socket, Char, Fifi */
[...]
+		case 2: /* Regular file: current size - holes + free space on part */
[...]
+		case 3: /* Block device */

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#521: FILE: kernel/power/suspend_file.c:491:
+					result = (unsigned long)target_bdev->bd_part->nr_sects >> (PAGE_SHIFT - 9);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 115 exceeds 100 columns
#523: FILE: kernel/power/suspend_file.c:493:
+					result = (unsigned long)target_bdev->bd_disk->capacity >> (PAGE_SHIFT - 9);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#525: FILE: kernel/power/suspend_file.c:495:
+				printk("bdev->bd_disk null.\n");

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#540: FILE: kernel/power/suspend_file.c:510:
+	if (target_is_normal_file()) {
[...]
+	} else
[...]

CHECK:SPACING: No space is necessary after a cast
#541: FILE: kernel/power/suspend_file.c:511:
+		result = (int) target_storage_available;

CHECK:BRACES: Unbalanced braces around else statement
#542: FILE: kernel/power/suspend_file.c:512:
+	} else

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#556: FILE: kernel/power/suspend_file.c:526:
+		printk("Open file %s returned %d.\n", filewriter_target, target_fd);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#561: FILE: kernel/power/suspend_file.c:531:
+	BUG_ON(target_bdev);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#599: FILE: kernel/power/suspend_file.c:569:
+	header_pages = main_pages = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#609: FILE: kernel/power/suspend_file.c:579:
+^I$

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#618: FILE: kernel/power/suspend_file.c:588:
+	for (i= header_pages; i < space_requested; i++) {
 	      ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#619: FILE: kernel/power/suspend_file.c:589:
+		struct submit_params * new_submit_param;

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*new_submit_param)...) over kmalloc(sizeof(struct submit_params)...)
#622: FILE: kernel/power/suspend_file.c:592:
+		new_submit_param = kmalloc(sizeof(struct submit_params), GFP_ATOMIC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:TRAILING_WHITESPACE: trailing whitespace
#623: FILE: kernel/power/suspend_file.c:593:
+^I^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#625: FILE: kernel/power/suspend_file.c:595:
+			printk("Failed to kmalloc a struct submit param.\n");

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#625: FILE: kernel/power/suspend_file.c:595:
+		if (!new_submit_param) {
+			printk("Failed to kmalloc a struct submit param.\n");

CHECK:BRACES: Unbalanced braces around else statement
#635: FILE: kernel/power/suspend_file.c:605:
+		} else

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#636: FILE: kernel/power/suspend_file.c:606:
+			last_header_submit_info = first_header_submit_info =

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#653: FILE: kernel/power/suspend_file.c:623:
+				struct extent * oldfirst =

ERROR:TRAILING_WHITESPACE: trailing whitespace
#662: FILE: kernel/power/suspend_file.c:632:
+^I^I^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#674: FILE: kernel/power/suspend_file.c:644:
+		suspend_message(SUSPEND_WRITER, SUSPEND_MEDIUM, 0,
+			" Got header page %d/%d. Dev is %x. Block is %lu. "

WARNING:SPLIT_STRING: quoted string split across lines
#675: FILE: kernel/power/suspend_file.c:645:
+			" Got header page %d/%d. Dev is %x. Block is %lu. "
+			"Target block size is %d.\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#692: FILE: kernel/power/suspend_file.c:662:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#702: FILE: kernel/power/suspend_file.c:672:
+	suspend_message(SUSPEND_WRITER, SUSPEND_MEDIUM, 0,
+		"Finished with block_chain.size == %d.\n",

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#711: FILE: kernel/power/suspend_file.c:681:
+static int filewriter_write_header_chunk(char * buffer, int buffer_size);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#715: FILE: kernel/power/suspend_file.c:685:
+	struct extent * extent;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#716: FILE: kernel/power/suspend_file.c:686:
+^I$

CHECK:SPACING: No space is necessary after a cast
#717: FILE: kernel/power/suspend_file.c:687:
+	filewriter_buffer = (char *) get_zeroed_page(GFP_ATOMIC);

CHECK:SPACING: No space is necessary after a cast
#719: FILE: kernel/power/suspend_file.c:689:
+		(unsigned long *) (filewriter_buffer + BYTES_PER_HEADER_PAGE);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#724: FILE: kernel/power/suspend_file.c:694:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#746: FILE: kernel/power/suspend_file.c:716:
+^Ifilewriter_write_header_chunk((char *) &filewriter_header_data, $

CHECK:SPACING: No space is necessary after a cast
#746: FILE: kernel/power/suspend_file.c:716:
+	filewriter_write_header_chunk((char *) &filewriter_header_data, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#747: FILE: kernel/power/suspend_file.c:717:
+	filewriter_write_header_chunk((char *) &filewriter_header_data, 
+			sizeof(filewriter_header_data));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#752: FILE: kernel/power/suspend_file.c:722:
+static int filewriter_write_header_chunk(char * buffer, int buffer_size)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#755: FILE: kernel/power/suspend_file.c:725:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#756: FILE: kernel/power/suspend_file.c:726:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#758: FILE: kernel/power/suspend_file.c:728:
+^I * sizeof(swp_entry_t) bytes for links between pages. This is $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#765: FILE: kernel/power/suspend_file.c:735:
+	suspend_message(SUSPEND_WRITER, SUSPEND_HIGH, 0,
+		"\nStart of write_header_chunk loop with %d bytes to store.\n",

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#769: FILE: kernel/power/suspend_file.c:739:
+		char * source_start = buffer + buffer_size - bytes_left;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#770: FILE: kernel/power/suspend_file.c:740:
+		char * dest_start = filewriter_buffer + filewriter_buffer_posn;

WARNING:LINE_SPACING: Missing a blank line after declarations
#773: FILE: kernel/power/suspend_file.c:743:
+		sector_t next_header_page;
+		if (bytes_left <= dest_capacity) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#778: FILE: kernel/power/suspend_file.c:748:
+^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#783: FILE: kernel/power/suspend_file.c:753:
+		BUG_ON(!current_header_submit_info);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#795: FILE: kernel/power/suspend_file.c:765:
+		suspend_message(SUSPEND_WRITER, SUSPEND_HIGH, 0,
+			"Writing header page %d. "

WARNING:SPLIT_STRING: quoted string split across lines
#796: FILE: kernel/power/suspend_file.c:766:
+			"Writing header page %d. "
+			"Dev is %x. Block is %lu. Blocksperpage is %d. Bd_block_size is %d.\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#802: FILE: kernel/power/suspend_file.c:772:
+^I^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#823: FILE: kernel/power/suspend_file.c:793:
+		suspend_message(SUSPEND_WRITER, SUSPEND_HIGH, 0,
+			"Writing header page %d. "

WARNING:SPLIT_STRING: quoted string split across lines
#824: FILE: kernel/power/suspend_file.c:794:
+			"Writing header page %d. "
+			"Dev is %x. Block is %lu. Blocksperpage is %d.\n",

ERROR:TRAILING_WHITESPACE: trailing whitespace
#829: FILE: kernel/power/suspend_file.c:799:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#832: FILE: kernel/power/suspend_file.c:802:
+^I^Isuspend_bio_ops.submit_io(WRITE, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#843: FILE: kernel/power/suspend_file.c:813:
+^I^I$

CHECK:SPACING: No space is necessary after a cast
#847: FILE: kernel/power/suspend_file.c:817:
+	free_pages((unsigned long) filewriter_buffer, 0);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#850: FILE: kernel/power/suspend_file.c:820:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#860: FILE: kernel/power/suspend_file.c:830:
+ * $

CHECK:SPACING: No space is necessary after a cast
#879: FILE: kernel/power/suspend_file.c:849:
+	filewriter_buffer = (char *) get_zeroed_page(GFP_ATOMIC);

CHECK:SPACING: No space is necessary after a cast
#884: FILE: kernel/power/suspend_file.c:854:
+			virt_to_page((unsigned long) filewriter_buffer));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#885: FILE: kernel/power/suspend_file.c:855:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#887: FILE: kernel/power/suspend_file.c:857:
+	suspend_message(SUSPEND_WRITER, SUSPEND_HIGH, 0,
+		"Retrieving %d bytes from %x:%x to page %d, %p-%p.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#893: FILE: kernel/power/suspend_file.c:863:
+	memcpy(&filewriter_header_data,
+			filewriter_buffer + filewriter_buffer_posn,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#895: FILE: kernel/power/suspend_file.c:865:
+^I$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#901: FILE: kernel/power/suspend_file.c:871:
+static int filewriter_read_header_chunk(char * buffer, int buffer_size)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#904: FILE: kernel/power/suspend_file.c:874:
+^I$

CHECK:SPACING: No space is necessary after a cast
#908: FILE: kernel/power/suspend_file.c:878:
+		   *((sector_t *) (filewriter_buffer + BYTES_PER_HEADER_PAGE));

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#909: FILE: kernel/power/suspend_file.c:879:
+		char * dest_start = buffer + buffer_size - bytes_left;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#910: FILE: kernel/power/suspend_file.c:880:
+		char * source_start =

CHECK:SPACING: No space is necessary after a cast
#938: FILE: kernel/power/suspend_file.c:908:
+	free_pages((unsigned long) filewriter_buffer, 0);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#951: FILE: kernel/power/suspend_file.c:921:
+	struct extent * extent;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#952: FILE: kernel/power/suspend_file.c:922:
+^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#977: FILE: kernel/power/suspend_file.c:947:
+	BUG_ON(!currentblockextent);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#987: FILE: kernel/power/suspend_file.c:957:
+static int filewriter_write_chunk(struct page * buffer_page)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#992: FILE: kernel/power/suspend_file.c:962:
+	BUG_ON(!currentblockextent);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#996: FILE: kernel/power/suspend_file.c:966:
+^I^I$

ERROR:SPACING: space required before the open parenthesis '('
#1003: FILE: kernel/power/suspend_file.c:973:
+	if(!submit_params.block[0])

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1008: FILE: kernel/power/suspend_file.c:978:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1022: FILE: kernel/power/suspend_file.c:992:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1024: FILE: kernel/power/suspend_file.c:994:
+^I$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1043: FILE: kernel/power/suspend_file.c:1013:
+	BUG_ON(!currentblockextent);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1049: FILE: kernel/power/suspend_file.c:1019:
+	readahead_index = readahead_submit_index = -1;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1050: FILE: kernel/power/suspend_file.c:1020:
+	readahead_allocs = readahead_frees = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1055: FILE: kernel/power/suspend_file.c:1025:
+static int filewriter_begin_read_chunk(struct page * page, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1055: FILE: kernel/power/suspend_file.c:1025:
+static int filewriter_begin_read_chunk(struct page * page, 

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1056: FILE: kernel/power/suspend_file.c:1026:
+static int filewriter_begin_read_chunk(struct page * page, 
+		int readahead_index, int sync)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1061: FILE: kernel/power/suspend_file.c:1031:
+	BUG_ON(!currentblockextent);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1062: FILE: kernel/power/suspend_file.c:1032:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1066: FILE: kernel/power/suspend_file.c:1036:
+^I^I$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1073: FILE: kernel/power/suspend_file.c:1043:
+	if ((i = suspend_bio_ops.submit_io(READ, &submit_params, sync)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1088: FILE: kernel/power/suspend_file.c:1058:
+static int filewriter_read_chunk(struct page * buffer_page, int sync)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1091: FILE: kernel/power/suspend_file.c:1061:
+	unsigned long * virt;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1099: FILE: kernel/power/suspend_file.c:1069:
+		readahead_index = readahead_submit_index = 0;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1105: FILE: kernel/power/suspend_file.c:1075:
+		 * all the readahead previously submitted */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1110: FILE: kernel/power/suspend_file.c:1080:
+^I$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1117: FILE: kernel/power/suspend_file.c:1087:
+		last_result = filewriter_begin_read_chunk(

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1118: FILE: kernel/power/suspend_file.c:1088:
+^I^I^Isuspend_bio_ops.readahead_pages[readahead_submit_index], $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1121: FILE: kernel/power/suspend_file.c:1091:
+			printk("Begin read chunk for page %d returned %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1122: FILE: kernel/power/suspend_file.c:1092:
+			printk("Begin read chunk for page %d returned %d.\n",
+				readahead_submit_index, last_result);

ERROR:SPACING: space required before the open parenthesis '('
#1132: FILE: kernel/power/suspend_file.c:1102:
+	} while((!last_result) && (readahead_submit_index != readahead_index) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1140: FILE: kernel/power/suspend_file.c:1110:
+	memcpy(virt, page_address(suspend_bio_ops.readahead_pages[readahead_index]),
+			PAGE_SIZE);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1165: FILE: kernel/power/suspend_file.c:1135:
+	BUG_ON(readahead_allocs != readahead_frees);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1170: FILE: kernel/power/suspend_file.c:1140:
+ * $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1174: FILE: kernel/power/suspend_file.c:1144:
+	char * cur;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1176: FILE: kernel/power/suspend_file.c:1146:
+^I$

CHECK:SPACING: No space is necessary after a cast
#1177: FILE: kernel/power/suspend_file.c:1147:
+	cur = (char *) get_zeroed_page(GFP_ATOMIC);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1179: FILE: kernel/power/suspend_file.c:1149:
+		printk("Unable to allocate a page for restoring the image signature.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1191: FILE: kernel/power/suspend_file.c:1161:
+^I/* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1192: FILE: kernel/power/suspend_file.c:1162:
+^I * We don't do a sanity check here: we want to restore the swap $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1194: FILE: kernel/power/suspend_file.c:1164:
+^I * $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1198: FILE: kernel/power/suspend_file.c:1168:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1203: FILE: kernel/power/suspend_file.c:1173:
+^I^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1214: FILE: kernel/power/suspend_file.c:1184:
+		printk(KERN_WARNING name_suspend "Image invalidated.\n");

CHECK:SPACING: No space is necessary after a cast
#1217: FILE: kernel/power/suspend_file.c:1187:
+	free_pages((unsigned long) cur, 0);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1240: FILE: kernel/power/suspend_file.c:1210:
+static int filewriter_print_debug_stats(char * buffer, int size)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1244: FILE: kernel/power/suspend_file.c:1214:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1253: FILE: kernel/power/suspend_file.c:1223:
+^I$

ERROR:SPACING: spaces required around that '+=' (ctx:VxW)
#1254: FILE: kernel/power/suspend_file.c:1224:
+	len+= suspend_snprintf(buffer+len, size-len, "  Storage available for image: %ld pages.\n",
 	   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1254: FILE: kernel/power/suspend_file.c:1224:
+	len+= suspend_snprintf(buffer+len, size-len, "  Storage available for image: %ld pages.\n",
 	                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1254: FILE: kernel/power/suspend_file.c:1224:
+	len+= suspend_snprintf(buffer+len, size-len, "  Storage available for image: %ld pages.\n",
 	                                       ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1284: FILE: kernel/power/suspend_file.c:1254:
+	char * diskpage;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1285: FILE: kernel/power/suspend_file.c:1255:
+^I$

CHECK:SPACING: No space is necessary after a cast
#1289: FILE: kernel/power/suspend_file.c:1259:
+	diskpage = (char *) get_zeroed_page(GFP_ATOMIC);

CHECK:SPACING: No space is necessary after a cast
#1296: FILE: kernel/power/suspend_file.c:1266:
+	free_pages((unsigned long) diskpage, 0);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1301: FILE: kernel/power/suspend_file.c:1271:
+		printk(KERN_ERR name_suspend

WARNING:SPLIT_STRING: quoted string split across lines
#1303: FILE: kernel/power/suspend_file.c:1273:
+			"Unable to find a signature. Could you have moved "
+			"the file?\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1318: FILE: kernel/power/suspend_file.c:1288:
+	char * diskpage;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1320: FILE: kernel/power/suspend_file.c:1290:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1322: FILE: kernel/power/suspend_file.c:1292:
+		printk("Not even trying to record attempt at resuming"

WARNING:SPLIT_STRING: quoted string split across lines
#1323: FILE: kernel/power/suspend_file.c:1293:
+		printk("Not even trying to record attempt at resuming"
+				" because target_dev_t is not set.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1326: FILE: kernel/power/suspend_file.c:1296:
+^I$

CHECK:SPACING: No space is necessary after a cast
#1327: FILE: kernel/power/suspend_file.c:1297:
+	diskpage = (char *) get_zeroed_page(GFP_ATOMIC);

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#1333: FILE: kernel/power/suspend_file.c:1303:
+	switch (signature_found) {
+		case 1:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1338: FILE: kernel/power/suspend_file.c:1308:
+^I$

CHECK:SPACING: No space is necessary after a cast
#1342: FILE: kernel/power/suspend_file.c:1312:
+	free_pages((unsigned long) diskpage, 0);

WARNING:RETURN_VOID: void function return statements are not generally useful
#1344: FILE: kernel/power/suspend_file.c:1314:
+	return;
+}

WARNING:TYPO_SPELLING: 'convertable' may be misspelled - perhaps 'convertible'?
#1354: FILE: kernel/power/suspend_file.c:1324:
+ * DEVNAME is convertable to a dev_t by name_to_dev_t
               ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1357: FILE: kernel/power/suspend_file.c:1327:
+ * BLOCKSIZE is the logical blocksize >= 512 & <= PAGE_SIZE, $

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1365: FILE: kernel/power/suspend_file.c:1335:
+static int filewriter_parse_image_location(char * commandline, int only_writer)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1368: FILE: kernel/power/suspend_file.c:1338:
+	char * diskpage = NULL;

CHECK:BRACES: braces {} should be used on all arms of this statement
#1371: FILE: kernel/power/suspend_file.c:1341:
+	if (strncmp(commandline, "file:", 5)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1374: FILE: kernel/power/suspend_file.c:1344:
+	} else

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1377: FILE: kernel/power/suspend_file.c:1347:
+	devstart = thischar = commandline;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1379: FILE: kernel/power/suspend_file.c:1349:
+	while ((*thischar != ':') && (*thischar != '@') &&
+		((thischar - commandline) < 250) && (*thischar))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1395: FILE: kernel/power/suspend_file.c:1365:
+^I$

CHECK:SPACING: No space is necessary after a cast
#1397: FILE: kernel/power/suspend_file.c:1367:
+		target_firstblock = (int) simple_strtoul(colon + 1, NULL, 0);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1397: FILE: kernel/power/suspend_file.c:1367:
+		target_firstblock = (int) simple_strtoul(colon + 1, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:BRACES: braces {} should be used on all arms of this statement
#1401: FILE: kernel/power/suspend_file.c:1371:
+	if (at_symbol) {
[...]
+	} else
[...]

CHECK:SPACING: No space is necessary after a cast
#1402: FILE: kernel/power/suspend_file.c:1372:
+		target_blocksize = (int) simple_strtoul(at_symbol + 1, NULL, 0);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1402: FILE: kernel/power/suspend_file.c:1372:
+		target_blocksize = (int) simple_strtoul(at_symbol + 1, NULL, 0);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1404: FILE: kernel/power/suspend_file.c:1374:
+			printk("Filewriter: Blocksizes are usually a multiple of 512. Don't expect this to work!\n");

CHECK:BRACES: Unbalanced braces around else statement
#1405: FILE: kernel/power/suspend_file.c:1375:
+	} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1407: FILE: kernel/power/suspend_file.c:1377:
+^I$

CHECK:SPACING: No space is necessary after a cast
#1418: FILE: kernel/power/suspend_file.c:1388:
+	diskpage = (char *) get_zeroed_page(GFP_ATOMIC);

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#1419: FILE: kernel/power/suspend_file.c:1389:
+	temp_result = suspend_bio_ops.bdev_page_io(READ, target_bdev, target_firstblock, virt_to_page(diskpage));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1422: FILE: kernel/power/suspend_file.c:1392:
+^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1424: FILE: kernel/power/suspend_file.c:1394:
+		printk(KERN_ERR name_suspend "Filewriter: Failed to submit I/O.\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#1430: FILE: kernel/power/suspend_file.c:1400:
+	if (signature_found != -1) {
[...]
+	} else
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1431: FILE: kernel/power/suspend_file.c:1401:
+		printk(KERN_ERR name_suspend "Filewriter: File signature found.\n");

CHECK:BRACES: Unbalanced braces around else statement
#1433: FILE: kernel/power/suspend_file.c:1403:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1434: FILE: kernel/power/suspend_file.c:1404:
+		printk(KERN_ERR name_suspend "Filewriter: Sorry. No signature found at specified location.\n");

CHECK:SPACING: No space is necessary after a cast
#1438: FILE: kernel/power/suspend_file.c:1408:
+		free_page((unsigned long) diskpage);

CHECK:SPACING: No space is necessary after a cast
#1444: FILE: kernel/power/suspend_file.c:1414:
+	char * buffer = (char *) get_zeroed_page(GFP_ATOMIC);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1444: FILE: kernel/power/suspend_file.c:1414:
+	char * buffer = (char *) get_zeroed_page(GFP_ATOMIC);

CHECK:SPACING: No space is necessary after a cast
#1445: FILE: kernel/power/suspend_file.c:1415:
+	char * buffer2 = (char *) get_zeroed_page(GFP_ATOMIC);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1445: FILE: kernel/power/suspend_file.c:1415:
+	char * buffer2 = (char *) get_zeroed_page(GFP_ATOMIC);

ERROR:SPACING: space required before the open parenthesis '('
#1449: FILE: kernel/power/suspend_file.c:1419:
+	if(target_bdev)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1455: FILE: kernel/power/suspend_file.c:1425:
+		printk("Filewriter: Unable to open %s.\n", filewriter_target);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1460: FILE: kernel/power/suspend_file.c:1430:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1463: FILE: kernel/power/suspend_file.c:1433:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1465: FILE: kernel/power/suspend_file.c:1435:
+		printk("Filewriter: %s is a link or directory. You can't suspend to them!\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1466: FILE: kernel/power/suspend_file.c:1436:
+		printk("Filewriter: %s is a link or directory. You can't suspend to them!\n",
+				filewriter_target);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1474: FILE: kernel/power/suspend_file.c:1444:
+	if (target_bdev && sector) {
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1481: FILE: kernel/power/suspend_file.c:1451:
+^I^Ioffset += snprintf(buffer + offset, PAGE_SIZE - offset, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1483: FILE: kernel/power/suspend_file.c:1453:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1491: FILE: kernel/power/suspend_file.c:1461:
+^I^I$

CHECK:BRACES: Unbalanced braces around else statement
#1492: FILE: kernel/power/suspend_file.c:1462:
+	} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1495: FILE: kernel/power/suspend_file.c:1465:
+^I^I^I$

CHECK:SPACING: No space is necessary after a cast
#1503: FILE: kernel/power/suspend_file.c:1473:
+	free_pages((unsigned long) buffer, 0);

CHECK:SPACING: No space is necessary after a cast
#1504: FILE: kernel/power/suspend_file.c:1474:
+	free_pages((unsigned long) buffer2, 0);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1514: FILE: kernel/power/suspend_file.c:1484:
+static int filewriter_save_config_info(char * buffer)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1527: FILE: kernel/power/suspend_file.c:1497:
+static void filewriter_load_config_info(char * buffer, int size)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1540: FILE: kernel/power/suspend_file.c:1510:
+static struct suspend_proc_data filewriter_proc_data[] = {
+

WARNING:TABSTOP: Statements should start on a tabstop
#1549: FILE: kernel/power/suspend_file.c:1519:
+		 }

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1590: FILE: kernel/power/suspend_file.c:1560:
+^I^I .storage_available ^I= filewriter_storage_available,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1616: FILE: kernel/power/suspend_file.c:1586:
+^I$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1617: FILE: kernel/power/suspend_file.c:1587:
+	printk("Software Suspend FileWriter loading.\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1619: FILE: kernel/power/suspend_file.c:1589:
+	if (!(result = suspend_register_plugin(&filewriterops))) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1619: FILE: kernel/power/suspend_file.c:1589:
+	if (!(result = suspend_register_plugin(&filewriterops))) {
[...]
+	} else
[...]

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1620: FILE: kernel/power/suspend_file.c:1590:
+		for (i=0; i< numfiles; i++)
 		      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxW)
#1620: FILE: kernel/power/suspend_file.c:1590:
+		for (i=0; i< numfiles; i++)
 		           ^

CHECK:BRACES: Unbalanced braces around else statement
#1622: FILE: kernel/power/suspend_file.c:1592:
+	} else

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1623: FILE: kernel/power/suspend_file.c:1593:
+		printk("Software Suspend FileWriter unable to register!\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1632: FILE: kernel/power/suspend_file.c:1602:
+	printk("Software Suspend FileWriter unloading.\n");

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#1634: FILE: kernel/power/suspend_file.c:1604:
+	for (i=0; i< numfiles; i++)
 	      ^

ERROR:SPACING: spaces required around that '<' (ctx:VxW)
#1634: FILE: kernel/power/suspend_file.c:1604:
+	for (i=0; i< numfiles; i++)
 	           ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000170361.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 146 errors, 65 warnings, 84 checks, 1616 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000170361.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
