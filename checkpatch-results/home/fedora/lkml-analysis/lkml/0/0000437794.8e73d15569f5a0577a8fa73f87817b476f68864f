ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#42: 
--- a/Documentation/Configure.help	Thu Aug 22 15:07:46 2002

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#50: FILE: Documentation/Configure.help:257:
+  This option enables support for the IBM x440 and related multi-CEC $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#52: FILE: Documentation/Configure.help:259:
+  "cyclone" as a boot option to make use of a performance counter on $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#53: FILE: Documentation/Configure.help:260:
+  the Cyclone chipset for calculating do_gettimeofday, greatly $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#54: FILE: Documentation/Configure.help:261:
+  improving performance when compared to the PIT based method. $

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#93: FILE: arch/i386/kernel/setup.c:1177:
+int tsc_disable __initdata = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#104: FILE: arch/i386/kernel/time.c:259:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#114: FILE: arch/i386/kernel/time.c:269:
+static int use_cyclone __initdata = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#115: FILE: arch/i386/kernel/time.c:270:
+extern int tsc_disable;

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#117: FILE: arch/i386/kernel/time.c:272:
+static int __init cyclone_setup(char *str) $

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#123: FILE: arch/i386/kernel/time.c:278:
+__setup("cyclone", cyclone_setup);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#125: FILE: arch/i386/kernel/time.c:280:
+
+

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#126: FILE: arch/i386/kernel/time.c:281:
+static u32* cyclone_timer;	/*Cyclone MPMC0 register*/

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#134: FILE: arch/i386/kernel/time.c:289:
+	if(cyclone_timer)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#145: FILE: arch/i386/kernel/time.c:300:
+	count = ((LATCH-1) - count) * TICK_SIZE;
 	               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#146: FILE: arch/i386/kernel/time.c:301:
+	delay_at_last_interrupt = (count + LATCH/2) / LATCH;
 	                                        ^

ERROR:SPACING: space required before the open parenthesis '('
#153: FILE: arch/i386/kernel/time.c:308:
+	if(!cyclone_timer)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#162: FILE: arch/i386/kernel/time.c:317:
+^I/*convert cyclone ticks to microseconds*/^I$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#163: FILE: arch/i386/kernel/time.c:318:
+	offset = offset/100;	/*XXX slow, can we speed this up?*/
 	               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#171: FILE: arch/i386/kernel/time.c:326:
+^Iu32* reg;^I$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#171: FILE: arch/i386/kernel/time.c:326:
+	u32* reg;	

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#176: FILE: arch/i386/kernel/time.c:331:
+	printk(KERN_INFO "Summit chipset: Starting Cyclone Clock.\n");

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#179: FILE: arch/i386/kernel/time.c:334:
+	pageaddr = (CYCLONE_CBAR_ADDR)&PAGE_MASK;
 	                              ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#180: FILE: arch/i386/kernel/time.c:335:
+	offset = (CYCLONE_CBAR_ADDR)&(~PAGE_MASK);
 	                            ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#182: FILE: arch/i386/kernel/time.c:337:
+	reg = (u32*)(fix_to_virt(FIX_CYCLONE_TIMER) + offset);

ERROR:SPACING: space required before the open brace '{'
#183: FILE: arch/i386/kernel/time.c:338:
+	if(!reg){

ERROR:SPACING: space required before the open parenthesis '('
#183: FILE: arch/i386/kernel/time.c:338:
+	if(!reg){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#184: FILE: arch/i386/kernel/time.c:339:
+		printk(KERN_ERR "Summit chipset: Could not find valid CBAR register.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#187: FILE: arch/i386/kernel/time.c:342:
+^Ibase = *reg;^I$

ERROR:SPACING: space required before the open brace '{'
#188: FILE: arch/i386/kernel/time.c:343:
+	if(!base){

ERROR:SPACING: space required before the open parenthesis '('
#188: FILE: arch/i386/kernel/time.c:343:
+	if(!base){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#189: FILE: arch/i386/kernel/time.c:344:
+		printk(KERN_ERR "Summit chipset: Could not find valid CBAR value.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#192: FILE: arch/i386/kernel/time.c:347:
+^I$

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#194: FILE: arch/i386/kernel/time.c:349:
+	pageaddr = (base + CYCLONE_PMCC_OFFSET)&PAGE_MASK;
 	                                       ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#195: FILE: arch/i386/kernel/time.c:350:
+	offset = (base + CYCLONE_PMCC_OFFSET)&(~PAGE_MASK);
 	                                     ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#197: FILE: arch/i386/kernel/time.c:352:
+	reg = (u32*)(fix_to_virt(FIX_CYCLONE_TIMER) + offset);

ERROR:SPACING: space required before the open brace '{'
#198: FILE: arch/i386/kernel/time.c:353:
+	if(!reg){

ERROR:SPACING: space required before the open parenthesis '('
#198: FILE: arch/i386/kernel/time.c:353:
+	if(!reg){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#199: FILE: arch/i386/kernel/time.c:354:
+		printk(KERN_ERR "Summit chipset: Could not find valid PMCC register.\n");

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#205: FILE: arch/i386/kernel/time.c:360:
+	pageaddr = (base + CYCLONE_MPCS_OFFSET)&PAGE_MASK;
 	                                       ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#206: FILE: arch/i386/kernel/time.c:361:
+	offset = (base + CYCLONE_MPCS_OFFSET)&(~PAGE_MASK);
 	                                     ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#208: FILE: arch/i386/kernel/time.c:363:
+	reg = (u32*)(fix_to_virt(FIX_CYCLONE_TIMER) + offset);

ERROR:SPACING: space required before the open brace '{'
#209: FILE: arch/i386/kernel/time.c:364:
+	if(!reg){

ERROR:SPACING: space required before the open parenthesis '('
#209: FILE: arch/i386/kernel/time.c:364:
+	if(!reg){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#210: FILE: arch/i386/kernel/time.c:365:
+		printk(KERN_ERR "Summit chipset: Could not find valid MPCS register.\n");

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#216: FILE: arch/i386/kernel/time.c:371:
+	pageaddr = (base + CYCLONE_MPMC_OFFSET)&PAGE_MASK;
 	                                       ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#217: FILE: arch/i386/kernel/time.c:372:
+	offset = (base + CYCLONE_MPMC_OFFSET)&(~PAGE_MASK);
 	                                     ^

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#219: FILE: arch/i386/kernel/time.c:374:
+	cyclone_timer = (u32*)(fix_to_virt(FIX_CYCLONE_TIMER) + offset);

ERROR:SPACING: space required before the open brace '{'
#220: FILE: arch/i386/kernel/time.c:375:
+	if(!cyclone_timer){

ERROR:SPACING: space required before the open parenthesis '('
#220: FILE: arch/i386/kernel/time.c:375:
+	if(!cyclone_timer){

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#221: FILE: arch/i386/kernel/time.c:376:
+		printk(KERN_ERR "Summit chipset: Could not find valid MPMC register.\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#226: FILE: arch/i386/kernel/time.c:381:
+^Ido_gettimeoffset = do_gettimeoffset_cyclone;^I$

ERROR:SPACING: space required after that ';' (ctx:VxV)
#233: FILE: arch/i386/kernel/time.c:388:
+static unsigned long do_gettimeoffset_cyclone(void) {return 0;}
                                                              ^

ERROR:SPACING: space required before the open parenthesis '('
#258: FILE: arch/i386/kernel/time.c:645:
+		if(use_cyclone)

ERROR:CODE_INDENT: code indent should use tabs where possible
#260: FILE: arch/i386/kernel/time.c:647:
+ ^I}$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#260: FILE: arch/i386/kernel/time.c:647:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: arch/i386/kernel/time.c:647:
+ ^I}$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#261: FILE: arch/i386/kernel/time.c:648:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#270: FILE: arch/i386/kernel/time.c:838:
+ ^Iif((!use_tsc) && use_cyclone)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#270: FILE: arch/i386/kernel/time.c:838:
+ ^Iif((!use_tsc) && use_cyclone)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: arch/i386/kernel/time.c:838:
+ ^Iif((!use_tsc) && use_cyclone)$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!use_tsc'
#270: FILE: arch/i386/kernel/time.c:838:
+ 	if((!use_tsc) && use_cyclone)

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space required before the open parenthesis '('
#270: FILE: arch/i386/kernel/time.c:838:
+ 	if((!use_tsc) && use_cyclone)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#284: FILE: include/asm-i386/fixmap.h:69:
+#endif $

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000437794.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 38 errors, 11 warnings, 15 checks, 224 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000437794.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
