WARNING:TYPO_SPELLING: 'appling' may be misspelled - perhaps 'applying'?
#13: 
Subject: Re: [PATCH][RFC] appling preasure to icache and dcache
                          ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#99: FILE: mm/vmscan.c:982:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#101: FILE: mm/vmscan.c:984:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#102: FILE: mm/vmscan.c:985:
+	static int base, free = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#111: FILE: mm/vmscan.c:994:
+	if (base > pages)	/* If the cache shrunk reset base,  The cache
+		base = pages;	 * growing applies preasure as does expanding

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#112: FILE: mm/vmscan.c:995:
+	if (free > old)		 * free space - even if later shrinks */

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#113: FILE: mm/vmscan.c:996:
+		base -= (base>free-old) ? free-old : base;
 		             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#113: FILE: mm/vmscan.c:996:
+		base -= (base>free-old) ? free-old : base;
 		                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#113: FILE: mm/vmscan.c:996:
+		base -= (base>free-old) ? free-old : base;
 		                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#119: FILE: mm/vmscan.c:1002:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#120: FILE: mm/vmscan.c:1003:
+^Iif (pages-base >= goal) { $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#120: FILE: mm/vmscan.c:1003:
+	if (pages-base >= goal) { 
 	         ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#120: FILE: mm/vmscan.c:1003:
+	if (pages-base >= goal) { 
[...]
+	} else
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: mm/vmscan.c:1005:
+       ^I^Ishrink_dcache_memory(DEF_PRIORITY, gfp_mask);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#122: FILE: mm/vmscan.c:1005:
+       ^I^Ishrink_dcache_memory(DEF_PRIORITY, gfp_mask);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: mm/vmscan.c:1005:
+       ^I^Ishrink_dcache_memory(DEF_PRIORITY, gfp_mask);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#123: FILE: mm/vmscan.c:1006:
+^I^Iret = inactivate_pressure - ret; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#124: FILE: mm/vmscan.c:1007:
+^I^Ibase += (!ret) ? pages-base : (ret>goal) ? ret : goal; $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#124: FILE: mm/vmscan.c:1007:
+		base += (!ret) ? pages-base : (ret>goal) ? ret : goal; 
 		                      ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#124: FILE: mm/vmscan.c:1007:
+		base += (!ret) ? pages-base : (ret>goal) ? ret : goal; 
 		                                  ^

CHECK:BRACES: Unbalanced braces around else statement
#125: FILE: mm/vmscan.c:1008:
+	} else

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#136: FILE: mm/vmscan.c:1019:
+	static int base, free = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#138: FILE: mm/vmscan.c:1021:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#143: FILE: mm/vmscan.c:1026:
+^I$

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#147: FILE: mm/vmscan.c:1030:
+		base -= (base>free-old) ? free-old : base;
 		             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#147: FILE: mm/vmscan.c:1030:
+		base -= (base>free-old) ? free-old : base;
 		                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#147: FILE: mm/vmscan.c:1030:
+		base -= (base>free-old) ? free-old : base;
 		                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#149: FILE: mm/vmscan.c:1032:
+^Iif (pages-base >= goal) { $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#149: FILE: mm/vmscan.c:1032:
+	if (pages-base >= goal) { 
 	         ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#149: FILE: mm/vmscan.c:1032:
+	if (pages-base >= goal) { 
[...]
+	} else
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: mm/vmscan.c:1034:
+       ^I^Ishrink_icache_memory(DEF_PRIORITY, gfp_mask);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#151: FILE: mm/vmscan.c:1034:
+       ^I^Ishrink_icache_memory(DEF_PRIORITY, gfp_mask);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: mm/vmscan.c:1034:
+       ^I^Ishrink_icache_memory(DEF_PRIORITY, gfp_mask);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#152: FILE: mm/vmscan.c:1035:
+^I^Iret = inactivate_pressure - ret; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#153: FILE: mm/vmscan.c:1036:
+^I^Ibase += (!ret) ? pages-base : (ret>goal) ? ret : goal; $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#153: FILE: mm/vmscan.c:1036:
+		base += (!ret) ? pages-base : (ret>goal) ? ret : goal; 
 		                      ^

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#153: FILE: mm/vmscan.c:1036:
+		base += (!ret) ? pages-base : (ret>goal) ? ret : goal; 
 		                                  ^

CHECK:BRACES: Unbalanced braces around else statement
#154: FILE: mm/vmscan.c:1037:
+	} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#160: FILE: mm/vmscan.c:1043:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#179: FILE: mm/vmscan.c:1098:
+^I^I * Try to keep the rate of pages inactivations $

WARNING:TYPO_SPELLING: 'enought' may be misspelled - perhaps 'enough'?
#184: FILE: mm/vmscan.c:1103:
+		 * there are enought freeable pages there.
 		             ^^^^^^^

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#187: FILE: mm/vmscan.c:1105:
+		delta = (memory_pressure >> INACTIVE_SHIFT) \

ERROR:SPACING: space required after that ',' (ctx:VxV)
#190: FILE: mm/vmscan.c:1108:
+			delta -= try_shrinking_dcache(delta,GFP_KSWAPD);
 			                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#192: FILE: mm/vmscan.c:1110:
+			delta -= try_shrinking_icache(delta,GFP_KSWAPD);
 			                                   ^

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000542597.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 21 errors, 9 warnings, 14 checks, 157 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000542597.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
