WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
diff -ruN -X dontdiff linux-2.5.31/include/linux/slab.h statctr-2.5.31/include/linux/slab.h

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#37: FILE: include/linux/slab.h:16:
+#include ^I<linux/smp.h>$

ERROR:CODE_INDENT: code indent should use tabs where possible
#54: FILE: include/linux/slab.h:77:
+        struct percpu_data *__p = (struct percpu_data *)~(unsigned long)(ptr); \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#54: FILE: include/linux/slab.h:77:
+        struct percpu_data *__p = (struct percpu_data *)~(unsigned long)(ptr); \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#55: FILE: include/linux/slab.h:78:
+        (__typeof__(ptr))__p->ptrs[(cpu)];^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#55: FILE: include/linux/slab.h:78:
+        (__typeof__(ptr))__p->ptrs[(cpu)];^I\$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#58: FILE: include/linux/slab.h:81:
+extern void *kmalloc_percpu(size_t size, int flags);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#59: FILE: include/linux/slab.h:82:
+extern void kfree_percpu(const void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const void *' should also have an identifier name
#59: FILE: include/linux/slab.h:82:
+extern void kfree_percpu(const void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#60: FILE: include/linux/slab.h:83:
+extern int percpu_interlaced_alloc(struct percpu_data *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct percpu_data *' should also have an identifier name
#60: FILE: include/linux/slab.h:83:
+extern int percpu_interlaced_alloc(struct percpu_data *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#60: FILE: include/linux/slab.h:83:
+extern int percpu_interlaced_alloc(struct percpu_data *, size_t, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#60: FILE: include/linux/slab.h:83:
+extern int percpu_interlaced_alloc(struct percpu_data *, size_t, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#61: FILE: include/linux/slab.h:84:
+extern void percpu_interlaced_free(struct percpu_data *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct percpu_data *' should also have an identifier name
#61: FILE: include/linux/slab.h:84:
+extern void percpu_interlaced_free(struct percpu_data *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#62: FILE: include/linux/slab.h:85:
+extern void percpu_data_sys_init(void);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#72: FILE: include/linux/slab.h:95:
+}
+static inline void kfree_percpu(const void *ptr)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#73: FILE: include/linux/slab.h:96:
+{^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#76: FILE: include/linux/slab.h:99:
+}
+static inline void percpu_data_sys_init(void) { }

CHECK:LINE_SPACING: Please don't use multiple blank lines
#80: FILE: include/linux/slab.h:103:
+
+

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#104: FILE: kernel/ksyms.c:110:
+EXPORT_SYMBOL(kfree_percpu);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#131: FILE: mm/percpu_data.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#145: FILE: mm/percpu_data.c:15:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#146: FILE: mm/percpu_data.c:16:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#151: FILE: mm/percpu_data.c:21:
+ * ^I^I^IRavikiran G. Thirumalai <kiran@in.ibm.com>$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#166: FILE: mm/percpu_data.c:36:
+	spinlock_t              lock;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#174: FILE: mm/percpu_data.c:44:
+^Istruct list_head        linkage; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#175: FILE: mm/percpu_data.c:45:
+^Ivoid             ^I*blkaddr[NR_CPUS]; $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#175: FILE: mm/percpu_data.c:45:
+^Ivoid             ^I*blkaddr[NR_CPUS]; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#176: FILE: mm/percpu_data.c:46:
+^Iunsigned int            usecount; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#177: FILE: mm/percpu_data.c:47:
+^Iint^I^I^I*freearr;  $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#225: FILE: mm/percpu_data.c:95:
+static int data_blklist_count = $

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#226: FILE: mm/percpu_data.c:96:
+	sizeof(data_blklist)/sizeof(struct percpu_data_blklist);
 	                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#229: FILE: mm/percpu_data.c:99:
+ * Allocate a block descriptor structure and initialize it.  $

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#232: FILE: mm/percpu_data.c:102:
+static struct percpu_data_blk *percpu_data_blk_alloc(

ERROR:CODE_INDENT: code indent should use tabs where possible
#235: FILE: mm/percpu_data.c:105:
+        struct percpu_data_blk *blkp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: mm/percpu_data.c:105:
+        struct percpu_data_blk *blkp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#236: FILE: mm/percpu_data.c:106:
+        int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#236: FILE: mm/percpu_data.c:106:
+        int i;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#239: FILE: mm/percpu_data.c:109:
+        if (!(blkp = kmalloc(sizeof(struct percpu_data_blk), flags)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: mm/percpu_data.c:109:
+        if (!(blkp = kmalloc(sizeof(struct percpu_data_blk), flags)))$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#239: FILE: mm/percpu_data.c:109:
+        if (!(blkp = kmalloc(sizeof(struct percpu_data_blk), flags)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*blkp)...) over kmalloc(sizeof(struct percpu_data_blk)...)
#239: FILE: mm/percpu_data.c:109:
+        if (!(blkp = kmalloc(sizeof(struct percpu_data_blk), flags)))

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:CODE_INDENT: code indent should use tabs where possible
#240: FILE: mm/percpu_data.c:110:
+                goto out1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: mm/percpu_data.c:110:
+                goto out1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#242: FILE: mm/percpu_data.c:112:
+        blkp->usecount = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: mm/percpu_data.c:112:
+        blkp->usecount = 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#243: FILE: mm/percpu_data.c:113:
+^Icount = blklist->blksize / blklist->objsize;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#244: FILE: mm/percpu_data.c:114:
+^Iblkp->freearr = kmalloc(count, flags); $

ERROR:CODE_INDENT: code indent should use tabs where possible
#247: FILE: mm/percpu_data.c:117:
+        blkp->freehead = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: mm/percpu_data.c:117:
+        blkp->freehead = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#248: FILE: mm/percpu_data.c:118:
+        for (i = 0; i < count; i++)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: mm/percpu_data.c:118:
+        for (i = 0; i < count; i++)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#249: FILE: mm/percpu_data.c:119:
+                blkp->freearr[i] = i+1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: mm/percpu_data.c:119:
+                blkp->freearr[i] = i+1;$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#249: FILE: mm/percpu_data.c:119:
+                blkp->freearr[i] = i+1;
                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#250: FILE: mm/percpu_data.c:120:
+        blkp->freearr[i-1] = -1;^I/* Marks the end of the array */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: mm/percpu_data.c:120:
+        blkp->freearr[i-1] = -1;^I/* Marks the end of the array */$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#250: FILE: mm/percpu_data.c:120:
+        blkp->freearr[i-1] = -1;	/* Marks the end of the array */
                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#252: FILE: mm/percpu_data.c:122:
+        return blkp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: mm/percpu_data.c:122:
+        return blkp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#273: FILE: mm/percpu_data.c:143:
+        struct percpu_data_blk *blkp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: mm/percpu_data.c:143:
+        struct percpu_data_blk *blkp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#274: FILE: mm/percpu_data.c:144:
+        unsigned long save_flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: mm/percpu_data.c:144:
+        unsigned long save_flags;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#275: FILE: mm/percpu_data.c:145:
+        int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: mm/percpu_data.c:145:
+        int i;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#276: FILE: mm/percpu_data.c:146:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: mm/percpu_data.c:146:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#277: FILE: mm/percpu_data.c:147:
+        if (!(blkp = percpu_data_blk_alloc(blklist, flags)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: mm/percpu_data.c:147:
+        if (!(blkp = percpu_data_blk_alloc(blklist, flags)))$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#277: FILE: mm/percpu_data.c:147:
+        if (!(blkp = percpu_data_blk_alloc(blklist, flags)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#278: FILE: mm/percpu_data.c:148:
+                goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: mm/percpu_data.c:148:
+                goto out;$

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#280: FILE: mm/percpu_data.c:150:
+	for (i = 0; i < NR_CPUS; i++) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#284: FILE: mm/percpu_data.c:154:
+^I^Iif(!(blkp->blkaddr[i])) $

ERROR:SPACING: space required before the open parenthesis '('
#284: FILE: mm/percpu_data.c:154:
+		if(!(blkp->blkaddr[i])) 

ERROR:CODE_INDENT: code indent should use tabs where possible
#287: FILE: mm/percpu_data.c:157:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#287: FILE: mm/percpu_data.c:157:
+        }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#288: FILE: mm/percpu_data.c:158:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: mm/percpu_data.c:158:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#289: FILE: mm/percpu_data.c:159:
+        /* $

ERROR:CODE_INDENT: code indent should use tabs where possible
#289: FILE: mm/percpu_data.c:159:
+        /* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#290: FILE: mm/percpu_data.c:160:
+         * Now that we have the block successfully allocated $

ERROR:CODE_INDENT: code indent should use tabs where possible
#290: FILE: mm/percpu_data.c:160:
+         * Now that we have the block successfully allocated $

ERROR:CODE_INDENT: code indent should use tabs where possible
#291: FILE: mm/percpu_data.c:161:
+         * and instantiated..  add it.....$

ERROR:CODE_INDENT: code indent should use tabs where possible
#292: FILE: mm/percpu_data.c:162:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#293: FILE: mm/percpu_data.c:163:
+        spin_lock_irqsave(&blklist->lock, save_flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: mm/percpu_data.c:163:
+        spin_lock_irqsave(&blklist->lock, save_flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#294: FILE: mm/percpu_data.c:164:
+        list_add_tail(&blkp->linkage, &blklist->blks);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: mm/percpu_data.c:164:
+        list_add_tail(&blkp->linkage, &blklist->blks);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#295: FILE: mm/percpu_data.c:165:
+        if (blklist->firstnotfull == &blklist->blks)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: mm/percpu_data.c:165:
+        if (blklist->firstnotfull == &blklist->blks)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#296: FILE: mm/percpu_data.c:166:
+                blklist->firstnotfull = &blkp->linkage;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: mm/percpu_data.c:166:
+                blklist->firstnotfull = &blkp->linkage;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#297: FILE: mm/percpu_data.c:167:
+        spin_unlock_irqrestore(&blklist->lock, save_flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: mm/percpu_data.c:167:
+        spin_unlock_irqrestore(&blklist->lock, save_flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#298: FILE: mm/percpu_data.c:168:
+        return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: mm/percpu_data.c:168:
+        return 1;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#299: FILE: mm/percpu_data.c:169:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: mm/percpu_data.c:169:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#309: FILE: mm/percpu_data.c:179:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#309: FILE: mm/percpu_data.c:179:
+        return 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#318: FILE: mm/percpu_data.c:188:
+^I^I^Iblklist->blksize, 0, SLAB_HWCACHE_ALIGN, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#318: FILE: mm/percpu_data.c:188:
+	blklist->cachep = kmem_cache_create(blklist->cachename,
+			blklist->blksize, 0, SLAB_HWCACHE_ALIGN, 

ERROR:SPACING: space required before the open parenthesis '('
#320: FILE: mm/percpu_data.c:190:
+	if(!blklist->cachep)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#321: FILE: mm/percpu_data.c:191:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:LINE_SPACING: Please don't use multiple blank lines
#324: FILE: mm/percpu_data.c:194:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#326: FILE: mm/percpu_data.c:196:
+static struct percpu_data_blklist *percpu_data_get_blklist(size_t size,
+					int flags)

WARNING:LINE_SPACING: Missing a blank line after declarations
#329: FILE: mm/percpu_data.c:199:
+	int i;
+	for (i = 0; i < data_blklist_count; i++) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#337: FILE: mm/percpu_data.c:207:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#337: FILE: mm/percpu_data.c:207:
+
+	

WARNING:LINE_SPACING: Missing a blank line after declarations
#344: FILE: mm/percpu_data.c:214:
+	int i;
+	for (i = 0; i < data_blklist_count; i++) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#344: FILE: mm/percpu_data.c:214:
+	for (i = 0; i < data_blklist_count; i++) {
+		percpu_data_blklist_init(&data_blklist[i]);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#352: FILE: mm/percpu_data.c:222:
+static int __percpu_interlaced_alloc_one(struct percpu_data_blklist *blklist, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#353: FILE: mm/percpu_data.c:223:
+static int __percpu_interlaced_alloc_one(struct percpu_data_blklist *blklist, 
+				struct percpu_data_blk *blkp)

ERROR:CODE_INDENT: code indent should use tabs where possible
#355: FILE: mm/percpu_data.c:225:
+        unsigned int objidx;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: mm/percpu_data.c:225:
+        unsigned int objidx;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#356: FILE: mm/percpu_data.c:226:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#356: FILE: mm/percpu_data.c:226:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#357: FILE: mm/percpu_data.c:227:
+        objidx = blkp->freehead;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#357: FILE: mm/percpu_data.c:227:
+        objidx = blkp->freehead;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#358: FILE: mm/percpu_data.c:228:
+        blkp->freehead = blkp->freearr[objidx];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#358: FILE: mm/percpu_data.c:228:
+        blkp->freehead = blkp->freearr[objidx];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#359: FILE: mm/percpu_data.c:229:
+        blkp->usecount++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: mm/percpu_data.c:229:
+        blkp->usecount++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#360: FILE: mm/percpu_data.c:230:
+        if(blkp->freehead < 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#360: FILE: mm/percpu_data.c:230:
+        if(blkp->freehead < 0) {$

ERROR:SPACING: space required before the open parenthesis '('
#360: FILE: mm/percpu_data.c:230:
+        if(blkp->freehead < 0) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#360: FILE: mm/percpu_data.c:230:
+        if(blkp->freehead < 0) {
+                blklist->firstnotfull = blkp->linkage.next;
+        }

ERROR:CODE_INDENT: code indent should use tabs where possible
#361: FILE: mm/percpu_data.c:231:
+                blklist->firstnotfull = blkp->linkage.next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#361: FILE: mm/percpu_data.c:231:
+                blklist->firstnotfull = blkp->linkage.next;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#362: FILE: mm/percpu_data.c:232:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: mm/percpu_data.c:232:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#363: FILE: mm/percpu_data.c:233:
+        return objidx;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: mm/percpu_data.c:233:
+        return objidx;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#370: FILE: mm/percpu_data.c:240:
+static int __percpu_interlaced_alloc(struct percpu_data *percpu,
+		struct percpu_data_blklist *blklist, int flags)

ERROR:CODE_INDENT: code indent should use tabs where possible
#372: FILE: mm/percpu_data.c:242:
+        struct percpu_data_blk *blkp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#372: FILE: mm/percpu_data.c:242:
+        struct percpu_data_blk *blkp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#373: FILE: mm/percpu_data.c:243:
+        unsigned long save_flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#373: FILE: mm/percpu_data.c:243:
+        unsigned long save_flags;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#374: FILE: mm/percpu_data.c:244:
+        struct list_head *l;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#374: FILE: mm/percpu_data.c:244:
+        struct list_head *l;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#379: FILE: mm/percpu_data.c:249:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: mm/percpu_data.c:249:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#380: FILE: mm/percpu_data.c:250:
+        spin_lock_irqsave(&blklist->lock, save_flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: mm/percpu_data.c:250:
+        spin_lock_irqsave(&blklist->lock, save_flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#381: FILE: mm/percpu_data.c:251:
+        l = blklist->firstnotfull;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: mm/percpu_data.c:251:
+        l = blklist->firstnotfull;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#382: FILE: mm/percpu_data.c:252:
+        if (l == &blklist->blks)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: mm/percpu_data.c:252:
+        if (l == &blklist->blks)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#383: FILE: mm/percpu_data.c:253:
+                goto unlock_and_get_mem;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: mm/percpu_data.c:253:
+                goto unlock_and_get_mem;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#384: FILE: mm/percpu_data.c:254:
+        blkp = list_entry(l, struct percpu_data_blk, linkage);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#384: FILE: mm/percpu_data.c:254:
+        blkp = list_entry(l, struct percpu_data_blk, linkage);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#385: FILE: mm/percpu_data.c:255:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: mm/percpu_data.c:255:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#386: FILE: mm/percpu_data.c:256:
+        objidx = __percpu_interlaced_alloc_one(blklist, blkp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#386: FILE: mm/percpu_data.c:256:
+        objidx = __percpu_interlaced_alloc_one(blklist, blkp);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#387: FILE: mm/percpu_data.c:257:
+        spin_unlock_irqrestore(&blklist->lock, save_flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#387: FILE: mm/percpu_data.c:257:
+        spin_unlock_irqrestore(&blklist->lock, save_flags);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#388: FILE: mm/percpu_data.c:258:
+        /* $

ERROR:CODE_INDENT: code indent should use tabs where possible
#388: FILE: mm/percpu_data.c:258:
+        /* $

ERROR:CODE_INDENT: code indent should use tabs where possible
#389: FILE: mm/percpu_data.c:259:
+         * Since we hold the lock and firstnotfull is not the$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#390: FILE: mm/percpu_data.c:260:
+         * head list, we should be getting an object alloc here. firstnotfull $

ERROR:CODE_INDENT: code indent should use tabs where possible
#390: FILE: mm/percpu_data.c:260:
+         * head list, we should be getting an object alloc here. firstnotfull $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#391: FILE: mm/percpu_data.c:261:
+^I * can be pointing to head of the list when all the blks are $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#392: FILE: mm/percpu_data.c:262:
+^I * full or when there're no blocks left $

ERROR:CODE_INDENT: code indent should use tabs where possible
#393: FILE: mm/percpu_data.c:263:
+         */$

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#394: FILE: mm/percpu_data.c:264:
+	for (i = 0; i < NR_CPUS; i++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#400: FILE: mm/percpu_data.c:270:
+        return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#400: FILE: mm/percpu_data.c:270:
+        return 1;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#401: FILE: mm/percpu_data.c:271:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#401: FILE: mm/percpu_data.c:271:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#403: FILE: mm/percpu_data.c:273:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#403: FILE: mm/percpu_data.c:273:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#404: FILE: mm/percpu_data.c:274:
+        spin_unlock_irqrestore(&blklist->lock, save_flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#404: FILE: mm/percpu_data.c:274:
+        spin_unlock_irqrestore(&blklist->lock, save_flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#405: FILE: mm/percpu_data.c:275:
+        if(percpu_data_mem_grow(blklist, flags))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#405: FILE: mm/percpu_data.c:275:
+        if(percpu_data_mem_grow(blklist, flags))$

ERROR:SPACING: space required before the open parenthesis '('
#405: FILE: mm/percpu_data.c:275:
+        if(percpu_data_mem_grow(blklist, flags))

ERROR:CODE_INDENT: code indent should use tabs where possible
#406: FILE: mm/percpu_data.c:276:
+                goto tryagain;  /* added another block..try allocing obj ..*/$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#406: FILE: mm/percpu_data.c:276:
+                goto tryagain;  /* added another block..try allocing obj ..*/$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#407: FILE: mm/percpu_data.c:277:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#407: FILE: mm/percpu_data.c:277:
+        $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: mm/percpu_data.c:277:
+        $

ERROR:CODE_INDENT: code indent should use tabs where possible
#408: FILE: mm/percpu_data.c:278:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: mm/percpu_data.c:278:
+        return 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#413: FILE: mm/percpu_data.c:283:
+ * Returns NULL on failure. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#418: FILE: mm/percpu_data.c:288:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!blklist"
#420: FILE: mm/percpu_data.c:290:
+	if (blklist == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#428: FILE: mm/percpu_data.c:298:
+static void percpu_data_blk_destroy(struct percpu_data_blklist *blklist, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#429: FILE: mm/percpu_data.c:299:
+static void percpu_data_blk_destroy(struct percpu_data_blklist *blklist, 
+			struct percpu_data_blk *blkp)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#432: FILE: mm/percpu_data.c:302:
+^I$

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#433: FILE: mm/percpu_data.c:303:
+	for (i = 0; i < NR_CPUS; i++) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#446: FILE: mm/percpu_data.c:316:
+static void __percpu_interlaced_free(struct percpu_data_blklist *blklist,
+		struct percpu_data *percpu)

ERROR:CODE_INDENT: code indent should use tabs where possible
#448: FILE: mm/percpu_data.c:318:
+        struct percpu_data_blk *blkp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#448: FILE: mm/percpu_data.c:318:
+        struct percpu_data_blk *blkp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#449: FILE: mm/percpu_data.c:319:
+        int objidx;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#449: FILE: mm/percpu_data.c:319:
+        int objidx;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#450: FILE: mm/percpu_data.c:320:
+        int objoffset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#450: FILE: mm/percpu_data.c:320:
+        int objoffset;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#451: FILE: mm/percpu_data.c:321:
+        struct list_head *t;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#451: FILE: mm/percpu_data.c:321:
+        struct list_head *t;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#452: FILE: mm/percpu_data.c:322:
+        unsigned long save_flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#452: FILE: mm/percpu_data.c:322:
+        unsigned long save_flags;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#453: FILE: mm/percpu_data.c:323:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#454: FILE: mm/percpu_data.c:324:
+        spin_lock_irqsave(&blklist->lock, save_flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#454: FILE: mm/percpu_data.c:324:
+        spin_lock_irqsave(&blklist->lock, save_flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#455: FILE: mm/percpu_data.c:325:
+        blkp = (struct percpu_data_blk *)percpu->blkp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#455: FILE: mm/percpu_data.c:325:
+        blkp = (struct percpu_data_blk *)percpu->blkp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#456: FILE: mm/percpu_data.c:326:
+        objoffset = percpu->ptrs[0] - blkp->blkaddr[0];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#456: FILE: mm/percpu_data.c:326:
+        objoffset = percpu->ptrs[0] - blkp->blkaddr[0];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#457: FILE: mm/percpu_data.c:327:
+        objidx = objoffset / blklist->objsize;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#457: FILE: mm/percpu_data.c:327:
+        objidx = objoffset / blklist->objsize;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#461: FILE: mm/percpu_data.c:331:
+        blkp->freearr[objidx] = blkp->freehead;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#461: FILE: mm/percpu_data.c:331:
+        blkp->freearr[objidx] = blkp->freehead;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#462: FILE: mm/percpu_data.c:332:
+        blkp->freehead = objidx;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#462: FILE: mm/percpu_data.c:332:
+        blkp->freehead = objidx;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#463: FILE: mm/percpu_data.c:333:
+        blkp->usecount--;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: mm/percpu_data.c:333:
+        blkp->usecount--;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#464: FILE: mm/percpu_data.c:334:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#464: FILE: mm/percpu_data.c:334:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#465: FILE: mm/percpu_data.c:335:
+        if (blkp->freearr[objidx] < 0)  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#465: FILE: mm/percpu_data.c:335:
+        if (blkp->freearr[objidx] < 0)  {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#466: FILE: mm/percpu_data.c:336:
+                /* $

ERROR:CODE_INDENT: code indent should use tabs where possible
#466: FILE: mm/percpu_data.c:336:
+                /* $

ERROR:CODE_INDENT: code indent should use tabs where possible
#467: FILE: mm/percpu_data.c:337:
+                 * block was previously full and is now just partially full ..$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#468: FILE: mm/percpu_data.c:338:
+                 * so make firstnotfull pt to this block and fix list accdly $

ERROR:CODE_INDENT: code indent should use tabs where possible
#468: FILE: mm/percpu_data.c:338:
+                 * so make firstnotfull pt to this block and fix list accdly $

ERROR:CODE_INDENT: code indent should use tabs where possible
#469: FILE: mm/percpu_data.c:339:
+                 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#470: FILE: mm/percpu_data.c:340:
+                t = blklist->firstnotfull;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#470: FILE: mm/percpu_data.c:340:
+                t = blklist->firstnotfull;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#471: FILE: mm/percpu_data.c:341:
+                blklist->firstnotfull = &blkp->linkage;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#471: FILE: mm/percpu_data.c:341:
+                blklist->firstnotfull = &blkp->linkage;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#472: FILE: mm/percpu_data.c:342:
+                if (blkp->linkage.next == t) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#472: FILE: mm/percpu_data.c:342:
+                if (blkp->linkage.next == t) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#474: FILE: mm/percpu_data.c:344:
+                        return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#474: FILE: mm/percpu_data.c:344:
+                        return;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#476: FILE: mm/percpu_data.c:346:
+                list_del(&blkp->linkage);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: mm/percpu_data.c:346:
+                list_del(&blkp->linkage);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#477: FILE: mm/percpu_data.c:347:
+                list_add_tail(&blkp->linkage, t);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#477: FILE: mm/percpu_data.c:347:
+                list_add_tail(&blkp->linkage, t);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#478: FILE: mm/percpu_data.c:348:
+        ^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#478: FILE: mm/percpu_data.c:348:
+        ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#478: FILE: mm/percpu_data.c:348:
+        ^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#478: FILE: mm/percpu_data.c:348:
+        ^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#480: FILE: mm/percpu_data.c:350:
+                return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#480: FILE: mm/percpu_data.c:350:
+                return;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#481: FILE: mm/percpu_data.c:351:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#481: FILE: mm/percpu_data.c:351:
+        }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#482: FILE: mm/percpu_data.c:352:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#482: FILE: mm/percpu_data.c:352:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#483: FILE: mm/percpu_data.c:353:
+        if (blkp->usecount == 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#483: FILE: mm/percpu_data.c:353:
+        if (blkp->usecount == 0) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#484: FILE: mm/percpu_data.c:354:
+                t = blklist->firstnotfull->prev;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#484: FILE: mm/percpu_data.c:354:
+                t = blklist->firstnotfull->prev;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#485: FILE: mm/percpu_data.c:355:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#485: FILE: mm/percpu_data.c:355:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#486: FILE: mm/percpu_data.c:356:
+                list_del(&blkp->linkage);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#486: FILE: mm/percpu_data.c:356:
+                list_del(&blkp->linkage);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#487: FILE: mm/percpu_data.c:357:
+                if (blklist->firstnotfull == &blkp->linkage)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#487: FILE: mm/percpu_data.c:357:
+                if (blklist->firstnotfull == &blkp->linkage)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#488: FILE: mm/percpu_data.c:358:
+                        blklist->firstnotfull = t->next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: mm/percpu_data.c:358:
+                        blklist->firstnotfull = t->next;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#489: FILE: mm/percpu_data.c:359:
+        ^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#489: FILE: mm/percpu_data.c:359:
+        ^I$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#489: FILE: mm/percpu_data.c:359:
+        ^I$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: mm/percpu_data.c:359:
+        ^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#492: FILE: mm/percpu_data.c:362:
+                return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#492: FILE: mm/percpu_data.c:362:
+                return;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#493: FILE: mm/percpu_data.c:363:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#493: FILE: mm/percpu_data.c:363:
+        }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#494: FILE: mm/percpu_data.c:364:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#494: FILE: mm/percpu_data.c:364:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#495: FILE: mm/percpu_data.c:365:
+        spin_unlock_irqrestore(&blklist->lock, save_flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#495: FILE: mm/percpu_data.c:365:
+        spin_unlock_irqrestore(&blklist->lock, save_flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#496: FILE: mm/percpu_data.c:366:
+        return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#496: FILE: mm/percpu_data.c:366:
+        return;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#501: FILE: mm/percpu_data.c:371:
+ */ $

WARNING:LINE_SPACING: Missing a blank line after declarations
#505: FILE: mm/percpu_data.c:375:
+	struct percpu_data_blk *blkp = percpu->blkp;
+	__percpu_interlaced_free(blkp->blklist, percpu);

ERROR:CODE_INDENT: code indent should use tabs where possible
#531: FILE: mm/slab.c:1624:
+        int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#531: FILE: mm/slab.c:1624:
+        int i;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#532: FILE: mm/slab.c:1625:
+        struct percpu_data *pdata = kmalloc(sizeof(*pdata), flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#532: FILE: mm/slab.c:1625:
+        struct percpu_data *pdata = kmalloc(sizeof(*pdata), flags);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#533: FILE: mm/slab.c:1626:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#533: FILE: mm/slab.c:1626:
+ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#534: FILE: mm/slab.c:1627:
+        if (!pdata) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#534: FILE: mm/slab.c:1627:
+        if (!pdata) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#534: FILE: mm/slab.c:1627:
+        if (!pdata) $

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#541: FILE: mm/slab.c:1634:
+		for (i = 0; i < NR_CPUS; i++) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#549: FILE: mm/slab.c:1642:
+        /* Catch derefs w/o wrappers */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#550: FILE: mm/slab.c:1643:
+        return (void *)(~(unsigned long)pdata);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#550: FILE: mm/slab.c:1643:
+        return (void *)(~(unsigned long)pdata);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#551: FILE: mm/slab.c:1644:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#551: FILE: mm/slab.c:1644:
+ $

ERROR:CODE_INDENT: code indent should use tabs where possible
#553: FILE: mm/slab.c:1646:
+        while (--i >= 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#553: FILE: mm/slab.c:1646:
+        while (--i >= 0) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#556: FILE: mm/slab.c:1649:
+                kfree(pdata->ptrs[i]);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#556: FILE: mm/slab.c:1649:
+                kfree(pdata->ptrs[i]);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#559: FILE: mm/slab.c:1652:
+        kfree(pdata);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#559: FILE: mm/slab.c:1652:
+        kfree(pdata);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#565: FILE: mm/slab.c:1658:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#584: FILE: mm/slab.c:1722:
+        struct percpu_data *p = (struct percpu_data *)(~(unsigned long)objp);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#584: FILE: mm/slab.c:1722:
+        struct percpu_data *p = (struct percpu_data *)(~(unsigned long)objp);$

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#589: FILE: mm/slab.c:1727:
+		for (i = 0; i < NR_CPUS; i++) {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#598: FILE: mm/slab.c:1736:
+
+

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000440092.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 155 errors, 127 warnings, 25 checks, 545 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000440092.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
