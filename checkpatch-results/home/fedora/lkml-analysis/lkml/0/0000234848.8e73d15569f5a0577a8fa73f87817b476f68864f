ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#55: FILE: fs/sysfs/bin.c:20:
+	struct bin_attribute * attr = to_bin_attr(dentry);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#56: FILE: fs/sysfs/bin.c:21:
+	struct kobject * kobj = to_kobj(dentry->d_parent);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#76: FILE: fs/sysfs/bin.c:98:
+	struct bin_attribute * attr = to_bin_attr(file->f_dentry);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#86: FILE: fs/sysfs/bin.c:133:
+	struct kobject * kobj = to_kobj(file->f_dentry->d_parent);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#87: FILE: fs/sysfs/bin.c:134:
+	struct bin_attribute * attr = to_bin_attr(file->f_dentry);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#108: FILE: fs/sysfs/file.c:78:
+static int fill_read_buffer(struct dentry * dentry, struct sysfs_buffer * buffer)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#108: FILE: fs/sysfs/file.c:78:
+static int fill_read_buffer(struct dentry * dentry, struct sysfs_buffer * buffer)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#112: FILE: fs/sysfs/file.c:80:
+	struct attribute * attr = to_attr(dentry);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#113: FILE: fs/sysfs/file.c:81:
+	struct kobject * kobj = to_kobj(dentry->d_parent);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#122: FILE: fs/sysfs/file.c:153:
+		if ((retval = fill_read_buffer(file->f_dentry,buffer)))
 		                                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#122: FILE: fs/sysfs/file.c:153:
+		if ((retval = fill_read_buffer(file->f_dentry,buffer)))

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#131: FILE: fs/sysfs/file.c:200:
+flush_write_buffer(struct dentry * dentry, struct sysfs_buffer * buffer, size_t count)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#131: FILE: fs/sysfs/file.c:200:
+flush_write_buffer(struct dentry * dentry, struct sysfs_buffer * buffer, size_t count)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#135: FILE: fs/sysfs/file.c:202:
+	struct attribute * attr = to_attr(dentry);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#136: FILE: fs/sysfs/file.c:203:
+	struct kobject * kobj = to_kobj(dentry->d_parent);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#145: FILE: fs/sysfs/file.c:234:
+		count = flush_write_buffer(file->f_dentry,buffer,count);
 		                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#145: FILE: fs/sysfs/file.c:234:
+		count = flush_write_buffer(file->f_dentry,buffer,count);
 		                                                ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#154: FILE: fs/sysfs/file.c:243:
+	struct attribute * attr = to_attr(file->f_dentry);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#164: FILE: fs/sysfs/file.c:324:
+	struct kobject * kobj = to_kobj(filp->f_dentry->d_parent);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#165: FILE: fs/sysfs/file.c:325:
+	struct attribute * attr = to_attr(filp->f_dentry);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#176: FILE: fs/sysfs/sysfs.h:19:
+static inline struct kobject * to_kobj(struct dentry * dentry)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#176: FILE: fs/sysfs/sysfs.h:19:
+static inline struct kobject * to_kobj(struct dentry * dentry)

CHECK:SPACING: No space is necessary after a cast
#178: FILE: fs/sysfs/sysfs.h:21:
+	return ((struct kobject *) dentry->d_fsdata);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#181: FILE: fs/sysfs/sysfs.h:24:
+static inline struct attribute * to_attr(struct dentry * dentry)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#181: FILE: fs/sysfs/sysfs.h:24:
+static inline struct attribute * to_attr(struct dentry * dentry)

CHECK:SPACING: No space is necessary after a cast
#183: FILE: fs/sysfs/sysfs.h:26:
+	return ((struct attribute *) dentry->d_fsdata);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#186: FILE: fs/sysfs/sysfs.h:29:
+static inline struct bin_attribute * to_bin_attr(struct dentry * dentry)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#186: FILE: fs/sysfs/sysfs.h:29:
+static inline struct bin_attribute * to_bin_attr(struct dentry * dentry)

CHECK:SPACING: No space is necessary after a cast
#188: FILE: fs/sysfs/sysfs.h:31:
+	return ((struct bin_attribute *) dentry->d_fsdata);

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000234848.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 26 errors, 0 warnings, 3 checks, 137 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000234848.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
