WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
my patch allows for kernel commandline parameters (ie: from bootloader) to be masked in order to 

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#89: 
Jürgen Pabel, CISSP
 ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#92: 
Eupener Straße 137
            ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#93: 
50933 Köln
       ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#104: FILE: init/main.c:409:
+	unclassify_arguments( &command_line[0], &saved_command_line[0]);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#120: FILE: kernel/params.c:161:
+static int  secret_kp_len = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#133: FILE: kernel/params.c:174:
+	for ( pos=0; val[pos]; pos++ ) {
 	         ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#133: FILE: kernel/params.c:174:
+	for ( pos=0; val[pos]; pos++ ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#133: FILE: kernel/params.c:174:
+	for ( pos=0; val[pos]; pos++ ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#134: FILE: kernel/params.c:175:
+		if ( val[pos] == '\'' )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#134: FILE: kernel/params.c:175:
+		if ( val[pos] == '\'' )

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#138: FILE: kernel/params.c:179:
+		((char*)val)[pos] = '*';

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#142: FILE: kernel/params.c:183:
+	if ( val[-1] == '"' )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#142: FILE: kernel/params.c:183:
+	if ( val[-1] == '"' )

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#143: FILE: kernel/params.c:184:
+		((char*)val)[pos] = '"';

ERROR:TRAILING_WHITESPACE: trailing whitespace
#153: FILE: kernel/params.c:194:
+^Ifor ( n=0; val[n]; n++ ) $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#153: FILE: kernel/params.c:194:
+	for ( n=0; val[n]; n++ ) 
 	       ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#153: FILE: kernel/params.c:194:
+	for ( n=0; val[n]; n++ ) 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#153: FILE: kernel/params.c:194:
+	for ( n=0; val[n]; n++ ) 

ERROR:SPACING: space prohibited after that open parenthesis '('
#154: FILE: kernel/params.c:195:
+		if ( val[n] == '\'' )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#154: FILE: kernel/params.c:195:
+		if ( val[n] == '\'' )

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#155: FILE: kernel/params.c:196:
+			((char*)val)[n] = '"';

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#157: FILE: kernel/params.c:198:
+	if ( val[-1] == '"' )
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#157: FILE: kernel/params.c:198:
+	if ( val[-1] == '"' )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#157: FILE: kernel/params.c:198:
+	if ( val[-1] == '"' )

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#159: FILE: kernel/params.c:200:
+		((char*)val)[n] = '"';

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#162: FILE: kernel/params.c:203:
+	else
+	{

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#162: FILE: kernel/params.c:203:
+	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#166: FILE: kernel/params.c:207:
+	memset( &((char*)val)[-n], ' ', n );

ERROR:SPACING: space prohibited after that open parenthesis '('
#166: FILE: kernel/params.c:207:
+	memset( &((char*)val)[-n], ' ', n );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#166: FILE: kernel/params.c:207:
+	memset( &((char*)val)[-n], ' ', n );

ERROR:TRAILING_WHITESPACE: trailing whitespace
#176: FILE: kernel/params.c:217:
+^Ifor ( pos=0; val[pos]; pos++ ) $

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#176: FILE: kernel/params.c:217:
+	for ( pos=0; val[pos]; pos++ ) 
 	         ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#176: FILE: kernel/params.c:217:
+	for ( pos=0; val[pos]; pos++ ) 

ERROR:SPACING: space prohibited before that close parenthesis ')'
#176: FILE: kernel/params.c:217:
+	for ( pos=0; val[pos]; pos++ ) 

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#177: FILE: kernel/params.c:218:
+		((char*)val)[pos] = '*';

ERROR:SPACING: space prohibited after that open parenthesis '('
#179: FILE: kernel/params.c:220:
+	if ( val[-1] == '"' )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#179: FILE: kernel/params.c:220:
+	if ( val[-1] == '"' )

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#180: FILE: kernel/params.c:221:
+		((char*)val)[pos] = '"';

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#186: FILE: kernel/params.c:227:
+static void process_command_line( const char *msg, char *data, struct kernel_param* kp )

ERROR:SPACING: space prohibited after that open parenthesis '('
#186: FILE: kernel/params.c:227:
+static void process_command_line( const char *msg, char *data, struct kernel_param* kp )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#186: FILE: kernel/params.c:227:
+static void process_command_line( const char *msg, char *data, struct kernel_param* kp )

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#191: FILE: kernel/params.c:232:
+	for ( pos=0; data[pos]; pos++ )
 	         ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#191: FILE: kernel/params.c:232:
+	for ( pos=0; data[pos]; pos++ )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#191: FILE: kernel/params.c:232:
+	for ( pos=0; data[pos]; pos++ )

ERROR:SPACING: space prohibited after that open parenthesis '('
#193: FILE: kernel/params.c:234:
+	parse_args( msg, data, kp, 1, &helper_ignore_unknown );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#193: FILE: kernel/params.c:234:
+	parse_args( msg, data, kp, 1, &helper_ignore_unknown );

ERROR:SPACING: space prohibited after that open parenthesis '('
#194: FILE: kernel/params.c:235:
+	while ( pos-- ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#194: FILE: kernel/params.c:235:
+	while ( pos-- ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#195: FILE: kernel/params.c:236:
+		if ( !data[pos] )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#195: FILE: kernel/params.c:236:
+		if ( !data[pos] )

ERROR:SPACING: space prohibited after that open parenthesis '('
#197: FILE: kernel/params.c:238:
+		if ( !data[pos] )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#197: FILE: kernel/params.c:238:
+		if ( !data[pos] )

ERROR:SPACING: space prohibited after that open parenthesis '('
#203: FILE: kernel/params.c:244:
+void unclassify_arguments( char *pcommand_line, char *psaved_command_line )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#203: FILE: kernel/params.c:244:
+void unclassify_arguments( char *pcommand_line, char *psaved_command_line )

ERROR:SPACING: space prohibited after that open parenthesis '('
#209: FILE: kernel/params.c:250:
+	process_command_line( "Preparing secret parameters", pcommand_line, &param1 );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#209: FILE: kernel/params.c:250:
+	process_command_line( "Preparing secret parameters", pcommand_line, &param1 );

ERROR:SPACING: space prohibited after that open parenthesis '('
#210: FILE: kernel/params.c:251:
+	process_command_line( "Preparing secret parameters", psaved_command_line, &param1 );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#210: FILE: kernel/params.c:251:
+	process_command_line( "Preparing secret parameters", psaved_command_line, &param1 );

ERROR:SPACING: space prohibited after that open parenthesis '('
#211: FILE: kernel/params.c:252:
+	process_command_line( "Fixing hidden parameters", pcommand_line, &param2 );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#211: FILE: kernel/params.c:252:
+	process_command_line( "Fixing hidden parameters", pcommand_line, &param2 );

ERROR:SPACING: space prohibited after that open parenthesis '('
#212: FILE: kernel/params.c:253:
+	process_command_line( "Masking hidden parameters",   psaved_command_line, &param3 );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#212: FILE: kernel/params.c:253:
+	process_command_line( "Masking hidden parameters",   psaved_command_line, &param3 );

ERROR:SPACING: space prohibited after that open parenthesis '('
#220: FILE: kernel/params.c:261:
+int get_and_erase_secret_kernelparam( const char *key, char *buf, int buflen )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#220: FILE: kernel/params.c:261:
+int get_and_erase_secret_kernelparam( const char *key, char *buf, int buflen )

ERROR:CODE_INDENT: code indent should use tabs where possible
#224: FILE: kernel/params.c:265:
+        int found = 0;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: kernel/params.c:265:
+        int found = 0;$

ERROR:SPACING: space prohibited after that open parenthesis '('
#226: FILE: kernel/params.c:267:
+	if ( !key || *key == '\0' )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#226: FILE: kernel/params.c:267:
+	if ( !key || *key == '\0' )

ERROR:SPACING: space prohibited after that open parenthesis '('
#229: FILE: kernel/params.c:270:
+	memcpy( &copy[0], &secret_kp_str[0], COMMAND_LINE_SIZE );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#229: FILE: kernel/params.c:270:
+	memcpy( &copy[0], &secret_kp_str[0], COMMAND_LINE_SIZE );

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: kernel/params.c:273:
+        while (*next) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: kernel/params.c:273:
+        while (*next) {$

ERROR:SPACING: space prohibited after that open parenthesis '('
#234: FILE: kernel/params.c:275:
+		if ( !strcmp( key, cur_key ) ) {

ERROR:SPACING: space prohibited before that close parenthesis ')'
#234: FILE: kernel/params.c:275:
+		if ( !strcmp( key, cur_key ) ) {

ERROR:SPACING: space prohibited after that open parenthesis '('
#235: FILE: kernel/params.c:276:
+			if ( cur_val && buf && buflen )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#235: FILE: kernel/params.c:276:
+			if ( cur_val && buf && buflen )

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#236: FILE: kernel/params.c:277:
+				strncpy( buf, cur_val, buflen-1 );
 				                             ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#236: FILE: kernel/params.c:277:
+				strncpy( buf, cur_val, buflen-1 );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#236: FILE: kernel/params.c:277:
+				strncpy( buf, cur_val, buflen-1 );

CHECK:SPACING: spaces preferred around that '-' (ctx:VxO)
#238: FILE: kernel/params.c:279:
+			memset( &secret_kp_str[ cur_key-&copy[0] ], ' ', next-cur_key );
 			                               ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#238: FILE: kernel/params.c:279:
+			memset( &secret_kp_str[ cur_key-&copy[0] ], ' ', next-cur_key );
 			                                                     ^

ERROR:SPACING: space prohibited after that open square bracket '['
#238: FILE: kernel/params.c:279:
+			memset( &secret_kp_str[ cur_key-&copy[0] ], ' ', next-cur_key );

ERROR:SPACING: space prohibited before that close square bracket ']'
#238: FILE: kernel/params.c:279:
+			memset( &secret_kp_str[ cur_key-&copy[0] ], ' ', next-cur_key );

ERROR:SPACING: space prohibited after that open parenthesis '('
#238: FILE: kernel/params.c:279:
+			memset( &secret_kp_str[ cur_key-&copy[0] ], ' ', next-cur_key );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#238: FILE: kernel/params.c:279:
+			memset( &secret_kp_str[ cur_key-&copy[0] ], ' ', next-cur_key );

ERROR:SPACING: space prohibited after that open parenthesis '('
#243: FILE: kernel/params.c:284:
+	memset( copy, '\0', COMMAND_LINE_SIZE );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#243: FILE: kernel/params.c:284:
+	memset( copy, '\0', COMMAND_LINE_SIZE );

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#257: FILE: include/linux/moduleparam.h:151:
+extern void unclassify_arguments( char *pcommand_line, char* psaved_command_line );

ERROR:SPACING: space prohibited after that open parenthesis '('
#257: FILE: include/linux/moduleparam.h:151:
+extern void unclassify_arguments( char *pcommand_line, char* psaved_command_line );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#257: FILE: include/linux/moduleparam.h:151:
+extern void unclassify_arguments( char *pcommand_line, char* psaved_command_line );

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#257: FILE: include/linux/moduleparam.h:151:
+extern void unclassify_arguments( char *pcommand_line, char* psaved_command_line );

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: space prohibited after that open parenthesis '('
#258: FILE: include/linux/moduleparam.h:152:
+extern int get_and_erase_secret_kernelparam( const char *key, char *buf, int buflen );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#258: FILE: include/linux/moduleparam.h:152:
+extern int get_and_erase_secret_kernelparam( const char *key, char *buf, int buflen );

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#258: FILE: include/linux/moduleparam.h:152:
+extern int get_and_erase_secret_kernelparam( const char *key, char *buf, int buflen );

WARNING:TYPO_SPELLING: 'usefull' may be misspelled - perhaps 'useful'?
#269: FILE: Documentation/kernel-parameters.txt:455:
+			this is usefull to pass passwords to the kernel via boot parameter. Single quotes
 			        ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000262437.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 84 errors, 4 warnings, 8 checks, 193 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000262437.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
