WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
git://dev.laptop.org/olpc-2.6 . (commit 5b9429be6056864b938ff6f39e5df3cecbbfcf4b).

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id '5b9429be6056864b938ff6f39e5df3cecbbfcf4b', maybe rebased or not pulled?
#41: 
git://dev.laptop.org/olpc-2.6 . (commit 5b9429be6056864b938ff6f39e5df3cecbbfcf4b).

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#62: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:TYPO_SPELLING: 'implemenations' may be misspelled - perhaps 'implementations'?
#79: FILE: Documentation/filesystems/ofwfs.txt:13:
+implemenations can be found at openbios.org.
 ^^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#113: FILE: Documentation/filesystems/ofwfs.txt:47:
+Composite property values that contain mixed types (e.g. a 32-bit integer $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#234: FILE: arch/i386/kernel/callofw.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#253: FILE: arch/i386/kernel/callofw.c:20:
+	int argarray[MAXARGS+3];
 	                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!call_firmware"
#260: FILE: arch/i386/kernel/callofw.c:27:
+	if (call_firmware == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:BRACES: braces {} are not necessary for single statement blocks
#267: FILE: arch/i386/kernel/callofw.c:34:
+	if ((numargs + numres) > MAXARGS) {
+		return (-1);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#272: FILE: arch/i386/kernel/callofw.c:39:
+	while (numargs--) {
+		argarray[argnum++] = va_arg(ap, int);
+	}

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#287: FILE: arch/i386/kernel/callofw.c:54:
+	return (retval);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#289: FILE: arch/i386/kernel/callofw.c:56:
+}
+#undef	MAXARGS

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#291: FILE: arch/i386/kernel/callofw.c:58:
+#if 0

CHECK:CAMELCASE: Avoid CamelCase: <The>
#293: FILE: arch/i386/kernel/callofw.c:60:
+The return value from callofw in all cases is 0 if the attempt to call the

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <That>
#294: FILE: arch/i386/kernel/callofw.c:61:
+function succeeded, nonzero otherwise.  That return value is from the

CHECK:CAMELCASE: Avoid CamelCase: <Any>
#295: FILE: arch/i386/kernel/callofw.c:62:
+gateway function only.  Any results from the called function are returned

CHECK:CAMELCASE: Avoid CamelCase: <Here>
#298: FILE: arch/i386/kernel/callofw.c:65:
+Here are call templates for all the standard OFW client services.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#325: FILE: arch/i386/kernel/callofw.c:92:
+callofw("interpret", numin+1, numout+1, cmdstr, in0, ..., &catchres, &out0, ...);
                           ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#325: FILE: arch/i386/kernel/callofw.c:92:
+callofw("interpret", numin+1, numout+1, cmdstr, in0, ..., &catchres, &out0, ...);
                                     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#361: FILE: arch/i386/kernel/head.S:139:
+1:      $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#373: FILE: arch/i386/kernel/ofw_fs.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#378: FILE: arch/i386/kernel/ofw_fs.c:6:
+ * "promfs" example written by Arnd Bergmann.  $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#403: FILE: arch/i386/kernel/ofw_fs.c:31:
+static ssize_t ofwfs_read(struct file *file, char __user *data,
+		size_t len, loff_t *ppos)

WARNING:CONST_STRUCT: struct file_operations should normally be const
#411: FILE: arch/i386/kernel/ofw_fs.c:39:
+static struct file_operations ofwfs_property_operations = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#416: FILE: arch/i386/kernel/ofw_fs.c:44:
+static struct inode *ofwfs_new_inode(struct super_block *sb,
+		int mode, void *data)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#429: FILE: arch/i386/kernel/ofw_fs.c:57:
+	inode->i_atime = inode->i_mtime = inode->i_ctime = CURRENT_TIME;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#447: FILE: arch/i386/kernel/ofw_fs.c:75:
+static int ofwfs_create_prop(struct super_block *sb, struct dentry *dir,
+				char *propname, struct propval *propval)

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#464: FILE: arch/i386/kernel/ofw_fs.c:92:
+	iput(inode);
 	^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#470: FILE: arch/i386/kernel/ofw_fs.c:98:
+static int ofwfs_create_props(struct super_block *sb, struct dentry *dir,
+		phandle node)

ERROR:CODE_INDENT: code indent should use tabs where possible
#481: FILE: arch/i386/kernel/ofw_fs.c:109:
+                             &flag), flag == 1) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#481: FILE: arch/i386/kernel/ofw_fs.c:109:
+	while ((void)callofw("nextprop", 3, 1, node, propname, propname,
+                             &flag), flag == 1) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#481: FILE: arch/i386/kernel/ofw_fs.c:109:
+                             &flag), flag == 1) {$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*propval)...) over kmalloc(sizeof(struct propval)...)
#487: FILE: arch/i386/kernel/ofw_fs.c:115:
+		propval = kmalloc(sizeof(struct propval) + len, GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: No space is necessary after a cast
#490: FILE: arch/i386/kernel/ofw_fs.c:118:
+		(void) callofw("getprop", 4, 1, node, propname, propval->value,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#502: FILE: arch/i386/kernel/ofw_fs.c:130:
+/*
+		ofwfs_remove_props(sb, dir);

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#510: FILE: arch/i386/kernel/ofw_fs.c:138:
+static int ofwfs_create_dir(struct super_block *sb,
+		struct dentry *parent, phandle node)

CHECK:SPACING: No space is necessary after a cast
#527: FILE: arch/i386/kernel/ofw_fs.c:155:
+		(void) callofw("package-to-path", 3, 1, node, NULL, 0,

CHECK:SPACING: No space is necessary after a cast
#530: FILE: arch/i386/kernel/ofw_fs.c:158:
+		path = kmalloc((size_t) pathlen + 1, GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#534: FILE: arch/i386/kernel/ofw_fs.c:162:
+		(void) callofw("package-to-path", 3, 1, node, path,

CHECK:SPACING: No space is necessary after a cast
#553: FILE: arch/i386/kernel/ofw_fs.c:181:
+	(void) callofw("child", 1, 1, node, &child);

CHECK:SPACING: No space is necessary after a cast
#558: FILE: arch/i386/kernel/ofw_fs.c:186:
+		(void) callofw("peer", 1, 1, child, &child);

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#567: FILE: arch/i386/kernel/ofw_fs.c:195:
+	iput(inode);
 	^^^^

CHECK:SPACING: No space is necessary after a cast
#577: FILE: arch/i386/kernel/ofw_fs.c:205:
+	(void) callofw("peer", 1, 1, 0, &root);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#578: FILE: arch/i386/kernel/ofw_fs.c:206:
+^I    $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#580: FILE: arch/i386/kernel/ofw_fs.c:208:
+		printk(KERN_ERR "ofwfs: can't find device tree root\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#603: FILE: arch/i386/kernel/ofw_fs.c:231:
+static int ofwfs_get_sb(struct file_system_type *fs_type,
+	int flags, const char *name, void *data, struct vfsmount *mnt)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#633: FILE: arch/i386/kernel/ofw_fs.c:261:
+}
+// module_exit(ofwfs_exit);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#640: FILE: include/asm-i386/callofw.h:1:
+#ifndef _I386_PROM_H

WARNING:NEW_TYPEDEFS: do not add new typedefs
#656: FILE: include/asm-i386/callofw.h:17:
+typedef void *phandle;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#658: FILE: include/asm-i386/callofw.h:19:
+extern int callofw(char *, int, int, ...);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#658: FILE: include/asm-i386/callofw.h:19:
+extern int callofw(char *, int, int, ...);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#658: FILE: include/asm-i386/callofw.h:19:
+extern int callofw(char *, int, int, ...);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#658: FILE: include/asm-i386/callofw.h:19:
+extern int callofw(char *, int, int, ...);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#670: FILE: include/asm-i386/setup.h:27:
+#define OFW_INFO_OFFSET^I^I0xb0 ^I/* Relative to real mode data */$

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000005650.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 6 errors, 21 warnings, 27 checks, 578 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000005650.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
