WARNING:TYPO_SPELLING: 'chello' may be misspelled - perhaps 'cello'?
#33: 
> Peter Zijlstra <a.p.zijlstra@chello.nl> wrote:
                               ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#72: FILE: include/linux/sched.h:347:
+^I * Last value of global fault stamp as seen by this process. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#115: FILE: kernel/fork.c:539:
+good_mm:^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#119: FILE: kernel/fork.c:543:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#159: FILE: mm/thrash.c:16:
+ * the token from bouncing around too often and to let the task make $

ERROR:GLOBAL_INITIALISERS: do not initialise globals to NULL
#197: FILE: mm/thrash.c:26:
+struct mm_struct * swap_token_mm = NULL;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#197: FILE: mm/thrash.c:26:
+struct mm_struct * swap_token_mm = NULL;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#198: FILE: mm/thrash.c:27:
+unsigned int global_faults = 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#217: FILE: mm/thrash.c:32:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#218: FILE: mm/thrash.c:33:
+^Iglobal_faults++; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#221: FILE: mm/thrash.c:36:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!swap_token_mm"
#228: FILE: mm/thrash.c:41:
+	if (swap_token_mm == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#238: FILE: mm/thrash.c:48:
+^I^Iif (current_interval < current->mm->last_interval) $

CHECK:BRACES: braces {} should be used on all arms of this statement
#238: FILE: mm/thrash.c:48:
+		if (current_interval < current->mm->last_interval) 
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#240: FILE: mm/thrash.c:50:
+		else {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#271: FILE: mm/thrash.c:61:
 	}
+	else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000030229.commit.8e73d15569f5a0577a8fa73f87817b476f68864f total: 12 errors, 1 warnings, 3 checks, 208 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.EfiDkiSq0Q//home/fedora/lkml-analysis/lkml/0/patch.offset.0000030229.commit.8e73d15569f5a0577a8fa73f87817b476f68864f has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
