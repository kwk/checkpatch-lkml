WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#65: 
Actually one can consider this as tmpfs or something like that. Code supports

WARNING:TYPO_SPELLING: 'happend' may be misspelled - perhaps 'happened'?
#83: 
So, anyone who managed to read up to this and happend to be at LCA 08 just has to
                                              ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BAD_SIGN_OFF: Non-standard signature: Crappy-stuff-created-by:
#95: 
Crappy-stuff-created-by: Evgeniy Polyakov <johnpol@2ka.mipt.ru>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#105: FILE: fs/Kconfig:1522:
+source "fs/pohmelfs/Kconfig"

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#120: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#125: FILE: fs/pohmelfs/Kconfig:1:
+config POHMELFS
+	tristate "POHMELFS filesystem support"
+	help
+	  POHMELFS stands for Parallel Optimized Host Message Exchange Layered File System.
+	  This is a network filesystem which supports coherent caching of data and metadata
+	  on clients.

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#146: FILE: fs/pohmelfs/config.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#169: FILE: fs/pohmelfs/config.c:24:
+struct pohmelfs_config
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*cfg)...) over kmalloc(sizeof(struct pohmelfs_config)...)
#210: FILE: fs/pohmelfs/config.c:65:
+	cfg = kmalloc(sizeof(struct pohmelfs_config), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*ack)...) over kmalloc(sizeof(struct pohmelfs_cn_ack)...)
#233: FILE: fs/pohmelfs/config.c:88:
+	ack = kmalloc(sizeof(struct pohmelfs_cn_ack), GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#258: FILE: fs/pohmelfs/config.c:113:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#272: FILE: fs/pohmelfs/dir.c:1:
+/*

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#323: FILE: fs/pohmelfs/dir.c:52:
+static struct pohmelfs_name *pohmelfs_insert_offset(struct pohmelfs_inode *pi,
+		struct pohmelfs_name *new)

CHECK:BRACES: braces {} should be used on all arms of this statement
#335: FILE: fs/pohmelfs/dir.c:64:
+		if (cmp < 0)
[...]
+		else if (cmp > 0)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#339: FILE: fs/pohmelfs/dir.c:68:
+		else {

WARNING:LONG_LINE_STRING: line length of 124 exceeds 100 columns
#346: FILE: fs/pohmelfs/dir.c:75:
+		dprintk("%s: exist: offset: %llu, ino: %llu, hash: %x, data: '%s', new: ino: %llu, hash: %x, data: '%s'.\n",

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#347: FILE: fs/pohmelfs/dir.c:76:
+			__func__, ret->offset, ret->ino, ret->hash, ret->data, new->ino, new->hash, new->data);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#358: FILE: fs/pohmelfs/dir.c:87:
+static struct pohmelfs_name *pohmelfs_insert_name_hash(struct rb_root *root,
+		struct pohmelfs_name *new)

CHECK:BRACES: braces {} should be used on all arms of this statement
#370: FILE: fs/pohmelfs/dir.c:99:
+		if (cmp < 0)
[...]
+		else if (cmp > 0)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#374: FILE: fs/pohmelfs/dir.c:103:
+		else {

WARNING:LONG_LINE_STRING: line length of 110 exceeds 100 columns
#381: FILE: fs/pohmelfs/dir.c:110:
+		dprintk("%s: exist: ino: %llu, hash: %x, data: '%s', new: ino: %llu, hash: %x, data: '%s'.\n",

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#382: FILE: fs/pohmelfs/dir.c:111:
+				__func__, ret->ino, ret->hash, ret->data, new->ino, new->hash, new->data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#382: FILE: fs/pohmelfs/dir.c:111:
+		dprintk("%s: exist: ino: %llu, hash: %x, data: '%s', new: ino: %llu, hash: %x, data: '%s'.\n",
+				__func__, ret->ino, ret->hash, ret->data, new->ino, new->hash, new->data);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#388: FILE: fs/pohmelfs/dir.c:117:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#390: FILE: fs/pohmelfs/dir.c:119:
+	dprintk("%s: inserted: ino: %llu, hash: %x, data: '%s'.\n",
+			__func__, new->ino, new->hash, new->data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#396: FILE: fs/pohmelfs/dir.c:125:
+static struct pohmelfs_name *pohmelfs_search_name_hash(struct rb_root *root,
+		u64 parent, u32 hash, u32 len)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#415: FILE: fs/pohmelfs/dir.c:144:
+	dprintk("%s: Failed to find a name for parent %llu, hash: %x, len: %u.\n",
+			__func__, parent, hash, len);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#419: FILE: fs/pohmelfs/dir.c:148:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#433: FILE: fs/pohmelfs/dir.c:162:
+	dprintk("%s: parent: '%s', name: %p/'%s', decr: %d.\n",
+			__func__, parent->name.data, node, node->data, decr);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*n)...) over kzalloc(sizeof(struct pohmelfs_name)...)
#445: FILE: fs/pohmelfs/dir.c:174:
+	n = kzalloc(sizeof(struct pohmelfs_name) + len, GFP_KERNEL);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#449: FILE: fs/pohmelfs/dir.c:178:
+	n->data = (char *)(n+1);
 	                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#456: FILE: fs/pohmelfs/dir.c:185:
+static struct pohmelfs_inode *pohmelfs_new_inode(struct pohmelfs_sb *psb, struct pohmelfs_inode *parent,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#457: FILE: fs/pohmelfs/dir.c:186:
+static struct pohmelfs_inode *pohmelfs_new_inode(struct pohmelfs_sb *psb, struct pohmelfs_inode *parent,
+		char *data, struct netfs_cmd *cmd, struct netfs_inode_info *info)

WARNING:LONG_LINE_STRING: line length of 104 exceeds 100 columns
#463: FILE: fs/pohmelfs/dir.c:192:
+	dprintk("%s: creating inode for data: '%s', info_ino: %llu, cmd_ino: %llu, parent_ino: %llu.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#464: FILE: fs/pohmelfs/dir.c:193:
+	dprintk("%s: creating inode for data: '%s', info_ino: %llu, cmd_ino: %llu, parent_ino: %llu.\n",
+			__func__, data, info->ino, cmd->ino, (parent)?parent->ino:0);

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#464: FILE: fs/pohmelfs/dir.c:193:
+			__func__, data, info->ino, cmd->ino, (parent)?parent->ino:0);
 			                                             ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#464: FILE: fs/pohmelfs/dir.c:193:
+			__func__, data, info->ino, cmd->ino, (parent)?parent->ino:0);
 			                                                         ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#484: FILE: fs/pohmelfs/dir.c:213:
+		npi->name.ino = npi->ino = info->ino;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#485: FILE: fs/pohmelfs/dir.c:214:
+		npi->name.parent = npi->parent = (parent)?parent->ino:0;
 		                                         ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#485: FILE: fs/pohmelfs/dir.c:214:
+		npi->name.parent = npi->parent = (parent)?parent->ino:0;
 		                                                     ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#485: FILE: fs/pohmelfs/dir.c:214:
+		npi->name.parent = npi->parent = (parent)?parent->ino:0;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#526: FILE: fs/pohmelfs/dir.c:255:
+		dprintk("%s: %s inserted name: %p/'%s', offset: %llu, ino: %llu, parent: %llu.\n",
+				__func__, (name)?"unsuccessfully":"successfully",

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#526: FILE: fs/pohmelfs/dir.c:255:
+				__func__, (name)?"unsuccessfully":"successfully",
 				                ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#526: FILE: fs/pohmelfs/dir.c:255:
+				__func__, (name)?"unsuccessfully":"successfully",
 				                                 ^

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#543: FILE: fs/pohmelfs/dir.c:272:
+		iput(new);
 		^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#554: FILE: fs/pohmelfs/dir.c:283:
+	printk("%s: putting inode: %p, npi: %p, error: %d, count: %d, nlink: %u.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#555: FILE: fs/pohmelfs/dir.c:284:
+	printk("%s: putting inode: %p, npi: %p, error: %d, count: %d, nlink: %u.\n",
+			__func__, new, npi, err, atomic_read(&new->i_count), new->i_nlink);

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#556: FILE: fs/pohmelfs/dir.c:285:
+	iput(new);
 	^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#562: FILE: fs/pohmelfs/dir.c:291:
+static int netfs_recv_inode_info(struct pohmelfs_sb *psb, struct pohmelfs_inode *parent,
+		struct pohmelfs_inode **newp, char *data)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#570: FILE: fs/pohmelfs/dir.c:299:
+	dprintk("%s: receiving inode info, data: %p, parent: %llu, st: %p.\n",
+			__func__, data, (parent)?parent->ino:0, st);

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#570: FILE: fs/pohmelfs/dir.c:299:
+			__func__, data, (parent)?parent->ino:0, st);
 			                        ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#570: FILE: fs/pohmelfs/dir.c:299:
+			__func__, data, (parent)?parent->ino:0, st);
 			                                    ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#600: FILE: fs/pohmelfs/dir.c:329:
+		printk("%s: wrong received data size: %llu, ino: %llu.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#601: FILE: fs/pohmelfs/dir.c:330:
+		printk("%s: wrong received data size: %llu, ino: %llu.\n",
+			__func__, cmd->size, cmd->ino);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#602: FILE: fs/pohmelfs/dir.c:331:
+		BUG_ON(1);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:TRAILING_WHITESPACE: trailing whitespace
#631: FILE: fs/pohmelfs/dir.c:360:
+^I$

CHECK:BRACES: braces {} should be used on all arms of this statement
#637: FILE: fs/pohmelfs/dir.c:366:
+	if (IS_ERR(npi)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#642: FILE: fs/pohmelfs/dir.c:371:
+	} else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#644: FILE: fs/pohmelfs/dir.c:373:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#646: FILE: fs/pohmelfs/dir.c:375:
+	dprintk("%s: all is ok, total_size: %d, err: %d.\n",
+			__func__, total_size, err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#671: FILE: fs/pohmelfs/dir.c:400:
+	dprintk("%s: start: %llu, inode: %p [%lu].\n",
+			__func__, start, inode, inode->i_ino);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#702: FILE: fs/pohmelfs/dir.c:431:
+		ps = size = cmd->size;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#763: FILE: fs/pohmelfs/dir.c:492:
+		dprintk("%s: offset: %llu, parent ino: %lu, n: %p.\n",
+				__func__, file->f_pos, pi->vfs_inode.i_ino, n);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#772: FILE: fs/pohmelfs/dir.c:501:
+		err = filldir(dirent, n->data, n->len, file->f_pos,
+				n->ino, (n->mode >> 12) & 15);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#792: FILE: fs/pohmelfs/dir.c:521:
+struct pohmelfs_inode *pohmelfs_process_lookup_request(struct pohmelfs_sb *psb,
+		struct pohmelfs_inode *parent, char *name, __u32 len, __u32 hash)

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#807: FILE: fs/pohmelfs/dir.c:536:
+	cmd->ino = (parent)?parent->ino:0;
 	                   ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#807: FILE: fs/pohmelfs/dir.c:536:
+	cmd->ino = (parent)?parent->ino:0;
 	                               ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#814: FILE: fs/pohmelfs/dir.c:543:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#830: FILE: fs/pohmelfs/dir.c:559:
+^I$

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#843: FILE: fs/pohmelfs/dir.c:572:
+struct dentry *pohmelfs_lookup(struct inode *dir, struct dentry *dentry, struct nameidata *nd)
                                                                                            ^^

WARNING:SPLIT_STRING: quoted string split across lines
#854: FILE: fs/pohmelfs/dir.c:583:
+	dprintk("%s: dir: %p, dir_ino: %lu, dentry: %p, dinode: %p, "
+			"name: %s, len: %u.\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#860: FILE: fs/pohmelfs/dir.c:589:
+		npi = pohmelfs_search_hash(&psb->hash_root, dir->i_ino, dentry->d_name.hash, dentry->d_name.len);

WARNING:LONG_LINE: line length of 120 exceeds 100 columns
#869: FILE: fs/pohmelfs/dir.c:598:
+		n = pohmelfs_search_name_hash(&parent->hash_root, parent->ino, dentry->d_name.hash, dentry->d_name.len);

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#874: FILE: fs/pohmelfs/dir.c:603:
+				iput(inode);
 				^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!inode"
#886: FILE: fs/pohmelfs/dir.c:615:
+	if (inode == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#906: FILE: fs/pohmelfs/dir.c:635:
+	dprintk("%s: dir_ino: %lu, name: '%s', mode: %o, start: %llu.\n",
+			__func__, dir->i_ino, dentry->d_name.name, mode, start);

WARNING:LONG_LINE_STRING: line length of 111 exceeds 100 columns
#943: FILE: fs/pohmelfs/dir.c:672:
+	dprintk("%s: dir: '%s', nlink: %u, inode: '%s', nlink: %u, d_count: %d, d_unhashed: %d, dentry: %p.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#944: FILE: fs/pohmelfs/dir.c:673:
+	dprintk("%s: dir: '%s', nlink: %u, inode: '%s', nlink: %u, d_count: %d, d_unhashed: %d, dentry: %p.\n",
+			__func__,

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#961: FILE: fs/pohmelfs/dir.c:690:
+		struct nameidata *nd)
 		                  ^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#961: FILE: fs/pohmelfs/dir.c:690:
+static int pohmelfs_create(struct inode *dir, struct dentry *dentry, int mode,
+		struct nameidata *nd)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#989: FILE: fs/pohmelfs/dir.c:718:
+	dprintk("%s: dir_ino: %lu, inode: %lu, name: '%s', nlink: %u.\n",
+			__func__, dir->i_ino, inode->i_ino, dentry->d_name.name, inode->i_nlink);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1008: FILE: fs/pohmelfs/dir.c:737:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1015: FILE: fs/pohmelfs/dir.c:744:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1024: FILE: fs/pohmelfs/dir.c:753:
+	dprintk("%s: dir_ino: %lu, inode: %lu, name: '%s', err: %d.\n",
+			__func__, dir->i_ino, inode->i_ino, dentry->d_name.name, err);

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#1031: FILE: fs/pohmelfs/dir.c:760:
+		n = pohmelfs_search_name_hash(&parent->hash_root, parent->ino, pi->name.hash, pi->name.len);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1037: FILE: fs/pohmelfs/dir.c:766:
+^I^I$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1038: FILE: fs/pohmelfs/dir.c:767:
+		if (!err) {
+			pohmelfs_inode_del_inode(psb, pi);
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1041: FILE: fs/pohmelfs/dir.c:770:
+^I^I$

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#1044: FILE: fs/pohmelfs/dir.c:773:
+				__func__, inode->i_ino, inode->i_state & I_LOCK, hlist_unhashed(&inode->i_hash));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1044: FILE: fs/pohmelfs/dir.c:773:
+		dprintk("%s: inode: %lu, lock: %ld, unhashed: %d.\n",
+				__func__, inode->i_ino, inode->i_state & I_LOCK, hlist_unhashed(&inode->i_hash));

WARNING:LONG_LINE_STRING: line length of 120 exceeds 100 columns
#1070: FILE: fs/pohmelfs/dir.c:799:
+	dprintk("%s: dentry: %p, dir: '%s', nlink: %u, inode: '%s', nlink: %u, d_count: %d, d_unhashed: %d, err: %d.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1071: FILE: fs/pohmelfs/dir.c:800:
+	dprintk("%s: dentry: %p, dir: '%s', nlink: %u, inode: '%s', nlink: %u, d_count: %d, d_unhashed: %d, err: %d.\n",
+			__func__, dentry,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1080: FILE: fs/pohmelfs/dir.c:809:
+static int pohmelfs_link(struct dentry *old_dentry, struct inode *dir,
+	struct dentry *dentry)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1098: FILE: fs/pohmelfs/dir.c:827:
+	dprintk("%s: dir_ino: %lu, dentry: '%s', dino: %p, symname: '%s'.\n",
+			__func__, dir->i_ino, dentry->d_name.name, dentry->d_inode, symname);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRWXUGO' are not preferred. Consider using octal permissions '0777'.
#1111: FILE: fs/pohmelfs/dir.c:840:
+	netfs_set_cmd_flags(cmd, dentry->d_name.hash, S_IFLNK | S_IRWXUGO);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#1156: FILE: fs/pohmelfs/dir.c:885:
+	.symlink= pohmelfs_symlink,
 	        ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1170: FILE: fs/pohmelfs/inode.c:1:
+/*

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1200: FILE: fs/pohmelfs/inode.c:31:
+struct pohmelfs_inode *pohmelfs_search_hash(struct rb_root *root, u64 parent,
+		u32 hash, u32 len)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1219: FILE: fs/pohmelfs/inode.c:50:
+	dprintk("%s: Failed to find a name for parent %llu, hash: %x, len: %u.\n",
+			__func__, parent, hash, len);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1224: FILE: fs/pohmelfs/inode.c:55:
+static struct pohmelfs_inode *pohmelfs_insert_hash(struct rb_root *root,
+		struct pohmelfs_inode *new)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1236: FILE: fs/pohmelfs/inode.c:67:
+		if (cmp < 0)
[...]
+		else if (cmp > 0)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1240: FILE: fs/pohmelfs/inode.c:71:
+		else {

WARNING:LONG_LINE_STRING: line length of 108 exceeds 100 columns
#1247: FILE: fs/pohmelfs/inode.c:78:
+		dprintk("%s: exist: ino: %lu, hash: %x, data: '%s', new: ino: %lu, hash: %x, data: '%s'.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1248: FILE: fs/pohmelfs/inode.c:79:
+		dprintk("%s: exist: ino: %lu, hash: %x, data: '%s', new: ino: %lu, hash: %x, data: '%s'.\n",
+				__func__,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1256: FILE: fs/pohmelfs/inode.c:87:
+^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1258: FILE: fs/pohmelfs/inode.c:89:
+	dprintk("%s: inserted: ino: %lu, hash: %x, data: '%s'.\n",
+			__func__, new->vfs_inode.i_ino, new->name.hash, new->name.data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1285: FILE: fs/pohmelfs/inode.c:116:
+	dprintk("%s: pi: %p, ino: %llu, name: '%s'.\n",
+			__func__, pi, pi->ino, pi->name.data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1306: FILE: fs/pohmelfs/inode.c:137:
+	dprintk("%s: page: %p, ino: %lu, start: %llu, idx: %lu, cmd: %llu, size: %llu.\n",
+			__func__, page, inode->i_ino, cmd->start, page->index, cmd_op, size);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1345: FILE: fs/pohmelfs/inode.c:176:
+^I^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1384: FILE: fs/pohmelfs/inode.c:215:
+	dprintk("%s: page: %p, start: %llu/%llx, size: %llu, err: %d.\n",
+			__func__, page, cmd->start, cmd->start, cmd->size, err);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1400: FILE: fs/pohmelfs/inode.c:231:
+static int pohmelfs_prepare_write(struct file *file, struct page *page,
+			unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1400: FILE: fs/pohmelfs/inode.c:231:
+			unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1400: FILE: fs/pohmelfs/inode.c:231:
+			unsigned from, unsigned to)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1403: FILE: fs/pohmelfs/inode.c:234:
+	dprintk("%s: ino: %lu, from: %u, to: %u.\n",
+			__func__, page->mapping->host->i_ino, from, to);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1409: FILE: fs/pohmelfs/inode.c:240:
+static int pohmelfs_commit_write(struct file *file, struct page *page,
+		unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1409: FILE: fs/pohmelfs/inode.c:240:
+		unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1409: FILE: fs/pohmelfs/inode.c:240:
+		unsigned from, unsigned to)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1413: FILE: fs/pohmelfs/inode.c:244:
+	unsigned end = page_private(page);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1416: FILE: fs/pohmelfs/inode.c:247:
+	dprintk("%s: ino: %lu, from: %u, to: %u, end: %u, pos: %llu, i_size: %llu.\n",
+			__func__, inode->i_ino, from, to, end, pos, inode->i_size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1450: FILE: fs/pohmelfs/inode.c:281:
+	dprintk("%s: inode: %p, vfs_inode: %p.\n",
+			__func__, pi, inode);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1453: FILE: fs/pohmelfs/inode.c:284:
+	if (pi->name.data)
+		kfree(pi->name.data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1465: FILE: fs/pohmelfs/inode.c:296:
+	dprintk("%s: inode: %p, vfs_inode: %p.\n",
+			__func__, inode, &inode->vfs_inode);

WARNING:STATIC_CONST: Move const after static - use 'static const struct file_operations '
#1481: FILE: fs/pohmelfs/inode.c:312:
+const static struct file_operations pohmelfs_file_ops = {

WARNING:SPLIT_STRING: quoted string split across lines
#1519: FILE: fs/pohmelfs/inode.c:350:
+	dprintk("%s: inode: %p, num: %lu, parent: %llu hash: %x, data: '%s', "
+			"inode is regular: %d, dir: %d, link: %d, mode: %o.\n",

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1525: FILE: fs/pohmelfs/inode.c:356:
+	inode->i_mtime = inode->i_atime = inode->i_ctime = CURRENT_TIME_SEC;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1533: FILE: fs/pohmelfs/inode.c:364:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1562: FILE: fs/pohmelfs/inode.c:393:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1570: FILE: fs/pohmelfs/inode.c:401:
+^I$

WARNING:RETURN_VOID: void function return statements are not generally useful
#1616: FILE: fs/pohmelfs/inode.c:447:
+	return;
+}

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#1627: FILE: fs/pohmelfs/inode.c:458:
+		iput(&pi->vfs_inode);
 		^^^^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*psb)...) over kzalloc(sizeof(struct pohmelfs_sb)...)
#1654: FILE: fs/pohmelfs/inode.c:485:
+	psb = kzalloc(sizeof(struct pohmelfs_sb), GFP_KERNEL);

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#1687: FILE: fs/pohmelfs/inode.c:518:
+	iput(root);
 	^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1697: FILE: fs/pohmelfs/inode.c:528:
+static int pohmelfs_get_sb(struct file_system_type *fs_type,
+	int flags, const char *dev_name, void *data, struct vfsmount *mnt)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1707: FILE: fs/pohmelfs/inode.c:538:
+^I.kill_sb ^I= kill_anon_super,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1720: FILE: fs/pohmelfs/inode.c:551:
+	pohmelfs_inode_cache = kmem_cache_create("pohmelfs_inode_cache",
+				sizeof(struct pohmelfs_inode),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1721: FILE: fs/pohmelfs/inode.c:552:
+				0, (SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD),
 				                        ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1762: FILE: fs/pohmelfs/inode.c:593:
+        unregister_filesystem(&pohmel_fs_type);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1762: FILE: fs/pohmelfs/inode.c:593:
+        unregister_filesystem(&pohmel_fs_type);$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1779: FILE: fs/pohmelfs/net.c:1:
+/*

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1802: FILE: fs/pohmelfs/net.c:24:
+	BUG_ON(!size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1816: FILE: fs/pohmelfs/net.c:38:
+	err = kernel_recvmsg(st->socket, &msg, &iov, 1, iov.iov_len,
+			msg.msg_flags);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1817: FILE: fs/pohmelfs/net.c:39:
+	if (err <= 0) {
+		printk("%s: failed to receive data: size: %llu, err: %d.\n", __func__, size, err);
+	}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1818: FILE: fs/pohmelfs/net.c:40:
+		printk("%s: failed to receive data: size: %llu, err: %d.\n", __func__, size, err);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1830: FILE: fs/pohmelfs/net.c:52:
+	BUG_ON(!size);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1844: FILE: fs/pohmelfs/net.c:66:
+	if (err <= 0) {
+		printk("%s: failed to send data: size: %llu, err: %d.\n", __func__, size, err);
+	}

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1845: FILE: fs/pohmelfs/net.c:67:
+		printk("%s: failed to send data: size: %llu, err: %d.\n", __func__, size, err);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ctl)...) over kzalloc(sizeof(struct pohmelfs_ctl)...)
#1858: FILE: fs/pohmelfs/net.c:80:
+	ctl = kzalloc(sizeof(struct pohmelfs_ctl), GFP_KERNEL);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1897: FILE: fs/pohmelfs/netfs.h:1:
+/*

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1922: FILE: fs/pohmelfs/netfs.h:26:
+struct netfs_cmd
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1957: FILE: fs/pohmelfs/netfs.h:61:
+struct saddr
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1963: FILE: fs/pohmelfs/netfs.h:67:
+struct pohmelfs_ctl
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1972: FILE: fs/pohmelfs/netfs.h:76:
+struct pohmelfs_cn_ack
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#1979: FILE: fs/pohmelfs/netfs.h:83:
+struct netfs_inode_info
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#2035: FILE: fs/pohmelfs/netfs.h:139:
+struct pohmelfs_name
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#2050: FILE: fs/pohmelfs/netfs.h:154:
+struct pohmelfs_inode
+{

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#2055: FILE: fs/pohmelfs/netfs.h:159:
+	struct mutex		offset_lock;

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#2068: FILE: fs/pohmelfs/netfs.h:172:
+struct netfs_state
+{

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#2069: FILE: fs/pohmelfs/netfs.h:173:
+	struct mutex		lock;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2070: FILE: fs/pohmelfs/netfs.h:174:
+^Istruct netfs_cmd ^Icmd;$

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#2076: FILE: fs/pohmelfs/netfs.h:180:
+struct pohmelfs_sb
+{

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#2078: FILE: fs/pohmelfs/netfs.h:182:
+	struct mutex		hash_lock;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2095: FILE: fs/pohmelfs/netfs.h:199:
+extern int __init pohmelfs_config_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2096: FILE: fs/pohmelfs/netfs.h:200:
+extern void __exit pohmelfs_config_exit(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2097: FILE: fs/pohmelfs/netfs.h:201:
+extern int pohmelfs_copy_config(struct pohmelfs_ctl *dst, unsigned int idx);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2102: FILE: fs/pohmelfs/netfs.h:206:
+extern int netfs_data_recv(struct netfs_state *st, void *buf, u64 size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2103: FILE: fs/pohmelfs/netfs.h:207:
+extern int netfs_data_send(struct netfs_state *st, void *buf, u64 size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2104: FILE: fs/pohmelfs/netfs.h:208:
+extern int pohmelfs_state_init(struct netfs_state *st, unsigned int idx);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2105: FILE: fs/pohmelfs/netfs.h:209:
+extern void pohmelfs_state_exit(struct netfs_state *st);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2107: FILE: fs/pohmelfs/netfs.h:211:
+extern struct pohmelfs_inode *pohmelfs_fill_inode(struct pohmelfs_inode *pi,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2108: FILE: fs/pohmelfs/netfs.h:212:
+extern struct pohmelfs_inode *pohmelfs_fill_inode(struct pohmelfs_inode *pi,
+		struct netfs_inode_info *info);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2121: FILE: fs/pohmelfs/netfs.h:225:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2126: FILE: fs/pohmelfs/netfs.h:230:
+^I$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2130: FILE: fs/pohmelfs/netfs.h:234:
+extern struct pohmelfs_inode *pohmelfs_search_hash(struct rb_root *root,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2131: FILE: fs/pohmelfs/netfs.h:235:
+extern struct pohmelfs_inode *pohmelfs_search_hash(struct rb_root *root,
+		u64 parent, u32 hash, u32 len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2133: FILE: fs/pohmelfs/netfs.h:237:
+extern struct pohmelfs_inode *pohmelfs_process_lookup_request(struct pohmelfs_sb *psb,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2134: FILE: fs/pohmelfs/netfs.h:238:
+extern struct pohmelfs_inode *pohmelfs_process_lookup_request(struct pohmelfs_sb *psb,
+		struct pohmelfs_inode *parent, char *name, __u32 len, __u32 hash);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2143: FILE: fs/pohmelfs/netfs.h:247:
+#define dprintk(f, a...) printk(f, ##a)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000328618.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 29 errors, 56 warnings, 92 checks, 2002 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000328618.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
