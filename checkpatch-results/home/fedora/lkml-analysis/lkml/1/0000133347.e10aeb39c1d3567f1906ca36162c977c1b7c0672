CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#121: FILE: arch/x86/include/asm/irq.h:51:
+extern void cleanup_pending_irqs(unsigned int cpu);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#139: FILE: arch/x86/kernel/apic/io_apic.c:4207:
+void cleanup_pending_irqs(unsigned me)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#142: FILE: arch/x86/kernel/apic/io_apic.c:4210:
+	unsigned vector;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#167: FILE: arch/x86/kernel/apic/io_apic.c:4235:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:INDENTED_LABEL: labels should not be indented
#183: FILE: arch/x86/kernel/apic/io_apic.c:4251:
+	unlock:

ERROR:TRAILING_WHITESPACE: trailing whitespace
#185: FILE: arch/x86/kernel/apic/io_apic.c:4253:
+^I^I$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#187: FILE: arch/x86/kernel/apic/io_apic.c:4255:
+			printk(KERN_EMERG "irq: %i left on downed cpu %d\n", irq, me);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'action != CPU_DOWN_PREPARE'
#209: FILE: arch/x86/kernel/irq.c:266:
+	if ((action != CPU_DOWN_PREPARE) && (action != CPU_DOWN_PREPARE_FROZEN))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'action != CPU_DOWN_PREPARE_FROZEN'
#209: FILE: arch/x86/kernel/irq.c:266:
+	if ((action != CPU_DOWN_PREPARE) && (action != CPU_DOWN_PREPARE_FROZEN))

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#221: FILE: arch/x86/kernel/irq.c:278:
+#if 0

WARNING:IF_1: Consider removing the #if 1 and its #endif
#232: FILE: arch/x86/kernel/irq.c:289:
+#if 1

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#233: FILE: arch/x86/kernel/irq.c:290:
+	printk(KERN_DEBUG "%s action: %lx cpu_down_prepare: %d cpu_down_prepare_frozen: %d done\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#234: FILE: arch/x86/kernel/irq.c:291:
+	printk(KERN_DEBUG "%s action: %lx cpu_down_prepare: %d cpu_down_prepare_frozen: %d done\n",
+		__func__, action,

WARNING:IF_1: Consider removing the #if 1 and its #endif
#246: FILE: arch/x86/kernel/irq.c:303:
+#if 1

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#247: FILE: arch/x86/kernel/irq.c:304:
+	printk(KERN_DEBUG "%s\n",__func__);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#247: FILE: arch/x86/kernel/irq.c:304:
+	printk(KERN_DEBUG "%s\n",__func__);
 	                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#247: FILE: arch/x86/kernel/irq.c:304:
+	printk(KERN_DEBUG "%s\n",__func__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#253: FILE: arch/x86/kernel/irq.c:310:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#274: FILE: arch/x86/kernel/irq.c:331:
+			printk("Breaking affinity for irq %i\n", irq);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#281: FILE: arch/x86/kernel/irq.c:338:
+			printk("Cannot set affinity for irq %i\n", irq);

WARNING:IF_1: Consider removing the #if 1 and its #endif
#282: FILE: arch/x86/kernel/irq.c:339:
+#if 1

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#283: FILE: arch/x86/kernel/irq.c:340:
+		printk(KERN_DEBUG "irq: %i moved: %d action: %p\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#284: FILE: arch/x86/kernel/irq.c:341:
+		printk(KERN_DEBUG "irq: %i moved: %d action: %p\n",
+			irq, ret == 0, desc->action);

WARNING:IF_1: Consider removing the #if 1 and its #endif
#288: FILE: arch/x86/kernel/irq.c:345:
+#if 1

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#289: FILE: arch/x86/kernel/irq.c:346:
+	printk(KERN_DEBUG "%s done\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#289: FILE: arch/x86/kernel/irq.c:346:
+	printk(KERN_DEBUG "%s done\n", __func__);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000133347.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 17 warnings, 6 checks, 235 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000133347.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
