WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#61: FILE: drivers/misc/hpilo.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#199: FILE: drivers/misc/hpilo.c:139:
+	CTRL_SET(ccb->send_ctrl, l2desc_sz, nr_desc-1, nr_desc-1, 0, 1);
 	                                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#199: FILE: drivers/misc/hpilo.c:139:
+	CTRL_SET(ccb->send_ctrl, l2desc_sz, nr_desc-1, nr_desc-1, 0, 1);
 	                                                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#200: FILE: drivers/misc/hpilo.c:140:
+	CTRL_SET(ccb->recv_ctrl, l2desc_sz, nr_desc-1, nr_desc-1, 0, 1);
 	                                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#200: FILE: drivers/misc/hpilo.c:140:
+	CTRL_SET(ccb->recv_ctrl, l2desc_sz, nr_desc-1, nr_desc-1, 0, 1);
 	                                                      ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#241: FILE: drivers/misc/hpilo.c:181:
+		if (!(ioread32(&device_ccb->send_ctrl) & (1 << CTRL_BITPOS_A))
+		    &&

CHECK:BRACES: braces {} should be used on all arms of this statement
#524: FILE: drivers/misc/hpilo.c:464:
+	if (hw->ccb_alloc[slot]->ccb_cnt == 1) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#525: FILE: drivers/misc/hpilo.c:465:
+	if (hw->ccb_alloc[slot]->ccb_cnt == 1) {
+

CHECK:BRACES: Unbalanced braces around else statement
#532: FILE: drivers/misc/hpilo.c:472:
+	} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#555: FILE: drivers/misc/hpilo.c:495:
+	if (hw->ccb_alloc[slot] == NULL) {
[...]
+	} else if (fp->f_flags & O_EXCL || hw->ccb_alloc[slot]->ccb_excl) {
[...]
+	} else
[...]

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hw->ccb_alloc[slot]"
#555: FILE: drivers/misc/hpilo.c:495:
+	if (hw->ccb_alloc[slot] == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*data)...) over kzalloc(sizeof(struct ccb_data)...)
#558: FILE: drivers/misc/hpilo.c:498:
+		data = kzalloc(sizeof(struct ccb_data), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:BRACES: Unbalanced braces around else statement
#575: FILE: drivers/misc/hpilo.c:515:
+	} else

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#594: FILE: drivers/misc/hpilo.c:534:
+^I.open ^I^I= ilo_open,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#595: FILE: drivers/misc/hpilo.c:535:
+^I.release ^I= ilo_close,$

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#605: FILE: drivers/misc/hpilo.c:545:
+static int __devinit ilo_map_device(struct pci_dev *pdev, struct ilo_hwinfo *hw)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hw->mmio_vaddr"
#611: FILE: drivers/misc/hpilo.c:551:
+	if (hw->mmio_vaddr == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hw->ram_vaddr"
#618: FILE: drivers/misc/hpilo.c:558:
+	if (hw->ram_vaddr == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hw->db_vaddr"
#625: FILE: drivers/misc/hpilo.c:565:
+	if (hw->db_vaddr == NULL) {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#658: FILE: drivers/misc/hpilo.c:598:
+static int __devinit ilo_probe(struct pci_dev *pdev,

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ilo_hw)...) over kzalloc(sizeof(struct ilo_hwinfo)...)
#679: FILE: drivers/misc/hpilo.c:619:
+	ilo_hw = kzalloc(sizeof(struct ilo_hwinfo), GFP_KERNEL);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#741: FILE: drivers/misc/hpilo.c:681:
+^I.name ^I  = ILO_NAME,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#743: FILE: drivers/misc/hpilo.c:683:
+^I.probe ^I  = ilo_probe,$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#796: FILE: drivers/misc/hpilo.h:1:
+/*

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#836: FILE: drivers/misc/hpilo.h:41:
+	spinlock_t alloc_lock;

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#837: FILE: drivers/misc/hpilo.h:42:
+	spinlock_t fifo_lock;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#853: FILE: drivers/misc/hpilo.h:58:
+#define ILOHW_CCB_SZ ^I128$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#887: FILE: drivers/misc/hpilo.h:92:
+#define RECVQ ^I^I2$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#888: FILE: drivers/misc/hpilo.h:93:
+#define NR_QENTRY    ^I4$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#889: FILE: drivers/misc/hpilo.h:94:
+#define L2_QENTRY_SZ ^I12$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#900: FILE: drivers/misc/hpilo.h:105:
+^I((_c) =^I^I^I ^I ^I \$

CHECK:BIT_MACRO: Prefer using the BIT macro
#909: FILE: drivers/misc/hpilo.h:114:
+#define ONE_DB_SIZE		(1 << L2_DB_SIZE)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#943: FILE: drivers/misc/hpilo.h:148:
+#define ILO_CACHE_SZ ^I 128$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#945: FILE: drivers/misc/hpilo.h:150:
+    u64 nrents;^I/* user requested number of fifo entries */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#946: FILE: drivers/misc/hpilo.h:151:
+    u64 imask;  /* mask to extract valid fifo index */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#947: FILE: drivers/misc/hpilo.h:152:
+    u64 merge;^I/*  O/C bits to merge in during enqueue operation */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#948: FILE: drivers/misc/hpilo.h:153:
+    u64 reset;^I/* set to non-zero when the target device resets */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#949: FILE: drivers/misc/hpilo.h:154:
+    u8  pad_0[ILO_CACHE_SZ - (sizeof(u64) * 4)];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#951: FILE: drivers/misc/hpilo.h:156:
+    u64 head;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#952: FILE: drivers/misc/hpilo.h:157:
+    u8  pad_1[ILO_CACHE_SZ - (sizeof(u64))];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#954: FILE: drivers/misc/hpilo.h:159:
+    u64 tail;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#955: FILE: drivers/misc/hpilo.h:160:
+    u8  pad_2[ILO_CACHE_SZ - (sizeof(u64))];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#957: FILE: drivers/misc/hpilo.h:162:
+    u64 fifobar[1];$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#966: FILE: drivers/misc/hpilo.h:171:
+#define FIFO_SZ(_num) (((_num)*sizeof(u64)) + FIFOHANDLESIZE)
                               ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse '_B' - possible side-effects?
#999: FILE: drivers/misc/hpilo.h:204:
+#define QWORDS(_B) (((_B) & 7) ? (((_B) >> 3) + 1) : ((_B) >> 3))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1015: FILE: drivers/misc/Kconfig:400:
+^I  servers.  Upon loading, the driver creates /dev/hpilo/dXccbN files, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000262656.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 24 warnings, 21 checks, 958 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000262656.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
