WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
> > send the fixes so far upstream to Linus so that the SMP fix is available

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#147: FILE: include/asm-generic/percpu.h:14:
+#define DEFINE_PER_CPU(type, name) \
+    __attribute__((__section__(".data.percpu"))) __typeof__(type) per_cpu__##name

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: include/asm-generic/percpu.h:15:
+    __attribute__((__section__(".data.percpu"))) __typeof__(type) per_cpu__##name$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".data.percpu") over __attribute__((__section__(".data.percpu")))
#148: FILE: include/asm-generic/percpu.h:15:
+    __attribute__((__section__(".data.percpu"))) __typeof__(type) per_cpu__##name

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#150: FILE: include/asm-generic/percpu.h:17:
+#define DEFINE_PER_CPU_SHARED_ALIGNED(type, name)		\
+    __attribute__((__section__(".data.percpu.shared_aligned"))) \
+    __typeof__(type) per_cpu__##name				\
+    ____cacheline_aligned_in_smp

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: include/asm-generic/percpu.h:18:
+    __attribute__((__section__(".data.percpu.shared_aligned"))) \$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".data.percpu.shared_aligned") over __attribute__((__section__(".data.percpu.shared_aligned")))
#151: FILE: include/asm-generic/percpu.h:18:
+    __attribute__((__section__(".data.percpu.shared_aligned"))) \

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: include/asm-generic/percpu.h:19:
+    __typeof__(type) per_cpu__##name^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: include/asm-generic/percpu.h:20:
+    ____cacheline_aligned_in_smp$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#157: FILE: include/asm-generic/percpu.h:24:
+	extern int simple_identifier_##var(void);	\

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#167: FILE: include/asm-generic/percpu.h:34:
+		memcpy((pcpudst)+__per_cpu_offset[__i],		\
 		                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#175: FILE: include/asm-generic/percpu.h:39:
+#define DEFINE_PER_CPU(type, name) \
+    __typeof__(type) per_cpu__##name

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: include/asm-generic/percpu.h:40:
+    __typeof__(type) per_cpu__##name$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#179: FILE: include/asm-generic/percpu.h:43:
+    DEFINE_PER_CPU(type, name)$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#190: FILE: include/asm-generic/percpu.h:51:
+#define DECLARE_PER_CPU(type, name) extern __typeof__(type) per_cpu__##name

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#194: FILE: include/asm-generic/percpu.h:53:
+#define EXPORT_PER_CPU_SYMBOL(var) EXPORT_SYMBOL(per_cpu__##var)

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#195: FILE: include/asm-generic/percpu.h:54:
+#define EXPORT_PER_CPU_SYMBOL_GPL(var) EXPORT_SYMBOL_GPL(per_cpu__##var)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#210: FILE: include/asm-ia64/percpu.h:19:
+# define __SMALL_ADDR_AREA	__attribute__((__model__ (__small__)))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#216: FILE: include/asm-ia64/percpu.h:24:
+#define DECLARE_PER_CPU(type, name)				\
+	extern __SMALL_ADDR_AREA __typeof__(type) per_cpu__##name

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#220: FILE: include/asm-ia64/percpu.h:28:
+#define DEFINE_PER_CPU(type, name)				\
+	__attribute__((__section__(".data.percpu")))		\
+	__SMALL_ADDR_AREA __typeof__(type) per_cpu__##name

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".data.percpu") over __attribute__((__section__(".data.percpu")))
#221: FILE: include/asm-ia64/percpu.h:29:
+	__attribute__((__section__(".data.percpu")))		\

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#225: FILE: include/asm-ia64/percpu.h:33:
+#define DEFINE_PER_CPU_SHARED_ALIGNED(type, name)			\
+	__attribute__((__section__(".data.percpu.shared_aligned")))	\
+	__SMALL_ADDR_AREA __typeof__(type) per_cpu__##name		\
+	____cacheline_aligned_in_smp

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".data.percpu.shared_aligned") over __attribute__((__section__(".data.percpu.shared_aligned")))
#226: FILE: include/asm-ia64/percpu.h:34:
+	__attribute__((__section__(".data.percpu.shared_aligned")))	\

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#248: FILE: include/asm-ia64/percpu.h:56:
+#define __raw_get_cpu_var(var) (*RELOC_HIDE(&per_cpu__##var, __ia64_per_cpu_var(local_per_cpu_offset)))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#250: FILE: include/asm-ia64/percpu.h:58:
+extern void percpu_modcopy(void *pcpudst, const void *src, unsigned long size);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#251: FILE: include/asm-ia64/percpu.h:59:
+extern void setup_per_cpu_areas (void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#251: FILE: include/asm-ia64/percpu.h:59:
+extern void setup_per_cpu_areas (void);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#265: FILE: include/asm-ia64/percpu.h:71:
+#define EXPORT_PER_CPU_SYMBOL(var)		EXPORT_SYMBOL(per_cpu__##var)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000328916.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 17 warnings, 4 checks, 223 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000328916.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
