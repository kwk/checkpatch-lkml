WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#63: FILE: mm/memory-failure.c:324:
+static const char *hwpoison_page_type_name[] = {

ERROR:SPACING: space prohibited after that open square bracket '['
#64: FILE: mm/memory-failure.c:325:
+	[ PAGE_IS_KERNEL ]	= "kernel",

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close square bracket ']'
#64: FILE: mm/memory-failure.c:325:
+	[ PAGE_IS_KERNEL ]	= "kernel",

ERROR:SPACING: space prohibited after that open square bracket '['
#65: FILE: mm/memory-failure.c:326:
+	[ PAGE_IS_FS_METADATA ]	= "fs_metadata",

ERROR:SPACING: space prohibited before that close square bracket ']'
#65: FILE: mm/memory-failure.c:326:
+	[ PAGE_IS_FS_METADATA ]	= "fs_metadata",

ERROR:SPACING: space prohibited after that open square bracket '['
#66: FILE: mm/memory-failure.c:327:
+	[ PAGE_IS_FILE_DATA ]	= "file_data",

ERROR:SPACING: space prohibited before that close square bracket ']'
#66: FILE: mm/memory-failure.c:327:
+	[ PAGE_IS_FILE_DATA ]	= "file_data",

ERROR:SPACING: space prohibited after that open square bracket '['
#67: FILE: mm/memory-failure.c:328:
+	[ PAGE_IS_ANON_DATA ]	= "anon_data",

ERROR:SPACING: space prohibited before that close square bracket ']'
#67: FILE: mm/memory-failure.c:328:
+	[ PAGE_IS_ANON_DATA ]	= "anon_data",

ERROR:SPACING: space prohibited after that open square bracket '['
#68: FILE: mm/memory-failure.c:329:
+	[ PAGE_IS_SWAP_CACHE ]	= "swap_cache",

ERROR:SPACING: space prohibited before that close square bracket ']'
#68: FILE: mm/memory-failure.c:329:
+	[ PAGE_IS_SWAP_CACHE ]	= "swap_cache",

ERROR:SPACING: space prohibited after that open square bracket '['
#69: FILE: mm/memory-failure.c:330:
+	[ PAGE_IS_FREE ]	= "free",

ERROR:SPACING: space prohibited before that close square bracket ']'
#69: FILE: mm/memory-failure.c:330:
+	[ PAGE_IS_FREE ]	= "free",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mapping"
#88: FILE: mm/memory-failure.c:382:
+	if (mapping == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#112: FILE: mm/memory-failure.c:401:
+			printk(KERN_ERR

CHECK:BRACES: braces {} should be used on all arms of this statement
#173: FILE: mm/memory-failure.c:792:
+		if (is_free_buddy_page(p)) {
[...]
-		else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#179: FILE: mm/memory-failure.c:797:
+		} else

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!p->mapping"
#197: FILE: mm/memory-failure.c:825:
+		if (!PageSwapCache(p) && p->mapping == NULL) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000110279.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 12 errors, 2 warnings, 4 checks, 145 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000110279.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
