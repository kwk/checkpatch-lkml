WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#50: FILE: include/asm-ia64/kvm.h:1:
+#ifndef __ASM_IA64_KVM_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#69: FILE: include/asm-ia64/kvm.h:19:
+ * this program; if not, write to the Free Software Foundation, Inc., 59 Temple$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#112: FILE: include/asm-ia64/kvm.h:62:
+#define KVM_CONTEXT_SIZE	8*1024
                         	 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#112: FILE: include/asm-ia64/kvm.h:62:
+#define KVM_CONTEXT_SIZE	8*1024

WARNING:TYPO_SPELLING: 'cann't' may be misspelled - perhaps 'can't'?
#158: FILE: include/asm-ia64/kvm.h:108:
+			/* 61 entry cann't be inserted into machine TLB.*/
 			            ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#257: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#262: FILE: include/asm-ia64/kvm_host.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#279: FILE: include/asm-ia64/kvm_host.h:18:
+ * this program; if not, write to the Free Software Foundation, Inc., 59 Temple$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#287: FILE: include/asm-ia64/kvm_host.h:26:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#302: FILE: include/asm-ia64/kvm_host.h:41:
+
+

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#315: FILE: include/asm-ia64/kvm_host.h:54:
+#define KVM_VMM_SIZE (16UL<<20)
                           ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#318: FILE: include/asm-ia64/kvm_host.h:57:
+#define VMM_SIZE (8UL<<20)
                      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#325: FILE: include/asm-ia64/kvm_host.h:64:
+#define KVM_VM_BUFFER_SIZE (8UL<<20)
                                ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#329: FILE: include/asm-ia64/kvm_host.h:68:
+#define KVM_VM_DATA_SIZE (1UL << KVM_VM_DATA_SHIFT)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#332: FILE: include/asm-ia64/kvm_host.h:71:
+
+

CHECK:BIT_MACRO: Prefer using the BIT macro
#341: FILE: include/asm-ia64/kvm_host.h:80:
+#define VHPT_SIZE       (1UL << VHPT_SHIFT)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#342: FILE: include/asm-ia64/kvm_host.h:81:
+#define VHPT_NUM_ENTRIES (1<<(VHPT_SHIFT-5))
                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#342: FILE: include/asm-ia64/kvm_host.h:81:
+#define VHPT_NUM_ENTRIES (1<<(VHPT_SHIFT-5))
                                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#344: FILE: include/asm-ia64/kvm_host.h:83:
+#define KVM_VTLB_BASE   (KVM_VHPT_BASE+KVM_VHPT_BLOCK_SIZE)
                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#345: FILE: include/asm-ia64/kvm_host.h:84:
+#define KVM_VTLB_OFS    (KVM_VHPT_OFS+KVM_VHPT_BLOCK_SIZE)
                                      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#346: FILE: include/asm-ia64/kvm_host.h:85:
+#define KVM_VTLB_BLOCK_SIZE   (1UL<<20)
                                   ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#346: FILE: include/asm-ia64/kvm_host.h:85:
+#define KVM_VTLB_BLOCK_SIZE   (1UL<<20)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#348: FILE: include/asm-ia64/kvm_host.h:87:
+#define VTLB_SIZE       (1UL<<VTLB_SHIFT)
                             ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#348: FILE: include/asm-ia64/kvm_host.h:87:
+#define VTLB_SIZE       (1UL<<VTLB_SHIFT)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#349: FILE: include/asm-ia64/kvm_host.h:88:
+#define VTLB_NUM_ENTRIES (1<<(VTLB_SHIFT-5))
                            ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#349: FILE: include/asm-ia64/kvm_host.h:88:
+#define VTLB_NUM_ENTRIES (1<<(VTLB_SHIFT-5))
                                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#351: FILE: include/asm-ia64/kvm_host.h:90:
+#define KVM_VPD_BASE   (KVM_VTLB_BASE+KVM_VTLB_BLOCK_SIZE)
                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#352: FILE: include/asm-ia64/kvm_host.h:91:
+#define KVM_VPD_OFS    (KVM_VTLB_OFS+KVM_VTLB_BLOCK_SIZE)
                                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#353: FILE: include/asm-ia64/kvm_host.h:92:
+#define KVM_VPD_BLOCK_SIZE   (2UL<<20)
                                  ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#355: FILE: include/asm-ia64/kvm_host.h:94:
+#define VPD_SIZE        (1UL<<VPD_SHIFT)
                             ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#355: FILE: include/asm-ia64/kvm_host.h:94:
+#define VPD_SIZE        (1UL<<VPD_SHIFT)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#357: FILE: include/asm-ia64/kvm_host.h:96:
+#define KVM_VCPU_BASE   (KVM_VPD_BASE+KVM_VPD_BLOCK_SIZE)
                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#358: FILE: include/asm-ia64/kvm_host.h:97:
+#define KVM_VCPU_OFS    (KVM_VPD_OFS+KVM_VPD_BLOCK_SIZE)
                                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#359: FILE: include/asm-ia64/kvm_host.h:98:
+#define KVM_VCPU_BLOCK_SIZE   (2UL<<20)
                                   ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#361: FILE: include/asm-ia64/kvm_host.h:100:
+#define VCPU_SIZE (1UL<<VCPU_SHIFT)
                       ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#361: FILE: include/asm-ia64/kvm_host.h:100:
+#define VCPU_SIZE (1UL<<VCPU_SHIFT)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#362: FILE: include/asm-ia64/kvm_host.h:101:
+#define MAX_VCPU_NUM KVM_VCPU_BLOCK_SIZE/VCPU_SIZE
                                         ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#362: FILE: include/asm-ia64/kvm_host.h:101:
+#define MAX_VCPU_NUM KVM_VCPU_BLOCK_SIZE/VCPU_SIZE

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#364: FILE: include/asm-ia64/kvm_host.h:103:
+#define KVM_VM_BASE     (KVM_VCPU_BASE+KVM_VCPU_BLOCK_SIZE)
                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#365: FILE: include/asm-ia64/kvm_host.h:104:
+#define KVM_VM_OFS      (KVM_VCPU_OFS+KVM_VCPU_BLOCK_SIZE)
                                      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#366: FILE: include/asm-ia64/kvm_host.h:105:
+#define KVM_VM_BLOCK_SIZE     (1UL<<19)
                                   ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#366: FILE: include/asm-ia64/kvm_host.h:105:
+#define KVM_VM_BLOCK_SIZE     (1UL<<19)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#368: FILE: include/asm-ia64/kvm_host.h:107:
+#define KVM_MEM_DIRTY_LOG_BASE (KVM_VM_BASE+KVM_VM_BLOCK_SIZE)
                                            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#369: FILE: include/asm-ia64/kvm_host.h:108:
+#define KVM_MEM_DIRTY_LOG_OFS  (KVM_VM_OFS+KVM_VM_BLOCK_SIZE)
                                           ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#370: FILE: include/asm-ia64/kvm_host.h:109:
+#define KVM_MEM_DIRTY_LOG_SIZE (1UL<<19)
                                    ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#370: FILE: include/asm-ia64/kvm_host.h:109:
+#define KVM_MEM_DIRTY_LOG_SIZE (1UL<<19)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#373: FILE: include/asm-ia64/kvm_host.h:112:
+#define VPD_ADDR(n) (KVM_VPD_BASE+n*VPD_SIZE)
                                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#373: FILE: include/asm-ia64/kvm_host.h:112:
+#define VPD_ADDR(n) (KVM_VPD_BASE+n*VPD_SIZE)
                                    ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'n' may be better as '(n)' to avoid precedence issues
#373: FILE: include/asm-ia64/kvm_host.h:112:
+#define VPD_ADDR(n) (KVM_VPD_BASE+n*VPD_SIZE)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#374: FILE: include/asm-ia64/kvm_host.h:113:
+#define VHPT_ADDR(n) (KVM_VHPT_BASE+n*VHPT_SIZE)
                                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#374: FILE: include/asm-ia64/kvm_host.h:113:
+#define VHPT_ADDR(n) (KVM_VHPT_BASE+n*VHPT_SIZE)
                                      ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'n' may be better as '(n)' to avoid precedence issues
#374: FILE: include/asm-ia64/kvm_host.h:113:
+#define VHPT_ADDR(n) (KVM_VHPT_BASE+n*VHPT_SIZE)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#375: FILE: include/asm-ia64/kvm_host.h:114:
+#define VTLB_ADDR(n) (KVM_VTLB_BASE+n*VTLB_SIZE)
                                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#375: FILE: include/asm-ia64/kvm_host.h:114:
+#define VTLB_ADDR(n) (KVM_VTLB_BASE+n*VTLB_SIZE)
                                      ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'n' may be better as '(n)' to avoid precedence issues
#375: FILE: include/asm-ia64/kvm_host.h:114:
+#define VTLB_ADDR(n) (KVM_VTLB_BASE+n*VTLB_SIZE)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#376: FILE: include/asm-ia64/kvm_host.h:115:
+#define VCPU_ADDR(n) (KVM_VCPU_BASE+n*VCPU_SIZE)
                                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#376: FILE: include/asm-ia64/kvm_host.h:115:
+#define VCPU_ADDR(n) (KVM_VCPU_BASE+n*VCPU_SIZE)
                                      ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'n' may be better as '(n)' to avoid precedence issues
#376: FILE: include/asm-ia64/kvm_host.h:115:
+#define VCPU_ADDR(n) (KVM_VCPU_BASE+n*VCPU_SIZE)

CHECK:BIT_MACRO: Prefer using the BIT macro
#389: FILE: include/asm-ia64/kvm_host.h:128:
+#define GPFN_FRAME_BUFFER   (1UL << 60) /* VGA framebuffer */

CHECK:BIT_MACRO: Prefer using the BIT macro
#398: FILE: include/asm-ia64/kvm_host.h:137:
+#define GPFN_INV_MASK       (1UL << 63) /* Guest pfn is invalid */

CHECK:BIT_MACRO: Prefer using the BIT macro
#400: FILE: include/asm-ia64/kvm_host.h:139:
+#define MEM_G   (1UL << 30)

CHECK:BIT_MACRO: Prefer using the BIT macro
#401: FILE: include/asm-ia64/kvm_host.h:140:
+#define MEM_M   (1UL << 20)

CHECK:CAMELCASE: Avoid CamelCase: <dest_Fixed>
#416: FILE: include/asm-ia64/kvm_host.h:155:
+#define dest_Fixed IOSAPIC_FIXED

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <dest_LowestPrio>
#417: FILE: include/asm-ia64/kvm_host.h:156:
+#define dest_LowestPrio IOSAPIC_LOWEST_PRIORITY

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#419: FILE: include/asm-ia64/kvm_host.h:158:
+#define NMI_VECTOR      ^I^I2$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#420: FILE: include/asm-ia64/kvm_host.h:159:
+#define ExtINT_VECTOR       ^I^I0$

CHECK:CAMELCASE: Avoid CamelCase: <ExtINT_VECTOR>
#420: FILE: include/asm-ia64/kvm_host.h:159:
+#define ExtINT_VECTOR       		0

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#421: FILE: include/asm-ia64/kvm_host.h:160:
+#define NULL_VECTOR     ^I^I(-1)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#422: FILE: include/asm-ia64/kvm_host.h:161:
+#define IA64_SPURIOUS_INT_VECTOR    ^I0x0f$

WARNING:SPACING: missing space after struct definition
#447: FILE: include/asm-ia64/kvm_host.h:186:
+struct kvm_guest_debug{

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#451: FILE: include/asm-ia64/kvm_host.h:190:
+	uint64_t addr;          /*  physical address		*/

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#452: FILE: include/asm-ia64/kvm_host.h:191:
+	uint64_t size;          /*  size in bytes		*/

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#453: FILE: include/asm-ia64/kvm_host.h:192:
+	uint64_t data;          /*  data (or paddr of data)     */

WARNING:SPACING: missing space after struct definition
#459: FILE: include/asm-ia64/kvm_host.h:198:
+struct kvm_pal_call{

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#461: FILE: include/asm-ia64/kvm_host.h:200:
+	uint64_t gr28;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#462: FILE: include/asm-ia64/kvm_host.h:201:
+	uint64_t gr29;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#463: FILE: include/asm-ia64/kvm_host.h:202:
+	uint64_t gr30;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#464: FILE: include/asm-ia64/kvm_host.h:203:
+	uint64_t gr31;

WARNING:SPACING: missing space after struct definition
#470: FILE: include/asm-ia64/kvm_host.h:209:
+struct kvm_sal_call{

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#472: FILE: include/asm-ia64/kvm_host.h:211:
+	uint64_t in0;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#473: FILE: include/asm-ia64/kvm_host.h:212:
+	uint64_t in1;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#474: FILE: include/asm-ia64/kvm_host.h:213:
+	uint64_t in2;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#475: FILE: include/asm-ia64/kvm_host.h:214:
+	uint64_t in3;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#476: FILE: include/asm-ia64/kvm_host.h:215:
+	uint64_t in4;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#477: FILE: include/asm-ia64/kvm_host.h:216:
+	uint64_t in5;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#478: FILE: include/asm-ia64/kvm_host.h:217:
+	uint64_t in6;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#479: FILE: include/asm-ia64/kvm_host.h:218:
+	uint64_t in7;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#485: FILE: include/asm-ia64/kvm_host.h:224:
+	uint64_t old_rr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#486: FILE: include/asm-ia64/kvm_host.h:225:
+	uint64_t new_rr;

WARNING:SPACING: missing space after union definition
#489: FILE: include/asm-ia64/kvm_host.h:228:
+union ia64_ipi_a{

WARNING:SPACING: missing space after struct definition
#510: FILE: include/asm-ia64/kvm_host.h:249:
+struct kvm_ipi_data{

WARNING:SPACING: missing space after struct definition
#524: FILE: include/asm-ia64/kvm_host.h:263:
+struct exit_ctl_data{

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#525: FILE: include/asm-ia64/kvm_host.h:264:
+	uint32_t exit_reason;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#526: FILE: include/asm-ia64/kvm_host.h:265:
+	uint32_t vm_status;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#671: FILE: include/asm-ia64/kvm_host.h:410:
+^Iunsigned long ^Ivpd_base;$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#672: FILE: include/asm-ia64/kvm_host.h:411:
+	spinlock_t dirty_log_lock;

CHECK:SPACING: No space is necessary after a cast
#767: FILE: include/asm-ia64/kvm_host.h:506:
+	return (struct kvm_pt_regs *) ((unsigned long) v + IA64_STK_OFFSET) - 1;

WARNING:SPACING: missing space after struct definition
#773: FILE: include/asm-ia64/kvm_host.h:512:
+struct kvm_vmm_info{

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#775: FILE: include/asm-ia64/kvm_host.h:514:
+^Ikvm_vmm_entry ^I*vmm_entry;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#777: FILE: include/asm-ia64/kvm_host.h:516:
+^Iunsigned long ^Ivmm_ivt;$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#792: FILE: include/asm-ia64/kvm_para.h:1:
+#ifndef __IA64_KVM_PARA_H

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#810: FILE: include/asm-ia64/kvm_para.h:19:
+ * this program; if not, write to the Free Software Foundation, Inc., 59 Temple$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000294399.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 19 warnings, 78 checks, 761 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000294399.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
