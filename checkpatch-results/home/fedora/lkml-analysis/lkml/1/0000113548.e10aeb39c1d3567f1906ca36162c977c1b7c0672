WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#54: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#75: FILE: arch/score/kernel/init_task.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#76: FILE: arch/score/kernel/init_task.c:2:
+ * arch/score/kernel/init_task.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#95: FILE: arch/score/kernel/init_task.c:21:
+ * 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: arch/score/kernel/init_task.c:40:
+       __attribute__((__section__(".data.init_task"))) =$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".data.init_task") over __attribute__((__section__(".data.init_task")))
#114: FILE: arch/score/kernel/init_task.c:40:
+       __attribute__((__section__(".data.init_task"))) =

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: arch/score/kernel/init_task.c:41:
+               { INIT_THREAD_INFO(init_task) };$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: arch/score/kernel/init_task.c:41:
+               { INIT_THREAD_INFO(init_task) };$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#115: FILE: arch/score/kernel/init_task.c:41:
+       __attribute__((__section__(".data.init_task"))) =
+               { INIT_THREAD_INFO(init_task) };

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#130: FILE: arch/score/kernel/irq.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#131: FILE: arch/score/kernel/irq.c:2:
+ * arch/score/kernel/irq.c

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#152: FILE: arch/score/kernel/irq.c:23:
+ * 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#159: FILE: arch/score/kernel/irq.c:30:
+#include <asm/io.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: arch/score/kernel/irq.c:37:
+       irq_enter();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: arch/score/kernel/irq.c:38:
+       generic_handle_irq(irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: arch/score/kernel/irq.c:39:
+       irq_exit();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#176: FILE: arch/score/kernel/irq.c:47:
+       printk(KERN_ERR "unexpected IRQ # %d\n", irq);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#176: FILE: arch/score/kernel/irq.c:47:
+       printk(KERN_ERR "unexpected IRQ # %d\n", irq);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#181: FILE: arch/score/kernel/irq.c:52:
+       unsigned int irq_source = 63 - irq_nr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: arch/score/kernel/irq.c:54:
+       if (irq_source < 32)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#183: FILE: arch/score/kernel/irq.c:54:
+       if (irq_source < 32)
+               __raw_writel((__raw_readl((void *)P_INT_MASKL) | \

ERROR:CODE_INDENT: code indent should use tabs where possible
#184: FILE: arch/score/kernel/irq.c:55:
+               __raw_writel((__raw_readl((void *)P_INT_MASKL) | \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: arch/score/kernel/irq.c:55:
+               __raw_writel((__raw_readl((void *)P_INT_MASKL) | \$

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#184: FILE: arch/score/kernel/irq.c:55:
+               __raw_writel((__raw_readl((void *)P_INT_MASKL) | \

ERROR:CODE_INDENT: code indent should use tabs where possible
#185: FILE: arch/score/kernel/irq.c:56:
+                       (1 << irq_source)), (void *)P_INT_MASKL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#185: FILE: arch/score/kernel/irq.c:56:
+                       (1 << irq_source)), (void *)P_INT_MASKL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: arch/score/kernel/irq.c:57:
+       else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#186: FILE: arch/score/kernel/irq.c:57:
+       else
+               __raw_writel((__raw_readl((void *)P_INT_MASKH) | \

ERROR:CODE_INDENT: code indent should use tabs where possible
#187: FILE: arch/score/kernel/irq.c:58:
+               __raw_writel((__raw_readl((void *)P_INT_MASKH) | \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#187: FILE: arch/score/kernel/irq.c:58:
+               __raw_writel((__raw_readl((void *)P_INT_MASKH) | \$

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#187: FILE: arch/score/kernel/irq.c:58:
+               __raw_writel((__raw_readl((void *)P_INT_MASKH) | \

ERROR:CODE_INDENT: code indent should use tabs where possible
#188: FILE: arch/score/kernel/irq.c:59:
+                       (1 << (irq_source - 32))), (void *)P_INT_MASKH);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#188: FILE: arch/score/kernel/irq.c:59:
+                       (1 << (irq_source - 32))), (void *)P_INT_MASKH);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: arch/score/kernel/irq.c:64:
+       unsigned int irq_source = 63 - irq_nr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: arch/score/kernel/irq.c:66:
+       if (irq_source < 32)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#195: FILE: arch/score/kernel/irq.c:66:
+       if (irq_source < 32)
+               __raw_writel((__raw_readl((void *)P_INT_MASKL) & \

ERROR:CODE_INDENT: code indent should use tabs where possible
#196: FILE: arch/score/kernel/irq.c:67:
+               __raw_writel((__raw_readl((void *)P_INT_MASKL) & \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: arch/score/kernel/irq.c:67:
+               __raw_writel((__raw_readl((void *)P_INT_MASKL) & \$

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#196: FILE: arch/score/kernel/irq.c:67:
+               __raw_writel((__raw_readl((void *)P_INT_MASKL) & \

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: arch/score/kernel/irq.c:68:
+                       ~(1 << irq_source)), (void *)P_INT_MASKL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: arch/score/kernel/irq.c:68:
+                       ~(1 << irq_source)), (void *)P_INT_MASKL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: arch/score/kernel/irq.c:69:
+       else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#198: FILE: arch/score/kernel/irq.c:69:
+       else
+               __raw_writel((__raw_readl((void *)P_INT_MASKH) & \

ERROR:CODE_INDENT: code indent should use tabs where possible
#199: FILE: arch/score/kernel/irq.c:70:
+               __raw_writel((__raw_readl((void *)P_INT_MASKH) & \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#199: FILE: arch/score/kernel/irq.c:70:
+               __raw_writel((__raw_readl((void *)P_INT_MASKH) & \$

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#199: FILE: arch/score/kernel/irq.c:70:
+               __raw_writel((__raw_readl((void *)P_INT_MASKH) & \

ERROR:CODE_INDENT: code indent should use tabs where possible
#200: FILE: arch/score/kernel/irq.c:71:
+                       ~(1 << (irq_source - 32))), (void *)P_INT_MASKH);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: arch/score/kernel/irq.c:71:
+                       ~(1 << (irq_source - 32))), (void *)P_INT_MASKH);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: arch/score/kernel/irq.c:75:
+       .name           = "Score7-level",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: arch/score/kernel/irq.c:76:
+       .mask           = score_mask,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: arch/score/kernel/irq.c:77:
+       .mask_ack       = score_mask,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: arch/score/kernel/irq.c:78:
+       .unmask         = score_unmask,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: arch/score/kernel/irq.c:86:
+       int index;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: arch/score/kernel/irq.c:87:
+       unsigned long target_addr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: arch/score/kernel/irq.c:89:
+       for (index = 0; index < NR_IRQS; ++index)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#218: FILE: arch/score/kernel/irq.c:89:
+       for (index = 0; index < NR_IRQS; ++index)
+               set_irq_chip_and_handler(index, &score_irq_chip,

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: arch/score/kernel/irq.c:90:
+               set_irq_chip_and_handler(index, &score_irq_chip,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: arch/score/kernel/irq.c:90:
+               set_irq_chip_and_handler(index, &score_irq_chip,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: arch/score/kernel/irq.c:91:
+                                        handle_level_irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: arch/score/kernel/irq.c:91:
+                                        handle_level_irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: arch/score/kernel/irq.c:93:
+       for (target_addr = IRQ_VECTOR_BASE_ADDR;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#222: FILE: arch/score/kernel/irq.c:93:
+       for (target_addr = IRQ_VECTOR_BASE_ADDR;
[...]
+               memcpy((void *)target_addr, \

ERROR:CODE_INDENT: code indent should use tabs where possible
#223: FILE: arch/score/kernel/irq.c:94:
+               target_addr <= IRQ_VECTOR_END_ADDR;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: arch/score/kernel/irq.c:94:
+               target_addr <= IRQ_VECTOR_END_ADDR;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#224: FILE: arch/score/kernel/irq.c:95:
+               target_addr += IRQ_VECTOR_SIZE)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: arch/score/kernel/irq.c:95:
+               target_addr += IRQ_VECTOR_SIZE)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#225: FILE: arch/score/kernel/irq.c:96:
+               memcpy((void *)target_addr, \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: arch/score/kernel/irq.c:96:
+               memcpy((void *)target_addr, \$

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#225: FILE: arch/score/kernel/irq.c:96:
+               memcpy((void *)target_addr, \

ERROR:CODE_INDENT: code indent should use tabs where possible
#226: FILE: arch/score/kernel/irq.c:97:
+                       interrupt_exception_vector, IRQ_VECTOR_SIZE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: arch/score/kernel/irq.c:97:
+                       interrupt_exception_vector, IRQ_VECTOR_SIZE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: arch/score/kernel/irq.c:99:
+       __raw_writel(0xffffffff, (void *)P_INT_MASKL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: arch/score/kernel/irq.c:100:
+       __raw_writel(0xffffffff, (void *)P_INT_MASKH);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: arch/score/kernel/irq.c:102:
+       __asm__ __volatile__($

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#231: FILE: arch/score/kernel/irq.c:102:
+       __asm__ __volatile__(

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: arch/score/kernel/irq.c:103:
+               "mtcr   %0, cr3\n\t"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: arch/score/kernel/irq.c:103:
+               "mtcr   %0, cr3\n\t"$

ERROR:CODE_INDENT: code indent should use tabs where possible
#233: FILE: arch/score/kernel/irq.c:104:
+               : : "r" (EXCEPTION_VECTOR_BASE_ADDR | \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#233: FILE: arch/score/kernel/irq.c:104:
+               : : "r" (EXCEPTION_VECTOR_BASE_ADDR | \$

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#233: FILE: arch/score/kernel/irq.c:104:
+               : : "r" (EXCEPTION_VECTOR_BASE_ADDR | \

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: arch/score/kernel/irq.c:105:
+                       VECTOR_ADDRESS_OFFSET_MODE16));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: arch/score/kernel/irq.c:105:
+                       VECTOR_ADDRESS_OFFSET_MODE16));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: arch/score/kernel/irq.c:113:
+       int i = *(loff_t *)v, cpu;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: arch/score/kernel/irq.c:114:
+       struct irqaction *action;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: arch/score/kernel/irq.c:115:
+       unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: arch/score/kernel/irq.c:117:
+       if (i == 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#246: FILE: arch/score/kernel/irq.c:117:
+       if (i == 0) {
+               seq_puts(p, "           ");

ERROR:CODE_INDENT: code indent should use tabs where possible
#247: FILE: arch/score/kernel/irq.c:118:
+               seq_puts(p, "           ");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: arch/score/kernel/irq.c:118:
+               seq_puts(p, "           ");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#248: FILE: arch/score/kernel/irq.c:119:
+               for_each_online_cpu(cpu)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: arch/score/kernel/irq.c:119:
+               for_each_online_cpu(cpu)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#248: FILE: arch/score/kernel/irq.c:119:
+               for_each_online_cpu(cpu)
+                       seq_printf(p, "CPU%d       ", cpu);

ERROR:CODE_INDENT: code indent should use tabs where possible
#249: FILE: arch/score/kernel/irq.c:120:
+                       seq_printf(p, "CPU%d       ", cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: arch/score/kernel/irq.c:120:
+                       seq_printf(p, "CPU%d       ", cpu);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#250: FILE: arch/score/kernel/irq.c:121:
+               seq_putc(p, '\n');$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: arch/score/kernel/irq.c:121:
+               seq_putc(p, '\n');$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: arch/score/kernel/irq.c:122:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: arch/score/kernel/irq.c:124:
+       if (i < NR_IRQS) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#253: FILE: arch/score/kernel/irq.c:124:
+       if (i < NR_IRQS) {
+               spin_lock_irqsave(&irq_desc[i].lock, flags);

ERROR:CODE_INDENT: code indent should use tabs where possible
#254: FILE: arch/score/kernel/irq.c:125:
+               spin_lock_irqsave(&irq_desc[i].lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#254: FILE: arch/score/kernel/irq.c:125:
+               spin_lock_irqsave(&irq_desc[i].lock, flags);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#255: FILE: arch/score/kernel/irq.c:126:
+               action = irq_desc[i].action;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#255: FILE: arch/score/kernel/irq.c:126:
+               action = irq_desc[i].action;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#256: FILE: arch/score/kernel/irq.c:127:
+               if (!action)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: arch/score/kernel/irq.c:127:
+               if (!action)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#256: FILE: arch/score/kernel/irq.c:127:
+               if (!action)
+                       goto unlock;

ERROR:CODE_INDENT: code indent should use tabs where possible
#257: FILE: arch/score/kernel/irq.c:128:
+                       goto unlock;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#257: FILE: arch/score/kernel/irq.c:128:
+                       goto unlock;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#259: FILE: arch/score/kernel/irq.c:130:
+               seq_printf(p, "%3d: ", i);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: arch/score/kernel/irq.c:130:
+               seq_printf(p, "%3d: ", i);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#260: FILE: arch/score/kernel/irq.c:131:
+               seq_printf(p, "%10u ", kstat_irqs(i));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: arch/score/kernel/irq.c:131:
+               seq_printf(p, "%10u ", kstat_irqs(i));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#261: FILE: arch/score/kernel/irq.c:132:
+               seq_printf(p, " %8s", irq_desc[i].chip->name ? : "-");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#261: FILE: arch/score/kernel/irq.c:132:
+               seq_printf(p, " %8s", irq_desc[i].chip->name ? : "-");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#262: FILE: arch/score/kernel/irq.c:133:
+               seq_printf(p, "  %s", action->name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: arch/score/kernel/irq.c:133:
+               seq_printf(p, "  %s", action->name);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#263: FILE: arch/score/kernel/irq.c:134:
+               for (action = action->next; action; action = action->next)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: arch/score/kernel/irq.c:134:
+               for (action = action->next; action; action = action->next)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#263: FILE: arch/score/kernel/irq.c:134:
+               for (action = action->next; action; action = action->next)
+                       seq_printf(p, ", %s", action->name);

ERROR:CODE_INDENT: code indent should use tabs where possible
#264: FILE: arch/score/kernel/irq.c:135:
+                       seq_printf(p, ", %s", action->name);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: arch/score/kernel/irq.c:135:
+                       seq_printf(p, ", %s", action->name);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#266: FILE: arch/score/kernel/irq.c:137:
+               seq_putc(p, '\n');$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: arch/score/kernel/irq.c:137:
+               seq_putc(p, '\n');$

ERROR:CODE_INDENT: code indent should use tabs where possible
#268: FILE: arch/score/kernel/irq.c:139:
+               spin_unlock_irqrestore(&irq_desc[i].lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: arch/score/kernel/irq.c:139:
+               spin_unlock_irqrestore(&irq_desc[i].lock, flags);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: arch/score/kernel/irq.c:140:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: arch/score/kernel/irq.c:142:
+       return 0;$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#279: FILE: arch/score/kernel/module.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#280: FILE: arch/score/kernel/module.c:2:
+ * arch/score/kernel/module.c

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#301: FILE: arch/score/kernel/module.c:23:
+ * 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#309: FILE: arch/score/kernel/module.c:31:
+       return size ? vmalloc(size) : NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: arch/score/kernel/module.c:37:
+       vfree(module_region);$

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Ehdr>
#318: FILE: arch/score/kernel/module.c:40:
+int module_frob_arch_sections(Elf_Ehdr *hdr, Elf_Shdr *sechdrs,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Shdr>
#318: FILE: arch/score/kernel/module.c:40:
+int module_frob_arch_sections(Elf_Ehdr *hdr, Elf_Shdr *sechdrs,

ERROR:CODE_INDENT: code indent should use tabs where possible
#319: FILE: arch/score/kernel/module.c:41:
+                             char *secstrings, struct module *mod)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#319: FILE: arch/score/kernel/module.c:41:
+int module_frob_arch_sections(Elf_Ehdr *hdr, Elf_Shdr *sechdrs,
+                             char *secstrings, struct module *mod)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: arch/score/kernel/module.c:41:
+                             char *secstrings, struct module *mod)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: arch/score/kernel/module.c:43:
+       return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#325: FILE: arch/score/kernel/module.c:47:
+                  unsigned int symindex, unsigned int relindex,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#325: FILE: arch/score/kernel/module.c:47:
+int apply_relocate(Elf_Shdr *sechdrs, const char *strtab,
+                  unsigned int symindex, unsigned int relindex,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: arch/score/kernel/module.c:47:
+                  unsigned int symindex, unsigned int relindex,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#326: FILE: arch/score/kernel/module.c:48:
+                  struct module *me)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#326: FILE: arch/score/kernel/module.c:48:
+                  struct module *me)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: arch/score/kernel/module.c:50:
+       Elf32_Shdr *symsec = sechdrs + symindex;$

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Shdr>
#328: FILE: arch/score/kernel/module.c:50:
+       Elf32_Shdr *symsec = sechdrs + symindex;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: arch/score/kernel/module.c:51:
+       Elf32_Shdr *relsec = sechdrs + relindex;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#330: FILE: arch/score/kernel/module.c:52:
+       Elf32_Shdr *dstsec = sechdrs + relsec->sh_info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: arch/score/kernel/module.c:53:
+       Elf32_Rel *rel = (void *)relsec->sh_addr;$

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Rel>
#331: FILE: arch/score/kernel/module.c:53:
+       Elf32_Rel *rel = (void *)relsec->sh_addr;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: arch/score/kernel/module.c:54:
+       unsigned int i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#334: FILE: arch/score/kernel/module.c:56:
+       for (i = 0; i < relsec->sh_size / sizeof(Elf32_Rel); i++, rel++) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#334: FILE: arch/score/kernel/module.c:56:
+       for (i = 0; i < relsec->sh_size / sizeof(Elf32_Rel); i++, rel++) {
+               unsigned long loc;

ERROR:CODE_INDENT: code indent should use tabs where possible
#335: FILE: arch/score/kernel/module.c:57:
+               unsigned long loc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#335: FILE: arch/score/kernel/module.c:57:
+               unsigned long loc;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#336: FILE: arch/score/kernel/module.c:58:
+               Elf32_Sym *sym;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#336: FILE: arch/score/kernel/module.c:58:
+               Elf32_Sym *sym;$

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Sym>
#336: FILE: arch/score/kernel/module.c:58:
+               Elf32_Sym *sym;

ERROR:CODE_INDENT: code indent should use tabs where possible
#337: FILE: arch/score/kernel/module.c:59:
+               s32 offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: arch/score/kernel/module.c:59:
+               s32 offset;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#339: FILE: arch/score/kernel/module.c:61:
+               offset = ELF32_R_SYM(rel->r_info);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#339: FILE: arch/score/kernel/module.c:61:
+               offset = ELF32_R_SYM(rel->r_info);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#340: FILE: arch/score/kernel/module.c:62:
+               if ((offset < 0) ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: arch/score/kernel/module.c:62:
+               if ((offset < 0) ||$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#340: FILE: arch/score/kernel/module.c:62:
+               if ((offset < 0) ||
[...]
+                       printk(KERN_ERR "%s: bad relocation, section %d 

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'offset < 0'
#340: FILE: arch/score/kernel/module.c:62:
+               if ((offset < 0) ||
+                   (offset > (symsec->sh_size / sizeof(Elf32_Sym)))) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:CODE_INDENT: code indent should use tabs where possible
#341: FILE: arch/score/kernel/module.c:63:
+                   (offset > (symsec->sh_size / sizeof(Elf32_Sym)))) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#341: FILE: arch/score/kernel/module.c:63:
+                   (offset > (symsec->sh_size / sizeof(Elf32_Sym)))) {$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#342: FILE: arch/score/kernel/module.c:64:
+                       printk(KERN_ERR "%s: bad relocation, section %d $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#342: FILE: arch/score/kernel/module.c:64:
+                       printk(KERN_ERR "%s: bad relocation, section %d $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: arch/score/kernel/module.c:64:
+                       printk(KERN_ERR "%s: bad relocation, section %d $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#342: FILE: arch/score/kernel/module.c:64:
+                       printk(KERN_ERR "%s: bad relocation, section %d 

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#343: FILE: arch/score/kernel/module.c:64:
reloc %d\n",

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:CODE_INDENT: code indent should use tabs where possible
#344: FILE: arch/score/kernel/module.c:65:
+                               me->name, relindex, i);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: arch/score/kernel/module.c:65:
+                               me->name, relindex, i);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#345: FILE: arch/score/kernel/module.c:66:
+                               return -ENOEXEC;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: arch/score/kernel/module.c:66:
+                               return -ENOEXEC;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#346: FILE: arch/score/kernel/module.c:67:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: arch/score/kernel/module.c:67:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#348: FILE: arch/score/kernel/module.c:69:
+               sym = ((Elf32_Sym *)symsec->sh_addr) + offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: arch/score/kernel/module.c:69:
+               sym = ((Elf32_Sym *)symsec->sh_addr) + offset;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#350: FILE: arch/score/kernel/module.c:71:
+               if ((rel->r_offset < 0) ||$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: arch/score/kernel/module.c:71:
+               if ((rel->r_offset < 0) ||$

ERROR:CODE_INDENT: code indent should use tabs where possible
#351: FILE: arch/score/kernel/module.c:72:
+                   (rel->r_offset > dstsec->sh_size - sizeof(u32))) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: arch/score/kernel/module.c:72:
+                   (rel->r_offset > dstsec->sh_size - sizeof(u32))) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#352: FILE: arch/score/kernel/module.c:73:
+                       printk(KERN_ERR "%s: out of bounds relocation, "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: arch/score/kernel/module.c:73:
+                       printk(KERN_ERR "%s: out of bounds relocation, "$

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#352: FILE: arch/score/kernel/module.c:73:
+                       printk(KERN_ERR "%s: out of bounds relocation, "
                                         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#352: FILE: arch/score/kernel/module.c:73:
+                       printk(KERN_ERR "%s: out of bounds relocation, "
                                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#353: FILE: arch/score/kernel/module.c:74:
+                               "section %d reloc %d offset %d size %d\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: arch/score/kernel/module.c:74:
+                               "section %d reloc %d offset %d size %d\n",$

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#353: FILE: arch/score/kernel/module.c:74:
+                               "section %d reloc %d offset %d size %d\n",
                                         ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#353: FILE: arch/score/kernel/module.c:74:
+                               "section %d reloc %d offset %d size %d\n",
                                                  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#353: FILE: arch/score/kernel/module.c:74:
+                               "section %d reloc %d offset %d size %d\n",
                                                            ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#353: FILE: arch/score/kernel/module.c:74:
+                               "section %d reloc %d offset %d size %d\n",
                                                                    ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#354: FILE: arch/score/kernel/module.c:75:
+                               me->name, relindex, i, rel->r_offset,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: arch/score/kernel/module.c:75:
+                               me->name, relindex, i, rel->r_offset,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#355: FILE: arch/score/kernel/module.c:76:
+                               dstsec->sh_size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: arch/score/kernel/module.c:76:
+                               dstsec->sh_size);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#356: FILE: arch/score/kernel/module.c:77:
+                       return -ENOEXEC;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#356: FILE: arch/score/kernel/module.c:77:
+                       return -ENOEXEC;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#357: FILE: arch/score/kernel/module.c:78:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#357: FILE: arch/score/kernel/module.c:78:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#359: FILE: arch/score/kernel/module.c:80:
+               loc = dstsec->sh_addr + rel->r_offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: arch/score/kernel/module.c:80:
+               loc = dstsec->sh_addr + rel->r_offset;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#360: FILE: arch/score/kernel/module.c:81:
+               switch (ELF32_R_TYPE(rel->r_info)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#360: FILE: arch/score/kernel/module.c:81:
+               switch (ELF32_R_TYPE(rel->r_info)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#361: FILE: arch/score/kernel/module.c:82:
+               case R_SCORE_NONE:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#361: FILE: arch/score/kernel/module.c:82:
+               case R_SCORE_NONE:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#362: FILE: arch/score/kernel/module.c:83:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: arch/score/kernel/module.c:83:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#363: FILE: arch/score/kernel/module.c:84:
+               case R_SCORE_ABS32:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: arch/score/kernel/module.c:84:
+               case R_SCORE_ABS32:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#364: FILE: arch/score/kernel/module.c:85:
+                       *(unsigned long *)loc += sym->st_value;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: arch/score/kernel/module.c:85:
+                       *(unsigned long *)loc += sym->st_value;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#365: FILE: arch/score/kernel/module.c:86:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: arch/score/kernel/module.c:86:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#366: FILE: arch/score/kernel/module.c:87:
+               case R_SCORE_HI16:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: arch/score/kernel/module.c:87:
+               case R_SCORE_HI16:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#367: FILE: arch/score/kernel/module.c:88:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: arch/score/kernel/module.c:88:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#368: FILE: arch/score/kernel/module.c:89:
+               case R_SCORE_LO16: {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#368: FILE: arch/score/kernel/module.c:89:
+               case R_SCORE_LO16: {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#369: FILE: arch/score/kernel/module.c:90:
+                       unsigned long hi16_offset, offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: arch/score/kernel/module.c:90:
+                       unsigned long hi16_offset, offset;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#370: FILE: arch/score/kernel/module.c:91:
+                       unsigned long uvalue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: arch/score/kernel/module.c:91:
+                       unsigned long uvalue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#371: FILE: arch/score/kernel/module.c:92:
+                       unsigned long temp, temp_hi;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#371: FILE: arch/score/kernel/module.c:92:
+                       unsigned long temp, temp_hi;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#372: FILE: arch/score/kernel/module.c:93:
+                       temp_hi = *((unsigned long *)loc - 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#372: FILE: arch/score/kernel/module.c:93:
+                       temp_hi = *((unsigned long *)loc - 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#373: FILE: arch/score/kernel/module.c:94:
+                       temp = *(unsigned long *)loc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#373: FILE: arch/score/kernel/module.c:94:
+                       temp = *(unsigned long *)loc;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#375: FILE: arch/score/kernel/module.c:96:
+                       hi16_offset = (((((temp_hi) >> 16) & 0x3) << 15) |$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: arch/score/kernel/module.c:96:
+                       hi16_offset = (((((temp_hi) >> 16) & 0x3) << 15) |$

ERROR:CODE_INDENT: code indent should use tabs where possible
#376: FILE: arch/score/kernel/module.c:97:
+                                       ((temp_hi) & 0x7fff)) >> 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: arch/score/kernel/module.c:97:
+                                       ((temp_hi) & 0x7fff)) >> 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#377: FILE: arch/score/kernel/module.c:98:
+                       offset = ((temp >> 16 & 0x03) << 15) |$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: arch/score/kernel/module.c:98:
+                       offset = ((temp >> 16 & 0x03) << 15) |$

ERROR:CODE_INDENT: code indent should use tabs where possible
#378: FILE: arch/score/kernel/module.c:99:
+                                       ((temp & 0x7fff) >> 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: arch/score/kernel/module.c:99:
+                                       ((temp & 0x7fff) >> 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#379: FILE: arch/score/kernel/module.c:100:
+                       offset = (hi16_offset << 16) | (offset & 0xffff);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: arch/score/kernel/module.c:100:
+                       offset = (hi16_offset << 16) | (offset & 0xffff);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#380: FILE: arch/score/kernel/module.c:101:
+                       uvalue = sym->st_value + offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: arch/score/kernel/module.c:101:
+                       uvalue = sym->st_value + offset;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#381: FILE: arch/score/kernel/module.c:102:
+                       hi16_offset = (uvalue >> 16) << 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: arch/score/kernel/module.c:102:
+                       hi16_offset = (uvalue >> 16) << 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#383: FILE: arch/score/kernel/module.c:104:
+                       temp_hi = ((temp_hi) & (~(0x37fff))) |$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: arch/score/kernel/module.c:104:
+                       temp_hi = ((temp_hi) & (~(0x37fff))) |$

ERROR:CODE_INDENT: code indent should use tabs where possible
#384: FILE: arch/score/kernel/module.c:105:
+                                       (hi16_offset & 0x7fff) |$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#384: FILE: arch/score/kernel/module.c:105:
+                                       (hi16_offset & 0x7fff) |$

ERROR:CODE_INDENT: code indent should use tabs where possible
#385: FILE: arch/score/kernel/module.c:106:
+                                       ((hi16_offset << 1) & 0x30000);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: arch/score/kernel/module.c:106:
+                                       ((hi16_offset << 1) & 0x30000);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#386: FILE: arch/score/kernel/module.c:107:
+                       *((unsigned long *)loc - 1) = temp_hi;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#386: FILE: arch/score/kernel/module.c:107:
+                       *((unsigned long *)loc - 1) = temp_hi;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#388: FILE: arch/score/kernel/module.c:109:
+                       offset = (uvalue & 0xffff) << 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: arch/score/kernel/module.c:109:
+                       offset = (uvalue & 0xffff) << 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#389: FILE: arch/score/kernel/module.c:110:
+                       temp = (temp & (~(0x37fff))) | (offset & 0x7fff) |$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: arch/score/kernel/module.c:110:
+                       temp = (temp & (~(0x37fff))) | (offset & 0x7fff) |$

ERROR:CODE_INDENT: code indent should use tabs where possible
#390: FILE: arch/score/kernel/module.c:111:
+                               ((offset << 1) & 0x30000);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#390: FILE: arch/score/kernel/module.c:111:
+                               ((offset << 1) & 0x30000);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#391: FILE: arch/score/kernel/module.c:112:
+                       *(unsigned long *)loc = temp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#391: FILE: arch/score/kernel/module.c:112:
+                       *(unsigned long *)loc = temp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#392: FILE: arch/score/kernel/module.c:113:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: arch/score/kernel/module.c:113:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#393: FILE: arch/score/kernel/module.c:114:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: arch/score/kernel/module.c:114:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#394: FILE: arch/score/kernel/module.c:115:
+               case R_SCORE_24: {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#394: FILE: arch/score/kernel/module.c:115:
+               case R_SCORE_24: {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#395: FILE: arch/score/kernel/module.c:116:
+                       unsigned long hi16_offset, offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: arch/score/kernel/module.c:116:
+                       unsigned long hi16_offset, offset;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#396: FILE: arch/score/kernel/module.c:117:
+                       unsigned long uvalue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: arch/score/kernel/module.c:117:
+                       unsigned long uvalue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#397: FILE: arch/score/kernel/module.c:118:
+                       unsigned long temp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#397: FILE: arch/score/kernel/module.c:118:
+                       unsigned long temp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#399: FILE: arch/score/kernel/module.c:120:
+                       temp = *(unsigned long *)loc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#399: FILE: arch/score/kernel/module.c:120:
+                       temp = *(unsigned long *)loc;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#400: FILE: arch/score/kernel/module.c:121:
+                       offset = (temp & 0x03FF7FFE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#400: FILE: arch/score/kernel/module.c:121:
+                       offset = (temp & 0x03FF7FFE);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#401: FILE: arch/score/kernel/module.c:122:
+                       hi16_offset = (offset & 0xFFFF0000);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#401: FILE: arch/score/kernel/module.c:122:
+                       hi16_offset = (offset & 0xFFFF0000);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#402: FILE: arch/score/kernel/module.c:123:
+                       offset = (hi16_offset | ((offset & 0xFFFF) << 1)) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#402: FILE: arch/score/kernel/module.c:123:
+                       offset = (hi16_offset | ((offset & 0xFFFF) << 1)) $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#402: FILE: arch/score/kernel/module.c:123:
+                       offset = (hi16_offset | ((offset & 0xFFFF) << 1)) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#405: FILE: arch/score/kernel/module.c:125:
+                       uvalue = (sym->st_value + offset) >> 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#405: FILE: arch/score/kernel/module.c:125:
+                       uvalue = (sym->st_value + offset) >> 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#406: FILE: arch/score/kernel/module.c:126:
+                       uvalue = uvalue & 0x00ffffff;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#406: FILE: arch/score/kernel/module.c:126:
+                       uvalue = uvalue & 0x00ffffff;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#408: FILE: arch/score/kernel/module.c:128:
+                       temp = (temp & 0xfc008001) |$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: arch/score/kernel/module.c:128:
+                       temp = (temp & 0xfc008001) |$

ERROR:CODE_INDENT: code indent should use tabs where possible
#409: FILE: arch/score/kernel/module.c:129:
+                               ((uvalue << 2) & 0x3ff0000) |$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: arch/score/kernel/module.c:129:
+                               ((uvalue << 2) & 0x3ff0000) |$

ERROR:CODE_INDENT: code indent should use tabs where possible
#410: FILE: arch/score/kernel/module.c:130:
+                               ((uvalue & 0x3fff) << 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#410: FILE: arch/score/kernel/module.c:130:
+                               ((uvalue & 0x3fff) << 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#411: FILE: arch/score/kernel/module.c:131:
+                       *(unsigned long *)loc = temp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#411: FILE: arch/score/kernel/module.c:131:
+                       *(unsigned long *)loc = temp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#412: FILE: arch/score/kernel/module.c:132:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#412: FILE: arch/score/kernel/module.c:132:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#413: FILE: arch/score/kernel/module.c:133:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#413: FILE: arch/score/kernel/module.c:133:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#414: FILE: arch/score/kernel/module.c:134:
+               default:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#414: FILE: arch/score/kernel/module.c:134:
+               default:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#415: FILE: arch/score/kernel/module.c:135:
+                       printk(KERN_ERR "%s: unknown relocation: %u\n",$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#415: FILE: arch/score/kernel/module.c:135:
+                       printk(KERN_ERR "%s: unknown relocation: %u\n",$

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#415: FILE: arch/score/kernel/module.c:135:
+                       printk(KERN_ERR "%s: unknown relocation: %u\n",
                                         ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#415: FILE: arch/score/kernel/module.c:135:
+                       printk(KERN_ERR "%s: unknown relocation: %u\n",
                                           ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#415: FILE: arch/score/kernel/module.c:135:
+                       printk(KERN_ERR "%s: unknown relocation: %u\n",
                                                               ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#415: FILE: arch/score/kernel/module.c:135:
+                       printk(KERN_ERR "%s: unknown relocation: %u\n",
                                                                 ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#416: FILE: arch/score/kernel/module.c:136:
+                               me->name, ELF32_R_TYPE(rel->r_info));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#416: FILE: arch/score/kernel/module.c:136:
+                               me->name, ELF32_R_TYPE(rel->r_info));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#417: FILE: arch/score/kernel/module.c:137:
+                       return -ENOEXEC;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#417: FILE: arch/score/kernel/module.c:137:
+                       return -ENOEXEC;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#418: FILE: arch/score/kernel/module.c:138:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#418: FILE: arch/score/kernel/module.c:138:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#419: FILE: arch/score/kernel/module.c:139:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#421: FILE: arch/score/kernel/module.c:141:
+       return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#425: FILE: arch/score/kernel/module.c:145:
+                      unsigned int symindex, unsigned int relsec,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#425: FILE: arch/score/kernel/module.c:145:
+                      unsigned int symindex, unsigned int relsec,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#426: FILE: arch/score/kernel/module.c:146:
+                      struct module *me)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#426: FILE: arch/score/kernel/module.c:146:
+                      struct module *me)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#428: FILE: arch/score/kernel/module.c:148:
+       return 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#432: FILE: arch/score/kernel/module.c:152:
+const struct exception_table_entry *search_module_dbetables(unsigned long $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#435: FILE: arch/score/kernel/module.c:154:
+       return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#440: FILE: arch/score/kernel/module.c:159:
+                   const Elf_Shdr *sechdrs,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#440: FILE: arch/score/kernel/module.c:159:
+                   const Elf_Shdr *sechdrs,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#441: FILE: arch/score/kernel/module.c:160:
+                   struct module *me)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: arch/score/kernel/module.c:160:
+                   struct module *me)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#443: FILE: arch/score/kernel/module.c:162:
+       return 0;$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#453: FILE: arch/score/kernel/process.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#454: FILE: arch/score/kernel/process.c:2:
+ * arch/score/kernel/process.c

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#475: FILE: arch/score/kernel/process.c:23:
+ * 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#481: FILE: arch/score/kernel/process.c:29:
+EXPORT_SYMBOL(pm_power_off);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#489: FILE: arch/score/kernel/process.c:37:
+/* If or when software machine-power-off is implemented, add code here. $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#491: FILE: arch/score/kernel/process.c:38:
+/* If or when software machine-power-off is implemented, add code here. 
+void machine_power_off(void) {}

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#502: FILE: arch/score/kernel/process.c:49:
+       while (1) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#502: FILE: arch/score/kernel/process.c:49:
+       while (1) {
+               while (!need_resched())

ERROR:CODE_INDENT: code indent should use tabs where possible
#503: FILE: arch/score/kernel/process.c:50:
+               while (!need_resched())$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#503: FILE: arch/score/kernel/process.c:50:
+               while (!need_resched())$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#503: FILE: arch/score/kernel/process.c:50:
+               while (!need_resched())
+                       barrier();

ERROR:CODE_INDENT: code indent should use tabs where possible
#504: FILE: arch/score/kernel/process.c:51:
+                       barrier();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#504: FILE: arch/score/kernel/process.c:51:
+                       barrier();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#506: FILE: arch/score/kernel/process.c:53:
+               preempt_enable_no_resched();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#506: FILE: arch/score/kernel/process.c:53:
+               preempt_enable_no_resched();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#507: FILE: arch/score/kernel/process.c:54:
+               schedule();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#507: FILE: arch/score/kernel/process.c:54:
+               schedule();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#508: FILE: arch/score/kernel/process.c:55:
+               preempt_disable();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#508: FILE: arch/score/kernel/process.c:55:
+               preempt_disable();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#509: FILE: arch/score/kernel/process.c:56:
+       }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#514: FILE: arch/score/kernel/process.c:61:
+void start_thread(struct pt_regs *regs, unsigned long pc, unsigned long $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#517: FILE: arch/score/kernel/process.c:63:
+       unsigned long status;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#520: FILE: arch/score/kernel/process.c:66:
+       status = regs->cp0_psr & ~(KU_MASK);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#521: FILE: arch/score/kernel/process.c:67:
+       status |= KU_USER;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#522: FILE: arch/score/kernel/process.c:68:
+       regs->cp0_psr = status;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#523: FILE: arch/score/kernel/process.c:69:
+       regs->cp0_epc = pc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#524: FILE: arch/score/kernel/process.c:70:
+       regs->regs[0] = sp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#540: FILE: arch/score/kernel/process.c:86:
+               unsigned long unused,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#540: FILE: arch/score/kernel/process.c:86:
+int copy_thread(unsigned long clone_flags, unsigned long usp,
+               unsigned long unused,

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#540: FILE: arch/score/kernel/process.c:86:
+               unsigned long unused,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#541: FILE: arch/score/kernel/process.c:87:
+               struct task_struct *p, struct pt_regs *regs)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#541: FILE: arch/score/kernel/process.c:87:
+               struct task_struct *p, struct pt_regs *regs)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#543: FILE: arch/score/kernel/process.c:89:
+       struct thread_info *ti = task_thread_info(p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#544: FILE: arch/score/kernel/process.c:90:
+       struct pt_regs *childregs = task_pt_regs(p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#546: FILE: arch/score/kernel/process.c:92:
+       p->set_child_tid = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#547: FILE: arch/score/kernel/process.c:93:
+       p->clear_child_tid = NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#549: FILE: arch/score/kernel/process.c:95:
+       *childregs = *regs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#550: FILE: arch/score/kernel/process.c:96:
+       childregs->regs[7] = 0;         /* Clear error flag */$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#551: FILE: arch/score/kernel/process.c:97:
+       childregs->regs[4] = 0;         /* Child gets zero as return value $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#551: FILE: arch/score/kernel/process.c:97:
+       childregs->regs[4] = 0;         /* Child gets zero as return value $

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#553: FILE: arch/score/kernel/process.c:98:
+       childregs->regs[4] = 0;         /* Child gets zero as return value 
+       regs->regs[4] = p->pid;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#555: FILE: arch/score/kernel/process.c:100:
+       if (childregs->cp0_psr & 0x8) { /* test kernel fork or user fork $

ERROR:CODE_INDENT: code indent should use tabs where possible
#557: FILE: arch/score/kernel/process.c:101:
+               childregs->regs[0] = usp;               /* user fork */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#557: FILE: arch/score/kernel/process.c:101:
+       if (childregs->cp0_psr & 0x8) { /* test kernel fork or user fork 
+               childregs->regs[0] = usp;               /* user fork */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#558: FILE: arch/score/kernel/process.c:102:
+       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#558: FILE: arch/score/kernel/process.c:102:
+       } else {
+               childregs->regs[28] = (unsigned long) ti; /* kernel fork 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#559: FILE: arch/score/kernel/process.c:103:
+               childregs->regs[28] = (unsigned long) ti; /* kernel fork $

ERROR:CODE_INDENT: code indent should use tabs where possible
#559: FILE: arch/score/kernel/process.c:103:
+               childregs->regs[28] = (unsigned long) ti; /* kernel fork $

CHECK:SPACING: No space is necessary after a cast
#559: FILE: arch/score/kernel/process.c:103:
+               childregs->regs[28] = (unsigned long) ti; /* kernel fork 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#559: FILE: arch/score/kernel/process.c:103:
+               childregs->regs[28] = (unsigned long) ti; /* kernel fork $

ERROR:CODE_INDENT: code indent should use tabs where possible
#561: FILE: arch/score/kernel/process.c:104:
+               childregs->regs[0] = (unsigned long) childregs;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#561: FILE: arch/score/kernel/process.c:104:
+               childregs->regs[28] = (unsigned long) ti; /* kernel fork 
+               childregs->regs[0] = (unsigned long) childregs;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#574: FILE: arch/score/kernel/process.c:117:
+       return 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#579: FILE: arch/score/kernel/process.c:122:
+                void *arg, void *unused1)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#579: FILE: arch/score/kernel/process.c:122:
+kernel_thread_helper(void *unused0, int (*fn)(void *),
+                void *arg, void *unused1)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#579: FILE: arch/score/kernel/process.c:122:
+                void *arg, void *unused1)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#581: FILE: arch/score/kernel/process.c:124:
+       do_exit(fn(arg));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#589: FILE: arch/score/kernel/process.c:132:
+       struct pt_regs regs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#591: FILE: arch/score/kernel/process.c:134:
+       memset(&regs, 0, sizeof(regs));$

CHECK:SPACING: No space is necessary after a cast
#593: FILE: arch/score/kernel/process.c:136:
+       regs.regs[6] = (unsigned long) arg;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#593: FILE: arch/score/kernel/process.c:136:
+       regs.regs[6] = (unsigned long) arg;$

CHECK:SPACING: No space is necessary after a cast
#594: FILE: arch/score/kernel/process.c:137:
+       regs.regs[5] = (unsigned long) fn;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#594: FILE: arch/score/kernel/process.c:137:
+       regs.regs[5] = (unsigned long) fn;$

CHECK:SPACING: No space is necessary after a cast
#595: FILE: arch/score/kernel/process.c:138:
+       regs.cp0_epc = (unsigned long) kernel_thread_helper;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#595: FILE: arch/score/kernel/process.c:138:
+       regs.cp0_epc = (unsigned long) kernel_thread_helper;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#596: FILE: arch/score/kernel/process.c:139:
+       regs.cp0_psr = (regs.cp0_psr & ~(0x1|0x4|0x8)) | \$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#596: FILE: arch/score/kernel/process.c:139:
+       regs.cp0_psr = (regs.cp0_psr & ~(0x1|0x4|0x8)) | \
                                            ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#596: FILE: arch/score/kernel/process.c:139:
+       regs.cp0_psr = (regs.cp0_psr & ~(0x1|0x4|0x8)) | \
                                                ^

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#596: FILE: arch/score/kernel/process.c:139:
+       regs.cp0_psr = (regs.cp0_psr & ~(0x1|0x4|0x8)) | \

ERROR:CODE_INDENT: code indent should use tabs where possible
#597: FILE: arch/score/kernel/process.c:140:
+                       ((regs.cp0_psr & 0x3) << 2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#597: FILE: arch/score/kernel/process.c:140:
+                       ((regs.cp0_psr & 0x3) << 2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#599: FILE: arch/score/kernel/process.c:142:
+       return do_fork(flags | CLONE_VM | CLONE_UNTRACED, \$

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#599: FILE: arch/score/kernel/process.c:142:
+       return do_fork(flags | CLONE_VM | CLONE_UNTRACED, \

ERROR:CODE_INDENT: code indent should use tabs where possible
#600: FILE: arch/score/kernel/process.c:143:
+                       0, &regs, 0, NULL, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#600: FILE: arch/score/kernel/process.c:143:
+                       0, &regs, 0, NULL, NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#605: FILE: arch/score/kernel/process.c:148:
+       return task_pt_regs(tsk)->cp0_epc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#610: FILE: arch/score/kernel/process.c:153:
+       if (!task || task == current || task->state == TASK_RUNNING)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#610: FILE: arch/score/kernel/process.c:153:
+       if (!task || task == current || task->state == TASK_RUNNING)
+               return 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#611: FILE: arch/score/kernel/process.c:154:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#611: FILE: arch/score/kernel/process.c:154:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#613: FILE: arch/score/kernel/process.c:156:
+       if (!task_stack_page(task))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#613: FILE: arch/score/kernel/process.c:156:
+       if (!task_stack_page(task))
+               return 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#614: FILE: arch/score/kernel/process.c:157:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#614: FILE: arch/score/kernel/process.c:157:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#616: FILE: arch/score/kernel/process.c:159:
+       return task_pt_regs(task)->cp0_epc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#621: FILE: arch/score/kernel/process.c:164:
+       return sp;$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000113548.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 145 errors, 243 warnings, 25 checks, 540 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000113548.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
