WARNING:EMAIL_SUBJECT: A patch subject line should describe the change not the tool that found it
#23: 
Subject: [PATCH] Remove errors caught by checkpatch.pl in kernel/signal.c

Naming the tool that found the issue is not very useful in the
subject line.  A good subject line summarizes the change that
the patch brings.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#50: FILE: kernel/signal.c:88:
*signal, sigset_t *blocked)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#62: FILE: kernel/signal.c:95:
+	case 4: ready  = signal->sig[3] & ~blocked->sig[3];

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#70: FILE: kernel/signal.c:101:
+	case 2: ready  = signal->sig[1] & ~blocked->sig[1];

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#75: FILE: kernel/signal.c:105:
+	case 1: ready  = signal->sig[0] & ~blocked->sig[0];

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#85: FILE: kernel/signal.c:159:
+			if ((x = *s & ~*m) != 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#92: FILE: kernel/signal.c:165:
+	case 2: if ((x = s[0] & ~m[0]) != 0)
 			sig = 1;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#92: FILE: kernel/signal.c:165:
+	case 2: if ((x = s[0] & ~m[0]) != 0)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#92: FILE: kernel/signal.c:165:
+	case 2: if ((x = s[0] & ~m[0]) != 0)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#95: FILE: kernel/signal.c:167:
+		else if ((x = s[1] & ~m[1]) != 0)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#103: FILE: kernel/signal.c:174:
+	case 1: if ((x = *s & ~*m) != 0)
 			sig = ffz(~x) + 1;

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#103: FILE: kernel/signal.c:174:
+	case 1: if ((x = *s & ~*m) != 0)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#103: FILE: kernel/signal.c:174:
+	case 1: if ((x = *s & ~*m) != 0)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#207: FILE: kernel/signal.c:2367:
+do_sigaltstack(const stack_t __user *uss, stack_t __user *uoss,
 {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000166831.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 10 errors, 3 warnings, 1 checks, 159 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000166831.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
