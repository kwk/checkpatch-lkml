WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
master.kernel.org:/pub/scm/linux/kernel/git/cooloney/blackfin-2.6.git for-linus

WARNING:TYPO_SPELLING: 'doesnt' may be misspelled - perhaps 'doesn't'?
#180: 
      Blackfin arch: Dont use cs_change_per_word, since the AD7877 driver doesnt require it anymore; fix bus numbers, fix typos
                                                                          ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'fragementation' may be misspelled - perhaps 'fragmentation'?
#225: 
      Blackfin arch: move the init sections to the end of memory to help decrease memory fragementation
                                                                                         ^^^^^^^^^^^^^^

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#285: FILE: arch/blackfin/Kconfig:134:
+config BF547
+	bool "BF547"
+	help
+	  BF547 Processor Support.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#644: FILE: arch/blackfin/Kconfig:999:
+source "arch/blackfin/Kconfig.debug"

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#649: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#730: FILE: arch/blackfin/Kconfig.debug:77:
+config DEBUG_BFIN_HWTRACE_COMPRESSION_OFF
+	bool "Trace all Loops"
+	help
+	  The trace buffer records all changes of flow 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#733: FILE: arch/blackfin/Kconfig.debug:80:
+^I  The trace buffer records all changes of flow $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#735: FILE: arch/blackfin/Kconfig.debug:82:
+config DEBUG_BFIN_HWTRACE_COMPRESSION_ONE
+	bool "Compress single-level loops"
+	help
+	  The trace buffer does not record single loops - helpful if trace 
+	  is spinning on a while or do loop.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#738: FILE: arch/blackfin/Kconfig.debug:85:
+^I  The trace buffer does not record single loops - helpful if trace $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#741: FILE: arch/blackfin/Kconfig.debug:88:
+config DEBUG_BFIN_HWTRACE_COMPRESSION_TWO
+	bool "Compress two-level loops"
+	help
+	  The trace buffer does not record loops two levels deep. Helpful if
+	  the trace is spinning in a nested loop
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#764: FILE: arch/blackfin/Kconfig.debug:111:
+^I  into a software buffer, for dumping when there is an issue. This $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#765: FILE: arch/blackfin/Kconfig.debug:112:
+^I  has a great impact on performance, (an interrupt every 16 change of $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#797: FILE: arch/blackfin/Kconfig.debug:144:
+^Ibool "Early printk" $

WARNING:TYPO_SPELLING: 'build-in' may be misspelled - perhaps 'built-in'?
#815: FILE: arch/blackfin/Kconfig.debug:162:
+	  Say Y here to build-in dual core test module for dual core test.
 	                ^^^^^^^^

WARNING:TYPO_SPELLING: 'Asynchonous' may be misspelled - perhaps 'Asynchronous'?
#2024: FILE: arch/blackfin/configs/H8606_defconfig:270:
+# Asynchonous Memory Configuration
   ^^^^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#3312: FILE: arch/blackfin/kernel/cplbinit.c:169:
+	if ((end   <= (u32) _end && end   >= (u32)_stext) ||

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#3313: FILE: arch/blackfin/kernel/cplbinit.c:170:
+	    (start <= (u32) _end && start >= (u32)_stext))

WARNING:LINE_SPACING: Missing a blank line after declarations
#3442: FILE: arch/blackfin/kernel/setup.c:509:
+	u64 tmp = USEC_PER_SEC * (u64)sclk;
+	do_div(tmp, get_sclk());

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#3451: FILE: arch/blackfin/kernel/setup.c:517:
+	u64 tmp = get_sclk() * (u64)usecs;
+	do_div(tmp, USEC_PER_SEC);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#3485: FILE: arch/blackfin/kernel/traps.c:255:
+		printk(KERN_NOTICE EXC_0x03(KERN_NOTICE));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#3494: FILE: arch/blackfin/kernel/traps.c:284:
+		printk(KERN_NOTICE EXC_0x11(KERN_NOTICE));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#3503: FILE: arch/blackfin/kernel/traps.c:306:
+		printk(KERN_NOTICE EXC_0x21(KERN_NOTICE));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#3511: FILE: arch/blackfin/kernel/traps.c:313:
+		printk(KERN_NOTICE EXC_0x22(KERN_NOTICE));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#3522: FILE: arch/blackfin/kernel/traps.c:320:
+		printk(KERN_NOTICE EXC_0x23(KERN_NOTICE));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#3530: FILE: arch/blackfin/kernel/traps.c:327:
+		printk(KERN_NOTICE EXC_0x24(KERN_NOTICE));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#3538: FILE: arch/blackfin/kernel/traps.c:334:
+		printk(KERN_NOTICE EXC_0x25(KERN_NOTICE));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#3547: FILE: arch/blackfin/kernel/traps.c:342:
+		printk(KERN_NOTICE EXC_0x26(KERN_NOTICE));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#3556: FILE: arch/blackfin/kernel/traps.c:353:
+		printk(KERN_NOTICE EXC_0x27(KERN_NOTICE));

WARNING:UNNECESSARY_KERN_LEVEL: Possible unnecessary KERN_DEBUG
#3565: FILE: arch/blackfin/kernel/traps.c:361:
+		pr_debug(EXC_0x28(KERN_DEBUG));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#3574: FILE: arch/blackfin/kernel/traps.c:383:
+		printk(KERN_NOTICE EXC_0x2A(KERN_NOTICE));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#3585: FILE: arch/blackfin/kernel/traps.c:390:
+		printk(KERN_NOTICE EXC_0x2B(KERN_NOTICE));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#3593: FILE: arch/blackfin/kernel/traps.c:397:
+		printk(KERN_NOTICE EXC_0x2C(KERN_NOTICE));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#3602: FILE: arch/blackfin/kernel/traps.c:408:
+		printk(KERN_NOTICE EXC_0x2D(KERN_NOTICE));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#3611: FILE: arch/blackfin/kernel/traps.c:416:
+		printk(KERN_NOTICE EXC_0x2E(KERN_NOTICE));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#3632: FILE: arch/blackfin/kernel/traps.c:465:
+			printk(KERN_EMERG "Please turn on "

WARNING:SPLIT_STRING: quoted string split across lines
#3633: FILE: arch/blackfin/kernel/traps.c:466:
+			printk(KERN_EMERG "Please turn on "
+			       "CONFIG_ACCESS_CHECK\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3671: FILE: arch/blackfin/kernel/traps.c:613:
+	 * stack all the time, so do this until we fix that */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#3675: FILE: arch/blackfin/kernel/traps.c:617:
+		printk(KERN_EMERG "Kernel OOPS in progress\n");

WARNING:TYPO_SPELLING: 'excecption' may be misspelled - perhaps 'exception'?
#3678: FILE: arch/blackfin/kernel/traps.c:620:
+		printk(KERN_NOTICE "Deferred excecption or HW Error context\n");
 		                             ^^^^^^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#3678: FILE: arch/blackfin/kernel/traps.c:620:
+		printk(KERN_NOTICE "Deferred excecption or HW Error context\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#3680: FILE: arch/blackfin/kernel/traps.c:622:
+		printk(KERN_NOTICE "Interrupt context\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#3682: FILE: arch/blackfin/kernel/traps.c:624:
+		printk(KERN_NOTICE "Deferred Interrupt context\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#3684: FILE: arch/blackfin/kernel/traps.c:626:
+		printk(KERN_NOTICE "Kernel process context\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#3687: FILE: arch/blackfin/kernel/traps.c:629:
+		printk(KERN_NOTICE "CURRENT PROCESS:\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#3688: FILE: arch/blackfin/kernel/traps.c:630:
+		printk(KERN_NOTICE "COMM=%s PID=%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3689: FILE: arch/blackfin/kernel/traps.c:631:
+		printk(KERN_NOTICE "COMM=%s PID=%d\n",
+			current->comm, current->pid);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#3691: FILE: arch/blackfin/kernel/traps.c:633:
+		printk(KERN_NOTICE "TEXT = 0x%p-0x%p  DATA = 0x%p-0x%p\n"

CHECK:BRACES: Unbalanced braces around else statement
#3701: FILE: arch/blackfin/kernel/traps.c:643:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#3702: FILE: arch/blackfin/kernel/traps.c:644:
+		printk(KERN_NOTICE "\n" KERN_NOTICE

WARNING:SPLIT_STRING: quoted string split across lines
#3742: FILE: arch/blackfin/kernel/traps.c:691:
+			"Cannot look at the [PC] <%p> for it is"
+			" in unreadable memory - sorry\n", retaddr);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#3747: FILE: arch/blackfin/kernel/traps.c:696:
+	char buf [150];

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#3756: FILE: arch/blackfin/kernel/traps.c:711:
+	printk(KERN_NOTICE " PC: %s\n", buf);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3817: FILE: arch/blackfin/lib/strcmp.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3842: FILE: arch/blackfin/lib/strcpy.c:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3867: FILE: arch/blackfin/lib/strncmp.c:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3892: FILE: arch/blackfin/lib/strncpy.c:1:
+/*

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#4310: FILE: arch/blackfin/mach-bf527/boards/Kconfig:1:
+choice
+	prompt "System type"
+	default BFIN527_EZKIT
+	help
+	  Select your board!
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#4316: FILE: arch/blackfin/mach-bf527/boards/Kconfig:7:
+config BFIN527_EZKIT
+	bool "BF527-EZKIT"
+	help
+	  BF527-EZKIT-LITE board support.
+

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#4329: FILE: arch/blackfin/mach-bf527/boards/Makefile:2:
+# arch/blackfin/mach-bf527/boards/Makefile

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#4422: FILE: arch/blackfin/mach-bf527/boards/ezkit.c:455:
+#if defined(CONFIG_SND_SOC_WM8731) || defined(CONFIG_SND_SOC_WM8731_MODULE) \
+	 && defined(CONFIG_SND_SOC_WM8731_SPI)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#4442: FILE: arch/blackfin/mach-bf527/boards/ezkit.c:568:
+#if defined(CONFIG_SND_SOC_WM8731) || defined(CONFIG_SND_SOC_WM8731_MODULE) \
+	 && defined(CONFIG_SND_SOC_WM8731_SPI)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around addr[0]
#4473: FILE: arch/blackfin/mach-bf527/boards/ezkit.c:818:
+	*(u32 *)(&(addr[0])) = bfin_read32(FLASH_MAC);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around addr[4]
#4474: FILE: arch/blackfin/mach-bf527/boards/ezkit.c:819:
+	*(u16 *)(&(addr[4])) = bfin_read16(FLASH_MAC + 4);

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#4513: FILE: arch/blackfin/mach-bf533/boards/H8606.c:53:
+#if defined(CONFIG_RTC_DRV_BFIN) || defined(CONFIG_RTC_DRV_BFIN_MODULE)

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#4549: FILE: arch/blackfin/mach-bf533/boards/Kconfig:1:
+choice
+	prompt "System type"
+	default BFIN533_STAMP
+	help
+	  Select your board!
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#4555: FILE: arch/blackfin/mach-bf533/boards/Kconfig:7:
+config BFIN533_EZKIT
+	bool "BF533-EZKIT"
+	help
+	  BF533-EZKIT-LITE board support.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#4560: FILE: arch/blackfin/mach-bf533/boards/Kconfig:12:
+config BFIN533_STAMP
+	bool "BF533-STAMP"
+	help
+	  BF533-STAMP board support.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#4565: FILE: arch/blackfin/mach-bf533/boards/Kconfig:17:
+config BFIN533_BLUETECHNIX_CM
+	bool "Bluetechnix CM-BF533"
+	depends on (BF533)
+	help
+	  CM-BF533 support for EVAL- and DEV-Board.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#4571: FILE: arch/blackfin/mach-bf533/boards/Kconfig:23:
+config H8606_HVSISTEMAS
+	bool "HV Sistemas H8606"
+	depends on (BF532)
+	help
+	  HV Sistemas H8606 board support.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#4577: FILE: arch/blackfin/mach-bf533/boards/Kconfig:29:
+config GENERIC_BF533_BOARD
+	bool "Generic"
+	help
+	  Generic or Custom board support.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#4709: FILE: arch/blackfin/mach-bf537/boards/Kconfig:1:
+choice
+	prompt "System type"
+	default BFIN537_STAMP
+	help
+	  Select your board!
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#4715: FILE: arch/blackfin/mach-bf537/boards/Kconfig:7:
+config BFIN537_STAMP
+	bool "BF537-STAMP"
+	help
+	  BF537-STAMP board support.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#4720: FILE: arch/blackfin/mach-bf537/boards/Kconfig:12:
+config BFIN537_BLUETECHNIX_CM
+	bool "Bluetechnix CM-BF537"
+	depends on (BF537)
+	help
+	  CM-BF537 support for EVAL- and DEV-Board.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#4726: FILE: arch/blackfin/mach-bf537/boards/Kconfig:18:
+config PNAV10
+	bool "PNAV board"
+	depends on (BF537)
+	help
+	  PNAV board support.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#4732: FILE: arch/blackfin/mach-bf537/boards/Kconfig:24:
+config GENERIC_BF537_BOARD
+	bool "Generic"
+	help
+	  Generic or Custom board support.
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#4789: FILE: arch/blackfin/mach-bf537/boards/cm_bf537.c:434:
+	printk(KERN_WARNING "%s:%s: Setting Ethernet MAC to a random one\n", __FILE__, __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#4894: FILE: arch/blackfin/mach-bf537/boards/generic_board.c:739:
+	printk(KERN_WARNING "%s:%s: Setting Ethernet MAC to a random one\n", __FILE__, __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#4949: FILE: arch/blackfin/mach-bf537/boards/pnav10.c:517:
+	printk(KERN_WARNING "%s:%s: Setting Ethernet MAC to a random one\n", __FILE__, __func__);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around addr[0]
#5063: FILE: arch/blackfin/mach-bf537/boards/stamp.c:773:
+	*(u32 *)(&(addr[0])) = bfin_read32(FLASH_MAC);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around addr[4]
#5064: FILE: arch/blackfin/mach-bf537/boards/stamp.c:774:
+	*(u16 *)(&(addr[4])) = bfin_read16(FLASH_MAC + 4);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#5085: FILE: arch/blackfin/mach-bf548/boards/Kconfig:1:
+choice
+	prompt "System type"
+	default BFIN548_EZKIT
+	help
+	  Select your board!
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#5091: FILE: arch/blackfin/mach-bf548/boards/Kconfig:7:
+config BFIN548_EZKIT
+	bool "BF548-EZKIT"
+	help
+	  BFIN548-EZKIT board support.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#5243: FILE: arch/blackfin/mach-bf561/boards/Kconfig:1:
+choice
+	prompt "System type"
+	default BFIN561_EZKIT
+	help
+	  Select your board!
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#5249: FILE: arch/blackfin/mach-bf561/boards/Kconfig:7:
+config BFIN561_EZKIT
+	bool "BF561-EZKIT"
+	help
+	  BF561-EZKIT-LITE board support.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#5254: FILE: arch/blackfin/mach-bf561/boards/Kconfig:12:
+config BFIN561_TEPLA
+	bool "BF561-TEPLA"
+	help
+	 BF561-TEPLA board support.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#5259: FILE: arch/blackfin/mach-bf561/boards/Kconfig:17:
+config BFIN561_BLUETECHNIX_CM
+	bool "Bluetechnix CM-BF561"
+	help
+	  CM-BF561 support for EVAL- and DEV-Board.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#5264: FILE: arch/blackfin/mach-bf561/boards/Kconfig:22:
+config GENERIC_BF561_BOARD
+	bool "Generic"
+	help
+	  Generic or Custom board support.
+

CHECK:CAMELCASE: Avoid CamelCase: <CONFIG_PINTx_REASSIGN>
#5751: FILE: arch/blackfin/mach-common/ints-priority-sc.c:782:
+# ifdef CONFIG_PINTx_REASSIGN

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#5827: FILE: arch/blackfin/mach-common/irqpanic.c:156:
+			printk(KERN_EMERG HWC_x2(KERN_EMERG));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#5833: FILE: arch/blackfin/mach-common/irqpanic.c:161:
+			printk(KERN_EMERG HWC_x3(KERN_EMERG));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#5837: FILE: arch/blackfin/mach-common/irqpanic.c:164:
+			printk(KERN_EMERG HWC_x12(KERN_EMERG));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#5841: FILE: arch/blackfin/mach-common/irqpanic.c:167:
+			printk(KERN_EMERG HWC_x18(KERN_EMERG));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#5845: FILE: arch/blackfin/mach-common/irqpanic.c:170:
+			printk(KERN_EMERG HWC_default(KERN_EMERG));

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#5863: FILE: arch/blackfin/mm/blackfin_sram.c:27:
  * 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5905: FILE: drivers/net/bfin_mac.h:95:
+extern void bfin_get_ether_addr(char *addr);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5968: FILE: include/asm-blackfin/bfin-global.h:53:
+extern void dump_bfin_process(struct pt_regs *regs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5969: FILE: include/asm-blackfin/bfin-global.h:54:
+extern void dump_bfin_mem(void *retaddr);

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#5986: FILE: include/asm-blackfin/cplbinit.h:27:
  * 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

WARNING:LINE_SPACING: Missing a blank line after declarations
#6088: FILE: include/asm-blackfin/delay.h:19:
+		unsigned long tmp;
+		__asm__ __volatile__(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#6088: FILE: include/asm-blackfin/delay.h:19:
+		__asm__ __volatile__(

CHECK:BRACES: Unbalanced braces around else statement
#6106: FILE: include/asm-blackfin/delay.h:37:
+	} else

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#6107: FILE: include/asm-blackfin/delay.h:38:
+		__asm__ __volatile__ (

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6131: FILE: include/asm-blackfin/io.h:125:
+extern void insl_16(unsigned long port, void *addr, unsigned long count);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#6418: FILE: include/asm-blackfin/mach-bf561/defBF561.h:58:
+#define DOUBLE_FAULT            (DOUBLE_FAULT_B|DOUBLE_FAULT_A)
                                                ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#6494: FILE: include/asm-blackfin/mach-common/def_LPBlackfin.h:49:
+	uint32_t __v; \

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#6503: FILE: include/asm-blackfin/mach-common/def_LPBlackfin.h:59:
+	uint32_t __v; \

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'level' - possible side-effects?
#6580: FILE: include/asm-blackfin/traps.h:51:
+#define HWC_x2(level) \
+	"System MMR Error\n" \
+	level " - An error occurred due to an invalid access to an System MMR location\n" \
+	level "   Possible reason: a 32-bit register is accessed with a 16-bit instruction\n" \
+	level "   or a 16-bit register is accessed with a 32-bit instruction.\n"

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'level' - possible side-effects?
#6594: FILE: include/asm-blackfin/traps.h:65:
+#define EXC_0x03(level) \
+	"Application stack overflow\n" \
+	level " - Please increase the stack size of the application using elf2flt -s option,\n" \
+	level "   and/or reduce the stack use of the application.\n"

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'level' - possible side-effects?
#6598: FILE: include/asm-blackfin/traps.h:69:
+#define EXC_0x10(level) \
+	"Single step\n" \
+	level " - When the processor is in single step mode, every instruction\n" \
+	level "   generates an exception. Primarily used for debugging.\n"

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'level' - possible side-effects?
#6602: FILE: include/asm-blackfin/traps.h:73:
+#define EXC_0x11(level) \
+	"Exception caused by a trace buffer full condition\n" \
+	level " - The processor takes this exception when the trace\n" \
+	level "   buffer overflows (only when enabled by the Trace Unit Control register).\n"

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'level' - possible side-effects?
#6606: FILE: include/asm-blackfin/traps.h:77:
+#define EXC_0x21(level) \
+	"Undefined instruction\n" \
+	level " - May be used to emulate instructions that are not defined for\n" \
+	level "   a particular processor implementation.\n"

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'level' - possible side-effects?
#6610: FILE: include/asm-blackfin/traps.h:81:
+#define EXC_0x22(level) \
+	"Illegal instruction combination\n" \
+	level " - See section for multi-issue rules in the ADSP-BF53x Blackfin\n" \
+	level "   Processor Instruction Set Reference.\n"

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'level' - possible side-effects?
#6614: FILE: include/asm-blackfin/traps.h:85:
+#define EXC_0x23(level) \
+	"Data access CPLB protection violation\n" \
+	level " - Attempted read or write to Supervisor resource,\n" \
+	level "   or illegal data memory access. \n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#6617: FILE: include/asm-blackfin/traps.h:88:
+	level "   or illegal data memory access. \n"

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'level' - possible side-effects?
#6630: FILE: include/asm-blackfin/traps.h:101:
+#define EXC_0x28(level) \
+	"Program Sequencer Exception caused by an emulation watchpoint match\n" \
+	level " - There is a watchpoint match, and one of the EMUSW\n" \
+	level "   bits in the Watchpoint Instruction Address Control register (WPIACTL) is set.\n"

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'level' - possible side-effects?
#6634: FILE: include/asm-blackfin/traps.h:105:
+#define EXC_0x2A(level) \
+	"Instruction fetch misaligned address violation\n" \
+	level " - Attempted misaligned instruction cache fetch. On a misaligned instruction fetch\n" \
+	level "   exception, the return address provided in RETX is the destination address which is\n" \
+	level "   misaligned, rather than the address of the offending instruction.\n"

WARNING:LONG_LINE_STRING: line length of 102 exceeds 100 columns
#6636: FILE: include/asm-blackfin/traps.h:107:
+	level " - Attempted misaligned instruction cache fetch. On a misaligned instruction fetch\n" \

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_STRING: line length of 105 exceeds 100 columns
#6637: FILE: include/asm-blackfin/traps.h:108:
+	level "   exception, the return address provided in RETX is the destination address which is\n" \

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'level' - possible side-effects?
#6648: FILE: include/asm-blackfin/traps.h:119:
+#define EXC_0x2E(level) \
+	"Illegal use of supervisor resource\n" \
+	level " - Attempted to use a Supervisor register or instruction from User mode.\n" \
+	level "   Supervisor resources are registers and instructions that are reserved\n" \
+	level "   for Supervisor use: Supervisor only registers, all MMRs, and Supervisor\n" \
+	level "   only instructions.\n"

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000354588.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 81 warnings, 31 checks, 5275 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000354588.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
