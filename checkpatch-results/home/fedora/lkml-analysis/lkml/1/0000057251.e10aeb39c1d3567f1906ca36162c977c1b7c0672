WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
This patch allows for hard numa restrictions to irq affinity on x86 systems.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#63: FILE: arch/x86/kernel/apic/io_apic.c:172:
+static int default_irq_allowed_and(int node, struct cpumask *dstp,
+						const struct cpumask *srcp)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#271: FILE: arch/x86/kernel/apic/io_apic.c:3772:
+	if (!x86_irq_allowed_and(dev_to_node(&dev->dev), tmp_mask,
+				apic->target_cpus())) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#318: FILE: arch/x86/include/asm/uv/uv_mmrs.h:840:
+    unsigned long^Iv;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: arch/x86/include/asm/uv/uv_mmrs.h:841:
+    struct uvh_lb_socket_destination_table_s {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: arch/x86/include/asm/uv/uv_mmrs.h:847:
+    } s;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#355: FILE: arch/x86/kernel/uv_irq.c:248:
+int uv_irq_cpus_allowed_and(int node, struct cpumask *dstp,
+				const struct cpumask *srcp)

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#373: FILE: arch/x86/kernel/uv_irq.c:266:
+	uv_irq_cpus_allowed = kzalloc(uv_num_possible_blades() *
+			sizeof(cpumask_var_t *), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!uv_irq_cpus_allowed"
#376: FILE: arch/x86/kernel/uv_irq.c:269:
+	if (uv_irq_cpus_allowed == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#377: FILE: arch/x86/kernel/uv_irq.c:270:
+		printk(KERN_EMERG "Out of memory");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#386: FILE: arch/x86/kernel/uv_irq.c:279:
+		if (!zalloc_cpumask_var_node(&uv_irq_cpus_allowed[bid],
+				GFP_KERNEL, uv_blade_to_memory_nid(bid))) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#387: FILE: arch/x86/kernel/uv_irq.c:280:
+			printk(KERN_EMERG "Out of memory on blade %d", bid);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#392: FILE: arch/x86/kernel/uv_irq.c:285:
+		pa = uv_global_mmr64_address(uv_blade_to_pnode(bid),
+			UVH_LB_SOCKET_DESTINATION_TABLE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#395: FILE: arch/x86/kernel/uv_irq.c:288:
+		for (i = 0; i < UVH_LB_SOCKET_DESTINATION_TABLE_DEPTH; pa++,
+				i++) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#403: FILE: arch/x86/kernel/uv_irq.c:296:
+					cpumask_set_cpu(cpu,
+						uv_irq_cpus_allowed[bid]);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#449: FILE: arch/x86/include/asm/hw_irq.h:102:
+extern int (*x86_irq_allowed_and)(int, struct cpumask *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cpumask *' should also have an identifier name
#449: FILE: arch/x86/include/asm/hw_irq.h:102:
+extern int (*x86_irq_allowed_and)(int, struct cpumask *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct cpumask *' should also have an identifier name
#449: FILE: arch/x86/include/asm/hw_irq.h:102:
+extern int (*x86_irq_allowed_and)(int, struct cpumask *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#450: FILE: arch/x86/include/asm/hw_irq.h:103:
+extern int (*x86_irq_allowed_and)(int, struct cpumask *,
+					const struct cpumask *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#462: FILE: arch/x86/include/asm/uv/uv_irq.h:34:
+extern void arch_init_uv_cfg_cpus_allowed(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000057251.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 10 warnings, 10 checks, 365 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000057251.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
