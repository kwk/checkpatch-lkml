CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#62: FILE: drivers/usb/serial/cp2101.c:50:
+static long cp2101_compat_ioctl32(struct tty_struct *, struct file *,
+				 unsigned int cmd, unsigned long arg);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#70: FILE: drivers/usb/serial/cp2101.c:61:
+static int cp210x_gpioget(struct usb_serial_port *port, u8* gpio);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#96: FILE: drivers/usb/serial/cp2101.c:385:
+	switch(cmd) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#101: FILE: drivers/usb/serial/cp2101.c:390:
+		if (copy_to_user((void __user*)arg,

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#117: FILE: drivers/usb/serial/cp2101.c:406:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#124: FILE: drivers/usb/serial/cp2101.c:413:
+	return (long) cp2101_ioctl(tty, file, cmd, arg);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#140: FILE: drivers/usb/serial/cp2101.c:777:
+static int cp2101_ctlmsg(struct usb_serial_port* port, u8 request,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#141: FILE: drivers/usb/serial/cp2101.c:778:
+static int cp2101_ctlmsg(struct usb_serial_port* port, u8 request,
+		u8 requestype, u16 value, u16 index, void* data, u16 size)

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#141: FILE: drivers/usb/serial/cp2101.c:778:
+		u8 requestype, u16 value, u16 index, void* data, u16 size)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#147: FILE: drivers/usb/serial/cp2101.c:784:
+	if (!(tbuf = kmalloc(size, GFP_KERNEL))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#147: FILE: drivers/usb/serial/cp2101.c:784:
+	if (!(tbuf = kmalloc(size, GFP_KERNEL))) {
+		return -ENOMEM;
+	}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#153: FILE: drivers/usb/serial/cp2101.c:790:
+		ret = usb_control_msg(dev, usb_rcvctrlpipe(dev, 0), request,
+				requestype, value, index, tbuf, size, 300);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#162: FILE: drivers/usb/serial/cp2101.c:799:
+		ret = usb_control_msg(dev, usb_sndctrlpipe(dev, 0), request,
+				requestype, value, index, tbuf, size, 300);

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#169: FILE: drivers/usb/serial/cp2101.c:806:
+static int cp210x_gpioget(struct usb_serial_port *port, u8* gpio)

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#184: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#189: FILE: drivers/usb/serial/cp2101.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#203: FILE: drivers/usb/serial/cp2101.h:15:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#204: FILE: drivers/usb/serial/cp2101.h:16:
+ * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#225: FILE: drivers/usb/serial/cp2101.h:37:
+#define CP2101_GPIO_SET(bit,value)	((1 << (bit)) | ((value & 1) << ((bit) + 8)))
                            ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'bit' - possible side-effects?
#225: FILE: drivers/usb/serial/cp2101.h:37:
+#define CP2101_GPIO_SET(bit,value)	((1 << (bit)) | ((value & 1) << ((bit) + 8)))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'value' may be better as '(value)' to avoid precedence issues
#225: FILE: drivers/usb/serial/cp2101.h:37:
+#define CP2101_GPIO_SET(bit,value)	((1 << (bit)) | ((value & 1) << ((bit) + 8)))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000198874.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 10 errors, 3 warnings, 8 checks, 176 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000198874.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
