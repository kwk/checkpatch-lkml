WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#75: FILE: drivers/net/phy/Kconfig:79:
+config FIXED_MII_1000_FDX
+	bool "Emulation for 1000M Fdx fixed PHY behavior"
+	depends on FIXED_PHY
+

Kconfig symbols should have a help text which fully describes
it.

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#131: FILE: drivers/net/phy/fixed.c:40:
+static struct fixed_info *fixed_phy_ptrs[CONFIG_FIXED_MII_AMNT*MAX_PHY_AMNT];
                                                               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#141: FILE: drivers/net/phy/fixed.c:48:
+			       int (*link_update) (struct net_device *,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!link_update"
#147: FILE: drivers/net/phy/fixed.c:53:
+	if (link_update == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#164: FILE: drivers/net/phy/fixed.c:68:
+struct fixed_info *fixed_mdio_get_phydev (int phydev_ind)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#171: FILE: drivers/net/phy/fixed.c:75:
+EXPORT_SYMBOL(fixed_mdio_get_phydev);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#177: FILE: drivers/net/phy/fixed.c:80:
+#if defined(CONFIG_FIXED_MII_100_FDX) || defined(CONFIG_FIXED_MII_10_FDX) || defined(CONFIG_FIXED_MII_1000_FDX)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#331: FILE: drivers/net/phy/fixed.c:209:
+#if defined(CONFIG_FIXED_MII_100_FDX) || defined(CONFIG_FIXED_MII_10_FDX) || defined(CONFIG_FIXED_MII_1000_FDX)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#332: FILE: drivers/net/phy/fixed.c:210:
+struct fixed_info *fixed_mdio_register_device(

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*dev)...) over kzalloc(sizeof(struct device)...)
#342: FILE: drivers/net/phy/fixed.c:218:
+	struct device *dev = kzalloc(sizeof(struct device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#346: FILE: drivers/net/phy/fixed.c:220:
+	if (dev == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!new_bus"
#355: FILE: drivers/net/phy/fixed.c:225:
+	if (new_bus == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fixed"
#365: FILE: drivers/net/phy/fixed.c:230:
+	if (fixed == NULL)

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#368: FILE: drivers/net/phy/fixed.c:233:
+	fixed->regs = kzalloc(MII_REGS_NUM * sizeof(int), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#369: FILE: drivers/net/phy/fixed.c:234:
+	if (NULL == fixed->regs)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!phydev"
#396: FILE: drivers/net/phy/fixed.c:255:
+	if (phydev == NULL)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#452: FILE: drivers/net/phy/fixed.c:281:
+		printk(KERN_ERR "Phy %s: problems with fixed driver\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#458: FILE: drivers/net/phy/fixed.c:287:
+		printk(KERN_ERR "Phy %s failed to register\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#463: FILE: drivers/net/phy/fixed.c:292:
+	//phydev->state = PHY_RUNNING; /* make phy go up quick, but in 10Mbit/HDX
+	return fixed;

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#546: FILE: drivers/net/phy/fixed.c:336:
+	for (i=1; i <= CONFIG_FIXED_MII_AMNT; i++) {
 	      ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#571: FILE: drivers/net/phy/fixed.c:356:
+	for (i=0; i < MAX_PHY_AMNT; i++)
 	      ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#572: FILE: drivers/net/phy/fixed.c:357:
+		if ( fixed_phy_ptrs[i] )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#572: FILE: drivers/net/phy/fixed.c:357:
+		if ( fixed_phy_ptrs[i] )

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#578: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#583: FILE: include/linux/phy_fixed.h:1:
+#ifndef __PHY_FIXED_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#591: FILE: include/linux/phy_fixed.h:9:
+/*
+    The idea is to emulate normal phy behavior by responding with

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#604: FILE: include/linux/phy_fixed.h:22:
+ *-----------------------------------------------------------------------------*/

WARNING:SPACING: Unnecessary space before function pointer arguments
#611: FILE: include/linux/phy_fixed.h:29:
+	int (*link_update) (struct net_device *, struct fixed_phy_status *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct net_device *' should also have an identifier name
#611: FILE: include/linux/phy_fixed.h:29:
+	int (*link_update) (struct net_device *, struct fixed_phy_status *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fixed_phy_status *' should also have an identifier name
#611: FILE: include/linux/phy_fixed.h:29:
+	int (*link_update) (struct net_device *, struct fixed_phy_status *);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#615: FILE: include/linux/phy_fixed.h:33:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct phy_device *' should also have an identifier name
#616: FILE: include/linux/phy_fixed.h:34:
+int fixed_mdio_set_link_update(struct phy_device *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#617: FILE: include/linux/phy_fixed.h:35:
+int fixed_mdio_set_link_update(struct phy_device *,
+       int (*link_update) (struct net_device *, struct fixed_phy_status *));

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#617: FILE: include/linux/phy_fixed.h:35:
+       int (*link_update) (struct net_device *, struct fixed_phy_status *));$

WARNING:SPACING: Unnecessary space before function pointer arguments
#617: FILE: include/linux/phy_fixed.h:35:
+       int (*link_update) (struct net_device *, struct fixed_phy_status *));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#618: FILE: include/linux/phy_fixed.h:36:
+struct fixed_info *fixed_mdio_get_phydev (int phydev_ind);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000404069.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 22 warnings, 10 checks, 533 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000404069.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
