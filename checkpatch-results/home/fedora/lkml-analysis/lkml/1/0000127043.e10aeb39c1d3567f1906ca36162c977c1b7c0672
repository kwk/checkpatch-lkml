WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
"affinity-on-next-touch", the access permission will be set by the pte fault

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#45: FILE: mm/mprotect.c:34:
pgprot_t newprot)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#52: FILE: mm/mprotect.c:38:
+static void change_pte_range(struct vm_area_struct *vma, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#53: FILE: mm/mprotect.c:39:
+               struct mm_struct *mm, pmd_t *pmd, unsigned long addr, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#53: FILE: mm/mprotect.c:39:
+               struct mm_struct *mm, pmd_t *pmd, unsigned long addr, $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#53: FILE: mm/mprotect.c:39:
+static void change_pte_range(struct vm_area_struct *vma, 
+               struct mm_struct *mm, pmd_t *pmd, unsigned long addr, 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#53: FILE: mm/mprotect.c:39:
+               struct mm_struct *mm, pmd_t *pmd, unsigned long addr, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#54: FILE: mm/mprotect.c:40:
+               unsigned long end, pgprot_t newprot, int dirty_accountable)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#54: FILE: mm/mprotect.c:40:
+               unsigned long end, pgprot_t newprot, int dirty_accountable)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#64: FILE: mm/mprotect.c:52:
+                       if (vma_migratable(vma)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#64: FILE: mm/mprotect.c:52:
+                       if (vma_migratable(vma)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (23, 31)
#64: FILE: mm/mprotect.c:52:
+                       if (vma_migratable(vma)) {
+                               struct page *page = vm_normal_page(vma,

ERROR:CODE_INDENT: code indent should use tabs where possible
#65: FILE: mm/mprotect.c:53:
+                               struct page *page = vm_normal_page(vma,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#65: FILE: mm/mprotect.c:53:
+                               struct page *page = vm_normal_page(vma,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#67: FILE: mm/mprotect.c:54:
+                                                       oldpte);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#67: FILE: mm/mprotect.c:54:
+                                                       oldpte);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#68: FILE: mm/mprotect.c:55:
+                               /* $

ERROR:CODE_INDENT: code indent should use tabs where possible
#68: FILE: mm/mprotect.c:55:
+                               /* $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#69: FILE: mm/mprotect.c:56:
+                                * By using affinity-on-next-touch the page $

ERROR:CODE_INDENT: code indent should use tabs where possible
#69: FILE: mm/mprotect.c:56:
+                                * By using affinity-on-next-touch the page $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#70: FILE: mm/mprotect.c:57:
+                                * fault handler will set the new page $

ERROR:CODE_INDENT: code indent should use tabs where possible
#70: FILE: mm/mprotect.c:57:
+                                * fault handler will set the new page $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#71: FILE: mm/mprotect.c:58:
+                                * permissions! $

ERROR:CODE_INDENT: code indent should use tabs where possible
#71: FILE: mm/mprotect.c:58:
+                                * permissions! $

ERROR:CODE_INDENT: code indent should use tabs where possible
#72: FILE: mm/mprotect.c:59:
+                                */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#73: FILE: mm/mprotect.c:60:
+                               if (page && PageUntouched(page))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#73: FILE: mm/mprotect.c:60:
+                               if (page && PageUntouched(page))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (31, 39)
#73: FILE: mm/mprotect.c:60:
+                               if (page && PageUntouched(page))
+                                       continue;

ERROR:CODE_INDENT: code indent should use tabs where possible
#74: FILE: mm/mprotect.c:61:
+                                       continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: mm/mprotect.c:61:
+                                       continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#75: FILE: mm/mprotect.c:62:
+                       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: mm/mprotect.c:62:
+                       }$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#88: FILE: mm/mprotect.c:94:
+static inline void change_pmd_range(struct vm_area_struct *vma, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#89: FILE: mm/mprotect.c:95:
+               struct mm_struct *mm, pud_t *pud, unsigned long addr, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#89: FILE: mm/mprotect.c:95:
+               struct mm_struct *mm, pud_t *pud, unsigned long addr, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#89: FILE: mm/mprotect.c:95:
+static inline void change_pmd_range(struct vm_area_struct *vma, 
+               struct mm_struct *mm, pud_t *pud, unsigned long addr, 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#89: FILE: mm/mprotect.c:95:
+               struct mm_struct *mm, pud_t *pud, unsigned long addr, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#90: FILE: mm/mprotect.c:96:
+               unsigned long end, pgprot_t newprot, int dirty_accountable)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: mm/mprotect.c:96:
+               unsigned long end, pgprot_t newprot, int dirty_accountable)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#101: FILE: mm/mprotect.c:106:
+               change_pte_range(vma, mm, pmd, addr, next, newprot, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#101: FILE: mm/mprotect.c:106:
+               change_pte_range(vma, mm, pmd, addr, next, newprot, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: mm/mprotect.c:106:
+               change_pte_range(vma, mm, pmd, addr, next, newprot, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#102: FILE: mm/mprotect.c:107:
+                               dirty_accountable);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#102: FILE: mm/mprotect.c:107:
+               change_pte_range(vma, mm, pmd, addr, next, newprot, 
+                               dirty_accountable);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#102: FILE: mm/mprotect.c:107:
+                               dirty_accountable);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#109: FILE: mm/mprotect.c:111:
+static inline void change_pud_range(struct vm_area_struct *vma, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#110: FILE: mm/mprotect.c:112:
+               struct mm_struct *mm, pgd_t *pgd, unsigned long addr, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#110: FILE: mm/mprotect.c:112:
+               struct mm_struct *mm, pgd_t *pgd, unsigned long addr, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#110: FILE: mm/mprotect.c:112:
+static inline void change_pud_range(struct vm_area_struct *vma, 
+               struct mm_struct *mm, pgd_t *pgd, unsigned long addr, 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#110: FILE: mm/mprotect.c:112:
+               struct mm_struct *mm, pgd_t *pgd, unsigned long addr, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#111: FILE: mm/mprotect.c:113:
+               unsigned long end, pgprot_t newprot, int dirty_accountable)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: mm/mprotect.c:113:
+               unsigned long end, pgprot_t newprot, int dirty_accountable)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#122: FILE: mm/mprotect.c:123:
+               change_pmd_range(vma, mm, pud, addr, next, newprot, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#122: FILE: mm/mprotect.c:123:
+               change_pmd_range(vma, mm, pud, addr, next, newprot, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: mm/mprotect.c:123:
+               change_pmd_range(vma, mm, pud, addr, next, newprot, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: mm/mprotect.c:124:
+                               dirty_accountable);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#123: FILE: mm/mprotect.c:124:
+               change_pmd_range(vma, mm, pud, addr, next, newprot, 
+                               dirty_accountable);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: mm/mprotect.c:124:
+                               dirty_accountable);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#134: FILE: mm/mprotect.c:144:
+               change_pud_range(vma, mm, pgd, addr, next, newprot,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: mm/mprotect.c:144:
+               change_pud_range(vma, mm, pgd, addr, next, newprot,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#136: FILE: mm/mprotect.c:145:
+               change_pud_range(vma, mm, pgd, addr, next, newprot,
        } while (pgd++, addr = next, addr != end);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000127043.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 35 errors, 20 warnings, 6 checks, 89 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000127043.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
