WARNING:TYPO_SPELLING: 'Dyas' may be misspelled - perhaps 'Dryas'?
#366: FILE: kernel/sysctl.c.orig:6:
+ * Added bdflush entry and intvec min/max checking, 2/23/96, Tom Dyas.
                                                                  ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#510: FILE: kernel/sysctl.c.orig:150:
+static int proc_do_cad_pid(struct ctl_table *table, int write, struct file *filp,
                                                                             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#512: FILE: kernel/sysctl.c.orig:152:
+static int proc_dointvec_taint(struct ctl_table *table, int write, struct file *filp,
                                                                                 ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1226: FILE: kernel/sysctl.c.orig:866:
+^I^I.procname^I= "page-cluster", $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1639: FILE: kernel/sysctl.c.orig:1279:
+#endif^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1885: FILE: kernel/sysctl.c.orig:1525:
+^I^Ierror = parse_table(name, nlen, oldval, oldlenp, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2035: FILE: kernel/sysctl.c.orig:1675:
+ * proc_dointvec_userhz_jiffies(), proc_dointvec_minmax(), $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2186: FILE: kernel/sysctl.c.orig:1826:
+			   struct file *filp, void __user *buffer,
 			                ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2247: FILE: kernel/sysctl.c.orig:1887:
+ * @filp: the file structure
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2261: FILE: kernel/sysctl.c.orig:1901:
+int proc_dostring(struct ctl_table *table, int write, struct file *filp,
                                                                    ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2264: FILE: kernel/sysctl.c.orig:1904:
+	return _proc_do_string(table->data, table->maxlen, write, filp,
 	                                                          ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2289: FILE: kernel/sysctl.c.orig:1929:
+		  int write, struct file *filp, void __user *buffer,
 		                          ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2299: FILE: kernel/sysctl.c.orig:1939:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2302: FILE: kernel/sysctl.c.orig:1942:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2308: FILE: kernel/sysctl.c.orig:1948:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2360: FILE: kernel/sysctl.c.orig:2000:
+^I$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2398: FILE: kernel/sysctl.c.orig:2038:
+static int do_proc_dointvec(struct ctl_table *table, int write, struct file *filp,
                                                                              ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2404: FILE: kernel/sysctl.c.orig:2044:
+	return __do_proc_dointvec(table->data, table, write, filp,
 	                                                     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2412: FILE: kernel/sysctl.c.orig:2052:
+ * @filp: the file structure
     ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2418: FILE: kernel/sysctl.c.orig:2058:
+ * values from/to the user buffer, treated as an ASCII string. $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2422: FILE: kernel/sysctl.c.orig:2062:
+int proc_dointvec(struct ctl_table *table, int write, struct file *filp,
                                                                    ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2425: FILE: kernel/sysctl.c.orig:2065:
+    return do_proc_dointvec(table,write,filp,buffer,lenp,ppos,
                                         ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2461: FILE: kernel/sysctl.c.orig:2101:
+static int proc_dointvec_taint(struct ctl_table *table, int write, struct file *filp,
                                                                                 ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2470: FILE: kernel/sysctl.c.orig:2110:
+	return do_proc_dointvec(table,write,filp,buffer,lenp,ppos,
 	                                    ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2479: FILE: kernel/sysctl.c.orig:2119:
+static int do_proc_dointvec_minmax_conv(int *negp, unsigned long *lvalp, $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2480: FILE: kernel/sysctl.c.orig:2120:
+^I^I^I^I^Iint *valp, $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2507: FILE: kernel/sysctl.c.orig:2147:
+ * @filp: the file structure
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2520: FILE: kernel/sysctl.c.orig:2160:
+int proc_dointvec_minmax(struct ctl_table *table, int write, struct file *filp,
                                                                           ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2527: FILE: kernel/sysctl.c.orig:2167:
+	return do_proc_dointvec(table, write, filp, buffer, lenp, ppos,
 	                                      ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2532: FILE: kernel/sysctl.c.orig:2172:
+				     struct file *filp,
 				                  ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2544: FILE: kernel/sysctl.c.orig:2184:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2550: FILE: kernel/sysctl.c.orig:2190:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2556: FILE: kernel/sysctl.c.orig:2196:
+^I$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2637: FILE: kernel/sysctl.c.orig:2277:
+				     struct file *filp,
 				                  ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2644: FILE: kernel/sysctl.c.orig:2284:
+			filp, buffer, lenp, ppos, convmul, convdiv);
 			^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2651: FILE: kernel/sysctl.c.orig:2291:
+ * @filp: the file structure
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2664: FILE: kernel/sysctl.c.orig:2304:
+int proc_doulongvec_minmax(struct ctl_table *table, int write, struct file *filp,
                                                                             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2667: FILE: kernel/sysctl.c.orig:2307:
+    return do_proc_doulongvec_minmax(table, write, filp, buffer, lenp, ppos, 1l, 1l);
                                                    ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2674: FILE: kernel/sysctl.c.orig:2314:
+ * @filp: the file structure
     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2689: FILE: kernel/sysctl.c.orig:2329:
+				      struct file *filp,
 				                   ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2693: FILE: kernel/sysctl.c.orig:2333:
+    return do_proc_doulongvec_minmax(table, write, filp, buffer,
                                                    ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2769: FILE: kernel/sysctl.c.orig:2409:
+ * @filp: the file structure
     ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2775: FILE: kernel/sysctl.c.orig:2415:
+ * values from/to the user buffer, treated as an ASCII string. $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2781: FILE: kernel/sysctl.c.orig:2421:
+int proc_dointvec_jiffies(struct ctl_table *table, int write, struct file *filp,
                                                                            ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2784: FILE: kernel/sysctl.c.orig:2424:
+    return do_proc_dointvec(table,write,filp,buffer,lenp,ppos,
                                         ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2792: FILE: kernel/sysctl.c.orig:2432:
+ * @filp: the file structure
     ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2798: FILE: kernel/sysctl.c.orig:2438:
+ * values from/to the user buffer, treated as an ASCII string. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2799: FILE: kernel/sysctl.c.orig:2439:
+ * The values read are assumed to be in 1/USER_HZ seconds, and $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2804: FILE: kernel/sysctl.c.orig:2444:
+int proc_dointvec_userhz_jiffies(struct ctl_table *table, int write, struct file *filp,
                                                                                   ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2807: FILE: kernel/sysctl.c.orig:2447:
+    return do_proc_dointvec(table,write,filp,buffer,lenp,ppos,
                                         ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2815: FILE: kernel/sysctl.c.orig:2455:
+ * @filp: the file structure
     ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2822: FILE: kernel/sysctl.c.orig:2462:
+ * values from/to the user buffer, treated as an ASCII string. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2823: FILE: kernel/sysctl.c.orig:2463:
+ * The values read are assumed to be in 1/1000 seconds, and $

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2828: FILE: kernel/sysctl.c.orig:2468:
+int proc_dointvec_ms_jiffies(struct ctl_table *table, int write, struct file *filp,
                                                                               ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2831: FILE: kernel/sysctl.c.orig:2471:
+	return do_proc_dointvec(table, write, filp, buffer, lenp, ppos,
 	                                      ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2835: FILE: kernel/sysctl.c.orig:2475:
+static int proc_do_cad_pid(struct ctl_table *table, int write, struct file *filp,
                                                                             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2844: FILE: kernel/sysctl.c.orig:2484:
+	r = __do_proc_dointvec(&tmp, table, write, filp, buffer,
 	                                           ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2859: FILE: kernel/sysctl.c.orig:2499:
+int proc_dostring(struct ctl_table *table, int write, struct file *filp,
                                                                    ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2865: FILE: kernel/sysctl.c.orig:2505:
+int proc_dointvec(struct ctl_table *table, int write, struct file *filp,
                                                                    ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2871: FILE: kernel/sysctl.c.orig:2511:
+int proc_dointvec_minmax(struct ctl_table *table, int write, struct file *filp,
                                                                           ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2877: FILE: kernel/sysctl.c.orig:2517:
+int proc_dointvec_jiffies(struct ctl_table *table, int write, struct file *filp,
                                                                            ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2883: FILE: kernel/sysctl.c.orig:2523:
+int proc_dointvec_userhz_jiffies(struct ctl_table *table, int write, struct file *filp,
                                                                                   ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2889: FILE: kernel/sysctl.c.orig:2529:
+int proc_dointvec_ms_jiffies(struct ctl_table *table, int write, struct file *filp,
                                                                               ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2895: FILE: kernel/sysctl.c.orig:2535:
+int proc_doulongvec_minmax(struct ctl_table *table, int write, struct file *filp,
                                                                             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#2902: FILE: kernel/sysctl.c.orig:2542:
+				      struct file *filp,
 				                   ^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2915: FILE: kernel/sysctl.c.orig:2555:
+ * General sysctl support routines $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2957: FILE: kernel/sysctl.c.orig:2597:
+^Iif (!table->data || !table->maxlen) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2959: FILE: kernel/sysctl.c.orig:2599:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3034: FILE: kernel/sysctl.c.orig:2674:
+/* Strategy function to convert jiffies to seconds */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3057: FILE: kernel/sysctl.c.orig:2697:
+^Iif (newval && newlen) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3060: FILE: kernel/sysctl.c.orig:2700:
+^I^I^Ireturn -EINVAL; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3063: FILE: kernel/sysctl.c.orig:2703:
+^I^I*(int *)(table->data) = new*HZ; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3068: FILE: kernel/sysctl.c.orig:2708:
+/* Strategy function to convert jiffies to seconds */ $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3091: FILE: kernel/sysctl.c.orig:2731:
+^Iif (newval && newlen) { $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3094: FILE: kernel/sysctl.c.orig:2734:
+^I^I^Ireturn -EINVAL; $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#3266: FILE: lib/Kconfig.debug.orig:12:
+config ENABLE_WARN_DEPRECATED
+	bool "Enable __deprecated logic"
+	default y
+	help
+	  Enable the __deprecated logic in the kernel build.
+	  Disable this to suppress the "warning: 'foo' is deprecated
+	  (declared at kernel/power/somefile.c:1234)" messages.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#3274: FILE: lib/Kconfig.debug.orig:20:
+config ENABLE_MUST_CHECK
+	bool "Enable __must_check logic"
+	default y
+	help
+	  Enable the __must_check logic in the kernel build.  Disable this to
+	  suppress the "warning: ignoring return value of 'foo', declared with
+	  attribute warn_unused_result" messages.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#3293: FILE: lib/Kconfig.debug.orig:39:
+config MAGIC_SYSRQ
+	bool "Magic SysRq key"
+	depends on !UML
+	help
+	  If you say Y here, you will have some control over the system even

WARNING:TYPO_SPELLING: 'resonable' may be misspelled - perhaps 'reasonable'?
#3351: FILE: lib/Kconfig.debug.orig:97:
+	# It will be enabled when we are down to a resonable number
 	                                           ^^^^^^^^^

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#3382: FILE: lib/Kconfig.debug.orig:128:
+config DEBUG_KERNEL
+	bool "Kernel debugging"
+	help
+	  Say Y here if you are developing drivers or trying to debug and
+	  identify kernel problems.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#3451: FILE: lib/Kconfig.debug.orig:197:
+config DEBUG_OBJECTS
+	bool "Debug object operations"
+	depends on DEBUG_KERNEL
+	help
+	  If you say Y here, additional code will be inserted into the
+	  kernel to track the life time of various objects and validate
+	  the operations on those objects.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#3459: FILE: lib/Kconfig.debug.orig:205:
+config DEBUG_OBJECTS_SELFTEST
+	bool "Debug objects selftest"
+	depends on DEBUG_OBJECTS
+	help
+	  This enables the selftest of the object debug code.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#3474: FILE: lib/Kconfig.debug.orig:220:
+config DEBUG_OBJECTS_TIMERS
+	bool "Debug timer objects"
+	depends on DEBUG_OBJECTS
+	help
+	  If you say Y here, additional code will be inserted into the
+	  timer routines to track the life time of timer objects and
+	  validate the timer operations.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#3482: FILE: lib/Kconfig.debug.orig:228:
+config DEBUG_SLAB
+	bool "Debug slab memory allocations"
+	depends on DEBUG_KERNEL && SLAB
+	help
+	  Say Y here to have the kernel do limited verification on memory
+	  allocation as well as poisoning memory on free to catch use of freed
+	  memory. This can make kmalloc/kfree-intensive workloads much slower.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#3490: FILE: lib/Kconfig.debug.orig:236:
+config DEBUG_SLAB_LEAK
+	bool "Memory leak debugging"
+	depends on DEBUG_SLAB
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#3520: FILE: lib/Kconfig.debug.orig:266:
+config DEBUG_PREEMPT
+	bool "Debug preemptible kernel"
+	depends on DEBUG_KERNEL && PREEMPT && (TRACE_IRQFLAGS_SUPPORT || PPC64)
+	default y
+	help
+	  If you say Y here then the kernel will use a debug variant of the
+	  commonly used smp_processor_id() function and will print warnings

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#3530: FILE: lib/Kconfig.debug.orig:276:
+config DEBUG_RT_MUTEXES
+	bool "RT Mutex debugging, deadlock detection"
+	depends on DEBUG_KERNEL && RT_MUTEXES
+	help
+	 This allows rt mutex semantics violations and rt mutex related
+	 deadlocks (lockups) to be detected and reported automatically.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#3542: FILE: lib/Kconfig.debug.orig:288:
+config RT_MUTEX_TESTER
+	bool "Built-in scriptable tester for rt-mutexes"
+	depends on DEBUG_KERNEL && RT_MUTEXES
+	help
+	  This option enables a rt-mutex tester.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#3557: FILE: lib/Kconfig.debug.orig:303:
+config DEBUG_MUTEXES
+	bool "Mutex debugging: basic checks"
+	depends on DEBUG_KERNEL
+	help
+	 This feature allows mutex semantics violations to be detected and
+	 reported.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#3628: FILE: lib/Kconfig.debug.orig:374:
+config LOCK_STAT
+	bool "Lock usage statistics"
+	depends on DEBUG_KERNEL && TRACE_IRQFLAGS_SUPPORT && STACKTRACE_SUPPORT && LOCKDEP_SUPPORT
+	select LOCKDEP
+	select DEBUG_SPINLOCK
+	select DEBUG_MUTEXES
+	select DEBUG_LOCK_ALLOC
+	default n
+	help
+	 This feature enables tracking lock contention points
+
+	 For more details, see Documentation/lockstat.txt
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#3641: FILE: lib/Kconfig.debug.orig:387:
+config DEBUG_LOCKDEP
+	bool "Lock dependency engine debugging"
+	depends on DEBUG_KERNEL && LOCKDEP
+	help
+	  If you say Y here, the lock dependency engine will do
+	  additional runtime checks to debug itself, at the price
+	  of more runtime overhead.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#3656: FILE: lib/Kconfig.debug.orig:402:
+config DEBUG_SPINLOCK_SLEEP
+	bool "Spinlock debugging: sleep-inside-spinlock checking"
+	depends on DEBUG_KERNEL
+	help
+	  If you say Y here, various routines which may sleep will become very
+	  noisy if they are called with a spinlock held.
+

WARNING:TYPO_SPELLING: 'wont' may be misspelled - perhaps 'won't'?
#3670: FILE: lib/Kconfig.debug.orig:416:
+	  lock debugging then those bugs wont be detected of course.)
 	                                 ^^^^

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#3679: FILE: lib/Kconfig.debug.orig:425:
+config DEBUG_KOBJECT
+	bool "kobject debugging"
+	depends on DEBUG_KERNEL
+	help
+	  If you say Y here, some extra kobject debugging messages will be sent
+	  to the syslog. 
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#3684: FILE: lib/Kconfig.debug.orig:430:
+^I  to the syslog. $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#3686: FILE: lib/Kconfig.debug.orig:432:
+config DEBUG_HIGHMEM
+	bool "Highmem debugging"
+	depends on DEBUG_KERNEL && HIGHMEM
+	help
+	  This options enables addition error checking for high memory systems.
+	  Disable for production systems.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#3693: FILE: lib/Kconfig.debug.orig:439:
+config DEBUG_BUGVERBOSE
+	bool "Verbose BUG() reporting (adds 70K)" if DEBUG_KERNEL && EMBEDDED
+	depends on BUG
+	depends on ARM || AVR32 || M32R || M68K || SPARC32 || SPARC64 || \
+		   FRV || SUPERH || GENERIC_BUG || BLACKFIN || MN10300
+	default !EMBEDDED
+	help
+	  Say Y here to make BUG() panics output the file name and line number
+	  of the BUG call as well as the EIP and oops trace.  This aids
+	  debugging but costs about 70-100K of memory.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#3717: FILE: lib/Kconfig.debug.orig:463:
+config DEBUG_VM
+	bool "Debug VM"
+	depends on DEBUG_KERNEL
+	help
+	  Enable this to turn on extended checks in the virtual-memory system
+          that may impact performance.
+
+	  If unsure, say N.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#3736: FILE: lib/Kconfig.debug.orig:482:
+config DEBUG_LIST
+	bool "Debug linked list manipulation"
+	depends on DEBUG_KERNEL
+	help
+	  Enable this to turn on extended checks in the linked-list
+	  walking routines.
+
+	  If unsure, say N.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#3838: FILE: lib/Kconfig.debug.orig:584:
+config FAULT_INJECTION
+	bool "Fault-injection framework"
+	depends on DEBUG_KERNEL
+	help
+	  Provide fault-injection framework.
+	  For more details, see Documentation/fault-injection/.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#3845: FILE: lib/Kconfig.debug.orig:591:
+config FAILSLAB
+	bool "Fault-injection capability for kmalloc"
+	depends on FAULT_INJECTION
+	help
+	  Provide fault-injection capability for kmalloc.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#3851: FILE: lib/Kconfig.debug.orig:597:
+config FAIL_PAGE_ALLOC
+	bool "Fault-injection capabilitiy for alloc_pages()"
+	depends on FAULT_INJECTION
+	help
+	  Provide fault-injection capability for alloc_pages().
+

WARNING:TYPO_SPELLING: 'capabilitiy' may be misspelled - perhaps 'capability'?
#3852: FILE: lib/Kconfig.debug.orig:598:
+	bool "Fault-injection capabilitiy for alloc_pages()"
 	                      ^^^^^^^^^^^

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#3857: FILE: lib/Kconfig.debug.orig:603:
+config FAIL_MAKE_REQUEST
+	bool "Fault-injection capability for disk IO"
+	depends on FAULT_INJECTION
+	help
+	  Provide fault-injection capability for disk IO.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#3863: FILE: lib/Kconfig.debug.orig:609:
+config FAULT_INJECTION_DEBUG_FS
+	bool "Debugfs entries for fault-injection capabilities"
+	depends on FAULT_INJECTION && SYSFS && DEBUG_FS
+	help
+	  Enable configuration of fault-injection capabilities via debugfs.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#3869: FILE: lib/Kconfig.debug.orig:615:
+config FAULT_INJECTION_STACKTRACE_FILTER
+	bool "stacktrace filter for fault-injection capabilities"
+	depends on FAULT_INJECTION_DEBUG_FS && STACKTRACE_SUPPORT
+	depends on !X86_64
+	select STACKTRACE
+	select FRAME_POINTER
+	help
+	  Provide stacktrace filter for fault-injection capabilities
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#3878: FILE: lib/Kconfig.debug.orig:624:
+config LATENCYTOP
+	bool "Latency measuring infrastructure"
+	select FRAME_POINTER if !MIPS
+	select KALLSYMS
+	select KALLSYMS_ALL
+	select STACKTRACE
+	select SCHEDSTATS
+	select SCHED_DEBUG
+	depends on HAVE_LATENCYTOP_SUPPORT
+	help
+	  Enable this option if you want to use the LatencyTOP tool
+	  to find out which userspace is blocking on what kernel operations.
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000265599.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 30 errors, 77 warnings, 0 checks, 3791 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000265599.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
