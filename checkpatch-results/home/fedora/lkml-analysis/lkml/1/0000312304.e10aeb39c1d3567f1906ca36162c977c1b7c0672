WARNING:TYPO_SPELLING: 'occurances' may be misspelled - perhaps 'occurrences'?
#17: 
Subject: [PATCH] alpha: remove remaining __FUNCTION__ occurances
                                                      ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'occurances' may be misspelled - perhaps 'occurrences'?
#39: 
A #define FN __FUNCTION__ was removed and occurances of FN were replaced
                                          ^^^^^^^^^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#77: FILE: arch/alpha/kernel/core_marvel.c:1047:
+		printk("%s: addr out of range\n", __func__);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#84: FILE: arch/alpha/kernel/core_marvel.c:1053:
+		printk("%s: pte not valid\n", __func__);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#125: FILE: arch/alpha/kernel/core_t2.c:374:
+	printk("%s: HAE_1 was 0x%lx\n", __func__, srm_hae); /* HW is 0 */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#126: FILE: arch/alpha/kernel/core_t2.c:375:
+	printk("%s: HAE_2 was 0x%lx\n", __func__, *(vulp)T2_HAE_2);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#127: FILE: arch/alpha/kernel/core_t2.c:376:
+	printk("%s: HAE_3 was 0x%lx\n", __func__, *(vulp)T2_HAE_3);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#128: FILE: arch/alpha/kernel/core_t2.c:377:
+	printk("%s: HAE_4 was 0x%lx\n", __func__, *(vulp)T2_HAE_4);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#129: FILE: arch/alpha/kernel/core_t2.c:378:
+	printk("%s: HBASE was 0x%lx\n", __func__, *(vulp)T2_HBASE);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#132: FILE: arch/alpha/kernel/core_t2.c:380:
+^Iprintk("%s: WBASE1=0x%lx WMASK1=0x%lx TBASE1=0x%lx\n", __func__, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#132: FILE: arch/alpha/kernel/core_t2.c:380:
+	printk("%s: WBASE1=0x%lx WMASK1=0x%lx TBASE1=0x%lx\n", __func__, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#135: FILE: arch/alpha/kernel/core_t2.c:382:
+^Iprintk("%s: WBASE2=0x%lx WMASK2=0x%lx TBASE2=0x%lx\n", __func__, $

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#135: FILE: arch/alpha/kernel/core_t2.c:382:
+	printk("%s: WBASE2=0x%lx WMASK2=0x%lx TBASE2=0x%lx\n", __func__, 

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#162: FILE: arch/alpha/kernel/core_titan.c:368:
+	printk("%s: titan_init_arch()\n", __func__);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#163: FILE: arch/alpha/kernel/core_titan.c:369:
+	printk("%s: CChip registers:\n", __func__);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#164: FILE: arch/alpha/kernel/core_titan.c:370:
+	printk("%s: CSR_CSC 0x%lx\n", __func__, TITAN_cchip->csc.csr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#165: FILE: arch/alpha/kernel/core_titan.c:371:
+	printk("%s: CSR_MTR 0x%lx\n", __func__, TITAN_cchip->mtr.csr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#166: FILE: arch/alpha/kernel/core_titan.c:372:
+	printk("%s: CSR_MISC 0x%lx\n", __func__, TITAN_cchip->misc.csr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#167: FILE: arch/alpha/kernel/core_titan.c:373:
+	printk("%s: CSR_DIM0 0x%lx\n", __func__, TITAN_cchip->dim0.csr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#168: FILE: arch/alpha/kernel/core_titan.c:374:
+	printk("%s: CSR_DIM1 0x%lx\n", __func__, TITAN_cchip->dim1.csr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#169: FILE: arch/alpha/kernel/core_titan.c:375:
+	printk("%s: CSR_DIR0 0x%lx\n", __func__, TITAN_cchip->dir0.csr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#170: FILE: arch/alpha/kernel/core_titan.c:376:
+	printk("%s: CSR_DIR1 0x%lx\n", __func__, TITAN_cchip->dir1.csr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#171: FILE: arch/alpha/kernel/core_titan.c:377:
+	printk("%s: CSR_DRIR 0x%lx\n", __func__, TITAN_cchip->drir.csr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#173: FILE: arch/alpha/kernel/core_titan.c:379:
+	printk("%s: DChip registers:\n", __func__);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#174: FILE: arch/alpha/kernel/core_titan.c:380:
+	printk("%s: CSR_DSC 0x%lx\n", __func__, TITAN_dchip->dsc.csr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#175: FILE: arch/alpha/kernel/core_titan.c:381:
+	printk("%s: CSR_STR 0x%lx\n", __func__, TITAN_dchip->str.csr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#176: FILE: arch/alpha/kernel/core_titan.c:382:
+	printk("%s: CSR_DREV 0x%lx\n", __func__, TITAN_dchip->drev.csr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#185: FILE: arch/alpha/kernel/core_titan.c:703:
+		printk("%s: addr out of range\n", __func__);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#192: FILE: arch/alpha/kernel/core_titan.c:709:
+		printk("%s: pte not valid\n", __func__);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#214: FILE: arch/alpha/kernel/core_tsunami.c:384:
+	printk("%s: probing bogus address:  0x%016lx\n", __func__, bogus_addr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#230: FILE: arch/alpha/kernel/core_tsunami.c:391:
+	printk("%s: CChip registers:\n", __func__);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#231: FILE: arch/alpha/kernel/core_tsunami.c:392:
+	printk("%s: CSR_CSC 0x%lx\n", __func__, TSUNAMI_cchip->csc.csr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#232: FILE: arch/alpha/kernel/core_tsunami.c:393:
+	printk("%s: CSR_MTR 0x%lx\n", __func__, TSUNAMI_cchip.mtr.csr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#233: FILE: arch/alpha/kernel/core_tsunami.c:394:
+	printk("%s: CSR_MISC 0x%lx\n", __func__, TSUNAMI_cchip->misc.csr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#234: FILE: arch/alpha/kernel/core_tsunami.c:395:
+	printk("%s: CSR_DIM0 0x%lx\n", __func__, TSUNAMI_cchip->dim0.csr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#235: FILE: arch/alpha/kernel/core_tsunami.c:396:
+	printk("%s: CSR_DIM1 0x%lx\n", __func__, TSUNAMI_cchip->dim1.csr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#236: FILE: arch/alpha/kernel/core_tsunami.c:397:
+	printk("%s: CSR_DIR0 0x%lx\n", __func__, TSUNAMI_cchip->dir0.csr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#237: FILE: arch/alpha/kernel/core_tsunami.c:398:
+	printk("%s: CSR_DIR1 0x%lx\n", __func__, TSUNAMI_cchip->dir1.csr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#238: FILE: arch/alpha/kernel/core_tsunami.c:399:
+	printk("%s: CSR_DRIR 0x%lx\n", __func__, TSUNAMI_cchip->drir.csr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#244: FILE: arch/alpha/kernel/core_tsunami.c:402:
+	printk("%s: CSR_DSC 0x%lx\n", __func__, TSUNAMI_dchip->dsc.csr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#245: FILE: arch/alpha/kernel/core_tsunami.c:403:
+	printk("%s: CSR_STR 0x%lx\n", __func__, TSUNAMI_dchip->str.csr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#246: FILE: arch/alpha/kernel/core_tsunami.c:404:
+	printk("%s: CSR_DREV 0x%lx\n", __func__, TSUNAMI_dchip->drev.csr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#259: FILE: arch/alpha/kernel/pci.c:223:
+		printk(KERN_ERR "%s: kmalloc() failed!\n", __func__);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#259: FILE: arch/alpha/kernel/pci.c:223:
 	if (!tmp) {
+		printk(KERN_ERR "%s: kmalloc() failed!\n", __func__);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#292: FILE: arch/alpha/kernel/pci_iommu.c:84:
+		printk("%s: couldn't allocate arena from node %d\n"

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#300: FILE: arch/alpha/kernel/pci_iommu.c:92:
+		printk("%s: couldn't allocate arena ptes from node %d\n"

WARNING:SPLIT_STRING: quoted string split across lines
#339: FILE: arch/alpha/kernel/srm_env.c:202:
 				"SRM->MILO->Linux, which gets "
+				"misdetected)...\n", __func__);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#384: FILE: arch/alpha/kernel/sys_marvel.c:113:
+		printk(KERN_ERR "%s: get_ctl failed for irq %x\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#395: FILE: arch/alpha/kernel/sys_marvel.c:133:
+		printk(KERN_ERR "%s: get_ctl failed for irq %x\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#440: FILE: arch/alpha/kernel/sys_sio.c:92:
+	printk("%s: PIRQ original 0x%x new 0x%x\n", __func__,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000312304.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 48 warnings, 0 checks, 384 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000312304.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
