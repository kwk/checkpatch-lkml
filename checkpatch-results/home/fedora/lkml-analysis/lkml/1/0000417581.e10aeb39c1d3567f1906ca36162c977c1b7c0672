WARNING:TYPO_SPELLING: 'dependant' may be misspelled - perhaps 'dependent'?
#40: 
supplementary condition, dependant of the marker context, at the marker
                         ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#123: FILE: block/ll_rw_blk.c:1622:
+		trace_mark(blk_pdu_unplug_io, "%p %p %d", q, NULL,
 					q->rq.count[READ] + q->rq.count[WRITE]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#132: FILE: block/ll_rw_blk.c:1633:
+	trace_mark(blk_pdu_unplug_io, "%p %p %d", q, NULL,
 				q->rq.count[READ] + q->rq.count[WRITE]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#141: FILE: block/ll_rw_blk.c:1643:
+	trace_mark(blk_pdu_unplug_timer, "%p %p %d", q, NULL,
 				q->rq.count[READ] + q->rq.count[WRITE]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#196: FILE: block/ll_rw_blk.c:3192:
+			trace_mark(blk_remap, "%p %p %u %llu %llu", q, bio, old_dev,
+					(u64)bio->bi_sector, (u64)old_sector);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#242: FILE: block/blktrace.c:36:
+int blk_probe_arm(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#243: FILE: block/blktrace.c:37:
+void blk_probe_disarm(void);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#295: FILE: block/blktrace.c:580:
+static void blk_add_trace_rq(const struct __mark_marker *mdata,
+	const char *fmt, ...)

WARNING:LONG_LINE: line length of 101 exceeds 100 columns
#319: FILE: block/blktrace.c:604:
+		__blk_add_trace(bt, 0, rq->data_len, rw, what, rq->errors, sizeof(rq->cmd), rq->cmd);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#322: FILE: block/blktrace.c:607:
+		__blk_add_trace(bt, rq->hard_sector, rq->hard_nr_sectors << 9, rw, what, rq->errors, 0, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#337: FILE: block/blktrace.c:622:
+static void blk_add_trace_bio(const struct __mark_marker *mdata,
+	const char *fmt, ...)

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#357: FILE: block/blktrace.c:642:
+	__blk_add_trace(bt, bio->bi_sector, bio->bi_size, bio->bi_rw, what, !bio_flagged(bio, BIO_UPTODATE), 0, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#372: FILE: block/blktrace.c:657:
+static void blk_add_trace_generic(const struct __mark_marker *mdata,
+	const char *fmt, ...)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#414: FILE: block/blktrace.c:699:
+static void blk_add_trace_pdu_int(const struct __mark_marker *mdata,
+	const char *fmt, ...)

WARNING:LONG_LINE: line length of 138 exceeds 100 columns
#439: FILE: block/blktrace.c:724:
+		__blk_add_trace(bt, bio->bi_sector, bio->bi_size, bio->bi_rw, what, !bio_flagged(bio, BIO_UPTODATE), sizeof(rpdu), &rpdu);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#459: FILE: block/blktrace.c:744:
+static void blk_add_trace_remap(const struct __mark_marker *mdata,
+	const char *fmt, ...)

WARNING:LONG_LINE: line length of 122 exceeds 100 columns
#487: FILE: block/blktrace.c:772:
+	__blk_add_trace(bt, from, bio->bi_size, bio->bi_rw, BLK_TA_REMAP, !bio_flagged(bio, BIO_UPTODATE), sizeof(r), &r);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#493: FILE: block/blktrace.c:778:
+static struct blk_probe_data probe_array[] =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#517: FILE: block/blktrace.c:802:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#525: FILE: block/blktrace.c:810:
+		result = marker_arm_probe(probe_array[i].name,
+				probe_array[i].format,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#528: FILE: block/blktrace.c:813:
+			printk(KERN_INFO

WARNING:BRACES: braces {} are not necessary for single statement blocks
#539: FILE: block/blktrace.c:824:
+	for (i = 0; i < ARRAY_SIZE(probe_array); i++) {
+		marker_disarm_probe(probe_array[i].name);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#544: FILE: block/blktrace.c:829:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#709: FILE: include/linux/blktrace_api.h:158:
+extern int blk_probe_connect(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#710: FILE: include/linux/blktrace_api.h:159:
+extern void blk_probe_disconnect(void);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#777: FILE: fs/bio.c:1085:
+	trace_mark(blk_pdu_split, "%p %p %d", bdev_get_queue(bi->bi_bdev), bi,
 				bi->bi_sector + first_sectors);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#822: FILE: drivers/md/dm.c:487:
+			trace_mark(blk_request_complete, "%p %p",
+				io->md->queue, io->bio);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#835: FILE: drivers/md/dm.c:584:
+		trace_mark(blk_remap, "%p %p %u %llu %llu",
+			bdev_get_queue(clone->bi_bdev), clone,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000417581.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 10 warnings, 17 checks, 703 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000417581.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
