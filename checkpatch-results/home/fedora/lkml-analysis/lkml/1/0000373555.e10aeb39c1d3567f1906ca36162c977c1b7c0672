WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
In pass1 of e2fsck, every inode table in the fileystem is scanned and checked,

WARNING:TYPO_SPELLING: 'fileystem' may be misspelled - perhaps 'filesystem'?
#39: 
In pass1 of e2fsck, every inode table in the fileystem is scanned and checked,
                                             ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'unintialized' may be misspelled - perhaps 'uninitialized'?
#41: 
of the filesystem check.  The unintialized block group feature can greatly
                              ^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'filesytem' may be misspelled - perhaps 'filesystem'?
#59: 
linearly with the total number of inodes in the filesytem.  In ext4 with the
                                                ^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#145: FILE: fs/ext4/balloc.c:47:
+ * number of blocks free in the group. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#146: FILE: fs/ext4/balloc.c:48:
+unsigned ext4_init_block_bitmap(struct super_block *sb, struct buffer_head *bh,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#151: FILE: fs/ext4/balloc.c:53:
+	unsigned free_blocks;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#158: FILE: fs/ext4/balloc.c:60:
+		 * essentially implementing a per-group read-only flag. */

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#160: FILE: fs/ext4/balloc.c:62:
+			ext4_error(sb, __FUNCTION__,

ERROR:SPACING: space required after that ',' (ctx:VxV)
#243: FILE: fs/ext4/balloc.c:203:
+		bh = sb_bread(sb, ext4_block_bitmap(sb,desc));
 		                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#269: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#274: FILE: fs/ext4/group.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#275: FILE: fs/ext4/group.h:2:
+ *  linux/fs/ext4/group.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#288: FILE: fs/ext4/group.h:15:
+extern __le16 ext4_group_desc_csum(struct ext4_sb_info *sbi, __u32 group,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#290: FILE: fs/ext4/group.h:17:
+extern int ext4_group_desc_csum_verify(struct ext4_sb_info *sbi, __u32 group,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#294: FILE: fs/ext4/group.h:21:
+extern unsigned ext4_init_block_bitmap(struct super_block *sb,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#294: FILE: fs/ext4/group.h:21:
+extern unsigned ext4_init_block_bitmap(struct super_block *sb,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#299: FILE: fs/ext4/group.h:26:
+extern unsigned ext4_init_inode_bitmap(struct super_block *sb,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#299: FILE: fs/ext4/group.h:26:
+extern unsigned ext4_init_inode_bitmap(struct super_block *sb,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#339: FILE: fs/ext4/ialloc.c:67:
+unsigned ext4_init_inode_bitmap(struct super_block *sb,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#348: FILE: fs/ext4/ialloc.c:76:
+	 * allocation, essentially implementing a per-group read-only flag. */

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#350: FILE: fs/ext4/ialloc.c:78:
+		ext4_error(sb, __FUNCTION__, "Checksum bad for group %u\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#396: FILE: fs/ext4/ialloc.c:232:
+			gdp->bg_checksum = ext4_group_desc_csum(sbi,
+							block_group, gdp);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#421: FILE: fs/ext4/ialloc.c:587:
+		ext4_error(sb, __FUNCTION__,

WARNING:SPLIT_STRING: quoted string split across lines
#423: FILE: fs/ext4/ialloc.c:589:
+			   "reserved inode or inode > inodes count - "
+			   "block_group = %d, inode=%lu", group,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#468: FILE: fs/ext4/ialloc.c:634:
+	 * table then we need to initialize up to this inode. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'gdp->bg_checksum != ext4_group_desc_csum(sbi, block_group, gdp)'
#588: FILE: fs/ext4/super.c:1271:
+	if ((sbi->s_es->s_feature_ro_compat &
+	     cpu_to_le32(EXT4_FEATURE_RO_COMPAT_GDT_CSUM)) &&
+	    (gdp->bg_checksum != ext4_group_desc_csum(sbi, block_group, gdp)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#604: FILE: fs/ext4/super.c:1334:
+			ext4_error(sb, __FUNCTION__,

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#660: FILE: include/linux/ext4_fs.h:694:
+					 EXT4_FEATURE_RO_COMPAT_GDT_CSUM| \
 					                                ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000373555.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 21 warnings, 7 checks, 496 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000373555.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
