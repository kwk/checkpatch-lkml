CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#44: FILE: mm/internal.h:84:
+extern void mminit_verify_zonelist(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#81: FILE: mm/mm_init.c:29:
+		BUG_ON(MAX_ZONELISTS > 2);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#83: FILE: mm/mm_init.c:31:
+		for (i = 0; i < MAX_ZONELISTS * MAX_NR_ZONES; i++) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#93: FILE: mm/mm_init.c:41:
+			printk(KERN_DEBUG "mminit::zonelist %s %d:%s = ",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#94: FILE: mm/mm_init.c:42:
+			printk(KERN_DEBUG "mminit::zonelist %s %d:%s = ",
+				listid > 0 ? "thisnode" : "general", nid,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#100: FILE: mm/mm_init.c:48:
+				printk(KERN_CONT "%d:%s ",

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#100: FILE: mm/mm_init.c:48:
+				printk(KERN_CONT "%d:%s ",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#101: FILE: mm/mm_init.c:49:
+				printk(KERN_CONT "%d:%s ",
+					zone->node, zone->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#103: FILE: mm/mm_init.c:51:
+				printk(KERN_CONT "0:%s ", zone->name);

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#103: FILE: mm/mm_init.c:51:
+				printk(KERN_CONT "0:%s ", zone->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#106: FILE: mm/mm_init.c:54:
+			printk(KERN_CONT "\n");

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#106: FILE: mm/mm_init.c:54:
+			printk(KERN_CONT "\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000289056.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 4 checks, 75 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000289056.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
