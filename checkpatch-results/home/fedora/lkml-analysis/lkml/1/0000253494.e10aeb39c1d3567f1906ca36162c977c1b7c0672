WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#192: FILE: MAINTAINERS:2430:
+P:	Eduard - Gabriel Munteanu
+M:	eduard.munteanu@linux360.ro

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#205: FILE: include/linux/kmemtrace.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#241: FILE: include/linux/kmemtrace.h:37:
+	__s64		timestamp;	/* When the operation occured in ns. */
 	     		          	                      ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((__packed__))
#242: FILE: include/linux/kmemtrace.h:38:
+} __attribute__ ((__packed__));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#252: FILE: include/linux/kmemtrace.h:48:
+extern void kmemtrace_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPLIT_STRING: quoted string split across lines
#263: FILE: include/linux/kmemtrace.h:59:
+	trace_mark(kmemtrace_alloc, "type_id %d call_site %lu ptr %lu "
+		   "bytes_req %lu bytes_alloc %lu gfp_flags %lu node %d",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#264: FILE: include/linux/kmemtrace.h:60:
+		   type_id, call_site, (unsigned long) ptr,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#273: FILE: include/linux/kmemtrace.h:69:
+		   type_id, call_site, (unsigned long) ptr);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#343: FILE: lib/Kconfig.debug:677:
+config KMEMTRACE
+	bool "Kernel memory tracer"
+	depends on RELAY && DEBUG_FS && MARKERS
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#366: FILE: mm/kmemtrace.c:1:
+/*

WARNING:NEEDLESS_IF: debugfs_remove(NULL) is safe and this check is probably not required
#490: FILE: mm/kmemtrace.c:125:
+	if (kmemtrace_overruns_dentry)
+		debugfs_remove(kmemtrace_overruns_dentry);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#503: FILE: mm/kmemtrace.c:138:
+		debugfs_create_u32("total_overruns", S_IRUSR,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#511: FILE: mm/kmemtrace.c:146:
+	printk(KERN_INFO "kmemtrace: fully up.\n");

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#532: FILE: mm/kmemtrace.c:167:
+}
+early_param("kmemtrace.subbufs", kmemtrace_set_subbuf_size);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#545: FILE: mm/kmemtrace.c:180:
+		printk(KERN_INFO "kmemtrace: could not open relay channel\n");

WARNING:SPLIT_STRING: quoted string split across lines
#550: FILE: mm/kmemtrace.c:185:
+	err = marker_probe_register("kmemtrace_alloc", "type_id %d "
+				    "call_site %lu ptr %lu "

WARNING:SPLIT_STRING: quoted string split across lines
#551: FILE: mm/kmemtrace.c:186:
+				    "call_site %lu ptr %lu "
+				    "bytes_req %lu bytes_alloc %lu "

WARNING:SPLIT_STRING: quoted string split across lines
#552: FILE: mm/kmemtrace.c:187:
+				    "bytes_req %lu bytes_alloc %lu "
+				    "gfp_flags %lu node %d",

WARNING:SPLIT_STRING: quoted string split across lines
#557: FILE: mm/kmemtrace.c:192:
+	err = marker_probe_register("kmemtrace_free", "type_id %d "
+				    "call_site %lu ptr %lu",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#562: FILE: mm/kmemtrace.c:197:
+	printk(KERN_INFO "kmemtrace: early init successful.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#568: FILE: mm/kmemtrace.c:203:
+	printk(KERN_INFO "kmemtrace: could not register marker probes!\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000253494.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 17 warnings, 4 checks, 473 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000253494.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
