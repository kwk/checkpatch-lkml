WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
controllers which show random IRQ loss now and then, the latter at least for

WARNING:TYPO_SPELLING: 'fo' may be misspelled - perhaps 'of'?
#32: 
lot fo the recovery paths we trigger needlessly when EH finds that actually
    ^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#63: FILE: drivers/ata/libata-eh.c:533:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#65: FILE: drivers/ata/libata-eh.c:535:
+		/* This must occur under the ap->lock as we don't want
+		   a polled recovery to race the real interrupt handler

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#66: FILE: drivers/ata/libata-eh.c:536:
+^I^I   $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#69: FILE: drivers/ata/libata-eh.c:539:
+^I^I   $

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#71: FILE: drivers/ata/libata-eh.c:541:
+		   this as if normal completion won the race */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#75: FILE: drivers/ata/libata-eh.c:545:
+^I^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#83: FILE: drivers/ata/libata-eh.c:589:
+^I^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#85: FILE: drivers/ata/libata-eh.c:591:
+	/* If we timed raced normal completion and there is nothing to
+	   recover nr_timedout == 0 why exactly are we doing error recovery ? */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#85: FILE: drivers/ata/libata-eh.c:591:
+	   recover nr_timedout == 0 why exactly are we doing error recovery ? */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#116: FILE: drivers/ata/libata-sff.c:1540:
+unsigned int ata_sff_host_intr(struct ata_port *ap,
 				      struct ata_queued_cmd *qc)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!qc"
#143: FILE: drivers/ata/libata-sff.c:1686:
+	if (qc == NULL ||  !(qc->flags & ATA_QCFLAG_ACTIVE))

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#149: FILE: drivers/ata/libata-sff.c:1692:
+	/* See if the controller thinks it is still busy - if so the command
+	   isn't a lost IRQ but is still in progress */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#149: FILE: drivers/ata/libata-sff.c:1692:
+	   isn't a lost IRQ but is still in progress */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#153: FILE: drivers/ata/libata-sff.c:1696:
+^I^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#155: FILE: drivers/ata/libata-sff.c:1698:
+	/* There was a command running, we are no longer busy and we have
+	   no interrupt. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#155: FILE: drivers/ata/libata-sff.c:1698:
+	   no interrupt. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#157: FILE: drivers/ata/libata-sff.c:1700:
+	ata_port_printk(ap, KERN_WARNING, "lost interrupt (Status 0x%x)\n",
+								status);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#159: FILE: drivers/ata/libata-sff.c:1702:
+	/* Run the host interrupt logic as if the interrupt had not been
+	   lost */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#159: FILE: drivers/ata/libata-sff.c:1702:
+	   lost */

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#176: FILE: drivers/ata/libata-sff.c:2125:
+ *	failing to complete. In some cases this is neccessary before a
   	                                           ^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#180: FILE: drivers/ata/libata-sff.c:2129:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: drivers/ata/libata-sff.c:2129:
+ $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!qc"
#187: FILE: drivers/ata/libata-sff.c:2136:
+	if (qc == NULL || qc->dma_dir == DMA_TO_DEVICE)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#193: FILE: drivers/ata/libata-sff.c:2142:
+	for (count = 0; (ap->ops->sff_check_status(ap) & ATA_DRQ)
+						&& count < 32768; count++)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#199: FILE: drivers/ata/libata-sff.c:2148:
+		ata_port_printk(ap, KERN_WARNING,
+			"drained %d bytes to clear DRQ.\n", count);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#201: FILE: drivers/ata/libata-sff.c:2150:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#212: FILE: drivers/ata/libata-sff.c:2205:
+	/* We *MUST* do FIFO draining before we issue a reset as several
+	   devices helpfully clear their internal state and will lock solid

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#214: FILE: drivers/ata/libata-sff.c:2207:
+	   to do different PIO/DMA recovery or has per command fixups */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#224: FILE: drivers/ata/libata-sff.c:2217:
+^I$

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#311: FILE: drivers/ata/pata_pcmcia.c:135:
+ *	failing to complete. In some cases this is neccessary before a
   	                                           ^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#315: FILE: drivers/ata/pata_pcmcia.c:139:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: drivers/ata/pata_pcmcia.c:139:
+ $

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!qc"
#322: FILE: drivers/ata/pata_pcmcia.c:146:
+	if (qc == NULL || qc->dma_dir == DMA_TO_DEVICE)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#329: FILE: drivers/ata/pata_pcmcia.c:153:
+	for (count = 0; (ap->ops->sff_check_status(ap) & ATA_DRQ)
+							&& count < 65536;)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#334: FILE: drivers/ata/pata_pcmcia.c:158:
+	ata_port_printk(ap, KERN_WARNING, "drained %d bytes to clear DRQ.\n",
+								count);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#336: FILE: drivers/ata/pata_pcmcia.c:160:
+
+}

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#373: FILE: include/linux/libata.h:1522:
+extern void ata_sff_lost_interrupt(struct ata_port *ap);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#381: FILE: include/linux/libata.h:1535:
+extern void ata_sff_drain_fifo(struct ata_queued_cmd *qc);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000219074.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 18 warnings, 13 checks, 297 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000219074.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
