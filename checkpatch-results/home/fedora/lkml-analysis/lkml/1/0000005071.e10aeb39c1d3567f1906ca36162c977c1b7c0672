WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#54: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#59: FILE: fs/ceph/armor.c:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#164: FILE: fs/ceph/auth_x.c:1:
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#189: FILE: fs/ceph/auth_x.c:26:
+	dout("ceph_x_is_authenticated want=%d need=%d have=%d\n",
 	^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ceph_x_is_authenticated', this function's name, in a string
#189: FILE: fs/ceph/auth_x.c:26:
+	dout("ceph_x_is_authenticated want=%d need=%d have=%d\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#223: FILE: fs/ceph/auth_x.c:60:
+	dout("ceph_x_decrypt len %d\n", len);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ceph_x_decrypt', this function's name, in a string
#223: FILE: fs/ceph/auth_x.c:60:
+	dout("ceph_x_decrypt len %d\n", len);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#270: FILE: fs/ceph/auth_x.c:107:
+	dout("remove_ticket_handler %p %d\n", th, th->service);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'remove_ticket_handler', this function's name, in a string
#270: FILE: fs/ceph/auth_x.c:107:
+	dout("remove_ticket_handler %p %d\n", th, th->service);

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#305: FILE: fs/ceph/auth_x.c:142:
+	dout("%d tickets\n", num);
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#320: FILE: fs/ceph/auth_x.c:157:
+		dout(" ticket type %d %s\n", type, ceph_entity_type_name(type));
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#339: FILE: fs/ceph/auth_x.c:176:
+		dout(" decrypted %d bytes\n", dlen);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#356: FILE: fs/ceph/auth_x.c:193:
+		dout(" expires=%lu renew_after=%lu\n", th->expires,
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#364: FILE: fs/ceph/auth_x.c:201:
+			dout(" encrypted ticket\n");
 			^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#379: FILE: fs/ceph/auth_x.c:216:
+		dout(" ticket blob is %d bytes\n", dlen);
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#386: FILE: fs/ceph/auth_x.c:223:
+		dout(" got ticket service %d (%s) secret_id %lld len %d\n",
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#416: FILE: fs/ceph/auth_x.c:253:
+	dout("build_authorizer for %s %p\n",
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#421: FILE: fs/ceph/auth_x.c:258:
+	dout("  need len %d\n", len);
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#444: FILE: fs/ceph/auth_x.c:281:
+	dout(" th %p secret_id %lld %lld\n", th, th->secret_id,
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#460: FILE: fs/ceph/auth_x.c:297:
+	dout(" built authorizer nonce %llx len %d\n", au->nonce,
 	^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#522: FILE: fs/ceph/auth_x.c:359:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#535: FILE: fs/ceph/auth_x.c:372:
+	dout("build_request want %x have %x need %x\n",
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#548: FILE: fs/ceph/auth_x.c:385:
+		dout(" get_auth_session_key\n");
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#564: FILE: fs/ceph/auth_x.c:401:
+		dout(" server_challenge %llx client_challenge %llx key %llx\n",
 		^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#584: FILE: fs/ceph/auth_x.c:421:
+		BUG_ON(!th);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#620: FILE: fs/ceph/auth_x.c:457:
+		dout("handle_reply got server challenge %llx\n",
 		^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#629: FILE: fs/ceph/auth_x.c:466:
+	dout("handle_reply op %d result %d\n", op, result);
 	^^^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#639: FILE: fs/ceph/auth_x.c:476:
+		BUG_ON(!th);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#654: FILE: fs/ceph/auth_x.c:491:
+static int ceph_x_create_authorizer(

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#709: FILE: fs/ceph/auth_x.c:546:
+	dout("verify_authorizer_reply nonce %llx got %llx ret %d\n",
 	^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#723: FILE: fs/ceph/auth_x.c:560:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#728: FILE: fs/ceph/auth_x.c:565:
+	dout("reset\n");
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#738: FILE: fs/ceph/auth_x.c:575:
+	dout("ceph_x_destroy %p\n", ac);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ceph_x_destroy', this function's name, in a string
#738: FILE: fs/ceph/auth_x.c:575:
+	dout("ceph_x_destroy %p\n", ac);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#754: FILE: fs/ceph/auth_x.c:591:
+static void ceph_x_invalidate_authorizer(struct ceph_auth_client *ac,
+				   int peer_type)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#763: FILE: fs/ceph/auth_x.c:600:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#776: FILE: fs/ceph/auth_x.c:613:
+
+

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#782: FILE: fs/ceph/auth_x.c:619:
+	dout("ceph_x_init %p\n", ac);
 	^^^^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ceph_x_init', this function's name, in a string
#782: FILE: fs/ceph/auth_x.c:619:
+	dout("ceph_x_init %p\n", ac);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#789: FILE: fs/ceph/auth_x.c:626:
+	ceph_x_ticketbuf_cachep = kmem_cache_create("ceph_x_ticketbuf",
+				      TEMP_TICKET_BUF_LEN, 8,

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#790: FILE: fs/ceph/auth_x.c:627:
+				      (SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD),
 				                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NEEDLESS_IF: kmem_cache_destroy(NULL) is safe and this check is probably not required
#815: FILE: fs/ceph/auth_x.c:652:
+	if (ceph_x_ticketbuf_cachep)
+		kmem_cache_destroy(ceph_x_ticketbuf_cachep);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#819: FILE: fs/ceph/auth_x.c:656:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#826: FILE: fs/ceph/auth_x.h:1:
+#ifndef _FS_CEPH_AUTH_X_H

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#840: FILE: fs/ceph/auth_x.h:15:
+	unsigned service;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#851: FILE: fs/ceph/auth_x.h:26:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#854: FILE: fs/ceph/auth_x.h:29:
+	unsigned service;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#865: FILE: fs/ceph/auth_x.h:40:
+	unsigned have_keys;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#871: FILE: fs/ceph/auth_x.h:46:
+extern int ceph_x_init(struct ceph_auth_client *ac);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#881: FILE: fs/ceph/auth_x_protocol.h:1:
+#ifndef __FS_CEPH_AUTH_X_PROTOCOL

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#894: FILE: fs/ceph/auth_x_protocol.h:14:
+} __attribute__ ((packed));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#896: FILE: fs/ceph/auth_x_protocol.h:16:
+
+

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#900: FILE: fs/ceph/auth_x_protocol.h:20:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#905: FILE: fs/ceph/auth_x_protocol.h:25:
+} __attribute__ ((packed));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#907: FILE: fs/ceph/auth_x_protocol.h:27:
+
+

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#914: FILE: fs/ceph/auth_x_protocol.h:34:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#921: FILE: fs/ceph/auth_x_protocol.h:41:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#926: FILE: fs/ceph/auth_x_protocol.h:46:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#931: FILE: fs/ceph/auth_x_protocol.h:51:
+} __attribute__ ((packed));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#933: FILE: fs/ceph/auth_x_protocol.h:53:
+
+

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#947: FILE: fs/ceph/auth_x_protocol.h:67:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#952: FILE: fs/ceph/auth_x_protocol.h:72:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#957: FILE: fs/ceph/auth_x_protocol.h:77:
+} __attribute__ ((packed));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#959: FILE: fs/ceph/auth_x_protocol.h:79:
+
+

WARNING:TYPO_SPELLING: 'encyption' may be misspelled - perhaps 'encryption'?
#961: FILE: fs/ceph/auth_x_protocol.h:81:
+ * encyption bundle
    ^^^^^^^^^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#968: FILE: fs/ceph/auth_x_protocol.h:88:
+} __attribute__ ((packed));

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#977: FILE: fs/ceph/crypto.c:1:
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1001: FILE: fs/ceph/crypto.c:25:
+	ceph_decode_need(p, end, 2*sizeof(u16) + sizeof(key->created), bad);
 	                          ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1013: FILE: fs/ceph/crypto.c:37:
+	dout("failed to decode crypto key\n");
 	^^^^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1024: FILE: fs/ceph/crypto.c:48:
+	dout("crypto_key_unarmor %s\n", inkey);
 	^^^^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1028: FILE: fs/ceph/crypto.c:52:
+	blen = ceph_unarmor(buf, inkey, inkey+inlen);
 	                                     ^

WARNING:TYPO_SPELLING: 'dout' may be misspelled - perhaps 'doubt'?
#1039: FILE: fs/ceph/crypto.c:63:
+	dout("crypto_key_unarmor key %p type %d len %d\n", key,
 	^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1044: FILE: fs/ceph/crypto.c:68:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1085: FILE: fs/ceph/crypto.c:109:
+	/*
+	print_hex_dump(KERN_ERR, "enc key: ", DUMP_PREFIX_NONE, 16, 1,

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1093: FILE: fs/ceph/crypto.c:117:
+	ret = crypto_blkcipher_encrypt(&desc, sg_out, sg_in,
+				     src_len + zero_padding);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1098: FILE: fs/ceph/crypto.c:122:
+	/*
+	print_hex_dump(KERN_ERR, "enc out: ", DUMP_PREFIX_NONE, 16, 1,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1136: FILE: fs/ceph/crypto.c:160:
+	/*
+	print_hex_dump(KERN_ERR, "enc  key: ", DUMP_PREFIX_NONE, 16, 1,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1146: FILE: fs/ceph/crypto.c:170:
+	ret = crypto_blkcipher_encrypt(&desc, sg_out, sg_in,
+				     src1_len + src2_len + zero_padding);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1151: FILE: fs/ceph/crypto.c:175:
+	/*
+	print_hex_dump(KERN_ERR, "enc  out: ", DUMP_PREFIX_NONE, 16, 1,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1185: FILE: fs/ceph/crypto.c:209:
+	/*
+	print_hex_dump(KERN_ERR, "dec key: ", DUMP_PREFIX_NONE, 16, 1,

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ceph_aes_decrypt', this function's name, in a string
#1194: FILE: fs/ceph/crypto.c:218:
+		pr_err("ceph_aes_decrypt failed %d\n", ret);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ceph_aes_decrypt', this function's name, in a string
#1205: FILE: fs/ceph/crypto.c:229:
+		pr_err("ceph_aes_decrypt got bad padding %d on src len %d\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1210: FILE: fs/ceph/crypto.c:234:
+	/*
+	print_hex_dump(KERN_ERR, "dec out: ", DUMP_PREFIX_NONE, 16, 1,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1247: FILE: fs/ceph/crypto.c:271:
+	/*
+	print_hex_dump(KERN_ERR, "dec  key: ", DUMP_PREFIX_NONE, 16, 1,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1281: FILE: fs/ceph/crypto.c:305:
+	/*
+	print_hex_dump(KERN_ERR, "dec  out1: ", DUMP_PREFIX_NONE, 16, 1,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1290: FILE: fs/ceph/crypto.c:314:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1312: FILE: fs/ceph/crypto.c:336:
+int ceph_decrypt2(struct ceph_crypto_key *secret,
+			void *dst1, size_t *dst1_len,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1391: FILE: fs/ceph/crypto.h:1:
+#ifndef _FS_CEPH_CRYPTO_H

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1412: FILE: fs/ceph/crypto.h:22:
+extern int ceph_crypto_key_encode(struct ceph_crypto_key *key,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1414: FILE: fs/ceph/crypto.h:24:
+extern int ceph_crypto_key_decode(struct ceph_crypto_key *key,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1416: FILE: fs/ceph/crypto.h:26:
+extern int ceph_crypto_key_unarmor(struct ceph_crypto_key *key, const char *in);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1419: FILE: fs/ceph/crypto.h:29:
+extern int ceph_decrypt(struct ceph_crypto_key *secret,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1422: FILE: fs/ceph/crypto.h:32:
+extern int ceph_encrypt(struct ceph_crypto_key *secret,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1425: FILE: fs/ceph/crypto.h:35:
+extern int ceph_decrypt2(struct ceph_crypto_key *secret,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1426: FILE: fs/ceph/crypto.h:36:
+extern int ceph_decrypt2(struct ceph_crypto_key *secret,
+			void *dst1, size_t *dst1_len,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1429: FILE: fs/ceph/crypto.h:39:
+extern int ceph_encrypt2(struct ceph_crypto_key *secret,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1435: FILE: fs/ceph/crypto.h:45:
+extern int ceph_armor(char *dst, const void *src, const void *end);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1436: FILE: fs/ceph/crypto.h:46:
+extern int ceph_unarmor(void *dst, const char *src, const char *end);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000005071.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 66 warnings, 32 checks, 1350 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000005071.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
