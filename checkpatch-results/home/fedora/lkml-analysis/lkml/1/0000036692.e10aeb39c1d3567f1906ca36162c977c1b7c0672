WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
USE_SPLIT_PTLOCKS is defined. This causes cache-miss when page faults happens

WARNING:TYPO_SPELLING: 'containes' may be misspelled - perhaps 'contains'?
#47: 
  - prepare per-cpu object curr_mmc. curr_mmc containes pointer to mm and
                                              ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: include/linux/mm.h:889:
+ ^I * information, it's possible that value gets to be minus. For user's$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#139: FILE: include/linux/mm.h:889:
+ ^I * information, it's possible that value gets to be minus. For user's$

ERROR:CODE_INDENT: code indent should use tabs where possible
#140: FILE: include/linux/mm.h:890:
+ ^I * convenience/sanity, avoid returning minus.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#140: FILE: include/linux/mm.h:890:
+ ^I * convenience/sanity, avoid returning minus.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: include/linux/mm.h:891:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#141: FILE: include/linux/mm.h:891:
+ ^I */$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#153: FILE: include/linux/mm.h:912:
 }
+extern void __sync_mm_counters(struct mm_struct *mm);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#153: FILE: include/linux/mm.h:912:
+extern void __sync_mm_counters(struct mm_struct *mm);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#165: FILE: include/linux/mm.h:924:
+}
+/* called at thread exit */

WARNING:RETURN_VOID: void function return statements are not generally useful
#213: FILE: mm/memory.c:140:
+	return;
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#214: FILE: mm/memory.c:141:
+}
+/*

WARNING:TYPO_SPELLING: 'expexted' may be misspelled - perhaps 'expected'?
#215: FILE: mm/memory.c:142:
+ * This add_mm_counter_fast() works well only when it's expexted that
                                                         ^^^^^^^^

CHECK:BRACES: Unbalanced braces around else statement
#228: FILE: mm/memory.c:155:
+	} else /* page fault via side-path context (get_user_pages()) */

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000036692.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 7 warnings, 5 checks, 198 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000036692.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
