WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#53: FILE: drivers/net/Kconfig:2739:
+config RIONET_MEMMAP
+	bool "Use memory map instead of message"
+	depends on RIONET
+	default n
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#58: FILE: drivers/net/Kconfig:2744:
+config RIONET_DMA
+	bool "Use DMA for memory mapping data transfer"
+	depends on RIONET_MEMMAP && FSL_DMA
+	default y
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#104: FILE: drivers/net/rionet.c:59:
+	printk(KERN_ERR "ERROR %s - %s: " fmt,  __FILE__, __func__, ## arg)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#112: FILE: drivers/net/rionet.c:67:
+#define RIONET_QUEUE_NEXT(x)	(((x) < 127) ? ((x) + 1) : 0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#113: FILE: drivers/net/rionet.c:68:
+#define RIONET_QUEUE_INC(x)	(x = RIONET_QUEUE_NEXT(x))

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#150: FILE: drivers/net/rionet.c:111:
+	spinlock_t rio_dma_event_lock;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#199: FILE: drivers/net/rionet.c:210:
+static int rio_send_mem(struct sk_buff *skb,
+				struct net_device *ndev, struct rio_dev *rdev)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#208: FILE: drivers/net/rionet.c:219:
+		printk(KERN_ERR "Frame len is more than RIONET max sk_data!\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#213: FILE: drivers/net/rionet.c:224:
+	rio_map_outb_region(rnet->mport, rdev->destid, rnet->riores,
+			rnet->tx_addr, 0);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#219: FILE: drivers/net/rionet.c:230:
+	if (!(in_be32(&rnet->txbuff->size[enqueue]) & RIONET_SKDATA_EN)
+			&& (RIONET_QUEUE_NEXT(enqueue) != dequeue)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#230: FILE: drivers/net/rionet.c:241:
+			dma_map_single(&ndev->dev, skb->data, skb->len,
+			  DMA_TO_DEVICE), skb->len, DMA_CTRL_ACK);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#236: FILE: drivers/net/rionet.c:247:
+		while (dma_async_memcpy_complete(rnet->txdmachan,
+				tx_cookie, NULL, NULL) == DMA_IN_PROGRESS) ;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#237: FILE: drivers/net/rionet.c:248:
+		while (dma_async_memcpy_complete(rnet->txdmachan,
+				tx_cookie, NULL, NULL) == DMA_IN_PROGRESS) ;

WARNING:SPACING: space prohibited before semicolon
#237: FILE: drivers/net/rionet.c:248:
+				tx_cookie, NULL, NULL) == DMA_IN_PROGRESS) ;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#242: FILE: drivers/net/rionet.c:253:
+		out_be32(&rnet->txbuff->size[enqueue],
+						RIONET_SKDATA_EN | skb->len);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#244: FILE: drivers/net/rionet.c:255:
+		out_be32(&rnet->txbuff->enqueue,
+						RIONET_QUEUE_NEXT(enqueue));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#247: FILE: drivers/net/rionet.c:258:
+		printk(KERN_ERR "rionmet(memmap): txbuff is busy!\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#262: FILE: drivers/net/rionet.c:273:
+	int ret = 0;
+	ret = rio_send_mem(skb, ndev, rdev);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#325: FILE: drivers/net/rionet.c:379:
+			dma_map_single(&ndev->dev, skb_put(skb, size),
+			  size, DMA_FROM_DEVICE),

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#333: FILE: drivers/net/rionet.c:387:
+		while (dma_async_memcpy_complete(rnet->rxdmachan,
+				rx_cookie, NULL, NULL) == DMA_IN_PROGRESS);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#334: FILE: drivers/net/rionet.c:388:
+		while (dma_async_memcpy_complete(rnet->rxdmachan,
+				rx_cookie, NULL, NULL) == DMA_IN_PROGRESS);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#337: FILE: drivers/net/rionet.c:391:
+		memcpy(skb_put(skb, size),
+				rnet->rxbuff->skdata[dequeue].data,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#354: FILE: drivers/net/rionet.c:408:
+				printk(KERN_WARNING "%s: bad rx packet\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#371: FILE: drivers/net/rionet.c:425:
+		printk(KERN_INFO "%s: inbound memory data receive event\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#380: FILE: drivers/net/rionet.c:434:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#411: FILE: drivers/net/rionet.c:514:
+static enum dma_state_client rionet_dma_event(struct dma_client *client,
+		struct dma_chan *chan, enum dma_state state)

WARNING:LINE_SPACING: Missing a blank line after declarations
#447: FILE: drivers/net/rionet.c:550:
+	int rc = 0;
+	spin_lock_init(&rnet->rio_dma_event_lock);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*rnet->riores)...) over kmalloc(sizeof(struct resource)...)
#477: FILE: drivers/net/rionet.c:588:
+	rnet->riores = kmalloc(sizeof(struct resource), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#485: FILE: drivers/net/rionet.c:596:
+	rnet->rxbuff = dma_alloc_coherent(&ndev->dev, RIONET_TX_RX_BUFF_SIZE,
+			&rnet->rx_addr, GFP_KERNEL);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#495: FILE: drivers/net/rionet.c:606:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#497: FILE: drivers/net/rionet.c:608:
+	 * size of RIONET_TX_RX_BUFF_SIZE */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#548: FILE: drivers/net/rionet.c:681:
+	dma_free_coherent(&ndev->dev, RIONET_TX_RX_BUFF_SIZE,
+			rnet->rxbuff, rnet->rx_addr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#558: FILE: drivers/net/rionet.c:691:
+	rio_release_inb_dbell(rnet->mport, RIONET_DOORBELL_JOIN,
+			RIONET_DOORBELL_LEAVE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#570: FILE: drivers/net/rionet.c:724:
+	dma_free_coherent(&ndev->dev, RIONET_TX_RX_BUFF_SIZE,
+			rnet->rxbuff, rnet->rx_addr);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000133355.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 11 warnings, 20 checks, 515 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000133355.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
