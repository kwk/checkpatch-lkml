WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#53: 
      qla4xxx: Remove hiwat code so scsi eh does not get escalated when we can make progress

WARNING:TYPO_SPELLING: 'condtions' may be misspelled - perhaps 'conditions'?
#196: FILE: drivers/s390/scsi/zfcp_erp.c:859:
+	/* all other error condtions */
 	                   ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#332: FILE: drivers/s390/scsi/zfcp_fsf.c:1632:
+		/* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

CHECK:SPACING: No space is necessary after a cast
#374: FILE: drivers/s390/scsi/zfcp_scsi.c:170:
+	unsigned long old_reqid = (unsigned long) scpnt->host_scribble;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#577: FILE: drivers/scsi/libsas/sas_expander.c:961:
+
+			}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#607: FILE: drivers/scsi/libsas/sas_expander.c:1669:
 }
+/**

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'suport' may be misspelled - perhaps 'support'?
#612: FILE: drivers/scsi/libsas/sas_expander.c:1674:
+ * Add self-configuration expander suport. Suppose two expander cascading,
                                    ^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#650: FILE: drivers/scsi/libsas/sas_expander.c:1698:
+		/* Just detect if this expander phys phy change count changed,
+		* in order to determine if this expander originate BROADCAST,

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:BRACES: braces {} should be used on all arms of this statement
#654: FILE: drivers/scsi/libsas/sas_expander.c:1702:
+		if (phy_id != -1) {
[...]
+		} else
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#659: FILE: drivers/scsi/libsas/sas_expander.c:1707:
+			return res;
+		} else

CHECK:BRACES: Unbalanced braces around else statement
#659: FILE: drivers/scsi/libsas/sas_expander.c:1707:
+		} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#692: FILE: drivers/scsi/libsas/sas_expander.c:1744:
+		list_for_each_entry_safe(child, n,
+			&ex_dev->children, siblings) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#725: FILE: drivers/scsi/libsas/sas_expander.c:1820:
+		struct ex_phy *ex_phy_temp = &dev->ex_dev.ex_phy[i];
+		if (i == phy_id)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#858: FILE: drivers/scsi/libsas/sas_port.c:81:
+			if (*(u64 *)port->sas_addr == 0
+				&& port->num_phys == 0) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#860: FILE: drivers/scsi/libsas/sas_port.c:83:
+				memcpy(port->sas_addr, phy->sas_addr,
+					SAS_ADDR_SIZE);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#878: FILE: drivers/scsi/qla4xxx/ql4_dbg.c:18:
+	printk(" 0   1   2   3   4   5   6   7   8   9  Ah  Bh  Ch  Dh  Eh  "

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#887: FILE: drivers/scsi/qla4xxx/ql4_dbg.c:23:
+		printk(KERN_INFO "%02x", *c);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#889: FILE: drivers/scsi/qla4xxx/ql4_dbg.c:25:
+			printk(KERN_INFO "\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#893: FILE: drivers/scsi/qla4xxx/ql4_dbg.c:28:
+			printk(KERN_INFO "  ");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#897: FILE: drivers/scsi/qla4xxx/ql4_dbg.c:30:
+	printk(KERN_INFO "\n");

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#918: FILE: drivers/scsi/qla4xxx/ql4_def.h:188:
+	uint8_t *req_sense_ptr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#919: FILE: drivers/scsi/qla4xxx/ql4_def.h:189:
+	uint16_t req_sense_len;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#920: FILE: drivers/scsi/qla4xxx/ql4_def.h:190:
+	uint16_t reserved2;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#959: FILE: drivers/scsi/qla4xxx/ql4_fw.h:739:
+       struct qla4_header hdr; /* 00-03 */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#960: FILE: drivers/scsi/qla4xxx/ql4_fw.h:740:
+       uint8_t ext_sense_data[IOCB_MAX_EXT_SENSEDATA_LEN]; /* 04-63 */$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#960: FILE: drivers/scsi/qla4xxx/ql4_fw.h:740:
+       uint8_t ext_sense_data[IOCB_MAX_EXT_SENSEDATA_LEN]; /* 04-63 */

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#980: FILE: drivers/scsi/qla4xxx/ql4_iocb.c:18:
+	uint16_t cnt;

CHECK:SPACING: No space is necessary after a cast
#984: FILE: drivers/scsi/qla4xxx/ql4_iocb.c:22:
+		cnt = (uint16_t) le32_to_cpu(ha->shadow_regs->req_q_out);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1022: FILE: drivers/scsi/qla4xxx/ql4_iocb.c:62:
+	uint16_t req_cnt = 1;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1108: FILE: drivers/scsi/qla4xxx/ql4_iocb.c:233:
+		DEBUG2(printk("scsi%ld: %s: Adapter OFFLINE! "

WARNING:SPLIT_STRING: quoted string split across lines
#1109: FILE: drivers/scsi/qla4xxx/ql4_iocb.c:234:
+		DEBUG2(printk("scsi%ld: %s: Adapter OFFLINE! "
+			      "Do not issue command.\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:CODE_INDENT: code indent should use tabs where possible
#1184: FILE: drivers/scsi/qla4xxx/ql4_isr.c:20:
+                               struct status_entry *sts_entry,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1184: FILE: drivers/scsi/qla4xxx/ql4_isr.c:20:
+                               struct status_entry *sts_entry,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1185: FILE: drivers/scsi/qla4xxx/ql4_isr.c:21:
+                               struct srb *srb)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1185: FILE: drivers/scsi/qla4xxx/ql4_isr.c:21:
+                               struct srb *srb)$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#1188: FILE: drivers/scsi/qla4xxx/ql4_isr.c:24:
+	uint16_t sense_len;

CHECK:CAMELCASE: Avoid CamelCase: <senseDataByteCnt>
#1191: FILE: drivers/scsi/qla4xxx/ql4_isr.c:27:
+	sense_len = le16_to_cpu(sts_entry->senseDataByteCnt);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1196: FILE: drivers/scsi/qla4xxx/ql4_isr.c:32:
+	 * not to exceed cmd's sense buffer size */

CHECK:CAMELCASE: Avoid CamelCase: <senseData>
#1203: FILE: drivers/scsi/qla4xxx/ql4_isr.c:39:
+	memcpy(cmd->sense_buffer, sts_entry->senseData, sense_len);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1205: FILE: drivers/scsi/qla4xxx/ql4_isr.c:41:
+	DEBUG2(printk(KERN_INFO "scsi%ld:%d:%d:%d: %s: sense key = %x, "

WARNING:SPLIT_STRING: quoted string split across lines
#1206: FILE: drivers/scsi/qla4xxx/ql4_isr.c:42:
+	DEBUG2(printk(KERN_INFO "scsi%ld:%d:%d:%d: %s: sense key = %x, "
+		"ASL= %02x, ASC/ASCQ = %02x/%02x\n", ha->host_no,

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#1239: FILE: drivers/scsi/qla4xxx/ql4_isr.c:75:
+	uint8_t sense_len;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!srb"
#1241: FILE: drivers/scsi/qla4xxx/ql4_isr.c:77:
+	if (srb == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cmd"
#1245: FILE: drivers/scsi/qla4xxx/ql4_isr.c:81:
+	if (cmd == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1246: FILE: drivers/scsi/qla4xxx/ql4_isr.c:82:
+		DEBUG2(printk(KERN_INFO "scsi%ld: %s: Cmd already returned "

WARNING:SPLIT_STRING: quoted string split across lines
#1247: FILE: drivers/scsi/qla4xxx/ql4_isr.c:83:
+		DEBUG2(printk(KERN_INFO "scsi%ld: %s: Cmd already returned "
+			"back to OS srb=%p srb->state:%d\n", ha->host_no,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ha->status_srb"
#1340: FILE: drivers/scsi/qla4xxx/ql4_isr.c:331:
+	if (ha->status_srb == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1365: FILE: drivers/scsi/qla4xxx/ql4_isr.c:376:
+			qla4xxx_status_cont_entry(ha,
+				(struct status_cont_entry *) sts_entry);

CHECK:SPACING: No space is necessary after a cast
#1365: FILE: drivers/scsi/qla4xxx/ql4_isr.c:376:
+				(struct status_cont_entry *) sts_entry);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1450: FILE: drivers/scsi/qla4xxx/ql4_os.c:929:
+	DEBUG2(printk("scsi%ld: %s - Performing soft reset..\n",

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000088816.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 24 warnings, 24 checks, 1284 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000088816.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
