WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
syscalls, or use one of the reserved fields in struct statfs, and return the 

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#102: FILE: fs/compat.c:218:
+		error = vfs_statfs(nd.dentry, nd.mnt, &tmp);
 		                   ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#102: FILE: fs/compat.c:218:
+		error = vfs_statfs(nd.dentry, nd.mnt, &tmp);
 		                              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#130: FILE: fs/compat.c:287:
+		error = vfs_statfs(nd.dentry, nd.mnt, &tmp);
 		                   ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#130: FILE: fs/compat.c:287:
+		error = vfs_statfs(nd.dentry, nd.mnt, &tmp);
 		                              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#279: FILE: fs/open.c:161:
+		error = vfs_statfs_native(nd.dentry, nd.mnt, &tmp);
 		                          ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#279: FILE: fs/open.c:161:
+		error = vfs_statfs_native(nd.dentry, nd.mnt, &tmp);
 		                                     ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#288: FILE: fs/open.c:180:
+		error = vfs_statfs64(nd.dentry, nd.mnt, &tmp);
 		                     ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#288: FILE: fs/open.c:180:
+		error = vfs_statfs64(nd.dentry, nd.mnt, &tmp);
 		                                ^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#404: FILE: include/linux/fs.h:1411:
+extern int vfs_statfs(struct dentry *, struct vfsmount *, struct kstatfs *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#404: FILE: include/linux/fs.h:1411:
+extern int vfs_statfs(struct dentry *, struct vfsmount *, struct kstatfs *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsmount *' should also have an identifier name
#404: FILE: include/linux/fs.h:1411:
+extern int vfs_statfs(struct dentry *, struct vfsmount *, struct kstatfs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct kstatfs *' should also have an identifier name
#404: FILE: include/linux/fs.h:1411:
+extern int vfs_statfs(struct dentry *, struct vfsmount *, struct kstatfs *);

CHECK:BIT_MACRO: Prefer using the BIT macro
#427: FILE: include/linux/statfs.h:31:
+#define ST_IN_USE	(1 << 31)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000442522.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 12 warnings, 2 checks, 302 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000442522.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
