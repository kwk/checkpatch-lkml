ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#50: FILE: include/linux/kernel.h:166:
+extern void panic_later(const char * fmt, ...)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#50: FILE: include/linux/kernel.h:166:
+extern void panic_later(const char * fmt, ...)

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#51: FILE: include/linux/kernel.h:167:
+       __attribute__ ((format (printf, 1, 2)));$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(1, 2) over __attribute__((format(printf, 1, 2)))
#51: FILE: include/linux/kernel.h:167:
+       __attribute__ ((format (printf, 1, 2)));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#52: FILE: include/linux/kernel.h:168:
+extern void panic_later_complete(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#53: FILE: include/linux/kernel.h:169:
+extern bool panic_later_pending(void);

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#70: FILE: init/main.c:279:
char *val)

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: init/main.c:283:
+       if (panic_later_pending())$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#75: FILE: init/main.c:283:
+       if (panic_later_pending())
                return 0;

ERROR:TRAILING_WHITESPACE: trailing whitespace
#87: FILE: init/main.c:291:
+                               panic_later("Too many boot env vars at $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#87: FILE: init/main.c:291:
+                               panic_later("Too many boot env vars at $

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: init/main.c:291:
+                               panic_later("Too many boot env vars at $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#100: FILE: init/main.c:302:
+                               panic_later("Too many boot init vars at $

ERROR:CODE_INDENT: code indent should use tabs where possible
#100: FILE: init/main.c:302:
+                               panic_later("Too many boot init vars at $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#100: FILE: init/main.c:302:
+                               panic_later("Too many boot init vars at $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: init/main.c:621:
+       panic_later_complete();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: kernel/panic.c:48:
+       va_list args;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: kernel/panic.c:50:
+       if (!panic_later_pending()) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#137: FILE: kernel/panic.c:50:
+       if (!panic_later_pending()) {
+               va_start(args, fmt);

ERROR:CODE_INDENT: code indent should use tabs where possible
#138: FILE: kernel/panic.c:51:
+               va_start(args, fmt);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: kernel/panic.c:51:
+               va_start(args, fmt);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#139: FILE: kernel/panic.c:52:
+               vsnprintf(panic_later_msg, sizeof(panic_later_msg), fmt, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#139: FILE: kernel/panic.c:52:
+               vsnprintf(panic_later_msg, sizeof(panic_later_msg), fmt, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: kernel/panic.c:52:
+               vsnprintf(panic_later_msg, sizeof(panic_later_msg), fmt, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: kernel/panic.c:53:
+               va_end(args);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#141: FILE: kernel/panic.c:53:
+               vsnprintf(panic_later_msg, sizeof(panic_later_msg), fmt, 
+               va_end(args);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: kernel/panic.c:53:
+               va_end(args);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: kernel/panic.c:54:
+       }$

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - bool panic_later_pending() should probably be bool panic_later_pending(void)
#145: FILE: kernel/panic.c:57:
+bool panic_later_pending()

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: kernel/panic.c:59:
+       return panic_later_msg[0] != 0;$

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void panic_later_complete() should probably be void panic_later_complete(void)
#150: FILE: kernel/panic.c:62:
+void panic_later_complete()

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: kernel/panic.c:64:
+       if (panic_later_pending())$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#152: FILE: kernel/panic.c:64:
+       if (panic_later_pending())
+               panic("%s", panic_later_msg);

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: kernel/panic.c:65:
+               panic("%s", panic_later_msg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: kernel/panic.c:65:
+               panic("%s", panic_later_msg);$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000056939.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 13 errors, 18 warnings, 4 checks, 97 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000056939.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
