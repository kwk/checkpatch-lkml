WARNING:MISPLACED_INIT: __initdata should be placed after bootmem_data[MAX_NUMNODES]
#181: FILE: arch/m68k/mm/init.c:35:
+static bootmem_data_t __initdata bootmem_data[MAX_NUMNODES];

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#203: FILE: arch/m68k/mm/init.c:57:
+			printk("overlap at %u for chunk %u\n", i, node);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#211: FILE: arch/m68k/mm/init.c:65:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#248: FILE: arch/m68k/mm/init.c:80:
+	printk("\nMem-info:\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#250: FILE: arch/m68k/mm/init.c:82:
+	printk("Free swap:       %6ldkB\n", nr_swap_pages<<(PAGE_SHIFT-10));

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#250: FILE: arch/m68k/mm/init.c:82:
+	printk("Free swap:       %6ldkB\n", nr_swap_pages<<(PAGE_SHIFT-10));
 	                                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#250: FILE: arch/m68k/mm/init.c:82:
+	printk("Free swap:       %6ldkB\n", nr_swap_pages<<(PAGE_SHIFT-10));
 	                                                              ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#254: FILE: arch/m68k/mm/init.c:86:
+			struct page *page = pgdat->node_mem_map + i;
+			total++;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#265: FILE: arch/m68k/mm/init.c:97:
+	printk("%d pages of RAM\n",total);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#265: FILE: arch/m68k/mm/init.c:97:
+	printk("%d pages of RAM\n",total);
 	                          ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#266: FILE: arch/m68k/mm/init.c:98:
+	printk("%d free pages\n",free);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#266: FILE: arch/m68k/mm/init.c:98:
+	printk("%d free pages\n",free);
 	                        ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#267: FILE: arch/m68k/mm/init.c:99:
+	printk("%d reserved pages\n",reserved);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#267: FILE: arch/m68k/mm/init.c:99:
+	printk("%d reserved pages\n",reserved);
 	                            ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#268: FILE: arch/m68k/mm/init.c:100:
+	printk("%d pages shared\n",shared);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#268: FILE: arch/m68k/mm/init.c:100:
+	printk("%d pages shared\n",shared);
 	                          ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#269: FILE: arch/m68k/mm/init.c:101:
+	printk("%d pages swap cached\n",cached);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#269: FILE: arch/m68k/mm/init.c:101:
+	printk("%d pages swap cached\n",cached);
 	                               ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#278: FILE: arch/m68k/mm/init.c:108:
+extern char _text[], _etext[];

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#279: FILE: arch/m68k/mm/init.c:109:
+extern char __init_begin[], __init_end[];

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#308: FILE: arch/m68k/mm/init.c:127:
+	totalram_pages = num_physpages = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#338: FILE: arch/m68k/mm/init.c:164:
+	       totalram_pages << (PAGE_SHIFT-10),
 	                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#435: FILE: arch/m68k/mm/motorola.c:47:
+#define INIT_MAPPED_SIZE	(4UL<<20)
                         	    ^

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#437: FILE: arch/m68k/mm/motorola.c:49:
+extern unsigned long availmem;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#494: FILE: arch/m68k/mm/motorola.c:215:
+		printk ("start of paging_init (%p, %lx)\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#494: FILE: arch/m68k/mm/motorola.c:215:
+		printk ("start of paging_init (%p, %lx)\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#507: FILE: arch/m68k/mm/motorola.c:234:
+			printk("Ignoring memory chunk at 0x%lx:0x%lx before the first chunk\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#508: FILE: arch/m68k/mm/motorola.c:235:
+			printk("Ignoring memory chunk at 0x%lx:0x%lx before the first chunk\n",
+				m68k_memory[i].addr, m68k_memory[i].size);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#509: FILE: arch/m68k/mm/motorola.c:236:
+			printk("Fix your bootloader or use a memfile to make use of this area!\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#615: FILE: include/asm-m68k/mmzone.h:1:
+#ifndef _ASM_M68K_MMZONE_H_

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LONG_LINE: line length of 116 exceeds 100 columns
#659: FILE: include/asm-m68k/motorola_pgtable.h:226:
+#define pte_offset_map(pmdp,address) ((pte_t *)__pmd_page(*pmdp) + (((address) >> PAGE_SHIFT) & (PTRS_PER_PTE - 1)))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:SPACING: space required after that ',' (ctx:VxV)
#659: FILE: include/asm-m68k/motorola_pgtable.h:226:
+#define pte_offset_map(pmdp,address) ((pte_t *)__pmd_page(*pmdp) + (((address) >> PAGE_SHIFT) & (PTRS_PER_PTE - 1)))
                            ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'pmdp' may be better as '(pmdp)' to avoid precedence issues
#659: FILE: include/asm-m68k/motorola_pgtable.h:226:
+#define pte_offset_map(pmdp,address) ((pte_t *)__pmd_page(*pmdp) + (((address) >> PAGE_SHIFT) & (PTRS_PER_PTE - 1)))

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#683: FILE: include/asm-m68k/page.h:135:
 }
+#define __pa(vaddr)	___pa((void *)(vaddr))

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#716: FILE: include/asm-m68k/page.h:192:
+	asm (

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#718: FILE: include/asm-m68k/page.h:194:
+		m68k_fixup(%c1, 1b)
 		           ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#764: FILE: include/asm-m68k/pgalloc.h:17:
+extern void m68k_setup_node(int node);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'page' - possible side-effects?
#869: FILE: include/asm-m68k/virtconvert.h:33:
+#define page_to_phys(page) ({						\
+	struct pglist_data *pgdat;					\
+	pgdat = pg_data_table[page_to_nid(page)];			\
+	page_to_pfn(page) << PAGE_SHIFT;				\
+})

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000425694.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 19 warnings, 13 checks, 758 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000425694.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
