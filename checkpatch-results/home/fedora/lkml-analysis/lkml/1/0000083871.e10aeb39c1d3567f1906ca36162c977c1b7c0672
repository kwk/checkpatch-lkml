WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#40: 
o This patch introduces the similar concept at group level. Idle on the group

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#114: FILE: block/elevator-fq.c:674:
 }
+SHOW_FUNCTION(elv_group_idle_show, efqd->elv_group_idle, 1);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#123: FILE: block/elevator-fq.c:698:
 }
+STORE_FUNCTION(elv_group_idle_store, &efqd->elv_group_idle, 0, UINT_MAX, 1);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#200: FILE: block/elevator-fq.c:1840:
+	if (elv_ioq_wait_request(ioq) || elv_iog_wait_request(iog)
+	    || elv_iog_wait_busy(iog))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#287: FILE: block/elevator-fq.c:2109:
+static void elv_iog_arm_slice_timer(struct request_queue *q,
+				struct io_group *iog, int wait_for_busy)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#348: FILE: block/elevator-fq.c:2194:
+	if ((elv_ioq_slice_used(ioq) || elv_ioq_class_idle(ioq))
+	     && !elv_ioq_must_dispatch(ioq)) {

WARNING:TYPO_SPELLING: 'onece' may be misspelled - perhaps 'once'?
#352: FILE: block/elevator-fq.c:2198:
+		 * after the queue expiry, then make sure we have onece
 		                                                  ^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'delte' may be misspelled - perhaps 'delete'?
#366: FILE: block/elevator-fq.c:2212:
+		 * In similar situations cfq lets delte the queue even if
 		                                  ^^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#373: FILE: block/elevator-fq.c:2219:
+		if (elv_iog_should_idle(ioq) && !elv_iog_wait_busy_done(iog)) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#376: FILE: block/elevator-fq.c:2222:
+		} else

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#439: FILE: block/elevator-fq.c:2389:
+		if (elv_iog_should_idle(ioq) && !ioq->dispatched
+		    && !timer_pending(&efqd->idle_slice_timer)) {

WARNING:TYPO_SPELLING: 'loosing' may be misspelled - perhaps 'losing'?
#443: FILE: block/elevator-fq.c:2393:
+			 * backlogged again. This is to avoid a group loosing
 			                                              ^^^^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#508: FILE: block/elevator-fq.h:263:
+static inline int elv_iog_##name(struct io_group *iog)         ^I^I\$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#534: FILE: block/elevator-fq.h:406:
+extern ssize_t elv_group_idle_show(struct elevator_queue *q, char *name);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#535: FILE: block/elevator-fq.h:407:
+extern ssize_t elv_group_idle_store(struct elevator_queue *q, const char *name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#536: FILE: block/elevator-fq.h:408:
+extern ssize_t elv_group_idle_store(struct elevator_queue *q, const char *name,
+					size_t count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#544: FILE: block/elevator-fq.h:476:
+extern int elv_iog_should_idle(struct io_queue *ioq);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000083871.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 12 checks, 450 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000083871.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
