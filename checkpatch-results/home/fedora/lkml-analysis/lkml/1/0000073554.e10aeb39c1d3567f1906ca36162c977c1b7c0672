WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
   git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip.git sched-core-for-linus

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#196: FILE: arch/x86/include/asm/topology.h:132:
+#define SD_NODE_INIT (struct sched_domain) {				\
+	.min_interval		= 8,					\
+	.max_interval		= 32,					\
+	.busy_factor		= 32,					\
+	.imbalance_pct		= 125,					\
+	.cache_nice_tries	= SD_CACHE_NICE_TRIES,			\
+	.busy_idx		= 3,					\
+	.idle_idx		= SD_IDLE_IDX,				\
+	.newidle_idx		= SD_NEWIDLE_IDX,			\
+	.wake_idx		= 1,					\
+	.forkexec_idx		= SD_FORKEXEC_IDX,			\
+									\
+	.flags			= 1*SD_LOAD_BALANCE			\
+				| 1*SD_BALANCE_NEWIDLE			\
+				| 1*SD_BALANCE_EXEC			\
+				| 1*SD_BALANCE_FORK			\
+				| 0*SD_WAKE_IDLE			\
+				| 1*SD_WAKE_AFFINE			\
+				| 1*SD_WAKE_BALANCE			\
+				| 0*SD_SHARE_CPUPOWER			\
+				| 0*SD_POWERSAVINGS_BALANCE		\
+				| 0*SD_SHARE_PKG_RESOURCES		\
+				| 1*SD_SERIALIZE			\
+				| 1*SD_WAKE_IDLE_FAR			\
+				| 0*SD_PREFER_SIBLING			\
+				,					\
+	.last_balance		= jiffies,				\
+	.balance_interval	= 1,					\
 }

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#208: FILE: arch/x86/include/asm/topology.h:144:
+	.flags			= 1*SD_LOAD_BALANCE			\
 	      			   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#209: FILE: arch/x86/include/asm/topology.h:145:
+				| 1*SD_BALANCE_NEWIDLE			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#210: FILE: arch/x86/include/asm/topology.h:146:
+				| 1*SD_BALANCE_EXEC			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#211: FILE: arch/x86/include/asm/topology.h:147:
+				| 1*SD_BALANCE_FORK			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#212: FILE: arch/x86/include/asm/topology.h:148:
+				| 0*SD_WAKE_IDLE			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#213: FILE: arch/x86/include/asm/topology.h:149:
+				| 1*SD_WAKE_AFFINE			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#214: FILE: arch/x86/include/asm/topology.h:150:
+				| 1*SD_WAKE_BALANCE			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#215: FILE: arch/x86/include/asm/topology.h:151:
+				| 0*SD_SHARE_CPUPOWER			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#216: FILE: arch/x86/include/asm/topology.h:152:
+				| 0*SD_POWERSAVINGS_BALANCE		\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#217: FILE: arch/x86/include/asm/topology.h:153:
+				| 0*SD_SHARE_PKG_RESOURCES		\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#218: FILE: arch/x86/include/asm/topology.h:154:
+				| 1*SD_SERIALIZE			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#219: FILE: arch/x86/include/asm/topology.h:155:
+				| 1*SD_WAKE_IDLE_FAR			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#220: FILE: arch/x86/include/asm/topology.h:156:
+				| 0*SD_PREFER_SIBLING			\
 				   ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: include/linux/kernel.h:128:
+  void __might_sleep(char *file, int line, int preempt_offset);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: include/linux/kernel.h:142:
+  static inline void __might_sleep(char *file, int line, int preempt_offset) { }$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#405: FILE: include/linux/sched.h:1234:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#448: FILE: include/linux/sched.h:2298:
+extern int __cond_resched_lock(spinlock_t *lock);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#471: FILE: include/linux/sched.h:2311:
+extern int __cond_resched_softirq(void);

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#502: FILE: include/linux/topology.h:88:
+#define SD_SIBLING_INIT (struct sched_domain) {				\
+	.min_interval		= 1,					\
+	.max_interval		= 2,					\
+	.busy_factor		= 64,					\
+	.imbalance_pct		= 110,					\
+									\
+	.flags			= 1*SD_LOAD_BALANCE			\
+				| 1*SD_BALANCE_NEWIDLE			\
+				| 1*SD_BALANCE_EXEC			\
+				| 1*SD_BALANCE_FORK			\
+				| 0*SD_WAKE_IDLE			\
+				| 1*SD_WAKE_AFFINE			\
+				| 1*SD_WAKE_BALANCE			\
+				| 1*SD_SHARE_CPUPOWER			\
+				| 0*SD_POWERSAVINGS_BALANCE		\
+				| 0*SD_SHARE_PKG_RESOURCES		\
+				| 0*SD_SERIALIZE			\
+				| 0*SD_WAKE_IDLE_FAR			\
+				| 0*SD_PREFER_SIBLING			\
+				,					\
+	.last_balance		= jiffies,				\
+	.balance_interval	= 1,					\
+	.smt_gain		= 1178,	/* 15% */			\
 }

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#508: FILE: include/linux/topology.h:94:
+	.flags			= 1*SD_LOAD_BALANCE			\
 	      			   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#509: FILE: include/linux/topology.h:95:
+				| 1*SD_BALANCE_NEWIDLE			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#510: FILE: include/linux/topology.h:96:
+				| 1*SD_BALANCE_EXEC			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#511: FILE: include/linux/topology.h:97:
+				| 1*SD_BALANCE_FORK			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#512: FILE: include/linux/topology.h:98:
+				| 0*SD_WAKE_IDLE			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#513: FILE: include/linux/topology.h:99:
+				| 1*SD_WAKE_AFFINE			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#514: FILE: include/linux/topology.h:100:
+				| 1*SD_WAKE_BALANCE			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#515: FILE: include/linux/topology.h:101:
+				| 1*SD_SHARE_CPUPOWER			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#516: FILE: include/linux/topology.h:102:
+				| 0*SD_POWERSAVINGS_BALANCE		\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#517: FILE: include/linux/topology.h:103:
+				| 0*SD_SHARE_PKG_RESOURCES		\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#518: FILE: include/linux/topology.h:104:
+				| 0*SD_SERIALIZE			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#519: FILE: include/linux/topology.h:105:
+				| 0*SD_WAKE_IDLE_FAR			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#520: FILE: include/linux/topology.h:106:
+				| 0*SD_PREFER_SIBLING			\
 				   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#551: FILE: include/linux/topology.h:118:
+#define SD_MC_INIT (struct sched_domain) {				\
+	.min_interval		= 1,					\
+	.max_interval		= 4,					\
+	.busy_factor		= 64,					\
+	.imbalance_pct		= 125,					\
+	.cache_nice_tries	= 1,					\
+	.busy_idx		= 2,					\
+	.wake_idx		= 1,					\
+	.forkexec_idx		= 1,					\
+									\
+	.flags			= 1*SD_LOAD_BALANCE			\
+				| 1*SD_BALANCE_NEWIDLE			\
+				| 1*SD_BALANCE_EXEC			\
+				| 1*SD_BALANCE_FORK			\
+				| 1*SD_WAKE_IDLE			\
+				| 1*SD_WAKE_AFFINE			\
+				| 1*SD_WAKE_BALANCE			\
+				| 0*SD_SHARE_CPUPOWER			\
+				| 1*SD_SHARE_PKG_RESOURCES		\
+				| 0*SD_SERIALIZE			\
+				| 0*SD_WAKE_IDLE_FAR			\
+				| sd_balance_for_mc_power()		\
+				| sd_power_saving_flags()		\
+				,					\
+	.last_balance		= jiffies,				\
+	.balance_interval	= 1,					\
 }

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#561: FILE: include/linux/topology.h:128:
+	.flags			= 1*SD_LOAD_BALANCE			\
 	      			   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#562: FILE: include/linux/topology.h:129:
+				| 1*SD_BALANCE_NEWIDLE			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#563: FILE: include/linux/topology.h:130:
+				| 1*SD_BALANCE_EXEC			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#564: FILE: include/linux/topology.h:131:
+				| 1*SD_BALANCE_FORK			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#565: FILE: include/linux/topology.h:132:
+				| 1*SD_WAKE_IDLE			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#566: FILE: include/linux/topology.h:133:
+				| 1*SD_WAKE_AFFINE			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#567: FILE: include/linux/topology.h:134:
+				| 1*SD_WAKE_BALANCE			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#568: FILE: include/linux/topology.h:135:
+				| 0*SD_SHARE_CPUPOWER			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#569: FILE: include/linux/topology.h:136:
+				| 1*SD_SHARE_PKG_RESOURCES		\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#570: FILE: include/linux/topology.h:137:
+				| 0*SD_SERIALIZE			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#571: FILE: include/linux/topology.h:138:
+				| 0*SD_WAKE_IDLE_FAR			\
 				   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#603: FILE: include/linux/topology.h:150:
+#define SD_CPU_INIT (struct sched_domain) {				\
+	.min_interval		= 1,					\
+	.max_interval		= 4,					\
+	.busy_factor		= 64,					\
+	.imbalance_pct		= 125,					\
+	.cache_nice_tries	= 1,					\
+	.busy_idx		= 2,					\
+	.idle_idx		= 1,					\
+	.newidle_idx		= 2,					\
+	.wake_idx		= 1,					\
+	.forkexec_idx		= 1,					\
+									\
+	.flags			= 1*SD_LOAD_BALANCE			\
+				| 1*SD_BALANCE_NEWIDLE			\
+				| 1*SD_BALANCE_EXEC			\
+				| 1*SD_BALANCE_FORK			\
+				| 1*SD_WAKE_IDLE			\
+				| 0*SD_WAKE_AFFINE			\
+				| 1*SD_WAKE_BALANCE			\
+				| 0*SD_SHARE_CPUPOWER			\
+				| 0*SD_SHARE_PKG_RESOURCES		\
+				| 0*SD_SERIALIZE			\
+				| 0*SD_WAKE_IDLE_FAR			\
+				| sd_balance_for_package_power()	\
+				| sd_power_saving_flags()		\
+				,					\
+	.last_balance		= jiffies,				\
+	.balance_interval	= 1,					\
 }

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#615: FILE: include/linux/topology.h:162:
+	.flags			= 1*SD_LOAD_BALANCE			\
 	      			   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#616: FILE: include/linux/topology.h:163:
+				| 1*SD_BALANCE_NEWIDLE			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#617: FILE: include/linux/topology.h:164:
+				| 1*SD_BALANCE_EXEC			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#618: FILE: include/linux/topology.h:165:
+				| 1*SD_BALANCE_FORK			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#619: FILE: include/linux/topology.h:166:
+				| 1*SD_WAKE_IDLE			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#620: FILE: include/linux/topology.h:167:
+				| 0*SD_WAKE_AFFINE			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#621: FILE: include/linux/topology.h:168:
+				| 1*SD_WAKE_BALANCE			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#622: FILE: include/linux/topology.h:169:
+				| 0*SD_SHARE_CPUPOWER			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#623: FILE: include/linux/topology.h:170:
+				| 0*SD_SHARE_PKG_RESOURCES		\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#624: FILE: include/linux/topology.h:171:
+				| 0*SD_SERIALIZE			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#625: FILE: include/linux/topology.h:172:
+				| 0*SD_WAKE_IDLE_FAR			\
 				   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#649: FILE: include/linux/topology.h:182:
+#define SD_ALLNODES_INIT (struct sched_domain) {			\
+	.min_interval		= 64,					\
+	.max_interval		= 64*num_online_cpus(),			\
+	.busy_factor		= 128,					\
+	.imbalance_pct		= 133,					\
+	.cache_nice_tries	= 1,					\
+	.busy_idx		= 3,					\
+	.idle_idx		= 3,					\
+	.flags			= 1*SD_LOAD_BALANCE			\
+				| 1*SD_BALANCE_NEWIDLE			\
+				| 0*SD_BALANCE_EXEC			\
+				| 0*SD_BALANCE_FORK			\
+				| 0*SD_WAKE_IDLE			\
+				| 1*SD_WAKE_AFFINE			\
+				| 0*SD_WAKE_BALANCE			\
+				| 0*SD_SHARE_CPUPOWER			\
+				| 0*SD_POWERSAVINGS_BALANCE		\
+				| 0*SD_SHARE_PKG_RESOURCES		\
+				| 1*SD_SERIALIZE			\
+				| 1*SD_WAKE_IDLE_FAR			\
+				| 0*SD_PREFER_SIBLING			\
+				,					\
+	.last_balance		= jiffies,				\
+	.balance_interval	= 64,					\
 }

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#651: FILE: include/linux/topology.h:184:
+	.max_interval		= 64*num_online_cpus(),			\
 	             		    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#657: FILE: include/linux/topology.h:190:
+	.flags			= 1*SD_LOAD_BALANCE			\
 	      			   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#658: FILE: include/linux/topology.h:191:
+				| 1*SD_BALANCE_NEWIDLE			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#659: FILE: include/linux/topology.h:192:
+				| 0*SD_BALANCE_EXEC			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#660: FILE: include/linux/topology.h:193:
+				| 0*SD_BALANCE_FORK			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#661: FILE: include/linux/topology.h:194:
+				| 0*SD_WAKE_IDLE			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#662: FILE: include/linux/topology.h:195:
+				| 1*SD_WAKE_AFFINE			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#663: FILE: include/linux/topology.h:196:
+				| 0*SD_WAKE_BALANCE			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#664: FILE: include/linux/topology.h:197:
+				| 0*SD_SHARE_CPUPOWER			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#665: FILE: include/linux/topology.h:198:
+				| 0*SD_POWERSAVINGS_BALANCE		\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#666: FILE: include/linux/topology.h:199:
+				| 0*SD_SHARE_PKG_RESOURCES		\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#667: FILE: include/linux/topology.h:200:
+				| 1*SD_SERIALIZE			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#668: FILE: include/linux/topology.h:201:
+				| 1*SD_WAKE_IDLE_FAR			\
 				   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#669: FILE: include/linux/topology.h:202:
+				| 0*SD_PREFER_SIBLING			\
 				   ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#694: FILE: include/trace/events/sched.h:353:
+TRACE_EVENT(sched_stat_wait,
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#699: FILE: include/trace/events/sched.h:358:
+	TP_STRUCT__entry(

ERROR:SPACING: space prohibited after that open parenthesis '('
#700: FILE: include/trace/events/sched.h:359:
+		__array( char,	comm,	TASK_COMM_LEN	)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#700: FILE: include/trace/events/sched.h:359:
+		__array( char,	comm,	TASK_COMM_LEN	)

ERROR:SPACING: space prohibited after that open parenthesis '('
#701: FILE: include/trace/events/sched.h:360:
+		__field( pid_t,	pid			)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#701: FILE: include/trace/events/sched.h:360:
+		__field( pid_t,	pid			)

ERROR:SPACING: space prohibited after that open parenthesis '('
#702: FILE: include/trace/events/sched.h:361:
+		__field( u64,	delay			)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#702: FILE: include/trace/events/sched.h:361:
+		__field( u64,	delay			)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#705: FILE: include/trace/events/sched.h:364:
+	TP_fast_assign(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#710: FILE: include/trace/events/sched.h:369:
+	TP_perf_assign(

WARNING:PRINTF_L: %Lu is non-standard C, use %llu
#714: FILE: include/trace/events/sched.h:373:
+	TP_printk("task: %s:%d wait: %Lu [ns]",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#715: FILE: include/trace/events/sched.h:374:
+	TP_printk("task: %s:%d wait: %Lu [ns]",
+			__entry->comm, __entry->pid,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#724: FILE: include/trace/events/sched.h:383:
+TRACE_EVENT(sched_stat_sleep,
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#729: FILE: include/trace/events/sched.h:388:
+	TP_STRUCT__entry(

ERROR:SPACING: space prohibited after that open parenthesis '('
#730: FILE: include/trace/events/sched.h:389:
+		__array( char,	comm,	TASK_COMM_LEN	)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#730: FILE: include/trace/events/sched.h:389:
+		__array( char,	comm,	TASK_COMM_LEN	)

ERROR:SPACING: space prohibited after that open parenthesis '('
#731: FILE: include/trace/events/sched.h:390:
+		__field( pid_t,	pid			)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#731: FILE: include/trace/events/sched.h:390:
+		__field( pid_t,	pid			)

ERROR:SPACING: space prohibited after that open parenthesis '('
#732: FILE: include/trace/events/sched.h:391:
+		__field( u64,	delay			)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#732: FILE: include/trace/events/sched.h:391:
+		__field( u64,	delay			)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#735: FILE: include/trace/events/sched.h:394:
+	TP_fast_assign(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#740: FILE: include/trace/events/sched.h:399:
+	TP_perf_assign(

WARNING:PRINTF_L: %Lu is non-standard C, use %llu
#744: FILE: include/trace/events/sched.h:403:
+	TP_printk("task: %s:%d sleep: %Lu [ns]",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#745: FILE: include/trace/events/sched.h:404:
+	TP_printk("task: %s:%d sleep: %Lu [ns]",
+			__entry->comm, __entry->pid,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#754: FILE: include/trace/events/sched.h:413:
+TRACE_EVENT(sched_stat_iowait,
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#759: FILE: include/trace/events/sched.h:418:
+	TP_STRUCT__entry(

ERROR:SPACING: space prohibited after that open parenthesis '('
#760: FILE: include/trace/events/sched.h:419:
+		__array( char,	comm,	TASK_COMM_LEN	)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#760: FILE: include/trace/events/sched.h:419:
+		__array( char,	comm,	TASK_COMM_LEN	)

ERROR:SPACING: space prohibited after that open parenthesis '('
#761: FILE: include/trace/events/sched.h:420:
+		__field( pid_t,	pid			)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#761: FILE: include/trace/events/sched.h:420:
+		__field( pid_t,	pid			)

ERROR:SPACING: space prohibited after that open parenthesis '('
#762: FILE: include/trace/events/sched.h:421:
+		__field( u64,	delay			)

ERROR:SPACING: space prohibited before that close parenthesis ')'
#762: FILE: include/trace/events/sched.h:421:
+		__field( u64,	delay			)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#765: FILE: include/trace/events/sched.h:424:
+	TP_fast_assign(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#770: FILE: include/trace/events/sched.h:429:
+	TP_perf_assign(

WARNING:PRINTF_L: %Lu is non-standard C, use %llu
#774: FILE: include/trace/events/sched.h:433:
+	TP_printk("task: %s:%d iowait: %Lu [ns]",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#775: FILE: include/trace/events/sched.h:434:
+	TP_printk("task: %s:%d iowait: %Lu [ns]",
+			__entry->comm, __entry->pid,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1346: FILE: kernel/sched.c:3799:
+static inline void update_sg_lb_stats(struct sched_domain *sd,
+			struct sched_group *group, int this_cpu,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1413: FILE: kernel/sched.c:3918:
+		update_sg_lb_stats(sd, group, this_cpu, idle, load_idx, sd_idle,
 				local_group, cpus, balance, &sgs);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1487: FILE: kernel/sched.c:4046:
+	*imbalance = min(max_pull * sds->busiest->cpu_power,
+		(sds->avg_load - sds->this_load) * sds->this->cpu_power)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1583: FILE: kernel/sched.c:6347:
+		if (policy != SCHED_FIFO && policy != SCHED_RR &&
+				policy != SCHED_NORMAL && policy != SCHED_BATCH &&

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#1760: FILE: kernel/sched.c:7920:
+			printk(KERN_CONT " (cpu_power = %d)",

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#1760: FILE: kernel/sched.c:7920:
+			printk(KERN_CONT " (cpu_power = %d)",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1761: FILE: kernel/sched.c:7921:
+			printk(KERN_CONT " (cpu_power = %d)",
+				group->cpu_power);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc_node(sizeof(*sg)...) over kmalloc_node(sizeof(struct sched_group)...)
#1851: FILE: kernel/sched.c:8487:
+	sg = kmalloc_node(sizeof(struct sched_group) + cpumask_size(),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1854: FILE: kernel/sched.c:8490:
+		printk(KERN_WARNING "Can not alloc domain group for node %d\n",

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1854: FILE: kernel/sched.c:8490:
+	if (!sg) {
+		printk(KERN_WARNING "Can not alloc domain group for node %d\n",

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc_node(sizeof(*sg)...) over kmalloc_node(sizeof(struct sched_group)...)
#1881: FILE: kernel/sched.c:8517:
+		sg = kmalloc_node(sizeof(struct sched_group) + cpumask_size(),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1884: FILE: kernel/sched.c:8520:
+			printk(KERN_WARNING

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1884: FILE: kernel/sched.c:8520:
+		if (!sg) {
+			printk(KERN_WARNING

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1986: FILE: kernel/sched.c:8706:
+		free_sched_groups(cpu_map, d->tmpmask); /* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1989: FILE: kernel/sched.c:8709:
+		free_rootdomain(d->rd); /* fall through */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1991: FILE: kernel/sched.c:8711:
+		free_cpumask_var(d->tmpmask); /* fall through */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1993: FILE: kernel/sched.c:8713:
+		free_cpumask_var(d->send_covered); /* fall through */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1995: FILE: kernel/sched.c:8715:
+		free_cpumask_var(d->this_core_map); /* fall through */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1997: FILE: kernel/sched.c:8717:
+		free_cpumask_var(d->this_sibling_map); /* fall through */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#1999: FILE: kernel/sched.c:8719:
+		free_cpumask_var(d->nodemask); /* fall through */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#2024: FILE: kernel/sched.c:8722:
+		kfree(d->sched_group_nodes); /* fall through */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#2026: FILE: kernel/sched.c:8724:
+		free_cpumask_var(d->notcovered); /* fall through */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#2028: FILE: kernel/sched.c:8726:
+		free_cpumask_var(d->covered); /* fall through */

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#2030: FILE: kernel/sched.c:8728:
+		free_cpumask_var(d->domainspan); /* fall through */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2055: FILE: kernel/sched.c:8747:
+	d->sched_group_nodes = kcalloc(nr_node_ids,
+				      sizeof(struct sched_group *), GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2088: FILE: kernel/sched.c:8773:
+static struct sched_domain *__build_numa_sched_domains(struct s_data *d,
+	const struct cpumask *cpu_map, struct sched_domain_attr *attr, int i)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2159: FILE: kernel/sched.c:8804:
+static struct sched_domain *__build_cpu_sched_domain(struct s_data *d,
+	const struct cpumask *cpu_map, struct sched_domain_attr *attr,

WARNING:LINE_SPACING: Missing a blank line after declarations
#2163: FILE: kernel/sched.c:8808:
+	struct sched_domain *sd;
+	sd = &per_cpu(phys_domains, i).sd;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2175: FILE: kernel/sched.c:8820:
+static struct sched_domain *__build_mc_sched_domain(struct s_data *d,
+	const struct cpumask *cpu_map, struct sched_domain_attr *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2201: FILE: kernel/sched.c:8837:
+static struct sched_domain *__build_smt_sched_domain(struct s_data *d,
+	const struct cpumask *cpu_map, struct sched_domain_attr *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2738: FILE: kernel/sched_fair.c:551:
+		trace_sched_stat_wait(task_of(se),
+			rq_of(cfs_rq)->clock - se->wait_start);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'rq' may be better as '(rq)' to avoid precedence issues
#2795: FILE: kernel/sched_fair.c:1077:
+#define cpu_rd_active(cpu, rq) cpumask_test_cpu(cpu, rq->rd->online)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2812: FILE: kernel/sched_fair.c:1118:
 		    || ((sd->flags & SD_WAKE_IDLE_FAR)
+			&& !task_hot(p, task_rq->clock, sd))) {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2835: FILE: kernel/sched_fair.c:1274:
+		100*(tl + effective_load(tg, this_cpu, weight, weight)) <=
 		   ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2863: FILE: kernel/sched_features.h:1:
+SCHED_FEAT(NEW_FAIR_SLEEPERS, 0)

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000073554.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 23 errors, 25 warnings, 96 checks, 2715 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000073554.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
