CHECK:LINE_SPACING: Please don't use multiple blank lines
#51: FILE: arch/alpha/kernel/core_titan.c:49:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#76: FILE: arch/alpha/kernel/core_titan.c:73:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#134: FILE: arch/alpha/kernel/core_titan.c:194:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#204: FILE: arch/alpha/kernel/core_titan.c:460:
 
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'baddr >= __direct_map_base'
#231: FILE: arch/alpha/kernel/core_titan.c:499:
+	if ((baddr >= __direct_map_base) &&
 	    ((baddr + size - 1) < __direct_map_base + __direct_map_size)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#297: FILE: arch/alpha/kernel/core_titan.c:634:
+		printk(KERN_WARNING

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#327: FILE: arch/alpha/kernel/core_titan.c:676:
+	printk("Enabling AGP: %dX%s\n",

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#363: FILE: arch/alpha/kernel/core_titan.c:752:
+	if (hosenum < 0 &&

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!agp"
#375: FILE: arch/alpha/kernel/core_titan.c:770:
+	if (agp == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#376: FILE: arch/alpha/kernel/core_titan.c:771:
+		printk(KERN_ERR "TITAN - cannot allocate struct of size %d bytes\n",

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#376: FILE: arch/alpha/kernel/core_titan.c:771:
+	if (agp == NULL) {
+		printk(KERN_ERR "TITAN - cannot allocate struct of size %d bytes\n",

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000454472.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 4 warnings, 6 checks, 311 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000454472.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
