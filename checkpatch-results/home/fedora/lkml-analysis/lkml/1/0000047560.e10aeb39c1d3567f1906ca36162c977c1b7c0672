WARNING:LEADING_SPACE: please, no spaces at the start of a line
#60: FILE: include/linux/kfifo.h:130:
+       smp_mb();$

WARNING:MEMORY_BARRIER: memory barrier without comment
#60: FILE: include/linux/kfifo.h:130:
+       smp_mb();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: include/linux/kfifo.h:131:
+       fifo->out = fifo->in;$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#72: FILE: include/linux/kfifo.h:241:
+extern void kfifo_skip(struct kfifo *fifo, unsigned int len);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#74: FILE: include/linux/kfifo.h:243:
+extern __must_check unsigned int kfifo_from_user(struct kfifo *fifo,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#75: FILE: include/linux/kfifo.h:244:
+extern __must_check unsigned int kfifo_from_user(struct kfifo *fifo,
+       const void __user *from, unsigned int n);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#75: FILE: include/linux/kfifo.h:244:
+       const void __user *from, unsigned int n);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#77: FILE: include/linux/kfifo.h:246:
+extern __must_check unsigned int kfifo_to_user(struct kfifo *fifo,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#78: FILE: include/linux/kfifo.h:247:
+extern __must_check unsigned int kfifo_to_user(struct kfifo *fifo,
+       void __user *to, unsigned int n);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: include/linux/kfifo.h:247:
+       void __user *to, unsigned int n);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#84: FILE: include/linux/kfifo.h:253:
+                               unsigned int off)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#84: FILE: include/linux/kfifo.h:253:
+static inline void __kfifo_add_out(struct kfifo *fifo,
+                               unsigned int off)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: include/linux/kfifo.h:253:
+                               unsigned int off)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#86: FILE: include/linux/kfifo.h:255:
+       smp_mb();$

WARNING:MEMORY_BARRIER: memory barrier without comment
#86: FILE: include/linux/kfifo.h:255:
+       smp_mb();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: include/linux/kfifo.h:256:
+       fifo->out += off;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#94: FILE: include/linux/kfifo.h:263:
+                               unsigned int off)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#94: FILE: include/linux/kfifo.h:263:
+static inline void __kfifo_add_in(struct kfifo *fifo,
+                               unsigned int off)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: include/linux/kfifo.h:263:
+                               unsigned int off)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: include/linux/kfifo.h:265:
+       smp_wmb();$

WARNING:MEMORY_BARRIER: memory barrier without comment
#96: FILE: include/linux/kfifo.h:265:
+       smp_wmb();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: include/linux/kfifo.h:266:
+       fifo->in += off;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: include/linux/kfifo.h:275:
+       return off & (fifo->size - 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: kernel/kfifo.c:110:
+       if (len < kfifo_len(fifo)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#131: FILE: kernel/kfifo.c:110:
+       if (len < kfifo_len(fifo)) {
+               __kfifo_add_out(fifo, len);

ERROR:CODE_INDENT: code indent should use tabs where possible
#132: FILE: kernel/kfifo.c:111:
+               __kfifo_add_out(fifo, len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: kernel/kfifo.c:111:
+               __kfifo_add_out(fifo, len);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#133: FILE: kernel/kfifo.c:112:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: kernel/kfifo.c:112:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: kernel/kfifo.c:113:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: kernel/kfifo.c:114:
+       kfifo_reset_out(fifo);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: kernel/kfifo.c:134:
+       unsigned int off;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: kernel/kfifo.c:146:
+       off = __kfifo_off(fifo, fifo->in);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: kernel/kfifo.c:149:
+       l = min(len, fifo->size - off);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: kernel/kfifo.c:150:
+       memcpy(fifo->buffer + off, from, l);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: kernel/kfifo.c:155:
+       __kfifo_add_in(fifo, len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#182: FILE: kernel/kfifo.c:176:
+       unsigned int off;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#190: FILE: kernel/kfifo.c:188:
+       off = __kfifo_off(fifo, fifo->out);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#195: FILE: kernel/kfifo.c:191:
+       l = min(len, fifo->size - off);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#196: FILE: kernel/kfifo.c:192:
+       memcpy(to, fifo->buffer + off, l);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#201: FILE: kernel/kfifo.c:197:
+       __kfifo_add_out(fifo, len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: kernel/kfifo.c:199:
+       return len;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#220: FILE: kernel/kfifo.c:216:
+unsigned int kfifo_from_user(struct kfifo *fifo,
+       const void __user *from, unsigned int len)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: kernel/kfifo.c:216:
+       const void __user *from, unsigned int len)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#222: FILE: kernel/kfifo.c:218:
+       unsigned int off;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: kernel/kfifo.c:219:
+       unsigned int l;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: kernel/kfifo.c:220:
+       int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#226: FILE: kernel/kfifo.c:222:
+       len = min(len, fifo->size - fifo->in + fifo->out);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#231: FILE: kernel/kfifo.c:225:
+        * Ensure that we sample the fifo->out index -before- we$

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: kernel/kfifo.c:226:
+        * start putting bytes into the kfifo.$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: kernel/kfifo.c:231:
+       off = __kfifo_off(fifo, fifo->in);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: kernel/kfifo.c:234:
+       l = min(len, fifo->size - off);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#242: FILE: kernel/kfifo.c:235:
+       ret = copy_from_user(fifo->buffer + off, from, l);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: kernel/kfifo.c:237:
+       if (unlikely(ret))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#244: FILE: kernel/kfifo.c:237:
+       if (unlikely(ret))
+               return l - ret;

ERROR:CODE_INDENT: code indent should use tabs where possible
#245: FILE: kernel/kfifo.c:238:
+               return l - ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: kernel/kfifo.c:238:
+               return l - ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: kernel/kfifo.c:241:
+       ret = copy_from_user(fifo->buffer, from + l, len - l);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: kernel/kfifo.c:243:
+       if (unlikely(ret))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#250: FILE: kernel/kfifo.c:243:
+       if (unlikely(ret))
+               return len - ret;

ERROR:CODE_INDENT: code indent should use tabs where possible
#251: FILE: kernel/kfifo.c:244:
+               return len - ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: kernel/kfifo.c:244:
+               return len - ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: kernel/kfifo.c:246:
+       __kfifo_add_in(fifo, len);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#273: FILE: kernel/kfifo.c:265:
+unsigned int kfifo_to_user(struct kfifo *fifo,
+       void __user *to, unsigned int len)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: kernel/kfifo.c:265:
+       void __user *to, unsigned int len)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: kernel/kfifo.c:267:
+       unsigned int off;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: kernel/kfifo.c:268:
+       unsigned int l;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: kernel/kfifo.c:269:
+       int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: kernel/kfifo.c:271:
+       len = min(len, fifo->in - fifo->out);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#282: FILE: kernel/kfifo.c:274:
+        * Ensure that we sample the fifo->in index -before- we$

ERROR:CODE_INDENT: code indent should use tabs where possible
#283: FILE: kernel/kfifo.c:275:
+        * start removing bytes from the kfifo.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#284: FILE: kernel/kfifo.c:276:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: kernel/kfifo.c:278:
+       smp_rmb();$

WARNING:MEMORY_BARRIER: memory barrier without comment
#286: FILE: kernel/kfifo.c:278:
+       smp_rmb();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: kernel/kfifo.c:280:
+       off = __kfifo_off(fifo, fifo->out);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: kernel/kfifo.c:283:
+       l = min(len, fifo->size - off);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: kernel/kfifo.c:284:
+       ret = copy_to_user(to, fifo->buffer + off, l);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: kernel/kfifo.c:286:
+       if (unlikely(ret))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#294: FILE: kernel/kfifo.c:286:
+       if (unlikely(ret))
+               return l - ret;

ERROR:CODE_INDENT: code indent should use tabs where possible
#295: FILE: kernel/kfifo.c:287:
+               return l - ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#295: FILE: kernel/kfifo.c:287:
+               return l - ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: kernel/kfifo.c:290:
+       ret = copy_to_user(to + l, fifo->buffer, len - l);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: kernel/kfifo.c:292:
+       if (unlikely(ret))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#300: FILE: kernel/kfifo.c:292:
+       if (unlikely(ret))
+               return len - ret;

ERROR:CODE_INDENT: code indent should use tabs where possible
#301: FILE: kernel/kfifo.c:293:
+               return len - ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: kernel/kfifo.c:293:
+               return len - ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: kernel/kfifo.c:295:
+       __kfifo_add_out(fifo, len);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: kernel/kfifo.c:297:
+       return len;$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000047560.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 13 errors, 66 warnings, 9 checks, 247 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000047560.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
