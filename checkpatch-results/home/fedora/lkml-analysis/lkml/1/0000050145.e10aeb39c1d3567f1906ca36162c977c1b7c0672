WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#150: FILE: drivers/vhost/Kconfig:1:
+config VHOST_NET
+	tristate "Host kernel accelerator for virtio net (EXPERIMENTAL)"
+	depends on NET && EVENTFD && EXPERIMENTAL
+	---help---
+	  This kernel module can be loaded in host kernel to accelerate
+	  guest networking with virtio_net. Not to be confused with virtio_net
+	  module itself which needs to be loaded in guest kernel.
+
+	  To compile this driver as a module, choose M here: the module will
+	  be called vhost_net.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#175: FILE: drivers/vhost/net.c:1:
+/* Copyright (C) 2009 Red Hat, Inc.

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#205: FILE: drivers/vhost/net.c:31:
+ * Using this limit prevents one virtqueue from starving others. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#226: FILE: drivers/vhost/net.c:52:
+	 * Protected by tx vq lock. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#236: FILE: drivers/vhost/net.c:62:
+	size_t size;
+	while (len && seg < iov_count) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#269: FILE: drivers/vhost/net.c:95:
+ * read-size critical section for our kind of RCU. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#273: FILE: drivers/vhost/net.c:99:
+	unsigned head, out, in, s;

WARNING:LINE_SPACING: Missing a blank line after declarations
#286: FILE: drivers/vhost/net.c:112:
+	struct socket *sock = rcu_dereference(vq->private_data);
+	if (!sock)

WARNING:SPLIT_STRING: quoted string split across lines
#322: FILE: drivers/vhost/net.c:148:
+			vq_err(vq, "Unexpected descriptor format for TX: "
+			       "out %d, int %d\n", out, in);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#332: FILE: drivers/vhost/net.c:158:
+			vq_err(vq, "Unexpected header len for TX: "
+			       "%zd expected %zd\n",

WARNING:SPLIT_STRING: quoted string split across lines
#345: FILE: drivers/vhost/net.c:171:
+			pr_err("Truncated TX packet: "
+			       " len %d != %zd\n", err, len);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#359: FILE: drivers/vhost/net.c:185:
+ * read-size critical section for our kind of RCU. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#363: FILE: drivers/vhost/net.c:189:
+	unsigned head, out, in, log, s;

WARNING:LINE_SPACING: Missing a blank line after declarations
#383: FILE: drivers/vhost/net.c:209:
+	struct socket *sock = rcu_dereference(vq->private_data);
+	if (!sock || skb_queue_empty(&sock->sk->sk_receive_queue))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#403: FILE: drivers/vhost/net.c:229:
+				 * doing that: check again. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#408: FILE: drivers/vhost/net.c:234:
+			 * they refilled. */

WARNING:SPLIT_STRING: quoted string split across lines
#414: FILE: drivers/vhost/net.c:240:
+			vq_err(vq, "Unexpected descriptor format for RX: "
+			       "out %d, int %d\n",

WARNING:SPLIT_STRING: quoted string split across lines
#425: FILE: drivers/vhost/net.c:251:
+			vq_err(vq, "Unexpected header len for RX: "
+			       "%zd expected %zd\n",

WARNING:SPLIT_STRING: quoted string split across lines
#439: FILE: drivers/vhost/net.c:265:
+			pr_err("Discarded truncated rx packet: "
+			       " len %d > %zd\n", err, len);

WARNING:LINE_SPACING: Missing a blank line after declarations
#469: FILE: drivers/vhost/net.c:295:
+	struct vhost_net *net;
+	vq = container_of(work, struct vhost_virtqueue, poll.work);

WARNING:LINE_SPACING: Missing a blank line after declarations
#478: FILE: drivers/vhost/net.c:304:
+	struct vhost_net *net;
+	vq = container_of(work, struct vhost_virtqueue, poll.work);

WARNING:LINE_SPACING: Missing a blank line after declarations
#486: FILE: drivers/vhost/net.c:312:
+	struct vhost_net *net;
+	net = container_of(work, struct vhost_net, poll[VHOST_NET_VQ_TX].work);

WARNING:LINE_SPACING: Missing a blank line after declarations
#493: FILE: drivers/vhost/net.c:319:
+	struct vhost_net *net;
+	net = container_of(work, struct vhost_net, poll[VHOST_NET_VQ_RX].work);

WARNING:SIZEOF_PARENTHESIS: sizeof *n should be sizeof(*n)
#499: FILE: drivers/vhost/net.c:325:
+	struct vhost_net *n = kmalloc(sizeof *n, GFP_KERNEL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#501: FILE: drivers/vhost/net.c:327:
+	int r;
+	if (!n)

CHECK:BRACES: braces {} should be used on all arms of this statement
#523: FILE: drivers/vhost/net.c:349:
+	if (vq == n->vqs + VHOST_NET_VQ_TX) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#526: FILE: drivers/vhost/net.c:352:
+	} else

WARNING:LINE_SPACING: Missing a blank line after declarations
#534: FILE: drivers/vhost/net.c:360:
+	struct socket *sock = vq->private_data;
+	if (!sock)

CHECK:BRACES: braces {} should be used on all arms of this statement
#536: FILE: drivers/vhost/net.c:362:
+	if (vq == n->vqs + VHOST_NET_VQ_TX) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#539: FILE: drivers/vhost/net.c:365:
+	} else

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#589: FILE: drivers/vhost/net.c:415:
+	 * since jobs can re-queue themselves. */

WARNING:SIZEOF_PARENTHESIS: sizeof uaddr should be sizeof(uaddr)
#601: FILE: drivers/vhost/net.c:427:
+	int uaddr_len = sizeof uaddr, r;

WARNING:LINE_SPACING: Missing a blank line after declarations
#603: FILE: drivers/vhost/net.c:429:
+	struct socket *sock = sockfd_lookup(fd, &r);
+	if (!sock)

WARNING:LINE_SPACING: Missing a blank line after declarations
#631: FILE: drivers/vhost/net.c:457:
+	struct socket *sock;
+	if (!file)

WARNING:LINE_SPACING: Missing a blank line after declarations
#642: FILE: drivers/vhost/net.c:468:
+	struct socket *sock;
+	if (fd == -1)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#653: FILE: drivers/vhost/net.c:479:
+static long vhost_net_set_backend(struct vhost_net *n, unsigned index, int fd)

WARNING:LINE_SPACING: Missing a blank line after declarations
#702: FILE: drivers/vhost/net.c:528:
+	long err;
+	mutex_lock(&n->dev.mutex);

WARNING:LINE_SPACING: Missing a blank line after declarations
#723: FILE: drivers/vhost/net.c:549:
+	int i;
+	mutex_lock(&n->dev.mutex);

WARNING:MEMORY_BARRIER: memory barrier without comment
#725: FILE: drivers/vhost/net.c:551:
+	smp_wmb();

WARNING:LINE_SPACING: Missing a blank line after declarations
#744: FILE: drivers/vhost/net.c:570:
+	int r;
+	switch (ioctl) {

WARNING:SIZEOF_PARENTHESIS: sizeof backend should be sizeof(backend)
#746: FILE: drivers/vhost/net.c:572:
+		r = copy_from_user(&backend, argp, sizeof backend);

WARNING:STATIC_CONST: Move const after static - use 'static const struct file_operations '
#779: FILE: drivers/vhost/net.c:605:
+const static struct file_operations vhost_net_fops = {

WARNING:LINE_SPACING: Missing a blank line after declarations
#798: FILE: drivers/vhost/net.c:624:
+	int r = vhost_init();
+	if (r)

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#809: FILE: drivers/vhost/net.c:635:
+
+}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#829: FILE: drivers/vhost/vhost.c:1:
+/* Copyright (C) 2009 Red Hat, Inc.

WARNING:LINE_SPACING: Missing a blank line after declarations
#873: FILE: drivers/vhost/vhost.c:45:
+	struct vhost_poll *poll;
+	poll = container_of(pt, struct vhost_poll, table);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#879: FILE: drivers/vhost/vhost.c:51:
+static int vhost_poll_wakeup(wait_queue_t *wait, unsigned mode, int sync,

WARNING:LINE_SPACING: Missing a blank line after declarations
#883: FILE: drivers/vhost/vhost.c:55:
+	struct vhost_poll *poll;
+	poll = container_of(wait, struct vhost_poll, wait);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#902: FILE: drivers/vhost/vhost.c:74:
+ * keep a reference to a file until after vhost_poll_stop is called. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#906: FILE: drivers/vhost/vhost.c:78:
+	unsigned long mask;
+	mask = file->f_op->poll(file, &poll->table);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#912: FILE: drivers/vhost/vhost.c:84:
+ * file reference. You must also flush afterwards. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#919: FILE: drivers/vhost/vhost.c:91:
+ * locks that are also used by the callback. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#958: FILE: drivers/vhost/vhost.c:130:
+	int i;
+	dev->vqs = vqs;

WARNING:SIZEOF_PARENTHESIS: sizeof *memory->regions should be sizeof(*memory->regions)
#1003: FILE: drivers/vhost/vhost.c:175:
+			 2 * sizeof *memory->regions, GFP_KERNEL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1024: FILE: drivers/vhost/vhost.c:196:
+	int i;
+	for (i = 0; i < dev->nvqs; ++i) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1060: FILE: drivers/vhost/vhost.c:232:
+	long r;
+	r = copy_from_user(&mem, m, size);

WARNING:SIZEOF_PARENTHESIS: sizeof *m->regions should be sizeof(*m->regions)
#1067: FILE: drivers/vhost/vhost.c:239:
+	newmem = kmalloc(size + mem.nregions * sizeof *m->regions, GFP_KERNEL);

WARNING:SIZEOF_PARENTHESIS: sizeof *m->regions should be sizeof(*m->regions)
#1073: FILE: drivers/vhost/vhost.c:245:
+			   mem.nregions * sizeof *m->regions);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1089: FILE: drivers/vhost/vhost.c:261:
+	int r = put_user(vq->used_flags, &used->flags);
+	if (r)

WARNING:SIZEOF_PARENTHESIS: sizeof s should be sizeof(s)
#1119: FILE: drivers/vhost/vhost.c:291:
+		r = copy_from_user(&s, argp, sizeof s);

WARNING:SIZEOF_PARENTHESIS: sizeof s should be sizeof(s)
#1129: FILE: drivers/vhost/vhost.c:301:
+		r = copy_from_user(&s, argp, sizeof s);

WARNING:SIZEOF_PARENTHESIS: sizeof s should be sizeof(s)
#1143: FILE: drivers/vhost/vhost.c:315:
+		r = copy_to_user(argp, &s, sizeof s);

WARNING:SIZEOF_PARENTHESIS: sizeof a should be sizeof(a)
#1146: FILE: drivers/vhost/vhost.c:318:
+		r = copy_from_user(&a, argp, sizeof a);

WARNING:SIZEOF_PARENTHESIS: sizeof *vq->avail->ring should be sizeof(*vq->avail->ring)
#1159: FILE: drivers/vhost/vhost.c:331:
+		if ((a.avail_user_addr & (sizeof *vq->avail->ring - 1)) ||

WARNING:SIZEOF_PARENTHESIS: sizeof *vq->used->ring should be sizeof(*vq->used->ring)
#1160: FILE: drivers/vhost/vhost.c:332:
+		    (a.used_user_addr & (sizeof *vq->used->ring - 1)) ||

WARNING:SIZEOF_PARENTHESIS: sizeof *vq->used->ring should be sizeof(*vq->used->ring)
#1161: FILE: drivers/vhost/vhost.c:333:
+		    (a.log_guest_addr & (sizeof *vq->used->ring - 1))) {

WARNING:SIZEOF_PARENTHESIS: sizeof f should be sizeof(f)
#1175: FILE: drivers/vhost/vhost.c:347:
+		r = copy_from_user(&f, argp, sizeof f);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1181: FILE: drivers/vhost/vhost.c:353:
+		if (eventfp != vq->kick) {
[...]
+		} else
[...]

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1182: FILE: drivers/vhost/vhost.c:354:
+			pollstop = filep = vq->kick;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1183: FILE: drivers/vhost/vhost.c:355:
+			pollstart = vq->kick = eventfp;

CHECK:BRACES: Unbalanced braces around else statement
#1184: FILE: drivers/vhost/vhost.c:356:
+		} else

WARNING:SIZEOF_PARENTHESIS: sizeof f should be sizeof(f)
#1188: FILE: drivers/vhost/vhost.c:360:
+		r = copy_from_user(&f, argp, sizeof f);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1194: FILE: drivers/vhost/vhost.c:366:
+		if (eventfp != vq->call) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1200: FILE: drivers/vhost/vhost.c:372:
+		} else

WARNING:SIZEOF_PARENTHESIS: sizeof f should be sizeof(f)
#1204: FILE: drivers/vhost/vhost.c:376:
+		r = copy_from_user(&f, argp, sizeof f);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1210: FILE: drivers/vhost/vhost.c:382:
+		if (eventfp != vq->error) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1216: FILE: drivers/vhost/vhost.c:388:
+		} else

WARNING:SIZEOF_PARENTHESIS: sizeof p should be sizeof(p)
#1267: FILE: drivers/vhost/vhost.c:439:
+		r = copy_from_user(&p, argp, sizeof p);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1289: FILE: drivers/vhost/vhost.c:461:
+		if (eventfp != d->log_file) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1294: FILE: drivers/vhost/vhost.c:466:
+		} else

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1321: FILE: drivers/vhost/vhost.c:493:
+	 * regions in practice */

WARNING:LINE_SPACING: Missing a blank line after declarations
#1342: FILE: drivers/vhost/vhost.c:514:
+	int r;
+	r = get_user_pages_fast(log, 1, 1, &page);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1357: FILE: drivers/vhost/vhost.c:529:
+	int r;
+	if (!write_length)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1364: FILE: drivers/vhost/vhost.c:536:
+		int bit = write_address % 8;
+		if ((u64)(unsigned long)log != log)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1386: FILE: drivers/vhost/vhost.c:558:
+		u64 l = min(log[i].len, len);
+		r = log_write(vq->log_base, log[i].addr, l);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1396: FILE: drivers/vhost/vhost.c:568:
+	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LINE_SPACING: Missing a blank line after declarations
#1414: FILE: drivers/vhost/vhost.c:586:
+		u64 size;
+		if (ret >= iov_size) {

WARNING:MINMAX: min() should probably be min_t(u64, len, size)
#1425: FILE: drivers/vhost/vhost.c:597:
+		_iov->iov_len = min((u64)len, size);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1439: FILE: drivers/vhost/vhost.c:611:
+ * or -1U if we're at the end. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1440: FILE: drivers/vhost/vhost.c:612:
+static unsigned next_desc(struct vring_desc *desc)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1452: FILE: drivers/vhost/vhost.c:624:
+	 * architectures only need a compiler barrier here. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1458: FILE: drivers/vhost/vhost.c:630:
+static unsigned get_indirect(struct vhost_dev *dev, struct vhost_virtqueue *vq,

WARNING:SIZEOF_PARENTHESIS: sizeof desc should be sizeof(desc)
#1469: FILE: drivers/vhost/vhost.c:641:
+	if (indirect->len % sizeof desc) {

WARNING:SPLIT_STRING: quoted string split across lines
#1471: FILE: drivers/vhost/vhost.c:643:
+		vq_err(vq, "Invalid length in indirect descriptor: "
+		       "len 0x%llx not multiple of 0x%zx\n",

WARNING:SIZEOF_PARENTHESIS: sizeof desc should be sizeof(desc)
#1473: FILE: drivers/vhost/vhost.c:645:
+		       sizeof desc);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1485: FILE: drivers/vhost/vhost.c:657:
+	 * architectures only need a compiler barrier here. */

WARNING:SIZEOF_PARENTHESIS: sizeof desc should be sizeof(desc)
#1488: FILE: drivers/vhost/vhost.c:660:
+	count = indirect->len / sizeof desc;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1490: FILE: drivers/vhost/vhost.c:662:
+	 * we can have at most 2^16 of these. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1498: FILE: drivers/vhost/vhost.c:670:
+		unsigned iov_count = *in_num + *out_num;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1499: FILE: drivers/vhost/vhost.c:671:
+		unsigned iov_count = *in_num + *out_num;
+		if (++found > count) {

WARNING:SPLIT_STRING: quoted string split across lines
#1501: FILE: drivers/vhost/vhost.c:673:
+			vq_err(vq, "Loop detected: last one at %u "
+			       "indirect size %u\n",

WARNING:SIZEOF_PARENTHESIS: sizeof desc should be sizeof(desc)
#1506: FILE: drivers/vhost/vhost.c:678:
+				     sizeof desc)) {

WARNING:SIZEOF_PARENTHESIS: sizeof desc should be sizeof(desc)
#1508: FILE: drivers/vhost/vhost.c:680:
+			       i, (size_t)indirect->addr + i * sizeof desc);

WARNING:SIZEOF_PARENTHESIS: sizeof desc should be sizeof(desc)
#1513: FILE: drivers/vhost/vhost.c:685:
+			       i, (size_t)indirect->addr + i * sizeof desc);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1534: FILE: drivers/vhost/vhost.c:706:
+			 * to come before any input descriptors. */

WARNING:SPLIT_STRING: quoted string split across lines
#1537: FILE: drivers/vhost/vhost.c:709:
+				vq_err(vq, "Indirect descriptor "
+				       "has out after in: idx %d\n", i);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1552: FILE: drivers/vhost/vhost.c:724:
+ * is never a valid descriptor number) if none was found. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1553: FILE: drivers/vhost/vhost.c:725:
+unsigned vhost_get_vq_desc(struct vhost_dev *dev, struct vhost_virtqueue *vq,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1585: FILE: drivers/vhost/vhost.c:757:
+	 * the index we've seen. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1607: FILE: drivers/vhost/vhost.c:779:
+		unsigned iov_count = *in_num + *out_num;

WARNING:LINE_SPACING: Missing a blank line after declarations
#1608: FILE: drivers/vhost/vhost.c:780:
+		unsigned iov_count = *in_num + *out_num;
+		if (i >= vq->num) {

WARNING:SPLIT_STRING: quoted string split across lines
#1615: FILE: drivers/vhost/vhost.c:787:
+			vq_err(vq, "Loop detected: last one at %u "
+			       "vq size %u head %u\n",

WARNING:SIZEOF_PARENTHESIS: sizeof desc should be sizeof(desc)
#1619: FILE: drivers/vhost/vhost.c:791:
+		ret = copy_from_user(&desc, vq->desc + i, sizeof desc);

WARNING:SPLIT_STRING: quoted string split across lines
#1631: FILE: drivers/vhost/vhost.c:803:
+				vq_err(vq, "Failure detected "
+				       "in indirect descriptor at idx %d\n", i);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1646: FILE: drivers/vhost/vhost.c:818:
+			 * increment that count. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1655: FILE: drivers/vhost/vhost.c:827:
+			 * to come before any input descriptors. */

WARNING:SPLIT_STRING: quoted string split across lines
#1658: FILE: drivers/vhost/vhost.c:830:
+				vq_err(vq, "Descriptor has out after in: "
+				       "idx %d\n", i);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1677: FILE: drivers/vhost/vhost.c:849:
+ * want to notify the guest, using eventfd. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1683: FILE: drivers/vhost/vhost.c:855:
+	 * next entry in that used ring. */

WARNING:SIZEOF_PARENTHESIS: sizeof *vq->used->ring should be sizeof(*vq->used->ring)
#1702: FILE: drivers/vhost/vhost.c:874:
+		log_write(vq->log_base, vq->log_addr + sizeof *vq->used->ring *

WARNING:SIZEOF_PARENTHESIS: sizeof *vq->used->ring should be sizeof(*vq->used->ring)
#1704: FILE: drivers/vhost/vhost.c:876:
+			  sizeof *vq->used->ring);

WARNING:SIZEOF_PARENTHESIS: sizeof *vq->used->ring should be sizeof(*vq->used->ring)
#1705: FILE: drivers/vhost/vhost.c:877:
+		log_write(vq->log_base, vq->log_addr, sizeof *vq->used->ring);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1717: FILE: drivers/vhost/vhost.c:889:
+	__u16 flags = 0;
+	if (get_user(flags, &vq->avail->flags)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1747: FILE: drivers/vhost/vhost.c:919:
+	int r;
+	if (!(vq->used_flags & VRING_USED_F_NO_NOTIFY))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1757: FILE: drivers/vhost/vhost.c:929:
+	 * sure it's written, then check again. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#1773: FILE: drivers/vhost/vhost.c:945:
+	int r;
+	if (vq->used_flags & VRING_USED_F_NO_NOTIFY)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1800: FILE: drivers/vhost/vhost.h:1:
+#ifndef _VHOST_H

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1893: FILE: drivers/vhost/vhost.h:94:
+	 * Writers use virtqueue mutex. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1903: FILE: drivers/vhost/vhost.h:104:
+	 * Writers use mutex below.*/

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#1906: FILE: drivers/vhost/vhost.h:107:
+	struct mutex mutex;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1907: FILE: drivers/vhost/vhost.h:108:
+	unsigned acked_features;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vhost_dev *' should also have an identifier name
#1914: FILE: drivers/vhost/vhost.h:115:
+long vhost_dev_init(struct vhost_dev *, struct vhost_virtqueue *vqs, int nvqs);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vhost_dev *' should also have an identifier name
#1915: FILE: drivers/vhost/vhost.h:116:
+long vhost_dev_check_owner(struct vhost_dev *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vhost_dev *' should also have an identifier name
#1916: FILE: drivers/vhost/vhost.h:117:
+long vhost_dev_reset_owner(struct vhost_dev *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vhost_dev *' should also have an identifier name
#1917: FILE: drivers/vhost/vhost.h:118:
+void vhost_dev_cleanup(struct vhost_dev *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vhost_dev *' should also have an identifier name
#1918: FILE: drivers/vhost/vhost.h:119:
+long vhost_dev_ioctl(struct vhost_dev *, unsigned int ioctl, unsigned long arg);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1920: FILE: drivers/vhost/vhost.h:121:
+unsigned vhost_get_vq_desc(struct vhost_dev *, struct vhost_virtqueue *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vhost_dev *' should also have an identifier name
#1920: FILE: drivers/vhost/vhost.h:121:
+unsigned vhost_get_vq_desc(struct vhost_dev *, struct vhost_virtqueue *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vhost_virtqueue *' should also have an identifier name
#1920: FILE: drivers/vhost/vhost.h:121:
+unsigned vhost_get_vq_desc(struct vhost_dev *, struct vhost_virtqueue *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vhost_virtqueue *' should also have an identifier name
#1924: FILE: drivers/vhost/vhost.h:125:
+void vhost_discard_vq_desc(struct vhost_virtqueue *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vhost_virtqueue *' should also have an identifier name
#1926: FILE: drivers/vhost/vhost.h:127:
+int vhost_add_used(struct vhost_virtqueue *, unsigned int head, int len);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vhost_dev *' should also have an identifier name
#1927: FILE: drivers/vhost/vhost.h:128:
+void vhost_signal(struct vhost_dev *, struct vhost_virtqueue *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vhost_virtqueue *' should also have an identifier name
#1927: FILE: drivers/vhost/vhost.h:128:
+void vhost_signal(struct vhost_dev *, struct vhost_virtqueue *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vhost_dev *' should also have an identifier name
#1928: FILE: drivers/vhost/vhost.h:129:
+void vhost_add_used_and_signal(struct vhost_dev *, struct vhost_virtqueue *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vhost_virtqueue *' should also have an identifier name
#1928: FILE: drivers/vhost/vhost.h:129:
+void vhost_add_used_and_signal(struct vhost_dev *, struct vhost_virtqueue *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vhost_virtqueue *' should also have an identifier name
#1930: FILE: drivers/vhost/vhost.h:131:
+void vhost_disable_notify(struct vhost_virtqueue *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vhost_virtqueue *' should also have an identifier name
#1931: FILE: drivers/vhost/vhost.h:132:
+bool vhost_enable_notify(struct vhost_virtqueue *);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'vq' - possible side-effects?
#1939: FILE: drivers/vhost/vhost.h:140:
+#define vq_err(vq, fmt, ...) do {                                  \
+		pr_debug(pr_fmt(fmt), ##__VA_ARGS__);       \
+		if ((vq)->error_ctx)                               \
+				eventfd_signal((vq)->error_ctx, 1);\
+	} while (0)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#1941: FILE: drivers/vhost/vhost.h:142:
+		if ((vq)->error_ctx)                               \
+				eventfd_signal((vq)->error_ctx, 1);\

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1954: FILE: drivers/vhost/vhost.h:155:
+	unsigned acked_features = rcu_dereference(dev->acked_features);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1955: FILE: drivers/vhost/vhost.h:156:
+	unsigned acked_features = rcu_dereference(dev->acked_features);
+	return acked_features & (1 << bit);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1989: FILE: include/linux/vhost.h:1:
+#ifndef _LINUX_VHOST_H

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2034: FILE: include/linux/vhost.h:46:
+	 * address. Address must be 32 bit aligned. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2059: FILE: include/linux/vhost.h:71:
+ * vhost specific features. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2065: FILE: include/linux/vhost.h:77:
+ * VHOST_OWNER_SET fail until VHOST_OWNER_RESET is called. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2068: FILE: include/linux/vhost.h:80:
+ * Allows subsequent call to VHOST_OWNER_SET to succeed. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2077: FILE: include/linux/vhost.h:89:
+ * The bit is set using an atomic 32 bit operation. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2085: FILE: include/linux/vhost.h:97:
+ * be modified while ring is running (bound to a device). */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2095: FILE: include/linux/vhost.h:107:
+ * for events. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2109: FILE: include/linux/vhost.h:121:
+ * device.  This can be used to stop the ring (e.g. for migration). */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000050145.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 143 warnings, 17 checks, 1958 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000050145.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
