CHECK:SPACING: No space is necessary after a cast
#58: FILE: drivers/block/cciss_scsi.c:1200:
+			addr64 = (__u64) sg_dma_address(&sg->sg[i]);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#72: FILE: drivers/block/cciss_scsi.c:1212:
+	cp->Header.SGList = (__u8) count;   /* no. SGs contig in this cmd */

CHECK:CAMELCASE: Avoid CamelCase: <Header>
#72: FILE: drivers/block/cciss_scsi.c:1212:
+	cp->Header.SGList = (__u8) count;   /* no. SGs contig in this cmd */

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <SGList>
#72: FILE: drivers/block/cciss_scsi.c:1212:
+	cp->Header.SGList = (__u8) count;   /* no. SGs contig in this cmd */

CHECK:SPACING: No space is necessary after a cast
#73: FILE: drivers/block/cciss_scsi.c:1213:
+	cp->Header.SGTotal = (__u16) count; /* total sgs in this cmd list */

CHECK:CAMELCASE: Avoid CamelCase: <SGTotal>
#73: FILE: drivers/block/cciss_scsi.c:1213:
+	cp->Header.SGTotal = (__u16) count; /* total sgs in this cmd list */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#75: FILE: drivers/block/cciss_scsi.c:1215:
+	BUG_ON(count > MAXSGENTRIES);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#157: FILE: drivers/scsi/scsi_lib.c:757:
+	BUG_ON(!num);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#340: FILE: drivers/scsi/scsi_lib.c:1063:
+		BUG();

ERROR:SPACING: space required after that ',' (ctx:VxV)
#413: FILE: drivers/scsi/scsi_lib_dma.c:41:
+		dma_unmap_sg_ring(dev, scsi_sgring(cmd),cmd->sc_data_direction);
 		                                       ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#459: FILE: include/scsi/scsi_cmnd.h:127:
+extern struct sg_ring *scsi_alloc_sgring(struct scsi_cmnd *, unsigned, gfp_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#459: FILE: include/scsi/scsi_cmnd.h:127:
+extern struct sg_ring *scsi_alloc_sgring(struct scsi_cmnd *, unsigned, gfp_t);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scsi_cmnd *' should also have an identifier name
#459: FILE: include/scsi/scsi_cmnd.h:127:
+extern struct sg_ring *scsi_alloc_sgring(struct scsi_cmnd *, unsigned, gfp_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#459: FILE: include/scsi/scsi_cmnd.h:127:
+extern struct sg_ring *scsi_alloc_sgring(struct scsi_cmnd *, unsigned, gfp_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'gfp_t' should also have an identifier name
#459: FILE: include/scsi/scsi_cmnd.h:127:
+extern struct sg_ring *scsi_alloc_sgring(struct scsi_cmnd *, unsigned, gfp_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#460: FILE: include/scsi/scsi_cmnd.h:128:
+extern void scsi_free_sgring(struct scsi_cmnd *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scsi_cmnd *' should also have an identifier name
#460: FILE: include/scsi/scsi_cmnd.h:128:
+extern void scsi_free_sgring(struct scsi_cmnd *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000345339.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 8 warnings, 8 checks, 418 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000345339.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
