WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#50: FILE: drivers/net/Kconfig:3102:
+config VBUS_ENET
+	tristate "Virtual Ethernet Driver"
+	depends on VBUS_DRIVERS
+	help
+	   A virtualized 802.x network device based on the VBUS interface.
+	   It can be used with any hypervisor/kernel that supports the
+	   vbus protocol.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#58: FILE: drivers/net/Kconfig:3110:
+config VBUS_ENET_DEBUG
+        bool "Enable Debugging"
+	depends on VBUS_ENET
+	default n
+

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#77: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#82: FILE: drivers/net/vbus-enet.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#129: FILE: drivers/net/vbus-enet.c:48:
+#  define PDEBUG(fmt, args...) printk(KERN_DEBUG "vbus_enet: " fmt, ## args)

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#140: FILE: drivers/net/vbus-enet.c:59:
+	spinlock_t                 lock;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#186: FILE: drivers/net/vbus-enet.c:105:
+/*
+ * ---------------

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#199: FILE: drivers/net/vbus-enet.c:118:
+	BUG_ON(!skb);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#217: FILE: drivers/net/vbus-enet.c:136:
+	/*
+	 * We want to iterate on the "valid" index.  By default the iterator

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#225: FILE: drivers/net/vbus-enet.c:144:
+	BUG_ON(ret < 0);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#228: FILE: drivers/net/vbus-enet.c:147:
+	/*
+	 * Seek to the tail of the valid index (which should be our first

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#232: FILE: drivers/net/vbus-enet.c:151:
+	BUG_ON(ret < 0);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#235: FILE: drivers/net/vbus-enet.c:154:
+	/*
+	 * Now populate each descriptor with an empty SKB and mark it valid

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#241: FILE: drivers/net/vbus-enet.c:160:
+		/*
+		 * This push operation will simultaneously advance the

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#246: FILE: drivers/net/vbus-enet.c:165:
+		BUG_ON(ret < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#258: FILE: drivers/net/vbus-enet.c:177:
+	BUG_ON(ret < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#261: FILE: drivers/net/vbus-enet.c:180:
+	BUG_ON(ret < 0);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#264: FILE: drivers/net/vbus-enet.c:183:
+	/*
+	 * free each valid descriptor

WARNING:MEMORY_BARRIER: memory barrier without comment
#270: FILE: drivers/net/vbus-enet.c:189:
+		wmb();

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#276: FILE: drivers/net/vbus-enet.c:195:
+		BUG_ON(ret < 0);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#283: FILE: drivers/net/vbus-enet.c:202:
+/*
+ * Open and close

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#293: FILE: drivers/net/vbus-enet.c:212:
+	BUG_ON(ret < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#309: FILE: drivers/net/vbus-enet.c:228:
+	BUG_ON(ret < 0);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#315: FILE: drivers/net/vbus-enet.c:234:
+/*
+ * Configuration changes (passed on by ifconfig)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#325: FILE: drivers/net/vbus-enet.c:244:
+		printk(KERN_WARNING "vbus_enet: Can't change I/O address\n");

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#358: FILE: drivers/net/vbus-enet.c:277:
+	/*
+	 * FLUSHRX will cause the device to flush any outstanding

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#364: FILE: drivers/net/vbus-enet.c:283:
+	BUG_ON(ret < 0);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#372: FILE: drivers/net/vbus-enet.c:291:
+/*
+ * The poll implementation.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#387: FILE: drivers/net/vbus-enet.c:306:
+	BUG_ON(ret < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#390: FILE: drivers/net/vbus-enet.c:309:
+	BUG_ON(ret < 0);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#393: FILE: drivers/net/vbus-enet.c:312:
+	/*
+	 * We stop if we have met the quota or there are no more packets.

WARNING:MEMORY_BARRIER: memory barrier without comment
#413: FILE: drivers/net/vbus-enet.c:332:
+			mb();

CHECK:BRACES: Unbalanced braces around else statement
#414: FILE: drivers/net/vbus-enet.c:333:
+		} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#416: FILE: drivers/net/vbus-enet.c:335:
+			/*
+			 * the device may send a zero-length packet when its

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#427: FILE: drivers/net/vbus-enet.c:346:
+		BUG_ON(ret < 0);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#433: FILE: drivers/net/vbus-enet.c:352:
+	/*
+	 * If we processed all packets, we're done; tell the kernel and

WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#434: FILE: drivers/net/vbus-enet.c:353:
+	 * reenable ints
 	   ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: Unbalanced braces around else statement
#440: FILE: drivers/net/vbus-enet.c:359:
+	} else

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#448: FILE: drivers/net/vbus-enet.c:367:
+/*
+ * Transmit a packet (called by the kernel)

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#464: FILE: drivers/net/vbus-enet.c:383:
+		/*
+		 * We must flow-control the kernel by disabling the

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#469: FILE: drivers/net/vbus-enet.c:388:
+		printk(KERN_ERR "VBUS_ENET: tx on full queue bug "	\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#469: FILE: drivers/net/vbus-enet.c:388:
+		printk(KERN_ERR "VBUS_ENET: tx on full queue bug "	\

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#475: FILE: drivers/net/vbus-enet.c:394:
+	/*
+	 * We want to iterate on the tail of both the "inuse" and "valid" index

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#480: FILE: drivers/net/vbus-enet.c:399:
+	BUG_ON(ret < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#483: FILE: drivers/net/vbus-enet.c:402:
+	BUG_ON(ret < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#484: FILE: drivers/net/vbus-enet.c:403:
+	BUG_ON(iter.desc->sown);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#487: FILE: drivers/net/vbus-enet.c:406:
+	/*
+	 * We simply put the skb right onto the ring.  We will get an interrupt

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#500: FILE: drivers/net/vbus-enet.c:419:
+	/*
+	 * This advances both indexes together implicitly, and then

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#504: FILE: drivers/net/vbus-enet.c:423:
+	BUG_ON(ret < 0);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#510: FILE: drivers/net/vbus-enet.c:429:
+		/*
+		 * If the queue is congested, we must flow-control the kernel

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#522: FILE: drivers/net/vbus-enet.c:441:
+/*
+ * reclaim any outstanding completed tx packets

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#533: FILE: drivers/net/vbus-enet.c:452:
+	/*
+	 * We want to iterate on the head of the valid index, but we

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#539: FILE: drivers/net/vbus-enet.c:458:
+	BUG_ON(ret < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#542: FILE: drivers/net/vbus-enet.c:461:
+	BUG_ON(ret < 0);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#545: FILE: drivers/net/vbus-enet.c:464:
+	/*
+	 * We are done once we find the first packet either invalid or still

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#561: FILE: drivers/net/vbus-enet.c:480:
+		BUG_ON(ret < 0);

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#565: FILE: drivers/net/vbus-enet.c:484:
+	/*
+	 * If we were previously stopped due to flow control, restart the

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#569: FILE: drivers/net/vbus-enet.c:488:
+	if (netif_queue_stopped(priv->dev)
+	    && !ioq_full(priv->txq.queue, ioq_idxtype_valid)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#581: FILE: drivers/net/vbus-enet.c:500:
+	printk(KERN_DEBUG "VBUS_ENET %lld: Transmit timeout\n", priv->vdev->id);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'deferred_tx_isr', this function's name, in a string
#607: FILE: drivers/net/vbus-enet.c:526:
+	PDEBUG("deferred_tx_isr for %lld\n", priv->vdev->id);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#619: FILE: drivers/net/vbus-enet.c:538:
+       struct vbus_enet_priv *priv;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#620: FILE: drivers/net/vbus-enet.c:539:
+       unsigned long flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#622: FILE: drivers/net/vbus-enet.c:541:
+       priv = container_of(notifier, struct vbus_enet_priv, txq.notifier);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#624: FILE: drivers/net/vbus-enet.c:543:
+       PDEBUG("tx_isr for %lld\n", priv->vdev->id);$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tx_isr', this function's name, in a string
#624: FILE: drivers/net/vbus-enet.c:543:
+       PDEBUG("tx_isr for %lld\n", priv->vdev->id);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#626: FILE: drivers/net/vbus-enet.c:545:
+       ioq_notify_disable(priv->txq.queue, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#627: FILE: drivers/net/vbus-enet.c:546:
+       tasklet_schedule(&priv->txtask);$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#640: FILE: drivers/net/vbus-enet.c:559:
+/*
+ * This is called whenever a new vbus_device_proxy is added to the vbus

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#650: FILE: drivers/net/vbus-enet.c:569:
+	printk(KERN_INFO "VBUS_ENET: Found new device at %lld\n", vdev->id);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#683: FILE: drivers/net/vbus-enet.c:602:
+		printk(KERN_INFO "VENET: Error obtaining MAC address for " \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#683: FILE: drivers/net/vbus-enet.c:602:
+		printk(KERN_INFO "VENET: Error obtaining MAC address for " \

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#693: FILE: drivers/net/vbus-enet.c:612:
+		printk(KERN_INFO "VENET: error %i registering device \"%s\"\n",

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#731: FILE: drivers/net/vbus-enet.c:650:
+/*
+ * Finally, the module stuff

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#748: FILE: drivers/net/vbus-enet.c:667:
+	printk(KERN_INFO "Virtual Ethernet: Copyright (C) 2009 Novell, Gregory Haskins\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#749: FILE: drivers/net/vbus-enet.c:668:
+	printk(KERN_DEBUG "VBUSENET: Using %d/%d queue depth\n",

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000141517.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 72 warnings, 4 checks, 704 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000141517.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
