WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#71: 
I registered block_is_partially_uptodate in fs/buffer.c to ext2,ext3,ext4's aops.

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#84: FILE: fs/buffer.c:2088:
+ * uptodate or not.
    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#87: FILE: fs/buffer.c:2091:
+ * we want to read are uptodate.
                        ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#90: FILE: fs/buffer.c:2094:
+int block_is_partially_uptodate(struct page *page, read_descriptor_t *desc,
+					unsigned long from)

CHECK:BRACES: braces {} should be used on all arms of this statement
#113: FILE: fs/buffer.c:2117:
+		if (block_end <= from || block_start >= to)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#115: FILE: fs/buffer.c:2119:
+		else {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#336: FILE: include/linux/fs.h:451:
+typedef struct {

WARNING:SPACING: Unnecessary space before function pointer arguments
#355: FILE: include/linux/fs.h:504:
+	int (*is_partially_uptodate) (struct page *, read_descriptor_t *,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#355: FILE: include/linux/fs.h:504:
+	int (*is_partially_uptodate) (struct page *, read_descriptor_t *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'read_descriptor_t *' should also have an identifier name
#355: FILE: include/linux/fs.h:504:
+	int (*is_partially_uptodate) (struct page *, read_descriptor_t *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#355: FILE: include/linux/fs.h:504:
+	int (*is_partially_uptodate) (struct page *, read_descriptor_t *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#356: FILE: include/linux/fs.h:505:
+	int (*is_partially_uptodate) (struct page *, read_descriptor_t *,
+					unsigned long);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#399: FILE: mm/filemap.c:937:
+			if (inode->i_blkbits == PAGE_CACHE_SHIFT ||
+					!mapping->a_ops->is_partially_uptodate)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#404: FILE: mm/filemap.c:942:
+			if (!mapping->a_ops->is_partially_uptodate(page,
+								desc, offset))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000276942.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 6 checks, 312 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000276942.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
