WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#35: 
# HG changeset patch

Commit log lines starting with a '#' are ignored by git as
comments.  To solve this problem addition of a single space
infront of the log line is enough.

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#36: 
# User Andrea Arcangeli <andrea@qumranet.com>

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#37: 
# Date 1207158873 -7200

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#38: 
# Node ID a406c0cc686d0ca94a4d890d661cdfa48cfba09f

WARNING:COMMIT_COMMENT_SYMBOL: Commit log lines starting with '#' are dropped by git as comments
#39: 
# Parent  249e077dc932a5322e04ac1d69326622ea4023b8

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#69: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#73: FILE: include/linux/mmu_notifier.h:1:
+#ifndef _LINUX_MMU_NOTIFIER_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#142: FILE: include/linux/mmu_notifier.h:70:
+extern void mmu_notifier_register(struct mmu_notifier *mn,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#144: FILE: include/linux/mmu_notifier.h:72:
+extern void __mmu_notifier_release(struct mm_struct *mm);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#145: FILE: include/linux/mmu_notifier.h:73:
+extern int __mmu_notifier_clear_flush_young(struct mm_struct *mm,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#146: FILE: include/linux/mmu_notifier.h:74:
+extern int __mmu_notifier_clear_flush_young(struct mm_struct *mm,
+					  unsigned long address);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#147: FILE: include/linux/mmu_notifier.h:75:
+extern void __mmu_notifier_invalidate_page(struct mm_struct *mm,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#148: FILE: include/linux/mmu_notifier.h:76:
+extern void __mmu_notifier_invalidate_page(struct mm_struct *mm,
+					  unsigned long address);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#149: FILE: include/linux/mmu_notifier.h:77:
+extern void __mmu_notifier_invalidate_range_start(struct mm_struct *mm,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#150: FILE: include/linux/mmu_notifier.h:78:
+extern void __mmu_notifier_invalidate_range_start(struct mm_struct *mm,
+				  unsigned long start, unsigned long end);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#151: FILE: include/linux/mmu_notifier.h:79:
+extern void __mmu_notifier_invalidate_range_end(struct mm_struct *mm,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#152: FILE: include/linux/mmu_notifier.h:80:
+extern void __mmu_notifier_invalidate_range_end(struct mm_struct *mm,
+				  unsigned long start, unsigned long end);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#154: FILE: include/linux/mmu_notifier.h:82:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#162: FILE: include/linux/mmu_notifier.h:90:
+static inline int mmu_notifier_clear_flush_young(struct mm_struct *mm,
+					  unsigned long address)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#170: FILE: include/linux/mmu_notifier.h:98:
+static inline void mmu_notifier_invalidate_page(struct mm_struct *mm,
+					  unsigned long address)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#177: FILE: include/linux/mmu_notifier.h:105:
+static inline void mmu_notifier_invalidate_range_start(struct mm_struct *mm,
+				  unsigned long start, unsigned long end)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#184: FILE: include/linux/mmu_notifier.h:112:
+static inline void mmu_notifier_invalidate_range_end(struct mm_struct *mm,
+				  unsigned long start, unsigned long end)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#224: FILE: include/linux/mmu_notifier.h:152:
+static inline int mmu_notifier_clear_flush_young(struct mm_struct *mm,
+					  unsigned long address)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#230: FILE: include/linux/mmu_notifier.h:158:
+static inline void mmu_notifier_invalidate_page(struct mm_struct *mm,
+					  unsigned long address)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#235: FILE: include/linux/mmu_notifier.h:163:
+static inline void mmu_notifier_invalidate_range_start(struct mm_struct *mm,
+				  unsigned long start, unsigned long end)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#240: FILE: include/linux/mmu_notifier.h:168:
+static inline void mmu_notifier_invalidate_range_end(struct mm_struct *mm,
+				  unsigned long start, unsigned long end)

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#281: FILE: mm/Kconfig:197:
+config MMU_NOTIFIER
+	def_bool y
+	bool "MMU notifier, for paging KVM/RDMA"

Kconfig symbols should have a help text which fully describes
it.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#381: FILE: mm/memory.c:631:
+		mmu_notifier_invalidate_range_end(src_mm,
+						vma->vm_start, end);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#464: FILE: mm/mmu_notifier.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#465: FILE: mm/mmu_notifier.c:2:
+ *  linux/mm/mmu_notifier.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#486: FILE: mm/mmu_notifier.c:23:
+	unsigned seq;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#496: FILE: mm/mmu_notifier.c:33:
+		BUG_ON(read_seqretry(&mm->mmu_notifier_lock, seq));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#506: FILE: mm/mmu_notifier.c:43:
+int __mmu_notifier_clear_flush_young(struct mm_struct *mm,
+					unsigned long address)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#511: FILE: mm/mmu_notifier.c:48:
+	unsigned seq;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#526: FILE: mm/mmu_notifier.c:63:
+void __mmu_notifier_invalidate_page(struct mm_struct *mm,
+					  unsigned long address)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#530: FILE: mm/mmu_notifier.c:67:
+	unsigned seq;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#542: FILE: mm/mmu_notifier.c:79:
+void __mmu_notifier_invalidate_range_start(struct mm_struct *mm,
+				  unsigned long start, unsigned long end)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#546: FILE: mm/mmu_notifier.c:83:
+	unsigned seq;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#559: FILE: mm/mmu_notifier.c:96:
+void __mmu_notifier_invalidate_range_end(struct mm_struct *mm,
+				  unsigned long start, unsigned long end)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#563: FILE: mm/mmu_notifier.c:100:
+	unsigned seq;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000299909.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 16 warnings, 24 checks, 577 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000299909.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
