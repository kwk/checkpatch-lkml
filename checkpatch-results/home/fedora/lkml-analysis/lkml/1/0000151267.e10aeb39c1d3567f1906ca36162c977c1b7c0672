CHECK:BRACES: braces {} should be used on all arms of this statement
#62: FILE: fs/fs-writeback.c:112:
+	if (!bdi_wblist_needs_lock(bdi))
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#64: FILE: fs/fs-writeback.c:114:
+	else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#109: FILE: fs/fs-writeback.c:728:
+	if (!bdi_wblist_needs_lock(bdi))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#111: FILE: fs/fs-writeback.c:730:
+	else {

WARNING:SPACING: Unnecessary space before function pointer arguments
#202: FILE: include/linux/fs.h:1386:
+	struct bdi_writeback *(*inode_get_wb) (struct inode *);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#202: FILE: include/linux/fs.h:1386:
+	struct bdi_writeback *(*inode_get_wb) (struct inode *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*wb)...) over kmalloc(sizeof(struct bdi_writeback)...)
#252: FILE: mm/backing-dev.c:260:
+		wb = kmalloc(sizeof(struct bdi_writeback), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:BRACES: braces {} should be used on all arms of this statement
#315: FILE: mm/backing-dev.c:332:
+	if (!bdi_wblist_needs_lock(bdi))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#317: FILE: mm/backing-dev.c:334:
+	else {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000151267.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 2 warnings, 7 checks, 317 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000151267.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
