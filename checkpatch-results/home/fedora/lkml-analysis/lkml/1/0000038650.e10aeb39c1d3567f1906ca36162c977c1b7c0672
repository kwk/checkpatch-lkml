WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
Add objects needed for user-space to maintain reference counts on ttm objects.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#54: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#59: FILE: drivers/gpu/drm/ttm/ttm_object.c:1:
+/**************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#116: FILE: drivers/gpu/drm/ttm/ttm_object.c:58:
+#include <asm/atomic.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#190: FILE: drivers/gpu/drm/ttm/ttm_object.c:132:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#199: FILE: drivers/gpu/drm/ttm/ttm_object.c:141:
+
+

WARNING:SPACING: Unnecessary space before function pointer arguments
#204: FILE: drivers/gpu/drm/ttm/ttm_object.c:146:
+			 void (*refcount_release) (struct ttm_base_object **),

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#205: FILE: drivers/gpu/drm/ttm/ttm_object.c:147:
+			 void (*ref_obj_release) (struct ttm_base_object *,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#293: FILE: drivers/gpu/drm/ttm/ttm_object.c:235:
+		printk(KERN_ERR TTM_PFX

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "existed"
#313: FILE: drivers/gpu/drm/ttm/ttm_object.c:255:
+	if (existed != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ref"
#333: FILE: drivers/gpu/drm/ttm/ttm_object.c:275:
+		if (unlikely(ref == NULL)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "existed"
#351: FILE: drivers/gpu/drm/ttm/ttm_object.c:293:
+			if (existed != NULL)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#357: FILE: drivers/gpu/drm/ttm/ttm_object.c:299:
+		BUG_ON(ret != -EINVAL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tfile"
#448: FILE: drivers/gpu/drm/ttm/ttm_object.c:390:
+	if (unlikely(tfile == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tdev"
#482: FILE: drivers/gpu/drm/ttm/ttm_object.c:424:
+	if (unlikely(tdev == NULL))

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#517: FILE: include/drm/ttm/ttm_object.h:1:
+/**************************************************************************

WARNING:TYPO_SPELLING: 'contol' may be misspelled - perhaps 'control'?
#631: FILE: include/drm/ttm/ttm_object.h:115:
+ * access and refcounting, minimal access contol and hooks for unref actions.
                                           ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACING: Unnecessary space before function pointer arguments
#640: FILE: include/drm/ttm/ttm_object.h:124:
+	void (*refcount_release) (struct ttm_base_object **base);

WARNING:SPACING: Unnecessary space before function pointer arguments
#641: FILE: include/drm/ttm/ttm_object.h:125:
+	void (*ref_obj_release) (struct ttm_base_object *base,

WARNING:TYPO_SPELLING: 'applcations' may be misspelled - perhaps 'applications'?
#650: FILE: include/drm/ttm/ttm_object.h:134:
+ * @shareable: This object is shareable with other applcations.
                                                    ^^^^^^^^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#659: FILE: include/drm/ttm/ttm_object.h:143:
+extern int ttm_base_object_init(struct ttm_object_file *tfile,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: Unnecessary space before function pointer arguments
#663: FILE: include/drm/ttm/ttm_object.h:147:
+				void (*refcount_release) (struct ttm_base_object

WARNING:SPACING: Unnecessary space before function pointer arguments
#665: FILE: include/drm/ttm/ttm_object.h:149:
+				void (*ref_obj_release) (struct ttm_base_object

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#681: FILE: include/drm/ttm/ttm_object.h:165:
+extern struct ttm_base_object *ttm_base_object_lookup(struct ttm_object_file

WARNING:TYPO_SPELLING: 'referncing' may be misspelled - perhaps 'referencing'?
#687: FILE: include/drm/ttm/ttm_object.h:171:
+ * @p_base: Pointer to a pointer referncing a struct ttm_base_object.
                                  ^^^^^^^^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#693: FILE: include/drm/ttm/ttm_object.h:177:
+extern void ttm_base_object_unref(struct ttm_base_object **p_base);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#714: FILE: include/drm/ttm/ttm_object.h:198:
+extern int ttm_ref_object_add(struct ttm_object_file *tfile,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#728: FILE: include/drm/ttm/ttm_object.h:212:
+extern int ttm_ref_object_base_unref(struct ttm_object_file *tfile,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#741: FILE: include/drm/ttm/ttm_object.h:225:
+extern struct ttm_object_file *ttm_object_file_init(struct ttm_object_device

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#756: FILE: include/drm/ttm/ttm_object.h:240:
+extern void ttm_object_file_release(struct ttm_object_file **p_tfile);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#768: FILE: include/drm/ttm/ttm_object.h:252:
+    (struct ttm_mem_global *mem_glob, unsigned int hash_order);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#781: FILE: include/drm/ttm/ttm_object.h:265:
+extern void ttm_object_device_release(struct ttm_object_device **p_tdev);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000038650.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 17 warnings, 15 checks, 727 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000038650.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
