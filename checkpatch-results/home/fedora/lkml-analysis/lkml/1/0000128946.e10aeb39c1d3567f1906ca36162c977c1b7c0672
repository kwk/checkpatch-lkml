WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
2.6.29-stable review patch.  If anyone has any objections, please let us know.

WARNING:UNKNOWN_COMMIT_ID: Unknown commit id '3e93cd671813e204c258f1e6c797959920cf7772', maybe rebased or not pulled?
#43: 
commit 3e93cd671813e204c258f1e6c797959920cf7772 upstream.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#69: FILE: fs/fs_struct.c:1:
+#include <linux/module.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#123: FILE: fs/fs_struct.c:55:
+			if (fs->root.dentry == old_root->dentry
+			    && fs->root.mnt == old_root->mnt) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#129: FILE: fs/fs_struct.c:61:
+			if (fs->pwd.dentry == old_root->dentry
+			    && fs->pwd.mnt == old_root->mnt) {

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#155: FILE: fs/fs_struct.c:87:
+	struct fs_struct * fs = tsk->fs;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#186: FILE: fs/fs_struct.c:118:
+	struct fs_struct *fsp = copy_fs_struct(current->fs);
+	if (!fsp)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#228: FILE: fs/internal.h:68:
+extern void chroot_fs_refs(struct path *, struct path *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct path *' should also have an identifier name
#228: FILE: fs/internal.h:68:
+extern void chroot_fs_refs(struct path *, struct path *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct path *' should also have an identifier name
#228: FILE: fs/internal.h:68:
+extern void chroot_fs_refs(struct path *, struct path *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#362: FILE: include/linux/fs_struct.h:23:
+extern void daemonize_fs_struct(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#363: FILE: include/linux/fs_struct.h:24:
+extern int unshare_fs_struct(void);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000128946.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 6 warnings, 5 checks, 366 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000128946.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
