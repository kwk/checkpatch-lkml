WARNING:TYPO_SPELLING: 'overriden' may be misspelled - perhaps 'overridden'?
#37: 
The mmap operation is overriden with a new function called
                      ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'retreive' may be misspelled - perhaps 'retrieve'?
#71: 
ioctl cmds (retreive dirty page offsets and copy the dirty pages from
            ^^^^^^^^

ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Kandan Venkataraman kandan.venkataraman@omxgroup.com'
#77: 
Signed-off-by: Kandan Venkataraman kandan.venkataraman@omxgroup.com

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:POINTER_LOCATION: "foo*  bar" should be "foo *bar"
#98: FILE: drivers/block/loop.c:85:
+static char*  cache_name = "loop_pgoff_elem_cache";

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct file_operations should normally be const
#99: FILE: drivers/block/loop.c:86:
+static struct file_operations loop_fops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: drivers/block/loop.c:655:
+ struct rb_node *rb_node  = rb_root->rb_node;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: drivers/block/loop.c:657:
+ while (rb_node != NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#111: FILE: drivers/block/loop.c:657:
+ while (rb_node != NULL) {
[...]
+  rb_erase(rb_node, rb_root); 

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rb_node"
#111: FILE: drivers/block/loop.c:657:
+ while (rb_node != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#112: FILE: drivers/block/loop.c:658:
+ while (rb_node != NULL) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#113: FILE: drivers/block/loop.c:659:
+  rb_erase(rb_node, rb_root); $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: drivers/block/loop.c:659:
+  rb_erase(rb_node, rb_root); $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: drivers/block/loop.c:660:
+  kmem_cache_free(pgoff_elem_cache, rb_entry(rb_node, struct$

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#115: FILE: drivers/block/loop.c:660:
pgoff_elem, node));

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: drivers/block/loop.c:661:
+  rb_node = rb_root->rb_node;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: drivers/block/loop.c:662:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: drivers/block/loop.c:664:
+  *rb_root = RB_ROOT;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#122: FILE: drivers/block/loop.c:667:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#125: FILE: drivers/block/loop.c:670:
+ struct file *filp = lo->lo_backing_file;
               ^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: drivers/block/loop.c:670:
+ struct file *filp = lo->lo_backing_file;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: drivers/block/loop.c:672:
+ if (lo->lo_state != Lo_bound)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#127: FILE: drivers/block/loop.c:672:
+ if (lo->lo_state != Lo_bound)
+  return -ENXIO;

CHECK:CAMELCASE: Avoid CamelCase: <Lo_bound>
#127: FILE: drivers/block/loop.c:672:
+ if (lo->lo_state != Lo_bound)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: drivers/block/loop.c:673:
+  return -ENXIO;$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#130: FILE: drivers/block/loop.c:675:
+ if (filp == NULL)
      ^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: drivers/block/loop.c:675:
+ if (filp == NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#130: FILE: drivers/block/loop.c:675:
+ if (filp == NULL)
+  return -EINVAL;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!filp"
#130: FILE: drivers/block/loop.c:675:
+ if (filp == NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: drivers/block/loop.c:676:
+  return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#133: FILE: drivers/block/loop.c:678:
+ if (!lo->lo_track_pgwrite)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 3)
#133: FILE: drivers/block/loop.c:678:
+ if (!lo->lo_track_pgwrite)
+   return 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#134: FILE: drivers/block/loop.c:679:
+   return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: drivers/block/loop.c:681:
+ pgoff_tree_clear(&lo->pgoff_tree);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: drivers/block/loop.c:683:
+ return 0;$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#144: FILE: drivers/block/loop.c:688:
+ struct file *filp = lo->lo_backing_file;
               ^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: drivers/block/loop.c:688:
+ struct file *filp = lo->lo_backing_file;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#145: FILE: drivers/block/loop.c:689:
+ struct loop_pgoff_array array;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: drivers/block/loop.c:690:
+ loff_t i = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: drivers/block/loop.c:691:
+ struct rb_node *rb_node  = rb_first(&lo->pgoff_tree);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: drivers/block/loop.c:693:
+ if (lo->lo_state != Lo_bound)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#149: FILE: drivers/block/loop.c:693:
+ if (lo->lo_state != Lo_bound)
+  return -ENXIO;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: drivers/block/loop.c:694:
+  return -ENXIO;$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#152: FILE: drivers/block/loop.c:696:
+ if (filp == NULL)
      ^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: drivers/block/loop.c:696:
+ if (filp == NULL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#152: FILE: drivers/block/loop.c:696:
+ if (filp == NULL)
+  return -EINVAL;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!filp"
#152: FILE: drivers/block/loop.c:696:
+ if (filp == NULL)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: drivers/block/loop.c:697:
+  return -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: drivers/block/loop.c:699:
+ if (!lo->lo_track_pgwrite)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 3)
#155: FILE: drivers/block/loop.c:699:
+ if (!lo->lo_track_pgwrite)
+   return 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: drivers/block/loop.c:700:
+   return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: drivers/block/loop.c:702:
+ if (copy_from_user(&array, arg, sizeof (struct loop_pgoff_array)))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#158: FILE: drivers/block/loop.c:702:
+ if (copy_from_user(&array, arg, sizeof (struct loop_pgoff_array)))
+  return -EFAULT;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#158: FILE: drivers/block/loop.c:702:
+ if (copy_from_user(&array, arg, sizeof (struct loop_pgoff_array)))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: drivers/block/loop.c:703:
+  return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: drivers/block/loop.c:705:
+ while (i < array.max && rb_node != NULL) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 3)
#161: FILE: drivers/block/loop.c:705:
+ while (i < array.max && rb_node != NULL) {
[...]
+   if (put_user(rb_entry(rb_node, struct pgoff_elem, node)->offset,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "rb_node"
#161: FILE: drivers/block/loop.c:705:
+ while (i < array.max && rb_node != NULL) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#162: FILE: drivers/block/loop.c:706:
+ while (i < array.max && rb_node != NULL) {
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: drivers/block/loop.c:707:
+   if (put_user(rb_entry(rb_node, struct pgoff_elem, node)->offset,$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 3)
#163: FILE: drivers/block/loop.c:707:
+   if (put_user(rb_entry(rb_node, struct pgoff_elem, node)->offset,
[...]
+   return -EFAULT;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#165: FILE: drivers/block/loop.c:708:
+   if (put_user(rb_entry(rb_node, struct pgoff_elem, node)->offset,
+   return -EFAULT;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: drivers/block/loop.c:708:
+   return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: drivers/block/loop.c:710:
+   ++i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: drivers/block/loop.c:711:
+   rb_node = rb_next(rb_node);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: drivers/block/loop.c:712:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: drivers/block/loop.c:713:
+ array.num = i;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: drivers/block/loop.c:715:
+ if (copy_to_user(arg, &array, sizeof(array)))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 3)
#172: FILE: drivers/block/loop.c:715:
+ if (copy_to_user(arg, &array, sizeof(array)))
+   return -EFAULT;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: drivers/block/loop.c:716:
+   return -EFAULT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#175: FILE: drivers/block/loop.c:718:
+ return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#184: FILE: drivers/block/loop.c:766:
+ pgoff_tree_clear(&lo->pgoff_tree);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: drivers/block/loop.c:875:
+ lo->lo_track_pgwrite = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: drivers/block/loop.c:876:
+ lo->pgoff_tree = RB_ROOT;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: drivers/block/loop.c:991:
+ lo->lo_track_pgwrite = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#204: FILE: drivers/block/loop.c:992:
+ pgoff_tree_clear(&lo->pgoff_tree);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: drivers/block/loop.c:1049:
+ if (info->lo_track_pgwrite)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 3)
#212: FILE: drivers/block/loop.c:1049:
+ if (info->lo_track_pgwrite)
+   lo->lo_track_pgwrite = 1;

CHECK:BRACES: braces {} should be used on all arms of this statement
#212: FILE: drivers/block/loop.c:1049:
+ if (info->lo_track_pgwrite)
[...]
+ else {
[...]

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: drivers/block/loop.c:1050:
+   lo->lo_track_pgwrite = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: drivers/block/loop.c:1051:
+ else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 3)
#214: FILE: drivers/block/loop.c:1051:
+ else {
+   if (lo->lo_track_pgwrite)

CHECK:BRACES: Unbalanced braces around else statement
#214: FILE: drivers/block/loop.c:1051:
+ else {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: drivers/block/loop.c:1052:
+   if (lo->lo_track_pgwrite)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (3, 3)
#215: FILE: drivers/block/loop.c:1052:
+   if (lo->lo_track_pgwrite)
+   pgoff_tree_clear(&lo->pgoff_tree);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: drivers/block/loop.c:1053:
+   pgoff_tree_clear(&lo->pgoff_tree);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: drivers/block/loop.c:1054:
+   lo->lo_track_pgwrite = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: drivers/block/loop.c:1055:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: drivers/block/loop.c:1099:
+ info->lo_track_pgwrite = lo->lo_track_pgwrite;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: drivers/block/loop.c:1125:
+ info64->lo_track_pgwrite = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: drivers/block/loop.c:1249:
+ case LOOP_GET_PGWRITES:$

CHECK:SPACING: No space is necessary after a cast
#244: FILE: drivers/block/loop.c:1250:
+  err = loop_get_pgwrites(lo, (struct loop_pgoff_array __user *) arg);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: drivers/block/loop.c:1250:
+  err = loop_get_pgwrites(lo, (struct loop_pgoff_array __user *) arg);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: drivers/block/loop.c:1251:
+  break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#246: FILE: drivers/block/loop.c:1252:
+ case LOOP_CLR_PGWRITES:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: drivers/block/loop.c:1253:
+  err = loop_clr_pgwrites(lo);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: drivers/block/loop.c:1254:
+  break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#256: FILE: drivers/block/loop.c:1301:
+ info64->lo_track_pgwrite = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: drivers/block/loop.c:1421:
+ struct rb_node ** p = &rb_root->rb_node;$

ERROR:POINTER_LOCATION: "foo ** bar" should be "foo **bar"
#267: FILE: drivers/block/loop.c:1421:
+ struct rb_node ** p = &rb_root->rb_node;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: drivers/block/loop.c:1422:
+ struct rb_node * parent = NULL;$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#268: FILE: drivers/block/loop.c:1422:
+ struct rb_node * parent = NULL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: drivers/block/loop.c:1423:
+ struct pgoff_elem *pgoff_elem;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: drivers/block/loop.c:1425:
+ while (*p)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#271: FILE: drivers/block/loop.c:1425:
+ while (*p)
+ {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 2)
#271: FILE: drivers/block/loop.c:1425:
+ while (*p)
+ {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: drivers/block/loop.c:1426:
+ {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: drivers/block/loop.c:1427:
+  parent = *p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: drivers/block/loop.c:1428:
+  pgoff_elem = rb_entry(parent, struct pgoff_elem, node);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: drivers/block/loop.c:1430:
+  if (offset < pgoff_elem->offset)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 3)
#276: FILE: drivers/block/loop.c:1430:
+  if (offset < pgoff_elem->offset)
+   p = &(*p)->rb_left;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: drivers/block/loop.c:1431:
+   p = &(*p)->rb_left;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: drivers/block/loop.c:1432:
+  else if (offset > pgoff_elem->offset)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 3)
#278: FILE: drivers/block/loop.c:1432:
+  else if (offset > pgoff_elem->offset)
+   p = &(*p)->rb_right;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: drivers/block/loop.c:1433:
+   p = &(*p)->rb_right;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#280: FILE: drivers/block/loop.c:1434:
+  else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 3)
#280: FILE: drivers/block/loop.c:1434:
+  else
+   return 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: drivers/block/loop.c:1435:
+   return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: drivers/block/loop.c:1436:
+ }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: drivers/block/loop.c:1438:
+ pgoff_elem = kmem_cache_alloc(pgoff_elem_cache, GFP_KERNEL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#285: FILE: drivers/block/loop.c:1439:
+ if (!pgoff_elem)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 3)
#285: FILE: drivers/block/loop.c:1439:
+ if (!pgoff_elem)
+   return -ENOMEM;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#286: FILE: drivers/block/loop.c:1440:
+   return -ENOMEM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#287: FILE: drivers/block/loop.c:1441:
+ pgoff_elem->offset = offset;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#289: FILE: drivers/block/loop.c:1443:
+ rb_link_node(&pgoff_elem->node, parent, p);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#290: FILE: drivers/block/loop.c:1444:
+ rb_insert_color(&pgoff_elem->node, rb_root);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: drivers/block/loop.c:1446:
+ return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: drivers/block/loop.c:1451:
+ struct file *file = vma->vm_file;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#299: FILE: drivers/block/loop.c:1452:
+ struct inode *inode = file->f_dentry->d_inode;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: drivers/block/loop.c:1453:
+ struct loop_device *lo = inode->i_bdev->bd_disk->private_data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: drivers/block/loop.c:1455:
+ return pgoff_tree_insert(&lo->pgoff_tree, page->index);$

WARNING:CONST_STRUCT: struct vm_operations_struct should normally be const
#305: FILE: drivers/block/loop.c:1458:
+struct vm_operations_struct loop_file_vm_ops = {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: drivers/block/loop.c:1459:
+ .nopage  = filemap_nopage,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: drivers/block/loop.c:1460:
+ .populate = filemap_populate,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: drivers/block/loop.c:1461:
+ .page_mkwrite = loop_track_pgwrites$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#311: FILE: drivers/block/loop.c:1464:
+static int loop_file_mmap(struct file * file, struct vm_area_struct *

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: drivers/block/loop.c:1467:
+  int err = generic_file_mmap(file, vma);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#317: FILE: drivers/block/loop.c:1469:
+  if (err)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 2)
#317: FILE: drivers/block/loop.c:1469:
+  if (err)
+  return err;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#318: FILE: drivers/block/loop.c:1470:
+  return err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: drivers/block/loop.c:1472:
+ vma->vm_ops = &loop_file_vm_ops;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: drivers/block/loop.c:1473:
+ return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: drivers/block/loop.c:1480:
+ file->f_op = &loop_fops;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#336: FILE: drivers/block/loop.c:1556:
+ struct inode inode;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#340: FILE: drivers/block/loop.c:1559:
+ /* a roundabout way to retrieve def_blk_fops but avoids undefined
+ init_special_inode(&inode, S_IFBLK, 0);

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: drivers/block/loop.c:1572:
+ pgoff_elem_cache = kmem_cache_create(cache_name, sizeof(struct$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: drivers/block/loop.c:1573:
+ if (!pgoff_elem_cache)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (1, 3)
#352: FILE: drivers/block/loop.c:1573:
+ if (!pgoff_elem_cache)
+   goto out_mem0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: drivers/block/loop.c:1574:
+   goto out_mem0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: drivers/block/loop.c:1629:
+ kmem_cache_destroy(pgoff_elem_cache);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#371: FILE: drivers/block/loop.c:1650:
+ kmem_cache_destroy(pgoff_elem_cache);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#393: FILE: include/linux/loop.h:38:
+ int  lo_track_pgwrite; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: include/linux/loop.h:38:
+ int  lo_track_pgwrite; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#394: FILE: include/linux/loop.h:39:
+ struct rb_root pgoff_tree;$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#403: FILE: include/linux/loop.h:73:
+struct pgoff_elem {
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#404: FILE: include/linux/loop.h:74:
+  struct rb_node node;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#405: FILE: include/linux/loop.h:75:
+  unsigned long offset;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#415: FILE: include/linux/loop.h:117:
+ __u32   lo_track_pgwrite; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#415: FILE: include/linux/loop.h:117:
+ __u32   lo_track_pgwrite; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: include/linux/loop.h:125:
+  __u64 max; /* size of array passed by user */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#424: FILE: include/linux/loop.h:126:
+  __u64 num; /* number of entries filled in by driver */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#425: FILE: include/linux/loop.h:127:
+  __u64 *pgoff; /* array of page offsets of pages written to by mmap */$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#428: FILE: include/linux/loop.h:130:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000462171.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 10 errors, 138 warnings, 14 checks, 328 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000462171.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
