WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
common, we should merge the in-sync bits into a common file, to prevent them

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#66: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#71: FILE: arch/x86/kernel/dumpstack.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:SPACING: No space is necessary after a cast
#99: FILE: arch/x86/kernel/dumpstack.c:29:
+	printk(" [<%p>] %s%pS\n", (void *) address,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#99: FILE: arch/x86/kernel/dumpstack.c:29:
+	printk(" [<%p>] %s%pS\n", (void *) address,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#100: FILE: arch/x86/kernel/dumpstack.c:30:
+	printk(" [<%p>] %s%pS\n", (void *) address,
+			reliable ? "" : "? ", (void *) address);

CHECK:SPACING: No space is necessary after a cast
#100: FILE: arch/x86/kernel/dumpstack.c:30:
+			reliable ? "" : "? ", (void *) address);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#111: FILE: arch/x86/kernel/dumpstack.c:41:
+static inline int valid_stack_ptr(struct thread_info *tinfo,
+			void *p, unsigned int size, void *end)

WARNING:LINE_SPACING: Missing a blank line after declarations
#114: FILE: arch/x86/kernel/dumpstack.c:44:
+	void *t = tinfo;
+	if (end) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#115: FILE: arch/x86/kernel/dumpstack.c:45:
+		if (p < end && p >= (end-THREAD_SIZE))
 		                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#125: FILE: arch/x86/kernel/dumpstack.c:55:
+print_context_stack(struct thread_info *tinfo,
+		unsigned long *stack, unsigned long bp,

CHECK:SPACING: No space is necessary after a cast
#136: FILE: arch/x86/kernel/dumpstack.c:66:
+			if ((unsigned long) stack == bp + sizeof(long)) {

CHECK:SPACING: No space is necessary after a cast
#139: FILE: arch/x86/kernel/dumpstack.c:69:
+				bp = (unsigned long) frame;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#149: FILE: arch/x86/kernel/dumpstack.c:79:
+
+

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#153: FILE: arch/x86/kernel/dumpstack.c:83:
+	printk(data);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#155: FILE: arch/x86/kernel/dumpstack.c:85:
+	printk("\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#160: FILE: arch/x86/kernel/dumpstack.c:90:
+	printk("%s%s\n", (char *)data, msg);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#165: FILE: arch/x86/kernel/dumpstack.c:95:
+	printk("%s <%s> ", (char *)data, name);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#175: FILE: arch/x86/kernel/dumpstack.c:105:
+	printk(data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#188: FILE: arch/x86/kernel/dumpstack.c:118:
+show_trace_log_lvl(struct task_struct *task, struct pt_regs *regs,
+		unsigned long *stack, unsigned long bp, char *log_lvl)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#190: FILE: arch/x86/kernel/dumpstack.c:120:
+	printk("%sCall Trace:\n", log_lvl);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#218: FILE: arch/x86/kernel/dumpstack.c:148:
+	printk("Pid: %d, comm: %.20s %s %s %.*s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#219: FILE: arch/x86/kernel/dumpstack.c:149:
+	printk("Pid: %d, comm: %.20s %s %s %.*s\n",
+		current->pid, current->comm, print_tainted(),

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 65)
#242: FILE: arch/x86/kernel/dumpstack.c:172:
+		if (cpu == die_owner)
+			/* nested oops. should stop eventually */;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#284: FILE: arch/x86/kernel/dumpstack.c:214:
+	printk(KERN_EMERG "%s: %04lx [#%d] ", str, err & 0xffff, ++die_counter);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#286: FILE: arch/x86/kernel/dumpstack.c:216:
+	printk("PREEMPT ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#289: FILE: arch/x86/kernel/dumpstack.c:219:
+	printk("SMP ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#292: FILE: arch/x86/kernel/dumpstack.c:222:
+	printk("DEBUG_PAGEALLOC");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#294: FILE: arch/x86/kernel/dumpstack.c:224:
+	printk("\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#297: FILE: arch/x86/kernel/dumpstack.c:227:
+	if (notify_die(DIE_OOPS, str, regs, err,
+			current->thread.trap_no, SIGSEGV) == NOTIFY_STOP)

CHECK:SPACING: No space is necessary after a cast
#302: FILE: arch/x86/kernel/dumpstack.c:232:
+	sp = (unsigned long) (&regs->sp);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#308: FILE: arch/x86/kernel/dumpstack.c:238:
+	printk(KERN_EMERG "EIP: [<%08lx>] ", regs->ip);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#310: FILE: arch/x86/kernel/dumpstack.c:240:
+	printk(" SS:ESP %04x:%08lx\n", ss, sp);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#313: FILE: arch/x86/kernel/dumpstack.c:243:
+	printk(KERN_ALERT "RIP ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#315: FILE: arch/x86/kernel/dumpstack.c:245:
+	printk(" RSP <%016lx>\n", regs->sp);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#350: FILE: arch/x86/kernel/dumpstack.c:280:
+	printk(KERN_EMERG "%s", str);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#351: FILE: arch/x86/kernel/dumpstack.c:281:
+	printk(" on CPU%d, ip %08lx, registers:\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#352: FILE: arch/x86/kernel/dumpstack.c:282:
+	printk(" on CPU%d, ip %08lx, registers:\n",
+		smp_processor_id(), regs->ip);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#370: FILE: arch/x86/kernel/dumpstack.c:300:
+}
+early_param("oops", oops_setup);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#376: FILE: arch/x86/kernel/dumpstack.c:306:
+	kstack_depth_to_print = simple_strtoul(s, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#379: FILE: arch/x86/kernel/dumpstack.c:309:
+}
+early_param("kstack", kstack_setup);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#383: FILE: arch/x86/kernel/dumpstack.c:313:
+	code_bytes = simple_strtoul(s, NULL, 0);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#389: FILE: arch/x86/kernel/dumpstack.c:319:
+__setup("code_bytes=", code_bytes_setup);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#396: FILE: arch/x86/kernel/dumpstack.h:1:
+/*

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#414: FILE: arch/x86/kernel/dumpstack.h:19:
+print_context_stack(struct thread_info *tinfo,
+		unsigned long *stack, unsigned long bp,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#420: FILE: arch/x86/kernel/dumpstack.h:25:
+show_trace_log_lvl(struct task_struct *task, struct pt_regs *regs,
+		unsigned long *stack, unsigned long bp, char *log_lvl);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#424: FILE: arch/x86/kernel/dumpstack.h:29:
+show_stack_log_lvl(struct task_struct *task, struct pt_regs *regs,
+		unsigned long *sp, unsigned long bp, char *log_lvl);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000213154.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 27 warnings, 20 checks, 690 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000213154.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
