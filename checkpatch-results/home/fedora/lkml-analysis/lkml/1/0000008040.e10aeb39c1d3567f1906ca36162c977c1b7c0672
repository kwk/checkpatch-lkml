WARNING:TYPO_SPELLING: 'syncronization' may be misspelled - perhaps 'synchronization'?
#35: 
highly optimized towards very fast syncronization and maximum stickness
                                   ^^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#72: FILE: include/linux/timex.h:277:
+extern void hardpps(const struct timespec *, const struct timespec *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct timespec *' should also have an identifier name
#72: FILE: include/linux/timex.h:277:
+extern void hardpps(const struct timespec *, const struct timespec *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct timespec *' should also have an identifier name
#72: FILE: include/linux/timex.h:277:
+extern void hardpps(const struct timespec *, const struct timespec *);

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#84: FILE: kernel/time/Kconfig:30:
+config NTP_PPS
+	bool "PPS kernel consumer support"
+	depends on PPS
+	help
+	  This option adds support for direct in-kernel time
+	  syncronization using an external PPS signal.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:TYPO_SPELLING: 'syncronization' may be misspelled - perhaps 'synchronization'?
#89: FILE: kernel/time/Kconfig:35:
+	  syncronization using an external PPS signal.
 	  ^^^^^^^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#119: FILE: kernel/time/ntp.c:90:
+#define PPS_INTCOUNT	4	/* number of consecutive good intervals to
+				   increase pps_shift or consecutive bad

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#120: FILE: kernel/time/ntp.c:91:
+				   intervals to decrease it */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#140: FILE: kernel/time/ntp.c:111:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#152: FILE: kernel/time/ntp.c:123:
+	pps_fbase.tv_sec = pps_fbase.tv_nsec = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#185: FILE: kernel/time/ntp.c:156:
+	/* the PPS calibration interval may end
+	   surprisingly early */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#185: FILE: kernel/time/ntp.c:156:
+	   surprisingly early */

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#197: FILE: kernel/time/ntp.c:168:
+	return (time_status & (STA_UNSYNC|STA_CLOCKERR))
 	                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#201: FILE: kernel/time/ntp.c:172:
+		 */
+		|| ((time_status & (STA_PPSFREQ|STA_PPSTIME))

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#201: FILE: kernel/time/ntp.c:172:
+		|| ((time_status & (STA_PPSFREQ|STA_PPSTIME))
 		                               ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#202: FILE: kernel/time/ntp.c:173:
+		|| ((time_status & (STA_PPSFREQ|STA_PPSTIME))
+			&& !(time_status & STA_PPSSIGNAL))

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#204: FILE: kernel/time/ntp.c:175:
+		 * PPS time synchronization requested */

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#205: FILE: kernel/time/ntp.c:176:
+		 * PPS time synchronization requested */
+		|| ((time_status & (STA_PPSTIME|STA_PPSJITTER))

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#205: FILE: kernel/time/ntp.c:176:
+		|| ((time_status & (STA_PPSTIME|STA_PPSJITTER))
 		                               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#206: FILE: kernel/time/ntp.c:177:
+			== (STA_PPSTIME|STA_PPSJITTER))
 			               ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#210: FILE: kernel/time/ntp.c:181:
+		 */
+		|| ((time_status & STA_PPSFREQ)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#211: FILE: kernel/time/ntp.c:182:
+		|| ((time_status & STA_PPSFREQ)
+			&& (time_status & (STA_PPSWANDER|STA_PPSERROR)));

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#211: FILE: kernel/time/ntp.c:182:
+			&& (time_status & (STA_PPSWANDER|STA_PPSERROR)));
 			                                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#244: FILE: kernel/time/ntp.c:215:
+	return status & (STA_UNSYNC|STA_CLOCKERR);
 	                           ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#355: FILE: kernel/time/ntp.c:704:
+/* normalize the timestamp so that nsec is in the
+   ( -NSEC_PER_SEC / 2, NSEC_PER_SEC / 2 ] interval */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#355: FILE: kernel/time/ntp.c:704:
+   ( -NSEC_PER_SEC / 2, NSEC_PER_SEC / 2 ] interval */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#438: FILE: kernel/time/ntp.c:787:
+		pr_err("hardpps: PPSERROR: interval too long - %ld s\n",
+				freq_norm.sec);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#496: FILE: kernel/time/ntp.c:845:
+		pr_warning("hardpps: PPSJITTER: jitter=%ld, limit=%ld\n",
+		       jitter, (pps_jitter << PPS_POPCORN));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#502: FILE: kernel/time/ntp.c:851:
+		time_offset = div_s64(((s64)correction) << NTP_SCALE_SHIFT,
+				NTP_INTERVAL_FREQ);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#539: FILE: kernel/time/ntp.c:888:
+	 * just start the frequency interval */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#550: FILE: kernel/time/ntp.c:899:
+	 * [1s - MAXFREQ us, 1s + MAXFREQ us], otherwise reject it */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'freq_norm.sec == 0'
#551: FILE: kernel/time/ntp.c:900:
+	if ((freq_norm.sec == 0) ||
+			(freq_norm.nsec > MAXFREQ * freq_norm.sec) ||
+			(freq_norm.nsec < -MAXFREQ * freq_norm.sec)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#552: FILE: kernel/time/ntp.c:901:
+	if ((freq_norm.sec == 0) ||
+			(freq_norm.nsec > MAXFREQ * freq_norm.sec) ||

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'hardpps', this function's name, in a string
#558: FILE: kernel/time/ntp.c:907:
+		pr_err("hardpps: PPSJITTER: bad pulse\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000008040.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 15 warnings, 19 checks, 503 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000008040.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
