CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#52: FILE: arch/arm/common/dmabounce.c:334:
+dma_addr_t __dma_map_single(struct device *dev, void *ptr, size_t size,
 		enum dma_data_direction dir)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#64: FILE: arch/arm/common/dmabounce.c:346:
+dma_addr_t __dma_map_page(struct device *dev, struct page *page,
 		unsigned long offset, size_t size, enum dma_data_direction dir)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#82: FILE: arch/arm/common/dmabounce.c:371:
+void __dma_unmap_single(struct device *dev, dma_addr_t dma_addr, size_t size,
 		enum dma_data_direction dir)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#102: FILE: arch/arm/include/asm/dma-mapping.h:132:
+extern void *__dma_alloc_coherent(struct device *, size_t, dma_addr_t *, gfp_t);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#103: FILE: arch/arm/include/asm/dma-mapping.h:133:
+extern void __dma_free_coherent(struct device *, size_t, void *, dma_addr_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#103: FILE: arch/arm/include/asm/dma-mapping.h:133:
+extern void __dma_free_coherent(struct device *, size_t, void *, dma_addr_t);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#103: FILE: arch/arm/include/asm/dma-mapping.h:133:
+extern void __dma_free_coherent(struct device *, size_t, void *, dma_addr_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#103: FILE: arch/arm/include/asm/dma-mapping.h:133:
+extern void __dma_free_coherent(struct device *, size_t, void *, dma_addr_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'dma_addr_t' should also have an identifier name
#103: FILE: arch/arm/include/asm/dma-mapping.h:133:
+extern void __dma_free_coherent(struct device *, size_t, void *, dma_addr_t);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#114: FILE: arch/arm/include/asm/dma-mapping.h:147:
+static inline void *dma_alloc_coherent(struct device *dev, size_t size,
+	dma_addr_t *handle, gfp_t gfp)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#127: FILE: arch/arm/include/asm/dma-mapping.h:166:
+static inline void dma_free_coherent(struct device *dev, size_t size,
+	void *cpu_addr, dma_addr_t handle)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#139: FILE: arch/arm/include/asm/dma-mapping.h:269:
+extern dma_addr_t __dma_map_single(struct device *, void *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#139: FILE: arch/arm/include/asm/dma-mapping.h:269:
+extern dma_addr_t __dma_map_single(struct device *, void *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#139: FILE: arch/arm/include/asm/dma-mapping.h:269:
+extern dma_addr_t __dma_map_single(struct device *, void *, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#139: FILE: arch/arm/include/asm/dma-mapping.h:269:
+extern dma_addr_t __dma_map_single(struct device *, void *, size_t,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#140: FILE: arch/arm/include/asm/dma-mapping.h:270:
+extern dma_addr_t __dma_map_single(struct device *, void *, size_t,
 		enum dma_data_direction);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#142: FILE: arch/arm/include/asm/dma-mapping.h:271:
+extern dma_addr_t __dma_map_page(struct device *, struct page *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#142: FILE: arch/arm/include/asm/dma-mapping.h:271:
+extern dma_addr_t __dma_map_page(struct device *, struct page *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct page *' should also have an identifier name
#142: FILE: arch/arm/include/asm/dma-mapping.h:271:
+extern dma_addr_t __dma_map_page(struct device *, struct page *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#142: FILE: arch/arm/include/asm/dma-mapping.h:271:
+extern dma_addr_t __dma_map_page(struct device *, struct page *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#142: FILE: arch/arm/include/asm/dma-mapping.h:271:
+extern dma_addr_t __dma_map_page(struct device *, struct page *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#143: FILE: arch/arm/include/asm/dma-mapping.h:272:
+extern dma_addr_t __dma_map_page(struct device *, struct page *,
 		unsigned long, size_t, enum dma_data_direction);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#145: FILE: arch/arm/include/asm/dma-mapping.h:273:
+extern void __dma_unmap_single(struct device *, dma_addr_t, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#145: FILE: arch/arm/include/asm/dma-mapping.h:273:
+extern void __dma_unmap_single(struct device *, dma_addr_t, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'dma_addr_t' should also have an identifier name
#145: FILE: arch/arm/include/asm/dma-mapping.h:273:
+extern void __dma_unmap_single(struct device *, dma_addr_t, size_t,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#145: FILE: arch/arm/include/asm/dma-mapping.h:273:
+extern void __dma_unmap_single(struct device *, dma_addr_t, size_t,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#146: FILE: arch/arm/include/asm/dma-mapping.h:274:
+extern void __dma_unmap_single(struct device *, dma_addr_t, size_t,
 		enum dma_data_direction);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#149: FILE: arch/arm/include/asm/dma-mapping.h:277:
+static inline dma_addr_t dma_map_single(struct device *dev, void *cpu_addr,
+		size_t size, enum dma_data_direction dir)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#153: FILE: arch/arm/include/asm/dma-mapping.h:281:
+}
+static inline dma_addr_t dma_map_page(struct device *dev, struct page *page,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#154: FILE: arch/arm/include/asm/dma-mapping.h:282:
+static inline dma_addr_t dma_map_page(struct device *dev, struct page *page,
+		unsigned long offset, size_t size, enum dma_data_direction dir)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#158: FILE: arch/arm/include/asm/dma-mapping.h:286:
+}
+static inline void dma_unmap_single(struct device *dev, dma_addr_t handle,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#159: FILE: arch/arm/include/asm/dma-mapping.h:287:
+static inline void dma_unmap_single(struct device *dev, dma_addr_t handle,
+		size_t size, enum dma_data_direction dir)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#172: FILE: arch/arm/include/asm/dma-mapping.h:459:
+extern int __dma_map_sg(struct device *, struct scatterlist *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#172: FILE: arch/arm/include/asm/dma-mapping.h:459:
+extern int __dma_map_sg(struct device *, struct scatterlist *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scatterlist *' should also have an identifier name
#172: FILE: arch/arm/include/asm/dma-mapping.h:459:
+extern int __dma_map_sg(struct device *, struct scatterlist *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#172: FILE: arch/arm/include/asm/dma-mapping.h:459:
+extern int __dma_map_sg(struct device *, struct scatterlist *, int,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#173: FILE: arch/arm/include/asm/dma-mapping.h:460:
+extern int __dma_map_sg(struct device *, struct scatterlist *, int,
 		enum dma_data_direction);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#175: FILE: arch/arm/include/asm/dma-mapping.h:461:
+extern void __dma_unmap_sg(struct device *, struct scatterlist *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#175: FILE: arch/arm/include/asm/dma-mapping.h:461:
+extern void __dma_unmap_sg(struct device *, struct scatterlist *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scatterlist *' should also have an identifier name
#175: FILE: arch/arm/include/asm/dma-mapping.h:461:
+extern void __dma_unmap_sg(struct device *, struct scatterlist *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#175: FILE: arch/arm/include/asm/dma-mapping.h:461:
+extern void __dma_unmap_sg(struct device *, struct scatterlist *, int,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#176: FILE: arch/arm/include/asm/dma-mapping.h:462:
+extern void __dma_unmap_sg(struct device *, struct scatterlist *, int,
 		enum dma_data_direction);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#178: FILE: arch/arm/include/asm/dma-mapping.h:463:
+extern void __dma_sync_sg_for_cpu(struct device *, struct scatterlist *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#178: FILE: arch/arm/include/asm/dma-mapping.h:463:
+extern void __dma_sync_sg_for_cpu(struct device *, struct scatterlist *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scatterlist *' should also have an identifier name
#178: FILE: arch/arm/include/asm/dma-mapping.h:463:
+extern void __dma_sync_sg_for_cpu(struct device *, struct scatterlist *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#178: FILE: arch/arm/include/asm/dma-mapping.h:463:
+extern void __dma_sync_sg_for_cpu(struct device *, struct scatterlist *, int,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#179: FILE: arch/arm/include/asm/dma-mapping.h:464:
+extern void __dma_sync_sg_for_cpu(struct device *, struct scatterlist *, int,
 		enum dma_data_direction);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#181: FILE: arch/arm/include/asm/dma-mapping.h:465:
+extern void __dma_sync_sg_for_device(struct device *, struct scatterlist *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#181: FILE: arch/arm/include/asm/dma-mapping.h:465:
+extern void __dma_sync_sg_for_device(struct device *, struct scatterlist *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scatterlist *' should also have an identifier name
#181: FILE: arch/arm/include/asm/dma-mapping.h:465:
+extern void __dma_sync_sg_for_device(struct device *, struct scatterlist *, int,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#181: FILE: arch/arm/include/asm/dma-mapping.h:465:
+extern void __dma_sync_sg_for_device(struct device *, struct scatterlist *, int,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#182: FILE: arch/arm/include/asm/dma-mapping.h:466:
+extern void __dma_sync_sg_for_device(struct device *, struct scatterlist *, int,
 		enum dma_data_direction);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#185: FILE: arch/arm/include/asm/dma-mapping.h:469:
+static inline int dma_map_sg(struct device *dev, struct scatterlist *sg,
+		int nents, enum dma_data_direction dir)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#189: FILE: arch/arm/include/asm/dma-mapping.h:473:
+}
+static inline void dma_unmap_sg(struct device *dev, struct scatterlist *sg,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#190: FILE: arch/arm/include/asm/dma-mapping.h:474:
+static inline void dma_unmap_sg(struct device *dev, struct scatterlist *sg,
+		int nents, enum dma_data_direction dir)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#194: FILE: arch/arm/include/asm/dma-mapping.h:478:
+}
+static inline void dma_sync_sg_for_cpu(struct device *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#195: FILE: arch/arm/include/asm/dma-mapping.h:479:
+static inline void dma_sync_sg_for_cpu(struct device *dev,
+		struct scatterlist *sg, int nents,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#200: FILE: arch/arm/include/asm/dma-mapping.h:484:
+}
+static inline void dma_sync_sg_for_device(struct device *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#201: FILE: arch/arm/include/asm/dma-mapping.h:485:
+static inline void dma_sync_sg_for_device(struct device *dev,
+		struct scatterlist *sg, int nents,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#255: FILE: arch/arm/mm/dma-mapping.c:606:
+int __dma_map_sg(struct device *dev, struct scatterlist *sg, int nents,
 		enum dma_data_direction dir)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#273: FILE: arch/arm/mm/dma-mapping.c:637:
+void __dma_unmap_sg(struct device *dev, struct scatterlist *sg, int nents,
 		enum dma_data_direction dir)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#291: FILE: arch/arm/mm/dma-mapping.c:655:
+void __dma_sync_sg_for_cpu(struct device *dev, struct scatterlist *sg,
 			int nents, enum dma_data_direction dir)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#309: FILE: arch/arm/mm/dma-mapping.c:675:
+void __dma_sync_sg_for_device(struct device *dev, struct scatterlist *sg,
 			int nents, enum dma_data_direction dir)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000094810.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 26 warnings, 37 checks, 242 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000094810.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
