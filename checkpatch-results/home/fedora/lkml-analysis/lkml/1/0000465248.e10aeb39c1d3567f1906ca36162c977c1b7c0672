ERROR:TRAILING_WHITESPACE: trailing whitespace
#73: FILE: drivers/ata/libata-acpi.c:703:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#76: FILE: drivers/ata/libata-acpi.c:706:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#78: FILE: drivers/ata/libata-acpi.c:708:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!output.pointer"
#83: FILE: drivers/ata/libata-acpi.c:713:
+	if (output.length < sizeof(struct acpi_gtm) || output.pointer == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:TRAILING_WHITESPACE: trailing whitespace
#108: FILE: drivers/ata/libata-acpi.c:738:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#111: FILE: drivers/ata/libata-acpi.c:741:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#113: FILE: drivers/ata/libata-acpi.c:743:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#141: FILE: drivers/ata/libata-acpi.c:771:
+^I$

ERROR:SPACING: space required before the open parenthesis '('
#142: FILE: drivers/ata/libata-acpi.c:772:
+	if(ata_pata_find_handle(&pdev->dev, 0))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#144: FILE: drivers/ata/libata-acpi.c:774:
+	if(ata_pata_find_handle(&pdev->dev, 1))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#149: FILE: drivers/ata/libata-acpi.c:779:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#150: FILE: drivers/ata/libata-acpi.c:780:
+EXPORT_SYMBOL_GPL(ata_acpi_gtm);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#151: FILE: drivers/ata/libata-acpi.c:781:
+EXPORT_SYMBOL_GPL(ata_acpi_stm);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#152: FILE: drivers/ata/libata-acpi.c:782:
+EXPORT_SYMBOL_GPL(ata_pata_acpi_handle);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#153: FILE: drivers/ata/libata-acpi.c:783:
+EXPORT_SYMBOL_GPL(ata_pata_acpi_present);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#158: FILE: drivers/ata/libata-acpi.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#177: FILE: drivers/ata/libata-acpi.h:20:
+ *  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#189: FILE: drivers/ata/libata-acpi.h:32:
+struct acpi_drive
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#199: FILE: drivers/ata/libata-acpi.h:42:
+extern int ata_acpi_gtm(const struct ata_port *p, void *handle, struct acpi_gtm *gtm);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#200: FILE: drivers/ata/libata-acpi.h:43:
+extern int ata_acpi_stm(const struct ata_port *ap, void *handle, struct acpi_gtm *stm);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#201: FILE: drivers/ata/libata-acpi.h:44:
+extern void *ata_pata_acpi_handle(const struct ata_port *ap);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#202: FILE: drivers/ata/libata-acpi.h:45:
+extern int ata_pata_acpi_present(struct pci_dev *pdev);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#221: FILE: drivers/ata/pata_acpi.c:1:
+/*

ERROR:TRAILING_WHITESPACE: trailing whitespace
#270: FILE: drivers/ata/pata_acpi.c:50:
+^I$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!acpi->handle"
#271: FILE: drivers/ata/pata_acpi.c:51:
+	if (acpi->handle == NULL || ata_acpi_gtm(ap, acpi->handle, &acpi->gtm) < 0)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#276: FILE: drivers/ata/pata_acpi.c:56:
+	/* If the firmware proposed mode is UDMA3 or better then we know
+	   it is 80wire, or 40wire short */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#276: FILE: drivers/ata/pata_acpi.c:56:
+	   it is 80wire, or 40wire short */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#303: FILE: drivers/ata/pata_acpi.c:83:
+};
+static const unsigned int mwdma_cycle[5] = {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#306: FILE: drivers/ata/pata_acpi.c:86:
+};
+static const unsigned int udma_cycle[7] = {

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#319: FILE: drivers/ata/pata_acpi.c:99:
+static unsigned long pacpi_mode_filter(const struct ata_port *ap, struct ata_device *adev, unsigned long mask)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:TRAILING_WHITESPACE: trailing whitespace
#325: FILE: drivers/ata/pata_acpi.c:105:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#327: FILE: drivers/ata/pata_acpi.c:107:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#329: FILE: drivers/ata/pata_acpi.c:109:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#334: FILE: drivers/ata/pata_acpi.c:114:
+^I$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#334: FILE: drivers/ata/pata_acpi.c:114:
+
+	

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#336: FILE: drivers/ata/pata_acpi.c:116:
+	/* In order to generate a valid mode mask as we need cycle through
+	   trying each proposed speed in turn */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#336: FILE: drivers/ata/pata_acpi.c:116:
+	   trying each proposed speed in turn */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#337: FILE: drivers/ata/pata_acpi.c:117:
+   $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: drivers/ata/pata_acpi.c:117:
+   $

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#344: FILE: drivers/ata/pata_acpi.c:124:
+		if (t == 0xFFFFFFFF || (i &&  t >= pio_cycle[i-1]))
 		                                              ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#347: FILE: drivers/ata/pata_acpi.c:127:
+^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#350: FILE: drivers/ata/pata_acpi.c:130:
+^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#354: FILE: drivers/ata/pata_acpi.c:134:
+		u32 t;
+		probe.drive[unit].dma = mwdma_cycle[i];

ERROR:TRAILING_WHITESPACE: trailing whitespace
#357: FILE: drivers/ata/pata_acpi.c:137:
+^I^I$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#360: FILE: drivers/ata/pata_acpi.c:140:
+		if (t == 0xFFFFFFFF || (i && t >= mwdma_cycle[i-1]))
 		                                               ^

ERROR:SPACING: space prohibited after that '~' (ctx:WxW)
#361: FILE: drivers/ata/pata_acpi.c:141:
+			mask &= ~ (1 << (i + ATA_SHIFT_MWDMA));
 			        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#366: FILE: drivers/ata/pata_acpi.c:146:
+^I$

WARNING:LINE_SPACING: Missing a blank line after declarations
#370: FILE: drivers/ata/pata_acpi.c:150:
+		u32 t;
+		probe.drive[unit].dma = udma_cycle[i];

ERROR:TRAILING_WHITESPACE: trailing whitespace
#373: FILE: drivers/ata/pata_acpi.c:153:
+^I^I$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#376: FILE: drivers/ata/pata_acpi.c:156:
+		if (t == 0xFFFFFFFF || (i && t >= udma_cycle[i-1]))
 		                                              ^

ERROR:SPACING: space prohibited after that '~' (ctx:WxW)
#377: FILE: drivers/ata/pata_acpi.c:157:
+			mask &= ~ (1 << (i + ATA_SHIFT_UDMA));
 			        ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#379: FILE: drivers/ata/pata_acpi.c:159:
+^I$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#383: FILE: drivers/ata/pata_acpi.c:163:
+	/* And finally we can hand back the list of speeds that actually are
+	   supported by the BIOS */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#383: FILE: drivers/ata/pata_acpi.c:163:
+	   supported by the BIOS */

ERROR:SPACING: space required before the open parenthesis '('
#398: FILE: drivers/ata/pata_acpi.c:178:
+	if(!(acpi->gtm.flags & 0x10))

ERROR:SPACING: space required before the open parenthesis '('
#419: FILE: drivers/ata/pata_acpi.c:199:
+	if(!(acpi->gtm.flags & 0x10))

WARNING:TYPO_SPELLING: 'neccessary' may be misspelled - perhaps 'necessary'?
#441: FILE: drivers/ata/pata_acpi.c:221:
+ *	neccessary. 
   	^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#441: FILE: drivers/ata/pata_acpi.c:221:
+ *^Ineccessary. $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#452: FILE: drivers/ata/pata_acpi.c:232:
+^I^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#473: FILE: drivers/ata/pata_acpi.c:253:
+^I$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#476: FILE: drivers/ata/pata_acpi.c:256:
+	acpi = ap->private_data = devm_kzalloc(&pdev->dev, sizeof(struct pata_acpi), GFP_KERNEL);

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ap->private_data"
#477: FILE: drivers/ata/pata_acpi.c:257:
+	if (ap->private_data == NULL)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#546: FILE: drivers/ata/pata_acpi.c:326:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#561: FILE: drivers/ata/pata_acpi.c:341:
+static int pacpi_init_one (struct pci_dev *pdev, const struct pci_device_id *id)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#569: FILE: drivers/ata/pata_acpi.c:349:
+^I^I.udma_mask ^I= 0x3f,$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#574: FILE: drivers/ata/pata_acpi.c:354:
+^I$

WARNING:LONG_LINE: line length of 136 exceeds 100 columns
#581: FILE: drivers/ata/pata_acpi.c:361:
+	{ PCI_ANY_ID,		PCI_ANY_ID,			   PCI_ANY_ID, PCI_ANY_ID, PCI_CLASS_STORAGE_IDE << 8, 0xFFFFFF00UL, 1},

ERROR:TRAILING_WHITESPACE: trailing whitespace
#633: FILE: drivers/ata/pata_amd.c:649:
+#endif^I^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#653: FILE: drivers/ata/pata_amd.c:681:
+^I    ^Iata_pci_clear_simplex(pdev);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#653: FILE: drivers/ata/pata_amd.c:681:
+^I    ^Iata_pci_clear_simplex(pdev);$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000465248.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 33 errors, 21 warnings, 16 checks, 595 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000465248.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
