WARNING:TYPO_SPELLING: 'substraction' may be misspelled - perhaps 'subtraction'?
#26: 
is costly as it involves a lookup of another structure and a substraction
                                                             ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#32: 
The real zone pointer is retrieved using the zonelist_zone() helper function.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#145: FILE: include/linux/mmzone.h:717:
+	BUG_ON(zonelist_zone(encoded) != zone);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#152: FILE: include/linux/mmzone.h:723:
+static inline unsigned long *first_zones_zonelist(struct zonelist *zonelist,
 					enum zone_type highest_zoneidx)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#170: FILE: include/linux/mmzone.h:737:
+static inline unsigned long *next_zones_zonelist(unsigned long *z,
 					enum zone_type highest_zoneidx)

WARNING:LINE_SPACING: Missing a blank line after declarations
#249: FILE: mm/mempolicy.c:494:
+			struct zone *zone;
+			zone = zonelist_zone(p->v.zonelist->_zones[i]);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#267: FILE: mm/mempolicy.c:1170:
+		struct zonelist *zonelist;
+		zonelist = policy->v.zonelist;

WARNING:LINE_SPACING: Missing a blank line after declarations
#290: FILE: mm/mempolicy.c:1376:
+			struct zone *za, *zb;
+			za = zonelist_zone(a->v.zonelist->_zones[i]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#337: FILE: mm/page_alloc.c:1363:
+static int zlc_zone_worth_trying(struct zonelist *zonelist, unsigned long *z,
 						nodemask_t *allowednodes)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#373: FILE: mm/page_alloc.c:1407:
+static int zlc_zone_worth_trying(struct zonelist *zonelist, unsigned long *z,
 				nodemask_t *allowednodes)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#588: FILE: mm/vmstat.c:373:
+		__inc_zone_state(zonelist_zone(zonelist->_zones[0]),
+								NUMA_FOREIGN);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000382195.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 5 checks, 461 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000382195.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
