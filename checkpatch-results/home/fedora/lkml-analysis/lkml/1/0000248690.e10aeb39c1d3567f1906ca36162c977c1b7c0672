WARNING:TYPO_SPELLING: 'seperate' may be misspelled - perhaps 'separate'?
#33: 
Split off existing code into two seperate files. One file holds general
                                 ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#61: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#66: FILE: arch/x86/kernel/microcode.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/uaccess.h> instead of <asm/uaccess.h>
#159: FILE: arch/x86/kernel/microcode.c:94:
+#include <asm/uaccess.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#160: FILE: arch/x86/kernel/microcode.c:95:
+#include <asm/processor.h>

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#167: FILE: arch/x86/kernel/microcode.c:102:
+#define MICROCODE_VERSION ^I"1.14a"$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#174: FILE: arch/x86/kernel/microcode.c:109:
+extern long get_next_ucode(void **mc, long offset);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#175: FILE: arch/x86/kernel/microcode.c:110:
+extern int microcode_sanity_check(void *mc);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#176: FILE: arch/x86/kernel/microcode.c:111:
+extern int get_matching_microcode(void *mc, int cpu);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#177: FILE: arch/x86/kernel/microcode.c:112:
+extern void collect_cpu_info(int cpu_num);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#178: FILE: arch/x86/kernel/microcode.c:113:
+extern int cpu_request_microcode(int cpu);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#179: FILE: arch/x86/kernel/microcode.c:114:
+extern void microcode_fini_cpu(int cpu);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#180: FILE: arch/x86/kernel/microcode.c:115:
+extern void apply_microcode(int cpu);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#181: FILE: arch/x86/kernel/microcode.c:116:
+extern int apply_microcode_check_cpu(int cpu);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#187: FILE: arch/x86/kernel/microcode.c:122:
+static int do_microcode_update (void)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#194: FILE: arch/x86/kernel/microcode.c:129:
+	cpumask_t old;
+	cpumask_of_cpu_ptr_declare(newmask);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#230: FILE: arch/x86/kernel/microcode.c:165:
+static int microcode_open (struct inode *unused1, struct file *unused2)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#236: FILE: arch/x86/kernel/microcode.c:171:
+static ssize_t microcode_write (struct file *file, const char __user *buf, size_t len, loff_t *ppos)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#241: FILE: arch/x86/kernel/microcode.c:176:
+		printk(KERN_ERR "microcode: too much data (max %ld pages)\n", num_physpages);

CHECK:SPACING: No space is necessary after a cast
#248: FILE: arch/x86/kernel/microcode.c:183:
+	user_buffer = (void __user *) buf;

CHECK:SPACING: No space is necessary after a cast
#249: FILE: arch/x86/kernel/microcode.c:184:
+	user_buffer_size = (int) len;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#273: FILE: arch/x86/kernel/microcode.c:208:
+static int __init microcode_dev_init (void)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#279: FILE: arch/x86/kernel/microcode.c:214:
+		printk(KERN_ERR

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#288: FILE: arch/x86/kernel/microcode.c:223:
+static void microcode_dev_exit (void)

ERROR:SPACING: space required before the open parenthesis '('
#296: FILE: arch/x86/kernel/microcode.c:231:
+#define microcode_dev_exit() do { } while(0)

WARNING:LINE_SPACING: Missing a blank line after declarations
#305: FILE: arch/x86/kernel/microcode.c:240:
+	cpumask_t old;
+	cpumask_of_cpu_ptr(newmask, cpu);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#325: FILE: arch/x86/kernel/microcode.c:260:
+	unsigned long val = simple_strtoul(buf, &end, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:LINE_SPACING: Missing a blank line after declarations
#333: FILE: arch/x86/kernel/microcode.c:268:
+		cpumask_t old;
+		cpumask_of_cpu_ptr(newmask, cpu);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#353: FILE: arch/x86/kernel/microcode.c:288:
+static ssize_t version_show(struct sys_device *dev,
+			struct sysdev_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#361: FILE: arch/x86/kernel/microcode.c:296:
+static ssize_t pf_show(struct sys_device *dev,
+			struct sysdev_attribute *attr, char *buf)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#466: FILE: arch/x86/kernel/microcode.c:401:
+			printk(KERN_ERR "microcode: Failed to create the sysfs "

WARNING:SPLIT_STRING: quoted string split across lines
#467: FILE: arch/x86/kernel/microcode.c:402:
+			printk(KERN_ERR "microcode: Failed to create the sysfs "
+				"group for CPU%d\n", cpu);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#484: FILE: arch/x86/kernel/microcode.c:419:
+static int __init microcode_init (void)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#488: FILE: arch/x86/kernel/microcode.c:423:
+	printk(KERN_INFO

WARNING:LONG_LINE_STRING: line length of 105 exceeds 100 columns
#489: FILE: arch/x86/kernel/microcode.c:424:
+		"IA-32 Microcode Update Driver: v" MICROCODE_VERSION " <tigran@aivazian.fsnet.co.uk>\n");

A string starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#514: FILE: arch/x86/kernel/microcode.c:449:
+static void __exit microcode_exit (void)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#546: FILE: arch/x86/kernel/microcode_intel.c:103:
+#define MC_HEADER_SIZE^I^I(sizeof(struct microcode_header))  ^I  /* 48 bytes */$

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#562: FILE: arch/x86/kernel/microcode_intel.c:124:
+extern struct mutex microcode_mutex;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#565: FILE: arch/x86/kernel/microcode_intel.c:126:
+extern struct ucode_cpu_info ucode_cpu_info[NR_CPUS];

WARNING:SPLIT_STRING: quoted string split across lines
#604: FILE: arch/x86/kernel/microcode_intel.c:289:
 	pr_debug("microcode: CPU%d found a matching microcode update with"
+		 " version 0x%x (current=0x%x)\n", cpu, mc_header->rev, uci->rev);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#624: FILE: arch/x86/kernel/microcode_intel.c:346:
+extern unsigned int user_buffer_size;   /* it's size */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000248690.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 34 warnings, 6 checks, 746 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000248690.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
