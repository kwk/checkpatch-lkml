CHECK:MACRO_ARG_REUSE: Macro argument reuse 'val' - possible side-effects?
#143: FILE: arch/parisc/kernel/module.c:77:
+#define RELOC_REACHABLE(val, bits) \
+	(( ( !((val) & (1<<((bits)-1))) && ((val)>>(bits)) != 0 )  ||	\
+	     ( ((val) & (1<<((bits)-1))) && ((val)>>(bits)) != (((__typeof__(val))(~0))>>((bits)+2)))) ? \
+	0 : 1)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'bits' - possible side-effects?
#143: FILE: arch/parisc/kernel/module.c:77:
+#define RELOC_REACHABLE(val, bits) \
+	(( ( !((val) & (1<<((bits)-1))) && ((val)>>(bits)) != 0 )  ||	\
+	     ( ((val) & (1<<((bits)-1))) && ((val)>>(bits)) != (((__typeof__(val))(~0))>>((bits)+2)))) ? \
+	0 : 1)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#144: FILE: arch/parisc/kernel/module.c:78:
+	(( ( !((val) & (1<<((bits)-1))) && ((val)>>(bits)) != 0 )  ||	\
 	                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#144: FILE: arch/parisc/kernel/module.c:78:
+	(( ( !((val) & (1<<((bits)-1))) && ((val)>>(bits)) != 0 )  ||	\
 	                          ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#144: FILE: arch/parisc/kernel/module.c:78:
+	(( ( !((val) & (1<<((bits)-1))) && ((val)>>(bits)) != 0 )  ||	\
 	                                         ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#144: FILE: arch/parisc/kernel/module.c:78:
+	(( ( !((val) & (1<<((bits)-1))) && ((val)>>(bits)) != 0 )  ||	\

ERROR:SPACING: space prohibited before that close parenthesis ')'
#144: FILE: arch/parisc/kernel/module.c:78:
+	(( ( !((val) & (1<<((bits)-1))) && ((val)>>(bits)) != 0 )  ||	\

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#145: FILE: arch/parisc/kernel/module.c:79:
+	     ( ((val) & (1<<((bits)-1))) && ((val)>>(bits)) != (((__typeof__(val))(~0))>>((bits)+2)))) ? \

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#145: FILE: arch/parisc/kernel/module.c:79:
+	     ( ((val) & (1<<((bits)-1))) && ((val)>>(bits)) != (((__typeof__(val))(~0))>>((bits)+2)))) ? \
 	                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#145: FILE: arch/parisc/kernel/module.c:79:
+	     ( ((val) & (1<<((bits)-1))) && ((val)>>(bits)) != (((__typeof__(val))(~0))>>((bits)+2)))) ? \
 	                           ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#145: FILE: arch/parisc/kernel/module.c:79:
+	     ( ((val) & (1<<((bits)-1))) && ((val)>>(bits)) != (((__typeof__(val))(~0))>>((bits)+2)))) ? \
 	                                          ^

CHECK:SPACING: spaces preferred around that '>>' (ctx:VxV)
#145: FILE: arch/parisc/kernel/module.c:79:
+	     ( ((val) & (1<<((bits)-1))) && ((val)>>(bits)) != (((__typeof__(val))(~0))>>((bits)+2)))) ? \
 	                                                                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#145: FILE: arch/parisc/kernel/module.c:79:
+	     ( ((val) & (1<<((bits)-1))) && ((val)>>(bits)) != (((__typeof__(val))(~0))>>((bits)+2)))) ? \
 	                                                                                        ^

ERROR:SPACING: space prohibited after that open parenthesis '('
#145: FILE: arch/parisc/kernel/module.c:79:
+	     ( ((val) & (1<<((bits)-1))) && ((val)>>(bits)) != (((__typeof__(val))(~0))>>((bits)+2)))) ? \

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#186: FILE: arch/parisc/kernel/module.c:287:
+	 * one additional for correct alignment of the stubs) */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Rela>
#208: FILE: arch/parisc/kernel/module.c:307:
+		const Elf_Rela *rels = (void *)sechdrs[i].sh_addr;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#226: FILE: arch/parisc/kernel/module.c:328:
+		 *  some memory. */

WARNING:TYPO_SPELLING: 'amunt' may be misspelled - perhaps 'amount'?
#235: FILE: arch/parisc/kernel/module.c:337:
+		/* amunt of stubs we want to add to this section */
 		   ^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Addr>
#268: FILE: arch/parisc/kernel/module.c:418:
+	enum elf_stub_type stub_type, Elf_Addr loc0, unsigned int targetsec)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#285: FILE: arch/parisc/kernel/module.c:423:
+	BUG_ON(0 == me->arch.section[targetsec].stub_entries--);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#285: FILE: arch/parisc/kernel/module.c:423:
+	BUG_ON(0 == me->arch.section[targetsec].stub_entries--);

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:SPACING: No space is necessary after a cast
#290: FILE: arch/parisc/kernel/module.c:428:
+	stub = (void *) loc0;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#328: FILE: arch/parisc/kernel/module.c:612:
+				 * stub entry instead */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#330: FILE: arch/parisc/kernel/module.c:614:
+				val = get_stub(me, sym->st_value, addend,
+					ELF_STUB_DIRECT, loc0, targetsec);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#331: FILE: arch/parisc/kernel/module.c:615:
+				val = (val - dot - 8)/4;
 				                     ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#348: FILE: arch/parisc/kernel/module.c:627:
+				 * stub entry instead */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#350: FILE: arch/parisc/kernel/module.c:629:
+				val = get_stub(me, sym->st_value, addend,
+					ELF_STUB_DIRECT, loc0, targetsec);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#351: FILE: arch/parisc/kernel/module.c:630:
+				val = (val - dot - 8)/4;
 				                     ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#399: FILE: arch/parisc/kernel/module.c:733:
+				 * bits away */

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#400: FILE: arch/parisc/kernel/module.c:734:
+				val = (val - dot - 8)/4;
 				                     ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#403: FILE: arch/parisc/kernel/module.c:737:
+					 * stub entry instead */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#405: FILE: arch/parisc/kernel/module.c:739:
+					val = get_stub(me, sym->st_value,
+						addend, ELF_STUB_DIRECT,

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#451: FILE: arch/parisc/kernel/module.c:847:
+	printk("got entries used %ld, gots max %ld\n"

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000189245.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 11 warnings, 19 checks, 368 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000189245.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
