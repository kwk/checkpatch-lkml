ERROR:INITIALISED_STATIC: do not initialise statics to 0
#66: FILE: drivers/pci/intel-iommu.c:56:
+static int dmar_forcedac = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:CODE_INDENT: code indent should use tabs where possible
#74: FILE: drivers/pci/intel-iommu.c:73:
+ ^I^I} else if (!strncmp(str, "forcedac", 8)) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#74: FILE: drivers/pci/intel-iommu.c:73:
+ ^I^I} else if (!strncmp(str, "forcedac", 8)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: drivers/pci/intel-iommu.c:73:
+ ^I^I} else if (!strncmp(str, "forcedac", 8)) {$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#75: FILE: drivers/pci/intel-iommu.c:74:
+			printk (KERN_INFO"Intel-IOMMU: Enabling DAC for PCI supporting > 32Bit DMA\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#75: FILE: drivers/pci/intel-iommu.c:74:
+			printk (KERN_INFO"Intel-IOMMU: Enabling DAC for PCI supporting > 32Bit DMA\n");

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#75: FILE: drivers/pci/intel-iommu.c:74:
+			printk (KERN_INFO"Intel-IOMMU: Enabling DAC for PCI supporting > 32Bit DMA\n");

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pdev->dma_mask <= DMA_32BIT_MASK'
#85: FILE: drivers/pci/intel-iommu.c:1507:
+	if ((pdev->dma_mask <= DMA_32BIT_MASK) || (dmar_forcedac)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000421828.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 4 warnings, 2 checks, 37 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000421828.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
