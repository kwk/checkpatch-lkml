ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#125: FILE: drivers/video/efifb.c:66:
+	[M_MINI]= { "mini", 0x80000000, 2048 * 4, 1024, 768 },
 	        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#137: FILE: drivers/video/efifb.c:78:
+#define EFIFB_DMI_SYSTEM_ID(vendor, name, enumid)		\
+	{ set_system, name, {					\
+		DMI_MATCH(DMI_BIOS_VENDOR, vendor),		\
+		DMI_MATCH(DMI_PRODUCT_NAME, name) },		\
+	  &dmi_list[enumid] }

WARNING:MISPLACED_INIT: __initdata should be placed after dmi_system_table[]
#143: FILE: drivers/video/efifb.c:84:
+static struct dmi_system_id __initdata dmi_system_table[] = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:LINE_SPACING: Missing a blank line after declarations
#174: FILE: drivers/video/efifb.c:115:
+	struct efifb_dmi_info *info = id->driver_data;
+	if (info->base == 0)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#177: FILE: drivers/video/efifb.c:118:
+	printk(KERN_INFO "efifb: dmi detected %s - framebuffer at %p "

WARNING:SPLIT_STRING: quoted string split across lines
#178: FILE: drivers/video/efifb.c:119:
+	printk(KERN_INFO "efifb: dmi detected %s - framebuffer at %p "
+			 "(%dx%d, stride %d)\n", id->ident,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#211: FILE: drivers/video/efifb.c:179:
+		if (!*this_opt) continue;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#215: FILE: drivers/video/efifb.c:183:
+			if (!strcmp(this_opt, dmi_list[i].optname) &&
+					dmi_list[i].base != 0) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#223: FILE: drivers/video/efifb.c:191:
+			screen_info.lfb_base = simple_strtoul(this_opt+5, NULL, 0);
 			                                              ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#223: FILE: drivers/video/efifb.c:191:
+			screen_info.lfb_base = simple_strtoul(this_opt+5, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#225: FILE: drivers/video/efifb.c:193:
+			screen_info.lfb_linelength = simple_strtoul(this_opt+7, NULL, 0) * 4;
 			                                                    ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#225: FILE: drivers/video/efifb.c:193:
+			screen_info.lfb_linelength = simple_strtoul(this_opt+7, NULL, 0) * 4;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#227: FILE: drivers/video/efifb.c:195:
+			screen_info.lfb_height = simple_strtoul(this_opt+7, NULL, 0);
 			                                                ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#227: FILE: drivers/video/efifb.c:195:
+			screen_info.lfb_height = simple_strtoul(this_opt+7, NULL, 0);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#229: FILE: drivers/video/efifb.c:197:
+			screen_info.lfb_width = simple_strtoul(this_opt+6, NULL, 0);
 			                                               ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#229: FILE: drivers/video/efifb.c:197:
+			screen_info.lfb_width = simple_strtoul(this_opt+6, NULL, 0);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#243: FILE: drivers/video/efifb.c:211:
+	printk(KERN_INFO "efifb: probing for efifb\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#289: FILE: drivers/video/efifb.c:271:
+		printk(KERN_ERR "efifb: cannot allocate framebuffer\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#308: FILE: drivers/video/efifb.c:337:
+	if ((err = fb_alloc_cmap(&info->cmap, 256, 0)) < 0) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#309: FILE: drivers/video/efifb.c:338:
+		printk(KERN_ERR "efifb: cannot allocate colormap\n");

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#314: FILE: drivers/video/efifb.c:341:
+	if ((err = register_framebuffer(info)) < 0) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#315: FILE: drivers/video/efifb.c:342:
+		printk(KERN_ERR "efifb: cannot register framebuffer\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000231615.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 12 warnings, 6 checks, 300 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000231615.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
