WARNING:MEMORY_BARRIER: memory barrier without comment
#80: FILE: fs/exec.c:937:
+	wmb();

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#81: FILE: fs/exec.c:938:
+	strlcpy(tsk->comm+1, buf+1, sizeof(tsk->comm)-1);
 	                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#81: FILE: fs/exec.c:938:
+	strlcpy(tsk->comm+1, buf+1, sizeof(tsk->comm)-1);
 	                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#81: FILE: fs/exec.c:938:
+	strlcpy(tsk->comm+1, buf+1, sizeof(tsk->comm)-1);
 	                                             ^

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#81: FILE: fs/exec.c:938:
+	strlcpy(tsk->comm+1, buf+1, sizeof(tsk->comm)-1);

WARNING:MEMORY_BARRIER: memory barrier without comment
#82: FILE: fs/exec.c:939:
+	wmb();

CHECK:LINE_SPACING: Please don't use multiple blank lines
#95: FILE: fs/proc/base.c:1268:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#99: FILE: fs/proc/base.c:1272:
+comm_write(struct file *file, const char __user *buf,
+	    size_t count, loff_t *offset)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#125: FILE: fs/proc/base.c:1298:
+
+

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#144: FILE: fs/proc/base.c:1317:
+static int comm_open(struct inode *inode, struct file *filp)
                                                        ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#148: FILE: fs/proc/base.c:1321:
+	ret = single_open(filp, comm_show, NULL);
 	                  ^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#157: FILE: fs/proc/base.c:1330:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#166: FILE: fs/proc/base.c:1339:
+
+

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#174: FILE: fs/proc/base.c:2579:
+	REG("comm",      S_IRUGO|S_IWUSR, proc_pid_set_comm_operations),
 	                        ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#174: FILE: fs/proc/base.c:2579:
+	REG("comm",      S_IRUGO|S_IWUSR, proc_pid_set_comm_operations),

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#182: FILE: fs/proc/base.c:2915:
+	REG("comm",      S_IRUGO|S_IWUSR, proc_pid_set_comm_operations),
 	                        ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO|S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#182: FILE: fs/proc/base.c:2915:
+	REG("comm",      S_IRUGO|S_IWUSR, proc_pid_set_comm_operations),

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000054020.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 10 checks, 111 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000054020.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
