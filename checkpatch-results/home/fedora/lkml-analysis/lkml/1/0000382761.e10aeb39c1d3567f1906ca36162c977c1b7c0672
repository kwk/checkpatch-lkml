CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#98: FILE: mm/filemap.c:755:
+		if (!page_is_pagecache(pages[i]) ||
+		     pages[i]->index != index)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#135: FILE: mm/filemap.c:2118:
+			if (unlikely(!page_is_pagecache(page) ||
+					PageUptodate(page))) {

CHECK:SPACING: No space is necessary after a cast
#309: FILE: mm/rmap.c:514:
+	page->mapping = (unsigned long) anon_vma;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#318: FILE: mm/rmap.c:549:
+	BUG_ON(page->mapping != (unsigned long)anon_vma);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#327: FILE: mm/rmap.c:649:
+			printk (KERN_EMERG "  page->mapping = %p\n", (void*)page->mapping);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#327: FILE: mm/rmap.c:649:
+			printk (KERN_EMERG "  page->mapping = %p\n", (void*)page->mapping);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#327: FILE: mm/rmap.c:649:
+			printk (KERN_EMERG "  page->mapping = %p\n", (void*)page->mapping);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#417: FILE: mm/truncate.c:371:
+	if (!pagecache_consistent(page, mapping) ||
+		mapping->a_ops->launder_page == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!mapping->a_ops->launder_page"
#417: FILE: mm/truncate.c:371:
+		mapping->a_ops->launder_page == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000382761.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 3 warnings, 5 checks, 320 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000382761.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
