WARNING:LINE_SPACING: Missing a blank line after declarations
#51: FILE: arch/x86/kernel/e820_32.c:679:
+	int i;
+	for (i = 0; i < e820.nr_map; i++) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#53: FILE: arch/x86/kernel/e820_32.c:681:
+		struct e820entry *ei = &e820.map[i];
+		if (ei->type == E820_RESERVED)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#85: FILE: arch/x86/kernel/e820_32.c:711:
+int e820_all_mapped(u64 s, u64 e, unsigned type)

WARNING:LINE_SPACING: Missing a blank line after declarations
#96: FILE: arch/x86/kernel/e820_32.c:739:
+	int i;
+	for (i = 0; i < e820.nr_map; i++) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#98: FILE: arch/x86/kernel/e820_32.c:741:
+		struct e820entry *ei = &e820.map[i];
+		if (ei->type == E820_RESERVED)

WARNING:LINE_SPACING: Missing a blank line after declarations
#157: FILE: arch/x86/mm/init_32.c:149:
+	static unsigned long res_phys_page;
+	if (!res_phys_page) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#158: FILE: arch/x86/mm/init_32.c:150:
+	if (!res_phys_page) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: arch/x86/mm/init_32.c:152:
+^I^I                alloc_bootmem_low_pages(PAGE_SIZE);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#162: FILE: arch/x86/mm/init_32.c:154:
+			BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#178: FILE: arch/x86/mm/init_32.c:170:
+	if (!res_phys_ptepage) {
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#180: FILE: arch/x86/mm/init_32.c:172:
+^I^I                   alloc_bootmem_low_pages(PAGE_SIZE);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#182: FILE: arch/x86/mm/init_32.c:174:
+			BUG();

ERROR:CODE_INDENT: code indent should use tabs where possible
#185: FILE: arch/x86/mm/init_32.c:177:
+^I^I                  __pa(res_phys_ptepage) >> PAGE_SHIFT);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#230: FILE: arch/x86/mm/init_32.c:228:
+^I^I^I^I           PAGE_OFFSET - 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#272: FILE: arch/x86/mm/init_32.c:261:
+^I^I^I^I                         paddr + PAGE_SIZE)) {$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#273: FILE: arch/x86/mm/init_32.c:262:
+				                         paddr + PAGE_SIZE)) {
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#276: FILE: arch/x86/mm/init_32.c:265:
+^I^I^I^I^I        pfn_pte(temp_pfn, PAGE_KERNEL));$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#291: FILE: arch/x86/mm/init_32.c:788:
+	printk("Prune to be done here. max_low_pfn %lu\n", max_low_pfn);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#306: FILE: include/asm-x86/e820_32.h:23:
+extern int e820_all_mapped(u64 start, u64 end, unsigned type);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#306: FILE: include/asm-x86/e820_32.h:23:
+extern int e820_all_mapped(u64 start, u64 end, unsigned type);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#308: FILE: include/asm-x86/e820_32.h:25:
+extern int e820_any_non_reserved(u64 start, u64 end);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#309: FILE: include/asm-x86/e820_32.h:26:
+extern int is_memory_any_valid(u64 start, u64 end);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#310: FILE: include/asm-x86/e820_32.h:27:
+extern int e820_all_non_reserved(u64 start, u64 end);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#311: FILE: include/asm-x86/e820_32.h:28:
+extern int is_memory_all_valid(u64 start, u64 end);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#312: FILE: include/asm-x86/e820_32.h:29:
+extern int is_memory_all_reserved(u64 start, u64 end);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000338246.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 10 warnings, 9 checks, 284 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000338246.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
