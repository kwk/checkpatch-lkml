CHECK:CAMELCASE: Avoid CamelCase: <Dprintk>
#56: FILE: arch/x86/kernel/setup.c:32:
+#undef Dprintk

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#84: FILE: arch/x86/kernel/setup.c:157:
+	printk(KERN_DEBUG "NR_CPUS: %d, nr_cpu_ids: %d, nr_node_ids %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#85: FILE: arch/x86/kernel/setup.c:158:
+	printk(KERN_DEBUG "NR_CPUS: %d, nr_cpu_ids: %d, nr_node_ids %d\n",
+		NR_CPUS, nr_cpu_ids, nr_node_ids);

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#85: FILE: arch/x86/kernel/setup.c:158:
+		NR_CPUS, nr_cpu_ids, nr_node_ids);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'setup_node_to_cpumask_map', this function's name, in a string
#122: FILE: arch/x86/kernel/setup.c:195:
+	Dprintk(KERN_DEBUG "== setup_node_to_cpumask_map %p (%d)\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!node_to_cpumask_map"
#159: FILE: arch/x86/kernel/setup.c:247:
+	if (node_to_cpumask_map == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#160: FILE: arch/x86/kernel/setup.c:248:
+		printk(KERN_DEBUG "== node_to_cpumask_map NULL!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#172: FILE: arch/x86/kernel/setup.c:260:
+	printk(KERN_DEBUG "== %s cpu %d node %d: mask now %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#173: FILE: arch/x86/kernel/setup.c:261:
+	printk(KERN_DEBUG "== %s cpu %d node %d: mask now %s\n",
+		enable? "numa_add_cpu":"numa_remove_cpu", cpu, node, buf);

ERROR:SPACING: spaces required around that '?' (ctx:VxW)
#173: FILE: arch/x86/kernel/setup.c:261:
+		enable? "numa_add_cpu":"numa_remove_cpu", cpu, node, buf);
 		      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#173: FILE: arch/x86/kernel/setup.c:261:
+		enable? "numa_add_cpu":"numa_remove_cpu", cpu, node, buf);
 		                      ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#174: FILE: arch/x86/kernel/setup.c:262:
+ }$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!node_to_cpumask_map"
#216: FILE: arch/x86/kernel/setup.c:309:
+	if (node_to_cpumask_map == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#217: FILE: arch/x86/kernel/setup.c:310:
+		printk(KERN_WARNING

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '_node_to_cpumask_ptr', this function's name, in a string
#218: FILE: arch/x86/kernel/setup.c:311:
+			"_node_to_cpumask_ptr(%d): no node_to_cpumask_map!\n",

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!node_to_cpumask_map"
#232: FILE: arch/x86/kernel/setup.c:325:
+	if (node_to_cpumask_map == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#233: FILE: arch/x86/kernel/setup.c:326:
+		printk(KERN_WARNING

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'node_to_cpumask', this function's name, in a string
#234: FILE: arch/x86/kernel/setup.c:327:
+			"node_to_cpumask(%d): no node_to_cpumask_map!\n", node);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000292401.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 10 warnings, 7 checks, 217 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000292401.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
