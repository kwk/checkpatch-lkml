WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
> >>>> Feb  9 18:40:29 server kernel: ata7.00: exception Emask 0x0 SAct 0x1 SErr 0x0 action 0x2 frozen

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#64: 
Björn
  ^

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#68: 
--- a/drivers/ata/sata_nv.c	2007-01-26 19:25:31.000000000 +0100

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#102: FILE: drivers/ata/sata_nv.c:659:
+	if (unlikely((force_err ||
+		     flags & (NV_CPB_RESP_ATA_ERR |

ERROR:SPACING: space prohibited before that close parenthesis ')'
#109: FILE: drivers/ata/sata_nv.c:666:
+		ata_ehi_push_desc(ehi, "CPB resp_flags 0x%x", flags );

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#154: FILE: drivers/ata/sata_nv.c:699:
+				u8 ata_status = readb(nv_adma_ctl_block(ap) + (ATA_REG_STATUS * 4));
+				qc->err_mask |= ac_err_mask(ata_status);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that close parenthesis ')'
#189: FILE: drivers/ata/sata_nv.c:794:
+				ata_ehi_push_desc(ehi, "ADMA status 0x%08x", status );

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#226: FILE: drivers/ata/sata_nv.c:816:
+					nv_adma_check_cpb(ap, ap->active_tag,
+						notifier_error & (1 << ap->active_tag));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#237: FILE: drivers/ata/sata_nv.c:824:
+						error = nv_adma_check_cpb(ap, pos,
+							notifier_error & (1 << pos) );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#237: FILE: drivers/ata/sata_nv.c:824:
+							notifier_error & (1 << pos) );

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#256: FILE: drivers/ata/sata_nv.c:1134:
+	/* ADMA engine can only be used for non-ATAPI DMA commands,
+	   or interrupt-driven no-data commands. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#256: FILE: drivers/ata/sata_nv.c:1134:
+	   or interrupt-driven no-data commands. */

ERROR:SPACING: space required before the open parenthesis '('
#257: FILE: drivers/ata/sata_nv.c:1135:
+	if((pp->flags & NV_ADMA_ATAPI_SETUP_COMPLETE) ||

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'qc->tf.protocol == ATA_PROT_NODATA'
#261: FILE: drivers/ata/sata_nv.c:1139:
+	if((qc->flags & ATA_QCFLAG_DMAMAP) ||
+	   (qc->tf.protocol == ATA_PROT_NODATA))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:SPACING: space required before the open parenthesis '('
#261: FILE: drivers/ata/sata_nv.c:1139:
+	if((qc->flags & ATA_QCFLAG_DMAMAP) ||

ERROR:SPACING: space required before the open parenthesis '('
#289: FILE: drivers/ata/sata_nv.c:1173:
+	if(qc->flags & ATA_QCFLAG_DMAMAP) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#289: FILE: drivers/ata/sata_nv.c:1173:
+	if(qc->flags & ATA_QCFLAG_DMAMAP) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#292: FILE: drivers/ata/sata_nv.c:1176:
+	} else

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000468724.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 4 warnings, 7 checks, 262 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000468724.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
