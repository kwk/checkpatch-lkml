WARNING:UNKNOWN_COMMIT_ID: Unknown commit id '86fe0ff220a795c82aa9dea5dc4b7359519a1366', maybe rebased or not pulled?
#32: 
commit 86fe0ff220a795c82aa9dea5dc4b7359519a1366

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
    [ETHTOOL] Introduce get_sset_count. Obsolete get_stats_count, self_test_count

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#38: 
    Signed-off-by: Jeff Garzik <jeff@garzik.org>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct net_device *' should also have an identifier name
#65: FILE: include/linux/ethtool.h:389:
+	int	(*get_sset_count)(struct net_device *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#65: FILE: include/linux/ethtool.h:389:
+	int	(*get_sset_count)(struct net_device *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct net_device *' should also have an identifier name
#68: FILE: include/linux/ethtool.h:392:
+	int	(*self_test_count)(struct net_device *);/* use get_sset_count */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct net_device *' should also have an identifier name
#69: FILE: include/linux/ethtool.h:393:
+	int	(*get_stats_count)(struct net_device *);/* use get_sset_count */

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#133: FILE: net/core/ethtool.c:705:
+	data = kmalloc(test_len * sizeof(u64), GFP_USER);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#208: FILE: net/core/ethtool.c:819:
+	data = kmalloc(n_stats * sizeof(u64), GFP_USER);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000393195.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 9 warnings, 0 checks, 153 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000393195.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
