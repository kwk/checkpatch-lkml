CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#95: FILE: include/linux/pm_qos_params.h:21:
+void pm_qos_update_request(struct pm_qos_request_list *pm_qos_req,
+		s32 new_value);

WARNING:TYPO_SPELLING: 'comparitor' may be misspelled - perhaps 'comparator'?
#214: FILE: kernel/pm_qos_params.c:149:
+		extreme_value = pm_qos_array[pm_qos_class]->comparitor(
 		                                            ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#214: FILE: kernel/pm_qos_params.c:149:
+		extreme_value = pm_qos_array[pm_qos_class]->comparitor(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#225: FILE: kernel/pm_qos_params.c:156:
+		atomic_set(&pm_qos_array[pm_qos_class]->target_value,
+				extreme_value);

WARNING:UNNECESSARY_KERN_LEVEL: Possible unnecessary KERN_ERR
#226: FILE: kernel/pm_qos_params.c:157:
+		pr_debug(KERN_ERR "new target for qos %d is %d\n", pm_qos_class,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#227: FILE: kernel/pm_qos_params.c:158:
+		pr_debug(KERN_ERR "new target for qos %d is %d\n", pm_qos_class,
+			atomic_read(&pm_qos_array[pm_qos_class]->target_value));

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#234: FILE: kernel/pm_qos_params.c:163:
+		blocking_notifier_call_chain(

CHECK:SPACING: No space is necessary after a cast
#236: FILE: kernel/pm_qos_params.c:165:
+					(unsigned long) extreme_value, NULL);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*dep)...) over kzalloc(sizeof(struct pm_qos_request_list)...)
#280: FILE: kernel/pm_qos_params.c:218:
+	dep = kzalloc(sizeof(struct pm_qos_request_list), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#326: FILE: kernel/pm_qos_params.c:248:
+void pm_qos_update_request(struct pm_qos_request_list *pm_qos_req,
+		s32 new_value)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#351: FILE: kernel/pm_qos_params.c:261:
+	if (temp != pm_qos_req->value) {
+		pending_update = 1;
 	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#438: FILE: kernel/pm_qos_params.c:337:
+		filp->private_data = (void *) pm_qos_add_request(pm_qos_class,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000040707.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 9 checks, 378 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000040707.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
