ERROR:CODE_INDENT: code indent should use tabs where possible
#80: FILE: arch/i386/mm/init.c:810:
+^I                 size >> PAGE_SHIFT, PAGE_KERNEL_RX);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#81: FILE: arch/i386/mm/init.c:811:
+	printk("Write protecting the kernel text: %luk\n", size >> 10);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#101: FILE: arch/i386/mm/init.c:838:
+	if (rodata_marked && address >= PFN_ALIGN(_text)
+			&& (address + len) <= PFN_ALIGN(_etext)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#103: FILE: arch/i386/mm/init.c:840:
+		unsigned long nr_pages;
+		nr_pages = ((address + len) >> PAGE_SHIFT)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#106: FILE: arch/i386/mm/init.c:843:
+		change_page_attr(virt_to_page(address), nr_pages,
+				PAGE_KERNEL_EXEC);

WARNING:MEMORY_BARRIER: memory barrier without comment
#107: FILE: arch/i386/mm/init.c:844:
+		mb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#109: FILE: arch/i386/mm/init.c:846:
+		mb();

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#118: FILE: arch/i386/mm/init.c:855:
+	if (rodata_marked && address >= PFN_ALIGN(_text)
+			&& (address + len) <= PFN_ALIGN(_etext)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#120: FILE: arch/i386/mm/init.c:857:
+		unsigned long nr_pages;
+		nr_pages = ((address + len) >> PAGE_SHIFT)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#123: FILE: arch/i386/mm/init.c:860:
+		change_page_attr(virt_to_page(address), nr_pages,
+				PAGE_KERNEL_RX);

WARNING:MEMORY_BARRIER: memory barrier without comment
#124: FILE: arch/i386/mm/init.c:861:
+		mb();

WARNING:MEMORY_BARRIER: memory barrier without comment
#126: FILE: arch/i386/mm/init.c:863:
+		mb();

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#144: FILE: include/asm-i386/cacheflush.h:41:
+extern void kernel_text_mark_rw(unsigned long address, size_t len);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#145: FILE: include/asm-i386/cacheflush.h:42:
+extern void kernel_text_unmark(unsigned long address, size_t len);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000406410.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 7 warnings, 6 checks, 105 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000406410.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
