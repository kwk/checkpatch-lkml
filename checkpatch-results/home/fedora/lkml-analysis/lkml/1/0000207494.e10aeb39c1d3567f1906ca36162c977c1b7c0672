WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#64: FILE: init/Kconfig:411:
+config CGROUP_BIO
+	bool "Block I/O cgroup subsystem"
+	depends on CGROUP_MEM_RES_CTLR
+	select MM_OWNER
+	help
+	  A generic proportinal weight IO controller.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#79: FILE: mm/biocontrol.c:1:
+/* biocontrol.c - Block I/O Controller

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#114: FILE: mm/biocontrol.c:36:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#163: FILE: mm/biocontrol.c:85:
+struct bio* __bio_group_dequeue_bio(struct bio_group *biog)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: mm/biocontrol.c:87:
+       struct bio *bio = NULL;$

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#173: FILE: mm/biocontrol.c:95:
+struct bio* bio_group_dequeue_bio(struct bio_group *biog)

WARNING:LINE_SPACING: Missing a blank line after declarations
#177: FILE: mm/biocontrol.c:99:
+	struct bio *bio;
+	spin_lock_irqsave(&biog->bio_group_lock, flags);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#184: FILE: mm/biocontrol.c:106:
+ * if there is an active bio_group for the request queue. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#185: FILE: mm/biocontrol.c:107:
+struct bio_group* bio_group_from_cgroup(struct bio_cgroup *biocg,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#186: FILE: mm/biocontrol.c:108:
+struct bio_group* bio_group_from_cgroup(struct bio_cgroup *biocg,
+						struct request_queue *q)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#225: FILE: mm/biocontrol.c:147:
+static struct cgroup_subsys_state * bio_cgroup_create(struct cgroup_subsys *ss,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#226: FILE: mm/biocontrol.c:148:
+static struct cgroup_subsys_state * bio_cgroup_create(struct cgroup_subsys *ss,
+							 struct cgroup *cgrp)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#272: FILE: mm/biocontrol.c:194:
+				BUG_ON(bio_group_on_queue(biog));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#274: FILE: mm/biocontrol.c:196:
+				spin_unlock_irqrestore(&biog->bio_group_lock,
+								flags1);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#277: FILE: mm/biocontrol.c:199:
+				break;
+			} else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#280: FILE: mm/biocontrol.c:202:
+				spin_unlock_irqrestore(&biog->bio_group_lock,
+								flags1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#282: FILE: mm/biocontrol.c:204:
+				spin_unlock_irqrestore(&biocg->biog_list_lock,
+								flags);

WARNING:MSLEEP: msleep < 20ms can sleep for up to 20ms; see Documentation/timers/timers-howto.rst
#283: FILE: mm/biocontrol.c:205:
+				msleep(1);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#287: FILE: mm/biocontrol.c:209:
+				spin_lock_irqsave(&biocg->biog_list_lock,
+							flags);

WARNING:RETURN_VOID: void function return statements are not generally useful
#296: FILE: mm/biocontrol.c:218:
+	return;
+}

WARNING:LINE_SPACING: Missing a blank line after declarations
#306: FILE: mm/biocontrol.c:228:
+	struct bio_cgroup *biocg = pc->bio_cgroup;
+	pc->bio_cgroup = NULL;

WARNING:TYPO_SPELLING: 'Igonore' may be misspelled - perhaps 'Ignore'?
#309: FILE: mm/biocontrol.c:231:
+	 * is being freed now. Igonore it. */
 	                       ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#309: FILE: mm/biocontrol.c:231:
+	 * is being freed now. Igonore it. */

WARNING:TYPO_SPELLING: 'releated' may be misspelled - perhaps 'related'?
#345: FILE: mm/biocontrol.c:267:
+	/* Now free up all the bio groups releated to cgroup */
 	                                  ^^^^^^^^

WARNING:RETURN_VOID: void function return statements are not generally useful
#348: FILE: mm/biocontrol.c:270:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#351: FILE: mm/biocontrol.c:273:
+static void bio_cgroup_pre_destroy(struct cgroup_subsys *ss,
+						struct cgroup *cgrp)

WARNING:LINE_SPACING: Missing a blank line after declarations
#354: FILE: mm/biocontrol.c:276:
+	struct bio_cgroup *biocg = cgroup_bio(cgrp);
+	bio_cgroup_force_empty(biocg);

WARNING:LINE_SPACING: Missing a blank line after declarations
#360: FILE: mm/biocontrol.c:282:
+	struct bio_cgroup *biocg = cgroup_bio(cgrp);
+	kfree(biocg);

CHECK:SPACING: No space is necessary after a cast
#367: FILE: mm/biocontrol.c:289:
+	return (u64) biog->shares;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#382: FILE: mm/biocontrol.c:304:
+	return (u64) biocg->aggregate_tokens;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#386: FILE: mm/biocontrol.c:308:
+static int bio_aggregate_tokens_write(struct cgroup *cgrp, struct cftype *cft,
+						u64 val)

CHECK:SPACING: No space is necessary after a cast
#398: FILE: mm/biocontrol.c:320:
+	return (u64) biocg->jiffies;

CHECK:SPACING: No space is necessary after a cast
#405: FILE: mm/biocontrol.c:327:
+	return (u64) biocg->nr_off_the_tree;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#409: FILE: mm/biocontrol.c:331:
+static int bio_nr_off_the_tree_write(struct cgroup *cgrp, struct cftype *cft,
+						u64 val)

CHECK:SPACING: No space is necessary after a cast
#421: FILE: mm/biocontrol.c:343:
+	return (u64) biocg->nr_token_slices;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#425: FILE: mm/biocontrol.c:347:
+static int bio_nr_token_slices_write(struct cgroup *cgrp,
+						struct cftype *cft, u64 val)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#433: FILE: mm/biocontrol.c:355:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#470: FILE: mm/biocontrol.c:392:
+static void bio_cgroup_move_task(struct cgroup_subsys *ss,
+				struct cgroup *cont,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#477: FILE: mm/biocontrol.c:399:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#493: FILE: include/linux/biocontrol.h:1:
+#include <linux/cgroup.h>

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#514: FILE: include/linux/biocontrol.h:22:
+	spinlock_t		biog_list_lock;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#521: FILE: include/linux/biocontrol.h:29:
+^Iunsigned long ^I^Iaggregate_tokens;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#522: FILE: include/linux/biocontrol.h:30:
+^Iunsigned long ^I^Ijiffies;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#523: FILE: include/linux/biocontrol.h:31:
+^Iunsigned long ^I^Inr_off_the_tree;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#524: FILE: include/linux/biocontrol.h:32:
+^Iunsigned long ^I^Inr_token_slices;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#549: FILE: include/linux/biocontrol.h:57:
+static inline void set_bio_cgroup(struct page_cgroup *pc,
+					struct bio_cgroup *biog)

WARNING:LINE_SPACING: Missing a blank line after declarations
#557: FILE: include/linux/biocontrol.h:65:
+	struct bio_cgroup *biog = pc->bio_cgroup;
+	get_bio_cgroup(biog);

WARNING:TYPO_SPELLING: 'sould' may be misspelled - perhaps 'could'?
#561: FILE: include/linux/biocontrol.h:69:
+/* This sould be called in an RCU-protected section. */
         ^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#565: FILE: include/linux/biocontrol.h:73:
+	struct bio_cgroup *biog;
+	biog = bio_cgroup_from_task(rcu_dereference(mm->owner));

WARNING:LINE_SPACING: Missing a blank line after declarations
#573: FILE: include/linux/biocontrol.h:81:
+	struct bio_cgroup *biocg = pc->bio_cgroup;
+	list_add(&pc->blist, &biocg->page_list);

WARNING:LINE_SPACING: Missing a blank line after declarations
#580: FILE: include/linux/biocontrol.h:88:
+	unsigned long flags;
+	spin_lock_irqsave(&biocg->page_list_lock, flags);

WARNING:TYPO_SPELLING: 'Igonore' may be misspelled - perhaps 'Ignore'?
#597: FILE: include/linux/biocontrol.h:105:
+	 * is being freed now. Igonore it. */
 	                       ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#597: FILE: include/linux/biocontrol.h:105:
+	 * is being freed now. Igonore it. */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#605: FILE: include/linux/biocontrol.h:113:
+extern void clear_bio_cgroup(struct page_cgroup *pc);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#607: FILE: include/linux/biocontrol.h:115:
+extern int bio_group_controller(struct request_queue *q, struct bio *bio);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#608: FILE: include/linux/biocontrol.h:116:
+extern void blk_biogroup_work(struct work_struct *work);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#627: FILE: include/linux/biocontrol.h:135:
+static inline void set_bio_cgroup(struct page_cgroup *pc,
+					struct bio_cgroup *biog)

WARNING:RETURN_VOID: void function return statements are not generally useful
#648: FILE: include/linux/biocontrol.h:156:
+	return;
+}

WARNING:RETURN_VOID: void function return statements are not generally useful
#653: FILE: include/linux/biocontrol.h:161:
+	return;
+}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#659: FILE: include/linux/biocontrol.h:167:
+}
+static inline void blk_biogroup_work(struct work_struct *work)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#663: FILE: include/linux/biocontrol.h:171:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#892: FILE: include/linux/memcontrol.h:39:
+#define PAGE_CGROUP_LOCK_BIT ^I0x0$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#894: FILE: include/linux/memcontrol.h:41:
+#define PAGE_CGROUP_LOCK ^I(1 << PAGE_CGROUP_LOCK_BIT)$

CHECK:BIT_MACRO: Prefer using the BIT macro
#894: FILE: include/linux/memcontrol.h:41:
+#define PAGE_CGROUP_LOCK 	(1 << PAGE_CGROUP_LOCK_BIT)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000207494.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 32 warnings, 28 checks, 852 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000207494.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
