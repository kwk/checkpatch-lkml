CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#258: FILE: drivers/serial/mpsc.c:489:
+static void mpsc_sdma_set_rx_ring(struct mpsc_port_info *pi,
+		struct mpsc_rx_desc *rxre_p)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#271: FILE: drivers/serial/mpsc.c:498:
+static void mpsc_sdma_set_tx_ring(struct mpsc_port_info *pi,
+		struct mpsc_tx_desc *txre_p)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#312: FILE: drivers/serial/mpsc.c:532:
+		dma_cache_sync(pi->port.dev, (void *)txre, MPSC_TXRE_SIZE,
+				DMA_FROM_DEVICE);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#510: FILE: drivers/serial/mpsc.c:759:
+		} else if ((pi->dma_region = dma_alloc_noncoherent(pi->port.dev,

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#599: FILE: drivers/serial/mpsc.c:875:
+	dma_cache_sync(pi->port.dev, (void *)pi->dma_region,
+			MPSC_DMA_ALLOC_SIZE, DMA_BIDIRECTIONAL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#647: FILE: drivers/serial/mpsc.c:945:
+	dma_cache_sync(pi->port.dev, (void *)rxre, MPSC_RXRE_SIZE,
+			DMA_FROM_DEVICE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#676: FILE: drivers/serial/mpsc.c:972:
+		dma_cache_sync(pi->port.dev, (void *)bp, MPSC_RXBE_SIZE,
+				DMA_FROM_DEVICE);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#723: FILE: drivers/serial/mpsc.c:1025:
+						| SDMA_DESC_CMDSTAT_OR)))
+				&& !(cmdstat & pi->port.ignore_status_mask)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#744: FILE: drivers/serial/mpsc.c:1042:
+		dma_cache_sync(pi->port.dev, (void *)rxre, MPSC_RXRE_SIZE,
+				DMA_BIDIRECTIONAL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#760: FILE: drivers/serial/mpsc.c:1054:
+		dma_cache_sync(pi->port.dev, (void *)rxre, MPSC_RXRE_SIZE,
+				DMA_FROM_DEVICE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#799: FILE: drivers/serial/mpsc.c:1086:
+	dma_cache_sync(pi->port.dev, (void *)txre, MPSC_TXRE_SIZE,
+			DMA_BIDIRECTIONAL);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#836: FILE: drivers/serial/mpsc.c:1117:
+		} else if (!uart_circ_empty(xmit)
+				&& !uart_tx_stopped(&pi->port)) {

WARNING:MINMAX: min() should probably be min_t(u32, MPSC_TXBE_SIZE, uart_circ_chars_pending(xmit))
#837: FILE: drivers/serial/mpsc.c:1118:
+			i = min((u32)MPSC_TXBE_SIZE,
 				(u32)uart_circ_chars_pending(xmit));

WARNING:MINMAX: min() should probably be min_t(u32, i, CIRC_CNT_TO_END(xmit->head, xmit->tail,
 				UART_XMIT_SIZE))
#839: FILE: drivers/serial/mpsc.c:1120:
+			i = min(i, (u32)CIRC_CNT_TO_END(xmit->head, xmit->tail,
 				UART_XMIT_SIZE));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#840: FILE: drivers/serial/mpsc.c:1121:
+			i = min(i, (u32)CIRC_CNT_TO_END(xmit->head, xmit->tail,
 				UART_XMIT_SIZE));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#855: FILE: drivers/serial/mpsc.c:1133:
+		dma_cache_sync(pi->port.dev, (void *)bp, MPSC_TXBE_SIZE,
+				DMA_BIDIRECTIONAL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#888: FILE: drivers/serial/mpsc.c:1159:
+		dma_cache_sync(pi->port.dev, (void *)txre, MPSC_TXRE_SIZE,
+				DMA_FROM_DEVICE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#908: FILE: drivers/serial/mpsc.c:1178:
+			dma_cache_sync(pi->port.dev, (void *)txre,
+					MPSC_TXRE_SIZE, DMA_FROM_DEVICE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1093: FILE: drivers/serial/mpsc.c:1378:
+static void mpsc_set_termios(struct uart_port *port, struct ktermios *termios,
 		 struct ktermios *old)

WARNING:TYPO_SPELLING: 'ser' may be misspelled - perhaps 'set'?
#1164: FILE: drivers/serial/mpsc.c:1497:
+static int mpsc_verify_port(struct uart_port *port, struct serial_struct *ser)
                                                                           ^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1233: FILE: drivers/serial/mpsc.c:1592:
+		dma_cache_sync(pi->port.dev, (void *)bp, MPSC_TXBE_SIZE,
+				DMA_BIDIRECTIONAL);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1304: FILE: drivers/serial/mpsc.c:1682:
+					MPSC_ROUTING_BASE_ORDER))
+			&& request_mem_region(r->start,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1323: FILE: drivers/serial/mpsc.c:1695:
+					MPSC_SDMA_INTR_BASE_ORDER))
+			&& request_mem_region(r->start,

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1379: FILE: drivers/serial/mpsc.c:1738:
+		if (!(rc = mpsc_shared_map_regs(dev))) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1427: FILE: drivers/serial/mpsc.c:1800:
+static int mpsc_drv_map_regs(struct mpsc_port_info *pi,
+		struct platform_device *pd)

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1434: FILE: drivers/serial/mpsc.c:1804:
+	if ((r = platform_get_resource(pd, IORESOURCE_MEM, MPSC_BASE_ORDER))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1435: FILE: drivers/serial/mpsc.c:1805:
+	if ((r = platform_get_resource(pd, IORESOURCE_MEM, MPSC_BASE_ORDER))
+			&& request_mem_region(r->start, MPSC_REG_BLOCK_SIZE,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1452: FILE: drivers/serial/mpsc.c:1816:
+					MPSC_SDMA_BASE_ORDER))
+			&& request_mem_region(r->start,

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1472: FILE: drivers/serial/mpsc.c:1830:
 	if ((r = platform_get_resource(pd,IORESOURCE_MEM,MPSC_BRG_BASE_ORDER))
+			&& request_mem_region(r->start,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1514: FILE: drivers/serial/mpsc.c:1877:
+static void mpsc_drv_get_platform_data(struct mpsc_port_info *pi,
+		struct platform_device *pd, int num)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000403517.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 3 warnings, 24 checks, 1502 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000403517.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
