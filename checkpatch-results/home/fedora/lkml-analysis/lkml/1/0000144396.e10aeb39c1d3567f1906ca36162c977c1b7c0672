WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
PI Futexes and their underlying rt_mutex cannot be left ownerless if there are

WARNING:TYPO_SPELLING: 'synchonized' may be misspelled - perhaps 'synchronized'?
#101: 
     race with the waiter since they weren't synchonized on the hb lock.  Thanks
                                             ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'verion' may be misspelled - perhaps 'version'?
#120: 
V1: -Initial verion
             ^^^^^^

WARNING:TYPO_SPELLING: 'atomicly' may be misspelled - perhaps 'atomically'?
#266: FILE: kernel/futex.c:1017:
+ *  0 - failed to acquire the lock atomicly
                                    ^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#271: FILE: kernel/futex.c:1022:
+static int futex_proxy_trylock_atomic(u32 __user *pifutex,
+				 struct futex_hash_bucket *hb1,

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#307: FILE: kernel/futex.c:1058:
+ * ^I^Ipi futex (pi to pi requeue is not supported)$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pi_state"
#352: FILE: kernel/futex.c:1101:
+	if (pi_state != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "pi_state"
#471: FILE: kernel/futex.c:1250:
+	if (pi_state != NULL)

CHECK:BRACES: braces {} should be used on all arms of this statement
#565: FILE: kernel/futex.c:2064:
+		if (timeout && !timeout->task)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#567: FILE: kernel/futex.c:2066:
+		else {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#573: FILE: kernel/futex.c:2072:
+			 * the user specified SA_RESTART or not? */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'initialyl' may be misspelled - perhaps 'initially'?
#582: FILE: kernel/futex.c:2081:
+ * @uaddr:	the futex we initialyl wait on (non-pi)
           	             ^^^^^^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#584: FILE: kernel/futex.c:2083:
+ * ^I^Ithe same type, no requeueing from private to shared, etc.$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'q.pi_state->owner != current'
#693: FILE: kernel/futex.c:2192:
+		if (q.pi_state && (q.pi_state->owner != current)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:TYPO_SPELLING: 'proprogate' may be misspelled - perhaps 'propagate'?
#717: FILE: kernel/futex.c:2216:
+		 * If fixup_owner() returned an error, proprogate that.  If it
 		                                       ^^^^^^^^^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000144396.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 9 warnings, 6 checks, 670 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000144396.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
