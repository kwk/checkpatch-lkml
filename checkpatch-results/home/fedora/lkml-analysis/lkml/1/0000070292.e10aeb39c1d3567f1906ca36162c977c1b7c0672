WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#55: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#60: FILE: drivers/target/target_core_seobj.c:1:
+/*******************************************************************************

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#80: FILE: drivers/target/target_core_seobj.c:21:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#81: FILE: drivers/target/target_core_seobj.c:22:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#85: FILE: drivers/target/target_core_seobj.c:26:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#125: FILE: drivers/target/target_core_seobj.c:66:
+void dev_obj_get_obj_info(

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!lun->lun_type_ptr"
#218: FILE: drivers/target/target_core_seobj.c:159:
+	if (lun->lun_type_ptr == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: braces {} should be used on all arms of this statement
#286: FILE: drivers/target/target_core_seobj.c:227:
+	if (TRANSPORT(dev)->transport_type == TRANSPORT_PLUGIN_PHBA_PDEV) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#291: FILE: drivers/target/target_core_seobj.c:232:
+	} else

WARNING:TABSTOP: Statements should start on a tabstop
#299: FILE: drivers/target/target_core_seobj.c:240:
+	 return dev->dev_sectors_total + ((zero_lba) ? 1 : 0);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#314: FILE: drivers/target/target_core_seobj.c:255:
+int dev_obj_do_se_mem_map(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#334: FILE: drivers/target/target_core_seobj.c:275:
+		ret = TRANSPORT(dev)->do_se_mem_map(task, se_mem_list,
+				in_mem, in_se_mem, out_se_mem, se_mem_cnt,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#496: FILE: drivers/target/target_core_seobj.c:437:
+unsigned char *dev_obj_get_cdb(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#505: FILE: drivers/target/target_core_seobj.c:446:
+int dev_obj_start(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#516: FILE: drivers/target/target_core_seobj.c:457:
+u32 dev_obj_get_cdb_count(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#533: FILE: drivers/target/target_core_seobj.c:474:
+u32 dev_obj_get_cdb_size(

CHECK:BRACES: Unbalanced braces around else statement
#543: FILE: drivers/target/target_core_seobj.c:484:
+		} else /* bytes */

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#548: FILE: drivers/target/target_core_seobj.c:489:
+#if 0

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#549: FILE: drivers/target/target_core_seobj.c:490:
+	printk(KERN_INFO "Returning block_size: %u, sectors: %u == %u for"

WARNING:SPLIT_STRING: quoted string split across lines
#550: FILE: drivers/target/target_core_seobj.c:491:
+	printk(KERN_INFO "Returning block_size: %u, sectors: %u == %u for"
+			" %s object\n", DEV_ATTRIB(dev)->block_size, sectors,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#557: FILE: drivers/target/target_core_seobj.c:498:
+void dev_obj_generate_cdb(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#588: FILE: drivers/target/target_core_seobj.c:529:
+		printk(KERN_ERR "se_device_t->transport is NULL!\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#589: FILE: drivers/target/target_core_seobj.c:530:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "allocate_DMA"
#592: FILE: drivers/target/target_core_seobj.c:533:
+	return (TRANSPORT(dev)->allocate_DMA != NULL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#707: FILE: drivers/target/target_core_seobj.c:648:
+		printk(KERN_ERR "Passed plugin_loc: %u exceeds pc->max_plugins:"

WARNING:SPLIT_STRING: quoted string split across lines
#708: FILE: drivers/target/target_core_seobj.c:649:
+		printk(KERN_ERR "Passed plugin_loc: %u exceeds pc->max_plugins:"
+			" %d\n", plugin_loc, pc->max_plugins);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#714: FILE: drivers/target/target_core_seobj.c:655:
+		printk(KERN_ERR "Passed plugin_loc: %u does not exist!\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#715: FILE: drivers/target/target_core_seobj.c:656:
+		printk(KERN_ERR "Passed plugin_loc: %u does not exist!\n",
+				plugin_loc);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#726: FILE: drivers/target/target_core_seobj.c:667:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#732: FILE: drivers/target/target_core_seobj.c:673:
+	dev_obj_template.obj_plugin = plugin_register((void *)&dev_obj_template,
+			TRANSPORT_LUN_TYPE_DEVICE, "dev", PLUGIN_TYPE_OBJ,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#735: FILE: drivers/target/target_core_seobj.c:676:
+		printk(KERN_ERR "plugin_register() failures\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#745: FILE: include/target/target_core_seobj.h:1:
+/*******************************************************************************

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#765: FILE: include/target/target_core_seobj.h:21:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#766: FILE: include/target/target_core_seobj.h:22:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#770: FILE: include/target/target_core_seobj.h:26:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#774: FILE: include/target/target_core_seobj.h:30:
+extern struct se_obj_lun_type_s *se_obj_get_api(u32);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#774: FILE: include/target/target_core_seobj.h:30:
+extern struct se_obj_lun_type_s *se_obj_get_api(u32);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#775: FILE: include/target/target_core_seobj.h:31:
+extern int se_obj_load_plugins(void);

WARNING:NEW_TYPEDEFS: do not add new typedefs
#781: FILE: include/target/target_core_seobj.h:37:
+typedef struct se_obj_lun_type_s {

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#784: FILE: include/target/target_core_seobj.h:40:
+	void (*get_obj_info)(void *, struct se_lun_s *, unsigned long long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_lun_s *' should also have an identifier name
#784: FILE: include/target/target_core_seobj.h:40:
+	void (*get_obj_info)(void *, struct se_lun_s *, unsigned long long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long long' should also have an identifier name
#784: FILE: include/target/target_core_seobj.h:40:
+	void (*get_obj_info)(void *, struct se_lun_s *, unsigned long long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#784: FILE: include/target/target_core_seobj.h:40:
+	void (*get_obj_info)(void *, struct se_lun_s *, unsigned long long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#784: FILE: include/target/target_core_seobj.h:40:
+	void (*get_obj_info)(void *, struct se_lun_s *, unsigned long long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#784: FILE: include/target/target_core_seobj.h:40:
+	void (*get_obj_info)(void *, struct se_lun_s *, unsigned long long,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#785: FILE: include/target/target_core_seobj.h:41:
+	void (*get_obj_info)(void *, struct se_lun_s *, unsigned long long,
+				int, char *, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#786: FILE: include/target/target_core_seobj.h:42:
+	void (*get_plugin_info)(void *, char *, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#786: FILE: include/target/target_core_seobj.h:42:
+	void (*get_plugin_info)(void *, char *, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#786: FILE: include/target/target_core_seobj.h:42:
+	void (*get_plugin_info)(void *, char *, int *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#787: FILE: include/target/target_core_seobj.h:43:
+	void *(*get_obj)(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#788: FILE: include/target/target_core_seobj.h:44:
+	struct se_queue_obj_s *(*get_queue_obj)(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#789: FILE: include/target/target_core_seobj.h:45:
+	int (*claim_obj)(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#790: FILE: include/target/target_core_seobj.h:46:
+	void (*release_obj)(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_obj_s *' should also have an identifier name
#791: FILE: include/target/target_core_seobj.h:47:
+	void (*inc_count)(struct se_obj_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_obj_s *' should also have an identifier name
#792: FILE: include/target/target_core_seobj.h:48:
+	void (*dec_count)(struct se_obj_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_obj_s *' should also have an identifier name
#793: FILE: include/target/target_core_seobj.h:49:
+	int (*check_count)(struct se_obj_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#794: FILE: include/target/target_core_seobj.h:50:
+	void (*access_obj)(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#795: FILE: include/target/target_core_seobj.h:51:
+	void (*deaccess_obj)(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#796: FILE: include/target/target_core_seobj.h:52:
+	void (*put_obj)(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#797: FILE: include/target/target_core_seobj.h:53:
+	int (*export_obj)(void *, struct se_portal_group_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_portal_group_s *' should also have an identifier name
#797: FILE: include/target/target_core_seobj.h:53:
+	int (*export_obj)(void *, struct se_portal_group_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_lun_s *' should also have an identifier name
#797: FILE: include/target/target_core_seobj.h:53:
+	int (*export_obj)(void *, struct se_portal_group_s *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#798: FILE: include/target/target_core_seobj.h:54:
+	int (*export_obj)(void *, struct se_portal_group_s *,
+				struct se_lun_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#799: FILE: include/target/target_core_seobj.h:55:
+	void (*unexport_obj)(void *, struct se_portal_group_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_portal_group_s *' should also have an identifier name
#799: FILE: include/target/target_core_seobj.h:55:
+	void (*unexport_obj)(void *, struct se_portal_group_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_lun_s *' should also have an identifier name
#799: FILE: include/target/target_core_seobj.h:55:
+	void (*unexport_obj)(void *, struct se_portal_group_s *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#800: FILE: include/target/target_core_seobj.h:56:
+	void (*unexport_obj)(void *, struct se_portal_group_s *,
+				struct se_lun_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#801: FILE: include/target/target_core_seobj.h:57:
+	int (*transport_setup_cmd)(void *, struct se_cmd_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#801: FILE: include/target/target_core_seobj.h:57:
+	int (*transport_setup_cmd)(void *, struct se_cmd_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#802: FILE: include/target/target_core_seobj.h:58:
+	int (*active_tasks)(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#803: FILE: include/target/target_core_seobj.h:59:
+	int (*add_tasks)(void *, struct se_cmd_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#803: FILE: include/target/target_core_seobj.h:59:
+	int (*add_tasks)(void *, struct se_cmd_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#804: FILE: include/target/target_core_seobj.h:60:
+	int (*execute_tasks)(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#805: FILE: include/target/target_core_seobj.h:61:
+	int (*depth_left)(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#806: FILE: include/target/target_core_seobj.h:62:
+	int (*queue_depth)(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#807: FILE: include/target/target_core_seobj.h:63:
+	int (*blocksize)(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#808: FILE: include/target/target_core_seobj.h:64:
+	int (*max_sectors)(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#809: FILE: include/target/target_core_seobj.h:65:
+	unsigned long long (*end_lba)(void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#809: FILE: include/target/target_core_seobj.h:65:
+	unsigned long long (*end_lba)(void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#810: FILE: include/target/target_core_seobj.h:66:
+	unsigned long long (*free_sectors)(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#811: FILE: include/target/target_core_seobj.h:67:
+	unsigned long long (*get_next_lba)(void *, unsigned long long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long long' should also have an identifier name
#811: FILE: include/target/target_core_seobj.h:67:
+	unsigned long long (*get_next_lba)(void *, unsigned long long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#812: FILE: include/target/target_core_seobj.h:68:
+	unsigned long long (*total_sectors)(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#813: FILE: include/target/target_core_seobj.h:69:
+	int (*do_se_mem_map)(void *, struct se_task_s *, struct list_head *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_task_s *' should also have an identifier name
#813: FILE: include/target/target_core_seobj.h:69:
+	int (*do_se_mem_map)(void *, struct se_task_s *, struct list_head *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct list_head *' should also have an identifier name
#813: FILE: include/target/target_core_seobj.h:69:
+	int (*do_se_mem_map)(void *, struct se_task_s *, struct list_head *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#813: FILE: include/target/target_core_seobj.h:69:
+	int (*do_se_mem_map)(void *, struct se_task_s *, struct list_head *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_mem_s *' should also have an identifier name
#813: FILE: include/target/target_core_seobj.h:69:
+	int (*do_se_mem_map)(void *, struct se_task_s *, struct list_head *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_mem_s **' should also have an identifier name
#813: FILE: include/target/target_core_seobj.h:69:
+	int (*do_se_mem_map)(void *, struct se_task_s *, struct list_head *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32 *' should also have an identifier name
#813: FILE: include/target/target_core_seobj.h:69:
+	int (*do_se_mem_map)(void *, struct se_task_s *, struct list_head *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32 *' should also have an identifier name
#813: FILE: include/target/target_core_seobj.h:69:
+	int (*do_se_mem_map)(void *, struct se_task_s *, struct list_head *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#814: FILE: include/target/target_core_seobj.h:70:
+	int (*do_se_mem_map)(void *, struct se_task_s *, struct list_head *,
+			void *, struct se_mem_s *, struct se_mem_s **,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#816: FILE: include/target/target_core_seobj.h:72:
+	int (*get_mem_buf)(void *, struct se_cmd_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#816: FILE: include/target/target_core_seobj.h:72:
+	int (*get_mem_buf)(void *, struct se_cmd_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#817: FILE: include/target/target_core_seobj.h:73:
+	int (*get_mem_SG)(void *, struct se_cmd_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#817: FILE: include/target/target_core_seobj.h:73:
+	int (*get_mem_SG)(void *, struct se_cmd_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#818: FILE: include/target/target_core_seobj.h:74:
+	map_func_t (*get_map_SG)(void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#818: FILE: include/target/target_core_seobj.h:74:
+	map_func_t (*get_map_SG)(void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#819: FILE: include/target/target_core_seobj.h:75:
+	map_func_t (*get_map_non_SG)(void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#819: FILE: include/target/target_core_seobj.h:75:
+	map_func_t (*get_map_non_SG)(void *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#820: FILE: include/target/target_core_seobj.h:76:
+	map_func_t (*get_map_none)(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#821: FILE: include/target/target_core_seobj.h:77:
+	void *(*get_transport_req)(void *, struct se_task_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_task_s *' should also have an identifier name
#821: FILE: include/target/target_core_seobj.h:77:
+	void *(*get_transport_req)(void *, struct se_task_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#822: FILE: include/target/target_core_seobj.h:78:
+	void (*free_tasks)(void *, struct se_cmd_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#822: FILE: include/target/target_core_seobj.h:78:
+	void (*free_tasks)(void *, struct se_cmd_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#823: FILE: include/target/target_core_seobj.h:79:
+	int (*activate)(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#824: FILE: include/target/target_core_seobj.h:80:
+	void (*deactivate)(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#825: FILE: include/target/target_core_seobj.h:81:
+	void (*notify_obj)(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#826: FILE: include/target/target_core_seobj.h:82:
+	int (*check_export)(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#827: FILE: include/target/target_core_seobj.h:83:
+	int (*check_online)(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#828: FILE: include/target/target_core_seobj.h:84:
+	int (*check_shutdown)(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#829: FILE: include/target/target_core_seobj.h:85:
+	void (*signal_shutdown)(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#830: FILE: include/target/target_core_seobj.h:86:
+	void (*clear_shutdown)(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#831: FILE: include/target/target_core_seobj.h:87:
+	int (*obj_start)(void *, struct se_transform_info_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_transform_info_s *' should also have an identifier name
#831: FILE: include/target/target_core_seobj.h:87:
+	int (*obj_start)(void *, struct se_transform_info_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long long' should also have an identifier name
#831: FILE: include/target/target_core_seobj.h:87:
+	int (*obj_start)(void *, struct se_transform_info_s *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#832: FILE: include/target/target_core_seobj.h:88:
+	int (*obj_start)(void *, struct se_transform_info_s *,
+			unsigned long long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#833: FILE: include/target/target_core_seobj.h:89:
+	unsigned char *(*get_cdb)(void *, struct se_task_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_task_s *' should also have an identifier name
#833: FILE: include/target/target_core_seobj.h:89:
+	unsigned char *(*get_cdb)(void *, struct se_task_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#834: FILE: include/target/target_core_seobj.h:90:
+	u32 (*get_cdb_count)(void *, struct se_transform_info_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_transform_info_s *' should also have an identifier name
#834: FILE: include/target/target_core_seobj.h:90:
+	u32 (*get_cdb_count)(void *, struct se_transform_info_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long long' should also have an identifier name
#834: FILE: include/target/target_core_seobj.h:90:
+	u32 (*get_cdb_count)(void *, struct se_transform_info_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#834: FILE: include/target/target_core_seobj.h:90:
+	u32 (*get_cdb_count)(void *, struct se_transform_info_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_mem_s *' should also have an identifier name
#834: FILE: include/target/target_core_seobj.h:90:
+	u32 (*get_cdb_count)(void *, struct se_transform_info_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_mem_s **' should also have an identifier name
#834: FILE: include/target/target_core_seobj.h:90:
+	u32 (*get_cdb_count)(void *, struct se_transform_info_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32 *' should also have an identifier name
#834: FILE: include/target/target_core_seobj.h:90:
+	u32 (*get_cdb_count)(void *, struct se_transform_info_s *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#835: FILE: include/target/target_core_seobj.h:91:
+	u32 (*get_cdb_count)(void *, struct se_transform_info_s *,
+				unsigned long long, u32, struct se_mem_s *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#837: FILE: include/target/target_core_seobj.h:93:
+	u32 (*get_cdb_size)(void *, u32, unsigned char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#837: FILE: include/target/target_core_seobj.h:93:
+	u32 (*get_cdb_size)(void *, u32, unsigned char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char *' should also have an identifier name
#837: FILE: include/target/target_core_seobj.h:93:
+	u32 (*get_cdb_size)(void *, u32, unsigned char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#838: FILE: include/target/target_core_seobj.h:94:
+	void (*generate_cdb)(void *, unsigned long long, u32 *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long long' should also have an identifier name
#838: FILE: include/target/target_core_seobj.h:94:
+	void (*generate_cdb)(void *, unsigned long long, u32 *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32 *' should also have an identifier name
#838: FILE: include/target/target_core_seobj.h:94:
+	void (*generate_cdb)(void *, unsigned long long, u32 *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char *' should also have an identifier name
#838: FILE: include/target/target_core_seobj.h:94:
+	void (*generate_cdb)(void *, unsigned long long, u32 *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#838: FILE: include/target/target_core_seobj.h:94:
+	void (*generate_cdb)(void *, unsigned long long, u32 *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#839: FILE: include/target/target_core_seobj.h:95:
+	void (*generate_cdb)(void *, unsigned long long, u32 *,
+				unsigned char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#840: FILE: include/target/target_core_seobj.h:96:
+	int (*get_device_access)(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#841: FILE: include/target/target_core_seobj.h:97:
+	int (*get_device_type)(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#842: FILE: include/target/target_core_seobj.h:98:
+	int (*check_DMA_handler)(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#843: FILE: include/target/target_core_seobj.h:99:
+	t10_wwn_t *(*get_t10_wwn)(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#844: FILE: include/target/target_core_seobj.h:100:
+	int (*get_task_timeout)(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#845: FILE: include/target/target_core_seobj.h:101:
+	int (*task_failure_complete)(void *, struct se_cmd_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_cmd_s *' should also have an identifier name
#845: FILE: include/target/target_core_seobj.h:101:
+	int (*task_failure_complete)(void *, struct se_cmd_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_portal_group_s *' should also have an identifier name
#846: FILE: include/target/target_core_seobj.h:102:
+	int (*add_obj_to_lun)(struct se_portal_group_s *, struct se_lun_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_lun_s *' should also have an identifier name
#846: FILE: include/target/target_core_seobj.h:102:
+	int (*add_obj_to_lun)(struct se_portal_group_s *, struct se_lun_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_portal_group_s *' should also have an identifier name
#847: FILE: include/target/target_core_seobj.h:103:
+	int (*del_obj_from_lun)(struct se_portal_group_s *, struct se_lun_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct se_lun_s *' should also have an identifier name
#847: FILE: include/target/target_core_seobj.h:103:
+	int (*del_obj_from_lun)(struct se_portal_group_s *, struct se_lun_s *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#848: FILE: include/target/target_core_seobj.h:104:
+	struct se_obj_lun_type_s *(*get_next_obj_api)(void *, void **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void **' should also have an identifier name
#848: FILE: include/target/target_core_seobj.h:104:
+	struct se_obj_lun_type_s *(*get_next_obj_api)(void *, void **);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#849: FILE: include/target/target_core_seobj.h:105:
+	int (*obtain_obj_lock)(void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#850: FILE: include/target/target_core_seobj.h:106:
+	int (*release_obj_lock)(void *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000070292.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 120 warnings, 27 checks, 793 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000070292.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
