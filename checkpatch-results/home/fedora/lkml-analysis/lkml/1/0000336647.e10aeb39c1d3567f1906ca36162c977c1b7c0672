WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#79: FILE: arch/x86/mm/ioremap_32.c:232:
+	BUG_ON(pgd != early_ioremap_pgd(fix_to_virt(FIX_BTMAP_END)));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#113: FILE: arch/x86/mm/ioremap_32.c:261:
+static void __init __early_set_fixmap(enum fixed_addresses idx,
 				   unsigned long phys, pgprot_t flags)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#131: FILE: arch/x86/mm/ioremap_32.c:278:
+static inline void __init early_set_fixmap(enum fixed_addresses idx,
 					unsigned long phys)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#224: FILE: include/asm-x86/io_32.h:133:
+extern void early_ioremap_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#225: FILE: include/asm-x86/io_32.h:134:
+extern void early_ioremap_clear(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#226: FILE: include/asm-x86/io_32.h:135:
+extern void early_ioremap_reset(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#227: FILE: include/asm-x86/io_32.h:136:
+extern void *early_ioremap(unsigned long offset, unsigned long size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#228: FILE: include/asm-x86/io_32.h:137:
+extern void early_iounmap(void *addr, unsigned long size);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#308: FILE: arch/x86/kernel/efi_tables.c:59:
+		c16 = tmp = early_ioremap(systab.fw_vendor, 2);		\

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#379: FILE: arch/x86/kernel/srat_32.c:340:
+			early_ioremap(saved_rsdt.table.table_offset_entry[i], sizeof(struct acpi_table_header));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#422: FILE: arch/x86/kernel/efi_32.c:120:
+	memmap.map = early_ioremap((unsigned long) memmap.phys_map,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#423: FILE: arch/x86/kernel/efi_32.c:121:
+	memmap.map = early_ioremap((unsigned long) memmap.phys_map,
 			(memmap.nr_map * memmap.desc_size));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000336647.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 2 warnings, 10 checks, 327 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000336647.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
