WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#47: 
The current granularity of 5% of dirtyable memory for dirty pages writeback is

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#172: FILE: include/linux/sysctl.h:999:
+extern int proc_dointvec_pcm_minmax(struct ctl_table *, int, struct file *,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ctl_table *' should also have an identifier name
#172: FILE: include/linux/sysctl.h:999:
+extern int proc_dointvec_pcm_minmax(struct ctl_table *, int, struct file *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#172: FILE: include/linux/sysctl.h:999:
+extern int proc_dointvec_pcm_minmax(struct ctl_table *, int, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#172: FILE: include/linux/sysctl.h:999:
+extern int proc_dointvec_pcm_minmax(struct ctl_table *, int, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void __user *' should also have an identifier name
#172: FILE: include/linux/sysctl.h:999:
+extern int proc_dointvec_pcm_minmax(struct ctl_table *, int, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t *' should also have an identifier name
#172: FILE: include/linux/sysctl.h:999:
+extern int proc_dointvec_pcm_minmax(struct ctl_table *, int, struct file *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'loff_t *' should also have an identifier name
#172: FILE: include/linux/sysctl.h:999:
+extern int proc_dointvec_pcm_minmax(struct ctl_table *, int, struct file *,

WARNING:DUPLICATED_SYSCTL_CONST: duplicated sysctl range checking value 'one', consider using the shared one in include/linux/sysctl.h
#207: FILE: kernel/sysctl.c:914:
+		.extra1		= &one,

Commit d91bff3011cf ("proc/sysctl: add shared variables for range
check") added some shared const variables to be used instead of a local
copy in each source file.

Consider replacing the sysctl range checking value with the shared
one in include/linux/sysctl.h.  The following conversion scheme may
be used::

  &zero     ->  SYSCTL_ZERO
  &one      ->  SYSCTL_ONE
  &int_max  ->  SYSCTL_INT_MAX

See:

  1. https://lore.kernel.org/lkml/20190430180111.10688-1-mcroce@redhat.com/
  2. https://lore.kernel.org/lkml/20190531131422.14970-1-mcroce@redhat.com/

WARNING:DUPLICATED_SYSCTL_CONST: duplicated sysctl range checking value 'one', consider using the shared one in include/linux/sysctl.h
#218: FILE: kernel/sysctl.c:925:
+		.extra1		= &one,

WARNING:DUPLICATED_SYSCTL_CONST: duplicated sysctl range checking value 'one', consider using the shared one in include/linux/sysctl.h
#230: FILE: kernel/sysctl.c:936:
+		.extra1		= &one,

WARNING:DUPLICATED_SYSCTL_CONST: duplicated sysctl range checking value 'one', consider using the shared one in include/linux/sysctl.h
#241: FILE: kernel/sysctl.c:947:
+		.extra1		= &one,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#253: FILE: kernel/sysctl.c:2564:
+static int do_proc_dointvec_pcm_minmax_conv(int *negp, unsigned long *lvalp,
+					 int *valp, int write, void *data)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#289: FILE: kernel/sysctl.c:2731:
+			struct file *filp, void __user *buffer, size_t *lenp,
 			             ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#289: FILE: kernel/sysctl.c:2731:
+int proc_dointvec_pcm_minmax(struct ctl_table *table, int write,
+			struct file *filp, void __user *buffer, size_t *lenp,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#297: FILE: kernel/sysctl.c:2739:
+	return do_proc_dointvec(table, write, filp, buffer, lenp, ppos,
 	                                      ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#309: FILE: kernel/sysctl.c:2792:
+			struct file *filp, void __user *buffer, size_t *lenp,
 			             ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#309: FILE: kernel/sysctl.c:2792:
+int proc_dointvec_pcm_minmax(struct ctl_table *table, int write,
+			struct file *filp, void __user *buffer, size_t *lenp,

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#312: FILE: kernel/sysctl.c:2795:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#381: FILE: mm/page-writeback.c:155:
+		ret = proc_dointvec_pcm_minmax(table, write, filp, buffer,
 		                                             ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#382: FILE: mm/page-writeback.c:156:
+		ret = proc_dointvec_pcm_minmax(table, write, filp, buffer,
+					lenp, ppos);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#385: FILE: mm/page-writeback.c:159:
+		ret = proc_dointvec_minmax(table, write, filp, buffer,
 		                                         ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#386: FILE: mm/page-writeback.c:160:
+		ret = proc_dointvec_minmax(table, write, filp, buffer,
+					lenp, ppos);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000219098.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 17 warnings, 6 checks, 262 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000219098.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
