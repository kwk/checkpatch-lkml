CHECK:SPACING: No space is necessary after a cast
#158: FILE: arch/um/sys-i386/tls.c:27:
+	ret = os_set_thread_area((struct um_dup_user_desc *) info,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#168: FILE: arch/um/sys-i386/tls.c:44:
+	ret = os_get_thread_area((struct um_dup_user_desc *) info,

ERROR:SPACING: space required before the open parenthesis '('
#206: FILE: include/asm-um/irqflags.h:28:
+				       block_signals(); } while(0)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#206: FILE: include/asm-um/irqflags.h:28:
+				       block_signals(); } while(0)

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#220: FILE: arch/um/include/os.h:216:
+extern int os_set_thread_area(struct um_dup_user_desc *info, int pid);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#221: FILE: arch/um/include/os.h:217:
+extern int os_get_thread_area(struct um_dup_user_desc *info, int pid);

ERROR:CODE_INDENT: code indent should use tabs where possible
#289: FILE: arch/um/sys-i386/sysrq.c:73:
+^I        unsigned long *stack, const struct stacktrace_ops *ops,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#289: FILE: arch/um/sys-i386/sysrq.c:73:
+void dump_trace(struct task_struct *task, struct pt_regs *regs,
+	        unsigned long *stack, const struct stacktrace_ops *ops,

WARNING:LINE_SPACING: Missing a blank line after declarations
#300: FILE: arch/um/sys-i386/sysrq.c:84:
+		unsigned long dummy;
+		stack = &dummy;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#302: FILE: arch/um/sys-i386/sysrq.c:86:
+			stack = (unsigned long *) KSTK_ESP(task);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#324: FILE: arch/um/sys-i386/sysrq.c:108:
+	printk(data);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#326: FILE: arch/um/sys-i386/sysrq.c:110:
+	printk("\n");

CHECK:SPACING: No space is necessary after a cast
#331: FILE: arch/um/sys-i386/sysrq.c:115:
+	printk("%s%s\n", (char *) data, msg);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#331: FILE: arch/um/sys-i386/sysrq.c:115:
+	printk("%s%s\n", (char *) data, msg);

CHECK:SPACING: No space is necessary after a cast
#344: FILE: arch/um/sys-i386/sysrq.c:128:
+	printk("%s [<%08lx>] ", (char *) data, addr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#344: FILE: arch/um/sys-i386/sysrq.c:128:
+	printk("%s [<%08lx>] ", (char *) data, addr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#363: FILE: arch/um/sys-i386/sysrq.c:147:
+		printk("show_trace: got NULL stack, implicit assumption "

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'show_trace', this function's name, in a string
#363: FILE: arch/um/sys-i386/sysrq.c:147:
+		printk("show_trace: got NULL stack, implicit assumption "

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:SPLIT_STRING: quoted string split across lines
#364: FILE: arch/um/sys-i386/sysrq.c:148:
+		printk("show_trace: got NULL stack, implicit assumption "
+		       "task == current");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#382: FILE: include/asm-um/stacktrace.h:1:
+#ifndef __UM_STACKTRACE_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000353129.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 9 warnings, 8 checks, 284 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000353129.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
