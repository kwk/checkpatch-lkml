WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
> > I think if it's applicable to SCSI at all it is fine.  If it is not, then

WARNING:TYPO_SPELLING: 'intialized' may be misspelled - perhaps 'initialized'?
#69: 
enumerated and intialized.  Drivers should also define
               ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#73: 
Signed-off-by:  Kristen Carlson Accardi <kristen.c.accardi@intel.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#107: FILE: drivers/ata/libata-scsi.c:138:
+static ssize_t store_link_pm_policy(struct class_device *class_dev,
+	const char *buf, size_t count)

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#109: FILE: drivers/ata/libata-scsi.c:140:
+	struct Scsi_Host *shost = class_to_shost(class_dev);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: drivers/ata/libata-scsi.c:146:
+ ^I * we are skipping array location 0 on purpose - this$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#115: FILE: drivers/ata/libata-scsi.c:146:
+ ^I * we are skipping array location 0 on purpose - this$

ERROR:CODE_INDENT: code indent should use tabs where possible
#116: FILE: drivers/ata/libata-scsi.c:147:
+ ^I * is because a value of NOT_AVAILABLE is displayed$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#116: FILE: drivers/ata/libata-scsi.c:147:
+ ^I * is because a value of NOT_AVAILABLE is displayed$

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: drivers/ata/libata-scsi.c:148:
+ ^I * to the user as max_performance, but when the user$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#117: FILE: drivers/ata/libata-scsi.c:148:
+ ^I * to the user as max_performance, but when the user$

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: drivers/ata/libata-scsi.c:149:
+ ^I * writes "max_performance", they actually want the$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#118: FILE: drivers/ata/libata-scsi.c:149:
+ ^I * writes "max_performance", they actually want the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: drivers/ata/libata-scsi.c:150:
+ ^I * value to match MAX_PERFORMANCE.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#119: FILE: drivers/ata/libata-scsi.c:150:
+ ^I * value to match MAX_PERFORMANCE.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#120: FILE: drivers/ata/libata-scsi.c:151:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#120: FILE: drivers/ata/libata-scsi.c:151:
+ ^I */$

WARNING:LINE_SPACING: Missing a blank line after declarations
#123: FILE: drivers/ata/libata-scsi.c:154:
+		const int len = strlen(link_pm_policy[i].name);
+		if (strncmp(link_pm_policy[i].name, buf, len) == 0 &&

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#124: FILE: drivers/ata/libata-scsi.c:155:
+		if (strncmp(link_pm_policy[i].name, buf, len) == 0 &&
+		   buf[len] == '\n') {

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#150: FILE: drivers/ata/libata-scsi.c:181:
+CLASS_DEVICE_ATTR(link_power_management_policy, S_IRUGO | S_IWUSR,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#151: FILE: drivers/ata/libata-scsi.c:182:
+CLASS_DEVICE_ATTR(link_power_management_policy, S_IRUGO | S_IWUSR,
+		show_link_pm_policy, store_link_pm_policy);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#162: FILE: drivers/ata/libata-scsi.c:2980:
+int ata_scsi_set_link_pm_policy(struct ata_port *ap,
+		enum link_pm policy)

ERROR:CODE_INDENT: code indent should use tabs where possible
#168: FILE: drivers/ata/libata-scsi.c:2986:
+ ^I * make sure no broken devices are on this port,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#168: FILE: drivers/ata/libata-scsi.c:2986:
+ ^I * make sure no broken devices are on this port,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: drivers/ata/libata-scsi.c:2987:
+ ^I * and that all devices support interface power$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#169: FILE: drivers/ata/libata-scsi.c:2987:
+ ^I * and that all devices support interface power$

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: drivers/ata/libata-scsi.c:2988:
+ ^I * management$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#170: FILE: drivers/ata/libata-scsi.c:2988:
+ ^I * management$

ERROR:CODE_INDENT: code indent should use tabs where possible
#171: FILE: drivers/ata/libata-scsi.c:2989:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#171: FILE: drivers/ata/libata-scsi.c:2989:
+ ^I */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#180: FILE: drivers/ata/libata-scsi.c:2998:
+ ^I^I * do we need to handle the case where we've hotplugged$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#180: FILE: drivers/ata/libata-scsi.c:2998:
+ ^I^I * do we need to handle the case where we've hotplugged$

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: drivers/ata/libata-scsi.c:2999:
+ ^I^I * a broken drive (since hotplug and ALPM are mutually$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#181: FILE: drivers/ata/libata-scsi.c:2999:
+ ^I^I * a broken drive (since hotplug and ALPM are mutually$

ERROR:CODE_INDENT: code indent should use tabs where possible
#182: FILE: drivers/ata/libata-scsi.c:3000:
+ ^I^I * exclusive) ?$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#182: FILE: drivers/ata/libata-scsi.c:3000:
+ ^I^I * exclusive) ?$

ERROR:CODE_INDENT: code indent should use tabs where possible
#183: FILE: drivers/ata/libata-scsi.c:3001:
+ ^I^I *$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#183: FILE: drivers/ata/libata-scsi.c:3001:
+ ^I^I *$

ERROR:CODE_INDENT: code indent should use tabs where possible
#184: FILE: drivers/ata/libata-scsi.c:3002:
+ ^I^I * If so, if we detect a broken drive on a port with$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#184: FILE: drivers/ata/libata-scsi.c:3002:
+ ^I^I * If so, if we detect a broken drive on a port with$

ERROR:CODE_INDENT: code indent should use tabs where possible
#185: FILE: drivers/ata/libata-scsi.c:3003:
+ ^I^I * alpm already enabled, then we should reset the policy$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#185: FILE: drivers/ata/libata-scsi.c:3003:
+ ^I^I * alpm already enabled, then we should reset the policy$

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: drivers/ata/libata-scsi.c:3004:
+ ^I^I * to off for the entire port.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#186: FILE: drivers/ata/libata-scsi.c:3004:
+ ^I^I * to off for the entire port.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#187: FILE: drivers/ata/libata-scsi.c:3005:
+ ^I^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#187: FILE: drivers/ata/libata-scsi.c:3005:
+ ^I^I */$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#189: FILE: drivers/ata/libata-scsi.c:3007:
+		if ((dev->horkage & ATA_HORKAGE_IPM) ||
+			!(dev->flags & ATA_DFLAG_IPM)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#191: FILE: drivers/ata/libata-scsi.c:3009:
+			ata_dev_printk(dev, KERN_ERR,
+				"Unable to set Link PM policy\n");

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#223: FILE: include/linux/libata.h:307:
+^IATA_HORKAGE_IPM^I^I= (1 << 4), ^I/* LPM problems */$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#241: FILE: include/linux/libata.h:356:
+};
+extern struct class_device_attribute class_device_attr_link_power_management_policy;

WARNING:SPACING: Unnecessary space before function pointer arguments
#259: FILE: include/linux/libata.h:650:
+	int (*enable_pm) (struct ata_port *ap, enum link_pm policy);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#260: FILE: include/linux/libata.h:651:
+	int (*disable_pm) (struct ata_port *ap);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#269: FILE: include/linux/libata.h:858:
+extern int ata_scsi_set_link_pm_policy(struct ata_port *ap, enum link_pm);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:LINE_SPACING: Missing a blank line after declarations
#319: FILE: drivers/ata/libata-core.c:5891:
+		struct ata_port *ap = host->ports[i];
+		if (ap->ops->disable_pm)

WARNING:LINE_SPACING: Missing a blank line after declarations
#330: FILE: drivers/ata/libata-core.c:5902:
+		struct ata_port *ap = host->ports[i];
+		ata_scsi_set_link_pm_policy(ap, ap->pm_policy);

ERROR:CODE_INDENT: code indent should use tabs where possible
#342: FILE: drivers/ata/libata-core.c:5974:
+ ^I * disable link pm on all ports before requesting$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#342: FILE: drivers/ata/libata-core.c:5974:
+ ^I * disable link pm on all ports before requesting$

ERROR:CODE_INDENT: code indent should use tabs where possible
#343: FILE: drivers/ata/libata-core.c:5975:
+ ^I * any pm activity$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#343: FILE: drivers/ata/libata-core.c:5975:
+ ^I * any pm activity$

ERROR:CODE_INDENT: code indent should use tabs where possible
#344: FILE: drivers/ata/libata-core.c:5976:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#344: FILE: drivers/ata/libata-core.c:5976:
+ ^I */$

WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#355: FILE: drivers/ata/libata-core.c:6002:
+	/* reenable link pm */
 	   ^^^^^^^^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'id' - possible side-effects?
#376: FILE: include/linux/ata.h:358:
+#define ata_id_has_hipm(id)	\
+	( (((id)[76] != 0x0000) && ((id)[76] != 0xffff)) && \
+	  ((id)[76] & (1 << 9)) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#377: FILE: include/linux/ata.h:359:
+	( (((id)[76] != 0x0000) && ((id)[76] != 0xffff)) && \

ERROR:SPACING: space prohibited before that close parenthesis ')'
#378: FILE: include/linux/ata.h:360:
+	  ((id)[76] & (1 << 9)) )

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'id' - possible side-effects?
#379: FILE: include/linux/ata.h:361:
+#define ata_id_has_dipm(id)	\
+	( (((id)[76] != 0x0000) && ((id)[76] != 0xffff)) && \
+	  ((id)[78] & (1 << 3)) )

ERROR:SPACING: space prohibited after that open parenthesis '('
#380: FILE: include/linux/ata.h:362:
+	( (((id)[76] != 0x0000) && ((id)[76] != 0xffff)) && \

ERROR:SPACING: space prohibited before that close parenthesis ')'
#381: FILE: include/linux/ata.h:363:
+	  ((id)[78] & (1 << 3)) )

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000397208.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 25 errors, 32 warnings, 11 checks, 298 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000397208.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
