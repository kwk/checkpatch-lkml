WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#98: FILE: include/linux/init.h:256:
+	void (*setup)(char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:CAMELCASE: Avoid CamelCase: <nameStr>
#103: FILE: include/linux/init.h:261:
+#define DEFINE_LOGLEVEL_SETUP(nameX, nameStr, setupX) \

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <loglevel_##nameX>
#104: FILE: include/linux/init.h:262:
+	int loglevel_##nameX; \

CHECK:CAMELCASE: Avoid CamelCase: <__loglevel_setup_##nameX>
#105: FILE: include/linux/init.h:263:
+	static struct loglevel_setup __loglevel_setup_##nameX __initdata = \

CHECK:CAMELCASE: Avoid CamelCase: <__loglevel_setup_ptr_##nameX>
#109: FILE: include/linux/init.h:267:
+	static struct loglevel_setup *__loglevel_setup_ptr_##nameX __used \

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".loglevel_setup.init") over __attribute__((__section__(".loglevel_setup.init")))
#110: FILE: include/linux/init.h:268:
+	__attribute__((__section__(".loglevel_setup.init"))) = \

WARNING:LINE_SPACING: Missing a blank line after declarations
#166: FILE: init/main.c:272:
+		char *k = strchr(str, ',');
+		if (k)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#168: FILE: init/main.c:274:
+		if (*str && (str = real_loglevel_setup(str)) && *str) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:BRACES: braces {} are not necessary for single statement blocks
#168: FILE: init/main.c:274:
+		if (*str && (str = real_loglevel_setup(str)) && *str) {
+			get_option(&str, &console_loglevel);
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000227841.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 4 warnings, 4 checks, 102 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000227841.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
