WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
--- linux-2.6.23.1/include/linux/backlight.h	2007-10-12 18:43:44.000000000 +0200

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#72: FILE: include/linux/timeout.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#89: FILE: include/linux/timeout.h:18:
+ *  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#90: FILE: include/linux/timeout.h:19:
+ *  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA$

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#119: FILE: include/linux/timeout.h:48:
+	void (*trigger)(unsigned long); /* client function */

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#120: FILE: include/linux/timeout.h:49:
+	void (*start)(unsigned long); /* client function */

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#123: FILE: include/linux/timeout.h:52:
+extern void timeout_touch(struct timeout *timeout);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#125: FILE: include/linux/timeout.h:54:
+extern void timeout_init(struct timeout *timeout);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#127: FILE: include/linux/timeout.h:56:
+extern void timeout_kill(struct timeout *timeout);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#143: FILE: drivers/video/backlight/timeout.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#160: FILE: drivers/video/backlight/timeout.c:18:
+ *  along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#161: FILE: drivers/video/backlight/timeout.c:19:
+ *  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#170: FILE: drivers/video/backlight/timeout.c:28:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#175: FILE: drivers/video/backlight/timeout.c:33:
+	unsigned long ret;
+	spin_lock(&timeout->latest_lock);

WARNING:LINE_SPACING: Missing a blank line after declarations
#184: FILE: drivers/video/backlight/timeout.c:42:
+	unsigned long elapsed;
+	spin_lock(&timeout->latest_lock);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 4)
#209: FILE: drivers/video/backlight/timeout.c:67:
+	if (elapsed(timeout) >= timeout->duration) {
+    pr_debug("tigger_worker_function() -> timeout->trigger()"

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: drivers/video/backlight/timeout.c:68:
+    pr_debug("tigger_worker_function() -> timeout->trigger()"$

WARNING:SPLIT_STRING: quoted string split across lines
#211: FILE: drivers/video/backlight/timeout.c:69:
+    pr_debug("tigger_worker_function() -> timeout->trigger()"
+				" (elapsed: %ld ms) \n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#211: FILE: drivers/video/backlight/timeout.c:69:
+				" (elapsed: %ld ms) \n",

WARNING:SPLIT_STRING: quoted string split across lines
#219: FILE: drivers/video/backlight/timeout.c:77:
+		pr_debug("tigger_worker_function() -> schedule_delayed_work() "
+				"(new_delay: %ld jif %ld ms)\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'start_worker_function', this function's name, in a string
#234: FILE: drivers/video/backlight/timeout.c:92:
+	pr_debug("start_worker_function() -> timeout->start()\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#245: FILE: drivers/video/backlight/timeout.c:103:
+	if (timeout->state == TIMEOUT_TRIGGERED &&
+			mutex_trylock(&timeout->lock)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#246: FILE: drivers/video/backlight/timeout.c:104:
+			mutex_trylock(&timeout->lock)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#315: FILE: drivers/video/backlight/backlight.c:199:
+static void handler_event(struct input_handle *handle, unsigned int type,
+		unsigned int code, int value)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#346: FILE: drivers/video/backlight/backlight.c:230:
+static int handler_connect(struct input_handler *handler, struct input_dev *dev,
+		const struct input_device_id *id)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#351: FILE: drivers/video/backlight/backlight.c:235:
+
+

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*handle)...) over kzalloc(sizeof(struct input_handle)...)
#352: FILE: drivers/video/backlight/backlight.c:236:
+	handle = kzalloc(sizeof(struct input_handle), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'enable_dimmer', this function's name, in a string
#387: FILE: drivers/video/backlight/backlight.c:271:
+	pr_debug("enable_dimmer()\n");

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*dev->input_handler)...) over kzalloc(sizeof(struct input_handler)...)
#388: FILE: drivers/video/backlight/backlight.c:272:
+	dev->input_handler = kzalloc(sizeof(struct input_handler), GFP_KERNEL);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#393: FILE: drivers/video/backlight/backlight.c:277:
+		dev->dimmer_low_level = dev->props.max_brightness/2;
 		                                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*dev->timeout)...) over kzalloc(sizeof(struct timeout)...)
#404: FILE: drivers/video/backlight/backlight.c:288:
+	dev->timeout = kzalloc(sizeof(struct timeout), GFP_KERNEL);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'disable_dimmer', this function's name, in a string
#435: FILE: drivers/video/backlight/backlight.c:319:
+	pr_debug("disable_dimmer()\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#440: FILE: drivers/video/backlight/backlight.c:324:
+static ssize_t show_dimmer_control(struct device *dev,
+		struct device_attribute *attr, char *buf)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "bd->input_handler"
#445: FILE: drivers/video/backlight/backlight.c:329:
+			(bd->input_handler != NULL));

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#449: FILE: drivers/video/backlight/backlight.c:333:
+static ssize_t show_dimmer_timeout(struct device *dev,
+		struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#461: FILE: drivers/video/backlight/backlight.c:345:
+static ssize_t show_dimmer_low_level(struct device *dev,
+		struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#470: FILE: drivers/video/backlight/backlight.c:354:
+static ssize_t show_dimmer_high_level(struct device *dev,
+		struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#480: FILE: drivers/video/backlight/backlight.c:364:
+static ssize_t store_dimmer_control(struct device *dev,
+		struct device_attribute *attr, const char *buf, size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#485: FILE: drivers/video/backlight/backlight.c:369:
+	int control = simple_strtoul(buf, &endp, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#498: FILE: drivers/video/backlight/backlight.c:382:
+static ssize_t store_dimmer_timeout(struct device *dev,
+		struct device_attribute *attr, const char *buf, size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#503: FILE: drivers/video/backlight/backlight.c:387:
+	int timeout = simple_strtoul(buf, &endp, 0);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#505: FILE: drivers/video/backlight/backlight.c:389:
+	if (timeout <= 0 || timeout >= 60*30)
 	                                 ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#520: FILE: drivers/video/backlight/backlight.c:404:
+static ssize_t store_dimmer_low_level(struct device *dev,
+		struct device_attribute *attr, const char *buf, size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#525: FILE: drivers/video/backlight/backlight.c:409:
+	int low = simple_strtoul(buf, &endp, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#538: FILE: drivers/video/backlight/backlight.c:422:
+static ssize_t store_dimmer_high_level(struct device *dev,
+		struct device_attribute *attr, const char *buf, size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#543: FILE: drivers/video/backlight/backlight.c:427:
+	int high = simple_strtoul(buf, &endp, 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#567: FILE: drivers/video/backlight/backlight.c:449:
+	__ATTR(dimmer_low_level, 0666, show_dimmer_low_level,
+			store_dimmer_low_level),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#569: FILE: drivers/video/backlight/backlight.c:451:
+	__ATTR(dimmer_high_level, 0666, show_dimmer_high_level,
+			store_dimmer_high_level),

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000364086.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 19 warnings, 25 checks, 528 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000364086.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
