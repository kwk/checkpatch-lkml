CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#103: FILE: drivers/dma/ioat/dma_v2.c:309:
+			reshape_ring(ioat, ioat->alloc_order-1);
 			                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#167: FILE: drivers/dma/ioat/dma_v2.c:450:
+	for (i = 0; i < descs-1; i++) {
 	                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#168: FILE: drivers/dma/ioat/dma_v2.c:451:
+		struct ioat_ring_ent *next = ring[i+1];
 		                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#276: FILE: drivers/dma/ioat/dma_v2.c:554:
+			u16 curr_idx = (ioat->tail+i) & (curr_size-1);
 			                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#276: FILE: drivers/dma/ioat/dma_v2.c:554:
+			u16 curr_idx = (ioat->tail+i) & (curr_size-1);
 			                                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#277: FILE: drivers/dma/ioat/dma_v2.c:555:
+			u16 new_idx = (ioat->tail+i) & (new_size-1);
 			                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#277: FILE: drivers/dma/ioat/dma_v2.c:555:
+			u16 new_idx = (ioat->tail+i) & (new_size-1);
 			                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#285: FILE: drivers/dma/ioat/dma_v2.c:563:
+			u16 new_idx = (ioat->tail+i) & (new_size-1);
 			                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#285: FILE: drivers/dma/ioat/dma_v2.c:563:
+			u16 new_idx = (ioat->tail+i) & (new_size-1);
 			                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#290: FILE: drivers/dma/ioat/dma_v2.c:568:
+					u16 new_idx = (ioat->tail+i) & (new_size-1);
 					                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#290: FILE: drivers/dma/ioat/dma_v2.c:568:
+					u16 new_idx = (ioat->tail+i) & (new_size-1);
 					                                        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#301: FILE: drivers/dma/ioat/dma_v2.c:579:
+		for (i = curr_size-1; i < new_size; i++) {
 		                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#302: FILE: drivers/dma/ioat/dma_v2.c:580:
+			u16 new_idx = (ioat->tail+i) & (new_size-1);
 			                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#302: FILE: drivers/dma/ioat/dma_v2.c:580:
+			u16 new_idx = (ioat->tail+i) & (new_size-1);
 			                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#303: FILE: drivers/dma/ioat/dma_v2.c:581:
+			struct ioat_ring_ent *next = ring[(new_idx+1) & (new_size-1)];
 			                                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#303: FILE: drivers/dma/ioat/dma_v2.c:581:
+			struct ioat_ring_ent *next = ring[(new_idx+1) & (new_size-1)];
 			                                                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#316: FILE: drivers/dma/ioat/dma_v2.c:594:
+			u16 curr_idx = (ioat->tail+i) & (curr_size-1);
 			                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#316: FILE: drivers/dma/ioat/dma_v2.c:594:
+			u16 curr_idx = (ioat->tail+i) & (curr_size-1);
 			                                          ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#317: FILE: drivers/dma/ioat/dma_v2.c:595:
+			u16 new_idx = (ioat->tail+i) & (new_size-1);
 			                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#317: FILE: drivers/dma/ioat/dma_v2.c:595:
+			u16 new_idx = (ioat->tail+i) & (new_size-1);
 			                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#327: FILE: drivers/dma/ioat/dma_v2.c:605:
+			ent = ioat2_get_ring_ent(ioat, ioat->tail+i);
 			                                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#332: FILE: drivers/dma/ioat/dma_v2.c:610:
+		hw = ring[(ioat->tail+new_size-1) & (new_size-1)]->hw;
 		                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#332: FILE: drivers/dma/ioat/dma_v2.c:610:
+		hw = ring[(ioat->tail+new_size-1) & (new_size-1)]->hw;
 		                              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#332: FILE: drivers/dma/ioat/dma_v2.c:610:
+		hw = ring[(ioat->tail+new_size-1) & (new_size-1)]->hw;
 		                                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#333: FILE: drivers/dma/ioat/dma_v2.c:611:
+		next = ring[(ioat->tail+new_size) & (new_size-1)];
 		                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#333: FILE: drivers/dma/ioat/dma_v2.c:611:
+		next = ring[(ioat->tail+new_size) & (new_size-1)];
 		                                             ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#358: FILE: drivers/dma/ioat/dma_v2.c:641:
+		if (reshape_ring(ioat, ioat->alloc_order + 1) &&
[...]
+				break;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000076567.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 1 warnings, 26 checks, 307 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000076567.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
