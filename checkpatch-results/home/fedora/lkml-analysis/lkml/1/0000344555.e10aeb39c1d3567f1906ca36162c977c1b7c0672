WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#60: FILE: arch/x86/kernel/paravirt.c:1:
+/*  Paravirtualization interfaces

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#61: FILE: arch/x86/kernel/paravirt.c:2:
+/*  Paravirtualization interfaces
+    Copyright (C) 2006 Rusty Russell IBM Corporation

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#74: FILE: arch/x86/kernel/paravirt.c:15:
+    along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#75: FILE: arch/x86/kernel/paravirt.c:16:
+    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/bug.h> instead of <asm/bug.h>
#86: FILE: arch/x86/kernel/paravirt.c:27:
+#include <asm/bug.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/delay.h> instead of <asm/delay.h>
#93: FILE: arch/x86/kernel/paravirt.c:34:
+#include <asm/delay.h>

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#106: FILE: arch/x86/kernel/paravirt.c:47:
+	printk(KERN_INFO "Booting paravirtualized kernel on %s\n",

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#117: FILE: arch/x86/kernel/paravirt.c:58:
+	extern const char start_##ops##_##name[], end_##ops##_##name[];	\

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#135: FILE: arch/x86/kernel/paravirt.c:76:
+static unsigned native_patch(u8 type, u16 clobbers, void *ibuf,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#136: FILE: arch/x86/kernel/paravirt.c:77:
+			     unsigned long addr, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#139: FILE: arch/x86/kernel/paravirt.c:80:
+	unsigned ret;

ERROR:SPACING: space required before the open parenthesis '('
#141: FILE: arch/x86/kernel/paravirt.c:82:
+	switch(type) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#142: FILE: arch/x86/kernel/paravirt.c:83:
+#define SITE(ops, x)						\
+	case PARAVIRT_PATCH(ops.x):				\
+		start = start_##ops##_##x;			\
+		end = end_##ops##_##x;				\
+		goto patch_site

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:INDENTED_LABEL: labels should not be indented
#161: FILE: arch/x86/kernel/paravirt.c:102:
+	patch_site:

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#173: FILE: arch/x86/kernel/paravirt.c:114:
+unsigned paravirt_patch_nop(void)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#178: FILE: arch/x86/kernel/paravirt.c:119:
+unsigned paravirt_patch_ignore(unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#178: FILE: arch/x86/kernel/paravirt.c:119:
+unsigned paravirt_patch_ignore(unsigned len)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#186: FILE: arch/x86/kernel/paravirt.c:127:
+} __attribute__((packed));

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#188: FILE: arch/x86/kernel/paravirt.c:129:
+unsigned paravirt_patch_call(void *insnbuf,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#191: FILE: arch/x86/kernel/paravirt.c:132:
+			     unsigned len)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#194: FILE: arch/x86/kernel/paravirt.c:135:
+	unsigned long delta = (unsigned long)target - (addr+5);
 	                                                   ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#208: FILE: arch/x86/kernel/paravirt.c:149:
+unsigned paravirt_patch_jmp(void *insnbuf, const void *target,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#209: FILE: arch/x86/kernel/paravirt.c:150:
+			    unsigned long addr, unsigned len)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#212: FILE: arch/x86/kernel/paravirt.c:153:
+	unsigned long delta = (unsigned long)target - (addr+5);
 	                                                   ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#224: FILE: arch/x86/kernel/paravirt.c:165:
+ * corresponding structure. */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#238: FILE: arch/x86/kernel/paravirt.c:179:
+unsigned paravirt_patch_default(u8 type, u16 clobbers, void *insnbuf,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#239: FILE: arch/x86/kernel/paravirt.c:180:
+				unsigned long addr, unsigned len)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#242: FILE: arch/x86/kernel/paravirt.c:183:
+	unsigned ret;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!opfunc"
#244: FILE: arch/x86/kernel/paravirt.c:185:
+	if (opfunc == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#246: FILE: arch/x86/kernel/paravirt.c:187:
+		ret = paravirt_patch_insns(insnbuf, len, ud2a, ud2a+sizeof(ud2a));
 		                                                   ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#256: FILE: arch/x86/kernel/paravirt.c:197:
+		/* Otherwise call the function; assume target could
+		   clobber any caller-save reg */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#256: FILE: arch/x86/kernel/paravirt.c:197:
+		   clobber any caller-save reg */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#263: FILE: arch/x86/kernel/paravirt.c:204:
+unsigned paravirt_patch_insns(void *insnbuf, unsigned len,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#263: FILE: arch/x86/kernel/paravirt.c:204:
+unsigned paravirt_patch_insns(void *insnbuf, unsigned len,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#266: FILE: arch/x86/kernel/paravirt.c:207:
+	unsigned insn_len = end - start;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!start"
#268: FILE: arch/x86/kernel/paravirt.c:209:
+	if (insn_len > len || start == NULL)

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#302: FILE: arch/x86/kernel/paravirt.c:243:
+extern void native_irq_enable_syscall_ret(void);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#350: FILE: arch/x86/kernel/paravirt.c:291:
+	BUG_ON(x86_read_percpu(paravirt_lazy_mode) != PARAVIRT_LAZY_NONE);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#351: FILE: arch/x86/kernel/paravirt.c:292:
+	BUG_ON(preemptible());

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#358: FILE: arch/x86/kernel/paravirt.c:299:
+	BUG_ON(x86_read_percpu(paravirt_lazy_mode) != mode);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#359: FILE: arch/x86/kernel/paravirt.c:300:
+	BUG_ON(preemptible());

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#529: FILE: arch/x86/kernel/paravirt.c:470:
+EXPORT_SYMBOL_GPL(pv_time_ops);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#530: FILE: arch/x86/kernel/paravirt.c:471:
+EXPORT_SYMBOL    (pv_cpu_ops);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#530: FILE: arch/x86/kernel/paravirt.c:471:
+EXPORT_SYMBOL    (pv_cpu_ops);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#531: FILE: arch/x86/kernel/paravirt.c:472:
+EXPORT_SYMBOL    (pv_mmu_ops);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#531: FILE: arch/x86/kernel/paravirt.c:472:
+EXPORT_SYMBOL    (pv_mmu_ops);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#532: FILE: arch/x86/kernel/paravirt.c:473:
+EXPORT_SYMBOL_GPL(pv_apic_ops);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#533: FILE: arch/x86/kernel/paravirt.c:474:
+EXPORT_SYMBOL_GPL(pv_info);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#534: FILE: arch/x86/kernel/paravirt.c:475:
+EXPORT_SYMBOL    (pv_irq_ops);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#534: FILE: arch/x86/kernel/paravirt.c:475:
+EXPORT_SYMBOL    (pv_irq_ops);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000344555.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 39 warnings, 7 checks, 483 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000344555.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
