WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
Works a treat with the lirc_mceusb receiver hooked to my own mythtv frontend,

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#49: FILE: drivers/input/lirc/Kconfig:21:
+config LIRC_MCEUSB
+	tristate "Microsoft Media Center Ed. Receiver, v1"
+	default n
+	depends on LIRC_DEV
+	help
+	  Driver for the Microsoft Media Center Ed. Receiver, v1
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#70: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#75: FILE: drivers/input/lirc/lirc_mceusb.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#189: FILE: drivers/input/lirc/lirc_mceusb.c:115:
+			printk(KERN_DEBUG __FILE__ ": "	\

CHECK:CAMELCASE: Avoid CamelCase: <bulk_in_endpointAddr>
#224: FILE: drivers/input/lirc/lirc_mceusb.c:150:
+	__u8 bulk_in_endpointAddr;	/* the address of bulk in endpoint */

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <bulk_out_endpointAddr>
#229: FILE: drivers/input/lirc/lirc_mceusb.c:155:
+	__u8 bulk_out_endpointAddr;	/* the address of bulk out endpoint */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#250: FILE: drivers/input/lirc/lirc_mceusb.c:176:
+	 * received was a pulse */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:LINE_SPACING: Please don't use multiple blank lines
#288: FILE: drivers/input/lirc/lirc_mceusb.c:214:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#293: FILE: drivers/input/lirc/lirc_mceusb.c:219:
+static inline void usb_mceusb_debug_data(const char *function, int size,
+					  const unsigned char *data)

WARNING:LINE_SPACING: Missing a blank line after declarations
#296: FILE: drivers/input/lirc/lirc_mceusb.c:222:
+	int i;
+	if (!debug)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#299: FILE: drivers/input/lirc/lirc_mceusb.c:225:
+	printk(KERN_DEBUG __FILE__": %s - length = %d, data = ",

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#299: FILE: drivers/input/lirc/lirc_mceusb.c:225:
+	printk(KERN_DEBUG __FILE__": %s - length = %d, data = ",

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#302: FILE: drivers/input/lirc/lirc_mceusb.c:228:
+		printk(KERN_DEBUG "%.2x ", data[i]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#303: FILE: drivers/input/lirc/lirc_mceusb.c:229:
+	printk(KERN_DEBUG "\n");

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#311: FILE: drivers/input/lirc/lirc_mceusb.c:237:
+	dprintk("%s", __func__);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dev->write_urb"
#317: FILE: drivers/input/lirc/lirc_mceusb.c:243:
+	if (dev->write_urb != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LINE_SPACING: Please don't use multiple blank lines
#350: FILE: drivers/input/lirc/lirc_mceusb.c:276:
+
+

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#363: FILE: drivers/input/lirc/lirc_mceusb.c:289:
+#if 0

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#423: FILE: drivers/input/lirc/lirc_mceusb.c:349:
+		(sizeof(dev->lircdata)/sizeof(int)) - dev->lirccnt;
 		                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#467: FILE: drivers/input/lirc/lirc_mceusb.c:393:
+			retval = usb_bulk_msg(dev->udev,
+					usb_rcvbulkpipe(dev->udev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#468: FILE: drivers/input/lirc/lirc_mceusb.c:394:
+					usb_rcvbulkpipe(dev->udev,
+						dev->bulk_in_endpointAddr),

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#470: FILE: drivers/input/lirc/lirc_mceusb.c:396:
+					this_read, &partial, HZ*10);
 					                       ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#473: FILE: drivers/input/lirc/lirc_mceusb.c:399:
+			/* retry a few times on overruns; map all
+			   other errors to -EIO */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#473: FILE: drivers/input/lirc/lirc_mceusb.c:399:
+			   other errors to -EIO */

CHECK:BRACES: braces {} should be used on all arms of this statement
#475: FILE: drivers/input/lirc/lirc_mceusb.c:401:
+				if (retval == -EOVERFLOW && retries < 5) {
[...]
+				} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#477: FILE: drivers/input/lirc/lirc_mceusb.c:403:
+					interruptible_sleep_on_timeout(

CHECK:BRACES: Unbalanced braces around else statement
#480: FILE: drivers/input/lirc/lirc_mceusb.c:406:
+				} else

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#498: FILE: drivers/input/lirc/lirc_mceusb.c:424:
+				/* sleep for a bit before performing
+				   another read */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#498: FILE: drivers/input/lirc/lirc_mceusb.c:424:
+				   another read */

WARNING:TYPO_SPELLING: 'transmittion' may be misspelled - perhaps 'transmission'?
#532: FILE: drivers/input/lirc/lirc_mceusb.c:458:
+				 * transmittion from the remote,
 				   ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#551: FILE: drivers/input/lirc/lirc_mceusb.c:477:
+				/* always clear this if we have a
+				   valid packet */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#551: FILE: drivers/input/lirc/lirc_mceusb.c:477:
+				   valid packet */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#555: FILE: drivers/input/lirc/lirc_mceusb.c:481:
+				/* continue here to verify we haven't
+				   hit the end of the bulk_in */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#555: FILE: drivers/input/lirc/lirc_mceusb.c:481:
+				   hit the end of the bulk_in */

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#558: FILE: drivers/input/lirc/lirc_mceusb.c:484:
+
+			}

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#587: FILE: drivers/input/lirc/lirc_mceusb.c:513:
+				/* on pulse->space transition, add one
+				   for the existing pulse */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#587: FILE: drivers/input/lirc/lirc_mceusb.c:513:
+				   for the existing pulse */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#600: FILE: drivers/input/lirc/lirc_mceusb.c:526:
+	/* save off some info if we are exiting mid-packet, or with
+	   leftovers */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#600: FILE: drivers/input/lirc/lirc_mceusb.c:526:
+	   leftovers */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around dev->bulk_in_buffer[bulkidx]
#605: FILE: drivers/input/lirc/lirc_mceusb.c:531:
+		memcpy(dev->bulk_in_buffer, &(dev->bulk_in_buffer[bulkidx]),

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: No space is necessary after a cast
#619: FILE: drivers/input/lirc/lirc_mceusb.c:545:
+	struct usb_skel *dev = (struct usb_skel *) data;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev->udev"
#624: FILE: drivers/input/lirc/lirc_mceusb.c:550:
+	if (dev->udev == NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#631: FILE: drivers/input/lirc/lirc_mceusb.c:557:
+		int res;
+		dev->lircidx = 0;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#652: FILE: drivers/input/lirc/lirc_mceusb.c:578:
+		lirc_buffer_write_n(buf,
+			(unsigned char *) &(dev->lircdata[dev->lircidx]),

CHECK:SPACING: No space is necessary after a cast
#652: FILE: drivers/input/lirc/lirc_mceusb.c:578:
+			(unsigned char *) &(dev->lircdata[dev->lircidx]),

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around dev->lircdata[dev->lircidx]
#652: FILE: drivers/input/lirc/lirc_mceusb.c:578:
+			(unsigned char *) &(dev->lircdata[dev->lircidx]),

WARNING:TYPO_SPELLING: 'buld' may be misspelled - perhaps 'build'?
#676: FILE: drivers/input/lirc/lirc_mceusb.c:602:
+		dprintk("%s - nonzero write buld status received: %d",
 		                            ^^^^

WARNING:RETURN_VOID: void function return statements are not generally useful
#682: FILE: drivers/input/lirc/lirc_mceusb.c:608:
+	return;
+}

CHECK:CAMELCASE: Avoid CamelCase: <idVendor>
#709: FILE: drivers/input/lirc/lirc_mceusb.c:635:
+	if (cpu_to_le16(udev->descriptor.idVendor) != USB_MCEUSB_VENDOR_ID ||

CHECK:CAMELCASE: Avoid CamelCase: <idProduct>
#710: FILE: drivers/input/lirc/lirc_mceusb.c:636:
+	    cpu_to_le16(udev->descriptor.idProduct) != USB_MCEUSB_PRODUCT_ID) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!minor_table[minor]"
#718: FILE: drivers/input/lirc/lirc_mceusb.c:644:
+		if (minor_table[minor] == NULL)

WARNING:SPLIT_STRING: quoted string split across lines
#723: FILE: drivers/input/lirc/lirc_mceusb.c:649:
+		info("Too many devices plugged in, "
+		     "can not handle this device.");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*dev)...) over kmalloc(sizeof(struct usb_skel)...)
#728: FILE: drivers/input/lirc/lirc_mceusb.c:654:
+	dev = kmalloc(sizeof(struct usb_skel), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dev"
#729: FILE: drivers/input/lirc/lirc_mceusb.c:655:
+	if (dev == NULL) {

CHECK:CAMELCASE: Avoid CamelCase: <bNumEndpoints>
#747: FILE: drivers/input/lirc/lirc_mceusb.c:673:
+	for (i = 0; i < iface_desc->desc.bNumEndpoints; ++i) {

CHECK:CAMELCASE: Avoid CamelCase: <bEndpointAddress>
#749: FILE: drivers/input/lirc/lirc_mceusb.c:675:
+		if ((endpoint->bEndpointAddress & USB_ENDPOINT_DIR_MASK) &&

CHECK:CAMELCASE: Avoid CamelCase: <bmAttributes>
#750: FILE: drivers/input/lirc/lirc_mceusb.c:676:
+		    ((endpoint->bmAttributes & USB_ENDPOINT_XFERTYPE_MASK) ==

CHECK:CAMELCASE: Avoid CamelCase: <wMaxPacketSize>
#753: FILE: drivers/input/lirc/lirc_mceusb.c:679:
+			buffer_size = endpoint->wMaxPacketSize;

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#767: FILE: drivers/input/lirc/lirc_mceusb.c:693:
+		    == 0x00)
+		    && ((endpoint->bmAttributes & USB_ENDPOINT_XFERTYPE_MASK) ==

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#786: FILE: drivers/input/lirc/lirc_mceusb.c:712:
+			usb_fill_bulk_urb(dev->write_urb, udev,
+				      usb_sndbulkpipe

CHECK:LINE_SPACING: Please don't use multiple blank lines
#801: FILE: drivers/input/lirc/lirc_mceusb.c:727:
+
+

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*plugin)...) over kmalloc(sizeof(struct lirc_plugin)...)
#803: FILE: drivers/input/lirc/lirc_mceusb.c:729:
+	plugin = kmalloc(sizeof(struct lirc_plugin), GFP_KERNEL);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*rbuf)...) over kmalloc(sizeof(struct lirc_buffer)...)
#810: FILE: drivers/input/lirc/lirc_mceusb.c:736:
+	rbuf = kmalloc(sizeof(struct lirc_buffer), GFP_KERNEL);

CHECK:SPACING: No space is necessary after a cast
#852: FILE: drivers/input/lirc/lirc_mceusb.c:778:
+		(void) usb_bulk_msg(udev,

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#855: FILE: drivers/input/lirc/lirc_mceusb.c:781:
+				    junk, 64, &partial, HZ*10);
 				                          ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#864: FILE: drivers/input/lirc/lirc_mceusb.c:790:
+	/* info("USB Microsoft IR Transceiver device now attached to msir%d",
+		dev->minor); */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#864: FILE: drivers/input/lirc/lirc_mceusb.c:790:
+		dev->minor); */

WARNING:LINE_SPACING: Missing a blank line after declarations
#890: FILE: drivers/input/lirc/lirc_mceusb.c:816:
+	int minor;
+	dev = usb_get_intfdata(interface);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#918: FILE: drivers/input/lirc/lirc_mceusb.c:844:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#939: FILE: drivers/input/lirc/lirc_mceusb.c:865:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000230091.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 32 warnings, 39 checks, 908 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000230091.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
