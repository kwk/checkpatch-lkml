WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#67: FILE: drivers/md/Kconfig:232:
+config DM_LOOP
+	tristate "Loop target (EXPERIMENTAL)"
+	depends on BLK_DEV_DM && EXPERIMENTAL
+	---help---
+	  This device-mapper target allows you to treat a regular file as
+	  a block device.
+
+	  If unsure, say N.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#96: FILE: drivers/md/dm-loop.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#130: FILE: drivers/md/dm-loop.c:35:
+ *--------------------------------------------------------------------*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#137: FILE: drivers/md/dm-loop.c:42:
+	struct file *filp;
 	             ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#141: FILE: drivers/md/dm-loop.c:46:
+	unsigned blkbits;		/* file system block size shift bits */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dm_target *' should also have an identifier name
#147: FILE: drivers/md/dm-loop.c:52:
+	int (*map_fn)(struct dm_target *, struct bio *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct bio *' should also have an identifier name
#147: FILE: drivers/md/dm-loop.c:52:
+	int (*map_fn)(struct dm_target *, struct bio *);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#155: FILE: drivers/md/dm-loop.c:60:
+^Isector_t start; ^I^I/* start sector in mapped device */$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#189: FILE: drivers/md/dm-loop.c:94:
+	struct loop_c *loop;		/* for filp & offset */
 	                    		       ^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#194: FILE: drivers/md/dm-loop.c:99:
+ *--------------------------------------------------------------------*/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#208: FILE: drivers/md/dm-loop.c:113:
+ *--------------------------------------------------------------------*/

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#213: FILE: drivers/md/dm-loop.c:118:
+static int fs_io(int rw, struct file *filp, loff_t *pos, struct bio_vec *bv)
                                       ^^^^

CHECK:SPACING: No space is necessary after a cast
#216: FILE: drivers/md/dm-loop.c:121:
+	void __user *ptr = (void __user __force *) kmap(bv->bv_page) + bv->bv_offset;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#220: FILE: drivers/md/dm-loop.c:125:
+	r = (rw == READ) ? filp->f_op->read(filp, ptr, bv->bv_len, pos) :
 	                                    ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#221: FILE: drivers/md/dm-loop.c:126:
+			   filp->f_op->write(filp, ptr, bv->bv_len, pos);
 			                     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#238: FILE: drivers/md/dm-loop.c:143:
+		r = fs_io(rw, fc->loop->filp, &pos, bv);
 		                        ^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#351: FILE: drivers/md/dm-loop.c:256:
+ *--------------------------------------------------------------------*/

WARNING:SPLIT_STRING: quoted string split across lines
#462: FILE: drivers/md/dm-loop.c:367:
+			DMWARN("%s has a hole; sparse file detected - "
+			       "switching to filesystem I/O", lc->path);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#493: FILE: drivers/md/dm-loop.c:398:
+	unsigned i;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#512: FILE: drivers/md/dm-loop.c:417:
+static struct dm_loop_extent **extent_binary_lookup(struct block_map_c *bc,
+	    struct dm_loop_extent **extent_mru, sector_t sector)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#514: FILE: drivers/md/dm-loop.c:419:
+	unsigned nr_extents = bc->nr_extents;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#515: FILE: drivers/md/dm-loop.c:420:
+	unsigned delta, dist, prev_dist = 0;

CHECK:BRACES: braces {} should be used on all arms of this statement
#520: FILE: drivers/md/dm-loop.c:425:
+	if ((*extent_mru)->start >= sector)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#521: FILE: drivers/md/dm-loop.c:426:
+		delta = dist = dist / 2;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:BRACES: Unbalanced braces around else statement
#522: FILE: drivers/md/dm-loop.c:427:
+	else {

CHECK:SPACING: No space is necessary after a cast
#587: FILE: drivers/md/dm-loop.c:492:
+	      (unsigned long long) bio->bi_sector + ti->begin);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#588: FILE: drivers/md/dm-loop.c:493:
+	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#598: FILE: drivers/md/dm-loop.c:503:
+static struct dm_loop_extent **build_extent_map(struct list_head *head, int nr_extents,
+					unsigned long *flags)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#600: FILE: drivers/md/dm-loop.c:505:
+	unsigned map_size, cache_size;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#639: FILE: drivers/md/dm-loop.c:544:
+	r = nr_extents = loop_extents(lc, inode, &head);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#672: FILE: drivers/md/dm-loop.c:577:
+ *--------------------------------------------------------------------*/

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#677: FILE: drivers/md/dm-loop.c:582:
+static int loop_invalidate_file(struct file *filp)
                                              ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#701: FILE: drivers/md/dm-loop.c:606:
+ * Acquire or release a "no-truncate" lock on *filp.
                                                ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#706: FILE: drivers/md/dm-loop.c:611:
+static void file_truncate_lock(struct file *filp)
                                             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#715: FILE: drivers/md/dm-loop.c:620:
+static void file_truncate_unlock(struct file *filp)
                                               ^^^^

WARNING:TYPO_SPELLING: 'taget' may be misspelled - perhaps 'target'?
#725: FILE: drivers/md/dm-loop.c:630:
+ * Fill out split_io for taget backing store
                          ^^^^^

CHECK:SPACING: No space is necessary after a cast
#738: FILE: drivers/md/dm-loop.c:643:
+		(unsigned long long) ti->split_io);

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#747: FILE: drivers/md/dm-loop.c:652:
+	struct file *filp = lc->filp;
 	             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#747: FILE: drivers/md/dm-loop.c:652:
+	struct file *filp = lc->filp;
 	                        ^^^^

CHECK:SPACING: No space is necessary after a cast
#794: FILE: drivers/md/dm-loop.c:699:
+	DMDEBUG("set backing file size to %llu", (unsigned long long) lc->size);

CHECK:SPACING: No space is necessary after a cast
#810: FILE: drivers/md/dm-loop.c:715:
+		(unsigned long long) lc->mapped_sectors,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#830: FILE: drivers/md/dm-loop.c:735:
+static void loop_put_file(struct file *filp)
                                        ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#832: FILE: drivers/md/dm-loop.c:737:
+	if (!filp)
 	     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#835: FILE: drivers/md/dm-loop.c:740:
+	file_truncate_unlock(filp);
 	                     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#836: FILE: drivers/md/dm-loop.c:741:
+	filp_close(filp, NULL);
 	           ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#847: FILE: drivers/md/dm-loop.c:752:
+	struct file *filp;
 	             ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#851: FILE: drivers/md/dm-loop.c:756:
+	filp = filp_open(lc->path, flags, 0);
 	^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#852: FILE: drivers/md/dm-loop.c:757:
+	if (IS_ERR(filp))
 	           ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#853: FILE: drivers/md/dm-loop.c:758:
+		return PTR_ERR(filp);
 		               ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#854: FILE: drivers/md/dm-loop.c:759:
+	lc->filp = filp;
 	    ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#854: FILE: drivers/md/dm-loop.c:759:
+	lc->filp = filp;
 	           ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#863: FILE: drivers/md/dm-loop.c:768:
+	file_truncate_lock(filp);
 	                   ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#867: FILE: drivers/md/dm-loop.c:772:
+	fput(filp);
 	     ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#878: FILE: drivers/md/dm-loop.c:783:
+	loop_invalidate_file(lc->filp);
 	                         ^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#883: FILE: drivers/md/dm-loop.c:788:
+ *--------------------------------------------------------------------*/

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#908: FILE: drivers/md/dm-loop.c:813:
+				unsigned maxlen)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#928: FILE: drivers/md/dm-loop.c:833:
+				 unsigned maxlen)

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#953: FILE: drivers/md/dm-loop.c:858:
+ *
+*/

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#955: FILE: drivers/md/dm-loop.c:860:
+		       unsigned maxlen)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#983: FILE: drivers/md/dm-loop.c:888:
+		loop_invalidate_file(lc->filp);
 		                         ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#990: FILE: drivers/md/dm-loop.c:895:
+	loop_put_file(lc->filp);
 	                  ^^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#999: FILE: drivers/md/dm-loop.c:904:
+static int loop_ctr(struct dm_target *ti, unsigned argc, char **argv)

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#1025: FILE: drivers/md/dm-loop.c:930:
+	if (sscanf(argv[1], "%lld", &lc->offset) != 1)
+		goto err;

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1047: FILE: drivers/md/dm-loop.c:952:
+	loop_invalidate_file(lc->filp);
 	                         ^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#1054: FILE: drivers/md/dm-loop.c:959:
+	DMDEBUG("constructed loop target on %s "
+		"(%lldk, %llu sectors)", lc->path,

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#1061: FILE: drivers/md/dm-loop.c:966:
+	loop_put_file(lc->filp);
 	                  ^^^^

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#1064: FILE: drivers/md/dm-loop.c:969:
+	if (lc)
+		kfree(lc);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1082: FILE: drivers/md/dm-loop.c:987:
+ *--------------------------------------------------------------------*/

WARNING:NEEDLESS_IF: kmem_cache_destroy(NULL) is safe and this check is probably not required
#1106: FILE: drivers/md/dm-loop.c:1011:
+	if (dm_loop_extent_cache)
+		kmem_cache_destroy(dm_loop_extent_cache);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000338641.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 58 warnings, 11 checks, 1058 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000338641.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
