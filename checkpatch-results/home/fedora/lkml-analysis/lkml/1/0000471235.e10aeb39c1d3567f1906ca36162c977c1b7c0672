ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#57: FILE: linux-2.6/drivers/serial/Kconfig:498:
to the

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#60: FILE: linux-2.6/drivers/serial/Kconfig:501:
+config SERIAL_BFIN
+	tristate "Blackfin serial port support (EXPERIMENTAL)"
+	depends on BFIN && EXPERIMENTAL
+	select SERIAL_CORE
+	select SERIAL_BFIN_UART0 if (BF531 || BF532 || BF533 || BF561)
+	help
+	  Add support for the built-in UARTs on the Blackfin.
+
+	  To compile this driver as a module, choose M here: the
+	  module will be called bfin_5xx.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#71: FILE: linux-2.6/drivers/serial/Kconfig:512:
+config SERIAL_BFIN_CONSOLE
+	bool "Console on Blackfin serial port"
+	depends on SERIAL_BFIN
+	select SERIAL_CORE_CONSOLE
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#76: FILE: linux-2.6/drivers/serial/Kconfig:517:
+choice
+	prompt  "Blackfin UART Mode"
+	depends on SERIAL_BFIN
+	default SERIAL_BFIN_DMA
+	help
+	  This driver supports the built-in serial ports of the Blackfin

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#85: FILE: linux-2.6/drivers/serial/Kconfig:525:
+config SERIAL_BFIN_DMA
+	bool "Blackfin UART DMA mode"
+	depends on DMA_UNCACHED_1M
+	help
+	  This driver works under DMA mode. If this option is selected,

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#93: FILE: linux-2.6/drivers/serial/Kconfig:532:
+config SERIAL_BFIN_PIO
+	bool "Blackfin UART PIO mode"
+	help
+	  This driver works under PIO mode.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#100: FILE: linux-2.6/drivers/serial/Kconfig:539:
+config SERIAL_BFIN_UART0
+	bool "Enable UART0"
+	depends on SERIAL_BFIN
+	help
+	  Enable UART0
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#106: FILE: linux-2.6/drivers/serial/Kconfig:545:
+config BFIN_UART0_CTSRTS
+	bool "Enable UART0 hardware flow control"
+	depends on SERIAL_BFIN_UART0
+	help
+	  Enable hardware flow control in the driver. Using GPIO emulate

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#130: FILE: linux-2.6/drivers/serial/Kconfig:568:
+config SERIAL_BFIN_UART1
+	bool "Enable UART1"
+	depends on SERIAL_BFIN && BF537
+	help
+	  Enable UART1
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#136: FILE: linux-2.6/drivers/serial/Kconfig:574:
+config BFIN_UART1_CTSRTS
+	bool "Enable UART1 hardware flow control"
+	depends on SERIAL_BFIN_UART1
+	help
+	  Enable hardware flow control in the driver. Using GPIO emulate

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#181: FILE: linux-2.6/drivers/serial/bfin_5xx.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#189: FILE: linux-2.6/drivers/serial/bfin_5xx.c:9:
+ * Rev:          $Id: bfin_5xx.c,v 1.19 2006/09/24 02:33:53 aubrey Exp

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#210: FILE: linux-2.6/drivers/serial/bfin_5xx.c:29:
+ * 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

WARNING:INCLUDE_LINUX: Use #include <linux/gpio.h> instead of <asm/gpio.h>
#227: FILE: linux-2.6/drivers/serial/bfin_5xx.c:46:
+#include <asm/gpio.h>

WARNING:INCLUDE_LINUX: Use #include <linux/io.h> instead of <asm/io.h>
#232: FILE: linux-2.6/drivers/serial/bfin_5xx.c:51:
+#include <asm/io.h>

WARNING:INCLUDE_LINUX: Use #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#234: FILE: linux-2.6/drivers/serial/bfin_5xx.c:53:
+#include <asm/cacheflush.h>

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#239: FILE: linux-2.6/drivers/serial/bfin_5xx.c:57:
+/* We've been assigned a range on the "Low-density serial ports" major
+#define SERIAL_BFIN_MAJOR	TTY_MAJOR

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#283: FILE: linux-2.6/drivers/serial/bfin_5xx.c:100:
+        disable_dma(uart->tx_dma_channel);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: linux-2.6/drivers/serial/bfin_5xx.c:100:
+        disable_dma(uart->tx_dma_channel);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#304: FILE: linux-2.6/drivers/serial/bfin_5xx.c:121:
+	unsigned short ier;
+	ier = UART_GET_IER(uart);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'THRE' may be misspelled - perhaps 'THREE'?
#341: FILE: linux-2.6/drivers/serial/bfin_5xx.c:158:
+	} while (!(status & THRE));
 	                    ^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#351: FILE: linux-2.6/drivers/serial/bfin_5xx.c:168:
+	struct tty_struct *tty = uart->port.info?uart->port.info->tty:0;
 	                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#351: FILE: linux-2.6/drivers/serial/bfin_5xx.c:168:
+	struct tty_struct *tty = uart->port.info?uart->port.info->tty:0;
 	                                                             ^

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#355: FILE: linux-2.6/drivers/serial/bfin_5xx.c:171:
+	static int in_break = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:CODE_INDENT: code indent should use tabs where possible
#359: FILE: linux-2.6/drivers/serial/bfin_5xx.c:175:
+ ^Ich = UART_GET_CHAR(uart);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#359: FILE: linux-2.6/drivers/serial/bfin_5xx.c:175:
+ ^Ich = UART_GET_CHAR(uart);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: linux-2.6/drivers/serial/bfin_5xx.c:175:
+ ^Ich = UART_GET_CHAR(uart);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#360: FILE: linux-2.6/drivers/serial/bfin_5xx.c:176:
+ ^Iuart->port.icount.rx++;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#360: FILE: linux-2.6/drivers/serial/bfin_5xx.c:176:
+ ^Iuart->port.icount.rx++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#360: FILE: linux-2.6/drivers/serial/bfin_5xx.c:176:
+ ^Iuart->port.icount.rx++;$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 0)
#373: FILE: linux-2.6/drivers/serial/bfin_5xx.c:188:
+	if (status & BI) {
[...]
defined(CONFIG_BF533)

CHECK:BRACES: braces {} should be used on all arms of this statement
#373: FILE: linux-2.6/drivers/serial/bfin_5xx.c:188:
+	if (status & BI) {
[...]
+	} else if (status & PE) {
[...]
+	} else if (status & OE) {
[...]
+	} else if (status & FE) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#391: FILE: linux-2.6/drivers/serial/bfin_5xx.c:205:
+	} else

CHECK:SPACING: spaces preferred around that '&' (ctx:WxV)
#449: FILE: linux-2.6/drivers/serial/bfin_5xx.c:263:
+	} while (status &(IIR_TX_READY | IIR_RX_READY));
 	                ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#458: FILE: linux-2.6/drivers/serial/bfin_5xx.c:271:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#498: FILE: linux-2.6/drivers/serial/bfin_5xx.c:310:
+	uart->tx_count = CIRC_CNT(xmit->head, xmit->tail,
+	if (uart->tx_count > (UART_XMIT_SIZE - xmit->tail))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#505: FILE: linux-2.6/drivers/serial/bfin_5xx.c:315:
+	set_dma_config(uart->tx_dma_channel,
+		set_bfin_dma_config(DIR_READ, DMA_FLOW_STOP,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#506: FILE: linux-2.6/drivers/serial/bfin_5xx.c:316:
+		set_bfin_dma_config(DIR_READ, DMA_FLOW_STOP,
+			INTR_ON_BUF,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#520: FILE: linux-2.6/drivers/serial/bfin_5xx.c:329:
+static void bfin_serial_dma_rx_chars(struct bfin_serial_port * uart)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#529: FILE: linux-2.6/drivers/serial/bfin_5xx.c:337:
+        if (status & BI) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#529: FILE: linux-2.6/drivers/serial/bfin_5xx.c:337:
+        if (status & BI) {$

CHECK:BRACES: braces {} should be used on all arms of this statement
#529: FILE: linux-2.6/drivers/serial/bfin_5xx.c:337:
+        if (status & BI) {
[...]
+        } else if (status & PE) {
[...]
+        } else if (status & OE) {
[...]
+        } else if (status & FE) {
[...]
+        } else
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#530: FILE: linux-2.6/drivers/serial/bfin_5xx.c:338:
+                uart->port.icount.brk++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#530: FILE: linux-2.6/drivers/serial/bfin_5xx.c:338:
+                uart->port.icount.brk++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#531: FILE: linux-2.6/drivers/serial/bfin_5xx.c:339:
+                if (uart_handle_break(&uart->port))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#531: FILE: linux-2.6/drivers/serial/bfin_5xx.c:339:
+                if (uart_handle_break(&uart->port))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#532: FILE: linux-2.6/drivers/serial/bfin_5xx.c:340:
+                        goto dma_ignore_char;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#532: FILE: linux-2.6/drivers/serial/bfin_5xx.c:340:
+                        goto dma_ignore_char;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#533: FILE: linux-2.6/drivers/serial/bfin_5xx.c:341:
+                flg = TTY_BREAK;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#533: FILE: linux-2.6/drivers/serial/bfin_5xx.c:341:
+                flg = TTY_BREAK;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#534: FILE: linux-2.6/drivers/serial/bfin_5xx.c:342:
+        } else if (status & PE) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#534: FILE: linux-2.6/drivers/serial/bfin_5xx.c:342:
+        } else if (status & PE) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#535: FILE: linux-2.6/drivers/serial/bfin_5xx.c:343:
+                flg = TTY_PARITY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#535: FILE: linux-2.6/drivers/serial/bfin_5xx.c:343:
+                flg = TTY_PARITY;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#536: FILE: linux-2.6/drivers/serial/bfin_5xx.c:344:
+                uart->port.icount.parity++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#536: FILE: linux-2.6/drivers/serial/bfin_5xx.c:344:
+                uart->port.icount.parity++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#537: FILE: linux-2.6/drivers/serial/bfin_5xx.c:345:
+        } else if (status & OE) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#537: FILE: linux-2.6/drivers/serial/bfin_5xx.c:345:
+        } else if (status & OE) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#538: FILE: linux-2.6/drivers/serial/bfin_5xx.c:346:
+                flg = TTY_OVERRUN;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#538: FILE: linux-2.6/drivers/serial/bfin_5xx.c:346:
+                flg = TTY_OVERRUN;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#539: FILE: linux-2.6/drivers/serial/bfin_5xx.c:347:
+                uart->port.icount.overrun++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#539: FILE: linux-2.6/drivers/serial/bfin_5xx.c:347:
+                uart->port.icount.overrun++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#540: FILE: linux-2.6/drivers/serial/bfin_5xx.c:348:
+        } else if (status & FE) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#540: FILE: linux-2.6/drivers/serial/bfin_5xx.c:348:
+        } else if (status & FE) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#541: FILE: linux-2.6/drivers/serial/bfin_5xx.c:349:
+                flg = TTY_FRAME;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#541: FILE: linux-2.6/drivers/serial/bfin_5xx.c:349:
+                flg = TTY_FRAME;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#542: FILE: linux-2.6/drivers/serial/bfin_5xx.c:350:
+                uart->port.icount.frame++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#542: FILE: linux-2.6/drivers/serial/bfin_5xx.c:350:
+                uart->port.icount.frame++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#543: FILE: linux-2.6/drivers/serial/bfin_5xx.c:351:
+        } else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#543: FILE: linux-2.6/drivers/serial/bfin_5xx.c:351:
+        } else$

CHECK:BRACES: Unbalanced braces around else statement
#543: FILE: linux-2.6/drivers/serial/bfin_5xx.c:351:
+        } else

ERROR:CODE_INDENT: code indent should use tabs where possible
#544: FILE: linux-2.6/drivers/serial/bfin_5xx.c:352:
+                flg = TTY_NORMAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#544: FILE: linux-2.6/drivers/serial/bfin_5xx.c:352:
+                flg = TTY_NORMAL;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#550: FILE: linux-2.6/drivers/serial/bfin_5xx.c:356:
+		if (uart_handle_sysrq_char(&uart->port,
+			goto dma_ignore_char;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#553: FILE: linux-2.6/drivers/serial/bfin_5xx.c:358:
+		uart_insert_char(&uart->port, status, 2,
+	}

ERROR:SPACING: spaces required around that '>' (ctx:VxV)
#573: FILE: linux-2.6/drivers/serial/bfin_5xx.c:377:
+	if (pos>uart->rx_dma_buf.tail) {
 	       ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around uart->rx_dma_timer
#580: FILE: linux-2.6/drivers/serial/bfin_5xx.c:384:
+	add_timer(&(uart->rx_dma_timer));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#590: FILE: linux-2.6/drivers/serial/bfin_5xx.c:394:
+	if (!(get_dma_curr_irqstat(uart->tx_dma_channel)&DMA_RUN)) {
 	                                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#596: FILE: linux-2.6/drivers/serial/bfin_5xx.c:400:
+		xmit->tail = (xmit->tail+uart->tx_count)
 		                        ^

ERROR:SPACING: spaces required around that '+=' (ctx:VxV)
#598: FILE: linux-2.6/drivers/serial/bfin_5xx.c:401:
+		uart->port.icount.tx+=uart->tx_count;
 		                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#620: FILE: linux-2.6/drivers/serial/bfin_5xx.c:423:
+		uart->rx_dma_buf.tail = DMA_RX_XCOUNT*DMA_RX_YCOUNT;
 		                                     ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#622: FILE: linux-2.6/drivers/serial/bfin_5xx.c:425:
+		uart->rx_dma_buf.head = uart->rx_dma_buf.tail = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:TYPO_SPELLING: 'THRE' may be misspelled - perhaps 'THREE'?
#642: FILE: linux-2.6/drivers/serial/bfin_5xx.c:445:
+	if (lsr & THRE)
 	          ^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#652: FILE: linux-2.6/drivers/serial/bfin_5xx.c:455:
+	struct bfin_serial_port *uart = (struct bfin_serial_port *)port;
+	if (uart->cts_pin < 0)

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#657: FILE: linux-2.6/drivers/serial/bfin_5xx.c:460:
+		return TIOCM_DSR | TIOCM_CAR;
+	else

WARNING:LINE_SPACING: Missing a blank line after declarations
#667: FILE: linux-2.6/drivers/serial/bfin_5xx.c:469:
+	struct bfin_serial_port *uart = (struct bfin_serial_port *)port;
+	if (uart->rts_pin < 0)

WARNING:BRACES: braces {} are not necessary for any arm of this statement
#689: FILE: linux-2.6/drivers/serial/bfin_5xx.c:491:
+	if (!(status & TIOCM_CTS)) {
[...]
+	} else {
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#719: FILE: linux-2.6/drivers/serial/bfin_5xx.c:520:
+		printk(KERN_NOTICE "Unable to attach Blackfin UART RX

CHECK:CAMELCASE: Avoid CamelCase: <Unable>
#725: FILE: linux-2.6/drivers/serial/bfin_5xx.c:525:
+		printk(KERN_NOTICE "Unable to attach Blackfin UART TX

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Blackfin>
#725: FILE: linux-2.6/drivers/serial/bfin_5xx.c:525:
+		printk(KERN_NOTICE "Unable to attach Blackfin UART TX

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#733: FILE: linux-2.6/drivers/serial/bfin_5xx.c:531:
+	set_dma_callback(uart->rx_dma_channel, bfin_serial_dma_rx_int,
+	set_dma_callback(uart->tx_dma_channel, bfin_serial_dma_tx_int,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#734: FILE: linux-2.6/drivers/serial/bfin_5xx.c:531:
+	set_dma_callback(uart->rx_dma_channel, bfin_serial_dma_rx_int,
uart);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#735: FILE: linux-2.6/drivers/serial/bfin_5xx.c:532:
+	set_dma_callback(uart->tx_dma_channel, bfin_serial_dma_tx_int,
+

WARNING:UNNECESSARY_CASTS: unnecessary cast may hide bugs, see http://c-faq.com/malloc/mallocnocast.html
#736: FILE: linux-2.6/drivers/serial/bfin_5xx.c:533:
+	uart->rx_dma_buf.buf = (unsigned char *)dma_alloc_coherent(NULL,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#743: FILE: linux-2.6/drivers/serial/bfin_5xx.c:539:
+	set_dma_config(uart->rx_dma_channel,
+		set_bfin_dma_config(DIR_WRITE, DMA_FLOW_AUTO,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#744: FILE: linux-2.6/drivers/serial/bfin_5xx.c:540:
+		set_bfin_dma_config(DIR_WRITE, DMA_FLOW_AUTO,
+				INTR_ON_ROW, DIMENSION_2D,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around uart->rx_dma_timer
#758: FILE: linux-2.6/drivers/serial/bfin_5xx.c:552:
+	add_timer(&(uart->rx_dma_timer));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#763: FILE: linux-2.6/drivers/serial/bfin_5xx.c:557:
+		printk(KERN_NOTICE "Unable to attach BlackFin UART RX

CHECK:CAMELCASE: Avoid CamelCase: <BlackFin>
#771: FILE: linux-2.6/drivers/serial/bfin_5xx.c:564:
+		printk(KERN_NOTICE "Unable to attach BlackFin UART TX

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around uart->rx_dma_timer
#790: FILE: linux-2.6/drivers/serial/bfin_5xx.c:582:
+	del_timer(&(uart->rx_dma_timer));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#793: FILE: linux-2.6/drivers/serial/bfin_5xx.c:585:
+	free_irq(uart->port.irq+1, uart);
 	                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#809: FILE: linux-2.6/drivers/serial/bfin_5xx.c:599:
+	baud = uart_get_baud_rate(port, termios, old, 0,
+	quot = bfin_serial_calc_baud(port->uartclk, baud);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#826: FILE: linux-2.6/drivers/serial/bfin_5xx.c:616:
+^I$

WARNING:CONST_STRUCT: struct uart_ops should normally be const
#889: FILE: linux-2.6/drivers/serial/bfin_5xx.c:678:
+static struct uart_ops bfin_serial_pops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:BRACES: braces {} are not necessary for single statement blocks
#914: FILE: linux-2.6/drivers/serial/bfin_5xx.c:702:
+	if ((quot & 0x1) == 1) {
+		quot++;
+	}

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#917: FILE: linux-2.6/drivers/serial/bfin_5xx.c:705:
+	return quot/2;
 	           ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#936: FILE: linux-2.6/drivers/serial/bfin_5xx.c:724:
+^I^Ibfin_serial_ports[i].port.membase   = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#939: FILE: linux-2.6/drivers/serial/bfin_5xx.c:726:
+^I^Ibfin_serial_ports[i].port.mapbase   = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#941: FILE: linux-2.6/drivers/serial/bfin_5xx.c:728:
+^I^Ibfin_serial_ports[i].port.irq       = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#947: FILE: linux-2.6/drivers/serial/bfin_5xx.c:734:
+^I^Ibfin_serial_ports[i].tx_dma_channel = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#949: FILE: linux-2.6/drivers/serial/bfin_5xx.c:736:
+^I^Ibfin_serial_ports[i].rx_dma_channel = $

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around bfin_serial_ports[i].rx_dma_timer
#951: FILE: linux-2.6/drivers/serial/bfin_5xx.c:738:
+		init_timer(&(bfin_serial_ports[i].rx_dma_timer));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#953: FILE: linux-2.6/drivers/serial/bfin_5xx.c:740:
+^I^IINIT_WORK(&bfin_serial_ports[i].cts_workqueue, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#954: FILE: linux-2.6/drivers/serial/bfin_5xx.c:741:
+		INIT_WORK(&bfin_serial_ports[i].cts_workqueue, 
+				bfin_serial_do_work,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#955: FILE: linux-2.6/drivers/serial/bfin_5xx.c:741:
+		INIT_WORK(&bfin_serial_ports[i].cts_workqueue, 
&bfin_serial_ports[i]);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#958: FILE: linux-2.6/drivers/serial/bfin_5xx.c:744:
+^I^Ibfin_serial_ports[i].cts_pin^I    = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#960: FILE: linux-2.6/drivers/serial/bfin_5xx.c:746:
+^I^Ibfin_serial_ports[i].rts_pin^I    = $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#961: FILE: linux-2.6/drivers/serial/bfin_5xx.c:747:
+^I^I^Ibfin_serial_resource[i].uart_rts_pin;^I$

WARNING:TYPO_SPELLING: 'Lengh' may be misspelled - perhaps 'Length'?
#985: FILE: linux-2.6/drivers/serial/bfin_5xx.c:770:
+		/* Set LCR to Word Lengh 8-bit word select */
 		                   ^^^^^

WARNING:TYPO_SPELLING: 'THRE' may be misspelled - perhaps 'THREE'?
#1014: FILE: linux-2.6/drivers/serial/bfin_5xx.c:798:
+		} while (!(status & THRE));
 		                    ^^^^

WARNING:TYPO_SPELLING: 'THRE' may be misspelled - perhaps 'THREE'?
#1024: FILE: linux-2.6/drivers/serial/bfin_5xx.c:808:
+			} while(!(status & THRE));
 			                   ^^^^

ERROR:SPACING: space required before the open parenthesis '('
#1024: FILE: linux-2.6/drivers/serial/bfin_5xx.c:808:
+			} while(!(status & THRE));

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#1058: FILE: linux-2.6/drivers/serial/bfin_5xx.c:841:
+		switch (lcr & 0x03) {
+			case 0:	*bits = 5; break;
+			case 1:	*bits = 6; break;
+			case 2:	*bits = 7; break;
+			case 3:	*bits = 8; break;

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1059: FILE: linux-2.6/drivers/serial/bfin_5xx.c:842:
+			case 0:	*bits = 5; break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1060: FILE: linux-2.6/drivers/serial/bfin_5xx.c:843:
+			case 1:	*bits = 6; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1061: FILE: linux-2.6/drivers/serial/bfin_5xx.c:844:
+			case 2:	*bits = 7; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#1062: FILE: linux-2.6/drivers/serial/bfin_5xx.c:845:
+			case 3:	*bits = 8; break;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1077: FILE: linux-2.6/drivers/serial/bfin_5xx.c:860:
+		*baud = get_sclk() / (16*(dll | dlh << 8));
 		                        ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1079: FILE: linux-2.6/drivers/serial/bfin_5xx.c:862:
+	pr_debug("%s:baud = %d, parity = %c, bits= %d\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1081: FILE: linux-2.6/drivers/serial/bfin_5xx.c:863:
+	pr_debug("%s:baud = %d, parity = %c, bits= %d\n", __FUNCTION__,
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1108: FILE: linux-2.6/drivers/serial/bfin_5xx.c:889:
+		uart_parse_options(options, &baud, &parity, &bits,
+	else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1111: FILE: linux-2.6/drivers/serial/bfin_5xx.c:891:
+		bfin_serial_console_get_options(uart, &baud, &parity,
+

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1135: FILE: linux-2.6/drivers/serial/bfin_5xx.c:914:
+#define BFIN_SERIAL_CONSOLE	&bfin_serial_console

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1152: FILE: linux-2.6/drivers/serial/bfin_5xx.c:930:
+static int bfin_serial_suspend(struct platform_device *dev,
+{

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1188: FILE: linux-2.6/drivers/serial/bfin_5xx.c:964:
+			uart_add_one_port(&bfin_serial_reg,
+			platform_set_drvdata(dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1189: FILE: linux-2.6/drivers/serial/bfin_5xx.c:964:
+			uart_add_one_port(&bfin_serial_reg,
&bfin_serial_ports[i]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1190: FILE: linux-2.6/drivers/serial/bfin_5xx.c:965:
+			platform_set_drvdata(dev,
+		}

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1204: FILE: linux-2.6/drivers/serial/bfin_5xx.c:979:
+^I$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000471235.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 44 errors, 53 warnings, 41 checks, 1195 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000471235.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
