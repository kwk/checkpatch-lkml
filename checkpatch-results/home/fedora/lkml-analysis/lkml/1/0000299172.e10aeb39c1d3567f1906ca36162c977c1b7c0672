WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#45: FILE: include/linux/tomoyo_socket.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#46: FILE: include/linux/tomoyo_socket.h:2:
+ * include/linux/tomoyo_socket.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

CHECK:SPACING: No space is necessary after a cast
#122: FILE: include/linux/tomoyo_socket.h:78:
+	if (sock->ops->getname(sock, (struct sockaddr *) addr, &addr_len, 0))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#124: FILE: include/linux/tomoyo_socket.h:80:
+	switch (((struct sockaddr *) addr)->sa_family) {

CHECK:SPACING: No space is necessary after a cast
#128: FILE: include/linux/tomoyo_socket.h:84:
+		addr6 = (struct sockaddr_in6 *) addr;

CHECK:SPACING: No space is necessary after a cast
#134: FILE: include/linux/tomoyo_socket.h:90:
+		addr4 = (struct sockaddr_in *) addr;

CHECK:SPACING: No space is necessary after a cast
#136: FILE: include/linux/tomoyo_socket.h:92:
+						     (u8 *) &addr4->sin_addr,

CHECK:SPACING: No space is necessary after a cast
#168: FILE: include/linux/tomoyo_socket.h:124:
+		addr6 = (struct sockaddr_in6 *) addr;

CHECK:SPACING: No space is necessary after a cast
#180: FILE: include/linux/tomoyo_socket.h:136:
+		addr4 = (struct sockaddr_in *) addr;

CHECK:SPACING: No space is necessary after a cast
#186: FILE: include/linux/tomoyo_socket.h:142:
+						      (u8 *) &addr4->sin_addr,

CHECK:SPACING: No space is necessary after a cast
#227: FILE: include/linux/tomoyo_socket.h:183:
+		addr6 = (struct sockaddr_in6 *) addr;

CHECK:SPACING: No space is necessary after a cast
#239: FILE: include/linux/tomoyo_socket.h:195:
+		addr4 = (struct sockaddr_in *) addr;

CHECK:SPACING: No space is necessary after a cast
#245: FILE: include/linux/tomoyo_socket.h:201:
+						   (u8 *) &addr4->sin_addr,

CHECK:SPACING: No space is necessary after a cast
#279: FILE: include/linux/tomoyo_socket.h:235:
+		addr6 = (struct sockaddr_in6 *) addr;

CHECK:SPACING: No space is necessary after a cast
#285: FILE: include/linux/tomoyo_socket.h:241:
+		addr4 = (struct sockaddr_in *) addr;

CHECK:SPACING: No space is necessary after a cast
#287: FILE: include/linux/tomoyo_socket.h:243:
+						     (u8 *) &addr4->sin_addr,

CHECK:SPACING: No space is necessary after a cast
#313: FILE: include/linux/tomoyo_socket.h:269:
+		addr6 = (struct sockaddr_in6 *) addr;

CHECK:SPACING: No space is necessary after a cast
#325: FILE: include/linux/tomoyo_socket.h:281:
+		addr4 = (struct sockaddr_in *) addr;

CHECK:SPACING: No space is necessary after a cast
#331: FILE: include/linux/tomoyo_socket.h:287:
+						      (u8 *) &addr4->sin_addr,

WARNING:IN_ATOMIC: use of in_atomic() is incorrect outside core kernel code
#353: FILE: include/linux/tomoyo_socket.h:309:
+	if (in_atomic())

in_atomic() is not for driver use so any such use is reported as an ERROR.
Also in_atomic() is often used to determine if sleeping is permitted,
but it is not reliable in this use model.  Therefore its use is
strongly discouraged.

However, in_atomic() is ok for core kernel use.

See: https://lore.kernel.org/lkml/20080320201723.b87b3732.akpm@linux-foundation.org/

CHECK:SPACING: No space is necessary after a cast
#379: FILE: include/linux/tomoyo_socket.h:335:
+						      (u8 *) &sin6, port);

CHECK:SPACING: No space is necessary after a cast
#390: FILE: include/linux/tomoyo_socket.h:346:
+						      (u8 *) &sin4, port);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#427: FILE: include/linux/tomoyo_socket.h:383:
+}
+static inline int ccs_socket_listen_permission(struct socket *sock)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#431: FILE: include/linux/tomoyo_socket.h:387:
+}
+static inline int ccs_socket_connect_permission(struct socket *sock,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#437: FILE: include/linux/tomoyo_socket.h:393:
+}
+static inline int ccs_socket_bind_permission(struct socket *sock,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#443: FILE: include/linux/tomoyo_socket.h:399:
+}
+static inline int ccs_socket_accept_permission(struct socket *sock,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#448: FILE: include/linux/tomoyo_socket.h:404:
+}
+static inline int ccs_socket_sendmsg_permission(struct socket *sock,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#454: FILE: include/linux/tomoyo_socket.h:410:
+}
+static inline int ccs_socket_recv_datagram_permission(struct sock *sk,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000299172.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 25 checks, 419 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000299172.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
