WARNING:TYPO_SPELLING: 'Allright' may be misspelled - perhaps 'All right'?
#47: 
> > Allright so after various delays and sidetracking on my side, 
    ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#67: 
   git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip.git iommu-for-powerpc

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#349: FILE: arch/sparc/include/asm/dma-mapping.h:17:
+extern struct dma_map_ops *dma_ops, pci32_dma_ops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#402: FILE: arch/sparc/include/asm/dma-mapping.h:20:
+static inline struct dma_map_ops *get_dma_ops(struct device *dev)

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#438: FILE: arch/sparc/include/asm/dma-mapping.h:34:
+	struct dma_map_ops *ops = get_dma_ops(dev);

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#462: FILE: arch/sparc/include/asm/dma-mapping.h:45:
+	struct dma_map_ops *ops = get_dma_ops(dev);

CHECK:BIT_MACRO: Prefer using the BIT macro
#771: FILE: arch/sparc/kernel/dma.c:6:
+#define PREALLOC_DMA_DEBUG_ENTRIES       (1 << 15)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#938: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#1006: FILE: arch/sparc/kernel/iommu.c:829:
+static struct dma_map_ops sun4u_dma_ops = {

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#1015: FILE: arch/sparc/kernel/iommu.c:840:
+struct dma_map_ops *dma_ops = &sun4u_dma_ops;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#1018: FILE: arch/sparc/kernel/iommu.c:843:
+extern int pci64_dma_supported(struct pci_dev *pdev, u64 device_mask);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#1061: FILE: arch/sparc/kernel/ioport.c:302:
+			       dma_addr_t ba)
 			                  ^^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1070: FILE: arch/sparc/kernel/ioport.c:320:
+		printk("sbus_free_consistent: region 0x%lx asked 0x%zx\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sbus_free_consistent', this function's name, in a string
#1070: FILE: arch/sparc/kernel/ioport.c:320:
+		printk("sbus_free_consistent: region 0x%lx asked 0x%zx\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1071: FILE: arch/sparc/kernel/ioport.c:321:
+		printk("sbus_free_consistent: region 0x%lx asked 0x%zx\n",
 		    (long)((res->end-res->start)+1), n);

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#1094: FILE: arch/sparc/kernel/ioport.c:358:
+static void sbus_unmap_page(struct device *dev, dma_addr_t ba, size_t n,
                                                            ^^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1121: FILE: arch/sparc/kernel/ioport.c:385:
+	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1128: FILE: arch/sparc/kernel/ioport.c:391:
+	BUG();

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#1131: FILE: arch/sparc/kernel/ioport.c:394:
+struct dma_map_ops sbus_dma_ops = {

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#1142: FILE: arch/sparc/kernel/ioport.c:405:
+struct dma_map_ops *dma_ops = &sbus_dma_ops;

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#1172: FILE: arch/sparc/kernel/ioport.c:479:
+				dma_addr_t ba)
 				           ^^

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#1296: FILE: arch/sparc/kernel/ioport.c:586:
+static void pci32_sync_single_for_cpu(struct device *dev, dma_addr_t ba,
                                                                      ^^

WARNING:TYPO_SPELLING: 'ba' may be misspelled - perhaps 'by'?
#1309: FILE: arch/sparc/kernel/ioport.c:595:
+static void pci32_sync_single_for_device(struct device *dev, dma_addr_t ba,
                                                                         ^^

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#1365: FILE: arch/sparc/kernel/ioport.c:642:
+struct dma_map_ops pci32_dma_ops = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1406: FILE: arch/sparc/kernel/ioport.c:683:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONST_STRUCT: struct dma_map_ops should normally be const
#1486: FILE: arch/sparc/kernel/pci_sun4v.c:528:
+static struct dma_map_ops sun4v_dma_ops = {

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1497: FILE: arch/sparc/kernel/pci_sun4v.c:537:
 static void __devinit pci_sun4v_scan_bus(struct pci_pbm_info *pbm,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1579: FILE: arch/x86/kernel/pci-nommu.c:83:
+static void nommu_sync_single_for_device(struct device *dev,
+			dma_addr_t addr, size_t size,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1585: FILE: arch/x86/kernel/pci-nommu.c:89:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1587: FILE: arch/x86/kernel/pci-nommu.c:91:
+static void nommu_sync_sg_for_device(struct device *dev,
+			struct scatterlist *sg, int nelems,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000079179.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 24 warnings, 6 checks, 1665 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000079179.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
