WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#99: FILE: Makefile:4:
+EXTRAVERSION = .5
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#354: FILE: arch/um/kernel/vmlinux.lds.S:1:
+

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SELF_ASSIGNMENT: Do not use self-assignments to avoid compiler warnings
#373: FILE: arch/x86/include/asm/paravirt.h:534:
+		__edx = __edx, __ecx = __ecx, __eax = __eax

WARNING:LINE_SPACING: Missing a blank line after declarations
#520: FILE: drivers/char/tty_buffer.c:414:
+		struct tty_buffer *head;
+		while ((head = tty->buf.head) != NULL) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!__cbq->data.skb"
#636: FILE: drivers/connector/connector.c:143:
+					__cbq->data.skb == NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:CAMELCASE: Avoid CamelCase: <pTxD>
#1190: FILE: drivers/staging/rt2860/common/cmm_data_2860.c:366:
+	if (!pTxD)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1305: FILE: drivers/usb/serial/ftdi_sio.c:1684:
+	usb_fill_bulk_urb(urb, serial->dev,
+			   usb_rcvbulkpipe(serial->dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1306: FILE: drivers/usb/serial/ftdi_sio.c:1685:
+			   usb_rcvbulkpipe(serial->dev,
+					port->bulk_in_endpointAddress),

CHECK:CAMELCASE: Avoid CamelCase: <bulk_in_endpointAddress>
#1306: FILE: drivers/usb/serial/ftdi_sio.c:1685:
+					port->bulk_in_endpointAddress),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1381: FILE: drivers/usb/serial/ftdi_sio.c:2007:
+static int ftdi_process_packet(struct tty_struct *tty,
+		struct usb_serial_port *port, struct ftdi_private *priv,

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1423: FILE: drivers/usb/serial/ftdi_sio.c:2023:
+	/* Compare new line status to the old one, signal if different/
+	   N.B. packet may be processed more than once, but differences

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1424: FILE: drivers/usb/serial/ftdi_sio.c:2024:
+	   are only processed once.  */

WARNING:TYPO_SPELLING: 'OVERRRUN' may be misspelled - perhaps 'OVERRUN'?
#1448: FILE: drivers/usb/serial/ftdi_sio.c:2040:
+		dbg("OVERRRUN error");
 		     ^^^^^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1481: FILE: drivers/usb/serial/ftdi_sio.c:2061:
+	if (!(port->console && port->sysrq) && flag == TTY_NORMAL)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#1483: FILE: drivers/usb/serial/ftdi_sio.c:2063:
+	else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1715: FILE: drivers/usb/serial/ftdi_sio.c:2105:
+		dbg("%s - nonzero read bulk status received: %d",
+						__func__, urb->status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1723: FILE: drivers/usb/serial/ftdi_sio.c:2110:
+	usb_serial_debug_data(debug, &port->dev, __func__,
+				urb->actual_length, urb->transfer_buffer);

CHECK:BRACES: Unbalanced braces around else statement
#1731: FILE: drivers/usb/serial/ftdi_sio.c:2118:
+	} else

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1772: FILE: drivers/usb/serial/ftdi_sio.c:2471:
+	port->throttled = port->throttle_req = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1810: FILE: drivers/usb/serial/ipaq.c:980:
+	if (serial->num_bulk_in < serial->num_ports ||
+			serial->num_bulk_out < serial->num_ports)

CHECK:BRACES: braces {} should be used on all arms of this statement
#1846: FILE: drivers/usb/serial/pl2303.c:999:
+	if (tty_flag == TTY_NORMAL && !(port->console && port->sysrq))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1848: FILE: drivers/usb/serial/pl2303.c:1001:
+	else {

CHECK:CAMELCASE: Avoid CamelCase: <Retry_Sense>
#1898: FILE: drivers/usb/storage/transport.c:699:
+Retry_Sense:

ERROR:SPACING: space prohibited after that open parenthesis '('
#1937: FILE: drivers/usb/storage/transport.c:790:
+		if (	/* Filemark 0, ignore EOM, ILI 0, no sense */

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1944: FILE: drivers/usb/storage/transport.c:795:
 				srb->sense_buffer[13] == 0) {
+

WARNING:SPACING: Unnecessary space before function pointer arguments
#2076: FILE: include/linux/connector.h:136:
+	void (*callback) (struct cn_msg *, struct netlink_skb_parms *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cn_msg *' should also have an identifier name
#2076: FILE: include/linux/connector.h:136:
+	void (*callback) (struct cn_msg *, struct netlink_skb_parms *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct netlink_skb_parms *' should also have an identifier name
#2076: FILE: include/linux/connector.h:136:
+	void (*callback) (struct cn_msg *, struct netlink_skb_parms *);

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#2085: FILE: include/linux/connector.h:167:
+int cn_add_callback(struct cb_id *, char *, void (*callback) (struct cn_msg *, struct netlink_skb_parms *));

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cb_id *' should also have an identifier name
#2085: FILE: include/linux/connector.h:167:
+int cn_add_callback(struct cb_id *, char *, void (*callback) (struct cn_msg *, struct netlink_skb_parms *));

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#2085: FILE: include/linux/connector.h:167:
+int cn_add_callback(struct cb_id *, char *, void (*callback) (struct cn_msg *, struct netlink_skb_parms *));

WARNING:LONG_LINE: line length of 145 exceeds 100 columns
#2090: FILE: include/linux/connector.h:171:
+int cn_queue_add_callback(struct cn_queue_dev *dev, char *name, struct cb_id *id, void (*callback)(struct cn_msg *, struct netlink_skb_parms *));

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2536: FILE: net/mac80211/rx.c:2163:
+	} else list_for_each_entry_rcu(sdata, &local->interfaces, list) {

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000056604.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 15 warnings, 17 checks, 2165 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000056604.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
