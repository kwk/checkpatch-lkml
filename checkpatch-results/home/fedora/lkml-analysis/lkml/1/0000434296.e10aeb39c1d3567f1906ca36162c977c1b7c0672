CHECK:LINE_SPACING: Please don't use multiple blank lines
#154: FILE: include/linux/capability.h:43:
   
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#157: FILE: include/linux/capability.h:46:
+#define XATTR_NAME_CAPS XATTR_SECURITY_PREFIX XATTR_CAPS_SUFFIX

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#196: FILE: include/linux/security.h:56:
+extern int cap_task_kill(struct task_struct *p, struct siginfo *info, int sig, u32 secid);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#197: FILE: include/linux/security.h:57:
+extern int cap_task_setscheduler (struct task_struct *p, int policy, struct sched_param *lp);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#197: FILE: include/linux/security.h:57:
+extern int cap_task_setscheduler (struct task_struct *p, int policy, struct sched_param *lp);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#198: FILE: include/linux/security.h:58:
+extern int cap_task_setioprio (struct task_struct *p, int ioprio);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#198: FILE: include/linux/security.h:58:
+extern int cap_task_setioprio (struct task_struct *p, int ioprio);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#199: FILE: include/linux/security.h:59:
+extern int cap_task_setnice (struct task_struct *p, int nice);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#199: FILE: include/linux/security.h:59:
+extern int cap_task_setnice (struct task_struct *p, int nice);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#287: FILE: security/commoncap.c:115:
+static inline void cap_from_disk(struct vfs_cap_data_disk *dcap,
+					struct vfs_cap_data *cap)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#302: FILE: security/commoncap.c:130:
+	for (i = CAP_NUMCAPS; i < 8*sizeof(cap->effective); i++) {
 	                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#306: FILE: security/commoncap.c:134:
+	for (i = CAP_NUMCAPS; i < 8*sizeof(cap->permitted); i++) {
 	                           ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#310: FILE: security/commoncap.c:138:
+	for (i = CAP_NUMCAPS; i < 8*sizeof(cap->inheritable); i++) {
 	                           ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#346: FILE: security/commoncap.c:174:
+		printk(KERN_NOTICE "%s: Error (%zd) getting xattr\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#347: FILE: security/commoncap.c:175:
+		printk(KERN_NOTICE "%s: Error (%zd) getting xattr\n",
+				__FUNCTION__, rc);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#347: FILE: security/commoncap.c:175:
+				__FUNCTION__, rc);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#352: FILE: security/commoncap.c:180:
+		printk(KERN_NOTICE "%s: got wrong size for getxattr (%zd)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#353: FILE: security/commoncap.c:181:
+		printk(KERN_NOTICE "%s: got wrong size for getxattr (%zd)\n",
+					__FUNCTION__, rc);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#353: FILE: security/commoncap.c:181:
+					__FUNCTION__, rc);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#432: FILE: security/commoncap.c:408:
+ *   ^Ithen those actions should be allowed$

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#445: FILE: security/commoncap.c:421:
+int cap_task_setscheduler (struct task_struct *p, int policy,

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#451: FILE: security/commoncap.c:427:
+int cap_task_setioprio (struct task_struct *p, int ioprio)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#456: FILE: security/commoncap.c:432:
+int cap_task_setnice (struct task_struct *p, int nice)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#462: FILE: security/commoncap.c:438:
+int cap_task_kill(struct task_struct *p, struct siginfo *info,
+				int sig, u32 secid)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#483: FILE: security/commoncap.c:459:
+int cap_task_setscheduler (struct task_struct *p, int policy,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#488: FILE: security/commoncap.c:464:
+}
+int cap_task_setioprio (struct task_struct *p, int ioprio)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#488: FILE: security/commoncap.c:464:
+int cap_task_setioprio (struct task_struct *p, int ioprio)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#492: FILE: security/commoncap.c:468:
+}
+int cap_task_setnice (struct task_struct *p, int nice)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#492: FILE: security/commoncap.c:468:
+int cap_task_setnice (struct task_struct *p, int nice)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#496: FILE: security/commoncap.c:472:
+}
+int cap_task_kill(struct task_struct *p, struct siginfo *info,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#497: FILE: security/commoncap.c:473:
+int cap_task_kill(struct task_struct *p, struct siginfo *info,
+				int sig, u32 secid)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#511: FILE: security/commoncap.c:517:
+EXPORT_SYMBOL(cap_task_setscheduler);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#512: FILE: security/commoncap.c:518:
+EXPORT_SYMBOL(cap_task_setioprio);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#513: FILE: security/commoncap.c:519:
+EXPORT_SYMBOL(cap_task_setnice);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000434296.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 17 warnings, 16 checks, 365 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000434296.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
