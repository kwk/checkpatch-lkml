WARNING:SPACING: space prohibited between function name and open parenthesis '('
#144: FILE: arch/mips/kernel/smp.c:57:
+static void smp_tune_scheduling (void)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#146: FILE: arch/mips/kernel/smp.c:59:
+ ^Istruct cache_desc *cd = &current_cpu_data.scache;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#146: FILE: arch/mips/kernel/smp.c:59:
+ ^Istruct cache_desc *cd = &current_cpu_data.scache;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: arch/mips/kernel/smp.c:59:
+ ^Istruct cache_desc *cd = &current_cpu_data.scache;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: arch/mips/kernel/smp.c:60:
+ ^Iunsigned long cachesize = cd->linesz * cd->sets * cd->ways;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#147: FILE: arch/mips/kernel/smp.c:60:
+ ^Iunsigned long cachesize = cd->linesz * cd->sets * cd->ways;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: arch/mips/kernel/smp.c:60:
+ ^Iunsigned long cachesize = cd->linesz * cd->sets * cd->ways;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#148: FILE: arch/mips/kernel/smp.c:61:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: arch/mips/kernel/smp.c:62:
+ ^Iif (cachesize > max_cache_size)$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#149: FILE: arch/mips/kernel/smp.c:62:
+ ^Iif (cachesize > max_cache_size)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: arch/mips/kernel/smp.c:62:
+ ^Iif (cachesize > max_cache_size)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: arch/mips/kernel/smp.c:63:
+ ^I^Imax_cache_size = cachesize;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#150: FILE: arch/mips/kernel/smp.c:63:
+ ^I^Imax_cache_size = cachesize;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: arch/mips/kernel/smp.c:63:
+ ^I^Imax_cache_size = cachesize;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#152: FILE: arch/mips/kernel/smp.c:65:
+ $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: arch/mips/kernel/smp.c:65:
+ $

ERROR:SPACING: space required after that ',' (ctx:VxV)
#175: FILE: arch/sparc/kernel/smp.c:69:
+		int cache_line,cache_nlines;
 		              ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#176: FILE: arch/sparc/kernel/smp.c:70:
+		int cache_line,cache_nlines;
+		cache_line = 0x20;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#198: FILE: arch/sparc64/kernel/smp.c:1182:
+	for (i = 0; i < NR_CPUS; i++) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#212: FILE: arch/sparc64/kernel/smp.c:1196:
+		printk(KERN_INFO "Using max_cache_size of %uKB\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#215: FILE: arch/sparc64/kernel/smp.c:1199:
+		printk(KERN_INFO "Using max_cache_size of %uMB\n",

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#224: FILE: arch/sparc64/kernel/smp.c:1208:
 void __devinit smp_prepare_boot_cpu(void)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#306: FILE: kernel/sched.c:6867:
+#define MIN_CACHE_SIZE		(64*1024U)
                       		   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#307: FILE: kernel/sched.c:6868:
+#define DEFAULT_CACHE_SIZE	(5*1024*1024U)
                           	  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#307: FILE: kernel/sched.c:6868:
+#define DEFAULT_CACHE_SIZE	(5*1024*1024U)
                           	       ^

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#326: FILE: kernel/sched.c:6887:
+static unsigned long long migration_cost[MAX_DOMAIN_DISTANCE] =
+		{ [ 0 ... MAX_DOMAIN_DISTANCE-1 ] =

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#326: FILE: kernel/sched.c:6887:
+		{ [ 0 ... MAX_DOMAIN_DISTANCE-1 ] =
 		                             ^

ERROR:SPACING: space prohibited after that open square bracket '['
#326: FILE: kernel/sched.c:6887:
+		{ [ 0 ... MAX_DOMAIN_DISTANCE-1 ] =

ERROR:SPACING: space prohibited before that close square bracket ']'
#326: FILE: kernel/sched.c:6887:
+		{ [ 0 ... MAX_DOMAIN_DISTANCE-1 ] =

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#346: FILE: kernel/sched.c:6907:
+	int ints[MAX_DOMAIN_DISTANCE+1], i;
 	                            ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#350: FILE: kernel/sched.c:6911:
+	printk("#ints: %d\n", ints[0]);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#352: FILE: kernel/sched.c:6913:
+		migration_cost[i-1] = (unsigned long long)ints[i]*1000;
 		                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#352: FILE: kernel/sched.c:6913:
+		migration_cost[i-1] = (unsigned long long)ints[i]*1000;
 		                                                 ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#353: FILE: kernel/sched.c:6914:
+		printk("migration_cost[%d]: %Ld\n", i-1, migration_cost[i-1]);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#353: FILE: kernel/sched.c:6914:
+		printk("migration_cost[%d]: %Ld\n", i-1, migration_cost[i-1]);
 		                                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#353: FILE: kernel/sched.c:6914:
+		printk("migration_cost[%d]: %Ld\n", i-1, migration_cost[i-1]);
 		                                                         ^

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#353: FILE: kernel/sched.c:6914:
+		printk("migration_cost[%d]: %Ld\n", i-1, migration_cost[i-1]);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#358: FILE: kernel/sched.c:6919:
+__setup ("migration_cost=", migration_cost_setup);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#379: FILE: kernel/sched.c:6940:
+__setup("migration_factor=", setup_migration_factor);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#398: FILE: kernel/sched.c:6959:
+		distance = MAX_DOMAIN_DISTANCE-1;
 		                              ^

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#412: FILE: kernel/sched.c:6973:
+__setup("migration_debug=", setup_migration_debug);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#428: FILE: kernel/sched.c:6989:
+__setup("max_cache_size=", setup_max_cache_size);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#443: FILE: kernel/sched.c:7004:
+	for (i = 0; i < size/6; i += 8) {
 	                    ^

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#444: FILE: kernel/sched.c:7005:
+		switch (i % 6) {
+			case 0: cache[i]++;
+			case 1: cache[size-1-i]++;
+			case 2: cache[chunk1-i]++;
+			case 3: cache[chunk1+i]++;
+			case 4: cache[chunk2-i]++;
+			case 5: cache[chunk2+i]++;

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#445: FILE: kernel/sched.c:7006:
+			case 0: cache[i]++;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#446: FILE: kernel/sched.c:7007:
+			case 1: cache[size-1-i]++;
 			                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#446: FILE: kernel/sched.c:7007:
+			case 1: cache[size-1-i]++;
 			                    ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#446: FILE: kernel/sched.c:7007:
+			case 1: cache[size-1-i]++;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#447: FILE: kernel/sched.c:7008:
+			case 2: cache[chunk1-i]++;
 			                    ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#447: FILE: kernel/sched.c:7008:
+			case 2: cache[chunk1-i]++;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#448: FILE: kernel/sched.c:7009:
+			case 3: cache[chunk1+i]++;
 			                    ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#448: FILE: kernel/sched.c:7009:
+			case 3: cache[chunk1+i]++;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#449: FILE: kernel/sched.c:7010:
+			case 4: cache[chunk2-i]++;
 			                    ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#449: FILE: kernel/sched.c:7010:
+			case 4: cache[chunk2-i]++;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#450: FILE: kernel/sched.c:7011:
+			case 5: cache[chunk2+i]++;
 			                    ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#450: FILE: kernel/sched.c:7011:
+			case 5: cache[chunk2+i]++;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#498: FILE: kernel/sched.c:7059:
+	cost = t1-t0 + t3-t2;
 	         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#498: FILE: kernel/sched.c:7059:
+	cost = t1-t0 + t3-t2;
 	                 ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#501: FILE: kernel/sched.c:7062:
+		printk("[%d->%d]: %8Ld %8Ld %8Ld => %10Ld.\n",

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#501: FILE: kernel/sched.c:7062:
+		printk("[%d->%d]: %8Ld %8Ld %8Ld => %10Ld.\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#502: FILE: kernel/sched.c:7063:
+		printk("[%d->%d]: %8Ld %8Ld %8Ld => %10Ld.\n",
+			source, target, t1-t0, t1-t0, t3-t2, cost);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#502: FILE: kernel/sched.c:7063:
+			source, target, t1-t0, t1-t0, t3-t2, cost);
 			                  ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#502: FILE: kernel/sched.c:7063:
+			source, target, t1-t0, t1-t0, t3-t2, cost);
 			                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#502: FILE: kernel/sched.c:7063:
+			source, target, t1-t0, t1-t0, t3-t2, cost);
 			                                ^

WARNING:TYPO_SPELLING: 'inbetween' may be misspelled - perhaps 'between'?
#586: FILE: kernel/sched.c:7147:
+	 * cachesize has to lie somewhere inbetween.
 	                                  ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#601: FILE: kernel/sched.c:7162:
+		printk("cpu %d and %d not both online!\n", cpu1, cpu2);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#610: FILE: kernel/sched.c:7171:
+		printk("could not vmalloc %d bytes for cache!\n", 2 * max_size);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#610: FILE: kernel/sched.c:7171:
+	if (!cache) {
+		printk("could not vmalloc %d bytes for cache!\n", 2 * max_size);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#632: FILE: kernel/sched.c:7193:
+		avg_fluct = (avg_fluct + fluct)/2;
 		                               ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#635: FILE: kernel/sched.c:7196:
+			printk("-> [%d][%d][%7d] %3ld.%ld [%3ld.%ld] (%ld): "

WARNING:SPLIT_STRING: quoted string split across lines
#636: FILE: kernel/sched.c:7197:
+			printk("-> [%d][%d][%7d] %3ld.%ld [%3ld.%ld] (%ld): "
+				"(%8Ld %8Ld)\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#636: FILE: kernel/sched.c:7197:
+				"(%8Ld %8Ld)\n",

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#651: FILE: kernel/sched.c:7212:
+		if (size_found && (size*100 > size_found*SIZE_THRESH))
 		                       ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#651: FILE: kernel/sched.c:7212:
+		if (size_found && (size*100 > size_found*SIZE_THRESH))
 		                                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#652: FILE: kernel/sched.c:7213:
+			if (cost+avg_fluct <= 0 ||
 			        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#653: FILE: kernel/sched.c:7214:
+			if (cost+avg_fluct <= 0 ||
+				max_cost*100 > (cost+avg_fluct)*COST_THRESH) {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#653: FILE: kernel/sched.c:7214:
+				max_cost*100 > (cost+avg_fluct)*COST_THRESH) {
 				        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#653: FILE: kernel/sched.c:7214:
+				max_cost*100 > (cost+avg_fluct)*COST_THRESH) {
 				                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#653: FILE: kernel/sched.c:7214:
+				max_cost*100 > (cost+avg_fluct)*COST_THRESH) {
 				                               ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#654: FILE: kernel/sched.c:7215:
+				max_cost*100 > (cost+avg_fluct)*COST_THRESH) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#656: FILE: kernel/sched.c:7217:
+					printk("-> found max.\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#666: FILE: kernel/sched.c:7227:
+		printk("[%d][%d] working set size found: %d, cost: %Ld\n",

WARNING:PRINTF_L: %Ld is non-standard C, use %lld
#666: FILE: kernel/sched.c:7227:
+		printk("[%d][%d] working set size found: %d, cost: %Ld\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#667: FILE: kernel/sched.c:7228:
+		printk("[%d][%d] working set size found: %d, cost: %Ld\n",
+			cpu1, cpu2, size_found, max_cost);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#723: FILE: kernel/sched.c:7284:
+		printk("migration: max_cache_size: %d, cpu: %d MHz:\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#724: FILE: kernel/sched.c:7285:
+		printk("migration: max_cache_size: %d, cpu: %d MHz:\n",
+			max_cache_size,

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#726: FILE: kernel/sched.c:7287:
+			cpu_khz/1000
 			       ^

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#732: FILE: kernel/sched.c:7293:
+		printk("migration_cost=");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#735: FILE: kernel/sched.c:7296:
+				printk(",");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#736: FILE: kernel/sched.c:7297:
+			printk("%ld", (long)migration_cost[distance] / 1000);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#738: FILE: kernel/sched.c:7299:
+		printk("\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#742: FILE: kernel/sched.c:7303:
+		printk("migration: %ld seconds\n", (j1-j0) / HZ);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#742: FILE: kernel/sched.c:7303:
+		printk("migration: %ld seconds\n", (j1-j0) / HZ);
 		                                      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#764: FILE: kernel/sched.c:8008:
+^I$

ERROR:CODE_INDENT: code indent should use tabs where possible
#765: FILE: kernel/sched.c:8009:
+ ^I/*$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#765: FILE: kernel/sched.c:8009:
+ ^I/*$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#765: FILE: kernel/sched.c:8009:
+ ^I/*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#766: FILE: kernel/sched.c:8010:
+ ^I * Tune cache-hot values:$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#766: FILE: kernel/sched.c:8010:
+ ^I * Tune cache-hot values:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#767: FILE: kernel/sched.c:8011:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#767: FILE: kernel/sched.c:8011:
+ ^I */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#768: FILE: kernel/sched.c:8012:
+ ^Icalibrate_migration_costs(cpu_map);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#768: FILE: kernel/sched.c:8012:
+ ^Icalibrate_migration_costs(cpu_map);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#768: FILE: kernel/sched.c:8012:
+ ^Icalibrate_migration_costs(cpu_map);$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000231664.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 22 errors, 43 warnings, 39 checks, 678 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000231664.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
