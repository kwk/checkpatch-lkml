WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#43: 
x86 optimization of the immediate values which uses a movl with code patching

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#92: FILE: include/asm-x86/immediate.h:25:
+} __attribute__ ((packed));

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#146: FILE: include/asm-x86/immediate.h:89:
+^I^I^I^I"mov $0xFEFEFEFE01010101,%0\n\t" ^I\$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#162: FILE: include/asm-x86/immediate.h:107:
+extern int arch_imv_update(const struct __imv *imv, int early);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#229: FILE: arch/x86/kernel/immediate.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#307: FILE: arch/x86/kernel/immediate.c:79:
+#include <asm/cacheflush.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#317: FILE: arch/x86/kernel/immediate.c:89:
+static unsigned long after_imv;	/*
+					 * EIP where to resume after the

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#332: FILE: arch/x86/kernel/immediate.c:104:
+static inline void _imv_bypass(unsigned long *bypassaddr,
+	unsigned long *breaknextaddr)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#359: FILE: arch/x86/kernel/immediate.c:131:
+static int imv_notifier(struct notifier_block *nb,
+	unsigned long val, void *data)

CHECK:SPACING: No space is necessary after a cast
#361: FILE: arch/x86/kernel/immediate.c:133:
+	enum die_val die_val = (enum die_val) val;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#408: FILE: arch/x86/kernel/immediate.c:180:
+		printk(KERN_WARNING "Immediate value in conflict with kprobe. "

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hu' is unnecessary
#408: FILE: arch/x86/kernel/immediate.c:180:
+		printk(KERN_WARNING "Immediate value in conflict with kprobe. "
+				    "Variable at %p, "
+				    "instruction at %p, size %hu\n",
+				    (void *)imv->imv,
+				    (void *)imv->var, imv->size);

WARNING:SPLIT_STRING: quoted string split across lines
#409: FILE: arch/x86/kernel/immediate.c:181:
+		printk(KERN_WARNING "Immediate value in conflict with kprobe. "
+				    "Variable at %p, "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#410: FILE: arch/x86/kernel/immediate.c:182:
+				    "Variable at %p, "
+				    "instruction at %p, size %hu\n",

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#422: FILE: arch/x86/kernel/immediate.c:194:
+	case 1:	if (*(uint8_t *)imv->imv
[...]
+			return 0;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#422: FILE: arch/x86/kernel/immediate.c:194:
+	case 1:	if (*(uint8_t *)imv->imv

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#426: FILE: arch/x86/kernel/immediate.c:198:
+	case 2:	if (*(uint16_t *)imv->imv
[...]
+			return 0;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#426: FILE: arch/x86/kernel/immediate.c:198:
+	case 2:	if (*(uint16_t *)imv->imv

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#430: FILE: arch/x86/kernel/immediate.c:202:
+	case 4:	if (*(uint32_t *)imv->imv
[...]
+			return 0;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#430: FILE: arch/x86/kernel/immediate.c:202:
+	case 4:	if (*(uint32_t *)imv->imv

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#435: FILE: arch/x86/kernel/immediate.c:207:
+	case 8:	if (*(uint64_t *)imv->imv
[...]
+			return 0;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#435: FILE: arch/x86/kernel/immediate.c:207:
+	case 8:	if (*(uint64_t *)imv->imv

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#472: FILE: arch/x86/kernel/immediate.c:244:
+		text_poke((void *)insn,
+			INIT_ARRAY(unsigned char, BREAKPOINT_INSTRUCTION, 1), 1);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#482: FILE: arch/x86/kernel/immediate.c:254:
+		BUG_ON(ret != 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#485: FILE: arch/x86/kernel/immediate.c:257:
+		text_poke((void *)(insn + opcode_size), (void *)imv->var,
+				imv->size);

WARNING:DEPRECATED_API: Deprecated use of 'synchronize_sched', prefer 'synchronize_rcu' instead
#498: FILE: arch/x86/kernel/immediate.c:270:
+		synchronize_sched();

Usage of a deprecated RCU API is detected.  It is recommended to replace
old flavourful RCU APIs by their new vanilla-RCU counterparts.

The full list of available RCU APIs can be viewed from the kernel docs.

See: https://www.kernel.org/doc/html/latest/RCU/whatisRCU.html#full-list-of-rcu-apis

CHECK:BRACES: Unbalanced braces around else statement
#501: FILE: arch/x86/kernel/immediate.c:273:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#503: FILE: arch/x86/kernel/immediate.c:275:
+		text_poke_early((void *)imv->imv, (void *)imv->var,
+			imv->size);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000350237.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 15 warnings, 9 checks, 400 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000350237.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
