CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#85: FILE: include/linux/sysrq.h:58:
+void __handle_sysrq(struct sysrq_key_op **op_table, int key,
+			struct tty_struct *tty, int check_mask);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#100: FILE: include/linux/sysrq.h:79:
 }
+static inline void handle_sysrq_extend(int key, struct tty_struct *tty)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#121: FILE: drivers/char/keyboard.c:1193:
+		if (sysrq_extend) {
[...]
+		else if (kbd_sysrq_xlate[keycode] == SYSRQ_EXTEND_KEY)
[...]
+		else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#125: FILE: drivers/char/keyboard.c:1197:
+		}
+		else if (kbd_sysrq_xlate[keycode] == SYSRQ_EXTEND_KEY)

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#149: FILE: drivers/char/sysrq.c:366:
+	printk(KERN_DEBUG "kernel wants to sleep\n");

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#151: FILE: drivers/char/sysrq.c:368:
+}
+static struct sysrq_key_op sysrq2_sleep_op = {

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: drivers/char/sysrq.c:438:
+^I        op_p = op_table[i];$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#219: FILE: drivers/char/sysrq.c:443:
+static void __sysrq_put_key_op(struct sysrq_key_op **op_table, int key,
+				struct sysrq_key_op *op_p)

ERROR:CODE_INDENT: code indent should use tabs where possible
#225: FILE: drivers/char/sysrq.c:448:
+                op_table[i] = op_p;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: drivers/char/sysrq.c:448:
+                op_table[i] = op_p;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#234: FILE: drivers/char/sysrq.c:456:
+void __handle_sysrq(struct sysrq_key_op **op_table, int key,
+			struct tty_struct *tty, int check_mask)

ERROR:CODE_INDENT: code indent should use tabs where possible
#243: FILE: drivers/char/sysrq.c:468:
+        op_p = __sysrq_get_key_op(op_table, key);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: drivers/char/sysrq.c:468:
+        op_p = __sysrq_get_key_op(op_table, key);$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#262: FILE: drivers/char/sysrq.c:499:
+		printk("SysRq-%c HELP : ", SYSRQ_EXTEND_KEY);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#272: FILE: drivers/char/sysrq.c:509:
+				printk("%s ", sysrq_key_table2[i]->help_msg);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#275: FILE: drivers/char/sysrq.c:512:
+		printk("\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#351: FILE: fs/proc/proc_misc.c:672:
+		if (c == SYSRQ_EXTEND_KEY) {
[...]
+		else
[...]

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#356: FILE: fs/proc/proc_misc.c:677:
+		}
+		else

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000300135.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 6 warnings, 7 checks, 326 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000300135.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
