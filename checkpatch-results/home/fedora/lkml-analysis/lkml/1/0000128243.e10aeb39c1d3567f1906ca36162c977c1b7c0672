CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#73: FILE: arch/x86/xen/mmu.c:2093:
+static unsigned long discontig_frames[1<<MAX_CONTIG_ORDER];
                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#77: FILE: arch/x86/xen/mmu.c:2097:
+static void xen_zap_pfn_range(unsigned long vaddr, unsigned int order,
+				unsigned long *in_frames,

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#84: FILE: arch/x86/xen/mmu.c:2104:
+	for (i = 0; i < (1UL<<order); i++, vaddr += PAGE_SIZE) {
 	                    ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#108: FILE: arch/x86/xen/mmu.c:2128:
+	unsigned i, limit;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#116: FILE: arch/x86/xen/mmu.c:2136:
+		unsigned flags;

CHECK:BRACES: braces {} should be used on all arms of this statement
#124: FILE: arch/x86/xen/mmu.c:2144:
+		if (i < (limit - 1))
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#126: FILE: arch/x86/xen/mmu.c:2146:
+		else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#134: FILE: arch/x86/xen/mmu.c:2154:
+		MULTI_update_va_mapping(mcs.mc, vaddr,
+				mfn_pte(mfn, PAGE_KERNEL), flags);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#175: FILE: arch/x86/xen/mmu.c:2195:
+	BUG_ON(extents_in << order_in != extents_out << order_out);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#180: FILE: arch/x86/xen/mmu.c:2200:
+	BUG_ON(!success && ((exchange.nr_exchanged != 0) || (rc == 0)));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#181: FILE: arch/x86/xen/mmu.c:2201:
+	BUG_ON(success && (rc != 0));

CHECK:SPACING: No space is necessary after a cast
#205: FILE: arch/x86/xen/mmu.c:2225:
+	memset((void *) vstart, 0, PAGE_SIZE << order);

CHECK:SPACING: No space is necessary after a cast
#244: FILE: arch/x86/xen/mmu.c:2264:
+	memset((void *) vstart, 0, PAGE_SIZE << order);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#258: FILE: arch/x86/xen/mmu.c:2278:
+	success = xen_exchange_memory(1, order, &in_frame, 1UL << order,
+					0, out_frames, 0);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: include/xen/interface/memory.h:70:
+    struct xen_memory_reservation in;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: include/xen/interface/memory.h:82:
+    struct xen_memory_reservation out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#318: FILE: include/xen/interface/memory.h:95:
+    unsigned long nr_exchanged;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#336: FILE: include/xen/xen-ops.h:19:
+int xen_create_contiguous_region(unsigned long vstart, unsigned int order,
+				unsigned int address_bits);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000128243.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 10 checks, 270 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000128243.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
