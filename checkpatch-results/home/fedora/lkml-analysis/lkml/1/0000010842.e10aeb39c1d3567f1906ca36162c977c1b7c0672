CHECK:MACRO_ARG_REUSE: Macro argument reuse 'oldstart' - possible side-effects?
#54: FILE: arch/x86/include/asm/alternative.h:76:
+#define ALTERNATIVE_PATCH(oldstart, oldend, newinstr, feature)			\
       ".section .altinstructions,\"a\"\n"				\
       _ASM_ALIGN "\n"							\
+      _ASM_PTR oldstart "\n"				/* label	   */	\
       _ASM_PTR "663f\n"				/* new instruction */	\
       "	 .byte " __stringify(feature) "\n"	/* feature bit     */	\
+      "	 .byte (" oldend ")-(" oldstart ")\n"			/* sourcelen       */	\
       "	 .byte 664f-663f\n"			/* replacementlen  */	\
+      "	 .byte 0xff + (664f-663f) - ((" oldend ")-(" oldstart "))\n" /* rlen <= slen */	\
       ".previous\n"							\
       ".section .altinstr_replacement, \"ax\"\n"			\
       "663:\n\t" newinstr "\n664:\n"		/* replacement     */	\
       ".previous"

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'oldend' - possible side-effects?
#54: FILE: arch/x86/include/asm/alternative.h:76:
+#define ALTERNATIVE_PATCH(oldstart, oldend, newinstr, feature)			\
       ".section .altinstructions,\"a\"\n"				\
       _ASM_ALIGN "\n"							\
+      _ASM_PTR oldstart "\n"				/* label	   */	\
       _ASM_PTR "663f\n"				/* new instruction */	\
       "	 .byte " __stringify(feature) "\n"	/* feature bit     */	\
+      "	 .byte (" oldend ")-(" oldstart ")\n"			/* sourcelen       */	\
       "	 .byte 664f-663f\n"			/* replacementlen  */	\
+      "	 .byte 0xff + (664f-663f) - ((" oldend ")-(" oldstart "))\n" /* rlen <= slen */	\
       ".previous\n"							\
       ".section .altinstr_replacement, \"ax\"\n"			\
       "663:\n\t" newinstr "\n664:\n"		/* replacement     */	\
       ".previous"

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#58: FILE: arch/x86/include/asm/alternative.h:79:
+      _ASM_PTR oldstart "\n"^I^I^I^I/* label^I   */^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#62: FILE: arch/x86/include/asm/alternative.h:82:
+      "^I .byte (" oldend ")-(" oldstart ")\n"^I^I^I/* sourcelen       */^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#65: FILE: arch/x86/include/asm/alternative.h:84:
+      "^I .byte 0xff + (664f-663f) - ((" oldend ")-(" oldstart "))\n" /* rlen <= slen */^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#73: FILE: arch/x86/include/asm/alternative.h:92:
+      "661:\n\t" oldinstr "\n662:\n"^I^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#74: FILE: arch/x86/include/asm/alternative.h:93:
+      ALTERNATIVE_PATCH("661b", "662b", newinstr, feature)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#77: FILE: arch/x86/include/asm/alternative.h:96:
+      "661:\n\t" oldinstr "\n662:\n"^I^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#78: FILE: arch/x86/include/asm/alternative.h:97:
+      ALTERNATIVE_PATCH("661b", "662b", newinstr1, feature1) "\n" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: arch/x86/include/asm/alternative.h:98:
+      ALTERNATIVE_PATCH("661b", "662b", newinstr2, feature2)$

WARNING:LONG_LINE: line length of 113 exceeds 100 columns
#81: FILE: arch/x86/include/asm/alternative.h:100:
+#define ALTERNATIVE4(oldinstr, newinstr1, feature1, newinstr2, feature2, newinstr3, feature3)			\

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: arch/x86/include/asm/alternative.h:101:
+      "661:\n\t" oldinstr "\n662:\n"^I^I^I^I^I\$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: arch/x86/include/asm/alternative.h:102:
+      ALTERNATIVE_PATCH("661b", "662b", newinstr1, feature1) "\n" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: arch/x86/include/asm/alternative.h:103:
+      ALTERNATIVE_PATCH("661b", "662b", newinstr2, feature2) "\n" \$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: arch/x86/include/asm/alternative.h:104:
+      ALTERNATIVE_PATCH("661b", "662b", newinstr3, feature3)$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000010842.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 13 warnings, 2 checks, 43 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000010842.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
