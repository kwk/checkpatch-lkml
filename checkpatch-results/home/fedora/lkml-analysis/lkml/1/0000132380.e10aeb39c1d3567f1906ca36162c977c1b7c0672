CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#61: FILE: drivers/edac/amd64_edac.c:2502:
+	err = pci_read_config_dword(pvt->dram_f2_ctl,
+				F10_DCTL_SEL_LOW,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#67: FILE: drivers/edac/amd64_edac.c:2508:
+		debugf0("%s() DRAM_DCTL_SEL_LOW=0x%x  DctSelBaseAddr=0x%x\n",
+				__func__,

WARNING:SPLIT_STRING: quoted string split across lines
#72: FILE: drivers/edac/amd64_edac.c:2513:
+		debugf0("  DRAM DCTs are=%s DRAM Is=%s DRAM-Ctl-"
+				"sel-hi-range=%s\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#81: FILE: drivers/edac/amd64_edac.c:2522:
+		debugf0("  DctDatIntLv=%s  MemCleared=%s "
+				"DctSelIntLvAddr=0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#89: FILE: drivers/edac/amd64_edac.c:2530:
+	err = pci_read_config_dword(pvt->dram_f2_ctl,
+				F10_DCTL_SEL_HIGH,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#95: FILE: drivers/edac/amd64_edac.c:2536:
+	debugf0("%s() DRAM_CTL_SELECT_HIGH=0x%x\n", __func__,
+			pvt->dram_ctl_select_high);

CHECK:CAMELCASE: Avoid CamelCase: <SystemAddr>
#98: FILE: drivers/edac/amd64_edac.c:2539:
+static u32 f10_determine_channel(struct amd64_pvt *pvt, u64 SystemAddr,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#99: FILE: drivers/edac/amd64_edac.c:2540:
+static u32 f10_determine_channel(struct amd64_pvt *pvt, u64 SystemAddr,
+				int HiRangeSelected, u32 IntlvEn)

CHECK:CAMELCASE: Avoid CamelCase: <HiRangeSelected>
#99: FILE: drivers/edac/amd64_edac.c:2540:
+				int HiRangeSelected, u32 IntlvEn)

CHECK:CAMELCASE: Avoid CamelCase: <IntlvEn>
#99: FILE: drivers/edac/amd64_edac.c:2540:
+				int HiRangeSelected, u32 IntlvEn)

CHECK:CAMELCASE: Avoid CamelCase: <ChannelSelect>
#101: FILE: drivers/edac/amd64_edac.c:2542:
+	u32 ChannelSelect;

CHECK:CAMELCASE: Avoid CamelCase: <DctSelIntLvAddr>
#103: FILE: drivers/edac/amd64_edac.c:2544:
+	u32 DctSelIntLvAddr, interleave;

CHECK:CAMELCASE: Avoid CamelCase: <DctSelHi>
#104: FILE: drivers/edac/amd64_edac.c:2545:
+	u32 DctSelHi;

CHECK:BRACES: braces {} should be used on all arms of this statement
#110: FILE: drivers/edac/amd64_edac.c:2551:
+	if (dct_ganging_enabled(pvt))
[...]
+	else if (HiRangeSelected)
[...]
+	else if (interleave) {
[...]
+	} else if (dct_high_range_enabled(pvt) && !dct_ganging_enabled(pvt))
[...]
+	else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#115: FILE: drivers/edac/amd64_edac.c:2556:
+		if (DctSelIntLvAddr == 0)
[...]
+		else if ((DctSelIntLvAddr >> 1) & 1) {
[...]
+		} else if (IntlvEn & 4)
[...]
+		else if (IntlvEn & 2)
[...]
+		else if (IntlvEn & 1)
[...]
+		else
[...]

CHECK:SPACING: No space is necessary after a cast
#118: FILE: drivers/edac/amd64_edac.c:2559:
+			temp = popcnt((u32) ((SystemAddr >> 16) & 0x1F)) % 2;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <f10_map_IntlvEn_to_shift>
#140: FILE: drivers/edac/amd64_edac.c:2581:
+static inline u32 f10_map_IntlvEn_to_shift(u32 IntlvEn)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#156: FILE: drivers/edac/amd64_edac.c:2597:
+static inline u64 f10_determine_base_addr_offset(

CHECK:CAMELCASE: Avoid CamelCase: <DctSelBaseAddr>
#159: FILE: drivers/edac/amd64_edac.c:2600:
+						u32 DctSelBaseAddr,

CHECK:CAMELCASE: Avoid CamelCase: <DctSelBaseOffsetLong>
#160: FILE: drivers/edac/amd64_edac.c:2601:
+						u64 DctSelBaseOffsetLong,

CHECK:CAMELCASE: Avoid CamelCase: <HoleEn>
#161: FILE: drivers/edac/amd64_edac.c:2602:
+						u32 HoleEn,

CHECK:CAMELCASE: Avoid CamelCase: <HoleOffset>
#162: FILE: drivers/edac/amd64_edac.c:2603:
+						u32 HoleOffset,

CHECK:CAMELCASE: Avoid CamelCase: <DramBaseLong>
#163: FILE: drivers/edac/amd64_edac.c:2604:
+						u64 DramBaseLong)

CHECK:CAMELCASE: Avoid CamelCase: <ChannelAddrLong>
#165: FILE: drivers/edac/amd64_edac.c:2606:
+	u64 ChannelAddrLong;

CHECK:CAMELCASE: Avoid CamelCase: <ChannelOffsetLong>
#166: FILE: drivers/edac/amd64_edac.c:2607:
+	u64 ChannelOffsetLong;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'SystemAddr >= 0x100000000ULL'
#169: FILE: drivers/edac/amd64_edac.c:2610:
+		if ((!DctSelBaseAddr & 0xFFFF0000) &&
+		   (HoleEn & 1) && (SystemAddr >= 0x100000000ULL))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#170: FILE: drivers/edac/amd64_edac.c:2611:
+		if ((!DctSelBaseAddr & 0xFFFF0000) &&
+		   (HoleEn & 1) && (SystemAddr >= 0x100000000ULL))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'SystemAddr >= 0x100000000ULL'
#175: FILE: drivers/edac/amd64_edac.c:2616:
+		if ((HoleEn & 1) && (SystemAddr >= 0x100000000ULL))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#198: FILE: drivers/edac/amd64_edac.c:2639:
+static inline int f10_process_possible_spare(int csrow,
+				u32 ChannelSelect, struct amd64_pvt *pvt)

CHECK:CAMELCASE: Avoid CamelCase: <SwapDone>
#200: FILE: drivers/edac/amd64_edac.c:2641:
+	u32 SwapDone;

CHECK:CAMELCASE: Avoid CamelCase: <BadDramCs>
#201: FILE: drivers/edac/amd64_edac.c:2642:
+	u32 BadDramCs;

CHECK:CAMELCASE: Avoid CamelCase: <OnLineSpareCTL>
#202: FILE: drivers/edac/amd64_edac.c:2643:
+	u32 OnLineSpareCTL;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'csrow == BadDramCs'
#210: FILE: drivers/edac/amd64_edac.c:2651:
+		if (SwapDone && (csrow == BadDramCs))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'csrow == BadDramCs'
#215: FILE: drivers/edac/amd64_edac.c:2656:
+		if (SwapDone && (csrow == BadDramCs))

CHECK:CAMELCASE: Avoid CamelCase: <InputAddr>
#231: FILE: drivers/edac/amd64_edac.c:2672:
+static int f10_lookup_addr_in_dct(u32 InputAddr, u32 NodeID, u32 ChannelSelect)

CHECK:CAMELCASE: Avoid CamelCase: <NodeID>
#231: FILE: drivers/edac/amd64_edac.c:2672:
+static int f10_lookup_addr_in_dct(u32 InputAddr, u32 NodeID, u32 ChannelSelect)

CHECK:CAMELCASE: Avoid CamelCase: <CSBase>
#235: FILE: drivers/edac/amd64_edac.c:2676:
+	u32 CSBase, CSMask;

CHECK:CAMELCASE: Avoid CamelCase: <CSMask>
#235: FILE: drivers/edac/amd64_edac.c:2676:
+	u32 CSBase, CSMask;

CHECK:CAMELCASE: Avoid CamelCase: <CSFound>
#236: FILE: drivers/edac/amd64_edac.c:2677:
+	int CSFound = -1;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#246: FILE: drivers/edac/amd64_edac.c:2687:
+	debugf1("%s() InputAddr=0x%x  channelselect=%d\n",
+			__func__, InputAddr, ChannelSelect);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#249: FILE: drivers/edac/amd64_edac.c:2690:
+	for (csrow = 0; csrow < CHIPSELECT_COUNT; csrow++) {
+

CHECK:CAMELCASE: Avoid CamelCase: <REV_F_F1Xh_DCSB_BASE_BITS>
#258: FILE: drivers/edac/amd64_edac.c:2699:
+		CSBase &= REV_F_F1Xh_DCSB_BASE_BITS;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#267: FILE: drivers/edac/amd64_edac.c:2708:
+		debugf1("    CSROW=%d CSBase=0x%x RAW CSMask=0x%x\n",
+				csrow, CSBase, CSMask);

WARNING:SPLIT_STRING: quoted string split across lines
#273: FILE: drivers/edac/amd64_edac.c:2714:
+		debugf1("    (InputAddr & ~CSMask)=0x%x "
+				"(CSBase & ~CSMask)=0x%x\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#279: FILE: drivers/edac/amd64_edac.c:2720:
+			CSFound = f10_process_possible_spare(csrow,
+							ChannelSelect, pvt);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#288: FILE: drivers/edac/amd64_edac.c:2729:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000132380.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 43 checks, 242 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000132380.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
