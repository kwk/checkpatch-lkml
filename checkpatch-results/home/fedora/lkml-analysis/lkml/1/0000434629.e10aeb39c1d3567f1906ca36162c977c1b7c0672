WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
master.kernel.org:/pub/scm/linux/kernel/git/jgarzik/netdev-2.6.git upstream-linus

WARNING:MISPLACED_INIT: __initdata should be placed after res[]
#279: FILE: arch/mips/tx4927/toshiba_rbtx4927/toshiba_rbtx4927_setup.c:1055:
+	static struct resource __initdata res[] = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:LONG_LINE_COMMENT: line length of 107 exceeds 100 columns
#393: FILE: drivers/net/arm/at91_ether.c:228:
+	else if (lp->phy_type == MII_T78Q21x3_ID) {			/* ack interrupt in Teridian PHY */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#393: FILE: drivers/net/arm/at91_ether.c:228:
 	}
+	else if (lp->phy_type == MII_T78Q21x3_ID) {			/* ack interrupt in Teridian PHY */

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#398: FILE: drivers/net/arm/at91_ether.c:233:
+	}
+	else if (lp->phy_type == MII_DP83848_ID) {

WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#399: FILE: drivers/net/arm/at91_ether.c:234:
+		read_phy(lp->phy_address, MII_DPPHYSTS_REG, &phy);	/* ack interrupt in DP83848 PHY */

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#410: FILE: drivers/net/arm/at91_ether.c:293:
 	}
+	else if (lp->phy_type == MII_T78Q21x3_ID) {	/* for Teridian PHY */

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#415: FILE: drivers/net/arm/at91_ether.c:298:
+	}
+	else if (lp->phy_type == MII_DP83848_ID) {	/* National Semiconductor DP83848 PHY */

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#430: FILE: drivers/net/arm/at91_ether.c:349:
 	}
+	else if (lp->phy_type == MII_T78Q21x3_ID) {	/* for Teridian PHY */

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#435: FILE: drivers/net/arm/at91_ether.c:354:
+	}
+	else if (lp->phy_type == MII_DP83848_ID) {	/* National Semiconductor DP83848 PHY */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#462: FILE: drivers/net/arm/at91_ether.c:1102:
+		printk(KERN_INFO "%s: National Semiconductor DP83848 PHY\n", dev->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#468: FILE: drivers/net/arm/at91_ether.c:1108:
+		printk(KERN_INFO "%s: Teridian 78Q21x3 PHY\n", dev->name);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#470: FILE: drivers/net/arm/at91_ether.c:1110:
+		printk(KERN_INFO "%s: SMSC LAN83C185 PHY\n", dev->name);

WARNING:LONG_LINE_COMMENT: line length of 110 exceeds 100 columns
#481: FILE: drivers/net/arm/at91_ether.c:1151:
+			case MII_T78Q21x3_ID:		/* Teridian 78Q21x3: PHY_ID1 = 0x0E, PHY_ID2 = 7237 */

WARNING:LONG_LINE_COMMENT: line length of 112 exceeds 100 columns
#482: FILE: drivers/net/arm/at91_ether.c:1152:
+			case MII_LAN83C185_ID:		/* SMSC LAN83C185: PHY_ID1 = 0x0007, PHY_ID2 = 0xC0A1 */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#580: FILE: drivers/net/atl1/atl1_ethtool.c:169:
+				dev_warn(&adapter->pdev->dev,
+					"can't force to 1000M half duplex\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#592: FILE: drivers/net/atl1/atl1_ethtool.c:208:
+		dev_warn(&adapter->pdev->dev,
+			"invalid ethtool speed/duplex setting\n");

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#638: FILE: drivers/net/atl1/atl1_hw.c:20:
  * this program; if not, write to the Free Software Foundation, Inc., 59$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#848: FILE: drivers/net/atl1/atl1_main.c:685:
+			dev_info(&adapter->pdev->dev, "%s link is down\n",
+				netdev->name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#917: FILE: drivers/net/atl1/atl1_main.c:916:
+			dev_info(&adapter->pdev->dev,
+				"%s link is up %d Mbps %s\n",

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1011: FILE: drivers/net/atl1/atl1_param.c:97:
+static int __devinit atl1_validate_option(int *value, struct atl1_option *opt, struct pci_dev *pdev)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1035: FILE: drivers/net/atl1/atl1_param.c:118:
+			dev_info(&pdev->dev, "%s set to %i\n", opt->name,
+				*value);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1046: FILE: drivers/net/atl1/atl1_param.c:131:
+						dev_info(&pdev->dev, "%s\n",
+							ent->str);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1057: FILE: drivers/net/atl1/atl1_param.c:143:
+	dev_info(&pdev->dev, "invalid %s specified (%i) %s\n",
+		opt->name, *value, opt->err);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1063: FILE: drivers/net/atl1/atl1_param.c:157:
 void __devinit atl1_check_options(struct atl1_adapter *adapter)

CHECK:CAMELCASE: Avoid CamelCase: <GoodPacket>
#1123: FILE: drivers/net/dm9000.c:896:
+	bool GoodPacket;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#1174: FILE: drivers/net/ehea/ehea_main.c:1807:
+		tcp = (struct tcphdr*)(skb_network_header(skb) + (ip_hdr(skb)->ihl * 4));

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1437: FILE: drivers/net/myri10ge/myri10ge.c:2518:
+	/*
+	 * Verify the max read request size was set to 4KB

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1455: FILE: drivers/net/myri10ge/myri10ge.c:2536:
+	/*
+	 * load the optimized firmware (which assumes aligned PCIe

WARNING:BRACES: braces {} are not necessary for single statement blocks
#1460: FILE: drivers/net/myri10ge/myri10ge.c:2541:
+	if (status != 0) {
+		goto abort;
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1465: FILE: drivers/net/myri10ge/myri10ge.c:2546:
+	/*
+	 * Enable ECRC if possible

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1470: FILE: drivers/net/myri10ge/myri10ge.c:2551:
+	/*
+	 * Run a DMA test which watches for unaligned completions and

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1480: FILE: drivers/net/myri10ge/myri10ge.c:2561:
+	if (status == -ENOSYS)

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:SPLIT_STRING: quoted string split across lines
#1482: FILE: drivers/net/myri10ge/myri10ge.c:2563:
+		dev_warn(dev, "Falling back to ethp! "
+			 "Please install up to date fw\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1488: FILE: drivers/net/myri10ge/myri10ge.c:2569:
 
+}

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1581: FILE: drivers/net/myri10ge/myri10ge_mcp.h:206:
+	 * chipset */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:NON_OCTAL_PERMISSIONS: Use 4 digit octal (0777) not decimal permissions
#1635: FILE: drivers/net/natsemi.c:144:
+module_param(dspcfg_workaround, int, 1);
Permission bits should use 4 digit octal permissions (like 0700 or 0444).
Avoid using any other base like decimal.

ERROR:CODE_INDENT: code indent should use tabs where possible
#1660: FILE: drivers/net/natsemi.c:666:
+         struct device_attribute *attr, char *buf); \$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1660: FILE: drivers/net/natsemi.c:666:
+         struct device_attribute *attr, char *buf); \$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1663: FILE: drivers/net/natsemi.c:669:
+^I        const char *buf, size_t count); \$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument '_dev' may be better as '(_dev)' to avoid precedence issues
#1666: FILE: drivers/net/natsemi.c:672:
+#define NATSEMI_CREATE_FILE(_dev, _name) \
+         device_create_file(&_dev->dev, &dev_attr_##_name)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1667: FILE: drivers/net/natsemi.c:673:
+         device_create_file(&_dev->dev, &dev_attr_##_name)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1667: FILE: drivers/net/natsemi.c:673:
+         device_create_file(&_dev->dev, &dev_attr_##_name)$

CHECK:MACRO_ARG_PRECEDENCE: Macro argument '_dev' may be better as '(_dev)' to avoid precedence issues
#1668: FILE: drivers/net/natsemi.c:674:
+#define NATSEMI_REMOVE_FILE(_dev, _name) \
+         device_create_file(&_dev->dev, &dev_attr_##_name)

ERROR:CODE_INDENT: code indent should use tabs where possible
#1669: FILE: drivers/net/natsemi.c:675:
+         device_create_file(&_dev->dev, &dev_attr_##_name)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1669: FILE: drivers/net/natsemi.c:675:
+         device_create_file(&_dev->dev, &dev_attr_##_name)$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1674: FILE: drivers/net/natsemi.c:680:
+^I^I^I^I  ^I      struct device_attribute *attr, $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#1674: FILE: drivers/net/natsemi.c:680:
+^I^I^I^I  ^I      struct device_attribute *attr, $

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1674: FILE: drivers/net/natsemi.c:680:
+^I^I^I^I  ^I      struct device_attribute *attr, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1674: FILE: drivers/net/natsemi.c:680:
+static ssize_t natsemi_show_dspcfg_workaround(struct device *dev,
+				  	      struct device_attribute *attr, 

ERROR:CODE_INDENT: code indent should use tabs where possible
#1690: FILE: drivers/net/natsemi.c:696:
+        /* Find out the new setting */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1691: FILE: drivers/net/natsemi.c:697:
+        if (!strncmp("on", buf, count - 1) || !strncmp("1", buf, count - 1))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1691: FILE: drivers/net/natsemi.c:697:
+        if (!strncmp("on", buf, count - 1) || !strncmp("1", buf, count - 1))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1692: FILE: drivers/net/natsemi.c:698:
+                new_setting = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1692: FILE: drivers/net/natsemi.c:698:
+                new_setting = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1693: FILE: drivers/net/natsemi.c:699:
+        else if (!strncmp("off", buf, count - 1)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1693: FILE: drivers/net/natsemi.c:699:
+        else if (!strncmp("off", buf, count - 1)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1694: FILE: drivers/net/natsemi.c:700:
+                 || !strncmp("0", buf, count - 1))$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1694: FILE: drivers/net/natsemi.c:700:
+        else if (!strncmp("off", buf, count - 1)
+                 || !strncmp("0", buf, count - 1))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1694: FILE: drivers/net/natsemi.c:700:
+                 || !strncmp("0", buf, count - 1))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 17)
#1696: FILE: drivers/net/natsemi.c:702:
+	else
+                 return count; 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1697: FILE: drivers/net/natsemi.c:703:
+                 return count; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1697: FILE: drivers/net/natsemi.c:703:
+                 return count; $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1697: FILE: drivers/net/natsemi.c:703:
+                 return count; $

ERROR:CODE_INDENT: code indent should use tabs where possible
#1734: FILE: drivers/net/natsemi.c:978:
+ ^Iunregister_netdev(dev);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1734: FILE: drivers/net/natsemi.c:978:
+ ^Iunregister_netdev(dev);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1734: FILE: drivers/net/natsemi.c:978:
+ ^Iunregister_netdev(dev);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1859: FILE: drivers/net/ne.c:325:
+	printk(KERN_INFO "NE*000 ethercard probe at %#3lx:", ioaddr);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1869: FILE: drivers/net/ne.c:517:
+	printk("\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1877: FILE: drivers/net/ne.c:547:
+	printk(KERN_INFO "%s: %s found at %#lx, using IRQ %d.\n",

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2052: FILE: drivers/net/pasemi_mac.c:75:
+MODULE_AUTHOR ("Olof Johansson <olof@lixom.net>");

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!maddr"
#2069: FILE: drivers/net/pasemi_mac.c:100:
+	if (maddr == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2192: FILE: drivers/net/pasemi_mac.c:419:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#2260: FILE: drivers/net/pasemi_mac.c:470:
+		if (len < 256) {
[...]
+		} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2266: FILE: drivers/net/pasemi_mac.c:476:
+				memcpy(new_skb->data - NET_IP_ALIGN,
+					skb->data - NET_IP_ALIGN,

CHECK:BRACES: Unbalanced braces around else statement
#2272: FILE: drivers/net/pasemi_mac.c:482:
+		} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#2280: FILE: drivers/net/pasemi_mac.c:489:
+		if ((macrx & XCT_MACRX_HTY_M) == XCT_MACRX_HTY_IPV4_OK) {
[...]
 					   XCT_MACRX_CSUM_S;
[...]

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2325: FILE: drivers/net/pasemi_mac.c:565:
+		printk("rx_status reported error\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#2388: FILE: drivers/net/pasemi_mac.c:621:
+	if (!mac->phydev->link) {
[...]
+	} else
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2393: FILE: drivers/net/pasemi_mac.c:626:
+			printk(KERN_INFO "%s: Link is down.\n", dev->name);

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#2399: FILE: drivers/net/pasemi_mac.c:632:
+		return;
+	} else

CHECK:BRACES: Unbalanced braces around else statement
#2399: FILE: drivers/net/pasemi_mac.c:632:
+	} else

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#2423: FILE: drivers/net/pasemi_mac.c:656:
+		printk("Unsupported speed %d\n", mac->phydev->speed);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2437: FILE: drivers/net/pasemi_mac.c:670:
+		printk(KERN_INFO "%s: Link is up at %d Mbps, %s duplex.\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2475: FILE: drivers/net/pasemi_mac.c:708:
+		printk(KERN_ERR "%s: Could not attach to phy\n", dev->name);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2488: FILE: drivers/net/pasemi_mac.c:721:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2649: FILE: drivers/net/pasemi_mac.c:1022:
 
+

ERROR:SPACING: space prohibited before that close parenthesis ')'
#2683: FILE: drivers/net/pasemi_mac.c:1160:
+	mac->msg_enable = (NETIF_MSG_IFUP << 1 ) - 1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2770: FILE: drivers/net/pcmcia/xirc2ps_cs.c:1423:
+    unsigned char *addr;$

WARNING:TABSTOP: Statements should start on a tabstop
#2778: FILE: drivers/net/pcmcia/xirc2ps_cs.c:1432:
+	    if (n > 1 && n <= dev->mc_count && dmi) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (12, 17)
#2778: FILE: drivers/net/pcmcia/xirc2ps_cs.c:1432:
+	    if (n > 1 && n <= dev->mc_count && dmi) {
+	   	 dmi = dmi->next;

ERROR:CODE_INDENT: code indent should use tabs where possible
#2779: FILE: drivers/net/pcmcia/xirc2ps_cs.c:1433:
+^I   ^I dmi = dmi->next;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2779: FILE: drivers/net/pcmcia/xirc2ps_cs.c:1433:
+^I   ^I dmi = dmi->next;$

WARNING:TABSTOP: Statements should start on a tabstop
#2780: FILE: drivers/net/pcmcia/xirc2ps_cs.c:1434:
+	    }

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#2789: FILE: drivers/net/pcmcia/xirc2ps_cs.c:1442:
+	if (n && n <= dev->mc_count && dmi)
 	    addr = dmi->dmi_addr;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#2793: FILE: drivers/net/pcmcia/xirc2ps_cs.c:1444:
+	else
 	    addr = dev->dev_addr;

CHECK:CAMELCASE: Avoid CamelCase: <PutByte>
#2802: FILE: drivers/net/pcmcia/xirc2ps_cs.c:1470:
+	PutByte(XIRCREG42_SWC1, 0x02); /* set MPE */

ERROR:SPACING: exactly one space required after that #elif
#2885: FILE: drivers/net/smc91x.h:282:
+#elif   defined(CONFIG_SUPERH)

CHECK:SPACING: spaces preferred around that '&' (ctx:VxO)
#2894: FILE: drivers/net/smc91x.h:291:
+#define SMC_inb(a, r)          (inw((a) + ((r)&~1)) >> (8*(r%2)))&0xff
                                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2894: FILE: drivers/net/smc91x.h:291:
+#define SMC_inb(a, r)          (inw((a) + ((r)&~1)) >> (8*(r%2)))&0xff
                                                          ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#2894: FILE: drivers/net/smc91x.h:291:
+#define SMC_inb(a, r)          (inw((a) + ((r)&~1)) >> (8*(r%2)))&0xff
                                                             ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#2894: FILE: drivers/net/smc91x.h:291:
+#define SMC_inb(a, r)          (inw((a) + ((r)&~1)) >> (8*(r%2)))&0xff
                                                                  ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2894: FILE: drivers/net/smc91x.h:291:
+#define SMC_inb(a, r)          (inw((a) + ((r)&~1)) >> (8*(r%2)))&0xff

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'r' - possible side-effects?
#2894: FILE: drivers/net/smc91x.h:291:
+#define SMC_inb(a, r)          (inw((a) + ((r)&~1)) >> (8*(r%2)))&0xff

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#2896: FILE: drivers/net/smc91x.h:293:
+#define SMC_outb(v, a, r)      outw(((inw((a)+((r)&~1))*(0xff<<8*(r%2)))) | ((v)<<(8*(r&2)))), (a) + ((r)&~1))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2896: FILE: drivers/net/smc91x.h:293:
+#define SMC_outb(v, a, r)      outw(((inw((a)+((r)&~1))*(0xff<<8*(r%2)))) | ((v)<<(8*(r&2)))), (a) + ((r)&~1))
                                              ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxO)
#2896: FILE: drivers/net/smc91x.h:293:
+#define SMC_outb(v, a, r)      outw(((inw((a)+((r)&~1))*(0xff<<8*(r%2)))) | ((v)<<(8*(r&2)))), (a) + ((r)&~1))
                                                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2896: FILE: drivers/net/smc91x.h:293:
+#define SMC_outb(v, a, r)      outw(((inw((a)+((r)&~1))*(0xff<<8*(r%2)))) | ((v)<<(8*(r&2)))), (a) + ((r)&~1))
                                                        ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2896: FILE: drivers/net/smc91x.h:293:
+#define SMC_outb(v, a, r)      outw(((inw((a)+((r)&~1))*(0xff<<8*(r%2)))) | ((v)<<(8*(r&2)))), (a) + ((r)&~1))
                                                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2896: FILE: drivers/net/smc91x.h:293:
+#define SMC_outb(v, a, r)      outw(((inw((a)+((r)&~1))*(0xff<<8*(r%2)))) | ((v)<<(8*(r&2)))), (a) + ((r)&~1))
                                                                 ^

CHECK:SPACING: spaces preferred around that '%' (ctx:VxV)
#2896: FILE: drivers/net/smc91x.h:293:
+#define SMC_outb(v, a, r)      outw(((inw((a)+((r)&~1))*(0xff<<8*(r%2)))) | ((v)<<(8*(r&2)))), (a) + ((r)&~1))
                                                                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#2896: FILE: drivers/net/smc91x.h:293:
+#define SMC_outb(v, a, r)      outw(((inw((a)+((r)&~1))*(0xff<<8*(r%2)))) | ((v)<<(8*(r&2)))), (a) + ((r)&~1))
                                                                                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#2896: FILE: drivers/net/smc91x.h:293:
+#define SMC_outb(v, a, r)      outw(((inw((a)+((r)&~1))*(0xff<<8*(r%2)))) | ((v)<<(8*(r&2)))), (a) + ((r)&~1))
                                                                                     ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#2896: FILE: drivers/net/smc91x.h:293:
+#define SMC_outb(v, a, r)      outw(((inw((a)+((r)&~1))*(0xff<<8*(r%2)))) | ((v)<<(8*(r&2)))), (a) + ((r)&~1))
                                                                                        ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxO)
#2896: FILE: drivers/net/smc91x.h:293:
+#define SMC_outb(v, a, r)      outw(((inw((a)+((r)&~1))*(0xff<<8*(r%2)))) | ((v)<<(8*(r&2)))), (a) + ((r)&~1))
                                                                                                          ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2896: FILE: drivers/net/smc91x.h:293:
+#define SMC_outb(v, a, r)      outw(((inw((a)+((r)&~1))*(0xff<<8*(r%2)))) | ((v)<<(8*(r&2)))), (a) + ((r)&~1))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#2896: FILE: drivers/net/smc91x.h:293:
+#define SMC_outb(v, a, r)      outw(((inw((a)+((r)&~1))*(0xff<<8*(r%2)))) | ((v)<<(8*(r&2)))), (a) + ((r)&~1))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'r' - possible side-effects?
#2896: FILE: drivers/net/smc91x.h:293:
+#define SMC_outb(v, a, r)      outw(((inw((a)+((r)&~1))*(0xff<<8*(r%2)))) | ((v)<<(8*(r&2)))), (a) + ((r)&~1))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!q->hydra_gives_outbound_pcis'
#2957: FILE: drivers/s390/cio/qdio.c:1000:
+		if ((!q->hydra_gives_outbound_pcis) &&
+		    (!qdio_is_outbound_q_done(q)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#2961: FILE: drivers/s390/cio/qdio.c:1004:
+	}
+	else if (((!q->is_iqdio_q) && (!q->is_pci_out)) ||

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#2999: FILE: drivers/s390/cio/qdio.c:1849:
+		q->timer.function=(void(*)(unsigned long))
 		                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3033: FILE: drivers/s390/cio/qdio.h:63:
+#define QDIO_FORCE_CHECK_TIMEOUT (10*HZ)
                                     ^

ERROR:SPACING: space required after that ',' (ctx:OxV)
#3109: FILE: drivers/s390/net/qeth_eddp.h:37:
+qeth_eddp_create_context(struct qeth_card *,struct sk_buff *,
                                            ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#3127: FILE: drivers/s390/net/qeth_main.c:1690:
+	char * ipa_name;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3134: FILE: drivers/s390/net/qeth_main.c:1697:
+	PRINT_ERR("%s(x%X) for %s returned x%X \"%s\"\n", ipa_name, com,
+		   QETH_CARD_IFNAME(card), rc, qeth_get_ipa_msg(rc));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3247: FILE: drivers/s390/net/qeth_mpc.c:171:
+	{IPA_RC_DUP_IPV6_REMOTE,"ipv6 address already registered remote"},
 	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3277: FILE: drivers/s390/net/qeth_mpc.c:201:
+	{IPA_RC_PRIMARY_ALREADY_DEFINED,"Primary already defined"},
 	                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3279: FILE: drivers/s390/net/qeth_mpc.c:203:
+	{IPA_RC_INVALID_SETRTG_INDICATOR,"Invalid SETRTG indicator"},
 	                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3280: FILE: drivers/s390/net/qeth_mpc.c:204:
+	{IPA_RC_MC_ADDR_ALREADY_DEFINED,"Multicast address already defined"},
 	                               ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#3292: FILE: drivers/s390/net/qeth_mpc.c:216:
+	int x = 0;
+	qeth_ipa_rc_msg[sizeof(qeth_ipa_rc_msg) /

ERROR:SPACING: space required before the open parenthesis '('
#3294: FILE: drivers/s390/net/qeth_mpc.c:218:
+	while(qeth_ipa_rc_msg[x].rc != rc)

WARNING:LINE_SPACING: Missing a blank line after declarations
#3337: FILE: drivers/s390/net/qeth_mpc.c:261:
+	int x = 0;
+	qeth_ipa_cmd_names[

CHECK:OPEN_ENDED_LINE: Lines should not end with a '['
#3337: FILE: drivers/s390/net/qeth_mpc.c:261:
+	qeth_ipa_cmd_names[

CHECK:SPACING: space preferred before that '/' (ctx:VxE)
#3338: FILE: drivers/s390/net/qeth_mpc.c:262:
+		sizeof(qeth_ipa_cmd_names)/
 		                          ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3339: FILE: drivers/s390/net/qeth_mpc.c:263:
+			sizeof(struct ipa_cmd_names)-1].cmd = cmd;
 			                            ^

ERROR:SPACING: space required before the open parenthesis '('
#3340: FILE: drivers/s390/net/qeth_mpc.c:264:
+	while(qeth_ipa_cmd_names[x].cmd != cmd)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3471: FILE: drivers/s390/net/qeth_mpc.h:150:
 
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3473: FILE: drivers/s390/net/qeth_mpc.h:152:
+ * according to OSA card Specs */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3625: FILE: drivers/s390/net/qeth_mpc.h:465:
 
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000434629.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 38 errors, 52 warnings, 49 checks, 3190 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000434629.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
