CHECK:CAMELCASE: Avoid CamelCase: <Elf_Ehdr>
#79: FILE: kernel/module.c:2078:
+static Elf_Ehdr *examine_fatelf_module(const unsigned char *hdr,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Fatelf_hdr>
#84: FILE: kernel/module.c:2083:
+	const Fatelf_hdr *fatelf = (const Fatelf_hdr *) hdr;

CHECK:SPACING: No space is necessary after a cast
#87: FILE: kernel/module.c:2086:
+		return (Elf_Ehdr *) hdr;  /* not FatELF; not an error. */

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#91: FILE: kernel/module.c:2090:
+	memset(&elf, 0, sizeof (elf));

CHECK:SPACING: No space is necessary after a cast
#93: FILE: kernel/module.c:2092:
+	records = (int) fatelf->num_records;  /* uint8, no byteswap needed */

CHECK:CAMELCASE: Avoid CamelCase: <Fatelf_record>
#95: FILE: kernel/module.c:2094:
+		const Fatelf_record *record = &fatelf->records[i];

CHECK:SPACING: No space is necessary after a cast
#107: FILE: kernel/module.c:2106:
+			const unsigned long uloff = (unsigned long) rec_offset;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'end_offset >= rec_offset'
#110: FILE: kernel/module.c:2109:
+			if (likely((end_offset >= rec_offset) && (end_offset <= len)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'end_offset <= len'
#110: FILE: kernel/module.c:2109:
+			if (likely((end_offset >= rec_offset) && (end_offset <= len)))

CHECK:SPACING: No space is necessary after a cast
#111: FILE: kernel/module.c:2110:
+				return (Elf_Ehdr *) (hdr + uloff);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#135: FILE: kernel/module.c:2146:
+	if (len > 64 * 1024 * 1024 || (hdr_alloc = vmalloc(len)) == NULL)

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: No space is necessary after a cast
#144: FILE: kernel/module.c:2154:
+	hdr = examine_fatelf_module((unsigned char *) hdr_alloc, len);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!hdr"
#145: FILE: kernel/module.c:2155:
+	if (hdr == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000057219.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 1 warnings, 11 checks, 101 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000057219.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
