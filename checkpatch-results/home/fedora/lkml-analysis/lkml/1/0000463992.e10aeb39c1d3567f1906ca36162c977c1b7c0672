WARNING:TYPO_SPELLING: 'Fucntion' may be misspelled - perhaps 'Function'?
#39: 
Fucntion "map_queue" returns queue index as '0'. There is no support to
^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:BAD_SIGN_OFF: Unrecognized email address: 'David Miller; Garzik, Jeff; netdev@vger.kernel.org;'
#46: 
To: David Miller; Garzik, Jeff; netdev@vger.kernel.org;

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

ERROR:BAD_SIGN_OFF: Unrecognized email address: 'Kok, Auke; Peter Waskiewicz Jr; Brandeburg, Jesse; Kok, Auke;'
#48: 
Cc: Kok, Auke; Peter Waskiewicz Jr; Brandeburg, Jesse; Kok, Auke;

WARNING:TYPO_SPELLING: 'independantly' may be misspelled - perhaps 'independently'?
#58: 
independantly.  Changes to the PRIO Qdisc also allow a user to map
^^^^^^^^^^^^^

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#81: FILE: include/linux/netdevice.h:105:
(LL_MAX_HEADER + 48)  #endif

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#86: FILE: include/linux/netdevice.h:110:
+struct net_device_subqueue
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#147: FILE: include/linux/netdevice.h:713:
+	clear_bit(__LINK_STATE_XOFF,
+&dev->egress_subqueue[queue_index].state);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#157: FILE: include/linux/netdevice.h:722:
+	set_bit(__LINK_STATE_XOFF,
+}

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: include/linux/netdevice.h:725:
+                                         int queue_index) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: include/linux/netdevice.h:725:
+                                         int queue_index) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: include/linux/netdevice.h:727:
+^I                &dev->egress_subqueue[queue_index].state);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#171: FILE: include/linux/netdevice.h:736:
+	if (test_and_clear_bit(__LINK_STATE_XOFF,
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#172: FILE: include/linux/netdevice.h:736:
+	if (test_and_clear_bit(__LINK_STATE_XOFF,
&dev->egress_subqueue[queue_index].state))

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#176: FILE: include/linux/netdevice.h:740:
+static inline int netif_is_multiqueue(const struct net_device *dev) {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#177: FILE: include/linux/netdevice.h:741:
+^Ireturn (!!(NETIF_F_MULTI_QUEUE & dev->features)); } #endif /* $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#178: FILE: include/linux/netdevice.h:742:
+	return (!!(NETIF_F_MULTI_QUEUE & dev->features)); } #endif /* 
+CONFIG_NET_MULTI_QUEUE_DEVICE */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#178: FILE: include/linux/netdevice.h:742:
+CONFIG_NET_MULTI_QUEUE_DEVICE */

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#208: FILE: net/Kconfig:41:
+config NET_MULTI_QUEUE_DEVICE
+	bool "Multiple queue network device support (EXPERIMENTAL)"
+	depends on NET_SCHED && EXPERIMENTAL
+	help
+	  Saying Y here will add support for network devices that have

Kconfig symbols should have a help text which fully describes
it.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#251: FILE: net/core/dev.c:1483:
+		/* If we're a multi-queue device, get a queue index to
+		if (netif_is_multiqueue(dev))

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#260: FILE: net/core/dev.c:1491:
+				/*
+				 * Unlock because the underlying qdisc

ERROR:CODE_INDENT: code indent should use tabs where possible
#268: FILE: net/core/dev.c:1498:
+^I^I^I^I           ? NET_XMIT_SUCCESS : rc;$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#271: FILE: net/core/dev.c:1501:
+				printk(KERN_CRIT "Device %s is "

WARNING:SPLIT_STRING: quoted string split across lines
#272: FILE: net/core/dev.c:1502:
+				printk(KERN_CRIT "Device %s is "
+					"multiqueue, but map_queue is "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#273: FILE: net/core/dev.c:1503:
+					"multiqueue, but map_queue is "
+					"undefined in the qdisc!!\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#286: FILE: net/core/dev.c:1516:
+^I^I^I^I           ? NET_XMIT_SUCCESS : rc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: net/sched/sch_generic.c:45:
+   For single-queue devices:$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#333: FILE: net/sched/sch_generic.c:45:
+   For single-queue devices:
              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#333: FILE: net/sched/sch_generic.c:45:
+   For single-queue devices:
                            ^

CHECK:CAMELCASE: Avoid CamelCase: <For>
#333: FILE: net/sched/sch_generic.c:45:
+   For single-queue devices:

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 0)
#467: FILE: net/sched/sch_generic.c:256:
+		if (netif_is_multiqueue(dev))
[...]
spin_unlock(&dev->egress_subqueue[queue_index].queue_lock);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 0)
#475: FILE: net/sched/sch_generic.c:263:
+	if (netif_is_multiqueue(dev))
[...]
spin_unlock(&dev->egress_subqueue[queue_index].queue_lock);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#488: FILE: net/sched/sch_generic.c:376:
+static int noop_map_queue(struct sk_buff *skb, struct Qdisc *qdisc) {

CHECK:CAMELCASE: Avoid CamelCase: <Qdisc>
#488: FILE: net/sched/sch_generic.c:376:
+static int noop_map_queue(struct sk_buff *skb, struct Qdisc *qdisc) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 0)
#521: FILE: net/sched/sch_generic.c:458:
+		if (netif_is_multiqueue(qdisc->dev))
[...]
spin_lock(&qdisc->dev->egress_subqueue[0].queue_lock);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 0)
#530: FILE: net/sched/sch_generic.c:466:
+		if (netif_is_multiqueue(qdisc->dev))
[...]
spin_unlock(&qdisc->dev->egress_subqueue[0].queue_lock);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#543: FILE: net/sched/sch_generic.c:516:
+static int pfifo_fast_map_queue(struct sk_buff *skb, struct Qdisc
+*qdisc) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#615: FILE: net/sched/sch_prio.c:95:
+	int band; /* Unused in this function, just here for multi-queue
+

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#617: FILE: net/sched/sch_prio.c:97:
+	/*
+	 * NOTE: if a device is multiqueue, then it is imperative the

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#634: FILE: net/sched/sch_prio.c:125:
+static int
+prio_map_queue(struct sk_buff *skb, struct Qdisc *sch) {

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#637: FILE: net/sched/sch_prio.c:128:
+	/*
+	 * We'll classify the skb here, so return the Qdisc back through

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#675: FILE: net/sched/sch_prio.c:183:
+	/*
+	 * If we're multiqueue, the basic approach is try the lock on

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#702: FILE: net/sched/sch_prio.c:203:
+
+			}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited after that open parenthesis '('
#755: FILE: net/sched/sch_prio.c:333:
+			if ( (((i + 1) - queue) == qmapoffset) &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#756: FILE: net/sched/sch_prio.c:334:
+			if ( (((i + 1) - queue) == qmapoffset) &&
+			     (queue < (sch->dev->egress_subqueue_count -

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#757: FILE: net/sched/sch_prio.c:334:
+			if ( (((i + 1) - queue) == qmapoffset) &&
1))) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000463992.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 15 errors, 20 warnings, 10 checks, 536 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000463992.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
