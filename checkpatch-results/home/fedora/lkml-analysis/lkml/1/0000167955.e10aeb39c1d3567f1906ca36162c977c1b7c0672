WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'succesfully' may be misspelled - perhaps 'successfully'?
#64: FILE: Documentation/filesystems/sysfs-pci.txt:72:
+that the device must be enabled for a rom read to return data succesfully.
                                                               ^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#79: FILE: Makefile:4:
+EXTRAVERSION = .16
 ^^^^^^^^^^^^

WARNING:BRACES: braces {} are not necessary for single statement blocks
#225: FILE: drivers/acpi/executer/exconfig.c:324:
+		if (!table) {
+			return_ACPI_STATUS(AE_NO_MEMORY);
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#234: FILE: drivers/acpi/executer/exconfig.c:333:
+		if (length < sizeof(struct acpi_table_header)) {
+			return_ACPI_STATUS(AE_INVALID_TABLE_LENGTH);
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#248: FILE: drivers/acpi/executer/exconfig.c:347:
+		if (!table_desc.pointer) {
+			return_ACPI_STATUS(AE_NO_MEMORY);
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#281: FILE: drivers/acpi/executer/exconfig.c:373:
+		if (obj_desc->buffer.length < sizeof(struct acpi_table_header)) {
 			return_ACPI_STATUS(AE_INVALID_TABLE_LENGTH);
 		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#301: FILE: drivers/acpi/executer/exconfig.c:386:
+		if (length > obj_desc->buffer.length) {
+			return_ACPI_STATUS(AE_AML_BUFFER_LIMIT);
+		}

WARNING:BRACES: braces {} are not necessary for single statement blocks
#304: FILE: drivers/acpi/executer/exconfig.c:389:
+		if (length < sizeof(struct acpi_table_header)) {
+			return_ACPI_STATUS(AE_INVALID_TABLE_LENGTH);
 		}

WARNING:TYPO_SPELLING: 'an union' may be misspelled - perhaps 'a union'?
#445: FILE: drivers/acpi/namespace/nsxfeval.c:398:
+	 * to an union acpi_object, so it is not dereferenced here. A ddb_handle
 	      ^^^^^^^^

WARNING:TYPO_SPELLING: 'an union' may be misspelled - perhaps 'a union'?
#447: FILE: drivers/acpi/namespace/nsxfeval.c:400:
+	 * an union acpi_object.
 	   ^^^^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around info->return_object->reference.where
#452: FILE: drivers/acpi/namespace/nsxfeval.c:405:
+		obj_desc = *(info->return_object->reference.where);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:BRACES: braces {} are not necessary for single statement blocks
#458: FILE: drivers/acpi/namespace/nsxfeval.c:411:
+		if (node) {
+			obj_desc = node->object;
+		}

WARNING:RETURN_VOID: void function return statements are not generally useful
#476: FILE: drivers/acpi/namespace/nsxfeval.c:429:
+	return;
+}

CHECK:SPACING: No space is necessary after a cast
#521: FILE: drivers/acpi/tables/tbutils.c:515:
+					      (unsigned) (table_count -

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#521: FILE: drivers/acpi/tables/tbutils.c:515:
+					      (unsigned) (table_count -

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'acpi_gbl_root_table_list.count'
#523: FILE: drivers/acpi/tables/tbutils.c:517:
+					       (acpi_gbl_root_table_list.
+					       count - 2))));

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#562: FILE: drivers/acpi/video.c:698:
+	sort(&br->levels[2], count - 2, sizeof(br->levels[2]),
+		acpi_video_cmp_level, NULL);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#645: FILE: drivers/char/agp/intel-agp.c:221:
+		readl(intel_private.registers+I810_PTE_BASE+((i-1)*4));	/* PCI posting. */
 		                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#645: FILE: drivers/char/agp/intel-agp.c:221:
+		readl(intel_private.registers+I810_PTE_BASE+((i-1)*4));	/* PCI posting. */
 		                                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#645: FILE: drivers/char/agp/intel-agp.c:221:
+		readl(intel_private.registers+I810_PTE_BASE+((i-1)*4));	/* PCI posting. */
 		                                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#645: FILE: drivers/char/agp/intel-agp.c:221:
+		readl(intel_private.registers+I810_PTE_BASE+((i-1)*4));	/* PCI posting. */
 		                                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#655: FILE: drivers/char/agp/intel-agp.c:782:
+		readl(intel_private.registers+I810_PTE_BASE+((i-1)*4));	/* PCI Posting. */
 		                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#655: FILE: drivers/char/agp/intel-agp.c:782:
+		readl(intel_private.registers+I810_PTE_BASE+((i-1)*4));	/* PCI Posting. */
 		                                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#655: FILE: drivers/char/agp/intel-agp.c:782:
+		readl(intel_private.registers+I810_PTE_BASE+((i-1)*4));	/* PCI Posting. */
 		                                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#655: FILE: drivers/char/agp/intel-agp.c:782:
+		readl(intel_private.registers+I810_PTE_BASE+((i-1)*4));	/* PCI Posting. */
 		                                                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#665: FILE: drivers/char/agp/intel-agp.c:998:
+		readl(intel_private.gtt+i-1);	/* PCI Posting. */
 		                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#665: FILE: drivers/char/agp/intel-agp.c:998:
+		readl(intel_private.gtt+i-1);	/* PCI Posting. */
 		                         ^

CHECK:INVALID_UTF8: Invalid UTF-8, patch and commit message should be encoded in UTF-8
#682: FILE: drivers/char/agp/intel-agp.c:2135:
+	    "Mobile Intel® GM45 Express", NULL, &intel_i965_driver },
 	                 ^

WARNING:TABSTOP: Statements should start on a tabstop
#770: FILE: drivers/firewire/fw-sbp2.c:363:
+	/* iPod 4th generation */ {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#886: FILE: drivers/md/md.c:1458:
+		printk(KERN_WARNING "md: %s: array is limited to %d devices\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#899: FILE: drivers/md/md.c:2372:
+			printk(KERN_WARNING

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!icr'
#1060: FILE: drivers/net/e1000/e1000_main.c:3838:
+	if (unlikely((!icr) || test_bit(__E1000_RESETTING, &adapter->flags)))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1103: FILE: drivers/net/wireless/ipw2200.c:6288:
+	if (priv->status & STATUS_ASSOCIATED
+	    && priv->assoc_network->beacon_interval > 10)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1229: FILE: drivers/serial/8250_pci.c:603:
+	if (dev->subsystem_vendor == PCI_VENDOR_ID_IBM &&
+			dev->subsystem_device == 0x0299)

WARNING:LONG_LINE_COMMENT: line length of 117 exceeds 100 columns
#1357: FILE: drivers/usb/serial/option.c:402:
+	{ USB_DEVICE(NOVATELWIRELESS_VENDOR_ID, NOVATELWIRELESS_PRODUCT_EVDO_FULLSPEED) }, /* Novatel EVDO product */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 117 exceeds 100 columns
#1358: FILE: drivers/usb/serial/option.c:403:
+	{ USB_DEVICE(NOVATELWIRELESS_VENDOR_ID, NOVATELWIRELESS_PRODUCT_HSPA_FULLSPEED) }, /* Novatel HSPA product */

WARNING:LONG_LINE_COMMENT: line length of 135 exceeds 100 columns
#1359: FILE: drivers/usb/serial/option.c:404:
+	{ USB_DEVICE(NOVATELWIRELESS_VENDOR_ID, NOVATELWIRELESS_PRODUCT_EVDO_EMBEDDED_FULLSPEED) }, /* Novatel EVDO Embedded product */

WARNING:LONG_LINE_COMMENT: line length of 135 exceeds 100 columns
#1360: FILE: drivers/usb/serial/option.c:405:
+	{ USB_DEVICE(NOVATELWIRELESS_VENDOR_ID, NOVATELWIRELESS_PRODUCT_HSPA_EMBEDDED_FULLSPEED) }, /* Novatel HSPA Embedded product */

WARNING:LONG_LINE_COMMENT: line length of 117 exceeds 100 columns
#1361: FILE: drivers/usb/serial/option.c:406:
+	{ USB_DEVICE(NOVATELWIRELESS_VENDOR_ID, NOVATELWIRELESS_PRODUCT_EVDO_HIGHSPEED) }, /* Novatel EVDO product */

WARNING:LONG_LINE_COMMENT: line length of 117 exceeds 100 columns
#1362: FILE: drivers/usb/serial/option.c:407:
+	{ USB_DEVICE(NOVATELWIRELESS_VENDOR_ID, NOVATELWIRELESS_PRODUCT_HSPA_HIGHSPEED) }, /* Novatel HSPA product */

WARNING:LONG_LINE_COMMENT: line length of 135 exceeds 100 columns
#1363: FILE: drivers/usb/serial/option.c:408:
+	{ USB_DEVICE(NOVATELWIRELESS_VENDOR_ID, NOVATELWIRELESS_PRODUCT_EVDO_EMBEDDED_HIGHSPEED) }, /* Novatel EVDO Embedded product */

WARNING:LONG_LINE_COMMENT: line length of 135 exceeds 100 columns
#1364: FILE: drivers/usb/serial/option.c:409:
+	{ USB_DEVICE(NOVATELWIRELESS_VENDOR_ID, NOVATELWIRELESS_PRODUCT_HSPA_EMBEDDED_HIGHSPEED) }, /* Novatel HSPA Embedded product */

WARNING:LONG_LINE_COMMENT: line length of 111 exceeds 100 columns
#1365: FILE: drivers/usb/serial/option.c:410:
+	{ USB_DEVICE(NOVATELWIRELESS_VENDOR_ID, NOVATELWIRELESS_PRODUCT_GLOBAL) }, /* Novatel Global product */

WARNING:LONG_LINE_COMMENT: line length of 178 exceeds 100 columns
#1383: FILE: drivers/usb/serial/option.c:416:
+	{ USB_DEVICE(DELL_VENDOR_ID, DELL_PRODUCT_5700_MINICARD) },		/* Dell Wireless 5700 Mobile Broadband CDMA/EVDO Mini-Card == Novatel Expedite EV620 CDMA/EV-DO */

WARNING:LONG_LINE_COMMENT: line length of 172 exceeds 100 columns
#1384: FILE: drivers/usb/serial/option.c:417:
+	{ USB_DEVICE(DELL_VENDOR_ID, DELL_PRODUCT_5500_MINICARD) },		/* Dell Wireless 5500 Mobile Broadband HSDPA Mini-Card == Novatel Expedite EU740 HSDPA/3G */

WARNING:LONG_LINE_COMMENT: line length of 172 exceeds 100 columns
#1385: FILE: drivers/usb/serial/option.c:418:
+	{ USB_DEVICE(DELL_VENDOR_ID, DELL_PRODUCT_5505_MINICARD) },		/* Dell Wireless 5505 Mobile Broadband HSDPA Mini-Card == Novatel Expedite EU740 HSDPA/3G */

WARNING:LONG_LINE_COMMENT: line length of 178 exceeds 100 columns
#1386: FILE: drivers/usb/serial/option.c:419:
+	{ USB_DEVICE(DELL_VENDOR_ID, DELL_PRODUCT_5700_EXPRESSCARD) },		/* Dell Wireless 5700 Mobile Broadband CDMA/EVDO ExpressCard == Novatel Merlin XV620 CDMA/EV-DO */

WARNING:LONG_LINE_COMMENT: line length of 172 exceeds 100 columns
#1387: FILE: drivers/usb/serial/option.c:420:
+	{ USB_DEVICE(DELL_VENDOR_ID, DELL_PRODUCT_5510_EXPRESSCARD) },		/* Dell Wireless 5510 Mobile Broadband HSDPA ExpressCard == Novatel Merlin XU870 HSDPA/3G */

WARNING:LONG_LINE_COMMENT: line length of 177 exceeds 100 columns
#1388: FILE: drivers/usb/serial/option.c:421:
+	{ USB_DEVICE(DELL_VENDOR_ID, DELL_PRODUCT_5700_MINICARD_SPRINT) },	/* Dell Wireless 5700 Mobile Broadband CDMA/EVDO Mini-Card == Novatel Expedite E720 CDMA/EV-DO */

WARNING:LONG_LINE_COMMENT: line length of 178 exceeds 100 columns
#1389: FILE: drivers/usb/serial/option.c:422:
+	{ USB_DEVICE(DELL_VENDOR_ID, DELL_PRODUCT_5700_MINICARD_TELUS) },	/* Dell Wireless 5700 Mobile Broadband CDMA/EVDO Mini-Card == Novatel Expedite ET620 CDMA/EV-DO */

WARNING:LONG_LINE_COMMENT: line length of 132 exceeds 100 columns
#1390: FILE: drivers/usb/serial/option.c:423:
+	{ USB_DEVICE(DELL_VENDOR_ID, DELL_PRODUCT_5720_MINICARD_VZW) }, 	/* Dell Wireless 5720 == Novatel EV620 CDMA/EV-DO */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1390: FILE: drivers/usb/serial/option.c:423:
+^I{ USB_DEVICE(DELL_VENDOR_ID, DELL_PRODUCT_5720_MINICARD_VZW) }, ^I/* Dell Wireless 5720 == Novatel EV620 CDMA/EV-DO */$

WARNING:LONG_LINE_COMMENT: line length of 132 exceeds 100 columns
#1391: FILE: drivers/usb/serial/option.c:424:
+	{ USB_DEVICE(DELL_VENDOR_ID, DELL_PRODUCT_5720_MINICARD_SPRINT) }, 	/* Dell Wireless 5720 == Novatel EV620 CDMA/EV-DO */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1391: FILE: drivers/usb/serial/option.c:424:
+^I{ USB_DEVICE(DELL_VENDOR_ID, DELL_PRODUCT_5720_MINICARD_SPRINT) }, ^I/* Dell Wireless 5720 == Novatel EV620 CDMA/EV-DO */$

WARNING:LONG_LINE_COMMENT: line length of 132 exceeds 100 columns
#1392: FILE: drivers/usb/serial/option.c:425:
+	{ USB_DEVICE(DELL_VENDOR_ID, DELL_PRODUCT_5720_MINICARD_TELUS) }, 	/* Dell Wireless 5720 == Novatel EV620 CDMA/EV-DO */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1392: FILE: drivers/usb/serial/option.c:425:
+^I{ USB_DEVICE(DELL_VENDOR_ID, DELL_PRODUCT_5720_MINICARD_TELUS) }, ^I/* Dell Wireless 5720 == Novatel EV620 CDMA/EV-DO */$

WARNING:LONG_LINE_COMMENT: line length of 137 exceeds 100 columns
#1393: FILE: drivers/usb/serial/option.c:426:
+	{ USB_DEVICE(DELL_VENDOR_ID, DELL_PRODUCT_5520_MINICARD_CINGULAR) },	/* Dell Wireless HSDPA 5520 == Novatel Expedite EU860D */

WARNING:LONG_LINE_COMMENT: line length of 110 exceeds 100 columns
#1394: FILE: drivers/usb/serial/option.c:427:
+	{ USB_DEVICE(DELL_VENDOR_ID, DELL_PRODUCT_5520_MINICARD_GENERIC_L) },	/* Dell Wireless HSDPA 5520 */

WARNING:LONG_LINE_COMMENT: line length of 148 exceeds 100 columns
#1395: FILE: drivers/usb/serial/option.c:428:
+	{ USB_DEVICE(DELL_VENDOR_ID, DELL_PRODUCT_5520_MINICARD_GENERIC_I) },	/* Dell Wireless 5520 Voda I Mobile Broadband (3G HSDPA) Minicard */

WARNING:LONG_LINE_COMMENT: line length of 141 exceeds 100 columns
#1396: FILE: drivers/usb/serial/option.c:429:
+	{ USB_DEVICE(DELL_VENDOR_ID, 0x8147) },					/* Dell Wireless 5530 Mobile Broadband (3G HSPA) Mini-Card */

WARNING:LONG_LINE_COMMENT: line length of 141 exceeds 100 columns
#1397: FILE: drivers/usb/serial/option.c:430:
+	{ USB_DEVICE(DELL_VENDOR_ID, DELL_PRODUCT_5730_MINICARD_SPRINT) },	/* Dell Wireless 5730 Mobile Broadband EVDO/HSPA Mini-Card */

WARNING:LONG_LINE_COMMENT: line length of 141 exceeds 100 columns
#1398: FILE: drivers/usb/serial/option.c:431:
+	{ USB_DEVICE(DELL_VENDOR_ID, DELL_PRODUCT_5730_MINICARD_TELUS) },	/* Dell Wireless 5730 Mobile Broadband EVDO/HSPA Mini-Card */

WARNING:LONG_LINE_COMMENT: line length of 141 exceeds 100 columns
#1399: FILE: drivers/usb/serial/option.c:432:
+	{ USB_DEVICE(DELL_VENDOR_ID, DELL_PRODUCT_5730_MINICARD_VZW) }, 	/* Dell Wireless 5730 Mobile Broadband EVDO/HSPA Mini-Card */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1399: FILE: drivers/usb/serial/option.c:432:
+^I{ USB_DEVICE(DELL_VENDOR_ID, DELL_PRODUCT_5730_MINICARD_VZW) }, ^I/* Dell Wireless 5730 Mobile Broadband EVDO/HSPA Mini-Card */$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1422: FILE: drivers/usb/serial/ti_usb_3410_5052.c:230:
+static struct usb_device_id ti_id_table_3410[10+TI_EXTRA_VID_PID_COUNT+1] = {
                                                ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1422: FILE: drivers/usb/serial/ti_usb_3410_5052.c:230:
+static struct usb_device_id ti_id_table_3410[10+TI_EXTRA_VID_PID_COUNT+1] = {
                                                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1431: FILE: drivers/usb/serial/ti_usb_3410_5052.c:238:
+static struct usb_device_id ti_id_table_5052[5+TI_EXTRA_VID_PID_COUNT+1] = {
                                               ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1431: FILE: drivers/usb/serial/ti_usb_3410_5052.c:238:
+static struct usb_device_id ti_id_table_5052[5+TI_EXTRA_VID_PID_COUNT+1] = {
                                                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1440: FILE: drivers/usb/serial/ti_usb_3410_5052.c:246:
+static struct usb_device_id ti_id_table_combined[14+2*TI_EXTRA_VID_PID_COUNT+1] = {
                                                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1440: FILE: drivers/usb/serial/ti_usb_3410_5052.c:246:
+static struct usb_device_id ti_id_table_combined[14+2*TI_EXTRA_VID_PID_COUNT+1] = {
                                                      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1440: FILE: drivers/usb/serial/ti_usb_3410_5052.c:246:
+static struct usb_device_id ti_id_table_combined[14+2*TI_EXTRA_VID_PID_COUNT+1] = {
                                                                             ^

CHECK:BRACES: Unbalanced braces around else statement
#1615: FILE: drivers/video/console/fbcon.c:2545:
+			} else

CHECK:SPACING: No space is necessary after a cast
#1672: FILE: drivers/video/console/vgacon.c:1366:
+		scr_memsetw((u16 *) (c->vc_origin), c->vc_video_erase_char,

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1726: FILE: fs/seq_file.c:65:
+	m->count = m->from = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:CAMELCASE: Avoid CamelCase: <Eoverflow>
#1749: FILE: fs/seq_file.c:88:
+			goto Eoverflow;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1935: FILE: include/linux/wait.h:145:
+void __wake_up_common(wait_queue_head_t *q, unsigned int mode,
+			int nr_exclusive, int sync, void *key);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1953: FILE: include/linux/wait.h:356:
+^I^Iabort_exclusive_wait(&wq, &__wait, ^I^I^I\$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1966: FILE: include/linux/wait.h:449:
+void abort_exclusive_wait(wait_queue_head_t *q, wait_queue_t *wait,
+			unsigned int mode, void *key);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2013: FILE: kernel/sched.c:4560:
+void __wake_up_common(wait_queue_head_t *q, unsigned int mode,
+			int nr_exclusive, int sync, void *key)

WARNING:TYPO_SPELLING: 'noone' may be misspelled - perhaps 'no one'?
#2056: FILE: kernel/wait.c:154:
+ * aborts and is woken up concurrently and noone wakes up
                                            ^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2060: FILE: kernel/wait.c:158:
+void abort_exclusive_wait(wait_queue_head_t *q, wait_queue_t *wait,
+			unsigned int mode, void *key)

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#2068: FILE: kernel/wait.c:166:
+	else if (waitqueue_active(q))

CHECK:BRACES: Unbalanced braces around else statement
#2182: FILE: net/sunrpc/svcsock.c:1191:
+		} else

CHECK:CAMELCASE: Avoid CamelCase: <wMaxPacketSize>
#2224: FILE: sound/usb/usbaudio.c:2961:
+	fp->maxpacksize = le16_to_cpu(get_endpoint(alts, 0)->wMaxPacketSize);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000167955.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 51 warnings, 34 checks, 1830 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000167955.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
