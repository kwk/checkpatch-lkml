WARNING:EMAIL_SUBJECT: A patch subject line should describe the change not the tool that found it
#18: 
Subject: [Patch 4/4] run drivers/misc/sgi-xp through scripts/checkpatch.pl -v4

Naming the tool that found the issue is not very useful in the
subject line.  A good subject line summarizes the change that
the patch brings.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
braces. Eliminated uses of volatiles and use of kernel_thread() and daemonize().

CHECK:CAMELCASE: Avoid CamelCase: <xpcUnknownReason>
#74: FILE: drivers/misc/sgi-xp/xp.h:258:
+	xpcUnknownReason	/* 116: unknown reason - must be last in enum */

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <remote_GPs>
#439: FILE: drivers/misc/sgi-xp/xpc.h:553:
+	struct xpc_gp *remote_GPs;	/* copy of remote partition's local */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "irq_flags"
#517: FILE: drivers/misc/sgi-xp/xpc.h:1005:
+			if (irq_flags != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "irq_flags"
#522: FILE: drivers/misc/sgi-xp/xpc.h:1008:
+			if (irq_flags != NULL)

CHECK:CAMELCASE: Avoid CamelCase: <xpcSuccess>
#673: FILE: drivers/misc/sgi-xp/xpc_main.c:409:
+	if (xpc_setup_infrastructure(part) != xpcSuccess)

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'part->remote_vars_version'
#910: FILE: drivers/misc/sgi-xp/xpc_main.c:1024:
+		if (!XPC_SUPPORTS_DISENGAGE_REQUEST(part->
+		    remote_vars_version)) {

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!base"
#1043: FILE: drivers/misc/sgi-xp/xpc_channel.c:36:
+	if (*base == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!base"
#1057: FILE: drivers/misc/sgi-xp/xpc_channel.c:46:
+	if (*base == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ch->local_msgqueue"
#1133: FILE: drivers/misc/sgi-xp/xpc_channel.c:447:
+		if (ch->local_msgqueue == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ch->remote_msgqueue"
#1156: FILE: drivers/misc/sgi-xp/xpc_channel.c:493:
+		if (ch->remote_msgqueue == NULL)

CHECK:CAMELCASE: Avoid CamelCase: <xpcUnregistering>
#1267: FILE: drivers/misc/sgi-xp/xpc_channel.c:876:
+			else if (reason == xpcUnregistering)

CHECK:CAMELCASE: Avoid CamelCase: <xpcInterrupted>
#1396: FILE: drivers/misc/sgi-xp/xpc_channel.c:1607:
+		DBUG_ON(ch->reason == xpcInterrupted);

CHECK:CAMELCASE: Avoid CamelCase: <xpcTimeout>
#1427: FILE: drivers/misc/sgi-xp/xpc_channel.c:1686:
+		if (ret == xpcTimeout)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "msg"
#1438: FILE: drivers/misc/sgi-xp/xpc_channel.c:1746:
+		if (msg != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "msg"
#1564: FILE: drivers/misc/sgi-xp/xpc_channel.c:2097:
+	if (msg != NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!xpnet_device"
#1711: FILE: drivers/misc/sgi-xp/xpnet.c:612:
+	if (xpnet_device == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!base"
#1737: FILE: drivers/misc/sgi-xp/xpc_partition.c:78:
+	if (*base == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!base"
#1751: FILE: drivers/misc/sgi-xp/xpc_partition.c:88:
+	if (*base == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!amos_page"
#1787: FILE: drivers/misc/sgi-xp/xpc_partition.c:213:
+	if (amos_page == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1964: FILE: drivers/misc/sgi-xp/xpc_partition.c:835:
+			if (time_before(jiffies,
+			    part->disengage_request_timeout)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!remote_rp"
#1989: FILE: drivers/misc/sgi-xp/xpc_partition.c:993:
+	if (remote_rp == NULL)

CHECK:CAMELCASE: Avoid CamelCase: <xpcLocalPartid>
#2022: FILE: drivers/misc/sgi-xp/xpc_partition.c:1071:
+				if (ret == xpcLocalPartid)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000291920.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 21 checks, 1804 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000291920.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
