ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#66: FILE: aboot.c:19:
  * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

CHECK:CAMELCASE: Avoid CamelCase: <Elf64_Ehdr>
#104: FILE: aboot.c:75:
+	Elf64_Ehdr *elf;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Elf64_Phdr>
#105: FILE: aboot.c:76:
+	Elf64_Phdr *phdrs;

CHECK:SPACING: No space is necessary after a cast
#109: FILE: aboot.c:79:
+	elf  = (Elf64_Ehdr *) buf;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#129: FILE: aboot.c:82:
+	if (elf->e_ident[0] != 0x7f
+	    || elf->e_ident[1] != 'E'

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#130: FILE: aboot.c:83:
+	    || elf->e_ident[1] != 'E'
+	    || elf->e_ident[2] != 'L'

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#131: FILE: aboot.c:84:
+	    || elf->e_ident[2] != 'L'
+	    || elf->e_ident[3] != 'F') {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#136: FILE: aboot.c:89:
+	if (elf->e_ident[EI_CLASS] != ELFCLASS64
+	    || elf->e_ident[EI_DATA] != ELFDATA2LSB

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#137: FILE: aboot.c:90:
+	    || elf->e_ident[EI_DATA] != ELFDATA2LSB
+	    || elf->e_machine != EM_ALPHA) {

CHECK:SPACING: No space is necessary after a cast
#149: FILE: aboot.c:102:
+	    > (unsigned) blocksize) {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#149: FILE: aboot.c:102:
+	    > (unsigned) blocksize) {

CHECK:SPACING: No space is necessary after a cast
#151: FILE: aboot.c:104:
+		       (long) elf->e_phoff);

CHECK:SPACING: No space is necessary after a cast
#155: FILE: aboot.c:108:
+	phdrs = (struct elf_phdr *) (buf + elf->e_phoff);

ERROR:CODE_INDENT: code indent should use tabs where possible
#176: FILE: aboot.c:129:
+^I^I^I         "is %s\n",$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPLIT_STRING: quoted string split across lines
#176: FILE: aboot.c:129:
+			       "  Memory at %lx - %lx (PHDR %i) "
+			         "is %s\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: aboot.c:134:
+^I^I^I          "Not Found" :$

WARNING:SPLIT_STRING: quoted string split across lines
#221: FILE: aboot.c:143:
+				       "  Multiple BSS segments"
+				       " (PHDR %d)\n", i);

CHECK:SPACING: No space is necessary after a cast
#225: FILE: aboot.c:146:
+			bss_start = (char *) (phdrs[i].p_vaddr +

ERROR:TRAILING_WHITESPACE: trailing whitespace
#278: FILE: aboot.lds:21:
+  /DISCARD/ : { *(.eh_frame) } $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNNECESSARY_INT: Prefer 'long' over 'long int' as the int is unnecessary
#297: FILE: cons.c:21:
+extern long int dispatch(long, ...);	/* Need the full 64 bit return here...*/

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#297: FILE: cons.c:21:
+extern long int dispatch(long, ...);	/* Need the full 64 bit return here...*/

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long' should also have an identifier name
#297: FILE: cons.c:21:
+extern long int dispatch(long, ...);	/* Need the full 64 bit return here...*/

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:SPACING: No space is necessary after a cast
#327: FILE: disk.c:134:
+				printf("%02X ", (unsigned char) buf[j+16*i]);

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#327: FILE: disk.c:134:
+				printf("%02X ", (unsigned char) buf[j+16*i]);
 				                                     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#327: FILE: disk.c:134:
+				printf("%02X ", (unsigned char) buf[j+16*i]);
 				                                        ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000391009.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 6 warnings, 15 checks, 282 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000391009.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
