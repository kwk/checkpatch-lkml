WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#32: 
splitting the extents into multiple (upto three) extents and merging the
                                     ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#81: FILE: fs/ext4/extents.c:1159:
+	BUG_ON(path[depth].p_hdr == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!path[depth].p_hdr"
#81: FILE: fs/ext4/extents.c:1159:
+	BUG_ON(path[depth].p_hdr == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#84: FILE: fs/ext4/extents.c:1162:
+	while (ex < EXT_LAST_EXTENT(eh))
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#106: FILE: fs/ext4/extents.c:1184:
+			ext4_error(inode->i_sb, "ext4_ext_try_to_merge",
+			   "inode#%lu, eh->eh_entries = 0!", inode->i_ino);

WARNING:TYPO_SPELLING: 'upto' may be misspelled - perhaps 'up to'?
#150: FILE: fs/ext4/extents.c:2047:
+ * extent into multiple extents (upto three - one initialized and two
                                  ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#158: FILE: fs/ext4/extents.c:2055:
+int ext4_ext_convert_to_initialized(handle_t *handle, struct inode *inode,
+					struct ext4_ext_path *path,

WARNING:LINE_SPACING: Missing a blank line after declarations
#197: FILE: fs/ext4/extents.c:2094:
+		unsigned int newdepth;
+		ex3 = &newex;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#340: FILE: fs/ext4/extents.c:2271:
+			ret = ext4_ext_convert_to_initialized(handle, inode,
+								path, iblock,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#366: FILE: include/linux/ext4_fs_extents.h:205:
+extern int ext4_ext_try_to_merge(struct inode *inode,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct ext4_extent *' should also have an identifier name
#366: FILE: include/linux/ext4_fs_extents.h:205:
+extern int ext4_ext_try_to_merge(struct inode *inode,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000430154.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 5 warnings, 5 checks, 299 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000430154.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
