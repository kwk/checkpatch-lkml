WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#50: 
--- linux-2.6.24.pure/include/linux/shmem_fs.h  2006-11-29 22:57:37.000000000

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#60: FILE: include/linux/shmem_fs.h:33:
+       unsigned int  flags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: include/linux/shmem_fs.h:34:
+       int           policy;       /* Default NUMA memory alloc policy */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#62: FILE: include/linux/shmem_fs.h:35:
+       nodemask_t    policy_nodes; /* nodemask for preferred and bind */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#79: FILE: mm/shmem.c:1750:
+       struct shmem_sb_info *sbinfo = SHMEM_SB(dir->i_sb);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: mm/shmem.c:1753:
+       if (!inode)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#93: FILE: mm/shmem.c:1753:
+       if (!inode)
+               return error;

ERROR:CODE_INDENT: code indent should use tabs where possible
#94: FILE: mm/shmem.c:1754:
+               return error;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: mm/shmem.c:1754:
+               return error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: mm/shmem.c:1756:
+       error = security_inode_init_security(inode, dir, NULL, NULL,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#97: FILE: mm/shmem.c:1757:
+                                            NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#97: FILE: mm/shmem.c:1757:
+                                            NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#98: FILE: mm/shmem.c:1758:
+       if (error) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#98: FILE: mm/shmem.c:1758:
+       if (error) {
+               if (error != -EOPNOTSUPP) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#99: FILE: mm/shmem.c:1759:
+               if (error != -EOPNOTSUPP) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#99: FILE: mm/shmem.c:1759:
+               if (error != -EOPNOTSUPP) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#99: FILE: mm/shmem.c:1759:
+               if (error != -EOPNOTSUPP) {
                        iput(inode);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#111: FILE: mm/shmem.c:1763:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: mm/shmem.c:1764:
+       error = shmem_acl_init(inode, dir);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#113: FILE: mm/shmem.c:1765:
+       if (error) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#113: FILE: mm/shmem.c:1765:
+       if (error) {
+               iput(inode);

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#114: FILE: mm/shmem.c:1766:
+               iput(inode);
                ^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#114: FILE: mm/shmem.c:1766:
+               iput(inode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: mm/shmem.c:1766:
+               iput(inode);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: mm/shmem.c:1767:
+               return error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: mm/shmem.c:1767:
+               return error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: mm/shmem.c:1768:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: mm/shmem.c:1769:
+       if (dir->i_mode & S_ISGID) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#117: FILE: mm/shmem.c:1769:
+       if (dir->i_mode & S_ISGID) {
+               inode->i_gid = dir->i_gid;

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: mm/shmem.c:1770:
+               inode->i_gid = dir->i_gid;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: mm/shmem.c:1770:
+               inode->i_gid = dir->i_gid;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#119: FILE: mm/shmem.c:1771:
+               if (S_ISDIR(mode))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: mm/shmem.c:1771:
+               if (S_ISDIR(mode))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#119: FILE: mm/shmem.c:1771:
+               if (S_ISDIR(mode))
+                       inode->i_mode |= S_ISGID;

ERROR:CODE_INDENT: code indent should use tabs where possible
#120: FILE: mm/shmem.c:1772:
+                       inode->i_mode |= S_ISGID;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: mm/shmem.c:1772:
+                       inode->i_mode |= S_ISGID;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#121: FILE: mm/shmem.c:1773:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: mm/shmem.c:1775:
+       dir->i_size += BOGO_DIRENT_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#124: FILE: mm/shmem.c:1776:
+       dir->i_ctime = dir->i_mtime = CURRENT_TIME;$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#124: FILE: mm/shmem.c:1776:
+       dir->i_ctime = dir->i_mtime = CURRENT_TIME;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: mm/shmem.c:1777:
+       d_instantiate(dentry, inode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#126: FILE: mm/shmem.c:1778:
+       if ( S_ISDIR(mode)$

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#126: FILE: mm/shmem.c:1778:
+       if ( S_ISDIR(mode)
+         || !(sbinfo->flags & TMPFS_FL_AUTOREMOVE))
+       {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#126: FILE: mm/shmem.c:1778:
+       if ( S_ISDIR(mode)
[...]
+       {

ERROR:SPACING: space prohibited after that open parenthesis '('
#126: FILE: mm/shmem.c:1778:
+       if ( S_ISDIR(mode)

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#127: FILE: mm/shmem.c:1779:
+         || !(sbinfo->flags & TMPFS_FL_AUTOREMOVE))$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#127: FILE: mm/shmem.c:1779:
+       if ( S_ISDIR(mode)
+         || !(sbinfo->flags & TMPFS_FL_AUTOREMOVE))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: mm/shmem.c:1779:
+         || !(sbinfo->flags & TMPFS_FL_AUTOREMOVE))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#128: FILE: mm/shmem.c:1780:
+       {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#130: FILE: mm/shmem.c:1782:
+       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#130: FILE: mm/shmem.c:1782:
+       } else {
+               dir->i_size -= BOGO_DIRENT_SIZE;

ERROR:CODE_INDENT: code indent should use tabs where possible
#131: FILE: mm/shmem.c:1783:
+               dir->i_size -= BOGO_DIRENT_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: mm/shmem.c:1783:
+               dir->i_size -= BOGO_DIRENT_SIZE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#132: FILE: mm/shmem.c:1784:
+               drop_nlink(inode);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: mm/shmem.c:1784:
+               drop_nlink(inode);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#141: FILE: mm/shmem.c:1814:
+          immediately. We don't need to do anything here. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#141: FILE: mm/shmem.c:1814:
+       /* In auto-unlink mode, the newly created link would be unlinked
+          immediately. We don't need to do anything here. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#141: FILE: mm/shmem.c:1814:
+          immediately. We don't need to do anything here. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: mm/shmem.c:1815:
+       if (sbinfo->flags & TMPFS_FL_AUTOREMOVE)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#142: FILE: mm/shmem.c:1815:
+       if (sbinfo->flags & TMPFS_FL_AUTOREMOVE)
+               return 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: mm/shmem.c:1816:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: mm/shmem.c:1816:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: mm/shmem.c:2113:
+       unsigned int * flags,$

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#152: FILE: mm/shmem.c:2113:
+       unsigned int * flags,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#161: FILE: mm/shmem.c:2140:
+               /* These options don't take arguments: */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: mm/shmem.c:2141:
+               } else if (!strcmp(this_char,"autounlink")) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: mm/shmem.c:2141:
+               } else if (!strcmp(this_char,"autounlink")) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#162: FILE: mm/shmem.c:2141:
+               } else if (!strcmp(this_char,"autounlink")) {
+                       *flags |= TMPFS_FL_AUTOREMOVE;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#162: FILE: mm/shmem.c:2141:
+               } else if (!strcmp(this_char,"autounlink")) {
                                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: mm/shmem.c:2142:
+                       *flags |= TMPFS_FL_AUTOREMOVE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: mm/shmem.c:2142:
+                       *flags |= TMPFS_FL_AUTOREMOVE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#164: FILE: mm/shmem.c:2143:
+                       continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: mm/shmem.c:2143:
+                       continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: mm/shmem.c:2144:
+               } else if (!strcmp(this_char,"noautounlink")) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: mm/shmem.c:2144:
+               } else if (!strcmp(this_char,"noautounlink")) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#165: FILE: mm/shmem.c:2144:
+               } else if (!strcmp(this_char,"noautounlink")) {
+                       *flags &= ~TMPFS_FL_AUTOREMOVE;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#165: FILE: mm/shmem.c:2144:
+               } else if (!strcmp(this_char,"noautounlink")) {
                                            ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#166: FILE: mm/shmem.c:2145:
+                       *flags &= ~TMPFS_FL_AUTOREMOVE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: mm/shmem.c:2145:
+                       *flags &= ~TMPFS_FL_AUTOREMOVE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: mm/shmem.c:2146:
+                       continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: mm/shmem.c:2146:
+                       continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: mm/shmem.c:2148:
+               /* All other options need an argument */$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#170: FILE: mm/shmem.c:2149:
                } else {
+                       printk(KERN_ERR 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#172: FILE: mm/shmem.c:2150:
+                       printk(KERN_ERR $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: mm/shmem.c:2150:
+                       printk(KERN_ERR $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: mm/shmem.c:2150:
+                       printk(KERN_ERR $

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#172: FILE: mm/shmem.c:2150:
+                       printk(KERN_ERR 

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#180: FILE: mm/shmem.c:2221:
+       unsigned int sbflags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#183: FILE: mm/shmem.c:2224:
+       sbflags = sbinfo->flags;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: mm/shmem.c:2226:
+                               &max_inodes, &sbflags, &policy, &policy_nodes))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#186: FILE: mm/shmem.c:2226:
+                               &max_inodes, &sbflags, &policy, &policy_nodes))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: mm/shmem.c:2252:
+       sbinfo->flags = sbflags;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: mm/shmem.c:2279:
+       unsigned int flags = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: mm/shmem.c:2295:
+                                       &inodes, &flags, &policy, &policy_nodes))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: mm/shmem.c:2295:
+                                       &inodes, &flags, &policy, &policy_nodes))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: mm/shmem.c:2314:
+       sbinfo->flags = flags;$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000200384.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 30 errors, 64 warnings, 2 checks, 155 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000200384.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
