WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#27: 
allowed in the cache for performance reasons.  Descriptions of the cache operation

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#52: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#217: FILE: security/talpa/talpa.h:102:
+extern ssize_t talpa_increment_seqno(struct talpa_configuration *cfg, char *buf, size_t len);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#251: FILE: security/talpa/talpa_cache.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#267: FILE: security/talpa/talpa_cache.c:17:
+ *  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#279: FILE: security/talpa/talpa_cache.c:29:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#308: FILE: security/talpa/talpa_cache.c:58:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#333: FILE: security/talpa/talpa_cache.c:83:
+	BUG_ON(serial > seqno);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#334: FILE: security/talpa/talpa_cache.c:84:
+	BUG_ON(serial < -seqno);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#336: FILE: security/talpa/talpa_cache.c:86:
+	/* If serial == seqno we already approved this inode.
+	   Opposite rules are valid for negative cachings. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#336: FILE: security/talpa/talpa_cache.c:86:
+	   Opposite rules are valid for negative cachings. */

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#355: FILE: security/talpa/talpa_cache.c:105:
+	if (atomic_read(&inode->i_writecount) == 1 && flags&(O_WRONLY|O_RDWR|O_APPEND|O_CREAT|O_TRUNC))

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#355: FILE: security/talpa/talpa_cache.c:105:
+	if (atomic_read(&inode->i_writecount) == 1 && flags&(O_WRONLY|O_RDWR|O_APPEND|O_CREAT|O_TRUNC))
 	                                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#355: FILE: security/talpa/talpa_cache.c:105:
+	if (atomic_read(&inode->i_writecount) == 1 && flags&(O_WRONLY|O_RDWR|O_APPEND|O_CREAT|O_TRUNC))
 	                                                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#355: FILE: security/talpa/talpa_cache.c:105:
+	if (atomic_read(&inode->i_writecount) == 1 && flags&(O_WRONLY|O_RDWR|O_APPEND|O_CREAT|O_TRUNC))
 	                                                                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#355: FILE: security/talpa/talpa_cache.c:105:
+	if (atomic_read(&inode->i_writecount) == 1 && flags&(O_WRONLY|O_RDWR|O_APPEND|O_CREAT|O_TRUNC))
 	                                                                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#355: FILE: security/talpa/talpa_cache.c:105:
+	if (atomic_read(&inode->i_writecount) == 1 && flags&(O_WRONLY|O_RDWR|O_APPEND|O_CREAT|O_TRUNC))
 	                                                                                     ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#369: FILE: security/talpa/talpa_cache.c:119:
+		/* Cache inode on authoritative allow if it is
+		   not writable elsewhere, we could cache here,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#371: FILE: security/talpa/talpa_cache.c:121:
+		   scan and the last write operation.... */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#385: FILE: security/talpa/talpa_cache.c:135:
+	/* Cache inode on authoritative deny if it is
+	   not writable elsewhere. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#385: FILE: security/talpa/talpa_cache.c:135:
+	   not writable elsewhere. */

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#412: FILE: security/talpa/talpa_cache.c:162:
+		.mode = S_IRUSR|S_IWUSR|S_IRGRP,
 		               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#412: FILE: security/talpa/talpa_cache.c:162:
+		.mode = S_IRUSR|S_IWUSR|S_IRGRP,
 		                       ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR|S_IWUSR|S_IRGRP' are not preferred. Consider using octal permissions '0640'.
#412: FILE: security/talpa/talpa_cache.c:162:
+		.mode = S_IRUSR|S_IWUSR|S_IRGRP,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#419: FILE: security/talpa/talpa_cache.c:169:
+		.mode = S_IRUSR,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#425: FILE: security/talpa/talpa_cache.c:175:
+		.mode = S_IWUSR,

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#430: FILE: security/talpa/talpa_cache.c:180:
+		.mode = S_IRUSR|S_IRGRP,
 		               ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR|S_IRGRP' are not preferred. Consider using octal permissions '0440'.
#430: FILE: security/talpa/talpa_cache.c:180:
+		.mode = S_IRUSR|S_IRGRP,

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#436: FILE: security/talpa/talpa_cache.c:186:
+		.mode = S_IRUSR|S_IRGRP,
 		               ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR|S_IRGRP' are not preferred. Consider using octal permissions '0440'.
#436: FILE: security/talpa/talpa_cache.c:186:
+		.mode = S_IRUSR|S_IRGRP,

WARNING:USE_DEVICE_INITCALL: please use device_initcall() or more appropriate function instead of __initcall() (see include/linux/init.h)
#457: FILE: security/talpa/talpa_cache.c:207:
+__initcall(talpa_cache_init);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#464: FILE: security/talpa/talpa_cache.h:1:
+#include "talpa.h"

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#467: FILE: security/talpa/talpa_cache.h:4:
+extern enum talpa_action talpa_cache_deny(struct talpa_file_vetting *tfv);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#468: FILE: security/talpa/talpa_cache.h:5:
+extern enum talpa_action talpa_cache_allow(struct talpa_file_vetting *tfv);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#469: FILE: security/talpa/talpa_cache.h:6:
+extern enum talpa_action talpa_cache_examine(struct talpa_file_vetting *tfv);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#520: FILE: security/talpa/talpa_evaluation_calls.h:1:
+#include <linux/mutex.h>

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000244786.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 20 warnings, 15 checks, 423 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000244786.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
