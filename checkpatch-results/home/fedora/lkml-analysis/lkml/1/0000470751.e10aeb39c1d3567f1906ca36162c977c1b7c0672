WARNING:TYPO_SPELLING: 'preceeding' may be misspelled - perhaps 'preceding'?
#27: 
After running SetPageUptodate, preceeding stores to the page contents to
                               ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#28: 
actually bring it uptodate may not be ordered with the store to set the page

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#28: 
actually bring it uptodate may not be ordered with the store to set the page
                  ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#29: 
uptodate.
^^^^^^^^

WARNING:TYPO_SPELLING: 'preceeding' may be misspelled - perhaps 'preceding'?
#39: 
preceeding stores before the store to page flags, and a new PageUptodate_NoLock
^^^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#48: 
with the rest of the page management, by marking anon pages as uptodate
                                                               ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#49: 
when they _are_ uptodate, rather than when our implementation requires
                ^^^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <__SetPageUptodate>
#115: FILE: include/linux/page-flags.h:152:
+static inline void __SetPageUptodate(struct page *page)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#125: FILE: include/linux/page-flags.h:160:
+	 * so all previous writes that served to bring the page uptodate are
 	                                                        ^^^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <SetNewPageUptodate>
#145: FILE: include/linux/page-flags.h:180:
+static inline void SetNewPageUptodate(struct page *page)

CHECK:BRACES: Unbalanced braces around else statement
#185: FILE: mm/memory.c:1466:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#329: FILE: mm/page_io.c:137:
+	BUG_ON(PageUptodate(page));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#341: FILE: mm/swap_state.c:152:
+	BUG_ON(!PageUptodate(page));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000470751.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 10 warnings, 3 checks, 284 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000470751.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
