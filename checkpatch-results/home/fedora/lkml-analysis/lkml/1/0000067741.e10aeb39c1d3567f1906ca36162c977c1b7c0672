WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
Gitweb:     http://git.kernel.org/tip/dd68ada2d417e57b848822a1407b5317a54136c5

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#310: FILE: tools/perf/builtin-annotate.c:939:
+		fputs("'.' is the only non valid --field-separator argument\n",
+				stderr);

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#664: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#669: FILE: tools/perf/util/sort.c:1:
+#include "sort.h"

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#676: FILE: tools/perf/util/sort.c:8:
+int sort__need_collapse = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#677: FILE: tools/perf/util/sort.c:9:
+int sort__has_parent = 0;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#683: FILE: tools/perf/util/sort.c:15:
+char * field_sep;

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#760: FILE: tools/perf/util/sort.c:92:
+	if (!field_sep)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#762: FILE: tools/perf/util/sort.c:94:
+	else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#764: FILE: tools/perf/util/sort.c:96:
+		char *bf = NULL;
+		n = vasprintf(&bf, fmt, ap);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sep"
#770: FILE: tools/perf/util/sort.c:102:
+				if (sep == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LINE_SPACING: Please don't use multiple blank lines
#834: FILE: tools/perf/util/sort.c:166:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#917: FILE: tools/perf/util/sort.c:249:
+			int ret = regcomp(&parent_regex, parent_pattern, REG_EXTENDED);
+			if (ret) {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#943: FILE: tools/perf/util/sort.h:1:
+#ifndef __PERF_SORT_H

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hist_entry *' should also have an identifier name
#1010: FILE: tools/perf/util/sort.h:68:
+	int64_t (*cmp)(struct hist_entry *, struct hist_entry *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hist_entry *' should also have an identifier name
#1010: FILE: tools/perf/util/sort.h:68:
+	int64_t (*cmp)(struct hist_entry *, struct hist_entry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hist_entry *' should also have an identifier name
#1011: FILE: tools/perf/util/sort.h:69:
+	int64_t (*collapse)(struct hist_entry *, struct hist_entry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hist_entry *' should also have an identifier name
#1011: FILE: tools/perf/util/sort.h:69:
+	int64_t (*collapse)(struct hist_entry *, struct hist_entry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hist_entry *' should also have an identifier name
#1012: FILE: tools/perf/util/sort.h:70:
+	size_t	(*print)(FILE *fp, struct hist_entry *, unsigned int width);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1020: FILE: tools/perf/util/sort.h:78:
+extern int repsep_fprintf(FILE *fp, const char *fmt, ...);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1021: FILE: tools/perf/util/sort.h:79:
+extern size_t sort__thread_print(FILE *, struct hist_entry *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'FILE *' should also have an identifier name
#1021: FILE: tools/perf/util/sort.h:79:
+extern size_t sort__thread_print(FILE *, struct hist_entry *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hist_entry *' should also have an identifier name
#1021: FILE: tools/perf/util/sort.h:79:
+extern size_t sort__thread_print(FILE *, struct hist_entry *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#1021: FILE: tools/perf/util/sort.h:79:
+extern size_t sort__thread_print(FILE *, struct hist_entry *, unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1022: FILE: tools/perf/util/sort.h:80:
+extern size_t sort__comm_print(FILE *, struct hist_entry *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'FILE *' should also have an identifier name
#1022: FILE: tools/perf/util/sort.h:80:
+extern size_t sort__comm_print(FILE *, struct hist_entry *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hist_entry *' should also have an identifier name
#1022: FILE: tools/perf/util/sort.h:80:
+extern size_t sort__comm_print(FILE *, struct hist_entry *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#1022: FILE: tools/perf/util/sort.h:80:
+extern size_t sort__comm_print(FILE *, struct hist_entry *, unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1023: FILE: tools/perf/util/sort.h:81:
+extern size_t sort__dso_print(FILE *, struct hist_entry *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'FILE *' should also have an identifier name
#1023: FILE: tools/perf/util/sort.h:81:
+extern size_t sort__dso_print(FILE *, struct hist_entry *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hist_entry *' should also have an identifier name
#1023: FILE: tools/perf/util/sort.h:81:
+extern size_t sort__dso_print(FILE *, struct hist_entry *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#1023: FILE: tools/perf/util/sort.h:81:
+extern size_t sort__dso_print(FILE *, struct hist_entry *, unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1024: FILE: tools/perf/util/sort.h:82:
+extern size_t sort__sym_print(FILE *, struct hist_entry *, unsigned int __used);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'FILE *' should also have an identifier name
#1024: FILE: tools/perf/util/sort.h:82:
+extern size_t sort__sym_print(FILE *, struct hist_entry *, unsigned int __used);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hist_entry *' should also have an identifier name
#1024: FILE: tools/perf/util/sort.h:82:
+extern size_t sort__sym_print(FILE *, struct hist_entry *, unsigned int __used);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int __used' should also have an identifier name
#1024: FILE: tools/perf/util/sort.h:82:
+extern size_t sort__sym_print(FILE *, struct hist_entry *, unsigned int __used);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1025: FILE: tools/perf/util/sort.h:83:
+extern int64_t cmp_null(void *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1025: FILE: tools/perf/util/sort.h:83:
+extern int64_t cmp_null(void *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1025: FILE: tools/perf/util/sort.h:83:
+extern int64_t cmp_null(void *, void *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1026: FILE: tools/perf/util/sort.h:84:
+extern int64_t sort__thread_cmp(struct hist_entry *, struct hist_entry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hist_entry *' should also have an identifier name
#1026: FILE: tools/perf/util/sort.h:84:
+extern int64_t sort__thread_cmp(struct hist_entry *, struct hist_entry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hist_entry *' should also have an identifier name
#1026: FILE: tools/perf/util/sort.h:84:
+extern int64_t sort__thread_cmp(struct hist_entry *, struct hist_entry *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1027: FILE: tools/perf/util/sort.h:85:
+extern int64_t sort__comm_cmp(struct hist_entry *, struct hist_entry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hist_entry *' should also have an identifier name
#1027: FILE: tools/perf/util/sort.h:85:
+extern int64_t sort__comm_cmp(struct hist_entry *, struct hist_entry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hist_entry *' should also have an identifier name
#1027: FILE: tools/perf/util/sort.h:85:
+extern int64_t sort__comm_cmp(struct hist_entry *, struct hist_entry *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1028: FILE: tools/perf/util/sort.h:86:
+extern int64_t sort__comm_collapse(struct hist_entry *, struct hist_entry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hist_entry *' should also have an identifier name
#1028: FILE: tools/perf/util/sort.h:86:
+extern int64_t sort__comm_collapse(struct hist_entry *, struct hist_entry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hist_entry *' should also have an identifier name
#1028: FILE: tools/perf/util/sort.h:86:
+extern int64_t sort__comm_collapse(struct hist_entry *, struct hist_entry *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1029: FILE: tools/perf/util/sort.h:87:
+extern int64_t sort__dso_cmp(struct hist_entry *, struct hist_entry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hist_entry *' should also have an identifier name
#1029: FILE: tools/perf/util/sort.h:87:
+extern int64_t sort__dso_cmp(struct hist_entry *, struct hist_entry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hist_entry *' should also have an identifier name
#1029: FILE: tools/perf/util/sort.h:87:
+extern int64_t sort__dso_cmp(struct hist_entry *, struct hist_entry *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1030: FILE: tools/perf/util/sort.h:88:
+extern int64_t sort__sym_cmp(struct hist_entry *, struct hist_entry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hist_entry *' should also have an identifier name
#1030: FILE: tools/perf/util/sort.h:88:
+extern int64_t sort__sym_cmp(struct hist_entry *, struct hist_entry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hist_entry *' should also have an identifier name
#1030: FILE: tools/perf/util/sort.h:88:
+extern int64_t sort__sym_cmp(struct hist_entry *, struct hist_entry *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1031: FILE: tools/perf/util/sort.h:89:
+extern int64_t sort__parent_cmp(struct hist_entry *, struct hist_entry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hist_entry *' should also have an identifier name
#1031: FILE: tools/perf/util/sort.h:89:
+extern int64_t sort__parent_cmp(struct hist_entry *, struct hist_entry *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hist_entry *' should also have an identifier name
#1031: FILE: tools/perf/util/sort.h:89:
+extern int64_t sort__parent_cmp(struct hist_entry *, struct hist_entry *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1032: FILE: tools/perf/util/sort.h:90:
+extern size_t sort__parent_print(FILE *, struct hist_entry *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'FILE *' should also have an identifier name
#1032: FILE: tools/perf/util/sort.h:90:
+extern size_t sort__parent_print(FILE *, struct hist_entry *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct hist_entry *' should also have an identifier name
#1032: FILE: tools/perf/util/sort.h:90:
+extern size_t sort__parent_print(FILE *, struct hist_entry *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#1032: FILE: tools/perf/util/sort.h:90:
+extern size_t sort__parent_print(FILE *, struct hist_entry *, unsigned int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1033: FILE: tools/perf/util/sort.h:91:
+extern int sort_dimension__add(const char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#1033: FILE: tools/perf/util/sort.h:91:
+extern int sort_dimension__add(const char *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000067741.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 41 warnings, 19 checks, 945 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000067741.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
