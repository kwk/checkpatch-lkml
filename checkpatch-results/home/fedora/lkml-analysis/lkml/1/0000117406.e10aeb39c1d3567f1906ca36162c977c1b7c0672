WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#84: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#89: FILE: include/net/ieee802154/mac802154.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#104: FILE: include/net/ieee802154/mac802154.h:16:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#105: FILE: include/net/ieee802154/mac802154.h:17:
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#113: FILE: include/net/ieee802154/mac802154.h:25:
+typedef enum {

CHECK:BIT_MACRO: Prefer using the BIT macro
#143: FILE: include/net/ieee802154/mac802154.h:55:
+#define IEEE802154_FLAGS_OMIT_CKSUM	(1 << 0)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#198: FILE: net/mac802154/Kconfig:1:
+config MAC802154
+	tristate "Generic IEEE 802.15.4 Soft Networking Stack (mac802154)"
+	depends on IEEE802154 && EXPERIMENTAL
+	select CRC_ITU_T
+	---help---
+	  This option enables the hardware independent IEEE 802.15.4
+	  networking stack for SoftMAC devices (the ones implementing
+	  only PHY level of IEEE 802.15.4 standard).
+
+	  If you plan to use HardMAC IEEE 802.15.4 devices, you can
+          say N here. Alternatievly you can say M to compile it as
+	  module.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:TYPO_SPELLING: 'Alternatievly' may be misspelled - perhaps 'Alternatively'?
#208: FILE: net/mac802154/Kconfig:11:
+          say N here. Alternatievly you can say M to compile it as
                       ^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:DEPRECATED_VARIABLE: Use of EXTRA_CFLAGS is deprecated, please use `ccflags-y instead.
#221: FILE: net/mac802154/Makefile:5:
+EXTRA_CFLAGS += -Wall -DDEBUG

EXTRA_{A,C,CPP,LD}FLAGS are deprecated and should be replaced by the new
flags added via commit f77bf01425b1 ("kbuild: introduce ccflags-y,
asflags-y and ldflags-y").

The following conversion scheme maybe used::

  EXTRA_AFLAGS    ->  asflags-y
  EXTRA_CFLAGS    ->  ccflags-y
  EXTRA_CPPFLAGS  ->  cppflags-y
  EXTRA_LDFLAGS   ->  ldflags-y

See:

  1. https://lore.kernel.org/lkml/20070930191054.GA15876@uranus.ravnborg.org/
  2. https://lore.kernel.org/lkml/1313384834-24433-12-git-send-email-lacombar@gmail.com/
  3. https://www.kernel.org/doc/html/latest/kbuild/makefiles.html#compilation-flags

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#228: FILE: net/mac802154/beacon.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#243: FILE: net/mac802154/beacon.c:16:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#244: FILE: net/mac802154/beacon.c:17:
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#307: FILE: net/mac802154/beacon.c:80:
+ * */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#310: FILE: net/mac802154/beacon.c:83:
+#define IEEE802154_BEACON_SF_SO(x)		((x & 0xf) << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#312: FILE: net/mac802154/beacon.c:85:
+#define IEEE802154_BEACON_SF_PANCOORD		(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#313: FILE: net/mac802154/beacon.c:86:
+#define IEEE802154_BEACON_SF_CANASSOC		(1 << 15)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#314: FILE: net/mac802154/beacon.c:87:
+#define IEEE802154_BEACON_GTS_COUNT(x)		(x << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#315: FILE: net/mac802154/beacon.c:88:
+#define IEEE802154_BEACON_GTS_PERMIT		(1 << 7)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#316: FILE: net/mac802154/beacon.c:89:
+#define IEEE802154_BEACON_PA_SHORT(x)		((x & 7) << 0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'x' may be better as '(x)' to avoid precedence issues
#317: FILE: net/mac802154/beacon.c:90:
+#define IEEE802154_BEACON_PA_LONG(x)		((x & 7) << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#320: FILE: net/mac802154/beacon.c:93:
+#define IEEE802154_BEACON_FLAG_PANCOORD		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#321: FILE: net/mac802154/beacon.c:94:
+#define IEEE802154_BEACON_FLAG_CANASSOC		(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#322: FILE: net/mac802154/beacon.c:95:
+#define IEEE802154_BEACON_FLAG_GTSPERMIT		(1 << 2)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#328: FILE: net/mac802154/beacon.c:101:
+};
+/*

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#329: FILE: net/mac802154/beacon.c:102:
+/*
+ * @dev device

WARNING:TYPO_SPELLING: 'wheather' may be misspelled - perhaps 'weather'?
#335: FILE: net/mac802154/beacon.c:108:
+ * @gts_permit - wheather we allow GTS requests
                  ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#347: FILE: net/mac802154/beacon.c:120:
+ *
+*/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#349: FILE: net/mac802154/beacon.c:122:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#351: FILE: net/mac802154/beacon.c:124:
+int ieee802154_send_beacon(struct net_device *dev, struct ieee802154_addr *saddr,
+		u16 pan_id, const u8 *buf, int len,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#363: FILE: net/mac802154/beacon.c:136:
+	BUG_ON(dev->type != ARPHRD_IEEE802154);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#417: FILE: net/mac802154/beacon.c:190:
+ * of beacon field and MAC frame already parsed into MAC_CB */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#420: FILE: net/mac802154/beacon.c:193:
+int parse_beacon_frame(struct sk_buff *skb, u8 *buf,
+		int *flags, struct list_head *al)

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*pd)...) over kzalloc(sizeof(struct ieee802154_pandsc)...)
#428: FILE: net/mac802154/beacon.c:201:
+	pd = kzalloc(sizeof(struct ieee802154_pandsc), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:ENOTSUPP: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
#447: FILE: net/mac802154/beacon.c:220:
+		return -ENOTSUPP;

ENOTSUPP is not a standard error code and should be avoided in new patches.
EOPNOTSUPP should be used instead.

See: https://lore.kernel.org/netdev/20200510182252.GA411829@lunn.ch/

WARNING:ENOTSUPP: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
#453: FILE: net/mac802154/beacon.c:226:
+		return -ENOTSUPP;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#463: FILE: net/mac802154/beacon.c:236:
+	BUG_ON(skb->len - offt < 0);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#476: FILE: net/mac802154/beacon.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#491: FILE: net/mac802154/beacon.h:16:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#492: FILE: net/mac802154/beacon.h:17:
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.$

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#511: FILE: net/mac802154/beacon.h:36:
+ * because no PAN descriptor storage is implemented yet */

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#515: FILE: net/mac802154/beacon.h:40:
+int parse_beacon_frame(struct sk_buff *skb, u8 * buf,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#516: FILE: net/mac802154/beacon.h:41:
+int parse_beacon_frame(struct sk_buff *skb, u8 * buf,
+		int *flags, struct list_head *al);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#519: FILE: net/mac802154/beacon.h:44:
+int ieee802154_send_beacon(struct net_device *dev, struct ieee802154_addr *saddr,
+		u16 pan_id, const u8 *buf, int len,

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#530: FILE: net/mac802154/beacon_hash.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#545: FILE: net/mac802154/beacon_hash.c:16:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#546: FILE: net/mac802154/beacon_hash.c:17:
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*node)...) over kzalloc(sizeof(struct beacon_node)...)
#571: FILE: net/mac802154/beacon_hash.c:42:
+	struct beacon_node *node = kzalloc(sizeof(struct beacon_node), GFP_KERNEL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#573: FILE: net/mac802154/beacon_hash.c:44:
+	struct hlist_head *list = &beacon_hash[beacon_hashfn(coord_addr, pan_addr)];
+	memcpy(&node->coord_addr, coord_addr, sizeof(struct ieee802154_addr));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#580: FILE: net/mac802154/beacon_hash.c:51:
+struct beacon_node *ieee802154_beacon_find_pan(struct ieee802154_addr *coord_addr,
+						u16 pan_addr)

WARNING:LINE_SPACING: Missing a blank line after declarations
#584: FILE: net/mac802154/beacon_hash.c:55:
+	struct hlist_node *tmp;
+	list = &beacon_hash[beacon_hashfn(coord_addr, pan_addr)];

WARNING:LINE_SPACING: Missing a blank line after declarations
#589: FILE: net/mac802154/beacon_hash.c:60:
+		struct beacon_node *entry = hlist_entry(tmp, struct beacon_node, list);
+		if (entry->pan_addr == pan_addr)

WARNING:LINE_SPACING: Missing a blank line after declarations
#620: FILE: net/mac802154/beacon_hash.c:91:
+	struct hlist_node *tmp;
+	pr_debug("beacon hash dump begin\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#624: FILE: net/mac802154/beacon_hash.c:95:
+		struct beacon_node *entry;
+		hlist_for_each(tmp, &beacon_hash[i]) {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#639: FILE: net/mac802154/beacon_hash.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#654: FILE: net/mac802154/beacon_hash.h:16:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#655: FILE: net/mac802154/beacon_hash.h:17:
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#672: FILE: net/mac802154/beacon_hash.h:34:
+};
+struct beacon_node *ieee802154_beacon_find_pan(struct ieee802154_addr *coord_addr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#673: FILE: net/mac802154/beacon_hash.h:35:
+struct beacon_node *ieee802154_beacon_find_pan(struct ieee802154_addr *coord_addr,
+			u16 pan_addr);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#685: FILE: net/mac802154/dev.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#698: FILE: net/mac802154/dev.c:14:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#699: FILE: net/mac802154/dev.c:15:
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.$

WARNING:LINE_SPACING: Missing a blank line after declarations
#752: FILE: net/mac802154/dev.c:68:
+	struct ieee802154_netdev_priv *priv;
+	priv = netdev_priv(dev);

WARNING:LINE_SPACING: Missing a blank line after declarations
#757: FILE: net/mac802154/dev.c:73:
+		u8 *data = skb_put(skb, 2);
+		data[0] = crc & 0xff;

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#763: FILE: net/mac802154/dev.c:79:
+	skb->iif = dev->ifindex;
 	     ^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#777: FILE: net/mac802154/dev.c:93:
+	struct ieee802154_netdev_priv *priv;
+	priv = netdev_priv(dev);

WARNING:LINE_SPACING: Missing a blank line after declarations
#785: FILE: net/mac802154/dev.c:101:
+	struct ieee802154_netdev_priv *priv;
+	dev->priv_flags &= ~IFF_IEEE802154_COORD;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#792: FILE: net/mac802154/dev.c:108:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#797: FILE: net/mac802154/dev.c:113:
+	struct sockaddr_ieee802154 *sa = (struct sockaddr_ieee802154 *)&ifr->ifr_addr;
+	switch (cmd) {

WARNING:LONG_LINE: line length of 112 exceeds 100 columns
#799: FILE: net/mac802154/dev.c:115:
+		if (priv->pan_id == IEEE802154_PANID_BROADCAST || priv->short_addr == IEEE802154_ADDR_BROADCAST)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:TYPO_SPELLING: 'DEBUGing' may be misspelled - perhaps 'Debugging'?
#808: FILE: net/mac802154/dev.c:124:
+		dev_warn(&dev->dev, "Using DEBUGing ioctl SIOCSIFADDR isn't recommened!\n");
 		                           ^^^^^^^^

WARNING:TYPO_SPELLING: 'recommened' may be misspelled - perhaps 'recommended'?
#808: FILE: net/mac802154/dev.c:124:
+		dev_warn(&dev->dev, "Using DEBUGing ioctl SIOCSIFADDR isn't recommened!\n");
 		                                                            ^^^^^^^^^^

WARNING:LONG_LINE: line length of 170 exceeds 100 columns
#810: FILE: net/mac802154/dev.c:126:
+			sa->addr.pan_id == IEEE802154_PANID_BROADCAST || sa->addr.short_addr == IEEE802154_ADDR_BROADCAST || sa->addr.short_addr == IEEE802154_ADDR_UNDEF)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#810: FILE: net/mac802154/dev.c:126:
+		if (sa->family != AF_IEEE802154 || sa->addr.addr_type != IEEE802154_ADDR_SHORT ||
+			sa->addr.pan_id == IEEE802154_PANID_BROADCAST || sa->addr.short_addr == IEEE802154_ADDR_BROADCAST || sa->addr.short_addr == IEEE802154_ADDR_UNDEF)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#832: FILE: net/mac802154/dev.c:148:
+static int ieee802154_header_create(struct sk_buff *skb, struct net_device *dev,
+			   unsigned short type, const void *_daddr,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#833: FILE: net/mac802154/dev.c:149:
+			   const void *_saddr, unsigned len)

WARNING:LONG_LINE: line length of 159 exceeds 100 columns
#856: FILE: net/mac802154/dev.c:172:
+		if (priv->short_addr == IEEE802154_ADDR_BROADCAST || priv->short_addr == IEEE802154_ADDR_UNDEF || priv->pan_id == IEEE802154_PANID_BROADCAST) {

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#886: FILE: net/mac802154/dev.c:202:
+		if ((saddr->pan_id == daddr->pan_id) && (saddr->pan_id != IEEE802154_PANID_BROADCAST))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'saddr->pan_id == daddr->pan_id'
#886: FILE: net/mac802154/dev.c:202:
+		if ((saddr->pan_id == daddr->pan_id) && (saddr->pan_id != IEEE802154_PANID_BROADCAST))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'saddr->pan_id != IEEE802154_PANID_BROADCAST'
#886: FILE: net/mac802154/dev.c:202:
+		if ((saddr->pan_id == daddr->pan_id) && (saddr->pan_id != IEEE802154_PANID_BROADCAST))

CHECK:BRACES: Unbalanced braces around else statement
#888: FILE: net/mac802154/dev.c:204:
+		else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#962: FILE: net/mac802154/dev.c:278:
+
+	}

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#999: FILE: net/mac802154/dev.c:315:
+
+	}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1046: FILE: net/mac802154/dev.c:362:
+	dev = alloc_netdev(sizeof(struct ieee802154_netdev_priv),
+			"wpan%d", ieee802154_netdev_setup);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1048: FILE: net/mac802154/dev.c:364:
+		printk(KERN_ERR "Failure to initialize IEEE802154 device\n");

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1076: FILE: net/mac802154/dev.c:392:
+	/*
+	 * If the name is a format string the caller wants us to do a

WARNING:LINE_SPACING: Missing a blank line after declarations
#1100: FILE: net/mac802154/dev.c:416:
+	struct net_device *dev = ndp->dev;
+	dev_put(ndp->hw->hw.netdev);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1130: FILE: net/mac802154/dev.c:446:
+	BUG_ON(!skb || !skb->dev);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1131: FILE: net/mac802154/dev.c:447:
+	BUG_ON(!MAC_CB_IS_ACKREQ(skb));

WARNING:LINE_SPACING: Missing a blank line after declarations
#1158: FILE: net/mac802154/dev.c:474:
+	int ret;
+	ret = parse_beacon_frame(skb, NULL, &flags, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1191: FILE: net/mac802154/dev.c:507:
+	pr_debug("%s Getting packet via slave interface %s\n",
+				__func__, ndp->dev->name);

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#1203: FILE: net/mac802154/dev.c:519:
+		if (MAC_CB(skb)->da.pan_id != ndp->pan_id && MAC_CB(skb)->da.pan_id != IEEE802154_PANID_BROADCAST)

WARNING:LONG_LINE: line length of 114 exceeds 100 columns
#1214: FILE: net/mac802154/dev.c:530:
+		if (MAC_CB(skb)->da.pan_id != ndp->pan_id && MAC_CB(skb)->da.pan_id != IEEE802154_PANID_BROADCAST)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1250: FILE: net/mac802154/dev.c:566:
+	BUG_ON(skb->len < 1);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1262: FILE: net/mac802154/dev.c:578:
+	BUG_ON(skb->len < 2);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1271: FILE: net/mac802154/dev.c:587:
+	BUG_ON(skb->len < IEEE802154_ADDR_LEN);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'skb' - possible side-effects?
#1277: FILE: net/mac802154/dev.c:593:
+#define IEEE802154_FETCH_U8(skb, var)		\
+	do {					\
+		if (skb->len < 1)		\
+			goto exit_error;	\
+		var = fetch_skb_u8(skb);	\
+	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'skb' may be better as '(skb)' to avoid precedence issues
#1277: FILE: net/mac802154/dev.c:593:
+#define IEEE802154_FETCH_U8(skb, var)		\
+	do {					\
+		if (skb->len < 1)		\
+			goto exit_error;	\
+		var = fetch_skb_u8(skb);	\
+	} while (0)

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#1277: FILE: net/mac802154/dev.c:593:
+#define IEEE802154_FETCH_U8(skb, var)		\
+	do {					\
+		if (skb->len < 1)		\
+			goto exit_error;	\
+		var = fetch_skb_u8(skb);	\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'skb' - possible side-effects?
#1284: FILE: net/mac802154/dev.c:600:
+#define IEEE802154_FETCH_U16(skb, var)		\
+	do {					\
+		if (skb->len < 2)		\
+			goto exit_error;	\
+		var = fetch_skb_u16(skb);	\
+	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'skb' may be better as '(skb)' to avoid precedence issues
#1284: FILE: net/mac802154/dev.c:600:
+#define IEEE802154_FETCH_U16(skb, var)		\
+	do {					\
+		if (skb->len < 2)		\
+			goto exit_error;	\
+		var = fetch_skb_u16(skb);	\
+	} while (0)

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#1284: FILE: net/mac802154/dev.c:600:
+#define IEEE802154_FETCH_U16(skb, var)		\
+	do {					\
+		if (skb->len < 2)		\
+			goto exit_error;	\
+		var = fetch_skb_u16(skb);	\
+	} while (0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'skb' - possible side-effects?
#1291: FILE: net/mac802154/dev.c:607:
+#define IEEE802154_FETCH_U64(skb, var)			\
+	do {						\
+		if (skb->len < IEEE802154_ADDR_LEN)	\
+			goto exit_error;		\
+		fetch_skb_u64(skb, &var);		\
+	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'skb' may be better as '(skb)' to avoid precedence issues
#1291: FILE: net/mac802154/dev.c:607:
+#define IEEE802154_FETCH_U64(skb, var)			\
+	do {						\
+		if (skb->len < IEEE802154_ADDR_LEN)	\
+			goto exit_error;		\
+		fetch_skb_u64(skb, &var);		\
+	} while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'var' may be better as '(var)' to avoid precedence issues
#1291: FILE: net/mac802154/dev.c:607:
+#define IEEE802154_FETCH_U64(skb, var)			\
+	do {						\
+		if (skb->len < IEEE802154_ADDR_LEN)	\
+			goto exit_error;		\
+		fetch_skb_u64(skb, &var);		\
+	} while (0)

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#1291: FILE: net/mac802154/dev.c:607:
+#define IEEE802154_FETCH_U64(skb, var)			\
+	do {						\
+		if (skb->len < IEEE802154_ADDR_LEN)	\
+			goto exit_error;		\
+		fetch_skb_u64(skb, &var);		\
+	} while (0)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1354: FILE: net/mac802154/dev.c:670:
+			pr_debug("%s(): src PAN address %04x\n",
+					__func__, MAC_CB(skb)->sa.pan_id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1358: FILE: net/mac802154/dev.c:674:
+		pr_debug("%s(): dst PAN address %04x\n",
+				__func__, MAC_CB(skb)->da.pan_id);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1363: FILE: net/mac802154/dev.c:679:
+			pr_debug("%s(): dst SHORT address %04x\n",
+					__func__, MAC_CB(skb)->da.short_addr);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1400: FILE: net/mac802154/dev.c:716:
+	pr_debug("%s()\n", __func__);

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1420: FILE: net/mac802154/dev.c:736:
+	list_for_each_entry(ndp, &priv->slaves, list)
+	{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#1424: FILE: net/mac802154/dev.c:740:
+			struct sk_buff *skb2 = skb_clone(skb, GFP_ATOMIC);
+			if (skb2)

WARNING:RETURN_VOID: void function return statements are not generally useful
#1442: FILE: net/mac802154/dev.c:758:
+	return;
+}

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1448: FILE: net/mac802154/dev.c:764:
+	BUG_ON(dev->type != ARPHRD_IEEE802154);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1457: FILE: net/mac802154/dev.c:773:
+	BUG_ON(dev->type != ARPHRD_IEEE802154);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1466: FILE: net/mac802154/dev.c:782:
+	BUG_ON(dev->type != ARPHRD_IEEE802154);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1470: FILE: net/mac802154/dev.c:786:
+}
+void ieee802154_dev_set_short_addr(struct net_device *dev, u16 val)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1474: FILE: net/mac802154/dev.c:790:
+	BUG_ON(dev->type != ARPHRD_IEEE802154);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1478: FILE: net/mac802154/dev.c:794:
+}
+void ieee802154_dev_set_channel(struct net_device *dev, u8 val)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1482: FILE: net/mac802154/dev.c:798:
+	BUG_ON(dev->type != ARPHRD_IEEE802154);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1491: FILE: net/mac802154/dev.c:807:
+	BUG_ON(dev->type != ARPHRD_IEEE802154);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1500: FILE: net/mac802154/dev.c:816:
+	BUG_ON(dev->type != ARPHRD_IEEE802154);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1508: FILE: net/mac802154/dev.c:824:
+	struct ieee802154_netdev_priv *priv = netdev_priv(dev);
+	return blocking_notifier_chain_register(&priv->events, nb);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1510: FILE: net/mac802154/dev.c:826:
+}
+int ieee802154_slave_unregister_notifier(struct net_device *dev, struct notifier_block *nb)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1513: FILE: net/mac802154/dev.c:829:
+	struct ieee802154_netdev_priv *priv = netdev_priv(dev);
+	return blocking_notifier_chain_unregister(&priv->events, nb);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1515: FILE: net/mac802154/dev.c:831:
+}
+int ieee802154_slave_event(struct net_device *dev, int event, void *data)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1518: FILE: net/mac802154/dev.c:834:
+	struct ieee802154_netdev_priv *priv = netdev_priv(dev);
+	return blocking_notifier_call_chain(&priv->events, event, data);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1524: FILE: net/mac802154/dev.c:840:
+	struct ieee802154_netdev_priv *priv = netdev_priv(dev);
+	BUG_ON(dev->type != ARPHRD_IEEE802154);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1524: FILE: net/mac802154/dev.c:840:
+	BUG_ON(dev->type != ARPHRD_IEEE802154);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1534: FILE: net/mac802154/mac802154.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1547: FILE: net/mac802154/mac802154.h:14:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1548: FILE: net/mac802154/mac802154.h:15:
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.$

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1562: FILE: net/mac802154/mac802154.h:29:
+	spinlock_t		slaves_lock;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1564: FILE: net/mac802154/mac802154.h:31:
+	 * jobs not to be interfered with serial driver */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1604: FILE: net/mac802154/mac_cmd.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1619: FILE: net/mac802154/mac_cmd.c:16:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1620: FILE: net/mac802154/mac_cmd.c:17:
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.$

WARNING:LINE_SPACING: Missing a blank line after declarations
#1644: FILE: net/mac802154/mac_cmd.c:41:
+	int flags = 0;
+	if (skb->len != 1)

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1651: FILE: net/mac802154/mac_cmd.c:48:
+	 * before sending beacons */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1661: FILE: net/mac802154/mac_cmd.c:58:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1664: FILE: net/mac802154/mac_cmd.c:61:
+	 * we need to submit beacon as answer to this. */

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#1666: FILE: net/mac802154/mac_cmd.c:63:
+	return ieee802154_send_beacon(skb->dev, &saddr, IEEE802154_MLME_OPS(skb->dev)->get_pan_id(skb->dev),

WARNING:UNNECESSARY_MODIFIER: Integer promotion: Using 'h' in '%hx' is unnecessary
#1711: FILE: net/mac802154/mac_cmd.c:108:
+	pr_info("Received ASSOC-RESP status %x, addr %hx\n", status, short_addr);

CHECK:BRACES: braces {} should be used on all arms of this statement
#1712: FILE: net/mac802154/mac_cmd.c:109:
+	if (status) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1715: FILE: net/mac802154/mac_cmd.c:112:
+	} else

WARNING:TYPO_SPELLING: 'Uncomplete' may be misspelled - perhaps 'Incomplete'?
#1751: FILE: net/mac802154/mac_cmd.c:148:
+		pr_warning("Uncomplete command frame!\n");
 		            ^^^^^^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around skb->data
#1755: FILE: net/mac802154/mac_cmd.c:152:
+	cmd = *(skb->data);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1776: FILE: net/mac802154/mac_cmd.c:173:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1786: FILE: net/mac802154/mac_cmd.c:183:
+static int ieee802154_send_cmd(struct net_device *dev,
+		struct ieee802154_addr *addr, struct ieee802154_addr *saddr,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1792: FILE: net/mac802154/mac_cmd.c:189:
+	BUG_ON(dev->type != ARPHRD_IEEE802154);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1824: FILE: net/mac802154/mac_cmd.c:221:
+	u8 cmd = IEEE802154_CMD_BEACON_REQ;
+	addr.addr_type = IEEE802154_ADDR_SHORT;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1831: FILE: net/mac802154/mac_cmd.c:228:
+
+

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#1832: FILE: net/mac802154/mac_cmd.c:229:
+static int ieee802154_mlme_assoc_req(struct net_device *dev, struct ieee802154_addr *addr, u8 channel, u8 cap)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1842: FILE: net/mac802154/mac_cmd.c:239:
+
+

WARNING:LONG_LINE: line length of 118 exceeds 100 columns
#1853: FILE: net/mac802154/mac_cmd.c:250:
+static int ieee802154_mlme_assoc_resp(struct net_device *dev, struct ieee802154_addr *addr, u16 short_addr, u8 status)

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#1871: FILE: net/mac802154/mac_cmd.c:268:
+static int ieee802154_mlme_disassoc_req(struct net_device *dev, struct ieee802154_addr *addr, u8 reason)

WARNING:TYPO_SPELLING: 'receved' may be misspelled - perhaps 'received'?
#1887: FILE: net/mac802154/mac_cmd.c:284:
+	/* FIXME: this should be after the ack receved */
 	                                       ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1896: FILE: net/mac802154/mac_cmd.c:293:
+static int ieee802154_mlme_start_req(struct net_device *dev, struct ieee802154_addr *addr,
+				u8 channel,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1900: FILE: net/mac802154/mac_cmd.c:297:
+	BUG_ON(addr->addr_type != IEEE802154_ADDR_SHORT);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1935: FILE: net/mac802154/main.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1948: FILE: net/mac802154/main.c:14:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1949: FILE: net/mac802154/main.c:15:
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1970: FILE: net/mac802154/main.c:36:
+	BUG_ON(!skb);

WARNING:TYPO_SPELLING: 'iif' may be misspelled - perhaps 'if'?
#1976: FILE: net/mac802154/main.c:42:
+	skb->iif = skb->dev->ifindex;
 	     ^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#2008: FILE: net/mac802154/main.c:74:
+	struct sk_buff *skb2 = skb_clone(skb, GFP_KERNEL);
+	netif_rx(skb2);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*work)...) over kzalloc(sizeof(struct rx_work)...)
#2017: FILE: net/mac802154/main.c:83:
+	struct rx_work *work = kzalloc(sizeof(struct rx_work), GFP_ATOMIC);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2037: FILE: net/mac802154/mdev.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2050: FILE: net/mac802154/mdev.c:14:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2051: FILE: net/mac802154/mdev.c:15:
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.$

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*work)...) over kzalloc(sizeof(struct xmit_work)...)
#2115: FILE: net/mac802154/mdev.c:79:
+	work = kzalloc(sizeof(struct xmit_work), GFP_ATOMIC);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2132: FILE: net/mac802154/mdev.c:96:
+	phy_status_t status;
+	priv = netdev_priv(dev);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2135: FILE: net/mac802154/mdev.c:99:
+		pr_debug("%s:%s: unable to get master private data\n",
+				__FILE__, __func__);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2151: FILE: net/mac802154/mdev.c:115:
+	struct ieee802154_priv *priv;
+	netif_stop_queue(dev);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2157: FILE: net/mac802154/mdev.c:121:
+}
+static int ieee802154_master_ioctl(struct net_device *dev, struct ifreq *ifr, int cmd)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2160: FILE: net/mac802154/mdev.c:124:
+	struct ieee802154_priv *priv = netdev_priv(dev);
+	switch (cmd) {

CHECK:SPACING: No space is necessary after a cast
#2164: FILE: net/mac802154/mdev.c:128:
+		return ieee802154_add_slave(&priv->hw, (u8 *) &ifr->ifr_hwaddr.sa_data);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2181: FILE: net/mac802154/mdev.c:145:
+}
+static ssize_t ieee802154_netdev_show(const struct device *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2182: FILE: net/mac802154/mdev.c:146:
+static ssize_t ieee802154_netdev_show(const struct device *dev,
+			   struct device_attribute *attr, char *buf,

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2193: FILE: net/mac802154/mdev.c:157:
+}
+#define MASTER_SHOW(field, format_string)				\

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'field' - possible side-effects?
#2193: FILE: net/mac802154/mdev.c:157:
+#define MASTER_SHOW(field, format_string)				\
+static ssize_t format_##field(const struct net_device *dev, char *buf)	\
+{									\
+	struct ieee802154_priv *priv = netdev_priv(dev);		\
+	return sprintf(buf, format_string, priv->hw.field);		\
+}									\
+static ssize_t show_##field(struct device *dev,				\
+			    struct device_attribute *attr, char *buf)	\
+{									\
+	return ieee802154_netdev_show(dev, attr, buf, format_##field);	\
+}									\
+static DEVICE_ATTR(field, S_IRUGO, show_##field, NULL)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#2204: FILE: net/mac802154/mdev.c:168:
+static DEVICE_ATTR(field, S_IRUGO, show_##field, NULL)

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2252: FILE: net/mac802154/mdev.c:216:
+	dev = alloc_netdev(sizeof(struct ieee802154_priv),
+			"mwpan%d", ieee802154_netdev_setup_master);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2254: FILE: net/mac802154/mdev.c:218:
+		printk(KERN_ERR "Failure to initialize master IEEE802154 device\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2270: FILE: net/mac802154/mdev.c:234:
+	BUG_ON(!list_empty(&priv->slaves));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2271: FILE: net/mac802154/mdev.c:235:
+	BUG_ON(!priv->hw.netdev);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2285: FILE: net/mac802154/mdev.c:249:
+	BUG_ON(!dev || !dev->name);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2286: FILE: net/mac802154/mdev.c:250:
+	BUG_ON(!ops || !ops->tx || !ops->cca || !ops->ed || !ops->set_trx_state);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2326: FILE: net/mac802154/mib.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2339: FILE: net/mac802154/mib.h:14:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2340: FILE: net/mac802154/mib.h:15:
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2356: FILE: net/mac802154/mib.h:31:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2364: FILE: net/mac802154/pib.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2377: FILE: net/mac802154/pib.c:14:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2378: FILE: net/mac802154/pib.c:15:
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.$

WARNING:LINE_SPACING: Missing a blank line after declarations
#2395: FILE: net/mac802154/pib.c:32:
+	struct ieee802154_priv *priv = ieee802154_to_priv(hw);
+	BUG_ON(!hw);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2395: FILE: net/mac802154/pib.c:32:
+	BUG_ON(!hw);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2396: FILE: net/mac802154/pib.c:33:
+	BUG_ON(!pib);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2403: FILE: net/mac802154/pib.c:40:
+		 * this saves initialization */

WARNING:ENOTSUPP: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
#2422: FILE: net/mac802154/pib.c:59:
+		return -ENOTSUPP;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2429: FILE: net/mac802154/pib.c:66:
+	BUG_ON(!hw);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2430: FILE: net/mac802154/pib.c:67:
+	BUG_ON(!pib);

WARNING:ENOTSUPP: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
#2446: FILE: net/mac802154/pib.c:83:
+		return -ENOTSUPP;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2457: FILE: net/mac802154/pib.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2470: FILE: net/mac802154/pib.h:14:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2471: FILE: net/mac802154/pib.h:15:
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2498: FILE: net/mac802154/scan.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2515: FILE: net/mac802154/scan.c:18:
+ * with this program; if not, write to the Free Software Foundation, Inc.,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2516: FILE: net/mac802154/scan.c:19:
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2536: FILE: net/mac802154/scan.c:39:
+/*
+ * ED scan is periodic issuing of ed device function

WARNING:TYPO_SPELLING: 'evry' may be misspelled - perhaps 'every'?
#2537: FILE: net/mac802154/scan.c:40:
+ * on evry permitted channel, so it is virtually PHY-only scan */
       ^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2537: FILE: net/mac802154/scan.c:40:
+ * on evry permitted channel, so it is virtually PHY-only scan */

WARNING:LINE_SPACING: Missing a blank line after declarations
#2556: FILE: net/mac802154/scan.c:59:
+	struct ieee802154_priv *hw = ieee802154_slave_get_priv(work->dev);
+	pr_debug("ed scan channel %d duration %d\n", channel, duration);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2568: FILE: net/mac802154/scan.c:71:
+static int beacon_notifier(struct notifier_block *p,
+		unsigned long event, void *data)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2572: FILE: net/mac802154/scan.c:75:
+	struct scan_data *sd = container_of(p, struct scan_data, nb);
+	switch (event) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2576: FILE: net/mac802154/scan.c:79:
+		pr_debug("got a beacon frame addr_type %d pan_id %d\n",
+				pd->addr.addr_type, pd->addr.pan_id);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2582: FILE: net/mac802154/scan.c:85:
+
+

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*data)...) over kzalloc(sizeof(struct scan_data)...)
#2586: FILE: net/mac802154/scan.c:89:
+	struct scan_data *data = kzalloc(sizeof(struct scan_data), GFP_KERNEL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2587: FILE: net/mac802154/scan.c:90:
+	struct scan_data *data = kzalloc(sizeof(struct scan_data), GFP_KERNEL);
+	pr_debug("passive scan channel %d duration %d\n", channel, duration);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2601: FILE: net/mac802154/scan.c:104:
+ * and waiting for beacons which is useful for collecting LWPAN information */

WARNING:LINE_SPACING: Missing a blank line after declarations
#2605: FILE: net/mac802154/scan.c:108:
+	int ret;
+	pr_debug("active scan channel %d duration %d\n", channel, duration);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2641: FILE: net/mac802154/scan.c:144:
+	ieee802154_nl_scan_confirm(sw->dev, IEEE802154_SUCCESS, sw->type, sw->channels,
+			sw->edl/*, NULL */);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2649: FILE: net/mac802154/scan.c:152:
+	ieee802154_nl_scan_confirm(sw->dev, IEEE802154_INVALID_PARAMETER, sw->type, sw->channels,
+			NULL/*, NULL */);

WARNING:RETURN_VOID: void function return statements are not generally useful
#2652: FILE: net/mac802154/scan.c:155:
+	return;
+}

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2655: FILE: net/mac802154/scan.c:158:
+/*
+ * Alloc ed_detect list for ED scan.

WARNING:REPEATED_WORD: Possible repeated word: 'type'
#2658: FILE: net/mac802154/scan.c:161:
+ * @param type type of the scan to be performed

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#2668: FILE: net/mac802154/scan.c:171:
+	pr_debug("%s()\n", __func__);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*work)...) over kzalloc(sizeof(struct scan_work)...)
#2675: FILE: net/mac802154/scan.c:178:
+	work = kzalloc(sizeof(struct scan_work), GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2709: FILE: net/mac802154/scan.c:212:
+	ieee802154_nl_scan_confirm(dev, IEEE802154_INVALID_PARAMETER, type, channels,
+			NULL/*, NULL */);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000117406.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 30 errors, 122 warnings, 75 checks, 2524 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000117406.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
