WARNING:EMAIL_SUBJECT: A patch subject line should describe the change not the tool that found it
#18: 
Subject: [git pull, take 2] x86 updates for v2.6.28, phase #9, sparse IRQ

Naming the tool that found the issue is not very useful in the
subject line.  A good subject line summarizes the change that
the patch brings.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#80: 
   git://git.kernel.org/pub/scm/linux/kernel/git/tip/linux-2.6-tip.git x86-v28-for-linus-phase9-B

WARNING:TYPO_SPELLING: 'mapp' may be misspelled - perhaps 'map'?
#115: 
                                   # f12c73e: dmar: fix using early fixmap mapp
                                                                           ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'mapp' may be misspelled - perhaps 'map'?
#147: 
include/linux/dmar.h               # f12c73e: dmar: fix using early fixmap mapp
                                                                           ^^^^

WARNING:TYPO_SPELLING: 'disabl' may be misspelled - perhaps 'disable'?
#220: 
                                   # f84dbb9: genirq: enable polling for disabl
                                                                         ^^^^^^

WARNING:TYPO_SPELLING: 'writting' may be misspelled - perhaps 'writing'?
#255: 
      x86: apic - skip writting ESR register if we dont have on
                       ^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#696: FILE: arch/x86/kernel/acpi/boot.c:1241:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#715: 
rename from arch/x86/kernel/apic_32.c

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#771: FILE: arch/x86/kernel/apic.c:76:
+}
+early_param("lapic", parse_lapic);

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#785: FILE: arch/x86/kernel/apic.c:90:
+__setup("apicpmtimer", setup_apicpmtimer);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#803: FILE: arch/x86/kernel/apic.c:108:
+}
+early_param("nox2apic", setup_nox2apic);

WARNING:RETURN_VOID: void function return statements are not generally useful
#830: FILE: arch/x86/kernel/apic.c:257:
+	return;
+}

CHECK:SPACING: No space is necessary after a cast
#840: FILE: arch/x86/kernel/apic.c:267:
+	wrmsrl(APIC_BASE_MSR + (APIC_ICR >> 4), ((__u64) id) << 32 | low);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#930: FILE: arch/x86/kernel/apic.c:562:
+		printk(KERN_WARNING "APIC calibration not consistent "

WARNING:SPLIT_STRING: quoted string split across lines
#931: FILE: arch/x86/kernel/apic.c:563:
+		printk(KERN_WARNING "APIC calibration not consistent "
+			"with PM Timer: %ldms instead of 100ms\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#936: FILE: arch/x86/kernel/apic.c:568:
+		printk(KERN_INFO "APIC delta adjusted to PM-Timer: "

WARNING:SPLIT_STRING: quoted string split across lines
#937: FILE: arch/x86/kernel/apic.c:569:
+		printk(KERN_INFO "APIC delta adjusted to PM-Timer: "
+			"%lu (%ld)\n", (unsigned long)res, *delta);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1062: FILE: arch/x86/kernel/apic.c:1096:
+		printk(KERN_INFO "No ESR for 82489DX.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1086: FILE: arch/x86/kernel/apic.c:1107:
+		printk(KERN_INFO "Leaving ESR disabled.\n");

WARNING:SPLIT_STRING: quoted string split across lines
#1107: FILE: arch/x86/kernel/apic.c:1128:
+		apic_printk(APIC_VERBOSE, "ESR value before enabling "
+			"vector: 0x%08x  after: 0x%08x\n",

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1140: FILE: arch/x86/kernel/apic.c:1158:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1192: FILE: arch/x86/kernel/apic.c:1301:
+		printk("x2apic enabled by BIOS, switching to x2apic ops\n");

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1193: FILE: arch/x86/kernel/apic.c:1302:
+		x2apic_preenabled = x2apic = 1;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1204: FILE: arch/x86/kernel/apic.c:1313:
+		printk("Enabling x2apic\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1219: FILE: arch/x86/kernel/apic.c:1328:
+		printk(KERN_INFO

WARNING:SPLIT_STRING: quoted string split across lines
#1221: FILE: arch/x86/kernel/apic.c:1330:
+		       "Skipped enabling x2apic and Interrupt-remapping "
+		       "because of nox2apic\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1229: FILE: arch/x86/kernel/apic.c:1338:
+		printk(KERN_INFO

WARNING:SPLIT_STRING: quoted string split across lines
#1231: FILE: arch/x86/kernel/apic.c:1340:
+		       "Skipped enabling x2apic and Interrupt-remapping "
+		       "because of skipping io-apic setup\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1237: FILE: arch/x86/kernel/apic.c:1346:
+		printk(KERN_INFO

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1243: FILE: arch/x86/kernel/apic.c:1352:
+			printk(KERN_INFO

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1253: FILE: arch/x86/kernel/apic.c:1362:
+		printk(KERN_INFO "Saving IO-APIC state failed: %d\n", ret);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1288: FILE: arch/x86/kernel/apic.c:1397:
+			printk(KERN_INFO

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1291: FILE: arch/x86/kernel/apic.c:1400:
+			printk(KERN_INFO

CHECK:BRACES: Unbalanced braces around else statement
#1293: FILE: arch/x86/kernel/apic.c:1402:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1294: FILE: arch/x86/kernel/apic.c:1403:
+		printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#1302: FILE: arch/x86/kernel/apic.c:1411:
+		panic("x2apic enabled prior OS handover,"
+		      " enable CONFIG_INTR_REMAP");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1304: FILE: arch/x86/kernel/apic.c:1413:
+	printk(KERN_INFO "Enable CONFIG_INTR_REMAP for enabling intr-remapping "

WARNING:SPLIT_STRING: quoted string split across lines
#1305: FILE: arch/x86/kernel/apic.c:1414:
+	printk(KERN_INFO "Enable CONFIG_INTR_REMAP for enabling intr-remapping "
+	       " and x2apic\n");

WARNING:RETURN_VOID: void function return statements are not generally useful
#1309: FILE: arch/x86/kernel/apic.c:1418:
+	return;
+}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1322: FILE: arch/x86/kernel/apic.c:1431:
+		printk(KERN_INFO "No local APIC present\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1388: FILE: arch/x86/kernel/apic.c:1571:
+	apic_printk(APIC_VERBOSE, "mapped APIC to %08lx (%08lx)\n",
+				APIC_BASE, apic_phys);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1410: FILE: arch/x86/kernel/apic.c:1591:
+		printk(KERN_INFO "Apic disabled\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1415: FILE: arch/x86/kernel/apic.c:1596:
+		printk(KERN_INFO "Apic disabled by BIOS\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1427: FILE: arch/x86/kernel/apic.c:1608:
+		printk(KERN_ERR "BIOS bug, local APIC 0x%x not detected!...\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#1544: FILE: arch/x86/kernel/apic.c:1737:
+	printk(KERN_DEBUG "APIC error on CPU%d: %02x(%02x)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1545: FILE: arch/x86/kernel/apic.c:1738:
+	printk(KERN_DEBUG "APIC error on CPU%d: %02x(%02x)\n",
 		smp_processor_id(), v , v1);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1601: FILE: arch/x86/kernel/apic.c:2093:
+	unsigned id;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'boot_cpu_data.x86_vendor == X86_VENDOR_AMD'
#1611: FILE: arch/x86/kernel/apic.c:2103:
+	if ((boot_cpu_data.x86_vendor == X86_VENDOR_AMD) && !is_vsmp_box())

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#1617: FILE: arch/x86/kernel/apic.c:2109:
+	for (i = 0; i < NR_CPUS; i++) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1619: FILE: arch/x86/kernel/apic.c:2111:
+		if (bios_cpu_apicid) {
[...]
+		else if (i < nr_cpu_ids) {
[...]
+		else
[...]

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1622: FILE: arch/x86/kernel/apic.c:2114:
+		}
+		else if (i < nr_cpu_ids) {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1628: FILE: arch/x86/kernel/apic.c:2120:
+		}
+		else

CHECK:BRACES: braces {} should be used on all arms of this statement
#1644: FILE: arch/x86/kernel/apic.c:2136:
+		if (test_bit(i, clustermap)) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1647: FILE: arch/x86/kernel/apic.c:2139:
+		} else

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#3550: FILE: arch/x86/kernel/bios_uv.c:15:
  *  along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#3551: FILE: arch/x86/kernel/bios_uv.c:16:
  *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3594: FILE: arch/x86/kernel/bios_uv.c:45:
+s64 uv_bios_call_irqsave(enum uv_bios_cmd which, u64 a1, u64 a2, u64 a3,
+					u64 a4, u64 a5)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3613: FILE: arch/x86/kernel/bios_uv.c:58:
+s64 uv_bios_call_reentrant(enum uv_bios_cmd which, u64 a1, u64 a2, u64 a3,
+					u64 a4, u64 a5)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3624: FILE: arch/x86/kernel/bios_uv.c:69:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3633: FILE: arch/x86/kernel/bios_uv.c:78:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3635: FILE: arch/x86/kernel/bios_uv.c:80:
+s64 uv_bios_get_sn_info(int fc, int *uvtype, long *partid, long *coher,
+		long *region)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3642: FILE: arch/x86/kernel/bios_uv.c:87:
+	ret = uv_bios_call_irqsave(UV_BIOS_GET_SN_INFO, fc,
+				(u64)(&v0), (u64)(&v1), 0, 0);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3658: FILE: arch/x86/kernel/bios_uv.c:103:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3666: FILE: arch/x86/kernel/bios_uv.c:111:
+
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'efi.uv_systab == EFI_INVALID_TABLE_ADDR'
#3672: FILE: arch/x86/kernel/bios_uv.c:117:
+	if ((efi.uv_systab == EFI_INVALID_TABLE_ADDR) ||
+	    (efi.uv_systab == (unsigned long)NULL)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'efi.uv_systab == (unsigned long)NULL'
#3672: FILE: arch/x86/kernel/bios_uv.c:117:
+	if ((efi.uv_systab == EFI_INVALID_TABLE_ADDR) ||
+	    (efi.uv_systab == (unsigned long)NULL)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#3674: FILE: arch/x86/kernel/bios_uv.c:119:
+		printk(KERN_CRIT "No EFI UV System Table.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#3682: FILE: arch/x86/kernel/bios_uv.c:127:
+		printk(KERN_ERR "bad signature in UV system table!");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3690: FILE: arch/x86/kernel/bios_uv.c:135:
+	printk(KERN_INFO "EFI UV System Table Revision %d\n", tab->revision);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3706: FILE: arch/x86/kernel/cpu/amd.c:252:
+	printk(KERN_INFO "CPU %d/0x%x -> Node %d\n", cpu, apicid, node);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#3719: FILE: arch/x86/kernel/cpu/intel.c:177:
+	printk(KERN_INFO "CPU %d/0x%x -> Node %d\n", cpu, apicid, node);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3733: FILE: arch/x86/kernel/efi.c:372:
+			printk(" UVsystab=0x%lx ", config_tables[i].table);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#3761: FILE: arch/x86/kernel/genapic_flat_64.c:183:
+		printk(KERN_DEBUG "system APIC only can use physical flat");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#3833: FILE: arch/x86/kernel/genx2apic_uv_x.c:348:
+	status = uv_bios_freq_base(BIOS_FREQ_BASE_REALTIME_CLOCK,
+					&ticks_per_sec);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#3845: FILE: arch/x86/kernel/genx2apic_uv_x.c:361:
+ * ^IZZZ hotplug not supported yet$

WARNING:TYPO_SPELLING: 'initilization' may be misspelled - perhaps 'initialization'?
#3849: FILE: arch/x86/kernel/genx2apic_uv_x.c:365:
+	/* CPU 0 initilization will be done via uv_system_init. */
 	         ^^^^^^^^^^^^^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3939: FILE: arch/x86/kernel/hpet.c:25:
+#define HPET_DEV_USED			(1 << HPET_DEV_USED_BIT)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'evt' - possible side-effects?
#3944: FILE: arch/x86/kernel/hpet.c:30:
+#define EVT_TO_HPET_DEV(evt) container_of(evt, struct hpet_dev, evt)

CHECK:CAMELCASE: Avoid CamelCase: <Tn_INT_ROUTE_CNF_MASK>
#4016: FILE: arch/x86/kernel/hpet.c:157:
+			Tn_INT_ROUTE_CNF_MASK) >> Tn_INT_ROUTE_CNF_SHIFT;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Tn_INT_ROUTE_CNF_SHIFT>
#4016: FILE: arch/x86/kernel/hpet.c:157:
+			Tn_INT_ROUTE_CNF_MASK) >> Tn_INT_ROUTE_CNF_SHIFT;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#4043: FILE: arch/x86/kernel/hpet.c:265:
+		delta = ((uint64_t)(NSEC_PER_SEC/HZ)) * evt->mult;
 		                                ^

CHECK:SPACING: No space is necessary after a cast
#4062: FILE: arch/x86/kernel/hpet.c:280:
+		hpet_writel((unsigned long) delta, HPET_Tn_CMP(timer));

WARNING:LINE_SPACING: Missing a blank line after declarations
#4089: FILE: arch/x86/kernel/hpet.c:302:
+			struct hpet_dev *hdev = EVT_TO_HPET_DEV(evt);
+			hpet_setup_msi_irq(hdev->irq);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4117: FILE: arch/x86/kernel/hpet.c:331:
+static void hpet_legacy_set_mode(enum clock_event_mode mode,
+			struct clock_event_device *evt)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4123: FILE: arch/x86/kernel/hpet.c:337:
+static int hpet_legacy_next_event(unsigned long delta,
+			struct clock_event_device *evt)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4176: FILE: arch/x86/kernel/hpet.c:390:
+static void hpet_msi_set_mode(enum clock_event_mode mode,
+				struct clock_event_device *evt)

WARNING:LINE_SPACING: Missing a blank line after declarations
#4179: FILE: arch/x86/kernel/hpet.c:393:
+	struct hpet_dev *hdev = EVT_TO_HPET_DEV(evt);
+	hpet_set_mode(mode, evt, hdev->num);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4183: FILE: arch/x86/kernel/hpet.c:397:
+static int hpet_msi_next_event(unsigned long delta,
+				struct clock_event_device *evt)

WARNING:LINE_SPACING: Missing a blank line after declarations
#4186: FILE: arch/x86/kernel/hpet.c:400:
+	struct hpet_dev *hdev = EVT_TO_HPET_DEV(evt);
+	return hpet_next_event(delta, evt, hdev->num);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#4221: FILE: arch/x86/kernel/hpet.c:435:
+		printk(KERN_INFO "Spurious HPET timer interrupt on HPET timer %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4222: FILE: arch/x86/kernel/hpet.c:436:
+		printk(KERN_INFO "Spurious HPET timer interrupt on HPET timer %d\n",
+				dev->num);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#4232: FILE: arch/x86/kernel/hpet.c:446:
+{
+

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4234: FILE: arch/x86/kernel/hpet.c:448:
+			IRQF_SHARED|IRQF_NOBALANCING, dev->name, dev))
 			           ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4241: FILE: arch/x86/kernel/hpet.c:455:
+	printk(KERN_DEBUG "hpet: %s irq %d for MSI\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4242: FILE: arch/x86/kernel/hpet.c:456:
+	printk(KERN_DEBUG "hpet: %s irq %d for MSI\n",
+			 dev->name, dev->irq);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#4251: FILE: arch/x86/kernel/hpet.c:465:
+	uint64_t hpet_freq;

CHECK:SPACING: No space is necessary after a cast
#4282: FILE: arch/x86/kernel/hpet.c:496:
+	evt->mult = div_sc((unsigned long) hpet_freq,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4283: FILE: arch/x86/kernel/hpet.c:497:
+	evt->mult = div_sc((unsigned long) hpet_freq,
+				      NSEC_PER_SEC, evt->shift);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*hpet_devs)...) over kzalloc(sizeof(struct hpet_dev)...)
#4312: FILE: arch/x86/kernel/hpet.c:526:
+	hpet_devs = kzalloc(sizeof(struct hpet_dev) * num_timers, GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:ALLOC_WITH_MULTIPLY: Prefer kcalloc over kzalloc with multiply
#4312: FILE: arch/x86/kernel/hpet.c:526:
+	hpet_devs = kzalloc(sizeof(struct hpet_dev) * num_timers, GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#4342: FILE: arch/x86/kernel/hpet.c:556:
+	printk(KERN_INFO "HPET: %d timers in total, %d timers will be used for per-cpu timer\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4343: FILE: arch/x86/kernel/hpet.c:557:
+	printk(KERN_INFO "HPET: %d timers in total, %d timers will be used for per-cpu timer\n",
+		num_timers, num_timers_used);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4379: FILE: arch/x86/kernel/hpet.c:593:
+		if (test_and_set_bit(HPET_DEV_USED_BIT,
+			(unsigned long *)&hdev->flags))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4407: FILE: arch/x86/kernel/hpet.c:621:
+static int hpet_cpuhp_notify(struct notifier_block *n,
+		unsigned long action, void *hcpu)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4437: FILE: arch/x86/kernel/hpet.c:651:
+}
+static void hpet_msi_capability_lookup(unsigned int start_timer)

WARNING:RETURN_VOID: void function return statements are not generally useful
#4440: FILE: arch/x86/kernel/hpet.c:654:
+	return;
+}

WARNING:RETURN_VOID: void function return statements are not generally useful
#4446: FILE: arch/x86/kernel/hpet.c:660:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4450: FILE: arch/x86/kernel/hpet.c:664:
+static int hpet_cpuhp_notify(struct notifier_block *n,
+		unsigned long action, void *hcpu)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#4570: FILE: arch/x86/kernel/io_apic.c:94:
+#if defined (CONFIG_MCA) || defined (CONFIG_EISA)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#4570: FILE: arch/x86/kernel/io_apic.c:94:
+#if defined (CONFIG_MCA) || defined (CONFIG_EISA)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4584: FILE: arch/x86/kernel/io_apic.c:108:
+}
+early_param("noapic", parse_noapic);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#4681: FILE: arch/x86/kernel/io_apic.c:180:
+		cfg[i-1].next = &cfg[i];
 		     ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#4703: FILE: arch/x86/kernel/io_apic.c:194:
+		nr_irq_cfg = simple_strtoul(arg, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'irqX' - possible side-effects?
#4717: FILE: arch/x86/kernel/io_apic.c:203:
+#define for_each_irq_cfg(irqX, cfg)           \
+        for (cfg = irq_cfgx, irqX = cfg->irq; cfg; cfg = cfg->next, irqX = cfg ? cfg->irq : -1U)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cfg' - possible side-effects?
#4717: FILE: arch/x86/kernel/io_apic.c:203:
+#define for_each_irq_cfg(irqX, cfg)           \
+        for (cfg = irq_cfgx, irqX = cfg->irq; cfg; cfg = cfg->next, irqX = cfg ? cfg->irq : -1U)

ERROR:CODE_INDENT: code indent should use tabs where possible
#4718: FILE: arch/x86/kernel/io_apic.c:204:
+        for (cfg = irq_cfgx, irqX = cfg->irq; cfg; cfg = cfg->next, irqX = cfg ? cfg->irq : -1U)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4718: FILE: arch/x86/kernel/io_apic.c:204:
+        for (cfg = irq_cfgx, irqX = cfg->irq; cfg; cfg = cfg->next, irqX = cfg ? cfg->irq : -1U)$

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#4754: FILE: arch/x86/kernel/io_apic.c:231:
+	cfg_pri = cfg = irq_cfgx;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4771: FILE: arch/x86/kernel/io_apic.c:248:
+		printk(KERN_DEBUG "try to get more irq_cfg %d\n", nr_irq_cfg);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4783: FILE: arch/x86/kernel/io_apic.c:260:
+		printk(KERN_DEBUG "irq_cfg ==> [%#lx - %#lx]\n", phys, phys + total_bytes);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#4789: FILE: arch/x86/kernel/io_apic.c:266:
+			cfg[i-1].next = &cfg[i];
 			     ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'irq' - possible side-effects?
#4809: FILE: arch/x86/kernel/io_apic.c:286:
+#define for_each_irq_cfg(irq, cfg)		\
+	for (irq = 0, cfg = &irq_cfgx[irq]; irq < nr_irqs; irq++, cfg = &irq_cfgx[irq])

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'cfg' - possible side-effects?
#4809: FILE: arch/x86/kernel/io_apic.c:286:
+#define for_each_irq_cfg(irq, cfg)		\
+	for (irq = 0, cfg = &irq_cfgx[irq]; irq < nr_irqs; irq++, cfg = &irq_cfgx[irq])

ERROR:CODE_INDENT: code indent should use tabs where possible
#4816: FILE: arch/x86/kernel/io_apic.c:293:
+        if (irq < nr_irqs)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4816: FILE: arch/x86/kernel/io_apic.c:293:
+        if (irq < nr_irqs)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4817: FILE: arch/x86/kernel/io_apic.c:294:
+                return &irq_cfgx[irq];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4817: FILE: arch/x86/kernel/io_apic.c:294:
+                return &irq_cfgx[irq];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4819: FILE: arch/x86/kernel/io_apic.c:296:
+        return NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4819: FILE: arch/x86/kernel/io_apic.c:296:
+        return NULL;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4821: FILE: arch/x86/kernel/io_apic.c:298:
+}
+struct irq_cfg *irq_cfg_alloc(unsigned int irq)

ERROR:CODE_INDENT: code indent should use tabs where possible
#4823: FILE: arch/x86/kernel/io_apic.c:300:
+        return irq_cfg(irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4823: FILE: arch/x86/kernel/io_apic.c:300:
+        return irq_cfg(irq);$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#4855: FILE: arch/x86/kernel/io_apic.c:329:
+		pin[i-1].next = &pin[i];
 		     ^

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#4859: FILE: arch/x86/kernel/io_apic.c:333:
+DEFINE_DYN_ARRAY(irq_2_pin_head, sizeof(struct irq_pin_list), nr_irq_2_pin, PAGE_SIZE, irq_2_pin_init_work);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#4859: FILE: arch/x86/kernel/io_apic.c:333:
+}
+DEFINE_DYN_ARRAY(irq_2_pin_head, sizeof(struct irq_pin_list), nr_irq_2_pin, PAGE_SIZE, irq_2_pin_init_work);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#4877: FILE: arch/x86/kernel/io_apic.c:351:
+	printk(KERN_DEBUG "try to get more irq_2_pin %d\n", nr_irq_2_pin);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#4880: FILE: arch/x86/kernel/io_apic.c:354:
+		pin = kzalloc(sizeof(struct irq_pin_list)*nr_irq_2_pin,
 		                                         ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*pin)...) over kzalloc(sizeof(struct irq_pin_list)...)
#4880: FILE: arch/x86/kernel/io_apic.c:354:
+		pin = kzalloc(sizeof(struct irq_pin_list)*nr_irq_2_pin,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#4881: FILE: arch/x86/kernel/io_apic.c:355:
+		pin = kzalloc(sizeof(struct irq_pin_list)*nr_irq_2_pin,
+				 GFP_ATOMIC);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#4890: FILE: arch/x86/kernel/io_apic.c:364:
+		pin[i-1].next = &pin[i];
 		     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#4911: FILE: arch/x86/kernel/io_apic.c:407:
+        if (sis_apic_bug)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4911: FILE: arch/x86/kernel/io_apic.c:407:
+        if (sis_apic_bug)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#4912: FILE: arch/x86/kernel/io_apic.c:408:
+                writel(reg, &io_apic->index);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#4912: FILE: arch/x86/kernel/io_apic.c:408:
+                writel(reg, &io_apic->index);$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#5013: FILE: arch/x86/kernel/io_apic.c:522:
+		io_apic_write(apic, 0x11 + pin*2, dest);
 		                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#5019: FILE: arch/x86/kernel/io_apic.c:527:
+		io_apic_modify(apic, 0x10 + pin*2, reg);
 		                               ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5137: FILE: arch/x86/kernel/io_apic.c:630:
+static inline void io_apic_modify_irq(unsigned int irq,
+				int mask_and, int mask_or,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "entry"
#5149: FILE: arch/x86/kernel/io_apic.c:638:
+	for (entry = cfg->irq_2_pin; entry != NULL; entry = entry->next) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:LINE_SPACING: Missing a blank line after declarations
#5151: FILE: arch/x86/kernel/io_apic.c:640:
+		unsigned int reg;
+		pin = entry->pin;

WARNING:LINE_SPACING: Missing a blank line after declarations
#5178: FILE: arch/x86/kernel/io_apic.c:663:
+	struct io_apic __iomem *io_apic;
+	io_apic = io_apic_base(entry->apic);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5195: FILE: arch/x86/kernel/io_apic.c:680:
+	io_apic_modify_irq(irq, ~IO_APIC_REDIR_LEVEL_TRIGGER,
+			IO_APIC_REDIR_MASKED, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5201: FILE: arch/x86/kernel/io_apic.c:686:
+	io_apic_modify_irq(irq, ~IO_APIC_REDIR_MASKED,
+			IO_APIC_REDIR_LEVEL_TRIGGER, NULL);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#5235: FILE: arch/x86/kernel/io_apic.c:755:
+static int pirq_entries [MAX_PIRQS];

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5241: FILE: arch/x86/kernel/io_apic.c:761:
+	int ints[MAX_PIRQS+1];
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5257: FILE: arch/x86/kernel/io_apic.c:777:
+				"... PIRQ%d -> IRQ %d\n", i, ints[i+1]);
 				                                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#5261: FILE: arch/x86/kernel/io_apic.c:781:
+		pirq_entries[MAX_PIRQS-i-1] = ints[i+1];
 		                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#5261: FILE: arch/x86/kernel/io_apic.c:781:
+		pirq_entries[MAX_PIRQS-i-1] = ints[i+1];
 		                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5261: FILE: arch/x86/kernel/io_apic.c:781:
+		pirq_entries[MAX_PIRQS-i-1] = ints[i+1];
 		                                    ^

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#5266: FILE: arch/x86/kernel/io_apic.c:786:
+__setup("pirq=", ioapic_pirq_setup);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5296: FILE: arch/x86/kernel/io_apic.c:838:
+	memset(early_ioapic_entries, 0,
+		ARRAY_SIZE(early_ioapic_entries));

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#5353: FILE: arch/x86/kernel/io_apic.c:976:
+EXPORT_SYMBOL(IO_APIC_get_PCI_irq_vector);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:LINE_SPACING: Missing a blank line after declarations
#5363: FILE: arch/x86/kernel/io_apic.c:986:
+		unsigned int port = 0x4d0 + (irq >> 3);
+		return (inb(port) >> (irq & 7)) & 1;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5381: FILE: arch/x86/kernel/io_apic.c:1004:
+ * be read in from the ELCR */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#5393: FILE: arch/x86/kernel/io_apic.c:1016:
+ * when listed as conforming in the MP table. */

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#5406: FILE: arch/x86/kernel/io_apic.c:1079:
+			switch (mp_bus_id_to_type[bus]) {
+				case MP_BUS_ISA: /* ISA pin */
[...]
+				case MP_BUS_EISA: /* EISA pin */
[...]
+				case MP_BUS_PCI: /* PCI pin */
[...]
+				case MP_BUS_MCA: /* MCA pin */
[...]
+				default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#5429: FILE: arch/x86/kernel/io_apic.c:1102:
+					printk(KERN_WARNING "broken BIOS!!\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#5450: FILE: arch/x86/kernel/io_apic.c:1167:
+                /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#5451: FILE: arch/x86/kernel/io_apic.c:1168:
+                 * For MPS mode, so far only needed by ES7000 platform$

ERROR:CODE_INDENT: code indent should use tabs where possible
#5452: FILE: arch/x86/kernel/io_apic.c:1169:
+                 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#5453: FILE: arch/x86/kernel/io_apic.c:1170:
+                if (ioapic_renumber_irq)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5453: FILE: arch/x86/kernel/io_apic.c:1170:
+                if (ioapic_renumber_irq)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#5454: FILE: arch/x86/kernel/io_apic.c:1171:
+                        irq = ioapic_renumber_irq(apic, irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5454: FILE: arch/x86/kernel/io_apic.c:1171:
+                        irq = ioapic_renumber_irq(apic, irq);$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pin >= 16'
#5461: FILE: arch/x86/kernel/io_apic.c:1178:
+	if ((pin >= 16) && (pin <= 23)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pin <= 23'
#5461: FILE: arch/x86/kernel/io_apic.c:1178:
+	if ((pin >= 16) && (pin <= 23)) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#5462: FILE: arch/x86/kernel/io_apic.c:1179:
+		if (pirq_entries[pin-16] != -1) {
 		                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#5463: FILE: arch/x86/kernel/io_apic.c:1180:
+			if (!pirq_entries[pin-16]) {
 			                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#5465: FILE: arch/x86/kernel/io_apic.c:1182:
+						"disabling PIRQ%d\n", pin-16);
 						                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#5467: FILE: arch/x86/kernel/io_apic.c:1184:
+				irq = pirq_entries[pin-16];
 				                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#5470: FILE: arch/x86/kernel/io_apic.c:1187:
+						pin-16, irq);
 						   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#5553: FILE: arch/x86/kernel/io_apic.c:1355:
+        int apic, idx, pin;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5553: FILE: arch/x86/kernel/io_apic.c:1355:
+        int apic, idx, pin;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#5555: FILE: arch/x86/kernel/io_apic.c:1357:
+        for (apic = 0; apic < nr_ioapics; apic++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5555: FILE: arch/x86/kernel/io_apic.c:1357:
+        for (apic = 0; apic < nr_ioapics; apic++) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#5556: FILE: arch/x86/kernel/io_apic.c:1358:
+                for (pin = 0; pin < nr_ioapic_registers[apic]; pin++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5556: FILE: arch/x86/kernel/io_apic.c:1358:
+                for (pin = 0; pin < nr_ioapic_registers[apic]; pin++) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#5557: FILE: arch/x86/kernel/io_apic.c:1359:
+                        idx = find_irq_entry(apic, pin, mp_INT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5557: FILE: arch/x86/kernel/io_apic.c:1359:
+                        idx = find_irq_entry(apic, pin, mp_INT);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#5558: FILE: arch/x86/kernel/io_apic.c:1360:
+                        if ((idx != -1) && (irq == pin_2_irq(idx, apic, pin)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5558: FILE: arch/x86/kernel/io_apic.c:1360:
+                        if ((idx != -1) && (irq == pin_2_irq(idx, apic, pin)))$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'irq == pin_2_irq(idx, apic, pin)'
#5558: FILE: arch/x86/kernel/io_apic.c:1360:
+                        if ((idx != -1) && (irq == pin_2_irq(idx, apic, pin)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#5559: FILE: arch/x86/kernel/io_apic.c:1361:
+                                return irq_trigger(idx);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5559: FILE: arch/x86/kernel/io_apic.c:1361:
+                                return irq_trigger(idx);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#5560: FILE: arch/x86/kernel/io_apic.c:1362:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5560: FILE: arch/x86/kernel/io_apic.c:1362:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#5561: FILE: arch/x86/kernel/io_apic.c:1363:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5561: FILE: arch/x86/kernel/io_apic.c:1363:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#5562: FILE: arch/x86/kernel/io_apic.c:1364:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#5563: FILE: arch/x86/kernel/io_apic.c:1365:
+         * nonexistent IRQs are edge default$

ERROR:CODE_INDENT: code indent should use tabs where possible
#5564: FILE: arch/x86/kernel/io_apic.c:1366:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#5565: FILE: arch/x86/kernel/io_apic.c:1367:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5565: FILE: arch/x86/kernel/io_apic.c:1367:
+        return 0;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5662: FILE: arch/x86/kernel/io_apic.c:1532:
+					apic_printk(APIC_VERBOSE,
+						KERN_DEBUG " %d-%d",

CHECK:BRACES: Unbalanced braces around else statement
#5665: FILE: arch/x86/kernel/io_apic.c:1535:
+				} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5667: FILE: arch/x86/kernel/io_apic.c:1537:
+					apic_printk(APIC_VERBOSE, " %d-%d",
+						mp_ioapics[apic].mp_apicid,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5673: FILE: arch/x86/kernel/io_apic.c:1543:
+				apic_printk(APIC_VERBOSE,
+					" (apicid-pin) not connected\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5688: FILE: arch/x86/kernel/io_apic.c:1555:
+			setup_IO_APIC_irq(apic, pin, irq,
+					irq_trigger(idx), irq_polarity(idx));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5696: FILE: arch/x86/kernel/io_apic.c:1561:
+		apic_printk(APIC_VERBOSE,
+			" (apicid-pin) not connected\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#5726: FILE: arch/x86/kernel/io_apic.c:1636:
+        if (reg_01.bits.version >= 0x20)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5726: FILE: arch/x86/kernel/io_apic.c:1636:
+        if (reg_01.bits.version >= 0x20)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#5727: FILE: arch/x86/kernel/io_apic.c:1637:
+                reg_03.raw = io_apic_read(apic, 3);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5727: FILE: arch/x86/kernel/io_apic.c:1637:
+                reg_03.raw = io_apic_read(apic, 3);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5734: FILE: arch/x86/kernel/io_apic.c:1644:
+	printk(KERN_DEBUG ".......    : Delivery Type: %X\n", reg_00.bits.delivery_type);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5735: FILE: arch/x86/kernel/io_apic.c:1645:
+	printk(KERN_DEBUG ".......    : LTS          : %X\n", reg_00.bits.LTS);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5761: FILE: arch/x86/kernel/io_apic.c:1670:
+		printk(KERN_DEBUG ".... register #03: %08X\n", reg_03.raw);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5762: FILE: arch/x86/kernel/io_apic.c:1671:
+		printk(KERN_DEBUG ".......     : Boot DT    : %X\n", reg_03.bits.boot_DT);

WARNING:LINE_SPACING: Missing a blank line after declarations
#5777: FILE: arch/x86/kernel/io_apic.c:1704:
+		struct irq_pin_list *entry = cfg->irq_2_pin;
+		if (!entry)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5780: FILE: arch/x86/kernel/io_apic.c:1706:
+		printk(KERN_DEBUG "IRQ%d ", irq);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5811: FILE: arch/x86/kernel/io_apic.c:1765:
+			printk(KERN_DEBUG "... APIC ARBPRI: %08x (%02x)\n", v,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5815: FILE: arch/x86/kernel/io_apic.c:1769:
+		printk(KERN_DEBUG "... APIC PROCPRI: %08x\n", v);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5824: FILE: arch/x86/kernel/io_apic.c:1778:
+		printk(KERN_DEBUG "... APIC RRR: %08x\n", v);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5837: FILE: arch/x86/kernel/io_apic.c:1785:
+		printk(KERN_DEBUG "... APIC DFR: %08x\n", v);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5853: FILE: arch/x86/kernel/io_apic.c:1802:
+		printk(KERN_DEBUG "... APIC ESR: %08x\n", v);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5859: FILE: arch/x86/kernel/io_apic.c:1806:
+	printk(KERN_DEBUG "... APIC ICR: %08x\n", (u32)icr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#5860: FILE: arch/x86/kernel/io_apic.c:1807:
+	printk(KERN_DEBUG "... APIC ICR2: %08x\n", (u32)(icr >> 32));

WARNING:LINE_SPACING: Missing a blank line after declarations
#5899: FILE: arch/x86/kernel/io_apic.c:1901:
+	int i;
+	if (!pirqs_enabled)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#5946: FILE: arch/x86/kernel/io_apic.c:2022:
+	if (!(boot_cpu_data.x86_vendor == X86_VENDOR_INTEL)
+		|| APIC_XAPIC(apic_version[boot_cpu_physical_apicid]))

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#5958: FILE: arch/x86/kernel/io_apic.c:2034:
+	for (apic = 0; apic < nr_ioapics; apic++) {
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5967: FILE: arch/x86/kernel/io_apic.c:2043:
+			printk(KERN_ERR "BIOS bug, IO-APIC#%d ID is %d in the MPC table!...\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5968: FILE: arch/x86/kernel/io_apic.c:2044:
+			printk(KERN_ERR "BIOS bug, IO-APIC#%d ID is %d in the MPC table!...\n",
+				apic, mp_ioapics[apic].mp_apicid);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5969: FILE: arch/x86/kernel/io_apic.c:2045:
+			printk(KERN_ERR "... fixing up to %d. (tell your hw vendor)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5970: FILE: arch/x86/kernel/io_apic.c:2046:
+			printk(KERN_ERR "... fixing up to %d. (tell your hw vendor)\n",
+				reg_00.bits.ID);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5980: FILE: arch/x86/kernel/io_apic.c:2056:
+		if (check_apicid_used(phys_id_present_map,
+					mp_ioapics[apic].mp_apicid)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5981: FILE: arch/x86/kernel/io_apic.c:2057:
+			printk(KERN_ERR "BIOS bug, IO-APIC#%d ID %d is already used!...\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5982: FILE: arch/x86/kernel/io_apic.c:2058:
+			printk(KERN_ERR "BIOS bug, IO-APIC#%d ID %d is already used!...\n",
+				apic, mp_ioapics[apic].mp_apicid);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#5988: FILE: arch/x86/kernel/io_apic.c:2064:
+			printk(KERN_ERR "... fixing up to %d. (tell your hw vendor)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#5989: FILE: arch/x86/kernel/io_apic.c:2065:
+			printk(KERN_ERR "... fixing up to %d. (tell your hw vendor)\n",
+				i);

WARNING:LINE_SPACING: Missing a blank line after declarations
#5994: FILE: arch/x86/kernel/io_apic.c:2070:
+			physid_mask_t tmp;
+			tmp = apicid_to_cpu_present(mp_ioapics[apic].mp_apicid);

WARNING:SPLIT_STRING: quoted string split across lines
#5996: FILE: arch/x86/kernel/io_apic.c:2072:
+			apic_printk(APIC_VERBOSE, "Setting %d in the "
+					"phys_id_present_map\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6001: FILE: arch/x86/kernel/io_apic.c:2077:
+
+

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#6010: FILE: arch/x86/kernel/io_apic.c:2086:
+					mp_irqs[i].mp_dstapic
+						= mp_ioapics[apic].mp_apicid;

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#6032: FILE: arch/x86/kernel/io_apic.c:2108:
+			printk("could not set ID!\n");

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#6046: FILE: arch/x86/kernel/io_apic.c:2122:
+__setup("no_timer_check", notimercheck);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#6069: FILE: arch/x86/kernel/io_apic.c:2203:
 {
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#6081: FILE: arch/x86/kernel/io_apic.c:2216:
+        send_IPI_self(irq_cfg(irq)->vector);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#6081: FILE: arch/x86/kernel/io_apic.c:2216:
+        send_IPI_self(irq_cfg(irq)->vector);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#6083: FILE: arch/x86/kernel/io_apic.c:2218:
+        return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#6083: FILE: arch/x86/kernel/io_apic.c:2218:
+        return 1;$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#6249: FILE: arch/x86/kernel/io_apic.c:2479:
+	/*
+	* It appears there is an erratum which affects at least version 0x11

CHECK:BRACES: Unbalanced braces around else statement
#6317: FILE: arch/x86/kernel/io_apic.c:2606:
+			else {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#6419: FILE: arch/x86/kernel/io_apic.c:2741:
+}
+early_param("disable_timer_pin_1", disable_timer_pin_setup);

ERROR:CODE_INDENT: code indent should use tabs where possible
#6443: FILE: arch/x86/kernel/io_apic.c:2763:
+        ver = apic_read(APIC_LVR);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#6443: FILE: arch/x86/kernel/io_apic.c:2763:
+        ver = apic_read(APIC_LVR);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#6444: FILE: arch/x86/kernel/io_apic.c:2764:
+        ver = GET_APIC_VERSION(ver);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#6444: FILE: arch/x86/kernel/io_apic.c:2764:
+        ver = GET_APIC_VERSION(ver);$

CHECK:BIT_MACRO: Prefer using the BIT macro
#6529: FILE: arch/x86/kernel/io_apic.c:2933:
+#define PIC_IRQS	(1 << PIC_CASCADE_IR)

ERROR:CODE_INDENT: code indent should use tabs where possible
#6546: FILE: arch/x86/kernel/io_apic.c:2949:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#6547: FILE: arch/x86/kernel/io_apic.c:2950:
+         * Set up IO-APIC IRQ routing.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#6548: FILE: arch/x86/kernel/io_apic.c:2951:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#6550: FILE: arch/x86/kernel/io_apic.c:2953:
+        if (!acpi_ioapic)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#6550: FILE: arch/x86/kernel/io_apic.c:2953:
+        if (!acpi_ioapic)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#6551: FILE: arch/x86/kernel/io_apic.c:2954:
+                setup_ioapic_ids_from_mpc();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#6551: FILE: arch/x86/kernel/io_apic.c:2954:
+                setup_ioapic_ids_from_mpc();$

WARNING:TYPO_SPELLING: 'didnt' may be misspelled - perhaps 'didn't'?
#6560: FILE: arch/x86/kernel/io_apic.c:2963:
+ *      Called after all the initialization is done. If we didnt find any
                                                            ^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#6566: FILE: arch/x86/kernel/io_apic.c:2969:
+        if (sis_apic_bug == -1)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#6566: FILE: arch/x86/kernel/io_apic.c:2969:
+        if (sis_apic_bug == -1)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#6567: FILE: arch/x86/kernel/io_apic.c:2970:
+                sis_apic_bug = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#6567: FILE: arch/x86/kernel/io_apic.c:2970:
+                sis_apic_bug = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#6568: FILE: arch/x86/kernel/io_apic.c:2971:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#6568: FILE: arch/x86/kernel/io_apic.c:2971:
+        return 0;$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#6616: FILE: arch/x86/kernel/io_apic.c:3092:
+	if (irq > 0) {
 		dynamic_irq_init(irq);
 	}

WARNING:PREFER_DEV_LEVEL: Prefer dev_dbg(... to dev_printk(KERN_DEBUG, ...
#6729: FILE: arch/x86/kernel/io_apic.c:3359:
+	dev_printk(KERN_DEBUG, &dev->dev, "irq %d for MSI/MSI-X\n", irq);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#6883: FILE: arch/x86/kernel/io_apic.c:3592:
+	set_irq_chip_and_handler_name(irq, &hpet_msi_type, handle_edge_irq,
+		"edge");

WARNING:PREFER_DEV_LEVEL: Prefer dev_dbg(... to dev_printk(KERN_DEBUG, ...
#6941: FILE: arch/x86/kernel/io_apic.c:3691:
+		dev_printk(KERN_DEBUG, &dev->dev, "irq %d for HT\n", irq);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#6976: FILE: arch/x86/kernel/io_apic.c:3726:
+	BUG_ON(sizeof(struct uv_IO_APIC_route_entry) != sizeof(unsigned long));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#7004: FILE: arch/x86/kernel/io_apic.c:3754:
+	BUG_ON(sizeof(struct uv_IO_APIC_route_entry) != sizeof(unsigned long));

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#7013: FILE: arch/x86/kernel/io_apic.c:3763:
+int __init io_apic_get_redir_entries (int ioapic)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#7082: FILE: arch/x86/kernel/io_apic.c:3830:
+		printk(KERN_WARNING "IOAPIC[%d]: Invalid apic_id %d, trying "

WARNING:SPLIT_STRING: quoted string split across lines
#7083: FILE: arch/x86/kernel/io_apic.c:3831:
+		printk(KERN_WARNING "IOAPIC[%d]: Invalid apic_id %d, trying "
+			"%d\n", ioapic, apic_id, reg_00.bits.ID);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#7092: FILE: arch/x86/kernel/io_apic.c:3840:
+	if (check_apicid_used(apic_id_map, apic_id)) {
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#7101: FILE: arch/x86/kernel/io_apic.c:3849:
+		printk(KERN_WARNING "IOAPIC[%d]: apic_id %d already used, "

WARNING:SPLIT_STRING: quoted string split across lines
#7102: FILE: arch/x86/kernel/io_apic.c:3850:
+		printk(KERN_WARNING "IOAPIC[%d]: apic_id %d already used, "
+			"trying %d\n", ioapic, apic_id, i);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#7120: FILE: arch/x86/kernel/io_apic.c:3868:
+			printk("IOAPIC[%d]: Unable to change apic_id!\n", ioapic);

ERROR:CODE_INDENT: code indent should use tabs where possible
#7178: FILE: arch/x86/kernel/io_apic.c:4022:
+                        if (!ioapic_phys) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#7178: FILE: arch/x86/kernel/io_apic.c:4022:
+                        if (!ioapic_phys) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#7179: FILE: arch/x86/kernel/io_apic.c:4023:
+                                printk(KERN_ERR$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#7179: FILE: arch/x86/kernel/io_apic.c:4023:
+                                printk(KERN_ERR$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#7179: FILE: arch/x86/kernel/io_apic.c:4023:
+                                printk(KERN_ERR

ERROR:CODE_INDENT: code indent should use tabs where possible
#7180: FILE: arch/x86/kernel/io_apic.c:4024:
+                                       "WARNING: bogus zero IO-APIC "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#7180: FILE: arch/x86/kernel/io_apic.c:4024:
+                                       "WARNING: bogus zero IO-APIC "$

ERROR:CODE_INDENT: code indent should use tabs where possible
#7181: FILE: arch/x86/kernel/io_apic.c:4025:
+                                       "address found in MPTABLE, "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#7181: FILE: arch/x86/kernel/io_apic.c:4025:
+                                       "address found in MPTABLE, "$

WARNING:SPLIT_STRING: quoted string split across lines
#7181: FILE: arch/x86/kernel/io_apic.c:4025:
+                                       "WARNING: bogus zero IO-APIC "
+                                       "address found in MPTABLE, "

ERROR:CODE_INDENT: code indent should use tabs where possible
#7182: FILE: arch/x86/kernel/io_apic.c:4026:
+                                       "disabling IO/APIC support!\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#7182: FILE: arch/x86/kernel/io_apic.c:4026:
+                                       "disabling IO/APIC support!\n");$

WARNING:SPLIT_STRING: quoted string split across lines
#7182: FILE: arch/x86/kernel/io_apic.c:4026:
+                                       "address found in MPTABLE, "
+                                       "disabling IO/APIC support!\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#7183: FILE: arch/x86/kernel/io_apic.c:4027:
+                                smp_found_config = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#7183: FILE: arch/x86/kernel/io_apic.c:4027:
+                                smp_found_config = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#7184: FILE: arch/x86/kernel/io_apic.c:4028:
+                                skip_ioapic_setup = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#7184: FILE: arch/x86/kernel/io_apic.c:4028:
+                                skip_ioapic_setup = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#7185: FILE: arch/x86/kernel/io_apic.c:4029:
+                                goto fake_ioapic_page;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#7185: FILE: arch/x86/kernel/io_apic.c:4029:
+                                goto fake_ioapic_page;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#7186: FILE: arch/x86/kernel/io_apic.c:4030:
+                        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#7186: FILE: arch/x86/kernel/io_apic.c:4030:
+                        }$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#10133: FILE: arch/x86/kernel/irq_32.c:227:
+	unsigned vector = ~regs->orig_ax;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#10135: FILE: arch/x86/kernel/irq_32.c:229:
+	unsigned irq;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#10151: FILE: arch/x86/kernel/irq_32.c:240:
+		printk(KERN_EMERG "%s: cannot handle IRQ %d vector %#x cpu %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#10152: FILE: arch/x86/kernel/irq_32.c:241:
+		printk(KERN_EMERG "%s: cannot handle IRQ %d vector %#x cpu %d\n",
+					__func__, irq, vector, smp_processor_id());

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#10153: FILE: arch/x86/kernel/irq_32.c:242:
+		BUG();

CHECK:SPACING: No space is necessary after a cast
#10175: FILE: arch/x86/kernel/irq_32.c:283:
+	i = *(loff_t *) v;

CHECK:SPACING: No space is necessary after a cast
#10286: FILE: arch/x86/kernel/irq_64.c:88:
+	i = *(loff_t *) v;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#10546: FILE: arch/x86/kernel/irqinit_64.c:157:
+		set_irq_chip_and_handler_name(i, &i8259A_chip,
 						      handle_level_irq, "XT");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#10631: FILE: arch/x86/kernel/setup_percpu.c:162:
+		ptr = __alloc_bootmem(size, align,
+				 __pa(MAX_DMA_ADDRESS));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#10637: FILE: arch/x86/kernel/setup_percpu.c:167:
+			ptr = __alloc_bootmem(size, align,
+					 __pa(MAX_DMA_ADDRESS));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#10647: FILE: arch/x86/kernel/setup_percpu.c:177:
+			ptr = __alloc_bootmem_node(NODE_DATA(node), size, align,
+							__pa(MAX_DMA_ADDRESS));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#10669: FILE: arch/x86/kernel/smpboot.c:545:
+	printk(KERN_INFO "Inquiring remote APIC 0x%x...\n", apicid);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#10673: FILE: arch/x86/kernel/smpboot.c:548:
+		printk(KERN_INFO "... APIC 0x%x %s: ", apicid, names[i]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#10682: FILE: arch/x86/kernel/smpboot.c:876:
+	printk(KERN_INFO "Booting processor %d APIC 0x%x ip 0x%lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#10683: FILE: arch/x86/kernel/smpboot.c:877:
+	printk(KERN_INFO "Booting processor %d APIC 0x%x ip 0x%lx\n",
 			  cpu, apicid, start_ip);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#10692: FILE: arch/x86/kernel/uv_irq.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#10777: FILE: arch/x86/kernel/uv_sysfs.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#10791: FILE: arch/x86/kernel/uv_sysfs.c:15:
+ *  along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#10792: FILE: arch/x86/kernel/uv_sysfs.c:16:
+ *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#10804: FILE: arch/x86/kernel/uv_sysfs.c:28:
+static ssize_t partition_id_show(struct kobject *kobj,
+			struct kobj_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#10810: FILE: arch/x86/kernel/uv_sysfs.c:34:
+static ssize_t coherence_id_show(struct kobject *kobj,
+			struct kobj_attribute *attr, char *buf)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#10816: FILE: arch/x86/kernel/uv_sysfs.c:40:
+	__ATTR(partition_id, S_IRUGO, partition_id_show, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#10819: FILE: arch/x86/kernel/uv_sysfs.c:43:
+	__ATTR(coherence_id, S_IRUGO, coherence_id_show, NULL);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#10821: FILE: arch/x86/kernel/uv_sysfs.c:45:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#10829: FILE: arch/x86/kernel/uv_sysfs.c:53:
+		printk(KERN_WARNING "kobject_create_and_add sgi_uv failed \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#10829: FILE: arch/x86/kernel/uv_sysfs.c:53:
+		printk(KERN_WARNING "kobject_create_and_add sgi_uv failed \n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#10835: FILE: arch/x86/kernel/uv_sysfs.c:59:
+		printk(KERN_WARNING "sysfs_create_file partition_id failed \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#10835: FILE: arch/x86/kernel/uv_sysfs.c:59:
+		printk(KERN_WARNING "sysfs_create_file partition_id failed \n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#10841: FILE: arch/x86/kernel/uv_sysfs.c:65:
+		printk(KERN_WARNING "sysfs_create_file coherence_id failed \n");

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#10841: FILE: arch/x86/kernel/uv_sysfs.c:65:
+		printk(KERN_WARNING "sysfs_create_file coherence_id failed \n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#11001: FILE: arch/x86/mach-generic/bigsmp.c:46:
+        return cpumask_of_cpu(cpu);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#11001: FILE: arch/x86/mach-generic/bigsmp.c:46:
+        return cpumask_of_cpu(cpu);$

WARNING:TYPO_SPELLING: 'desitination' may be misspelled - perhaps 'destination'?
#11022: FILE: arch/x86/mach-generic/es7000.c:86:
+	 * hyperthread was specified in the interrupt desitination.
 	                                              ^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'desitination' may be misspelled - perhaps 'destination'?
#11045: FILE: arch/x86/mach-generic/numaq.c:49:
+	 * hyperthread was specified in the interrupt desitination.
 	                                              ^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'desitination' may be misspelled - perhaps 'destination'?
#11068: FILE: arch/x86/mach-generic/summit.c:34:
+	 * hyperthread was specified in the interrupt desitination.
 	                                              ^^^^^^^^^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!state"
#11251: FILE: drivers/char/random.c:706:
+	if (state == NULL)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#11381: FILE: drivers/net/hamradio/baycom_ser_fdx.c:422:
+				0xffff-SER12_EXTENT, nr_irqs);
 				      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#11584: FILE: drivers/pci/dmar.c:302:
+	status = acpi_get_table_with_size(ACPI_SIG_DMAR, 0,
+				(struct acpi_table_header **)&dmar_tbl,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#11588: FILE: drivers/pci/dmar.c:306:
+		printk (KERN_WARNING PREFIX "Unable to map DMAR\n");

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#11588: FILE: drivers/pci/dmar.c:306:
+		printk (KERN_WARNING PREFIX "Unable to map DMAR\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#11630: FILE: drivers/pci/dmar.c:414:
+		struct dmar_rmrr_unit *rmrr, *rmrr_n;
+		list_for_each_entry_safe(rmrr, rmrr_n, &dmar_rmrr_units, list) {

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#11722: FILE: drivers/pci/htirq.c:141:
+	irq_want= build_irq_for_pci_dev(dev);
 	        ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#11738: FILE: drivers/pci/intr_remapping.c:1:
+#include <linux/interrupt.h>

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#11762: FILE: drivers/pci/intr_remapping.c:29:
+extern void *__alloc_bootmem_nopanic(unsigned long size,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#11775: FILE: drivers/pci/intr_remapping.c:42:
+		printk(KERN_DEBUG "try to get more irq_2_iommu %d\n", nr_irq_2_iommu);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#11777: FILE: drivers/pci/intr_remapping.c:44:
+		total_bytes = sizeof(struct irq_2_iommu)*nr_irq_2_iommu;
 		                                        ^

CHECK:CAMELCASE: Avoid CamelCase: <irq_2_iommuX>
#11791: FILE: drivers/pci/intr_remapping.c:58:
+	iommu = &irq_2_iommuX[irq_2_iommu_index];

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#11802: FILE: drivers/pci/intr_remapping.c:69:
+	BUG_ON(!desc);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#11841: FILE: drivers/pci/intr_remapping.c:108:
+}
+static struct irq_2_iommu *irq_2_iommu_alloc(unsigned int irq)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "valid_irq_2_iommu"
#11872: FILE: drivers/pci/intr_remapping.c:133:
+	return valid_irq_2_iommu(irq) != NULL;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#12194: FILE: drivers/scsi/aha152x.c:340:
+#define IRQ_MAX (nr_irqs-1)
                         ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#12207: FILE: drivers/scsi/qla2xxx/qla_def.h:2112:
+	uint32_t msix_vector;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!i->head"
#12287: FILE: drivers/serial/8250.c:1544:
+	if (i->head == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!n"
#12311: FILE: drivers/serial/8250.c:1567:
+	if (n == NULL) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*i)...) over kzalloc(sizeof(struct irq_info)...)
#12312: FILE: drivers/serial/8250.c:1568:
+		i = kzalloc(sizeof(struct irq_info), GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!i"
#12313: FILE: drivers/serial/8250.c:1569:
+		if (i == NULL) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#12345: FILE: drivers/serial/8250.c:1616:
+	BUG_ON(n == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!n"
#12345: FILE: drivers/serial/8250.c:1616:
+	BUG_ON(n == NULL);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_serial.irq >= nr_irqs'
#12469: FILE: drivers/serial/serial_core.c:744:
+	if ((new_serial.irq >= nr_irqs) || (new_serial.irq < 0) ||
 	    (new_serial.baud_base < 9600))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_serial.irq < 0'
#12469: FILE: drivers/serial/serial_core.c:744:
+	if ((new_serial.irq >= nr_irqs) || (new_serial.irq < 0) ||
 	    (new_serial.baud_base < 9600))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'new_serial.baud_base < 9600'
#12469: FILE: drivers/serial/serial_core.c:744:
+	if ((new_serial.irq >= nr_irqs) || (new_serial.irq < 0) ||
 	    (new_serial.baud_base < 9600))

CHECK:CAMELCASE: Avoid CamelCase: <SCIx_TXI_IRQ>
#12495: FILE: drivers/serial/sh-sci.c:1160:
+	if (ser->irq != s->irqs[SCIx_TXI_IRQ] || ser->irq > nr_irqs)

WARNING:LINE_SPACING: Missing a blank line after declarations
#12533: FILE: drivers/xen/events.c:144:
+		struct irq_desc *desc = irq_to_desc(i);
+		if (!desc)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#12624: FILE: fs/proc/proc_misc.c:533:
+		for_each_irq_desc(j, desc)
+		{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#12641: FILE: fs/proc/proc_misc.c:582:
+	for_each_irq_desc(j, desc)
+	{

CHECK:LINE_SPACING: Please don't use multiple blank lines
#12689: FILE: fs/proc/proc_misc.c:665:
 
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#12795: FILE: include/asm-x86/bigsmp/apic.h:15:
+        return cpu_online_map;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#12795: FILE: include/asm-x86/bigsmp/apic.h:15:
+        return cpu_online_map;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#12797: FILE: include/asm-x86/bigsmp/apic.h:17:
+        return cpumask_of_cpu(0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#12797: FILE: include/asm-x86/bigsmp/apic.h:17:
+        return cpumask_of_cpu(0);$

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#12819: FILE: include/asm-x86/efi.h:101:
+#define efi_call0(_f)					(-ENOSYS)

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#12820: FILE: include/asm-x86/efi.h:102:
+#define efi_call1(_f, _a1)				(-ENOSYS)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#12821: FILE: include/asm-x86/efi.h:103:
+#define efi_call2(_f, _a1, _a2)				(-ENOSYS)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#12822: FILE: include/asm-x86/efi.h:104:
+#define efi_call3(_f, _a1, _a2, _a3)			(-ENOSYS)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#12823: FILE: include/asm-x86/efi.h:105:
+#define efi_call4(_f, _a1, _a2, _a3, _a4)		(-ENOSYS)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#12824: FILE: include/asm-x86/efi.h:106:
+#define efi_call5(_f, _a1, _a2, _a3, _a4, _a5)		(-ENOSYS)

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#12825: FILE: include/asm-x86/efi.h:107:
+#define efi_call6(_f, _a1, _a2, _a3, _a4, _a5, _a6)	(-ENOSYS)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'n' may be better as '(n)' to avoid precedence issues
#12888: FILE: include/asm-x86/hpet.h:16:
+#define HPET_Tn_CFG(n)		(0x100 + 0x20 * n)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'n' may be better as '(n)' to avoid precedence issues
#12889: FILE: include/asm-x86/hpet.h:17:
+#define HPET_Tn_CMP(n)		(0x108 + 0x20 * n)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'n' may be better as '(n)' to avoid precedence issues
#12890: FILE: include/asm-x86/hpet.h:18:
+#define HPET_Tn_ROUTE(n)	(0x110 + 0x20 * n)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#12899: FILE: include/asm-x86/hpet.h:75:
+extern void hpet_msi_unmask(unsigned int irq);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#12900: FILE: include/asm-x86/hpet.h:76:
+extern void hpet_msi_mask(unsigned int irq);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#12901: FILE: include/asm-x86/hpet.h:77:
+extern void hpet_msi_write(unsigned int irq, struct msi_msg *msg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#12902: FILE: include/asm-x86/hpet.h:78:
+extern void hpet_msi_read(unsigned int irq, struct msi_msg *msg);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#12905: FILE: include/asm-x86/hpet.h:81:
+extern int arch_setup_hpet_msi(unsigned int irq);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#12993: FILE: include/asm-x86/io_apic.h:191:
+extern int probe_nr_irqs(void);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#13086: FILE: include/asm-x86/mach-default/entry_arch.h:17:
+BUILD_INTERRUPT(irq_move_cleanup_interrupt,IRQ_MOVE_CLEANUP_VECTOR)
                                           ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#13101: FILE: include/asm-x86/mach-default/mach_apic.h:91:
+        /* Careful. Some cpus do not strictly honor the set of cpus$

ERROR:CODE_INDENT: code indent should use tabs where possible
#13102: FILE: include/asm-x86/mach-default/mach_apic.h:92:
+         * specified in the interrupt destination when using lowest$

ERROR:CODE_INDENT: code indent should use tabs where possible
#13103: FILE: include/asm-x86/mach-default/mach_apic.h:93:
+         * priority interrupt delivery mode.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#13104: FILE: include/asm-x86/mach-default/mach_apic.h:94:
+         *$

ERROR:CODE_INDENT: code indent should use tabs where possible
#13105: FILE: include/asm-x86/mach-default/mach_apic.h:95:
+         * In particular there was a hyperthreading cpu observed to$

ERROR:CODE_INDENT: code indent should use tabs where possible
#13106: FILE: include/asm-x86/mach-default/mach_apic.h:96:
+         * deliver interrupts to the wrong hyperthread when only one$

WARNING:TYPO_SPELLING: 'desitination' may be misspelled - perhaps 'destination'?
#13107: FILE: include/asm-x86/mach-default/mach_apic.h:97:
+         * hyperthread was specified in the interrupt desitination.
                                                       ^^^^^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#13107: FILE: include/asm-x86/mach-default/mach_apic.h:97:
+         * hyperthread was specified in the interrupt desitination.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#13108: FILE: include/asm-x86/mach-default/mach_apic.h:98:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#13109: FILE: include/asm-x86/mach-default/mach_apic.h:99:
+        cpumask_t domain = { { [0] = APIC_ALL_CPUS, } };$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#13109: FILE: include/asm-x86/mach-default/mach_apic.h:99:
+        cpumask_t domain = { { [0] = APIC_ALL_CPUS, } };$

ERROR:CODE_INDENT: code indent should use tabs where possible
#13110: FILE: include/asm-x86/mach-default/mach_apic.h:100:
+        return domain;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#13110: FILE: include/asm-x86/mach-default/mach_apic.h:100:
+        return domain;$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#13216: FILE: include/asm-x86/uv/bios.h:18:
  *  along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#13217: FILE: include/asm-x86/uv/bios.h:19:
  *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA$

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#13245: FILE: include/asm-x86/uv/bios.h:43:
+	BIOS_STATUS_UNIMPLEMENTED	= -ENOSYS,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#13306: FILE: include/asm-x86/uv/bios.h:77:
+extern s64 uv_bios_call(enum uv_bios_cmd, u64, u64, u64, u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#13306: FILE: include/asm-x86/uv/bios.h:77:
+extern s64 uv_bios_call(enum uv_bios_cmd, u64, u64, u64, u64, u64);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#13306: FILE: include/asm-x86/uv/bios.h:77:
+extern s64 uv_bios_call(enum uv_bios_cmd, u64, u64, u64, u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#13306: FILE: include/asm-x86/uv/bios.h:77:
+extern s64 uv_bios_call(enum uv_bios_cmd, u64, u64, u64, u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#13306: FILE: include/asm-x86/uv/bios.h:77:
+extern s64 uv_bios_call(enum uv_bios_cmd, u64, u64, u64, u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#13306: FILE: include/asm-x86/uv/bios.h:77:
+extern s64 uv_bios_call(enum uv_bios_cmd, u64, u64, u64, u64, u64);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#13307: FILE: include/asm-x86/uv/bios.h:78:
+extern s64 uv_bios_call_irqsave(enum uv_bios_cmd, u64, u64, u64, u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#13307: FILE: include/asm-x86/uv/bios.h:78:
+extern s64 uv_bios_call_irqsave(enum uv_bios_cmd, u64, u64, u64, u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#13307: FILE: include/asm-x86/uv/bios.h:78:
+extern s64 uv_bios_call_irqsave(enum uv_bios_cmd, u64, u64, u64, u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#13307: FILE: include/asm-x86/uv/bios.h:78:
+extern s64 uv_bios_call_irqsave(enum uv_bios_cmd, u64, u64, u64, u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#13307: FILE: include/asm-x86/uv/bios.h:78:
+extern s64 uv_bios_call_irqsave(enum uv_bios_cmd, u64, u64, u64, u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#13307: FILE: include/asm-x86/uv/bios.h:78:
+extern s64 uv_bios_call_irqsave(enum uv_bios_cmd, u64, u64, u64, u64, u64);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#13308: FILE: include/asm-x86/uv/bios.h:79:
+extern s64 uv_bios_call_reentrant(enum uv_bios_cmd, u64, u64, u64, u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#13308: FILE: include/asm-x86/uv/bios.h:79:
+extern s64 uv_bios_call_reentrant(enum uv_bios_cmd, u64, u64, u64, u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#13308: FILE: include/asm-x86/uv/bios.h:79:
+extern s64 uv_bios_call_reentrant(enum uv_bios_cmd, u64, u64, u64, u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#13308: FILE: include/asm-x86/uv/bios.h:79:
+extern s64 uv_bios_call_reentrant(enum uv_bios_cmd, u64, u64, u64, u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#13308: FILE: include/asm-x86/uv/bios.h:79:
+extern s64 uv_bios_call_reentrant(enum uv_bios_cmd, u64, u64, u64, u64, u64);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#13308: FILE: include/asm-x86/uv/bios.h:79:
+extern s64 uv_bios_call_reentrant(enum uv_bios_cmd, u64, u64, u64, u64, u64);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#13310: FILE: include/asm-x86/uv/bios.h:81:
+extern s64 uv_bios_get_sn_info(int, int *, long *, long *, long *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#13310: FILE: include/asm-x86/uv/bios.h:81:
+extern s64 uv_bios_get_sn_info(int, int *, long *, long *, long *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int *' should also have an identifier name
#13310: FILE: include/asm-x86/uv/bios.h:81:
+extern s64 uv_bios_get_sn_info(int, int *, long *, long *, long *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long *' should also have an identifier name
#13310: FILE: include/asm-x86/uv/bios.h:81:
+extern s64 uv_bios_get_sn_info(int, int *, long *, long *, long *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long *' should also have an identifier name
#13310: FILE: include/asm-x86/uv/bios.h:81:
+extern s64 uv_bios_get_sn_info(int, int *, long *, long *, long *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'long *' should also have an identifier name
#13310: FILE: include/asm-x86/uv/bios.h:81:
+extern s64 uv_bios_get_sn_info(int, int *, long *, long *, long *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#13311: FILE: include/asm-x86/uv/bios.h:82:
+extern s64 uv_bios_freq_base(u64, u64 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64' should also have an identifier name
#13311: FILE: include/asm-x86/uv/bios.h:82:
+extern s64 uv_bios_freq_base(u64, u64 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u64 *' should also have an identifier name
#13311: FILE: include/asm-x86/uv/bios.h:82:
+extern s64 uv_bios_freq_base(u64, u64 *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#13313: FILE: include/asm-x86/uv/bios.h:84:
+extern void uv_bios_init(void);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#13330: FILE: include/asm-x86/uv/uv_irq.h:1:
+/*

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#13359: FILE: include/asm-x86/uv/uv_irq.h:30:
+extern int arch_enable_uv_irq(char *, unsigned int, int, int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#13359: FILE: include/asm-x86/uv/uv_irq.h:30:
+extern int arch_enable_uv_irq(char *, unsigned int, int, int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#13359: FILE: include/asm-x86/uv/uv_irq.h:30:
+extern int arch_enable_uv_irq(char *, unsigned int, int, int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#13359: FILE: include/asm-x86/uv/uv_irq.h:30:
+extern int arch_enable_uv_irq(char *, unsigned int, int, int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#13359: FILE: include/asm-x86/uv/uv_irq.h:30:
+extern int arch_enable_uv_irq(char *, unsigned int, int, int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#13359: FILE: include/asm-x86/uv/uv_irq.h:30:
+extern int arch_enable_uv_irq(char *, unsigned int, int, int, unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#13360: FILE: include/asm-x86/uv/uv_irq.h:31:
+extern void arch_disable_uv_irq(int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#13360: FILE: include/asm-x86/uv/uv_irq.h:31:
+extern void arch_disable_uv_irq(int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#13360: FILE: include/asm-x86/uv/uv_irq.h:31:
+extern void arch_disable_uv_irq(int, unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#13362: FILE: include/asm-x86/uv/uv_irq.h:33:
+extern int uv_setup_irq(char *, int, int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#13362: FILE: include/asm-x86/uv/uv_irq.h:33:
+extern int uv_setup_irq(char *, int, int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#13362: FILE: include/asm-x86/uv/uv_irq.h:33:
+extern int uv_setup_irq(char *, int, int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#13362: FILE: include/asm-x86/uv/uv_irq.h:33:
+extern int uv_setup_irq(char *, int, int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#13362: FILE: include/asm-x86/uv/uv_irq.h:33:
+extern int uv_setup_irq(char *, int, int, unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#13363: FILE: include/asm-x86/uv/uv_irq.h:34:
+extern void uv_teardown_irq(unsigned int, int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#13363: FILE: include/asm-x86/uv/uv_irq.h:34:
+extern void uv_teardown_irq(unsigned int, int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#13363: FILE: include/asm-x86/uv/uv_irq.h:34:
+extern void uv_teardown_irq(unsigned int, int, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#13363: FILE: include/asm-x86/uv/uv_irq.h:34:
+extern void uv_teardown_irq(unsigned int, int, unsigned long);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#13387: FILE: include/linux/efi.h:212:
+    EFI_GUID(  0x3b13a7d4, 0x633e, 0x11dd, 0x93, 0xec, 0xda, 0x25, 0x56, 0xd8, 0x95, 0x93 )$

ERROR:SPACING: space prohibited after that open parenthesis '('
#13387: FILE: include/linux/efi.h:212:
+    EFI_GUID(  0x3b13a7d4, 0x633e, 0x11dd, 0x93, 0xec, 0xda, 0x25, 0x56, 0xd8, 0x95, 0x93 )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#13387: FILE: include/linux/efi.h:212:
+    EFI_GUID(  0x3b13a7d4, 0x633e, 0x11dd, 0x93, 0xec, 0xda, 0x25, 0x56, 0xd8, 0x95, 0x93 )

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#13414: FILE: include/linux/init.h:255:
+	void (*init_work)(void *);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#13416: FILE: include/linux/init.h:257:
+};
+extern struct dyn_array *__dyn_array_start[], *__dyn_array_end[];

CHECK:CAMELCASE: Avoid CamelCase: <__dyn_array_##nameX>
#13420: FILE: include/linux/init.h:261:
+		static struct dyn_array __dyn_array_##nameX __initdata = \

CHECK:CAMELCASE: Avoid CamelCase: <__dyn_array_ptr_##nameX>
#13427: FILE: include/linux/init.h:268:
+		static struct dyn_array *__dyn_array_ptr_##nameX __used \

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".dyn_array.init") over __attribute__((__section__(".dyn_array.init")))
#13428: FILE: include/linux/init.h:269:
+		__attribute__((__section__(".dyn_array.init"))) = \

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'nameX' - possible side-effects?
#13431: FILE: include/linux/init.h:272:
+#define DEFINE_DYN_ARRAY(nameX, sizeX, nrX, alignX, init_workX) \
+	DEFINE_DYN_ARRAY_ADDR(nameX, nameX, sizeX, nrX, alignX, init_workX)

CHECK:CAMELCASE: Avoid CamelCase: <__per_cpu_dyn_array_##nameX>
#13435: FILE: include/linux/init.h:276:
+		static struct dyn_array __per_cpu_dyn_array_##nameX __initdata = \

CHECK:CAMELCASE: Avoid CamelCase: <__per_cpu_dyn_array_ptr_##nameX>
#13442: FILE: include/linux/init.h:283:
+		static struct dyn_array *__per_cpu_dyn_array_ptr_##nameX __used \

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".per_cpu_dyn_array.init") over __attribute__((__section__(".per_cpu_dyn_array.init")))
#13443: FILE: include/linux/init.h:284:
+		__attribute__((__section__(".per_cpu_dyn_array.init"))) = \

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'nameX' - possible side-effects?
#13446: FILE: include/linux/init.h:287:
+#define DEFINE_PER_CPU_DYN_ARRAY(nameX, sizeX, nrX, alignX, init_workX) \
+	DEFINE_PER_CPU_DYN_ARRAY_ADDR(nameX, nameX, nrX, alignX, init_workX)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#13449: FILE: include/linux/init.h:290:
+extern void pre_alloc_dyn_array(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#13450: FILE: include/linux/init.h:291:
+extern unsigned long per_cpu_dyn_array_size(unsigned long *align);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#13451: FILE: include/linux/init.h:292:
+extern void per_cpu_alloc_dyn_array(int cpu, char *ptr);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'irq' - possible side-effects?
#13466: FILE: include/linux/interrupt.h:21:
+#define for_each_irq_desc(irq, desc)		\
+	for (irq = 0; irq < nr_irqs; irq++)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#13499: FILE: include/linux/irq.h:166:
+       struct irq_2_iommu      *irq_2_iommu;$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#13517: FILE: include/linux/irq.h:195:
+extern struct irq_desc *irq_to_desc(unsigned int irq);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#13518: FILE: include/linux/irq.h:196:
+extern struct irq_desc *irq_to_desc_alloc(unsigned int irq);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'irq' - possible side-effects?
#13530: FILE: include/linux/irq.h:208:
+#define for_each_irq_desc(irq, desc)		\
+	for (irq = 0, desc = irq_desc; irq < nr_irqs; irq++, desc = &irq_desc[irq])

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'desc' - possible side-effects?
#13530: FILE: include/linux/irq.h:208:
+#define for_each_irq_desc(irq, desc)		\
+	for (irq = 0, desc = irq_desc; irq < nr_irqs; irq++, desc = &irq_desc[irq])

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'irqX' - possible side-effects?
#13537: FILE: include/linux/irq.h:215:
+#define for_each_irq_desc(irqX, desc)		\
+	for (desc = sparse_irqs, irqX = desc->irq; desc; desc = desc->next, irqX = desc ? desc->irq : -1U)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'desc' - possible side-effects?
#13537: FILE: include/linux/irq.h:215:
+#define for_each_irq_desc(irqX, desc)		\
+	for (desc = sparse_irqs, irqX = desc->irq; desc; desc = desc->next, irqX = desc ? desc->irq : -1U)

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#13538: FILE: include/linux/irq.h:216:
+	for (desc = sparse_irqs, irqX = desc->irq; desc; desc = desc->next, irqX = desc ? desc->irq : -1U)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#13635: FILE: include/linux/irq.h:394:
+extern unsigned int create_irq_nr(unsigned int irq_want);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#13672: FILE: include/linux/kernel_stat.h:32:
+       unsigned int irqs[NR_IRQS];$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#13686: FILE: include/linux/kernel_stat.h:49:
+
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#13690: FILE: include/linux/kernel_stat.h:53:
+       return kstat_cpu(cpu).irqs[irq];$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#13693: FILE: include/linux/kernel_stat.h:56:
+extern unsigned int kstat_irqs_cpu(unsigned int irq, int cpu);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#13744: FILE: init/dyn_array.c:1:
+#include <linux/types.h>

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#13756: FILE: init/dyn_array.c:13:
+	struct dyn_array **daa;
 	                   ^^^

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#13760: FILE: init/dyn_array.c:17:
+	for (daa = __dyn_array_start ; daa < __dyn_array_end; daa++) {
 	     ^^^

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#13760: FILE: init/dyn_array.c:17:
+	for (daa = __dyn_array_start ; daa < __dyn_array_end; daa++) {
 	                               ^^^

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#13760: FILE: init/dyn_array.c:17:
+	for (daa = __dyn_array_start ; daa < __dyn_array_end; daa++) {
 	                                                      ^^^

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#13761: FILE: init/dyn_array.c:18:
+		struct dyn_array *da = *daa;
 		                        ^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#13763: FILE: init/dyn_array.c:20:
+		printk(KERN_DEBUG "dyn_array %pF size:%#lx nr:%d align:%#lx\n",

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pF' - use %pS instead
#13763: FILE: init/dyn_array.c:20:
+		printk(KERN_DEBUG "dyn_array %pF size:%#lx nr:%d align:%#lx\n",
+			da->name, da->size, *da->nr, da->align);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13764: FILE: init/dyn_array.c:21:
+		printk(KERN_DEBUG "dyn_array %pF size:%#lx nr:%d align:%#lx\n",
+			da->name, da->size, *da->nr, da->align);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#13771: FILE: init/dyn_array.c:28:
+		printk(KERN_DEBUG "dyn_array total_size: %#lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13772: FILE: init/dyn_array.c:29:
+		printk(KERN_DEBUG "dyn_array total_size: %#lx\n",
+			 total_size);

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#13781: FILE: init/dyn_array.c:38:
+	for (daa = __dyn_array_start ; daa < __dyn_array_end; daa++) {
 	     ^^^

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#13781: FILE: init/dyn_array.c:38:
+	for (daa = __dyn_array_start ; daa < __dyn_array_end; daa++) {
 	                               ^^^

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#13781: FILE: init/dyn_array.c:38:
+	for (daa = __dyn_array_start ; daa < __dyn_array_end; daa++) {
 	                                                      ^^^

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#13782: FILE: init/dyn_array.c:39:
+		struct dyn_array *da = *daa;
 		                        ^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#13786: FILE: init/dyn_array.c:43:
+		printk(KERN_DEBUG "dyn_array %pF ==> [%#lx - %#lx]\n",

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pF' - use %pS instead
#13786: FILE: init/dyn_array.c:43:
+		printk(KERN_DEBUG "dyn_array %pF ==> [%#lx - %#lx]\n",
+			da->name, phys, phys + size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13787: FILE: init/dyn_array.c:44:
+		printk(KERN_DEBUG "dyn_array %pF ==> [%#lx - %#lx]\n",
+			da->name, phys, phys + size);

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#13810: FILE: init/dyn_array.c:67:
+	struct dyn_array **daa;
 	                   ^^^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#13811: FILE: init/dyn_array.c:68:
+	unsigned max_align = 1;

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#13813: FILE: init/dyn_array.c:70:
+	for (daa = __per_cpu_dyn_array_start ; daa < __per_cpu_dyn_array_end; daa++) {
 	     ^^^

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#13813: FILE: init/dyn_array.c:70:
+	for (daa = __per_cpu_dyn_array_start ; daa < __per_cpu_dyn_array_end; daa++) {
 	                                       ^^^

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#13813: FILE: init/dyn_array.c:70:
+	for (daa = __per_cpu_dyn_array_start ; daa < __per_cpu_dyn_array_end; daa++) {
 	                                                                      ^^^

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#13814: FILE: init/dyn_array.c:71:
+		struct dyn_array *da = *daa;
 		                        ^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#13816: FILE: init/dyn_array.c:73:
+		printk(KERN_DEBUG "per_cpu_dyn_array %pF size:%#lx nr:%d align:%#lx\n",

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pF' - use %pS instead
#13816: FILE: init/dyn_array.c:73:
+		printk(KERN_DEBUG "per_cpu_dyn_array %pF size:%#lx nr:%d align:%#lx\n",
+			da->name, da->size, *da->nr, da->align);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13817: FILE: init/dyn_array.c:74:
+		printk(KERN_DEBUG "per_cpu_dyn_array %pF size:%#lx nr:%d align:%#lx\n",
+			da->name, da->size, *da->nr, da->align);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#13824: FILE: init/dyn_array.c:81:
+		printk(KERN_DEBUG "per_cpu_dyn_array total_size: %#lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13825: FILE: init/dyn_array.c:82:
+		printk(KERN_DEBUG "per_cpu_dyn_array total_size: %#lx\n",
+			 total_size);

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#13837: FILE: init/dyn_array.c:94:
+	struct dyn_array **daa;
 	                   ^^^

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#13842: FILE: init/dyn_array.c:99:
+	for (daa = __per_cpu_dyn_array_start ; daa < __per_cpu_dyn_array_end; daa++) {
 	     ^^^

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#13842: FILE: init/dyn_array.c:99:
+	for (daa = __per_cpu_dyn_array_start ; daa < __per_cpu_dyn_array_end; daa++) {
 	                                       ^^^

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#13842: FILE: init/dyn_array.c:99:
+	for (daa = __per_cpu_dyn_array_start ; daa < __per_cpu_dyn_array_end; daa++) {
 	                                                                      ^^^

WARNING:TYPO_SPELLING: 'daa' may be misspelled - perhaps 'data'?
#13843: FILE: init/dyn_array.c:100:
+		struct dyn_array *da = *daa;
 		                        ^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#13847: FILE: init/dyn_array.c:104:
+		printk(KERN_DEBUG "per_cpu_dyn_array %pF ==> [%#lx - %#lx]\n",

WARNING:VSPRINTF_POINTER_EXTENSION: Invalid vsprintf pointer extension '%pF' - use %pS instead
#13847: FILE: init/dyn_array.c:104:
+		printk(KERN_DEBUG "per_cpu_dyn_array %pF ==> [%#lx - %#lx]\n",
+			da->name, phys, phys + size);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#13848: FILE: init/dyn_array.c:105:
+		printk(KERN_DEBUG "per_cpu_dyn_array %pF ==> [%#lx - %#lx]\n",
+			da->name, phys, phys + size);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#13877: FILE: init/main.c:398:
+	unsigned da_size;

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#13912: FILE: kernel/irq/autoprobe.c:41:
+	for (i = nr_irqs-1; i > 0; i--) {
 	                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#13925: FILE: kernel/irq/autoprobe.c:73:
+	for (i = nr_irqs-1; i > 0; i--) {
 	                ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#14089: FILE: kernel/irq/chip.c:207:
+		printk(KERN_ERR

CHECK:LINE_SPACING: Please don't use multiple blank lines
#14330: FILE: kernel/irq/handle.c:75:
+
+

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#14338: FILE: kernel/irq/handle.c:83:
+extern void *__alloc_bootmem_nopanic(unsigned long size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#14339: FILE: kernel/irq/handle.c:84:
+extern void *__alloc_bootmem_nopanic(unsigned long size,
+			     unsigned long align,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#14361: FILE: kernel/irq/handle.c:106:
+	printk(KERN_DEBUG "kstat_irqs ==> [%#lx - %#lx]\n", phys, phys + total_bytes);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#14398: FILE: kernel/irq/handle.c:143:
+		desc[i-1].next = &desc[i];
 		      ^

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#14411: FILE: kernel/irq/handle.c:156:
+		nr_irq_desc = simple_strtoul(arg, NULL, 0);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#14440: FILE: kernel/irq/handle.c:185:
+	desc_pri = desc = sparse_irqs;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#14458: FILE: kernel/irq/handle.c:203:
+		printk(KERN_DEBUG "try to get more irq_desc %d\n", nr_irq_desc);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#14470: FILE: kernel/irq/handle.c:215:
+		printk(KERN_DEBUG "irq_desc ==> [%#lx - %#lx]\n", phys, phys + total_bytes);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#14476: FILE: kernel/irq/handle.c:221:
+			desc[i-1].next = &desc[i];
 			      ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#14522: FILE: kernel/irq/handle.c:273:
+}
+struct irq_desc *irq_to_desc_alloc(unsigned int irq)

WARNING:LINE_SPACING: Missing a blank line after declarations
#14597: FILE: kernel/irq/handle.c:497:
+	struct irq_desc *desc = irq_to_desc(irq);
+	return desc->kstat_irqs[cpu];

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#14611: FILE: kernel/irq/internals.h:14:
+extern void register_irq_proc(unsigned int irq, struct irq_desc *desc);

CHECK:SPACING: No space is necessary after a cast
#14918: FILE: kernel/irq/proc.c:135:
+	struct irq_desc *desc = irq_to_desc((long) data);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#14947: FILE: kernel/irq/proc.c:171:
+	if (!desc->dir || action->dir || !action->name ||
 					!name_unique(irq, action))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'desc->chip == &no_irq_chip'
#14971: FILE: kernel/irq/proc.c:190:
+	if (!root_irq_dir || (desc->chip == &no_irq_chip) || desc->dir)

WARNING:LINE_SPACING: Missing a blank line after declarations
#15001: FILE: kernel/irq/proc.c:218:
+		struct irq_desc *desc = irq_to_desc(irq);
+		remove_proc_entry(action->dir->name, desc->dir);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#15056: FILE: kernel/irq/spurious.c:19:
+#define POLL_SPURIOUS_IRQ_INTERVAL (HZ/10)
                                       ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 25)
#15188: FILE: kernel/irq/spurious.c:96:
+		if (!i)
+			 continue;

WARNING:TABSTOP: Statements should start on a tabstop
#15189: FILE: kernel/irq/spurious.c:97:
+			 continue;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 25)
#15209: FILE: kernel/irq/spurious.c:117:
+		if (!i)
+			 continue;

WARNING:TABSTOP: Statements should start on a tabstop
#15210: FILE: kernel/irq/spurious.c:118:
+			 continue;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000218512.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 76 errors, 278 warnings, 193 checks, 8991 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000218512.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
