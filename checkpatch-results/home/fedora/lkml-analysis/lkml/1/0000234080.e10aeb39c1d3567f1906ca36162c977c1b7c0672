WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#59: FILE: drivers/usb/ip/Kconfig:16:
+config USB_IP_VHCI_HCD
+	tristate "USB IP client driver"
+	depends on USB_IP_COMMON
+	---help---
+	 This enables the USB IP host controller driver which will
+	 run on the client machine.
+
+	 To compile this driver as a module, choose M here: the
+	 module will be called vhci_hcd.
+++ b/drivers/usb/ip/Makefile
+++ b/drivers/usb/ip/Makefile

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#83: FILE: drivers/usb/ip/vhci.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#97: FILE: drivers/usb/ip/vhci.h:15:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#98: FILE: drivers/usb/ip/vhci.h:16:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#105: FILE: drivers/usb/ip/vhci.h:23:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#123: FILE: drivers/usb/ip/vhci.h:41:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#139: FILE: drivers/usb/ip/vhci.h:57:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#149: FILE: drivers/usb/ip/vhci.h:67:
+
+

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#170: FILE: drivers/usb/ip/vhci.h:88:
+	spinlock_t	lock;

WARNING:TYPO_SPELLING: 'assiged' may be misspelled - perhaps 'assigned'?
#186: FILE: drivers/usb/ip/vhci.h:104:
+	/* vhci_device which has not been assiged its address yet */
 	                                  ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#190: FILE: drivers/usb/ip/vhci.h:108:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#194: FILE: drivers/usb/ip/vhci.h:112:
+
+

CHECK:SPACING: No space is necessary after a cast
#213: FILE: drivers/usb/ip/vhci.h:131:
+	return (struct vhci_hcd *) (hcd->hcd_priv);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#218: FILE: drivers/usb/ip/vhci.h:136:
+	return container_of((void *) vhci, struct usb_hcd, hcd_priv);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#228: FILE: drivers/usb/ip/vhci_hcd.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#242: FILE: drivers/usb/ip/vhci_hcd.c:15:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#243: FILE: drivers/usb/ip/vhci_hcd.c:16:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#247: FILE: drivers/usb/ip/vhci_hcd.c:20:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#259: FILE: drivers/usb/ip/vhci_hcd.c:32:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#271: FILE: drivers/usb/ip/vhci_hcd.c:44:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#274: FILE: drivers/usb/ip/vhci_hcd.c:47:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <typeReq>
#276: FILE: drivers/usb/ip/vhci_hcd.c:49:
+static int vhci_hub_control(struct usb_hcd *hcd, u16 typeReq, u16 wValue,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <wValue>
#276: FILE: drivers/usb/ip/vhci_hcd.c:49:
+static int vhci_hub_control(struct usb_hcd *hcd, u16 typeReq, u16 wValue,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#277: FILE: drivers/usb/ip/vhci_hcd.c:50:
+static int vhci_hub_control(struct usb_hcd *hcd, u16 typeReq, u16 wValue,
+		u16 wIndex, char *buff, u16 wLength);

CHECK:CAMELCASE: Avoid CamelCase: <wIndex>
#277: FILE: drivers/usb/ip/vhci_hcd.c:50:
+		u16 wIndex, char *buff, u16 wLength);

CHECK:CAMELCASE: Avoid CamelCase: <wLength>
#277: FILE: drivers/usb/ip/vhci_hcd.c:50:
+		u16 wIndex, char *buff, u16 wLength);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#279: FILE: drivers/usb/ip/vhci_hcd.c:52:
+static int vhci_urb_enqueue(struct usb_hcd *hcd, struct urb *urb,
+							gfp_t mem_flags);

WARNING:TYPO_SPELLING: 'Contoroller' may be misspelled - perhaps 'Controller'?
#286: FILE: drivers/usb/ip/vhci_hcd.c:59:
+static const char driver_desc[] = "USB/IP Virtual Host Contoroller";
                                                        ^^^^^^^^^^^

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#290: FILE: drivers/usb/ip/vhci_hcd.c:63:
+static const char *bit_desc[] = {

CHECK:LINE_SPACING: Please don't use multiple blank lines
#325: FILE: drivers/usb/ip/vhci_hcd.c:98:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#330: FILE: drivers/usb/ip/vhci_hcd.c:103:
+	printk(KERN_DEBUG "status %08x:", status);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#333: FILE: drivers/usb/ip/vhci_hcd.c:106:
+			printk(" %s", bit_desc[i]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#336: FILE: drivers/usb/ip/vhci_hcd.c:109:
+	printk("\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#339: FILE: drivers/usb/ip/vhci_hcd.c:112:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rh_port_connect', this function's name, in a string
#345: FILE: drivers/usb/ip/vhci_hcd.c:118:
+	dbg_vhci_rh("rh_port_connect %d\n", rhport);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#365: FILE: drivers/usb/ip/vhci_hcd.c:138:
+	 * spin_unlock(&the_controller->vdev[rhport].ud.lock); */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'rh_port_disconnect', this function's name, in a string
#378: FILE: drivers/usb/ip/vhci_hcd.c:151:
+	dbg_vhci_rh("rh_port_disconnect %d\n", rhport);

WARNING:TYPO_SPELLING: 'dum' may be misspelled - perhaps 'dumb'?
#381: FILE: drivers/usb/ip/vhci_hcd.c:154:
+	/* stop_activity(dum, driver); */
 	                 ^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#386: FILE: drivers/usb/ip/vhci_hcd.c:159:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#390: FILE: drivers/usb/ip/vhci_hcd.c:163:
+	 * spin_unlock(&vdev->ud.lock); */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#395: FILE: drivers/usb/ip/vhci_hcd.c:168:
+
+

WARNING:TYPO_SPELLING: 'almostly' may be misspelled - perhaps 'almost'?
#407: FILE: drivers/usb/ip/vhci_hcd.c:180:
+ * This function is almostly the same as dummy_hcd.c:dummy_hub_status() without
                     ^^^^^^^^

WARNING:TYPO_SPELLING: 'transfered' may be misspelled - perhaps 'transferred'?
#422: FILE: drivers/usb/ip/vhci_hcd.c:195:
+ * The return value is the actual transfered length in byte. If nothing has
                                   ^^^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#434: FILE: drivers/usb/ip/vhci_hcd.c:207:
+	unsigned long	*event_bits = (unsigned long *) buf;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#438: FILE: drivers/usb/ip/vhci_hcd.c:211:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <bDescriptorType>
#479: FILE: drivers/usb/ip/vhci_hcd.c:252:
+	desc->bDescriptorType = 0x29;

CHECK:CAMELCASE: Avoid CamelCase: <bDescLength>
#480: FILE: drivers/usb/ip/vhci_hcd.c:253:
+	desc->bDescLength = 9;

CHECK:CAMELCASE: Avoid CamelCase: <wHubCharacteristics>
#481: FILE: drivers/usb/ip/vhci_hcd.c:254:
+	desc->wHubCharacteristics = (__force __u16)

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_le16 should be cpu_to_le16
#482: FILE: drivers/usb/ip/vhci_hcd.c:255:
+		(__constant_cpu_to_le16(0x0001));

Use of __constant_<foo> form is discouraged for the following functions::

  __constant_cpu_to_be[x]
  __constant_cpu_to_le[x]
  __constant_be[x]_to_cpu
  __constant_le[x]_to_cpu
  __constant_htons
  __constant_ntohs

Using any of these outside of include/uapi/ is not preferred as using the
function without __constant_ is identical when the argument is a
constant.

In big endian systems, the macros like __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to the same expression::

  #define __constant_cpu_to_be32(x) ((__force __be32)(__u32)(x))
  #define __cpu_to_be32(x)          ((__force __be32)(__u32)(x))

In little endian systems, the macros __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to __constant_swab32 and __swab32.  __swab32
has a __builtin_constant_p check::

  #define __swab32(x)				\
    (__builtin_constant_p((__u32)(x)) ?	\
    ___constant_swab32(x) :			\
    __fswab32(x))

So ultimately they have a special case for constants.
Similar is the case with all of the macros in the list.  Thus
using the __constant_... forms are unnecessarily verbose and
not preferred outside of include/uapi.

See: https://lore.kernel.org/lkml/1400106425.12666.6.camel@joe-AO725/

CHECK:CAMELCASE: Avoid CamelCase: <bNbrPorts>
#483: FILE: drivers/usb/ip/vhci_hcd.c:256:
+	desc->bNbrPorts = VHCI_NPORTS;

WARNING:TYPO_SPELLING: 'dum' may be misspelled - perhaps 'dumb'?
#491: FILE: drivers/usb/ip/vhci_hcd.c:264:
+	struct vhci_hcd	*dum;
 	               	 ^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#506: FILE: drivers/usb/ip/vhci_hcd.c:279:
+	dbg_vhci_rh("typeReq %x wValue %x wIndex %x\n", typeReq, wValue,
+								wIndex);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#508: FILE: drivers/usb/ip/vhci_hcd.c:281:
+		printk(KERN_ERR "%s: invalid port number %d\n", __func__, wIndex);

WARNING:TYPO_SPELLING: 'dum' may be misspelled - perhaps 'dumb'?
#511: FILE: drivers/usb/ip/vhci_hcd.c:284:
+	dum = hcd_to_vhci(hcd);
 	^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#518: FILE: drivers/usb/ip/vhci_hcd.c:291:
+		int i = 0;
+		for (i = 0; i < VHCI_NPORTS; i++)

WARNING:SPLIT_STRING: quoted string split across lines
#545: FILE: drivers/usb/ip/vhci_hcd.c:318:
+			dbg_vhci_rh(" ClearPortFeature: "
+					"USB_PORT_FEAT_C_RESET\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#565: FILE: drivers/usb/ip/vhci_hcd.c:338:
+		hub_descriptor((struct usb_hub_descriptor *) buf);

CHECK:SPACING: No space is necessary after a cast
#569: FILE: drivers/usb/ip/vhci_hcd.c:342:
+		*(__le32 *) buf = __constant_cpu_to_le32(0);

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_le32 should be cpu_to_le32
#569: FILE: drivers/usb/ip/vhci_hcd.c:342:
+		*(__le32 *) buf = __constant_cpu_to_le32(0);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#574: FILE: drivers/usb/ip/vhci_hcd.c:347:
+			printk(KERN_ERR "%s: invalid port number %d\n",

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#583: FILE: drivers/usb/ip/vhci_hcd.c:356:
+		 *                                   */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#585: FILE: drivers/usb/ip/vhci_hcd.c:358:
+			printk(KERN_ERR "%s: not yet\n", __func__);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#596: FILE: drivers/usb/ip/vhci_hcd.c:369:
+			 * } */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#610: FILE: drivers/usb/ip/vhci_hcd.c:383:
+				dbg_vhci_rh(" enable rhport %d (status %u)\n",
+						rhport,

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#615: FILE: drivers/usb/ip/vhci_hcd.c:388:
+#if 0

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#617: FILE: drivers/usb/ip/vhci_hcd.c:390:
+			if (dum->driver) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#640: FILE: drivers/usb/ip/vhci_hcd.c:413:
+
+		}

CHECK:SPACING: No space is necessary after a cast
#641: FILE: drivers/usb/ip/vhci_hcd.c:414:
+		((u16 *) buf)[0] = cpu_to_le16(dum->port_status[rhport]);

CHECK:SPACING: No space is necessary after a cast
#642: FILE: drivers/usb/ip/vhci_hcd.c:415:
+		((u16 *) buf)[1] =

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#646: FILE: drivers/usb/ip/vhci_hcd.c:419:
+		dbg_vhci_rh(" GetPortStatus bye %x %x\n", ((u16 *)buf)[0],
+							((u16 *)buf)[1]);

WARNING:SPLIT_STRING: quoted string split across lines
#656: FILE: drivers/usb/ip/vhci_hcd.c:429:
+			dbg_vhci_rh(" SetPortFeature: "
+					"USB_PORT_FEAT_SUSPEND\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#657: FILE: drivers/usb/ip/vhci_hcd.c:430:
+			printk(KERN_ERR "%s: not yet\n", __func__);

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#658: FILE: drivers/usb/ip/vhci_hcd.c:431:
+#if 0

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#676: FILE: drivers/usb/ip/vhci_hcd.c:449:
+#if 0

WARNING:TYPO_SPELLING: 'dum' may be misspelled - perhaps 'dumb'?
#679: FILE: drivers/usb/ip/vhci_hcd.c:452:
+					stop_activity(dum, dum->driver);
 					              ^^^

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#688: FILE: drivers/usb/ip/vhci_hcd.c:461:
+			/* FALLTHROUGH */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#696: FILE: drivers/usb/ip/vhci_hcd.c:469:
+		printk(KERN_ERR "%s: default: no such request\n", __func__);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#699: FILE: drivers/usb/ip/vhci_hcd.c:472:
+		 *		typeReq, wValue, wIndex, wLength); */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#706: FILE: drivers/usb/ip/vhci_hcd.c:479:
+		printk(KERN_DEBUG "port %d\n", rhport);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#717: FILE: drivers/usb/ip/vhci_hcd.c:490:
+
+

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*priv)...) over kzalloc(sizeof(struct vhci_priv)...)
#749: FILE: drivers/usb/ip/vhci_hcd.c:522:
+	priv = kzalloc(sizeof(struct vhci_priv), GFP_ATOMIC);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#751: FILE: drivers/usb/ip/vhci_hcd.c:524:
+	if (!priv) {
+		dev_err(&urb->dev->dev, "malloc vhci_priv\n");

CHECK:SPACING: No space is necessary after a cast
#764: FILE: drivers/usb/ip/vhci_hcd.c:537:
+	urb->hcpriv = (void *) priv;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#766: FILE: drivers/usb/ip/vhci_hcd.c:539:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#784: FILE: drivers/usb/ip/vhci_hcd.c:557:
+	BUG_ON(!urb->transfer_buffer && urb->transfer_buffer_length);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: No space is necessary after a cast
#818: FILE: drivers/usb/ip/vhci_hcd.c:591:
+				(struct usb_ctrlrequest *) urb->setup_packet;

CHECK:CAMELCASE: Avoid CamelCase: <bRequest>
#828: FILE: drivers/usb/ip/vhci_hcd.c:601:
+		switch (ctrlreq->bRequest) {

WARNING:SPLIT_STRING: quoted string split across lines
#851: FILE: drivers/usb/ip/vhci_hcd.c:624:
+				dbg_vhci_hc("Not yet?: "
+						"Get_Descriptor to device 0 "

WARNING:SPLIT_STRING: quoted string split across lines
#852: FILE: drivers/usb/ip/vhci_hcd.c:625:
+						"Get_Descriptor to device 0 "
+						"(get max pipe size)\n");

WARNING:SPLIT_STRING: quoted string split across lines
#861: FILE: drivers/usb/ip/vhci_hcd.c:634:
+			dev_err(dev, "invalid request to devnum 0 bRequest %u, "
+				"wValue %u\n", ctrlreq->bRequest,

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#867: FILE: drivers/usb/ip/vhci_hcd.c:640:
+
+	}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#940: FILE: drivers/usb/ip/vhci_hcd.c:713:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#946: FILE: drivers/usb/ip/vhci_hcd.c:719:
+		 * vhci_rx. */

WARNING:LINE_SPACING: Missing a blank line after declarations
#953: FILE: drivers/usb/ip/vhci_hcd.c:726:
+		int ret = 0;
+		ret = usb_hcd_check_unlink_urb(hcd, urb, status);

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*unlink)...) over kzalloc(sizeof(struct vhci_unlink)...)
#984: FILE: drivers/usb/ip/vhci_hcd.c:757:
+		unlink = kzalloc(sizeof(struct vhci_unlink), GFP_ATOMIC);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1000: FILE: drivers/usb/ip/vhci_hcd.c:773:
+		uinfo("vhci_hcd: device %p seems to be still connected\n",
+									vdev);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1003: FILE: drivers/usb/ip/vhci_hcd.c:776:
+		 * peer */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1010: FILE: drivers/usb/ip/vhci_hcd.c:783:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'vhci_urb_dequeue', this function's name, in a string
#1018: FILE: drivers/usb/ip/vhci_hcd.c:791:
+		uinfo("vhci_hcd: vhci_urb_dequeue() gives back urb %p\n", urb);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1024: FILE: drivers/usb/ip/vhci_hcd.c:797:
+		usb_hcd_giveback_urb(vhci_to_hcd(the_controller), urb,
+								urb->status);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1034: FILE: drivers/usb/ip/vhci_hcd.c:807:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "vdev->ud.tcp_socket"
#1073: FILE: drivers/usb/ip/vhci_hcd.c:846:
+	if (vdev->ud.tcp_socket != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1106: FILE: drivers/usb/ip/vhci_hcd.c:879:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1160: FILE: drivers/usb/ip/vhci_hcd.c:933:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'vhci_start', this function's name, in a string
#1169: FILE: drivers/usb/ip/vhci_hcd.c:942:
+	dbg_vhci_hc("enter vhci_start\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1171: FILE: drivers/usb/ip/vhci_hcd.c:944:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#1176: FILE: drivers/usb/ip/vhci_hcd.c:949:
+		struct vhci_device *vdev = &vhci->vdev[rhport];
+		vhci_device_init(vdev);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1183: FILE: drivers/usb/ip/vhci_hcd.c:956:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1189: FILE: drivers/usb/ip/vhci_hcd.c:962:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1207: FILE: drivers/usb/ip/vhci_hcd.c:980:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1219: FILE: drivers/usb/ip/vhci_hcd.c:992:
+
+

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'vhci_stop', this function's name, in a string
#1220: FILE: drivers/usb/ip/vhci_hcd.c:993:
+	uinfo("vhci_stop done\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1231: FILE: drivers/usb/ip/vhci_hcd.c:1004:
+
+

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1239: FILE: drivers/usb/ip/vhci_hcd.c:1012:
+	dev_dbg(&hcd->self.root_hub->dev, "%s\n", __func__);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1243: FILE: drivers/usb/ip/vhci_hcd.c:1016:
+	 * set_link_state(vhci); */

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1255: FILE: drivers/usb/ip/vhci_hcd.c:1028:
+	dev_dbg(&hcd->self.root_hub->dev, "%s\n", __func__);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1264: FILE: drivers/usb/ip/vhci_hcd.c:1037:
+		 *	mod_timer(&vhci->timer, jiffies); */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1279: FILE: drivers/usb/ip/vhci_hcd.c:1052:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1289: FILE: drivers/usb/ip/vhci_hcd.c:1062:
+^I.stop ^I^I= vhci_stop,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1311: FILE: drivers/usb/ip/vhci_hcd.c:1084:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1318: FILE: drivers/usb/ip/vhci_hcd.c:1091:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1329: FILE: drivers/usb/ip/vhci_hcd.c:1102:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1345: FILE: drivers/usb/ip/vhci_hcd.c:1118:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1350: FILE: drivers/usb/ip/vhci_hcd.c:1123:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1368: FILE: drivers/usb/ip/vhci_hcd.c:1141:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1372: FILE: drivers/usb/ip/vhci_hcd.c:1145:
+
+

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1384: FILE: drivers/usb/ip/vhci_hcd.c:1157:
+	dev_dbg(&pdev->dev, "%s\n", __func__);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1399: FILE: drivers/usb/ip/vhci_hcd.c:1172:
+		uinfo("We have %d active connection%s. Do not suspend.\n",
+				connected, (connected == 1 ? "" : "s"));

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#1413: FILE: drivers/usb/ip/vhci_hcd.c:1186:
+	dev_dbg(&pdev->dev, "%s\n", __func__);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1429: FILE: drivers/usb/ip/vhci_hcd.c:1202:
+
+

CHECK:SPACING: No space is necessary after a cast
#1436: FILE: drivers/usb/ip/vhci_hcd.c:1209:
+		.name = (char *) driver_name,

WARNING:RETURN_VOID: void function return statements are not generally useful
#1451: FILE: drivers/usb/ip/vhci_hcd.c:1224:
+	return;
+}

CHECK:SPACING: No space is necessary after a cast
#1455: FILE: drivers/usb/ip/vhci_hcd.c:1228:
+	.name = (char *) driver_name,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1481: FILE: drivers/usb/ip/vhci_hcd.c:1254:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1485: FILE: drivers/usb/ip/vhci_hcd.c:1258:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1499: FILE: drivers/usb/ip/vhci_hcd.c:1272:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1513: FILE: drivers/usb/ip/vhci_rx.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1527: FILE: drivers/usb/ip/vhci_rx.c:15:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1528: FILE: drivers/usb/ip/vhci_rx.c:16:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1535: FILE: drivers/usb/ip/vhci_rx.c:23:
+
+

WARNING:TYPO_SPELLING: 'situtation' may be misspelled - perhaps 'situation'?
#1554: FILE: drivers/usb/ip/vhci_rx.c:42:
+			/* TODO: fix logic here to improve indent situtation */
 			                                          ^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1557: FILE: drivers/usb/ip/vhci_rx.c:45:
+				if (status == -ENOENT ||
+				     status == -ECONNRESET)

WARNING:SPLIT_STRING: quoted string split across lines
#1560: FILE: drivers/usb/ip/vhci_rx.c:48:
+						 "urb %p was unlinked "
+						 "%ssynchronuously.\n", urb,

WARNING:SPLIT_STRING: quoted string split across lines
#1565: FILE: drivers/usb/ip/vhci_rx.c:53:
+						 "urb %p may be in a error, "
+						 "status %d\n", urb, status);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1582: FILE: drivers/usb/ip/vhci_rx.c:70:
+static void vhci_recv_ret_submit(struct vhci_device *vdev,
+						struct usbip_header *pdu)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1587: FILE: drivers/usb/ip/vhci_rx.c:75:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1590: FILE: drivers/usb/ip/vhci_rx.c:78:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1598: FILE: drivers/usb/ip/vhci_rx.c:86:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1602: FILE: drivers/usb/ip/vhci_rx.c:90:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1607: FILE: drivers/usb/ip/vhci_rx.c:95:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1612: FILE: drivers/usb/ip/vhci_rx.c:100:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1616: FILE: drivers/usb/ip/vhci_rx.c:104:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1625: FILE: drivers/usb/ip/vhci_rx.c:113:
+
+

WARNING:RETURN_VOID: void function return statements are not generally useful
#1629: FILE: drivers/usb/ip/vhci_rx.c:117:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1631: FILE: drivers/usb/ip/vhci_rx.c:119:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1633: FILE: drivers/usb/ip/vhci_rx.c:121:
+static struct vhci_unlink *dequeue_pending_unlink(struct vhci_device *vdev,
+		struct usbip_header *pdu)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1643: FILE: drivers/usb/ip/vhci_rx.c:131:
+			dbg_vhci_rx("found pending unlink, %lu\n",
+							unlink->seqnum);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1656: FILE: drivers/usb/ip/vhci_rx.c:144:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1658: FILE: drivers/usb/ip/vhci_rx.c:146:
+static void vhci_recv_ret_unlink(struct vhci_device *vdev,
+						struct usbip_header *pdu)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1679: FILE: drivers/usb/ip/vhci_rx.c:167:
+		uinfo("the urb (seqnum %d) was already given backed\n",
+							pdu->base.seqnum);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1692: FILE: drivers/usb/ip/vhci_rx.c:180:
+		usb_hcd_giveback_urb(vhci_to_hcd(the_controller), urb,
+								urb->status);

WARNING:RETURN_VOID: void function return statements are not generally useful
#1698: FILE: drivers/usb/ip/vhci_rx.c:186:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1707: FILE: drivers/usb/ip/vhci_rx.c:195:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1712: FILE: drivers/usb/ip/vhci_rx.c:200:
+
+

CHECK:SPACING: No space is necessary after a cast
#1714: FILE: drivers/usb/ip/vhci_rx.c:202:
+	ret = usbip_xmit(0, ud->tcp_socket, (char *) &pdu, sizeof(pdu), 0);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1717: FILE: drivers/usb/ip/vhci_rx.c:205:
+		uerr("receiving pdu failed! size is %d, should be %d\n",
+				ret, sizeof(pdu));

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1742: FILE: drivers/usb/ip/vhci_rx.c:230:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1749: FILE: drivers/usb/ip/vhci_rx.c:237:
+
+

WARNING:TYPO_SPELLING: 'catched' may be misspelled - perhaps 'caught'?
#1752: FILE: drivers/usb/ip/vhci_rx.c:240:
+			dbg_vhci_rx("signal catched!\n");
 			                    ^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1756: FILE: drivers/usb/ip/vhci_rx.c:244:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1767: FILE: drivers/usb/ip/vhci_sysfs.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1781: FILE: drivers/usb/ip/vhci_sysfs.c:15:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1782: FILE: drivers/usb/ip/vhci_sysfs.c:16:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1801: FILE: drivers/usb/ip/vhci_sysfs.c:35:
+		BUG();

WARNING:SPLIT_STRING: quoted string split across lines
#1816: FILE: drivers/usb/ip/vhci_sysfs.c:50:
+	out += sprintf(out, "prt sta spd bus dev socket           "
+		       "local_busid\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#1825: FILE: drivers/usb/ip/vhci_sysfs.c:59:
+		if (vdev->ud.status == VDEV_ST_USED) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1831: FILE: drivers/usb/ip/vhci_sysfs.c:65:
+		} else

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_status' to 'status_show'
#1842: FILE: drivers/usb/ip/vhci_sysfs.c:76:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#1843: FILE: drivers/usb/ip/vhci_sysfs.c:77:
+static DEVICE_ATTR(status, S_IRUGO, show_status, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:NAKED_SSCANF: unchecked sscanf return value
#1883: FILE: drivers/usb/ip/vhci_sysfs.c:117:
+	sscanf(buf, "%u", &rhport);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#1883: FILE: drivers/usb/ip/vhci_sysfs.c:117:
+	sscanf(buf, "%u", &rhport);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'store_detach' to 'detach_store'
#1897: FILE: drivers/usb/ip/vhci_sysfs.c:131:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#1898: FILE: drivers/usb/ip/vhci_sysfs.c:132:
+static DEVICE_ATTR(detach, S_IWUSR, NULL, store_detach);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rhport < 0'
#1904: FILE: drivers/usb/ip/vhci_sysfs.c:138:
+	if ((rhport < 0) || (rhport >= VHCI_NPORTS)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rhport >= VHCI_NPORTS'
#1904: FILE: drivers/usb/ip/vhci_sysfs.c:138:
+	if ((rhport < 0) || (rhport >= VHCI_NPORTS)) {

WARNING:NAKED_SSCANF: unchecked sscanf return value
#1949: FILE: drivers/usb/ip/vhci_sysfs.c:183:
+	sscanf(buf, "%u %u %u %u", &rhport, &sockfd, &devid, &speed);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1952: FILE: drivers/usb/ip/vhci_sysfs.c:186:
+	dbg_vhci_sysfs("rhport(%u) sockfd(%u) devid(%u) speed(%u)\n",
+			rhport, sockfd, devid, speed);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1954: FILE: drivers/usb/ip/vhci_sysfs.c:188:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1983: FILE: drivers/usb/ip/vhci_sysfs.c:217:
+	uinfo("rhport(%u) sockfd(%d) devid(%u) speed(%u)\n",
+			rhport, sockfd, devid, speed);

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'store_attach' to 'attach_store'
#2003: FILE: drivers/usb/ip/vhci_sysfs.c:237:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#2004: FILE: drivers/usb/ip/vhci_sysfs.c:238:
+static DEVICE_ATTR(attach, S_IWUSR, NULL, store_attach);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2020: FILE: drivers/usb/ip/vhci_tx.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2034: FILE: drivers/usb/ip/vhci_tx.c:15:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2035: FILE: drivers/usb/ip/vhci_tx.c:16:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2042: FILE: drivers/usb/ip/vhci_tx.c:23:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2049: FILE: drivers/usb/ip/vhci_tx.c:30:
+	dbg_vhci_tx("URB, local devnum %u, remote devid %u\n",
+				usb_pipedevice(urb->pipe), vdev->devid);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2084: FILE: drivers/usb/ip/vhci_tx.c:65:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2109: FILE: drivers/usb/ip/vhci_tx.c:90:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2144: FILE: drivers/usb/ip/vhci_tx.c:125:
+			uerr("sendmsg failed!, retval %d for %zd\n", ret,
+								txsize);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2159: FILE: drivers/usb/ip/vhci_tx.c:140:
+
+

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#2199: FILE: drivers/usb/ip/vhci_tx.c:180:
+		dbg_vhci_tx("setup cmd unlink, %lu \n", unlink->seqnum);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2201: FILE: drivers/usb/ip/vhci_tx.c:182:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2218: FILE: drivers/usb/ip/vhci_tx.c:199:
+			uerr("sendmsg failed!, retval %d for %zd\n", ret,
+								txsize);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2223: FILE: drivers/usb/ip/vhci_tx.c:204:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2232: FILE: drivers/usb/ip/vhci_tx.c:213:
+
+

WARNING:TYPO_SPELLING: 'catched' may be misspelled - perhaps 'caught'?
#2242: FILE: drivers/usb/ip/vhci_tx.c:223:
+			uinfo("vhci_tx signal catched\n");
 			                      ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2253: FILE: drivers/usb/ip/vhci_tx.c:234:
+		wait_event_interruptible(vdev->waitq_tx,
+				(!list_empty(&vdev->priv_tx) ||

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000234080.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 10 errors, 79 warnings, 118 checks, 2186 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000234080.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
