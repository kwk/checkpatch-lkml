WARNING:LINE_SPACING: Missing a blank line after declarations
#58: FILE: arch/x86/kvm/emulate.c:1704:
+	int iopl;
+	if (ctxt->mode == X86EMUL_MODE_REAL)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#74: FILE: arch/x86/kvm/emulate.c:1720:
+	unsigned mask = (1 << len) - 1;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#85: FILE: arch/x86/kvm/emulate.c:1731:
+	if (io_bitmap_ptr + port/8 > tr_seg.limit)
 	                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#87: FILE: arch/x86/kvm/emulate.c:1733:
+	r = ops->read_std(tr_seg.base + io_bitmap_ptr + port/8, &perm, 1,
 	                                                    ^

CHECK:CAMELCASE: Avoid CamelCase: <ByteOp>
#115: FILE: arch/x86/kvm/emulate.c:1944:
+					  (c->d & ByteOp) ? 1 : c->op_bytes)) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#120: FILE: arch/x86/kvm/emulate.c:1949:
+		if (kvm_emulate_pio_string(ctxt->vcpu,
 				1,

WARNING:INDENTED_LABEL: labels should not be indented
#140: FILE: arch/x86/kvm/emulate.c:2266:
+	do_io:

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#147: FILE: arch/x86/kvm/emulate.c:2273:
+		if (kvm_emulate_pio(ctxt->vcpu, io_dir_in,
 				   (c->d & ByteOp) ? 1 : c->op_bytes,

CHECK:BRACES: braces {} should be used on all arms of this statement
#156: FILE: arch/x86/kvm/emulate.c:2297:
+		if (emulator_bad_iopl(ctxt))
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#158: FILE: arch/x86/kvm/emulate.c:2299:
+		else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#167: FILE: arch/x86/kvm/emulate.c:2305:
+		if (emulator_bad_iopl(ctxt))
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#169: FILE: arch/x86/kvm/emulate.c:2307:
+		else {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000010781.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 9 checks, 162 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000010781.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
