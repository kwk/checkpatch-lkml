WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
> > the real solution is something like the patch below. That generates new 

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#126: FILE: arch/powerpc/include/asm/rtas.h:21:
+#define RTAS_INSTANTIATE_MAX (1ULL<<30) /* Don't instantiate rtas at/above this value */
                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#126: FILE: arch/powerpc/include/asm/rtas.h:21:
+#define RTAS_INSTANTIATE_MAX (1ULL<<30) /* Don't instantiate rtas at/above this value */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#160: FILE: arch/powerpc/kernel/dma-iommu.c:85:
+			printk(KERN_INFO "mask: 0x%08llx, table unavailable\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#161: FILE: arch/powerpc/kernel/dma-iommu.c:86:
+			printk(KERN_INFO "mask: 0x%08llx, table unavailable\n",
 				mask);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#178: FILE: arch/powerpc/kernel/iommu.c:242:
+			printk(KERN_INFO "\tdma_addr  = 0x%llx\n", (u64)dma_addr);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#179: FILE: arch/powerpc/kernel/iommu.c:243:
+			printk(KERN_INFO "\tTable     = 0x%llx\n", (u64)tbl);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#180: FILE: arch/powerpc/kernel/iommu.c:244:
+			printk(KERN_INFO "\tbus#      = 0x%llx\n", (u64)tbl->it_busno);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#181: FILE: arch/powerpc/kernel/iommu.c:245:
+			printk(KERN_INFO "\tsize      = 0x%llx\n", (u64)tbl->it_size);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#182: FILE: arch/powerpc/kernel/iommu.c:246:
+			printk(KERN_INFO "\tstartOff  = 0x%llx\n", (u64)tbl->it_offset);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#183: FILE: arch/powerpc/kernel/iommu.c:247:
+			printk(KERN_INFO "\tindex     = 0x%llx\n", (u64)tbl->it_index);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#272: FILE: arch/powerpc/kernel/setup_64.c:436:
+	printk("ppc64_pft_size                = 0x%llx\n", ppc64_pft_size);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#273: FILE: arch/powerpc/kernel/setup_64.c:437:
+	printk("physicalMemorySize            = 0x%llx\n", lmb_phys_mem_size());

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#296: FILE: arch/powerpc/mm/stab.c:254:
+		printk(KERN_INFO "Segment table for CPU %d at 0x%llx "

WARNING:SPLIT_STRING: quoted string split across lines
#297: FILE: arch/powerpc/mm/stab.c:255:
+		printk(KERN_INFO "Segment table for CPU %d at 0x%llx "
+		       "virtual, 0x%llx absolute\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#324: FILE: arch/powerpc/oprofile/op_model_pa6t.c:136:
+		pr_debug("reset_value for pmc%u inited to 0x%llx\n",
 				 pmc, reset_value[pmc]);

CHECK:SPACING: No space is necessary after a cast
#487: FILE: arch/powerpc/platforms/cell/interrupt.c:151:
+		in_be64((unsigned long long __iomem *) &iic->regs->pending_destr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#501: FILE: arch/powerpc/platforms/cell/io-workarounds.c:134:
+static void __iomem *iowa_ioremap(phys_addr_t addr, unsigned long size,
 						unsigned long flags)

WARNING:SPLIT_STRING: quoted string split across lines
#522: FILE: arch/powerpc/platforms/cell/iommu.c:858:
 		printk(KERN_WARNING "iommu: force-enabled, dma window"
+		       " (%ldMB) smaller than total memory (%lldMB)\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#544: FILE: arch/powerpc/platforms/cell/ras.c:41:
+	printk(KERN_ERR "Global Checkstop FIR    : 0x%016llx\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#547: FILE: arch/powerpc/platforms/cell/ras.c:43:
+	printk(KERN_ERR "Global Recoverable FIR  : 0x%016llx\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#550: FILE: arch/powerpc/platforms/cell/ras.c:45:
+	printk(KERN_ERR "Global MachineCheck FIR : 0x%016llx\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#556: FILE: arch/powerpc/platforms/cell/ras.c:50:
+	printk(KERN_ERR "IOC FIR                 : 0x%016llx\n",

CHECK:BRACES: braces {} should be used on all arms of this statement
#569: FILE: arch/powerpc/platforms/cell/spu_base.c:142:
+	if (!test_bit(SPU_CONTEXT_SWITCH_PENDING, (unsigned long *)&spu->flags))
[...]
 	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#583: FILE: arch/powerpc/platforms/cell/spu_base.c:155:
+	pr_debug("%s: adding SLB[%d] 0x%016llx 0x%016llx\n",
 			__func__, slbe, slb->vsid, slb->esid);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#618: FILE: arch/powerpc/platforms/iseries/iommu.c:70:
+			panic("PCI_DMA: HvCallXm_setTce failed, Rc: 0x%llx\n",
 					rc);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#627: FILE: arch/powerpc/platforms/iseries/iommu.c:85:
+			panic("PCI_DMA: HvCallXm_setTce failed, Rc: 0x%llx\n",
 					rc);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#655: FILE: arch/powerpc/platforms/pseries/iommu.c:130:
+			printk("tce_build_pSeriesLP: plpar_tce_put failed. rc=%lld\n", rc);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tce_build_pSeriesLP', this function's name, in a string
#655: FILE: arch/powerpc/platforms/pseries/iommu.c:130:
+			printk("tce_build_pSeriesLP: plpar_tce_put failed. rc=%lld\n", rc);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#656: FILE: arch/powerpc/platforms/pseries/iommu.c:131:
+			printk("\tindex   = 0x%llx\n", (u64)tbl->it_index);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#657: FILE: arch/powerpc/platforms/pseries/iommu.c:132:
+			printk("\ttcenum  = 0x%llx\n", (u64)tcenum);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#658: FILE: arch/powerpc/platforms/pseries/iommu.c:133:
+			printk("\ttce val = 0x%llx\n", tce );

ERROR:SPACING: space prohibited before that close parenthesis ')'
#658: FILE: arch/powerpc/platforms/pseries/iommu.c:133:
+			printk("\ttce val = 0x%llx\n", tce );

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#670: FILE: arch/powerpc/platforms/pseries/iommu.c:213:
+		printk("tce_buildmulti_pSeriesLP: plpar_tce_put failed. rc=%lld\n", rc);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tce_buildmulti_pSeriesLP', this function's name, in a string
#670: FILE: arch/powerpc/platforms/pseries/iommu.c:213:
+		printk("tce_buildmulti_pSeriesLP: plpar_tce_put failed. rc=%lld\n", rc);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#671: FILE: arch/powerpc/platforms/pseries/iommu.c:214:
+		printk("\tindex   = 0x%llx\n", (u64)tbl->it_index);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#672: FILE: arch/powerpc/platforms/pseries/iommu.c:215:
+		printk("\tnpages  = 0x%llx\n", (u64)npages);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#673: FILE: arch/powerpc/platforms/pseries/iommu.c:216:
+		printk("\ttce[0] val = 0x%llx\n", tcep[0]);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#684: FILE: arch/powerpc/platforms/pseries/iommu.c:230:
+			printk("tce_free_pSeriesLP: plpar_tce_put failed. rc=%lld\n", rc);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tce_free_pSeriesLP', this function's name, in a string
#684: FILE: arch/powerpc/platforms/pseries/iommu.c:230:
+			printk("tce_free_pSeriesLP: plpar_tce_put failed. rc=%lld\n", rc);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#685: FILE: arch/powerpc/platforms/pseries/iommu.c:231:
+			printk("\tindex   = 0x%llx\n", (u64)tbl->it_index);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#686: FILE: arch/powerpc/platforms/pseries/iommu.c:232:
+			printk("\ttcenum  = 0x%llx\n", (u64)tcenum);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#697: FILE: arch/powerpc/platforms/pseries/iommu.c:249:
+		printk("\trc      = %lld\n", rc);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#698: FILE: arch/powerpc/platforms/pseries/iommu.c:250:
+		printk("\tindex   = 0x%llx\n", (u64)tbl->it_index);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#699: FILE: arch/powerpc/platforms/pseries/iommu.c:251:
+		printk("\tnpages  = 0x%llx\n", (u64)npages);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#711: FILE: arch/powerpc/platforms/pseries/iommu.c:264:
+		printk("tce_get_pSeriesLP: plpar_tce_get failed. rc=%lld\n", rc);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'tce_get_pSeriesLP', this function's name, in a string
#711: FILE: arch/powerpc/platforms/pseries/iommu.c:264:
+		printk("tce_get_pSeriesLP: plpar_tce_get failed. rc=%lld\n", rc);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#712: FILE: arch/powerpc/platforms/pseries/iommu.c:265:
+		printk("\tindex   = 0x%llx\n", (u64)tbl->it_index);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#713: FILE: arch/powerpc/platforms/pseries/iommu.c:266:
+		printk("\ttcenum  = 0x%llx\n", (u64)tcenum);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#726: FILE: arch/powerpc/sysdev/mpic.c:438:
+	printk(KERN_DEBUG "mpic:   - HT:%02x.%x %s MSI mapping found @ 0x%llx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#727: FILE: arch/powerpc/sysdev/mpic.c:439:
+	printk(KERN_DEBUG "mpic:   - HT:%02x.%x %s MSI mapping found @ 0x%llx\n",
 		PCI_SLOT(devfn), PCI_FUNC(devfn),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#761: FILE: drivers/net/pasemi_mac.c:715:
+	printk(KERN_ERR "pasemi_mac: rx error. macrx %016llx, rx status %llx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#762: FILE: drivers/net/pasemi_mac.c:716:
+	printk(KERN_ERR "pasemi_mac: rx error. macrx %016llx, rx status %llx\n",
 		macrx, *chan->status);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#771: FILE: drivers/net/pasemi_mac.c:733:
+	printk(KERN_ERR "pasemi_mac: tx error. mactx 0x%016llx, "\

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#771: FILE: drivers/net/pasemi_mac.c:733:
+	printk(KERN_ERR "pasemi_mac: tx error. mactx 0x%016llx, "\

ERROR:CODE_INDENT: code indent should use tabs where possible
#798: FILE: drivers/scsi/ibmvscsi/ibmvscsi.c:1063:
+                    "aborting command. lun 0x%llx, tag 0x%llx\n",$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#798: FILE: drivers/scsi/ibmvscsi/ibmvscsi.c:1063:
+                    "aborting command. lun 0x%llx, tag 0x%llx\n",$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000190857.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 43 warnings, 12 checks, 553 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000190857.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
