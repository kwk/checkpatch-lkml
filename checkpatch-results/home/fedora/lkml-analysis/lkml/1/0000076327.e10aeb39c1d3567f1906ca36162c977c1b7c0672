CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#54: FILE: arch/powerpc/include/asm/kexec.h:45:
+#define KEXEC_AUTO_THRESHOLD (1ULL<<31) /* 2G */
                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#54: FILE: arch/powerpc/include/asm/kexec.h:45:
+#define KEXEC_AUTO_THRESHOLD (1ULL<<31) /* 2G */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#94: FILE: arch/powerpc/kernel/machine_kexec.c:74:
+	if (total_size < (1ULL<<32))
 	                      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#95: FILE: arch/powerpc/kernel/machine_kexec.c:75:
+		return 1ULL<<27;
 		           ^

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#96: FILE: arch/powerpc/kernel/machine_kexec.c:76:
+		return 1ULL<<27;
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#96: FILE: arch/powerpc/kernel/machine_kexec.c:76:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#98: FILE: arch/powerpc/kernel/machine_kexec.c:78:
+		if (total_size > (1ULL<<37)) /* 128G */
 		                      ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#99: FILE: arch/powerpc/kernel/machine_kexec.c:79:
+			return 1ULL<<32; /* 4G */
 			           ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#100: FILE: arch/powerpc/kernel/machine_kexec.c:80:
+		return 1ULL<<ilog2(roundup(total_size/32, 1ULL<<21));
 		           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#100: FILE: arch/powerpc/kernel/machine_kexec.c:80:
+		return 1ULL<<ilog2(roundup(total_size/32, 1ULL<<21));
 		                                     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#100: FILE: arch/powerpc/kernel/machine_kexec.c:80:
+		return 1ULL<<ilog2(roundup(total_size/32, 1ULL<<21));
 		                                              ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#102: FILE: arch/powerpc/kernel/machine_kexec.c:82:
+		return 1ULL<<28;
 		           ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000076327.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 1 warnings, 11 checks, 58 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000076327.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
