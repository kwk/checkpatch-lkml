WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
performed by a task by duplicating a set of credentials, modifying it and then

WARNING:BAD_SIGN_OFF: Unexpected content after email: 'Casey Schaufler <casey@schaufler-ca.com> [Smack changes]', should be: 'Casey Schaufler <casey@schaufler-ca.com> (Smack changes)'
#76: 
Signed-off-by: Casey Schaufler <casey@schaufler-ca.com> [Smack changes]

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#106: FILE: include/linux/cred.h:152:
+extern struct cred *prepare_kernel_cred(struct task_struct *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct task_struct *' should also have an identifier name
#106: FILE: include/linux/cred.h:152:
+extern struct cred *prepare_kernel_cred(struct task_struct *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#107: FILE: include/linux/cred.h:153:
+extern int change_create_files_as(struct cred *, struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cred *' should also have an identifier name
#107: FILE: include/linux/cred.h:153:
+extern int change_create_files_as(struct cred *, struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#107: FILE: include/linux/cred.h:153:
+extern int change_create_files_as(struct cred *, struct inode *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#108: FILE: include/linux/cred.h:154:
+extern int set_security_override(struct cred *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cred *' should also have an identifier name
#108: FILE: include/linux/cred.h:154:
+extern int set_security_override(struct cred *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#108: FILE: include/linux/cred.h:154:
+extern int set_security_override(struct cred *, u32);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#109: FILE: include/linux/cred.h:155:
+extern int set_security_override_from_ctx(struct cred *, const char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cred *' should also have an identifier name
#109: FILE: include/linux/cred.h:155:
+extern int set_security_override_from_ctx(struct cred *, const char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#109: FILE: include/linux/cred.h:155:
+extern int set_security_override_from_ctx(struct cred *, const char *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#110: FILE: include/linux/cred.h:156:
+extern int set_create_files_as(struct cred *, struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cred *' should also have an identifier name
#110: FILE: include/linux/cred.h:156:
+extern int set_create_files_as(struct cred *, struct inode *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#110: FILE: include/linux/cred.h:156:
+extern int set_create_files_as(struct cred *, struct inode *);

ERROR:CODE_INDENT: code indent should use tabs where possible
#364: FILE: security/selinux/hooks.c:3295:
+ ^Iret = avc_has_perm(sid, secid,$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#364: FILE: security/selinux/hooks.c:3295:
+ ^Iret = avc_has_perm(sid, secid,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: security/selinux/hooks.c:3295:
+ ^Iret = avc_has_perm(sid, secid,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#388: FILE: security/selinux/hooks.c:3319:
+ ^Iret = avc_has_perm(sid, isec->sid,$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#388: FILE: security/selinux/hooks.c:3319:
+ ^Iret = avc_has_perm(sid, isec->sid,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: security/selinux/hooks.c:3319:
+ ^Iret = avc_has_perm(sid, isec->sid,$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!smack"
#428: FILE: security/smack/smack_lsm.c:1025:
+	if (smack == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000243815.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 15 warnings, 6 checks, 333 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000243815.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
