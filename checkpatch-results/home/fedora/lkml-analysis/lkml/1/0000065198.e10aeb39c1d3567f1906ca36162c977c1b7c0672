WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#29: 
Adds support for declare blocks, used by ext3's journal guided resync (declared

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!transaction->t_declare_root.rnode"
#42: FILE: fs/jbd/checkpoint.c:715:
+	J_ASSERT(transaction->t_declare_root.rnode == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!transaction->t_declare_done_root.rnode"
#43: FILE: fs/jbd/checkpoint.c:716:
+	J_ASSERT(transaction->t_declare_done_root.rnode == NULL);

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#55: FILE: fs/jbd/commit.c:376:
+int wait_for_descriptors(journal_t *journal, transaction_t *trans) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "trans->t_log_list"
#62: FILE: fs/jbd/commit.c:383:
+	while (trans->t_log_list != NULL) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#63: FILE: fs/jbd/commit.c:384:
+	while (trans->t_log_list != NULL) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#86: FILE: fs/jbd/commit.c:407:
+struct journal_head *get_descriptor(journal_t *journal, transaction_t *trans,
+				    int blocktype, char **tagp, int *space_left) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#100: FILE: fs/jbd/commit.c:421:
+	jbd_debug(4, "JBD: got buffer %llu (%p)\n",
+	    (unsigned long long)dbh->b_blocknr, dbh->b_data);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#144: FILE: fs/jbd/commit.c:465:
+		jbd_debug (1, "jbd: tid %d write declare request for ALL "

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#145: FILE: fs/jbd/commit.c:466:
+		jbd_debug (1, "jbd: tid %d write declare request for ALL "
+			   "blocks\n", transaction->t_tid);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#147: FILE: fs/jbd/commit.c:468:
+		jbd_debug (1, "jbd: tid %d write declare request for %u "

WARNING:SPLIT_STRING: quoted string split across lines
#148: FILE: fs/jbd/commit.c:469:
+		jbd_debug (1, "jbd: tid %d write declare request for %u "
+			   "blocks\n", transaction->t_tid, to_write);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#198: FILE: fs/jbd/commit.c:519:
+			memcpy (tagp, journal->j_uuid, 16);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#212: FILE: fs/jbd/commit.c:533:
+		/* If there's no more to do, or if the descriptor is full,
+		   let the IO rip! */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#212: FILE: fs/jbd/commit.c:533:
+		   let the IO rip! */

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#217: FILE: fs/jbd/commit.c:538:
+		    space_left < sizeof(journal_block_tag_t) + 16) {
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#222: FILE: fs/jbd/commit.c:543:
+                         * the last tag we set up.$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LINE_SPACING: Missing a blank line after declarations
#231: FILE: fs/jbd/commit.c:552:
+				struct buffer_head *bh = journal->j_declare_bhs[i];
+				lock_buffer(bh);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#246: FILE: fs/jbd/commit.c:567:
+			/* need to redo tree lookup since we lost the lock,
+			   but that will happen after we get a new descriptor */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#246: FILE: fs/jbd/commit.c:567:
+			   but that will happen after we get a new descriptor */

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#249: FILE: fs/jbd/commit.c:570:
+		if (count == to_write) break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!transaction->t_declare_root.rnode"
#256: FILE: fs/jbd/commit.c:577:
+		J_ASSERT(transaction->t_declare_root.rnode == NULL);

WARNING:BRACES: braces {} are not necessary for single statement blocks
#279: FILE: fs/jbd/commit.c:600:
+			if (!inverted_lock(journal, bh)) {
+				goto move_declare;
+			}

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!commit_transaction->t_sync_datalist"
#344: FILE: fs/jbd/commit.c:812:
+	J_ASSERT(commit_transaction->t_sync_datalist == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!commit_transaction->t_declare_root.rnode"
#345: FILE: fs/jbd/commit.c:813:
+	J_ASSERT(commit_transaction->t_declare_root.rnode == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!commit_transaction->t_declare_done_root.rnode"
#346: FILE: fs/jbd/commit.c:814:
+	J_ASSERT(commit_transaction->t_declare_done_root.rnode == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!commit_transaction->t_declare_root.rnode"
#429: FILE: fs/jbd/commit.c:1131:
+	J_ASSERT(commit_transaction->t_declare_root.rnode == NULL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!commit_transaction->t_declare_done_root.rnode"
#430: FILE: fs/jbd/commit.c:1132:
+	J_ASSERT(commit_transaction->t_declare_done_root.rnode == NULL);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#444: FILE: fs/jbd/journal.c:91:
+extern void write_declare_blocks(journal_t *journal,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#445: FILE: fs/jbd/journal.c:92:
+extern void write_declare_blocks(journal_t *journal,
+			  transaction_t *commit_transaction, int committing);

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#453: FILE: fs/jbd/journal.c:163:
+	} else if (journal->j_flags & JFS_DECLARE &&

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!transaction"
#478: FILE: fs/jbd/journal.c:519:
+	if (transaction == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!transaction->t_declare_root.rnode"
#483: FILE: fs/jbd/journal.c:524:
+	if (transaction->t_declare_root.rnode == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fake_inode"
#565: FILE: fs/jbd/recovery.c:70:
+	if (fake_inode == NULL) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#566: FILE: fs/jbd/recovery.c:71:
+		printk(KERN_ERR "JBD: Out of memory during recovery.\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#645: FILE: fs/jbd/recovery.c:306:
+	if (!err && !info.resync_errors && JFS_HAS_INCOMPAT_FEATURE(journal,
+					JFS_FEATURE_INCOMPAT_DECLARE_BLOCKS)) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#647: FILE: fs/jbd/recovery.c:308:
+		 * to skip its resync */

WARNING:TYPO_SPELLING: 'commmitted' may be misspelled - perhaps 'committed'?
#698: FILE: fs/jbd/recovery.c:473:
+				 * the last commmitted transaction to deal with
 				            ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: braces {} should be used on all arms of this statement
#702: FILE: fs/jbd/recovery.c:477:
+				if (pass == PASS_REPLAY &&
[...]
+				else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#704: FILE: fs/jbd/recovery.c:479:
+				    JFS_HAS_INCOMPAT_FEATURE(journal,
+					 JFS_FEATURE_INCOMPAT_DECLARE_BLOCKS)) {

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#715: FILE: fs/jbd/recovery.c:490:
+				}
+				else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:WxV)
#783: FILE: fs/jbd/recovery.c:787:
+			while ((tagp - bh->b_data +sizeof(journal_block_tag_t))
 			                          ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#785: FILE: fs/jbd/recovery.c:789:
+			       <= journal->j_blocksize) {
+

CHECK:SPACING: No space is necessary after a cast
#788: FILE: fs/jbd/recovery.c:792:
+				tag = (journal_block_tag_t *) tagp;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#831: FILE: fs/jbd/recovery.c:865:
+			printk(KERN_ERR "JBD: bad block at offset %lu\n",

CHECK:BRACES: braces {} should be used on all arms of this statement
#934: FILE: fs/jbd/transaction.c:1640:
+	if (jh->b_jlist == BJ_Declare || jh->b_jlist == BJ_DeclareDone) {
[...]
+	else
[...]

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#936: FILE: fs/jbd/transaction.c:1642:
+			printk(KERN_ERR

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#941: FILE: fs/jbd/transaction.c:1647:
 	}
+	else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#985: FILE: fs/jbd/transaction.c:2172:
+			printk(KERN_ERR

WARNING:MISORDERED_TYPE: type 'long unsigned' should be specified in [[un]signed] [short|int|long|long long] order
#987: FILE: fs/jbd/transaction.c:2174:
+				(long unsigned)bh->b_blocknr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1005: FILE: fs/jbd/transaction.c:2191:
+	if (transaction->t_journal->j_flags & JFS_DECLARE &&
+			jlist == BJ_Declare &&

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1038: FILE: include/linux/jbd.h:266:
+#define JFS_FEATURE_INCOMPAT_DECLARE_BLOCKS    ^I0x00000008$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1119: FILE: include/linux/jbd.h:1130:
+extern int	   journal_write_declare(journal_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'journal_t *' should also have an identifier name
#1119: FILE: include/linux/jbd.h:1130:
+extern int	   journal_write_declare(journal_t *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000065198.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 22 warnings, 25 checks, 1023 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000065198.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
