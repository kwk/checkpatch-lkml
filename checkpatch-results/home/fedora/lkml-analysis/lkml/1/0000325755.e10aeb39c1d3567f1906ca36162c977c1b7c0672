WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#35: 
This patch is fundamentally about fixing up the whitespace problems introduced by my previous patch (that brought the code into mainline). A second patch will follow that will fix memory leaks. The two need to be applied sequentially.

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#96: FILE: drivers/sh/maple/maple.c:97:
+			    void (*callback) (struct mapleq * mq),

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: Unnecessary space before function pointer arguments
#96: FILE: drivers/sh/maple/maple.c:97:
+			    void (*callback) (struct mapleq * mq),

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#165: FILE: drivers/sh/maple/maple.c:144:
+	mq->recvbuf = (void *) P2SEGADDR(mq->recvbufdcsp);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#299: FILE: drivers/sh/maple/maple.c:222:
+	maple_sendptr = maple_lastptr = maple_sendbuf;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#472: FILE: drivers/sh/maple/maple.c:306:
+		printk(KERN_INFO

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#482: FILE: drivers/sh/maple/maple.c:316:
+			printk(KERN_INFO

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#496: FILE: drivers/sh/maple/maple.c:330:
+		printk(KERN_INFO

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'maple_dev->interval > 0'
#551: FILE: drivers/sh/maple/maple.c:359:
+	if ((maple_dev->interval > 0)
+	    && time_after(jiffies, maple_dev->when)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#552: FILE: drivers/sh/maple/maple.c:360:
+	if ((maple_dev->interval > 0)
+	    && time_after(jiffies, maple_dev->when)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#702: FILE: drivers/sh/maple/maple.c:448:
+		printk(KERN_INFO

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#709: FILE: drivers/sh/maple/maple.c:455:
+		printk(KERN_INFO "No maple devices attached to port %d\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#734: FILE: drivers/sh/maple/maple.c:467:
+	char submask;
+	if ((!started) || (scanning == 2)) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around '!started'
#734: FILE: drivers/sh/maple/maple.c:467:
+	if ((!started) || (scanning == 2)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'scanning == 2'
#734: FILE: drivers/sh/maple/maple.c:467:
+	if ((!started) || (scanning == 2)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#840: FILE: drivers/sh/maple/maple.c:514:
+				printk(KERN_DEBUG

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#846: FILE: drivers/sh/maple/maple.c:520:
+				printk(KERN_DEBUG

CHECK:BRACES: braces {} should be used on all arms of this statement
#858: FILE: drivers/sh/maple/maple.c:532:
+		if (scanning == 1) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#861: FILE: drivers/sh/maple/maple.c:535:
+		} else

CHECK:SPACING: No space is necessary after a cast
#927: FILE: drivers/sh/maple/maple.c:582:
+	    (void *) __get_free_pages(GFP_KERNEL | __GFP_ZERO,

WARNING:LINE_SPACING: Missing a blank line after declarations
#1108: FILE: drivers/sh/maple/maple.c:640:
+	struct maple_device *mdev[MAPLE_PORTS];
+	ctrl_outl(0, MAPLE_STATE);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1126: FILE: drivers/sh/maple/maple.c:658:
+		printk(KERN_INFO

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1134: FILE: drivers/sh/maple/maple.c:666:
+		printk(KERN_INFO

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1142: FILE: drivers/sh/maple/maple.c:674:
+		printk(KERN_INFO "Maple bus: Failed to grab VBLANK IRQ\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1177: FILE: drivers/sh/maple/maple.c:709:
+	printk(KERN_INFO "Maple bus core now registered.\n");

WARNING:INDENTED_LABEL: labels should not be indented
#1181: FILE: drivers/sh/maple/maple.c:713:
+      cleanup_cache:

WARNING:INDENTED_LABEL: labels should not be indented
#1184: FILE: drivers/sh/maple/maple.c:716:
+      cleanup_bothirqs:

WARNING:INDENTED_LABEL: labels should not be indented
#1187: FILE: drivers/sh/maple/maple.c:719:
+      cleanup_irq:

WARNING:INDENTED_LABEL: labels should not be indented
#1190: FILE: drivers/sh/maple/maple.c:722:
+      cleanup_dma:

CHECK:SPACING: No space is necessary after a cast
#1191: FILE: drivers/sh/maple/maple.c:723:
+	free_pages((unsigned long) maple_sendbuf, MAPLE_DMA_PAGES);

WARNING:INDENTED_LABEL: labels should not be indented
#1193: FILE: drivers/sh/maple/maple.c:725:
+      cleanup_basic:

WARNING:INDENTED_LABEL: labels should not be indented
#1196: FILE: drivers/sh/maple/maple.c:728:
+      cleanup_bus:

WARNING:INDENTED_LABEL: labels should not be indented
#1199: FILE: drivers/sh/maple/maple.c:731:
+      cleanup_device:

WARNING:INDENTED_LABEL: labels should not be indented
#1202: FILE: drivers/sh/maple/maple.c:734:
+      cleanup:

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1203: FILE: drivers/sh/maple/maple.c:735:
+	printk(KERN_INFO "Maple bus registration failed\n");

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1301: FILE: include/linux/maple.h:53:
+	void (*callback) (struct mapleq * mq);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1301: FILE: include/linux/maple.h:53:
+	void (*callback) (struct mapleq * mq);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1317: FILE: include/linux/maple.h:65:
+	int (*connect) (struct maple_device * dev);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1317: FILE: include/linux/maple.h:65:
+	int (*connect) (struct maple_device * dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1318: FILE: include/linux/maple.h:66:
+	void (*disconnect) (struct maple_device * dev);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1318: FILE: include/linux/maple.h:66:
+	void (*disconnect) (struct maple_device * dev);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#1327: FILE: include/linux/maple.h:72:
+			    void (*callback) (struct mapleq * mq),

WARNING:SPACING: Unnecessary space before function pointer arguments
#1327: FILE: include/linux/maple.h:72:
+			    void (*callback) (struct mapleq * mq),

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000325755.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 28 warnings, 10 checks, 1281 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000325755.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
