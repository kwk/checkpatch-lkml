WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#69: FILE: drivers/iio/accel/Kconfig:22:
+config SCA3000
+       depends on IIO && IIO_RING_BUFFER
+       depends on SPI
+       tristate "VTI SCA3000 series accelerometers"
+       help
+         Say yes here to build support for the VTI SCA3000 series of SPI
+	 accelerometers. These devices use a hardware ring buffer.

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#90: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#95: FILE: drivers/iio/accel/sca3000.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:TYPO_SPELLING: 'droping' may be misspelled - perhaps 'dropping'?
#113: FILE: drivers/iio/accel/sca3000.h:19:
+ * Free fall detection mode - supported but untested as I'm not droping my
                                                                 ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'theshold' may be misspelled - perhaps 'threshold'?
#171: FILE: drivers/iio/accel/sca3000.h:77:
+ * (aprox 1 - 25Hz) and then a programmable theshold used to trigger
                                             ^^^^^^^^

WARNING:TYPO_SPELLING: 'accesss' may be misspelled - perhaps 'access'?
#188: FILE: drivers/iio/accel/sca3000.h:94:
+/* Used to allow accesss to multiplexed registers */
                  ^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#197: FILE: drivers/iio/accel/sca3000.h:103:
+/* BE VERY CAREFUL WITH THIS, IF 3 BITS ARE NOT SET the device
+   will not function */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#197: FILE: drivers/iio/accel/sca3000.h:103:
+   will not function */

WARNING:TYPO_SPELLING: 'Measurment' may be misspelled - perhaps 'Measurement'?
#236: FILE: drivers/iio/accel/sca3000.h:142:
+/* Measurment modes available on some sca3000 series chips. Code assumes others
    ^^^^^^^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#255: FILE: drivers/iio/accel/sca3000.h:161:
+ * @us: ^I ^I^Ithe associated spi device$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#256: FILE: drivers/iio/accel/sca3000.h:162:
+ * @info: ^I  ^I^Ichip variant information$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#257: FILE: drivers/iio/accel/sca3000.h:163:
+ * @indio_dev: ^I ^I^Idevice information used by the IIO core$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#258: FILE: drivers/iio/accel/sca3000.h:164:
+ * @interrupt_handler_ws: ^Ievent interrupt handler for all events$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#259: FILE: drivers/iio/accel/sca3000.h:165:
+ * @last_timestamp: ^I^Ithe timestamp of the last event$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#260: FILE: drivers/iio/accel/sca3000.h:166:
+ * @mo_det_use_count: ^I^Ireference counter for the motion detection unit$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#261: FILE: drivers/iio/accel/sca3000.h:167:
+ * @lock: ^I^I ^Ilock used to protect elements of sca3000_state$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#262: FILE: drivers/iio/accel/sca3000.h:168:
+ * ^I ^I^I^Iand the underlying device state.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#263: FILE: drivers/iio/accel/sca3000.h:169:
+ * @bpse: ^I^I ^Inumber of bits per scan element$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#264: FILE: drivers/iio/accel/sca3000.h:170:
+ * @tx: ^I^I ^Idma-able transmit buffer$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#265: FILE: drivers/iio/accel/sca3000.h:171:
+ * @rx: ^I^I ^Idma-able receive buffer$

CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#274: FILE: drivers/iio/accel/sca3000.h:180:
+	struct mutex			lock;

WARNING:TYPO_SPELLING: 'dependant' may be misspelled - perhaps 'dependent'?
#282: FILE: drivers/iio/accel/sca3000.h:188:
+ * struct sca3000_chip_info - model dependant parameters
                                     ^^^^^^^^^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#283: FILE: drivers/iio/accel/sca3000.h:189:
+ * @name: ^I^I^Imodel identification$

WARNING:TYPO_SPELLING: 'recieved' may be misspelled - perhaps 'received'?
#308: FILE: drivers/iio/accel/sca3000.h:214:
+ * @rx:			pointer where recieved data is placed. Callee
        			              ^^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#374: FILE: drivers/iio/accel/sca3000_core.c:1:
+/*

CHECK:LINE_SPACING: Please don't use multiple blank lines
#458: FILE: drivers/iio/accel/sca3000_core.c:85:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#478: FILE: drivers/iio/accel/sca3000_core.c:105:
+		      uint8_t reg_address_high,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!rx_p"
#492: FILE: drivers/iio/accel/sca3000_core.c:119:
+	if (*rx_p == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#514: FILE: drivers/iio/accel/sca3000_core.c:141:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#515: FILE: drivers/iio/accel/sca3000_core.c:142:
+}
+/**

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#588: FILE: drivers/iio/accel/sca3000_core.c:215:
+				  uint8_t sel,

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#591: FILE: drivers/iio/accel/sca3000_core.c:218:
+{
+

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#663: FILE: drivers/iio/accel/sca3000_core.c:290:
+		dev_err(dev, "eeprom error \n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#704: FILE: drivers/iio/accel/sca3000_core.c:331:
+
+

WARNING:LINE_SPACING: Missing a blank line after declarations
#711: FILE: drivers/iio/accel/sca3000_core.c:338:
+	struct sca3000_state *st = dev_info->dev_data;
+	return sprintf(buf, "%s\n", st->info->name);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#713: FILE: drivers/iio/accel/sca3000_core.c:340:
+}
+/**

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#772: FILE: drivers/iio/accel/sca3000_core.c:399:
+	len += sprintf(buf + len, " 3 - motion detection \n");

WARNING:CONSIDER_KSTRTO: strict_strtol is obsolete, use kstrtol instead
#845: FILE: drivers/iio/accel/sca3000_core.c:472:
+	ret = strict_strtol(buf, 10, &val);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:LINE_SPACING: Please don't use multiple blank lines
#868: FILE: drivers/iio/accel/sca3000_core.c:495:
+
+

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#872: FILE: drivers/iio/accel/sca3000_core.c:499:
+static IIO_DEVICE_ATTR(available_measurement_modes, S_IRUGO,

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#876: FILE: drivers/iio/accel/sca3000_core.c:503:
+static IIO_DEVICE_ATTR(measurement_mode, S_IRUGO | S_IWUSR,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#893: FILE: drivers/iio/accel/sca3000_core.c:520:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#903: FILE: drivers/iio/accel/sca3000_core.c:530:
+static ssize_t sca3000_read_av_freq(struct device *dev,
+			     struct device_attribute *attr,

WARNING:LINE_SPACING: Missing a blank line after declarations
#910: FILE: drivers/iio/accel/sca3000_core.c:537:
+	u8 *rx;
+	mutex_lock(&st->lock);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#920: FILE: drivers/iio/accel/sca3000_core.c:547:
+			       st->info->measurement_mode_freq/2,
 			                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#921: FILE: drivers/iio/accel/sca3000_core.c:548:
+			       st->info->measurement_mode_freq/4);
 			                                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#926: FILE: drivers/iio/accel/sca3000_core.c:553:
+			       st->info->option_mode_1_freq/2,
 			                                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#927: FILE: drivers/iio/accel/sca3000_core.c:554:
+			       st->info->option_mode_1_freq/4);
 			                                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#932: FILE: drivers/iio/accel/sca3000_core.c:559:
+			       st->info->option_mode_2_freq/2,
 			                                   ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#933: FILE: drivers/iio/accel/sca3000_core.c:560:
+			       st->info->option_mode_2_freq/4);
 			                                   ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#941: FILE: drivers/iio/accel/sca3000_core.c:568:
+}
+/**

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#976: FILE: drivers/iio/accel/sca3000_core.c:603:
+static ssize_t sca3000_read_frequency(struct device *dev,
+			       struct device_attribute *attr,

WARNING:LINE_SPACING: Missing a blank line after declarations
#983: FILE: drivers/iio/accel/sca3000_core.c:610:
+	u8 *rx;
+	mutex_lock(&st->lock);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#992: FILE: drivers/iio/accel/sca3000_core.c:619:
+		switch (rx[1]&0x03) {
 		             ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#998: FILE: drivers/iio/accel/sca3000_core.c:625:
+			len = sprintf(buf, "%d\n", base_freq/2);
 			                                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1001: FILE: drivers/iio/accel/sca3000_core.c:628:
+			len = sprintf(buf, "%d\n", base_freq/4);
 			                                    ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1016: FILE: drivers/iio/accel/sca3000_core.c:643:
+static ssize_t sca3000_set_frequency(struct device *dev,
+			      struct device_attribute *attr,

WARNING:CONSIDER_KSTRTO: strict_strtol is obsolete, use kstrtol instead
#1026: FILE: drivers/iio/accel/sca3000_core.c:653:
+	ret = strict_strtol(buf, 10, &val);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1042: FILE: drivers/iio/accel/sca3000_core.c:669:
+	if (val == base_freq/2) {
 	                    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1044: FILE: drivers/iio/accel/sca3000_core.c:671:
+	} else if (val == base_freq/4) {
 	                           ^

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR | S_IRUGO' are not preferred. Consider using octal permissions '0644'.
#1062: FILE: drivers/iio/accel/sca3000_core.c:689:
+static IIO_DEV_ATTR_SAMP_FREQ(S_IWUSR | S_IRUGO,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1066: FILE: drivers/iio/accel/sca3000_core.c:693:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1070: FILE: drivers/iio/accel/sca3000_core.c:697:
+ *
+* The alignment of data in here is downright odd. See data sheet.

WARNING:LINE_SPACING: Missing a blank line after declarations
#1083: FILE: drivers/iio/accel/sca3000_core.c:710:
+	u8 *rx;
+	ret = sca3000_read_data(st, SCA3000_REG_ADDR_TEMP_MSB, &rx, 2);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1086: FILE: drivers/iio/accel/sca3000_core.c:713:
+	val = ((rx[1]&0x3F) << 3) | ((rx[2] & 0xE0) >> 5);
 	             ^

WARNING:TYPO_SPELLING: 'theshold' may be misspelled - perhaps 'threshold'?
#1098: FILE: drivers/iio/accel/sca3000_core.c:725:
+ * sca3000_show_thresh() sysfs query of a theshold
                                           ^^^^^^^^

WARNING:CONSIDER_KSTRTO: strict_strtol is obsolete, use kstrtol instead
#1137: FILE: drivers/iio/accel/sca3000_core.c:764:
+	ret = strict_strtol(buf, 10, &val);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1147: FILE: drivers/iio/accel/sca3000_core.c:774:
+static IIO_DEV_ATTR_ACCEL_THRESH_X(S_IRUGO | S_IWUSR,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1151: FILE: drivers/iio/accel/sca3000_core.c:778:
+static IIO_DEV_ATTR_ACCEL_THRESH_Y(S_IRUGO | S_IWUSR,

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#1155: FILE: drivers/iio/accel/sca3000_core.c:782:
+static IIO_DEV_ATTR_ACCEL_THRESH_Z(S_IRUGO | S_IWUSR,

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1215: FILE: drivers/iio/accel/sca3000_core.c:842:
+	struct sca3000_state *st
+		= container_of(work_s, struct sca3000_state,

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:RETURN_VOID: void function return statements are not generally useful
#1256: FILE: drivers/iio/accel/sca3000_core.c:883:
+	return;
+}

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1300: FILE: drivers/iio/accel/sca3000_core.c:927:
+	if ((rx[1]&protect_mask) != SCA3000_MEAS_MODE_MOT_DET)
 	          ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1300: FILE: drivers/iio/accel/sca3000_core.c:927:
+	if ((rx[1]&protect_mask) != SCA3000_MEAS_MODE_MOT_DET)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1302: FILE: drivers/iio/accel/sca3000_core.c:929:
+	else {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1319: FILE: drivers/iio/accel/sca3000_core.c:946:
+}
+/**

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1342: FILE: drivers/iio/accel/sca3000_core.c:969:
+}
+/**

WARNING:LINE_SPACING: Missing a blank line after declarations
#1354: FILE: drivers/iio/accel/sca3000_core.c:981:
+	struct sca3000_state *st = indio_dev->dev_data;
+	mutex_lock(&st->lock);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1364: FILE: drivers/iio/accel/sca3000_core.c:991:
+}
+/**

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1368: FILE: drivers/iio/accel/sca3000_core.c:995:
+static ssize_t sca3000_set_ring_int(struct device *dev,
+				      struct device_attribute *attr,

WARNING:CONSIDER_KSTRTO: strict_strtol is obsolete, use kstrtol instead
#1381: FILE: drivers/iio/accel/sca3000_core.c:1008:
+	ret = strict_strtol(buf, 10, &val);

WARNING:CONSIDER_KSTRTO: strict_strtol is obsolete, use kstrtol instead
#1423: FILE: drivers/iio/accel/sca3000_core.c:1050:
+	ret = strict_strtol(buf, 10, &val);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1437: FILE: drivers/iio/accel/sca3000_core.c:1064:
+	else if (!val && (rx[1]&protect_mask))
 	                       ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#1469: FILE: drivers/iio/accel/sca3000_core.c:1096:
+	u8 protect_mask = 0x03;
+	ret = strict_strtol(buf, 10, &val);

WARNING:CONSIDER_KSTRTO: strict_strtol is obsolete, use kstrtol instead
#1469: FILE: drivers/iio/accel/sca3000_core.c:1096:
+	ret = strict_strtol(buf, 10, &val);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1475: FILE: drivers/iio/accel/sca3000_core.c:1102:
+	 * this axis is on*/

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1489: FILE: drivers/iio/accel/sca3000_core.c:1116:
+	} else if (!val && (rx[1]&this_attr->mask)) {
 	                         ^

CHECK:BRACES: Unbalanced braces around else statement
#1496: FILE: drivers/iio/accel/sca3000_core.c:1123:
+	} else /* relies on clean state for device on boot */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'st->mo_det_use_count'
#1504: FILE: drivers/iio/accel/sca3000_core.c:1131:
+	if ((st->mo_det_use_count)
+	    && ((rx[1]&protect_mask) != SCA3000_MEAS_MODE_MOT_DET))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1505: FILE: drivers/iio/accel/sca3000_core.c:1132:
+	if ((st->mo_det_use_count)
+	    && ((rx[1]&protect_mask) != SCA3000_MEAS_MODE_MOT_DET))

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1505: FILE: drivers/iio/accel/sca3000_core.c:1132:
+	    && ((rx[1]&protect_mask) != SCA3000_MEAS_MODE_MOT_DET))
 	              ^

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1511: FILE: drivers/iio/accel/sca3000_core.c:1138:
+	else if (!(st->mo_det_use_count)
+		 && ((rx[1]&protect_mask) == SCA3000_MEAS_MODE_MOT_DET))

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1511: FILE: drivers/iio/accel/sca3000_core.c:1138:
+		 && ((rx[1]&protect_mask) == SCA3000_MEAS_MODE_MOT_DET))
 		           ^

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1578: FILE: drivers/iio/accel/sca3000_core.c:1205:
+ * Hence reset everything on driver load.
+  **/

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1609: FILE: drivers/iio/accel/sca3000_core.c:1236:
+	 * debugging easier - add control of this later */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1623: FILE: drivers/iio/accel/sca3000_core.c:1250:
+	ret = sca3000_read_data(st,
+			  SCA3000_REG_ADDR_INT_MASK,

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1636: FILE: drivers/iio/accel/sca3000_core.c:1263:
+	 * as that occurs in one of the example on the datasheet */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1638: FILE: drivers/iio/accel/sca3000_core.c:1265:
+	ret = sca3000_read_data(st,
+			  SCA3000_REG_ADDR_MODE,

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1653: FILE: drivers/iio/accel/sca3000_core.c:1280:
+static int __devinit __sca3000_probe(struct spi_device *spi,

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*st)...) over kzalloc(sizeof(struct sca3000_state)...)
#1659: FILE: drivers/iio/accel/sca3000_core.c:1286:
+	st = kzalloc(sizeof(struct sca3000_state), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!st"
#1660: FILE: drivers/iio/accel/sca3000_core.c:1287:
+	if (st == NULL) {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1666: FILE: drivers/iio/accel/sca3000_core.c:1293:
+	st->tx = kmalloc(sizeof(*st->tx)*6, GFP_KERNEL);
 	                                ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!st->tx"
#1667: FILE: drivers/iio/accel/sca3000_core.c:1294:
+	if (st->tx == NULL) {

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1671: FILE: drivers/iio/accel/sca3000_core.c:1298:
+	st->rx = kmalloc(sizeof(*st->rx)*3, GFP_KERNEL);
 	                                ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!st->rx"
#1672: FILE: drivers/iio/accel/sca3000_core.c:1299:
+	if (st->rx == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!st->indio_dev"
#1681: FILE: drivers/iio/accel/sca3000_core.c:1308:
+	if (st->indio_dev == NULL) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1721: FILE: drivers/iio/accel/sca3000_core.c:1348:
+		iio_add_event_to_list(iio_event_attr_accel_z_high.listel,
+					    &st->indio_dev

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1766: FILE: drivers/iio/accel/sca3000_core.c:1393:
+
+}

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1793: FILE: drivers/iio/accel/sca3000_core.c:1420:
+	static int __devinit					\

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1889: FILE: drivers/iio/accel/sca3000_ring.c:1:
+/*

WARNING:TYPO_SPELLING: 'aproximately' may be misspelled - perhaps 'approximately'?
#1936: FILE: drivers/iio/accel/sca3000_ring.c:48:
+ * can only be inferred aproximately from ring buffer events such as 50% full
                         ^^^^^^^^^^^^

WARNING:TYPO_SPELLING: 'Afterall' may be misspelled - perhaps 'After all'?
#1955: FILE: drivers/iio/accel/sca3000_ring.c:67:
+	 * is enough data in the ring?  Afterall, if we are responding
 	                                ^^^^^^^^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1971: FILE: drivers/iio/accel/sca3000_ring.c:83:
+		num_read = num_available*bytes_per_sample;
 		                        ^

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1997: FILE: drivers/iio/accel/sca3000_ring.c:109:
+}
+static void sca3000_ring_release(struct device *dev)

WARNING:LINE_SPACING: Missing a blank line after declarations
#2000: FILE: drivers/iio/accel/sca3000_ring.c:112:
+	struct iio_ring_buffer *r = to_iio_ring_buffer(dev);
+	kfree(iio_to_hw_ring_buf(r));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2042: FILE: drivers/iio/accel/sca3000_ring.c:154:
+static ssize_t sca3000_store_ring_bpse(struct device *dev,
+				      struct device_attribute *attr,

WARNING:LINE_SPACING: Missing a blank line after declarations
#2051: FILE: drivers/iio/accel/sca3000_ring.c:163:
+	long val;
+	ret = strict_strtol(buf, 10, &val);

WARNING:CONSIDER_KSTRTO: strict_strtol is obsolete, use kstrtol instead
#2051: FILE: drivers/iio/accel/sca3000_ring.c:163:
+	ret = strict_strtol(buf, 10, &val);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#2081: FILE: drivers/iio/accel/sca3000_ring.c:193:
+static IIO_DEV_ATTR_BPSE(S_IRUGO | S_IWUSR,

WARNING:SIZEOF_PARENTHESIS: sizeof *ring should be sizeof(*ring)
#2119: FILE: drivers/iio/accel/sca3000_ring.c:231:
+	ring = kzalloc(sizeof *ring, GFP_KERNEL);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!indio_dev->ring"
#2142: FILE: drivers/iio/accel/sca3000_ring.c:254:
+	if (indio_dev->ring == NULL)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2170: FILE: drivers/iio/accel/sca3000_ring.c:282:
+		printk(KERN_INFO "supposedly enabling ring buffer\n");

CHECK:BRACES: Unbalanced braces around else statement
#2174: FILE: drivers/iio/accel/sca3000_ring.c:286:
+	} else

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2184: FILE: drivers/iio/accel/sca3000_ring.c:296:
+}
+/**

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2229: FILE: include/linux/iio/ring_hw.h:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2257: FILE: include/linux/iio/sca3000.h:1:
+/*

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#2273: FILE: include/linux/iio/sca3000.h:17:
+static inline int sca3000_11bit_convert(uint8_t msb, uint8_t lsb)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's16' over 'int16_t'
#2275: FILE: include/linux/iio/sca3000.h:19:
+	int16_t val;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#2283: FILE: include/linux/iio/sca3000.h:27:
+static inline int sca3000_13bit_convert(uint8_t msb, uint8_t lsb)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000101238.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 65 warnings, 65 checks, 2192 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000101238.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
