CHECK:LINE_SPACING: Please don't use multiple blank lines
#94: FILE: drivers/dma/ioat_dca.c:264:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ioatdca->req_slots[i].pdev"
#113: FILE: drivers/dma/ioat_dca.c:283:
+		if (ioatdca->req_slots[i].pdev == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LINE_SPACING: Please don't use multiple blank lines
#237: FILE: drivers/dma/ioat_dca.c:407:
+
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#308: FILE: drivers/dma/ioat_dma.c:176:
+static inline void __ioat1_dma_memcpy_issue_pending(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#310: FILE: drivers/dma/ioat_dma.c:178:
+static inline void __ioat2_dma_memcpy_issue_pending(

CHECK:SPACING: No space is necessary after a cast
#375: FILE: drivers/dma/ioat_dma.c:297:
+		copy = min((u32) len, ioat_chan->xfercap);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:MINMAX: min() should probably be min_t(u32, len, ioat_chan->xfercap)
#375: FILE: drivers/dma/ioat_dma.c:297:
+		copy = min((u32) len, ioat_chan->xfercap);

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#398: FILE: drivers/dma/ioat_dma.c:320:
+			new->async_tx.callback_param
+					= first->async_tx.callback_param;

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#419: FILE: drivers/dma/ioat_dma.c:341:
+	ioat_chan->common.cookie = new->async_tx.cookie = cookie;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#638: FILE: drivers/dma/ioat_dma.c:611:
+	    ioat_chan->used_desc.next == ioat_chan->used_desc.prev->prev) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#657: FILE: drivers/dma/ioat_dma.c:630:
+			BUG_ON(!desc);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#661: FILE: drivers/dma/ioat_dma.c:634:
+			desc->hw->next
+				= to_ioat_desc(desc->node.next)->async_tx.phys;

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#663: FILE: drivers/dma/ioat_dma.c:636:
+			to_ioat_desc(desc->node.prev)->hw->next
+				= desc->async_tx.phys;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ioat_chan->used_desc.prev"
#673: FILE: drivers/dma/ioat_dma.c:646:
+	if (ioat_chan->used_desc.prev == NULL)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#680: FILE: drivers/dma/ioat_dma.c:653:
+static struct ioat_desc_sw *ioat_dma_get_next_descriptor(

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#689: FILE: drivers/dma/ioat_dma.c:662:
+		return ioat1_dma_get_next_descriptor(ioat_chan);
+		break;

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#692: FILE: drivers/dma/ioat_dma.c:665:
+		return ioat2_dma_get_next_descriptor(ioat_chan);
+		break;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#697: FILE: drivers/dma/ioat_dma.c:670:
+static struct dma_async_tx_descriptor *ioat1_dma_prep_memcpy(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#705: FILE: drivers/dma/ioat_dma.c:686:
+static struct dma_async_tx_descriptor *ioat2_dma_prep_memcpy(

CHECK:LINE_SPACING: Please don't use multiple blank lines
#721: FILE: drivers/dma/ioat_dma.c:702:
+
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#728: FILE: drivers/dma/ioat_dma.c:708:
+static inline void __ioat1_dma_memcpy_issue_pending(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#749: FILE: drivers/dma/ioat_dma.c:726:
+static inline void __ioat2_dma_memcpy_issue_pending(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#832: FILE: drivers/dma/ioat_dma.c:820:
+				pci_unmap_page(ioat_chan->device->pdev,
+						pci_unmap_addr(desc, dst),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#836: FILE: drivers/dma/ioat_dma.c:824:
+				pci_unmap_page(ioat_chan->device->pdev,
+						pci_unmap_addr(desc, src),

CHECK:BRACES: braces {} should be used on all arms of this statement
#862: FILE: drivers/dma/ioat_dma.c:839:
+				if (desc->async_tx.ack) {
[...]
+				} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#866: FILE: drivers/dma/ioat_dma.c:843:
+				} else

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ioat_chan->used_desc.prev"
#890: FILE: drivers/dma/ioat_dma.c:860:
+		if (ioat_chan->used_desc.prev == NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "latest_desc"
#906: FILE: drivers/dma/ioat_dma.c:876:
+		if (latest_desc != NULL) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#907: FILE: drivers/dma/ioat_dma.c:877:
+		if (latest_desc != NULL) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#918: FILE: drivers/dma/ioat_dma.c:888:
+					pci_unmap_page(ioat_chan->device->pdev,
+						      pci_unmap_addr(desc, dst),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#922: FILE: drivers/dma/ioat_dma.c:892:
+					pci_unmap_page(ioat_chan->device->pdev,
+						      pci_unmap_addr(desc, src),

WARNING:LONG_LINE: line length of 103 exceeds 100 columns
#927: FILE: drivers/dma/ioat_dma.c:897:
+						desc->async_tx.callback(desc->async_tx.callback_param);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#968: FILE: drivers/dma/ioat_dma.c:993:
+		writel(((u64) desc->async_tx.phys) & 0x00000000FFFFFFFF,

CHECK:SPACING: No space is necessary after a cast
#970: FILE: drivers/dma/ioat_dma.c:995:
+		writel(((u64) desc->async_tx.phys) >> 32,

CHECK:SPACING: No space is necessary after a cast
#977: FILE: drivers/dma/ioat_dma.c:1002:
+		writel(((u64) desc->async_tx.phys) & 0x00000000FFFFFFFF,

CHECK:SPACING: No space is necessary after a cast
#979: FILE: drivers/dma/ioat_dma.c:1004:
+		writel(((u64) desc->async_tx.phys) >> 32,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1281: FILE: drivers/dma/ioatdma_registers.h:80:
+
+

WARNING:LONG_LINE: line length of 102 exceeds 100 columns
#1289: FILE: drivers/dma/ioatdma_registers.h:88:
+						? IOAT1_CHANSTS_OFFSET_LOW : IOAT2_CHANSTS_OFFSET_LOW)

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#1293: FILE: drivers/dma/ioatdma_registers.h:92:
+						? IOAT1_CHANSTS_OFFSET_HIGH : IOAT2_CHANSTS_OFFSET_HIGH)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1308: FILE: drivers/dma/ioatdma_registers.h:103:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1357: FILE: drivers/dma/ioatdma_registers.h:152:
+
+

WARNING:LONG_LINE: line length of 106 exceeds 100 columns
#1366: FILE: drivers/dma/ioatdma_registers.h:161:
+						? IOAT1_CHAINADDR_OFFSET_LOW : IOAT2_CHAINADDR_OFFSET_LOW)

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#1370: FILE: drivers/dma/ioatdma_registers.h:165:
+						? IOAT1_CHAINADDR_OFFSET_HIGH : IOAT2_CHAINADDR_OFFSET_HIGH)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000368195.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 9 warnings, 34 checks, 1282 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000368195.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
