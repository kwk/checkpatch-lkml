CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'entry.delivery_mode == dest_SMI'
#63: FILE: arch/x86_64/kernel/io_apic.c:356:
+	if ((entry.delivery_mode == dest_SMI) ||
+	    (entry.delivery_mode == dest_NMI))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'entry.delivery_mode == dest_NMI'
#63: FILE: arch/x86_64/kernel/io_apic.c:356:
+	if ((entry.delivery_mode == dest_SMI) ||
+	    (entry.delivery_mode == dest_NMI))

WARNING:TYPO_SPELLING: 'ExtINT' may be misspelled - perhaps 'Extinct'?
#88: FILE: arch/x86_64/kernel/io_apic.c:1172:
+		/* See if any of the pins are in ExtINT  or NMI mode */
 		                                 ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'entry.mask == 0'
#97: FILE: arch/x86_64/kernel/io_apic.c:1180:
+			if (!found_i8259 && (entry.mask == 0) &&
+			    (entry.delivery_mode == dest_ExtINT)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'entry.delivery_mode == dest_ExtINT'
#97: FILE: arch/x86_64/kernel/io_apic.c:1180:
+			if (!found_i8259 && (entry.mask == 0) &&
+			    (entry.delivery_mode == dest_ExtINT)) {

CHECK:CAMELCASE: Avoid CamelCase: <dest_ExtINT>
#98: FILE: arch/x86_64/kernel/io_apic.c:1181:
+			    (entry.delivery_mode == dest_ExtINT)) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:BRACES: braces {} are not necessary for single statement blocks
#106: FILE: arch/x86_64/kernel/io_apic.c:1188:
+			if (entry.delivery_mode == dest_NMI) {
+				setup_ioapic_nmi_irq(apic, pin, &entry);
 			}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#193: FILE: arch/x86_64/kernel/mpparse.c:654:
+        if (apic > nr_ioapics) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#193: FILE: arch/x86_64/kernel/mpparse.c:654:
+        if (apic > nr_ioapics) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 17)
#193: FILE: arch/x86_64/kernel/mpparse.c:654:
+        if (apic > nr_ioapics) {
+                 printk(KERN_ERR

ERROR:CODE_INDENT: code indent should use tabs where possible
#194: FILE: arch/x86_64/kernel/mpparse.c:655:
+                 printk(KERN_ERR$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#194: FILE: arch/x86_64/kernel/mpparse.c:655:
+                 printk(KERN_ERR$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#194: FILE: arch/x86_64/kernel/mpparse.c:655:
+                 printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#196: FILE: arch/x86_64/kernel/mpparse.c:657:
+			 "ERROR: Invalid I/O APIC (%d), exceeds number"
+			 " found (%d)\n", apic, nr_ioapics);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: arch/x86_64/kernel/mpparse.c:658:
+                return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#197: FILE: arch/x86_64/kernel/mpparse.c:658:
+                return -1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#198: FILE: arch/x86_64/kernel/mpparse.c:659:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#198: FILE: arch/x86_64/kernel/mpparse.c:659:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#200: FILE: arch/x86_64/kernel/mpparse.c:661:
+        return (mp_ioapic_routing[apic].gsi_start + pin);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#200: FILE: arch/x86_64/kernel/mpparse.c:661:
+        return (mp_ioapic_routing[apic].gsi_start + pin);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#218: FILE: arch/x86_64/kernel/mpparse.c:810:
+		printk(KERN_WARNING "No IOAPIC for NMI Src GSI %u\n", gsi);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#226: FILE: arch/x86_64/kernel/mpparse.c:818:
+		printk(KERN_ERR "Invalid reference to IOAPIC pin "

WARNING:SPLIT_STRING: quoted string split across lines
#227: FILE: arch/x86_64/kernel/mpparse.c:819:
+		printk(KERN_ERR "Invalid reference to IOAPIC pin "
+			"%d-%d\n", mp_ioapic_routing[ioapic].apic_id,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#232: FILE: arch/x86_64/kernel/mpparse.c:824:
+		printk(KERN_ERR "Pin %d-%d already programmed\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#233: FILE: arch/x86_64/kernel/mpparse.c:825:
+		printk(KERN_ERR "Pin %d-%d already programmed\n",
+			mp_ioapic_routing[ioapic].apic_id, ioapic_pin);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#267: FILE: include/asm-x86_64/io_apic.h:122:
+extern void io_apic_set_nmi_src_irq (int ioapic, int pin, u16 polarity);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#267: FILE: include/asm-x86_64/io_apic.h:122:
+extern void io_apic_set_nmi_src_irq (int ioapic, int pin, u16 polarity);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#279: FILE: include/asm-x86_64/mpspec.h:184:
+extern void mp_config_acpi_nmi_src(u32 gsi, u16 flags);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#283: FILE: include/asm-x86_64/mpspec.h:188:
+extern int mp_apic_pin_to_gsi(int apic, int pin);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#295: FILE: include/asm-i386/mpspec.h:34:
+extern void mp_config_acpi_nmi_src(u32 gsi, u16 flags);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000416375.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 15 warnings, 10 checks, 225 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000416375.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
