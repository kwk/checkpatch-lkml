WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#497: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#513: FILE: arch/frv/include/asm/atomic.h:1:
+/* atomic.h: atomic operation emulation for FR-V

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#559: FILE: arch/frv/include/asm/atomic.h:47:
+	asm("0:						\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#560: FILE: arch/frv/include/asm/atomic.h:48:
+	    "	orcc		gr0,gr0,gr0,icc3	\n"	/* set ICC3.Z */

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#561: FILE: arch/frv/include/asm/atomic.h:49:
+	    "	ckeq		icc3,cc7		\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#562: FILE: arch/frv/include/asm/atomic.h:50:
+	    "	ld.p		%M0,%1			\n"	/* LD.P/ORCR must be atomic */

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#563: FILE: arch/frv/include/asm/atomic.h:51:
+	    "	orcr		cc7,cc7,cc3		\n"	/* set CC3 to true */

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#564: FILE: arch/frv/include/asm/atomic.h:52:
+	    "	add%I2		%1,%2,%1		\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#565: FILE: arch/frv/include/asm/atomic.h:53:
+	    "	cst.p		%1,%M0		,cc3,#1	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#566: FILE: arch/frv/include/asm/atomic.h:54:
+	    "	corcc		gr29,gr29,gr0	,cc3,#1	\n"	/* clear ICC3.Z if store happens */

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#567: FILE: arch/frv/include/asm/atomic.h:55:
+	    "	beq		icc3,#0,0b		\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#580: FILE: arch/frv/include/asm/atomic.h:68:
+	asm("0:						\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#581: FILE: arch/frv/include/asm/atomic.h:69:
+	    "	orcc		gr0,gr0,gr0,icc3	\n"	/* set ICC3.Z */

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#582: FILE: arch/frv/include/asm/atomic.h:70:
+	    "	ckeq		icc3,cc7		\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#583: FILE: arch/frv/include/asm/atomic.h:71:
+	    "	ld.p		%M0,%1			\n"	/* LD.P/ORCR must be atomic */

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#584: FILE: arch/frv/include/asm/atomic.h:72:
+	    "	orcr		cc7,cc7,cc3		\n"	/* set CC3 to true */

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#585: FILE: arch/frv/include/asm/atomic.h:73:
+	    "	sub%I2		%1,%2,%1		\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#586: FILE: arch/frv/include/asm/atomic.h:74:
+	    "	cst.p		%1,%M0		,cc3,#1	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#587: FILE: arch/frv/include/asm/atomic.h:75:
+	    "	corcc		gr29,gr29,gr0	,cc3,#1	\n"	/* clear ICC3.Z if store happens */

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#588: FILE: arch/frv/include/asm/atomic.h:76:
+	    "	beq		icc3,#0,0b		\n"

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#599: FILE: arch/frv/include/asm/atomic.h:87:
+extern int atomic_add_return(int i, atomic_t *v);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#600: FILE: arch/frv/include/asm/atomic.h:88:
+extern int atomic_sub_return(int i, atomic_t *v);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#632: FILE: arch/frv/include/asm/atomic.h:120:
+#define atomic_sub_and_test(i,v)	(atomic_sub_return((i), (v)) == 0)
                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#642: FILE: arch/frv/include/asm/atomic.h:130:
+#define xchg(ptr, x)								\
+({										\
+	__typeof__(ptr) __xg_ptr = (ptr);					\
+	__typeof__(*(ptr)) __xg_orig;						\
+										\
+	switch (sizeof(__xg_orig)) {						\
+	case 4:									\
+		asm volatile(							\
+			"swap%I0 %M0,%1"					\
+			: "+m"(*__xg_ptr), "=r"(__xg_orig)			\
+			: "1"(x)						\
+			: "memory"						\
+			);							\
+		break;								\
+										\
+	default:								\
+		__xg_orig = (__typeof__(__xg_orig))0;				\
+		asm volatile("break");						\
+		break;								\
+	}									\
+										\
+	__xg_orig;								\
+})

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#668: FILE: arch/frv/include/asm/atomic.h:156:
+extern uint32_t __xchg_32(uint32_t i, volatile void *v);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#668: FILE: arch/frv/include/asm/atomic.h:156:
+extern uint32_t __xchg_32(uint32_t i, volatile void *v);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#668: FILE: arch/frv/include/asm/atomic.h:156:
+extern uint32_t __xchg_32(uint32_t i, volatile void *v);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#670: FILE: arch/frv/include/asm/atomic.h:158:
+#define xchg(ptr, x)										\
+({												\
+	__typeof__(ptr) __xg_ptr = (ptr);							\
+	__typeof__(*(ptr)) __xg_orig;								\
+												\
+	switch (sizeof(__xg_orig)) {								\
+	case 4: __xg_orig = (__typeof__(*(ptr))) __xchg_32((uint32_t) x, __xg_ptr);	break;	\
+	default:										\
+		__xg_orig = (__typeof__(__xg_orig))0;									\
+		asm volatile("break");								\
+		break;										\
+	}											\
+	__xg_orig;										\
+})

CHECK:SPACING: No space is necessary after a cast
#676: FILE: arch/frv/include/asm/atomic.h:164:
+	case 4: __xg_orig = (__typeof__(*(ptr))) __xchg_32((uint32_t) x, __xg_ptr);	break;	\

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#676: FILE: arch/frv/include/asm/atomic.h:164:
+	case 4: __xg_orig = (__typeof__(*(ptr))) __xchg_32((uint32_t) x, __xg_ptr);	break;	\

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:LONG_LINE: line length of 121 exceeds 100 columns
#678: FILE: arch/frv/include/asm/atomic.h:166:
+		__xg_orig = (__typeof__(__xg_orig))0;									\

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:INLINE: plain inline is preferred over __inline__
#692: FILE: arch/frv/include/asm/atomic.h:180:
+static __inline__ int atomic_add_unless(atomic_t *v, int a, int u)

WARNING:LINE_SPACING: Missing a blank line after declarations
#695: FILE: arch/frv/include/asm/atomic.h:183:
+	int c, old;
+	c = atomic_read(v);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#717: FILE: arch/frv/include/asm/auxvec.h:1:
+#ifndef __FRV_AUXVEC_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#727: FILE: arch/frv/include/asm/ax88796.h:1:
+/* ax88796.h: access points to the driver for the AX88796 NE2000 clone

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#755: FILE: arch/frv/include/asm/bitops.h:1:
+/* bitops.h: bit operations for the Fujitsu FR-V CPUs

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#790: FILE: arch/frv/include/asm/bitops.h:36:
+unsigned long atomic_test_and_ANDNOT_mask(unsigned long mask, volatile unsigned long *v)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#794: FILE: arch/frv/include/asm/bitops.h:40:
+	asm volatile(

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#795: FILE: arch/frv/include/asm/bitops.h:41:
+		"0:						\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#796: FILE: arch/frv/include/asm/bitops.h:42:
+		"	orcc		gr0,gr0,gr0,icc3	\n"	/* set ICC3.Z */

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#797: FILE: arch/frv/include/asm/bitops.h:43:
+		"	ckeq		icc3,cc7		\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#798: FILE: arch/frv/include/asm/bitops.h:44:
+		"	ld.p		%M0,%1			\n"	/* LD.P/ORCR are atomic */

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#799: FILE: arch/frv/include/asm/bitops.h:45:
+		"	orcr		cc7,cc7,cc3		\n"	/* set CC3 to true */

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#800: FILE: arch/frv/include/asm/bitops.h:46:
+		"	and%I3		%1,%3,%2		\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#801: FILE: arch/frv/include/asm/bitops.h:47:
+		"	cst.p		%2,%M0		,cc3,#1	\n"	/* if store happens... */

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#802: FILE: arch/frv/include/asm/bitops.h:48:
+		"	corcc		gr29,gr29,gr0	,cc3,#1	\n"	/* ... clear ICC3.Z */

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#803: FILE: arch/frv/include/asm/bitops.h:49:
+		"	beq		icc3,#0,0b		\n"

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#813: FILE: arch/frv/include/asm/bitops.h:59:
+unsigned long atomic_test_and_OR_mask(unsigned long mask, volatile unsigned long *v)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#817: FILE: arch/frv/include/asm/bitops.h:63:
+	asm volatile(

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#818: FILE: arch/frv/include/asm/bitops.h:64:
+		"0:						\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#819: FILE: arch/frv/include/asm/bitops.h:65:
+		"	orcc		gr0,gr0,gr0,icc3	\n"	/* set ICC3.Z */

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#820: FILE: arch/frv/include/asm/bitops.h:66:
+		"	ckeq		icc3,cc7		\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#821: FILE: arch/frv/include/asm/bitops.h:67:
+		"	ld.p		%M0,%1			\n"	/* LD.P/ORCR are atomic */

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#822: FILE: arch/frv/include/asm/bitops.h:68:
+		"	orcr		cc7,cc7,cc3		\n"	/* set CC3 to true */

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#823: FILE: arch/frv/include/asm/bitops.h:69:
+		"	or%I3		%1,%3,%2		\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#824: FILE: arch/frv/include/asm/bitops.h:70:
+		"	cst.p		%2,%M0		,cc3,#1	\n"	/* if store happens... */

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#825: FILE: arch/frv/include/asm/bitops.h:71:
+		"	corcc		gr29,gr29,gr0	,cc3,#1	\n"	/* ... clear ICC3.Z */

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#826: FILE: arch/frv/include/asm/bitops.h:72:
+		"	beq		icc3,#0,0b		\n"

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#836: FILE: arch/frv/include/asm/bitops.h:82:
+unsigned long atomic_test_and_XOR_mask(unsigned long mask, volatile unsigned long *v)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#840: FILE: arch/frv/include/asm/bitops.h:86:
+	asm volatile(

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#841: FILE: arch/frv/include/asm/bitops.h:87:
+		"0:						\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#842: FILE: arch/frv/include/asm/bitops.h:88:
+		"	orcc		gr0,gr0,gr0,icc3	\n"	/* set ICC3.Z */

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#843: FILE: arch/frv/include/asm/bitops.h:89:
+		"	ckeq		icc3,cc7		\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#844: FILE: arch/frv/include/asm/bitops.h:90:
+		"	ld.p		%M0,%1			\n"	/* LD.P/ORCR are atomic */

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#845: FILE: arch/frv/include/asm/bitops.h:91:
+		"	orcr		cc7,cc7,cc3		\n"	/* set CC3 to true */

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#846: FILE: arch/frv/include/asm/bitops.h:92:
+		"	xor%I3		%1,%3,%2		\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#847: FILE: arch/frv/include/asm/bitops.h:93:
+		"	cst.p		%2,%M0		,cc3,#1	\n"	/* if store happens... */

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#848: FILE: arch/frv/include/asm/bitops.h:94:
+		"	corcc		gr29,gr29,gr0	,cc3,#1	\n"	/* ... clear ICC3.Z */

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#849: FILE: arch/frv/include/asm/bitops.h:95:
+		"	beq		icc3,#0,0b		\n"

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#860: FILE: arch/frv/include/asm/bitops.h:106:
+extern unsigned long atomic_test_and_ANDNOT_mask(unsigned long mask, volatile unsigned long *v);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#860: FILE: arch/frv/include/asm/bitops.h:106:
+extern unsigned long atomic_test_and_ANDNOT_mask(unsigned long mask, volatile unsigned long *v);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#861: FILE: arch/frv/include/asm/bitops.h:107:
+extern unsigned long atomic_test_and_OR_mask(unsigned long mask, volatile unsigned long *v);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#861: FILE: arch/frv/include/asm/bitops.h:107:
+extern unsigned long atomic_test_and_OR_mask(unsigned long mask, volatile unsigned long *v);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#862: FILE: arch/frv/include/asm/bitops.h:108:
+extern unsigned long atomic_test_and_XOR_mask(unsigned long mask, volatile unsigned long *v);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#862: FILE: arch/frv/include/asm/bitops.h:108:
+extern unsigned long atomic_test_and_XOR_mask(unsigned long mask, volatile unsigned long *v);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#869: FILE: arch/frv/include/asm/bitops.h:115:
+static inline int test_and_clear_bit(int nr, volatile void *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#871: FILE: arch/frv/include/asm/bitops.h:117:
+	volatile unsigned long *ptr = addr;

WARNING:LINE_SPACING: Missing a blank line after declarations
#873: FILE: arch/frv/include/asm/bitops.h:119:
+	unsigned long mask = 1UL << (nr & 31);
+	ptr += nr >> 5;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#877: FILE: arch/frv/include/asm/bitops.h:123:
+static inline int test_and_set_bit(int nr, volatile void *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#879: FILE: arch/frv/include/asm/bitops.h:125:
+	volatile unsigned long *ptr = addr;

WARNING:LINE_SPACING: Missing a blank line after declarations
#881: FILE: arch/frv/include/asm/bitops.h:127:
+	unsigned long mask = 1UL << (nr & 31);
+	ptr += nr >> 5;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#885: FILE: arch/frv/include/asm/bitops.h:131:
+static inline int test_and_change_bit(int nr, volatile void *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#887: FILE: arch/frv/include/asm/bitops.h:133:
+	volatile unsigned long *ptr = addr;

WARNING:LINE_SPACING: Missing a blank line after declarations
#889: FILE: arch/frv/include/asm/bitops.h:135:
+	unsigned long mask = 1UL << (nr & 31);
+	ptr += nr >> 5;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#893: FILE: arch/frv/include/asm/bitops.h:139:
+static inline void clear_bit(int nr, volatile void *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#898: FILE: arch/frv/include/asm/bitops.h:144:
+static inline void set_bit(int nr, volatile void *addr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#903: FILE: arch/frv/include/asm/bitops.h:149:
+static inline void change_bit(int nr, volatile void * addr)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#903: FILE: arch/frv/include/asm/bitops.h:149:
+static inline void change_bit(int nr, volatile void * addr)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#908: FILE: arch/frv/include/asm/bitops.h:154:
+static inline void __clear_bit(int nr, volatile void * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#908: FILE: arch/frv/include/asm/bitops.h:154:
+static inline void __clear_bit(int nr, volatile void * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#910: FILE: arch/frv/include/asm/bitops.h:156:
+	volatile unsigned long *a = addr;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#918: FILE: arch/frv/include/asm/bitops.h:164:
+static inline void __set_bit(int nr, volatile void * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#918: FILE: arch/frv/include/asm/bitops.h:164:
+static inline void __set_bit(int nr, volatile void * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#920: FILE: arch/frv/include/asm/bitops.h:166:
+	volatile unsigned long *a = addr;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#928: FILE: arch/frv/include/asm/bitops.h:174:
+static inline void __change_bit(int nr, volatile void *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#930: FILE: arch/frv/include/asm/bitops.h:176:
+	volatile unsigned long *a = addr;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#938: FILE: arch/frv/include/asm/bitops.h:184:
+static inline int __test_and_clear_bit(int nr, volatile void * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#938: FILE: arch/frv/include/asm/bitops.h:184:
+static inline int __test_and_clear_bit(int nr, volatile void * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#940: FILE: arch/frv/include/asm/bitops.h:186:
+	volatile unsigned long *a = addr;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#950: FILE: arch/frv/include/asm/bitops.h:196:
+static inline int __test_and_set_bit(int nr, volatile void * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#950: FILE: arch/frv/include/asm/bitops.h:196:
+static inline int __test_and_set_bit(int nr, volatile void * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#952: FILE: arch/frv/include/asm/bitops.h:198:
+	volatile unsigned long *a = addr;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#962: FILE: arch/frv/include/asm/bitops.h:208:
+static inline int __test_and_change_bit(int nr, volatile void * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#962: FILE: arch/frv/include/asm/bitops.h:208:
+static inline int __test_and_change_bit(int nr, volatile void * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#964: FILE: arch/frv/include/asm/bitops.h:210:
+	volatile unsigned long *a = addr;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#977: FILE: arch/frv/include/asm/bitops.h:223:
+static inline int __constant_test_bit(int nr, const volatile void * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#977: FILE: arch/frv/include/asm/bitops.h:223:
+static inline int __constant_test_bit(int nr, const volatile void * addr)

CHECK:SPACING: No space is necessary after a cast
#979: FILE: arch/frv/include/asm/bitops.h:225:
+	return ((1UL << (nr & 31)) & (((const volatile unsigned int *) addr)[nr >> 5])) != 0;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#979: FILE: arch/frv/include/asm/bitops.h:225:
+	return ((1UL << (nr & 31)) & (((const volatile unsigned int *) addr)[nr >> 5])) != 0;

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#982: FILE: arch/frv/include/asm/bitops.h:228:
+static inline int __test_bit(int nr, const volatile void * addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#982: FILE: arch/frv/include/asm/bitops.h:228:
+static inline int __test_bit(int nr, const volatile void * addr)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#984: FILE: arch/frv/include/asm/bitops.h:230:
+^Iint ^I* a = (int *) addr;$

CHECK:SPACING: No space is necessary after a cast
#984: FILE: arch/frv/include/asm/bitops.h:230:
+	int 	* a = (int *) addr;

ERROR:POINTER_LOCATION: "foo 	* bar" should be "foo 	*bar"
#984: FILE: arch/frv/include/asm/bitops.h:230:
+	int 	* a = (int *) addr;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#992: FILE: arch/frv/include/asm/bitops.h:238:
+#define test_bit(nr,addr) \
                    ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'nr' - possible side-effects?
#992: FILE: arch/frv/include/asm/bitops.h:238:
+#define test_bit(nr,addr) \
+(__builtin_constant_p(nr) ? \
+ __constant_test_bit((nr),(addr)) : \
+ __test_bit((nr),(addr)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'addr' - possible side-effects?
#992: FILE: arch/frv/include/asm/bitops.h:238:
+#define test_bit(nr,addr) \
+(__builtin_constant_p(nr) ? \
+ __constant_test_bit((nr),(addr)) : \
+ __test_bit((nr),(addr)))

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#994: FILE: arch/frv/include/asm/bitops.h:240:
+ __constant_test_bit((nr),(addr)) : \$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#994: FILE: arch/frv/include/asm/bitops.h:240:
+ __constant_test_bit((nr),(addr)) : \
                          ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#995: FILE: arch/frv/include/asm/bitops.h:241:
+ __test_bit((nr),(addr)))$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#995: FILE: arch/frv/include/asm/bitops.h:241:
+ __test_bit((nr),(addr)))
                 ^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1011: FILE: arch/frv/include/asm/bitops.h:257:
+	asm("	subcc	%1,gr0,gr0,icc0		\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1012: FILE: arch/frv/include/asm/bitops.h:258:
+	    "	ckne	icc0,cc4		\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1013: FILE: arch/frv/include/asm/bitops.h:259:
+	    "	cscan.p	%1,gr0,%0	,cc4,#1	\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1014: FILE: arch/frv/include/asm/bitops.h:260:
+	    "	csub	%0,%0,%0	,cc4,#0	\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1015: FILE: arch/frv/include/asm/bitops.h:261:
+	    "   csub    %2,%0,%0	,cc4,#1	\n"	\

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __attribute_const__ over __attribute__((const))
#1032: FILE: arch/frv/include/asm/bitops.h:278:
+static inline __attribute__((const))

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1043: FILE: arch/frv/include/asm/bitops.h:289:
+	asm("	subcc.p		%3,gr0,gr0,icc0		\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1044: FILE: arch/frv/include/asm/bitops.h:290:
+	    "	subcc		%4,gr0,gr0,icc1		\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1045: FILE: arch/frv/include/asm/bitops.h:291:
+	    "	ckne		icc0,cc4		\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1046: FILE: arch/frv/include/asm/bitops.h:292:
+	    "	ckne		icc1,cc5		\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1047: FILE: arch/frv/include/asm/bitops.h:293:
+	    "	norcr		cc4,cc5,cc6		\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1048: FILE: arch/frv/include/asm/bitops.h:294:
+	    "	csub.p		%0,%0,%0	,cc6,1	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1049: FILE: arch/frv/include/asm/bitops.h:295:
+	    "	orcr		cc5,cc4,cc4		\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1050: FILE: arch/frv/include/asm/bitops.h:296:
+	    "	andcr		cc4,cc5,cc4		\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1051: FILE: arch/frv/include/asm/bitops.h:297:
+	    "	cscan.p		%3,gr0,%0	,cc4,0	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1052: FILE: arch/frv/include/asm/bitops.h:298:
+	    "   setlos		#64,%1			\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1053: FILE: arch/frv/include/asm/bitops.h:299:
+	    "	cscan.p		%4,gr0,%0	,cc4,1	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1054: FILE: arch/frv/include/asm/bitops.h:300:
+	    "   setlos		#32,%2			\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1055: FILE: arch/frv/include/asm/bitops.h:301:
+	    "	csub.p		%1,%0,%0	,cc4,0	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1056: FILE: arch/frv/include/asm/bitops.h:302:
+	    "	csub		%2,%0,%0	,cc4,1	\n"

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1063: FILE: arch/frv/include/asm/bitops.h:309:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __attribute_const__ over __attribute__((const))
#1072: FILE: arch/frv/include/asm/bitops.h:318:
+static inline __attribute__((const))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __attribute_const__ over __attribute__((const))
#1088: FILE: arch/frv/include/asm/bitops.h:334:
+static inline __attribute__((const))

WARNING:LINE_SPACING: Missing a blank line after declarations
#1092: FILE: arch/frv/include/asm/bitops.h:338:
+	int bit;
+	asm("scan %1,gr0,%0" : "=r"(bit) : "r"(x & -x));

WARNING:LINE_SPACING: Missing a blank line after declarations
#1105: FILE: arch/frv/include/asm/bitops.h:351:
+	unsigned long bit;
+	asm("scan %1,gr0,%0" : "=r"(bit) : "r"(word));

ERROR:DEFINE_ARCH_HAS: #define of 'ARCH_HAS_ILOG2_U32' is wrong - use Kconfig variables or standard guards instead
#1113: FILE: arch/frv/include/asm/bitops.h:359:
+#define ARCH_HAS_ILOG2_U32

The ARCH_HAS_xyz and ARCH_HAVE_xyz patterns are wrong.

For big conceptual features use Kconfig symbols instead.  And for
smaller things where we have compatibility fallback functions but
want architectures able to override them with optimized ones, we
should either use weak functions (appropriate for some cases), or
the symbol that protects them should be the same symbol we use.

See: https://lore.kernel.org/lkml/CA+55aFycQ9XJvEOsiM3txHL5bjUc8CeKWJNR_H+MiicaddB42Q@mail.gmail.com/

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __attribute_const__ over __attribute__((const))
#1114: FILE: arch/frv/include/asm/bitops.h:360:
+static inline __attribute__((const))

WARNING:LINE_SPACING: Missing a blank line after declarations
#1118: FILE: arch/frv/include/asm/bitops.h:364:
+	int bit;
+	asm("scan %1,gr0,%0" : "=r"(bit) : "r"(n));

ERROR:DEFINE_ARCH_HAS: #define of 'ARCH_HAS_ILOG2_U64' is wrong - use Kconfig variables or standard guards instead
#1126: FILE: arch/frv/include/asm/bitops.h:372:
+#define ARCH_HAS_ILOG2_U64

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __attribute_const__ over __attribute__((const))
#1127: FILE: arch/frv/include/asm/bitops.h:373:
+static inline __attribute__((const))

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1138: FILE: arch/frv/include/asm/bitops.h:384:
+	asm("	subcc		%3,gr0,gr0,icc0		\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1139: FILE: arch/frv/include/asm/bitops.h:385:
+	    "	ckeq		icc0,cc4		\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1140: FILE: arch/frv/include/asm/bitops.h:386:
+	    "	cscan.p		%3,gr0,%0	,cc4,0	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1141: FILE: arch/frv/include/asm/bitops.h:387:
+	    "   setlos		#63,%1			\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1142: FILE: arch/frv/include/asm/bitops.h:388:
+	    "	cscan.p		%4,gr0,%0	,cc4,1	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1143: FILE: arch/frv/include/asm/bitops.h:389:
+	    "   setlos		#31,%2			\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1144: FILE: arch/frv/include/asm/bitops.h:390:
+	    "	csub.p		%1,%0,%0	,cc4,0	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1145: FILE: arch/frv/include/asm/bitops.h:391:
+	    "	csub		%2,%0,%0	,cc4,1	\n"

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1159: FILE: arch/frv/include/asm/bitops.h:405:
+#define ext2_set_bit_atomic(lock,nr,addr)	test_and_set_bit  ((nr) ^ 0x18, (addr))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1159: FILE: arch/frv/include/asm/bitops.h:405:
+#define ext2_set_bit_atomic(lock,nr,addr)	test_and_set_bit  ((nr) ^ 0x18, (addr))
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1159: FILE: arch/frv/include/asm/bitops.h:405:
+#define ext2_set_bit_atomic(lock,nr,addr)	test_and_set_bit  ((nr) ^ 0x18, (addr))
                                    ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#1159: FILE: arch/frv/include/asm/bitops.h:405:
+#define ext2_set_bit_atomic(lock,nr,addr)	test_and_set_bit  ((nr) ^ 0x18, (addr))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1160: FILE: arch/frv/include/asm/bitops.h:406:
+#define ext2_clear_bit_atomic(lock,nr,addr)	test_and_clear_bit((nr) ^ 0x18, (addr))
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1160: FILE: arch/frv/include/asm/bitops.h:406:
+#define ext2_clear_bit_atomic(lock,nr,addr)	test_and_clear_bit((nr) ^ 0x18, (addr))
                                      ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1173: FILE: arch/frv/include/asm/bug.h:1:
+/* bug.h: FRV bug trapping

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1197: FILE: arch/frv/include/asm/bug.h:25:
+extern void __debug_bug_printk(const char *file, unsigned line);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1197: FILE: arch/frv/include/asm/bug.h:25:
+extern void __debug_bug_printk(const char *file, unsigned line);

ERROR:SPACING: space required before the open parenthesis '('
#1205: FILE: arch/frv/include/asm/bug.h:33:
+} while(0)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1208: FILE: arch/frv/include/asm/bug.h:36:
+#define BUG()					\

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

ERROR:SPACING: space required before the open parenthesis '('
#1216: FILE: arch/frv/include/asm/bug.h:44:
+#define kgdb_raise(signr) do { _debug_bug_trap(signr); } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1216: FILE: arch/frv/include/asm/bug.h:44:
+#define kgdb_raise(signr) do { _debug_bug_trap(signr); } while(0)

For the multi-statement macros, it is necessary to use the do-while
loop to avoid unpredictable code paths. The do-while loop helps to
group the multiple statements into a single one so that a
function-like macro can be used as a function only.

But for the single statement macros, it is unnecessary to use the
do-while loop. Although the code is syntactically correct but using
the do-while loop is redundant. So remove the do-while loop for single
statement macros.

ERROR:SPACING: space required before the open parenthesis '('
#1219: FILE: arch/frv/include/asm/bug.h:47:
+#define kgdb_bad_page(page) do { kgdb_raise(SIGABRT); } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1219: FILE: arch/frv/include/asm/bug.h:47:
+#define kgdb_bad_page(page) do { kgdb_raise(SIGABRT); } while(0)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1232: FILE: arch/frv/include/asm/bugs.h:1:
+/* bugs.h: arch bug checking entry

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1252: FILE: arch/frv/include/asm/busctl-regs.h:1:
+/* busctl-regs.h: FR400-series CPU bus controller registers

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1267: FILE: arch/frv/include/asm/busctl-regs.h:16:
+#define __get_LGCR()	({ *(volatile unsigned long *)(0xfe000010); })

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1268: FILE: arch/frv/include/asm/busctl-regs.h:17:
+#define __get_LMAICR()	({ *(volatile unsigned long *)(0xfe000030); })

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1269: FILE: arch/frv/include/asm/busctl-regs.h:18:
+#define __get_LEMBR()	({ *(volatile unsigned long *)(0xfe000040); })

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1270: FILE: arch/frv/include/asm/busctl-regs.h:19:
+#define __get_LEMAM()	({ *(volatile unsigned long *)(0xfe000048); })

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1271: FILE: arch/frv/include/asm/busctl-regs.h:20:
+#define __get_LCR(R)	({ *(volatile unsigned long *)(0xfe000100 + 8*(R)); })
                     	                                             ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1271: FILE: arch/frv/include/asm/busctl-regs.h:20:
+#define __get_LCR(R)	({ *(volatile unsigned long *)(0xfe000100 + 8*(R)); })

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1272: FILE: arch/frv/include/asm/busctl-regs.h:21:
+#define __get_LSBR(R)	({ *(volatile unsigned long *)(0xfe000c00 + 8*(R)); })
                      	                                             ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1272: FILE: arch/frv/include/asm/busctl-regs.h:21:
+#define __get_LSBR(R)	({ *(volatile unsigned long *)(0xfe000c00 + 8*(R)); })

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1273: FILE: arch/frv/include/asm/busctl-regs.h:22:
+#define __get_LSAM(R)	({ *(volatile unsigned long *)(0xfe000d00 + 8*(R)); })
                      	                                             ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1273: FILE: arch/frv/include/asm/busctl-regs.h:22:
+#define __get_LSAM(R)	({ *(volatile unsigned long *)(0xfe000d00 + 8*(R)); })

ERROR:SPACING: space required before the open parenthesis '('
#1275: FILE: arch/frv/include/asm/busctl-regs.h:24:
+#define __set_LGCR(V)	do { *(volatile unsigned long *)(0xfe000010) = (V); } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1275: FILE: arch/frv/include/asm/busctl-regs.h:24:
+#define __set_LGCR(V)	do { *(volatile unsigned long *)(0xfe000010) = (V); } while(0)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1275: FILE: arch/frv/include/asm/busctl-regs.h:24:
+#define __set_LGCR(V)	do { *(volatile unsigned long *)(0xfe000010) = (V); } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#1276: FILE: arch/frv/include/asm/busctl-regs.h:25:
+#define __set_LMAICR(V)	do { *(volatile unsigned long *)(0xfe000030) = (V); } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1276: FILE: arch/frv/include/asm/busctl-regs.h:25:
+#define __set_LMAICR(V)	do { *(volatile unsigned long *)(0xfe000030) = (V); } while(0)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1276: FILE: arch/frv/include/asm/busctl-regs.h:25:
+#define __set_LMAICR(V)	do { *(volatile unsigned long *)(0xfe000030) = (V); } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#1277: FILE: arch/frv/include/asm/busctl-regs.h:26:
+#define __set_LEMBR(V)	do { *(volatile unsigned long *)(0xfe000040) = (V); } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1277: FILE: arch/frv/include/asm/busctl-regs.h:26:
+#define __set_LEMBR(V)	do { *(volatile unsigned long *)(0xfe000040) = (V); } while(0)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1277: FILE: arch/frv/include/asm/busctl-regs.h:26:
+#define __set_LEMBR(V)	do { *(volatile unsigned long *)(0xfe000040) = (V); } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#1278: FILE: arch/frv/include/asm/busctl-regs.h:27:
+#define __set_LEMAM(V)	do { *(volatile unsigned long *)(0xfe000048) = (V); } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1278: FILE: arch/frv/include/asm/busctl-regs.h:27:
+#define __set_LEMAM(V)	do { *(volatile unsigned long *)(0xfe000048) = (V); } while(0)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1278: FILE: arch/frv/include/asm/busctl-regs.h:27:
+#define __set_LEMAM(V)	do { *(volatile unsigned long *)(0xfe000048) = (V); } while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1279: FILE: arch/frv/include/asm/busctl-regs.h:28:
+#define __set_LCR(R,V)	do { *(volatile unsigned long *)(0xfe000100 + 8*(R)) = (V); } while(0)
                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1279: FILE: arch/frv/include/asm/busctl-regs.h:28:
+#define __set_LCR(R,V)	do { *(volatile unsigned long *)(0xfe000100 + 8*(R)) = (V); } while(0)
                       	                                               ^

ERROR:SPACING: space required before the open parenthesis '('
#1279: FILE: arch/frv/include/asm/busctl-regs.h:28:
+#define __set_LCR(R,V)	do { *(volatile unsigned long *)(0xfe000100 + 8*(R)) = (V); } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1279: FILE: arch/frv/include/asm/busctl-regs.h:28:
+#define __set_LCR(R,V)	do { *(volatile unsigned long *)(0xfe000100 + 8*(R)) = (V); } while(0)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1279: FILE: arch/frv/include/asm/busctl-regs.h:28:
+#define __set_LCR(R,V)	do { *(volatile unsigned long *)(0xfe000100 + 8*(R)) = (V); } while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1280: FILE: arch/frv/include/asm/busctl-regs.h:29:
+#define __set_LSBR(R,V)	do { *(volatile unsigned long *)(0xfe000c00 + 8*(R)) = (V); } while(0)
                     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1280: FILE: arch/frv/include/asm/busctl-regs.h:29:
+#define __set_LSBR(R,V)	do { *(volatile unsigned long *)(0xfe000c00 + 8*(R)) = (V); } while(0)
                        	                                               ^

ERROR:SPACING: space required before the open parenthesis '('
#1280: FILE: arch/frv/include/asm/busctl-regs.h:29:
+#define __set_LSBR(R,V)	do { *(volatile unsigned long *)(0xfe000c00 + 8*(R)) = (V); } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1280: FILE: arch/frv/include/asm/busctl-regs.h:29:
+#define __set_LSBR(R,V)	do { *(volatile unsigned long *)(0xfe000c00 + 8*(R)) = (V); } while(0)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1280: FILE: arch/frv/include/asm/busctl-regs.h:29:
+#define __set_LSBR(R,V)	do { *(volatile unsigned long *)(0xfe000c00 + 8*(R)) = (V); } while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1281: FILE: arch/frv/include/asm/busctl-regs.h:30:
+#define __set_LSAM(R,V)	do { *(volatile unsigned long *)(0xfe000d00 + 8*(R)) = (V); } while(0)
                     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1281: FILE: arch/frv/include/asm/busctl-regs.h:30:
+#define __set_LSAM(R,V)	do { *(volatile unsigned long *)(0xfe000d00 + 8*(R)) = (V); } while(0)
                        	                                               ^

ERROR:SPACING: space required before the open parenthesis '('
#1281: FILE: arch/frv/include/asm/busctl-regs.h:30:
+#define __set_LSAM(R,V)	do { *(volatile unsigned long *)(0xfe000d00 + 8*(R)) = (V); } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#1281: FILE: arch/frv/include/asm/busctl-regs.h:30:
+#define __set_LSAM(R,V)	do { *(volatile unsigned long *)(0xfe000d00 + 8*(R)) = (V); } while(0)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1281: FILE: arch/frv/include/asm/busctl-regs.h:30:
+#define __set_LSAM(R,V)	do { *(volatile unsigned long *)(0xfe000d00 + 8*(R)) = (V); } while(0)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1284: FILE: arch/frv/include/asm/busctl-regs.h:33:
+#define __get_DBR(R)	({ *(volatile unsigned long *)(0xfe000e00 + 8*(R)); })
                     	                                             ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1284: FILE: arch/frv/include/asm/busctl-regs.h:33:
+#define __get_DBR(R)	({ *(volatile unsigned long *)(0xfe000e00 + 8*(R)); })

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1285: FILE: arch/frv/include/asm/busctl-regs.h:34:
+#define __get_DAM(R)	({ *(volatile unsigned long *)(0xfe000f00 + 8*(R)); })
                     	                                             ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1285: FILE: arch/frv/include/asm/busctl-regs.h:34:
+#define __get_DAM(R)	({ *(volatile unsigned long *)(0xfe000f00 + 8*(R)); })

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1288: FILE: arch/frv/include/asm/busctl-regs.h:37:
+#define __get_DARS(R)	({ *(volatile unsigned long *)(0xfeff0100 + 8*(R)); })
                      	                                             ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1288: FILE: arch/frv/include/asm/busctl-regs.h:37:
+#define __get_DARS(R)	({ *(volatile unsigned long *)(0xfeff0100 + 8*(R)); })

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1289: FILE: arch/frv/include/asm/busctl-regs.h:38:
+#define __get_DAMK(R)	({ *(volatile unsigned long *)(0xfeff0110 + 8*(R)); })
                      	                                             ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1289: FILE: arch/frv/include/asm/busctl-regs.h:38:
+#define __get_DAMK(R)	({ *(volatile unsigned long *)(0xfeff0110 + 8*(R)); })

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1291: FILE: arch/frv/include/asm/busctl-regs.h:40:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1299: FILE: arch/frv/include/asm/byteorder.h:1:
+#ifndef _ASM_BYTEORDER_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1311: FILE: arch/frv/include/asm/cache.h:1:
+/* cache.h: FRV cache definitions

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1325: FILE: arch/frv/include/asm/cache.h:15:
+
+

CHECK:BIT_MACRO: Prefer using the BIT macro
#1328: FILE: arch/frv/include/asm/cache.h:18:
+#define L1_CACHE_BYTES		(1 << L1_CACHE_SHIFT)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(L1_CACHE_BYTES) over __attribute__((aligned(L1_CACHE_BYTES)))
#1330: FILE: arch/frv/include/asm/cache.h:20:
+#define __cacheline_aligned	__attribute__((aligned(L1_CACHE_BYTES)))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(L1_CACHE_BYTES) over __attribute__((aligned(L1_CACHE_BYTES)))
#1331: FILE: arch/frv/include/asm/cache.h:21:
+#define ____cacheline_aligned	__attribute__((aligned(L1_CACHE_BYTES)))

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1340: FILE: arch/frv/include/asm/cacheflush.h:1:
+/* cacheflush.h: FRV cache flushing routines

ERROR:SPACING: space required before the open parenthesis '('
#1360: FILE: arch/frv/include/asm/cacheflush.h:21:
+#define flush_cache_all()			do {} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#1361: FILE: arch/frv/include/asm/cacheflush.h:22:
+#define flush_cache_mm(mm)			do {} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#1362: FILE: arch/frv/include/asm/cacheflush.h:23:
+#define flush_cache_dup_mm(mm)			do {} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#1363: FILE: arch/frv/include/asm/cacheflush.h:24:
+#define flush_cache_range(mm, start, end)	do {} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#1364: FILE: arch/frv/include/asm/cacheflush.h:25:
+#define flush_cache_page(vma, vmaddr, pfn)	do {} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#1365: FILE: arch/frv/include/asm/cacheflush.h:26:
+#define flush_cache_vmap(start, end)		do {} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#1366: FILE: arch/frv/include/asm/cacheflush.h:27:
+#define flush_cache_vunmap(start, end)		do {} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#1367: FILE: arch/frv/include/asm/cacheflush.h:28:
+#define flush_dcache_mmap_lock(mapping)		do {} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#1368: FILE: arch/frv/include/asm/cacheflush.h:29:
+#define flush_dcache_mmap_unlock(mapping)	do {} while(0)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1374: FILE: arch/frv/include/asm/cacheflush.h:35:
+extern void frv_dcache_writeback(unsigned long start, unsigned long size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1375: FILE: arch/frv/include/asm/cacheflush.h:36:
+extern void frv_cache_invalidate(unsigned long start, unsigned long size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1376: FILE: arch/frv/include/asm/cacheflush.h:37:
+extern void frv_icache_invalidate(unsigned long start, unsigned long size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1377: FILE: arch/frv/include/asm/cacheflush.h:38:
+extern void frv_cache_wback_inv(unsigned long start, unsigned long size);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1381: FILE: arch/frv/include/asm/cacheflush.h:42:
+	asm volatile("	dcef	@(gr0,gr0),#1	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1382: FILE: arch/frv/include/asm/cacheflush.h:43:
+		     "	icei	@(gr0,gr0),#1	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1383: FILE: arch/frv/include/asm/cacheflush.h:44:
+		     "	membar			\n"

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1390: FILE: arch/frv/include/asm/cacheflush.h:51:
+extern void flush_dcache_page(struct page *page);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1395: FILE: arch/frv/include/asm/cacheflush.h:56:
+	unsigned long addr = page_to_phys(page);
+	frv_dcache_writeback(addr, addr + PAGE_SIZE);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1415: FILE: arch/frv/include/asm/cacheflush.h:76:
+extern void flush_icache_user_range(struct vm_area_struct *vma, struct page *page,

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'len' - possible side-effects?
#1434: FILE: arch/frv/include/asm/cacheflush.h:95:
+#define copy_to_user_page(vma, page, vaddr, dst, src, len)	\
+do {								\
+	memcpy((dst), (src), (len));				\
+	flush_icache_user_range((vma), (page), (vaddr), (len));	\
+} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#1438: FILE: arch/frv/include/asm/cacheflush.h:99:
+} while(0)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1450: FILE: arch/frv/include/asm/checksum.h:1:
+/* checksum.h: FRV checksumming

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1495: FILE: arch/frv/include/asm/checksum.h:46:
+extern __wsum csum_partial_copy_from_user(const void __user *src, void *dst,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1496: FILE: arch/frv/include/asm/checksum.h:47:
+extern __wsum csum_partial_copy_from_user(const void __user *src, void *dst,
+						int len, __wsum sum, int *csum_err);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1509: FILE: arch/frv/include/asm/checksum.h:60:
+	    "	subi		%1,#4,%1	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1510: FILE: arch/frv/include/asm/checksum.h:61:
+	    "0:					\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1511: FILE: arch/frv/include/asm/checksum.h:62:
+	    "	ldu.p		@(%1,%3),%4	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1512: FILE: arch/frv/include/asm/checksum.h:63:
+	    "	subicc		%2,#1,%2,icc1	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1513: FILE: arch/frv/include/asm/checksum.h:64:
+	    "	addxcc.p	%4,%0,%0,icc0	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1514: FILE: arch/frv/include/asm/checksum.h:65:
+	    "	bhi		icc1,#2,0b	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1517: FILE: arch/frv/include/asm/checksum.h:68:
+	    "	addxcc		gr0,%0,%0,icc0	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1518: FILE: arch/frv/include/asm/checksum.h:69:
+	    "	srli		%0,#16,%1	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1519: FILE: arch/frv/include/asm/checksum.h:70:
+	    "	sethi		#0,%0		\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1520: FILE: arch/frv/include/asm/checksum.h:71:
+	    "	add		%1,%0,%0	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1521: FILE: arch/frv/include/asm/checksum.h:72:
+	    "	srli		%0,#16,%1	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1522: FILE: arch/frv/include/asm/checksum.h:73:
+	    "	add		%1,%0,%0	\n"

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#1526: FILE: arch/frv/include/asm/checksum.h:77:
+	    "m"(*(volatile struct { int _[100]; } *)iph)

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1540: FILE: arch/frv/include/asm/checksum.h:91:
+	asm("	srli		%0,#16,%1	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1541: FILE: arch/frv/include/asm/checksum.h:92:
+	    "	sethi		#0,%0		\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1542: FILE: arch/frv/include/asm/checksum.h:93:
+	    "	add		%1,%0,%0	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1543: FILE: arch/frv/include/asm/checksum.h:94:
+	    "	srli		%0,#16,%1	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1544: FILE: arch/frv/include/asm/checksum.h:95:
+	    "	add		%1,%0,%0	\n"

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1558: FILE: arch/frv/include/asm/checksum.h:109:
+csum_tcpudp_nofold(__be32 saddr, __be32 daddr, unsigned short len,
+		  unsigned short proto, __wsum sum)

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1560: FILE: arch/frv/include/asm/checksum.h:111:
+	asm("	addcc		%1,%0,%0,icc0	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1561: FILE: arch/frv/include/asm/checksum.h:112:
+	    "	addxcc		%2,%0,%0,icc0	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1562: FILE: arch/frv/include/asm/checksum.h:113:
+	    "	addxcc		%3,%0,%0,icc0	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1563: FILE: arch/frv/include/asm/checksum.h:114:
+	    "	addxcc		gr0,%0,%0,icc0	\n"

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1575: FILE: arch/frv/include/asm/checksum.h:126:
+	return csum_fold(csum_tcpudp_nofold(saddr,daddr,len,proto,sum));
 	                                         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1575: FILE: arch/frv/include/asm/checksum.h:126:
+	return csum_fold(csum_tcpudp_nofold(saddr,daddr,len,proto,sum));
 	                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1575: FILE: arch/frv/include/asm/checksum.h:126:
+	return csum_fold(csum_tcpudp_nofold(saddr,daddr,len,proto,sum));
 	                                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1575: FILE: arch/frv/include/asm/checksum.h:126:
+	return csum_fold(csum_tcpudp_nofold(saddr,daddr,len,proto,sum));
 	                                                         ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1582: FILE: arch/frv/include/asm/checksum.h:133:
+extern __sum16 ip_compute_csum(const void *buff, int len);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1591: FILE: arch/frv/include/asm/checksum.h:142:
+	asm("	addcc		%2,%0,%0,icc0	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1594: FILE: arch/frv/include/asm/checksum.h:145:
+	    "	ldi		@(%3,0),%1	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1595: FILE: arch/frv/include/asm/checksum.h:146:
+	    "	addxcc		%1,%0,%0,icc0	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1596: FILE: arch/frv/include/asm/checksum.h:147:
+	    "	ldi		@(%3,4),%2	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1597: FILE: arch/frv/include/asm/checksum.h:148:
+	    "	addxcc		%2,%0,%0,icc0	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1598: FILE: arch/frv/include/asm/checksum.h:149:
+	    "	ldi		@(%3,8),%1	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1599: FILE: arch/frv/include/asm/checksum.h:150:
+	    "	addxcc		%1,%0,%0,icc0	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1600: FILE: arch/frv/include/asm/checksum.h:151:
+	    "	ldi		@(%3,12),%2	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1601: FILE: arch/frv/include/asm/checksum.h:152:
+	    "	addxcc		%2,%0,%0,icc0	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1604: FILE: arch/frv/include/asm/checksum.h:155:
+	    "	ldi		@(%4,0),%1	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1605: FILE: arch/frv/include/asm/checksum.h:156:
+	    "	addxcc		%1,%0,%0,icc0	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1606: FILE: arch/frv/include/asm/checksum.h:157:
+	    "	ldi		@(%4,4),%2	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1607: FILE: arch/frv/include/asm/checksum.h:158:
+	    "	addxcc		%2,%0,%0,icc0	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1608: FILE: arch/frv/include/asm/checksum.h:159:
+	    "	ldi		@(%4,8),%1	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1609: FILE: arch/frv/include/asm/checksum.h:160:
+	    "	addxcc		%1,%0,%0,icc0	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1610: FILE: arch/frv/include/asm/checksum.h:161:
+	    "	ldi		@(%4,12),%2	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1611: FILE: arch/frv/include/asm/checksum.h:162:
+	    "	addxcc		%2,%0,%0,icc0	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1614: FILE: arch/frv/include/asm/checksum.h:165:
+	    "	addxcc		gr0,%0,%0,icc0	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1615: FILE: arch/frv/include/asm/checksum.h:166:
+	    "	srli		%0,#16,%1	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1616: FILE: arch/frv/include/asm/checksum.h:167:
+	    "	sethi		#0,%0		\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1617: FILE: arch/frv/include/asm/checksum.h:168:
+	    "	add		%1,%0,%0	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1618: FILE: arch/frv/include/asm/checksum.h:169:
+	    "	srli		%0,#16,%1	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1619: FILE: arch/frv/include/asm/checksum.h:170:
+	    "	add		%1,%0,%0	\n"

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1636: FILE: arch/frv/include/asm/cpu-irqs.h:1:
+/* cpu-irqs.h: on-CPU peripheral irqs

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1723: FILE: arch/frv/include/asm/cpumask.h:1:
+#ifndef _ASM_CPUMASK_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1735: FILE: arch/frv/include/asm/cputime.h:1:
+#ifndef _ASM_CPUTIME_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1747: FILE: arch/frv/include/asm/current.h:1:
+/* current.h: FRV current task pointer

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1783: FILE: arch/frv/include/asm/delay.h:1:
+/* delay.h: FRV delay code

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1807: FILE: arch/frv/include/asm/delay.h:25:
+	asm volatile("1:	subicc	%0,#1,%0,icc0	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1808: FILE: arch/frv/include/asm/delay.h:26:
+		     "		bnc	icc0,#2,1b	\n"

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1839: FILE: arch/frv/include/asm/device.h:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1852: FILE: arch/frv/include/asm/div64.h:1:
+#include <asm-generic/div64.h>

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1859: FILE: arch/frv/include/asm/dm9000.h:1:
+/* dm9000.h: Davicom DM9000 adapter configuration

CHECK:SPACING: No space is necessary after a cast
#1886: FILE: arch/frv/include/asm/dm9000.h:28:
+	unsigned long __ioaddr = (unsigned long) addr;						\

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#1887: FILE: arch/frv/include/asm/dm9000.h:29:
+	uint32_t x = readl(__ioaddr);								\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1892: FILE: arch/frv/include/asm/dm9000.h:34:
+#define insl(a,b,l)	__insl(a,b,l,0) /* don't byte-swap */
               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1892: FILE: arch/frv/include/asm/dm9000.h:34:
+#define insl(a,b,l)	__insl(a,b,l,0) /* don't byte-swap */
                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1892: FILE: arch/frv/include/asm/dm9000.h:34:
+#define insl(a,b,l)	__insl(a,b,l,0) /* don't byte-swap */
                    	        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1892: FILE: arch/frv/include/asm/dm9000.h:34:
+#define insl(a,b,l)	__insl(a,b,l,0) /* don't byte-swap */
                    	          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1892: FILE: arch/frv/include/asm/dm9000.h:34:
+#define insl(a,b,l)	__insl(a,b,l,0) /* don't byte-swap */
                    	            ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1894: FILE: arch/frv/include/asm/dm9000.h:36:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1902: FILE: arch/frv/include/asm/dma-mapping.h:1:
+#ifndef _ASM_DMA_MAPPING_H

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/cache.h> instead of <asm/cache.h>
#1906: FILE: arch/frv/include/asm/dma-mapping.h:5:
+#include <asm/cache.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/cacheflush.h> instead of <asm/cacheflush.h>
#1907: FILE: arch/frv/include/asm/dma-mapping.h:6:
+#include <asm/cacheflush.h>

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/io.h> instead of <asm/io.h>
#1909: FILE: arch/frv/include/asm/dma-mapping.h:8:
+#include <asm/io.h>

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1927: FILE: arch/frv/include/asm/dma-mapping.h:26:
+extern dma_addr_t dma_map_single(struct device *dev, void *ptr, size_t size,

WARNING:TYPO_SPELLING: 'guarenteed' may be misspelled - perhaps 'guaranteed'?
#1935: FILE: arch/frv/include/asm/dma-mapping.h:34:
+ * After this call, reads by the cpu to the buffer are guarenteed to see
                                                        ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1942: FILE: arch/frv/include/asm/dma-mapping.h:41:
+	BUG_ON(direction == DMA_NONE);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1961: FILE: arch/frv/include/asm/dma-mapping.h:60:
+extern int dma_map_sg(struct device *dev, struct scatterlist *sg, int nents,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1971: FILE: arch/frv/include/asm/dma-mapping.h:70:
+void dma_unmap_sg(struct device *dev, struct scatterlist *sg, int nhwentries,
+	     enum dma_data_direction direction)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1973: FILE: arch/frv/include/asm/dma-mapping.h:72:
+	BUG_ON(direction == DMA_NONE);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1984: FILE: arch/frv/include/asm/dma-mapping.h:83:
+	BUG_ON(direction == DMA_NONE);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1987: FILE: arch/frv/include/asm/dma-mapping.h:86:
+
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#2038: FILE: arch/frv/include/asm/dma-mapping.h:137:
+        /*$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#2039: FILE: arch/frv/include/asm/dma-mapping.h:138:
+         * we fall back to GFP_DMA when the mask isn't all 1s,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2040: FILE: arch/frv/include/asm/dma-mapping.h:139:
+         * so we can't guarantee allocations that must be$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2041: FILE: arch/frv/include/asm/dma-mapping.h:140:
+         * within a tighter range than GFP_DMA..$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2042: FILE: arch/frv/include/asm/dma-mapping.h:141:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2043: FILE: arch/frv/include/asm/dma-mapping.h:142:
+        if (mask < 0x00ffffff)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2043: FILE: arch/frv/include/asm/dma-mapping.h:142:
+        if (mask < 0x00ffffff)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2044: FILE: arch/frv/include/asm/dma-mapping.h:143:
+                return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2044: FILE: arch/frv/include/asm/dma-mapping.h:143:
+                return 0;$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2082: FILE: arch/frv/include/asm/dma.h:1:
+/* dma.h: FRV DMA controller management

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2110: FILE: arch/frv/include/asm/dma.h:29:
+extern void frv_dma_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2112: FILE: arch/frv/include/asm/dma.h:31:
+extern int frv_dma_open(const char *devname,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2127: FILE: arch/frv/include/asm/dma.h:46:
+extern void frv_dma_close(int dma);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2129: FILE: arch/frv/include/asm/dma.h:48:
+extern void frv_dma_config(int dma, unsigned long ccfr, unsigned long cctr, unsigned long apr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2131: FILE: arch/frv/include/asm/dma.h:50:
+extern void frv_dma_start(int dma,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2135: FILE: arch/frv/include/asm/dma.h:54:
+extern void frv_dma_restart_circular(int dma, unsigned long six);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2137: FILE: arch/frv/include/asm/dma.h:56:
+extern void frv_dma_stop(int dma);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2139: FILE: arch/frv/include/asm/dma.h:58:
+extern int is_frv_dma_interrupting(int dma);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2141: FILE: arch/frv/include/asm/dma.h:60:
+extern void frv_dma_dump(int dma);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2143: FILE: arch/frv/include/asm/dma.h:62:
+extern void frv_dma_status_clear(int dma);

CHECK:CAMELCASE: Avoid CamelCase: <DMAC_CCFRx>
#2149: FILE: arch/frv/include/asm/dma.h:68:
+#define DMAC_CCFRx		0x00	/* channel configuration reg */

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <DMAC_CCFRx_CM_SHIFT>
#2150: FILE: arch/frv/include/asm/dma.h:69:
+#define DMAC_CCFRx_CM_SHIFT	16

CHECK:CAMELCASE: Avoid CamelCase: <DMAC_CCFRx_CM_DA>
#2151: FILE: arch/frv/include/asm/dma.h:70:
+#define DMAC_CCFRx_CM_DA	0x00000000

CHECK:CAMELCASE: Avoid CamelCase: <DMAC_CCFRx_CM_SCA>
#2152: FILE: arch/frv/include/asm/dma.h:71:
+#define DMAC_CCFRx_CM_SCA	0x00010000

CHECK:CAMELCASE: Avoid CamelCase: <DMAC_CCFRx_CM_DCA>
#2153: FILE: arch/frv/include/asm/dma.h:72:
+#define DMAC_CCFRx_CM_DCA	0x00020000

CHECK:CAMELCASE: Avoid CamelCase: <DMAC_CCFRx_CM_2D>
#2154: FILE: arch/frv/include/asm/dma.h:73:
+#define DMAC_CCFRx_CM_2D	0x00030000

CHECK:CAMELCASE: Avoid CamelCase: <DMAC_CCFRx_ATS_SHIFT>
#2155: FILE: arch/frv/include/asm/dma.h:74:
+#define DMAC_CCFRx_ATS_SHIFT	8

CHECK:CAMELCASE: Avoid CamelCase: <DMAC_CCFRx_RS_INTERN>
#2156: FILE: arch/frv/include/asm/dma.h:75:
+#define DMAC_CCFRx_RS_INTERN	0x00000000

CHECK:CAMELCASE: Avoid CamelCase: <DMAC_CCFRx_RS_EXTERN>
#2157: FILE: arch/frv/include/asm/dma.h:76:
+#define DMAC_CCFRx_RS_EXTERN	0x00000001

CHECK:CAMELCASE: Avoid CamelCase: <DMAC_CCFRx_RS_SHIFT>
#2158: FILE: arch/frv/include/asm/dma.h:77:
+#define DMAC_CCFRx_RS_SHIFT	0

CHECK:CAMELCASE: Avoid CamelCase: <DMAC_CSTRx>
#2160: FILE: arch/frv/include/asm/dma.h:79:
+#define DMAC_CSTRx		0x08	/* channel status reg */

CHECK:CAMELCASE: Avoid CamelCase: <DMAC_CSTRx_FS>
#2161: FILE: arch/frv/include/asm/dma.h:80:
+#define DMAC_CSTRx_FS		0x0000003f

CHECK:CAMELCASE: Avoid CamelCase: <DMAC_CSTRx_NE>
#2162: FILE: arch/frv/include/asm/dma.h:81:
+#define DMAC_CSTRx_NE		0x00000100

CHECK:CAMELCASE: Avoid CamelCase: <DMAC_CSTRx_FED>
#2163: FILE: arch/frv/include/asm/dma.h:82:
+#define DMAC_CSTRx_FED		0x00000200

CHECK:CAMELCASE: Avoid CamelCase: <DMAC_CSTRx_WER>
#2164: FILE: arch/frv/include/asm/dma.h:83:
+#define DMAC_CSTRx_WER		0x00000800

CHECK:CAMELCASE: Avoid CamelCase: <DMAC_CSTRx_RER>
#2165: FILE: arch/frv/include/asm/dma.h:84:
+#define DMAC_CSTRx_RER		0x00001000

CHECK:CAMELCASE: Avoid CamelCase: <DMAC_CSTRx_CE>
#2166: FILE: arch/frv/include/asm/dma.h:85:
+#define DMAC_CSTRx_CE		0x00002000

CHECK:CAMELCASE: Avoid CamelCase: <DMAC_CSTRx_INT>
#2167: FILE: arch/frv/include/asm/dma.h:86:
+#define DMAC_CSTRx_INT		0x00800000

CHECK:CAMELCASE: Avoid CamelCase: <DMAC_CSTRx_BUSY>
#2168: FILE: arch/frv/include/asm/dma.h:87:
+#define DMAC_CSTRx_BUSY		0x80000000

CHECK:CAMELCASE: Avoid CamelCase: <DMAC_CCTRx>
#2170: FILE: arch/frv/include/asm/dma.h:89:
+#define DMAC_CCTRx		0x10	/* channel control reg */

CHECK:CAMELCASE: Avoid CamelCase: <DMAC_CCTRx_DSIZ_1>
#2171: FILE: arch/frv/include/asm/dma.h:90:
+#define DMAC_CCTRx_DSIZ_1	0x00000000

CHECK:CAMELCASE: Avoid CamelCase: <DMAC_CCTRx_DSIZ_2>
#2172: FILE: arch/frv/include/asm/dma.h:91:
+#define DMAC_CCTRx_DSIZ_2	0x00000001

CHECK:CAMELCASE: Avoid CamelCase: <DMAC_CCTRx_DSIZ_4>
#2173: FILE: arch/frv/include/asm/dma.h:92:
+#define DMAC_CCTRx_DSIZ_4	0x00000002

CHECK:CAMELCASE: Avoid CamelCase: <DMAC_CCTRx_DSIZ_32>
#2174: FILE: arch/frv/include/asm/dma.h:93:
+#define DMAC_CCTRx_DSIZ_32	0x00000005

CHECK:CAMELCASE: Avoid CamelCase: <DMAC_CCTRx_DAU_HOLD>
#2175: FILE: arch/frv/include/asm/dma.h:94:
+#define DMAC_CCTRx_DAU_HOLD	0x00000000

CHECK:CAMELCASE: Avoid CamelCase: <DMAC_CCTRx_DAU_INC>
#2176: FILE: arch/frv/include/asm/dma.h:95:
+#define DMAC_CCTRx_DAU_INC	0x00000010

CHECK:CAMELCASE: Avoid CamelCase: <DMAC_CCTRx_DAU_DEC>
#2177: FILE: arch/frv/include/asm/dma.h:96:
+#define DMAC_CCTRx_DAU_DEC	0x00000020

CHECK:CAMELCASE: Avoid CamelCase: <DMAC_CCTRx_SSIZ_1>
#2178: FILE: arch/frv/include/asm/dma.h:97:
+#define DMAC_CCTRx_SSIZ_1	0x00000000

CHECK:CAMELCASE: Avoid CamelCase: <DMAC_CCTRx_SSIZ_2>
#2179: FILE: arch/frv/include/asm/dma.h:98:
+#define DMAC_CCTRx_SSIZ_2	0x00000100

CHECK:CAMELCASE: Avoid CamelCase: <DMAC_CCTRx_SSIZ_4>
#2180: FILE: arch/frv/include/asm/dma.h:99:
+#define DMAC_CCTRx_SSIZ_4	0x00000200

CHECK:CAMELCASE: Avoid CamelCase: <DMAC_CCTRx_SSIZ_32>
#2181: FILE: arch/frv/include/asm/dma.h:100:
+#define DMAC_CCTRx_SSIZ_32	0x00000500

CHECK:CAMELCASE: Avoid CamelCase: <DMAC_CCTRx_SAU_HOLD>
#2182: FILE: arch/frv/include/asm/dma.h:101:
+#define DMAC_CCTRx_SAU_HOLD	0x00000000

CHECK:CAMELCASE: Avoid CamelCase: <DMAC_CCTRx_SAU_INC>
#2183: FILE: arch/frv/include/asm/dma.h:102:
+#define DMAC_CCTRx_SAU_INC	0x00001000

CHECK:CAMELCASE: Avoid CamelCase: <DMAC_CCTRx_SAU_DEC>
#2184: FILE: arch/frv/include/asm/dma.h:103:
+#define DMAC_CCTRx_SAU_DEC	0x00002000

CHECK:CAMELCASE: Avoid CamelCase: <DMAC_CCTRx_FC>
#2185: FILE: arch/frv/include/asm/dma.h:104:
+#define DMAC_CCTRx_FC		0x08000000

CHECK:CAMELCASE: Avoid CamelCase: <DMAC_CCTRx_ICE>
#2186: FILE: arch/frv/include/asm/dma.h:105:
+#define DMAC_CCTRx_ICE		0x10000000

CHECK:CAMELCASE: Avoid CamelCase: <DMAC_CCTRx_IE>
#2187: FILE: arch/frv/include/asm/dma.h:106:
+#define DMAC_CCTRx_IE		0x40000000

CHECK:CAMELCASE: Avoid CamelCase: <DMAC_CCTRx_ACT>
#2188: FILE: arch/frv/include/asm/dma.h:107:
+#define DMAC_CCTRx_ACT		0x80000000

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2203: FILE: arch/frv/include/asm/dma.h:122:
+#define isa_dma_bridge_buggy ^I(0)$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2213: FILE: arch/frv/include/asm/elf.h:1:
+/* elf.h: FR-V ELF definitions

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/user.h> instead of <asm/user.h>
#2228: FILE: arch/frv/include/asm/elf.h:16:
+#include <asm/user.h>

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2270: FILE: arch/frv/include/asm/elf.h:58:
+
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2274: FILE: arch/frv/include/asm/elf.h:62:
+typedef unsigned long elf_greg_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2277: FILE: arch/frv/include/asm/elf.h:65:
+typedef elf_greg_t elf_gregset_t[ELF_NGREG];

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2279: FILE: arch/frv/include/asm/elf.h:67:
+typedef struct user_fpmedia_regs elf_fpregset_t;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2284: FILE: arch/frv/include/asm/elf.h:72:
+extern int elf_check_arch(const struct elf32_hdr *hdr);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#2286: FILE: arch/frv/include/asm/elf.h:74:
+#define elf_check_fdpic(x) ((x)->e_flags & EF_FRV_FDPIC && !((x)->e_flags & EF_FRV_NON_PIC_RELOCS))

ERROR:SPACING: space required before the open parenthesis '('
#2311: FILE: arch/frv/include/asm/elf.h:99:
+} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#2328: FILE: arch/frv/include/asm/elf.h:116:
+} while(0)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2335: FILE: arch/frv/include/asm/elf.h:123:
+/* This is the location that an ET_DYN program is loaded if exec'ed.  Typical
+   use of this is to invoke "./ld.so someprog" to test out a new version of

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2337: FILE: arch/frv/include/asm/elf.h:125:
+   that it will "exec", and that there is sufficient room for the brk.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2342: FILE: arch/frv/include/asm/elf.h:130:
+/* This yields a mask that user programs can use to figure out what
+   instruction set this cpu supports.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2342: FILE: arch/frv/include/asm/elf.h:130:
+   instruction set this cpu supports.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2347: FILE: arch/frv/include/asm/elf.h:135:
+/* This yields a string that ld.so will use to load implementation
+   specific libraries for optimization.  This is more specific in

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2348: FILE: arch/frv/include/asm/elf.h:136:
+   intent than poking at uname or /proc/cpuinfo.  */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2361: FILE: arch/frv/include/asm/emergency-restart.h:1:
+#ifndef _ASM_EMERGENCY_RESTART_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2373: FILE: arch/frv/include/asm/errno.h:1:
+#ifndef _ASM_ERRNO_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2386: FILE: arch/frv/include/asm/fb.h:1:
+#ifndef _ASM_FB_H_

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2404: FILE: arch/frv/include/asm/fcntl.h:1:
+#include <asm-generic/fcntl.h>

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2411: FILE: arch/frv/include/asm/fpu.h:1:
+#ifndef __ASM_FPU_H

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2414: FILE: arch/frv/include/asm/fpu.h:4:
+
+

ERROR:SPACING: space required before the open parenthesis '('
#2419: FILE: arch/frv/include/asm/fpu.h:9:
+#define kernel_fpu_end() do { asm volatile("bar":::"memory"); preempt_enable(); } while(0)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2428: FILE: arch/frv/include/asm/ftrace.h:1:
+/* empty */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2435: FILE: arch/frv/include/asm/futex.h:1:
+#ifndef _ASM_FUTEX_H

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/uaccess.h> instead of <asm/uaccess.h>
#2442: FILE: arch/frv/include/asm/futex.h:8:
+#include <asm/uaccess.h>

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2444: FILE: arch/frv/include/asm/futex.h:10:
+extern int futex_atomic_op_inuser(int encoded_op, int __user *uaddr);

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#2449: FILE: arch/frv/include/asm/futex.h:15:
+	return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2460: FILE: arch/frv/include/asm/gdb-stub.h:1:
+/* gdb-stub.h: FRV GDB stub

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2510: FILE: arch/frv/include/asm/gdb-stub.h:51:
+#define GDB_REG_FR(N)	(64+(N))
                      	   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2517: FILE: arch/frv/include/asm/gdb-stub.h:58:
+#define GDB_REG_DBAR(N)	(137+(N))
                        	    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2518: FILE: arch/frv/include/asm/gdb-stub.h:59:
+#define GDB_REG_SCR(N)	(141+(N))
                       	    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2522: FILE: arch/frv/include/asm/gdb-stub.h:63:
+#define GDB_REG_ACC(N)	(150+(N))
                       	    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2523: FILE: arch/frv/include/asm/gdb-stub.h:64:
+#define GDB_REG_ACCG(N)	(158+(N)/4)
                        	    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#2523: FILE: arch/frv/include/asm/gdb-stub.h:64:
+#define GDB_REG_ACCG(N)	(158+(N)/4)
                        	        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2524: FILE: arch/frv/include/asm/gdb-stub.h:65:
+#define GDB_REG_MSR(N)	(160+(N))
                       	    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2525: FILE: arch/frv/include/asm/gdb-stub.h:66:
+#define GDB_REG_GNER(N)	(162+(N))
                        	    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2526: FILE: arch/frv/include/asm/gdb-stub.h:67:
+#define GDB_REG_FNER(N)	(164+(N))
                        	    ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2536: FILE: arch/frv/include/asm/gdb-stub.h:77:
+extern void show_registers_only(struct pt_regs *regs);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2538: FILE: arch/frv/include/asm/gdb-stub.h:79:
+extern void gdbstub_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2539: FILE: arch/frv/include/asm/gdb-stub.h:80:
+extern void gdbstub(int type);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2540: FILE: arch/frv/include/asm/gdb-stub.h:81:
+extern void gdbstub_exit(int status);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2542: FILE: arch/frv/include/asm/gdb-stub.h:83:
+extern void gdbstub_io_init(void);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2543: FILE: arch/frv/include/asm/gdb-stub.h:84:
+extern void gdbstub_set_baud(unsigned baud);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2543: FILE: arch/frv/include/asm/gdb-stub.h:84:
+extern void gdbstub_set_baud(unsigned baud);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2544: FILE: arch/frv/include/asm/gdb-stub.h:85:
+extern int gdbstub_rx_char(unsigned char *_ch, int nonblock);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2545: FILE: arch/frv/include/asm/gdb-stub.h:86:
+extern void gdbstub_tx_char(unsigned char ch);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2546: FILE: arch/frv/include/asm/gdb-stub.h:87:
+extern void gdbstub_tx_flush(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2547: FILE: arch/frv/include/asm/gdb-stub.h:88:
+extern void gdbstub_do_rx(void);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2558: FILE: arch/frv/include/asm/gdb-stub.h:99:
+extern uint32_t __entry_usertrap_table[];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#2559: FILE: arch/frv/include/asm/gdb-stub.h:100:
+extern uint32_t __entry_kerneltrap_table[];

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#2561: FILE: arch/frv/include/asm/gdb-stub.h:102:
+extern volatile u8	gdbstub_rx_buffer[PAGE_SIZE];

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#2562: FILE: arch/frv/include/asm/gdb-stub.h:103:
+extern volatile u32	gdbstub_rx_inp;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#2563: FILE: arch/frv/include/asm/gdb-stub.h:104:
+extern volatile u32	gdbstub_rx_outp;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#2564: FILE: arch/frv/include/asm/gdb-stub.h:105:
+extern volatile u8	gdbstub_rx_overflow;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2567: FILE: arch/frv/include/asm/gdb-stub.h:108:
+extern void gdbstub_printk(const char *fmt, ...);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2568: FILE: arch/frv/include/asm/gdb-stub.h:109:
+extern void debug_to_serial(const char *p, int n);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#2569: FILE: arch/frv/include/asm/gdb-stub.h:110:
+extern void console_set_baud(unsigned baud);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2569: FILE: arch/frv/include/asm/gdb-stub.h:110:
+extern void console_set_baud(unsigned baud);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2572: FILE: arch/frv/include/asm/gdb-stub.h:113:
+#define gdbstub_proto(FMT,...) gdbstub_printk(FMT,##__VA_ARGS__)
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2572: FILE: arch/frv/include/asm/gdb-stub.h:113:
+#define gdbstub_proto(FMT,...) gdbstub_printk(FMT,##__VA_ARGS__)
                                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2574: FILE: arch/frv/include/asm/gdb-stub.h:115:
+#define gdbstub_proto(FMT,...) ({ 0; })
                          ^

CHECK:SPACING: No space is necessary after a cast
#2587: FILE: arch/frv/include/asm/gdb-stub.h:128:
+#define __debug_reg(X)		((unsigned long *) ((unsigned long) &__debug_frame0 + (X)))

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2606: FILE: arch/frv/include/asm/gpio-regs.h:1:
+/* gpio-regs.h: on-chip general purpose I/O registers

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#2620: FILE: arch/frv/include/asm/gpio-regs.h:15:
+#define __reg(ADDR) (*(volatile unsigned long *)(ADDR))

ERROR:SPACING: space required before the open parenthesis '('
#2623: FILE: arch/frv/include/asm/gpio-regs.h:18:
+#define __set_PDR(V)	do { __reg(0xfeff0400) = (V); mb(); } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#2623: FILE: arch/frv/include/asm/gpio-regs.h:18:
+#define __set_PDR(V)	do { __reg(0xfeff0400) = (V); mb(); } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#2626: FILE: arch/frv/include/asm/gpio-regs.h:21:
+#define __set_GPDR(V)	do { __reg(0xfeff0408) = (V); mb(); } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#2626: FILE: arch/frv/include/asm/gpio-regs.h:21:
+#define __set_GPDR(V)	do { __reg(0xfeff0408) = (V); mb(); } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#2629: FILE: arch/frv/include/asm/gpio-regs.h:24:
+#define __set_SIR(V)	do { __reg(0xfeff0410) = (V); mb(); } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#2629: FILE: arch/frv/include/asm/gpio-regs.h:24:
+#define __set_SIR(V)	do { __reg(0xfeff0410) = (V); mb(); } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#2632: FILE: arch/frv/include/asm/gpio-regs.h:27:
+#define __set_SOR(V)	do { __reg(0xfeff0418) = (V); mb(); } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#2632: FILE: arch/frv/include/asm/gpio-regs.h:27:
+#define __set_SOR(V)	do { __reg(0xfeff0418) = (V); mb(); } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#2634: FILE: arch/frv/include/asm/gpio-regs.h:29:
+#define __set_PDSR(V)	do { __reg(0xfeff0420) = (V); mb(); } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#2634: FILE: arch/frv/include/asm/gpio-regs.h:29:
+#define __set_PDSR(V)	do { __reg(0xfeff0420) = (V); mb(); } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#2636: FILE: arch/frv/include/asm/gpio-regs.h:31:
+#define __set_PDCR(V)	do { __reg(0xfeff0428) = (V); mb(); } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#2636: FILE: arch/frv/include/asm/gpio-regs.h:31:
+#define __set_PDCR(V)	do { __reg(0xfeff0428) = (V); mb(); } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#2639: FILE: arch/frv/include/asm/gpio-regs.h:34:
+#define __set_RSTR(V)	do { __reg(0xfeff0500) = (V); mb(); } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#2639: FILE: arch/frv/include/asm/gpio-regs.h:34:
+#define __set_RSTR(V)	do { __reg(0xfeff0500) = (V); mb(); } while(0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2641: FILE: arch/frv/include/asm/gpio-regs.h:36:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2663: FILE: arch/frv/include/asm/gpio-regs.h:58:
+#define GPDR_GPIO_DIR(X,D)	((D) << (X))
                        ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2728: FILE: arch/frv/include/asm/hardirq.h:1:
+/* hardirq.h: FRV hardware IRQ management

WARNING:NEW_TYPEDEFS: do not add new typedefs
#2745: FILE: arch/frv/include/asm/hardirq.h:18:
+typedef struct {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2769: FILE: arch/frv/include/asm/highmem.h:1:
+/* highmem.h: virtual kernel memory mappings for high memory

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#2800: FILE: arch/frv/include/asm/highmem.h:32:
+#include <asm/pgtable.h>

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'virt' may be better as '(virt)' to avoid precedence issues
#2824: FILE: arch/frv/include/asm/highmem.h:56:
+#define PKMAP_NR(virt)	((virt - PKMAP_BASE) >> PAGE_SHIFT)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2827: FILE: arch/frv/include/asm/highmem.h:59:
+extern void *kmap_high(struct page *page);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2828: FILE: arch/frv/include/asm/highmem.h:60:
+extern void kunmap_high(struct page *page);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2830: FILE: arch/frv/include/asm/highmem.h:62:
+extern void *kmap(struct page *page);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2831: FILE: arch/frv/include/asm/highmem.h:63:
+extern void kunmap(struct page *page);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2833: FILE: arch/frv/include/asm/highmem.h:65:
+extern struct page *kmap_atomic_to_page(void *ptr);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'paddr' may be better as '(paddr)' to avoid precedence issues
#2847: FILE: arch/frv/include/asm/highmem.h:79:
+#define __kmap_atomic_primary(type, paddr, ampr)						\
+({												\
+	unsigned long damlr, dampr;								\
+												\
+	dampr = paddr | xAMPRx_L | xAMPRx_M | xAMPRx_S | xAMPRx_SS_16Kb | xAMPRx_V;		\
+												\
+	if (type != __KM_CACHE)									\
+		asm volatile("movgs %0,dampr"#ampr :: "r"(dampr) : "memory");			\
+	else											\
+		asm volatile("movgs %0,iampr"#ampr"\n"						\
+			     "movgs %0,dampr"#ampr"\n"						\
+			     :: "r"(dampr) : "memory"						\
+			     );									\
+												\
+	asm("movsg damlr"#ampr",%0" : "=r"(damlr));						\
+												\
+	/*printk("DAMR"#ampr": PRIM sl=%d L=%08lx P=%08lx\n", type, damlr, dampr);*/		\
+												\
+	(void *) damlr;										\
+})

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_L>
#2851: FILE: arch/frv/include/asm/highmem.h:83:
+	dampr = paddr | xAMPRx_L | xAMPRx_M | xAMPRx_S | xAMPRx_SS_16Kb | xAMPRx_V;		\

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_M>
#2851: FILE: arch/frv/include/asm/highmem.h:83:
+	dampr = paddr | xAMPRx_L | xAMPRx_M | xAMPRx_S | xAMPRx_SS_16Kb | xAMPRx_V;		\

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_S>
#2851: FILE: arch/frv/include/asm/highmem.h:83:
+	dampr = paddr | xAMPRx_L | xAMPRx_M | xAMPRx_S | xAMPRx_SS_16Kb | xAMPRx_V;		\

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_SS_16Kb>
#2851: FILE: arch/frv/include/asm/highmem.h:83:
+	dampr = paddr | xAMPRx_L | xAMPRx_M | xAMPRx_S | xAMPRx_SS_16Kb | xAMPRx_V;		\

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_V>
#2851: FILE: arch/frv/include/asm/highmem.h:83:
+	dampr = paddr | xAMPRx_L | xAMPRx_M | xAMPRx_S | xAMPRx_SS_16Kb | xAMPRx_V;		\

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#2856: FILE: arch/frv/include/asm/highmem.h:88:
+		asm volatile("movgs %0,iampr"#ampr"\n"						\

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#2857: FILE: arch/frv/include/asm/highmem.h:89:
+			     "movgs %0,dampr"#ampr"\n"						\

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#2861: FILE: arch/frv/include/asm/highmem.h:93:
+	asm("movsg damlr"#ampr",%0" : "=r"(damlr));						\

CHECK:SPACING: No space is necessary after a cast
#2865: FILE: arch/frv/include/asm/highmem.h:97:
+	(void *) damlr;										\

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'paddr' may be better as '(paddr)' to avoid precedence issues
#2868: FILE: arch/frv/include/asm/highmem.h:100:
+#define __kmap_atomic_secondary(slot, paddr)							  \
+({												  \
+	unsigned long damlr = KMAP_ATOMIC_SECONDARY_FRAME + (slot) * PAGE_SIZE;			  \
+	unsigned long dampr = paddr | xAMPRx_L | xAMPRx_M | xAMPRx_S | xAMPRx_SS_16Kb | xAMPRx_V; \
+												  \
+	asm volatile("movgs %0,tplr \n"								  \
+		     "movgs %1,tppr \n"								  \
+		     "tlbpr %0,gr0,#2,#1"							  \
+		     : : "r"(damlr), "r"(dampr) : "memory");					  \
+												  \
+	/*printk("TLB: SECN sl=%d L=%08lx P=%08lx\n", slot, damlr, dampr);*/			  \
+												  \
+	(void *) damlr;										  \
+})

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#2873: FILE: arch/frv/include/asm/highmem.h:105:
+	asm volatile("movgs %0,tplr \n"								  \

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#2874: FILE: arch/frv/include/asm/highmem.h:106:
+		     "movgs %1,tppr \n"								  \

CHECK:SPACING: No space is necessary after a cast
#2880: FILE: arch/frv/include/asm/highmem.h:112:
+	(void *) damlr;										  \

ERROR:CODE_INDENT: code indent should use tabs where possible
#2892: FILE: arch/frv/include/asm/highmem.h:124:
+        case 0:^I^Ireturn __kmap_atomic_primary(0, paddr, 2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2892: FILE: arch/frv/include/asm/highmem.h:124:
+        case 0:^I^Ireturn __kmap_atomic_primary(0, paddr, 2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2893: FILE: arch/frv/include/asm/highmem.h:125:
+        case 1:^I^Ireturn __kmap_atomic_primary(1, paddr, 3);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2893: FILE: arch/frv/include/asm/highmem.h:125:
+        case 1:^I^Ireturn __kmap_atomic_primary(1, paddr, 3);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2894: FILE: arch/frv/include/asm/highmem.h:126:
+        case 2:^I^Ireturn __kmap_atomic_primary(2, paddr, 4);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2894: FILE: arch/frv/include/asm/highmem.h:126:
+        case 2:^I^Ireturn __kmap_atomic_primary(2, paddr, 4);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2895: FILE: arch/frv/include/asm/highmem.h:127:
+        case 3:^I^Ireturn __kmap_atomic_primary(3, paddr, 5);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2895: FILE: arch/frv/include/asm/highmem.h:127:
+        case 3:^I^Ireturn __kmap_atomic_primary(3, paddr, 5);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2896: FILE: arch/frv/include/asm/highmem.h:128:
+        case 4:^I^Ireturn __kmap_atomic_primary(4, paddr, 6);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2896: FILE: arch/frv/include/asm/highmem.h:128:
+        case 4:^I^Ireturn __kmap_atomic_primary(4, paddr, 6);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2897: FILE: arch/frv/include/asm/highmem.h:129:
+        case 5:^I^Ireturn __kmap_atomic_primary(5, paddr, 7);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2897: FILE: arch/frv/include/asm/highmem.h:129:
+        case 5:^I^Ireturn __kmap_atomic_primary(5, paddr, 7);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2898: FILE: arch/frv/include/asm/highmem.h:130:
+        case 6:^I^Ireturn __kmap_atomic_primary(6, paddr, 8);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2898: FILE: arch/frv/include/asm/highmem.h:130:
+        case 6:^I^Ireturn __kmap_atomic_primary(6, paddr, 8);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2899: FILE: arch/frv/include/asm/highmem.h:131:
+        case 7:^I^Ireturn __kmap_atomic_primary(7, paddr, 9);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2899: FILE: arch/frv/include/asm/highmem.h:131:
+        case 7:^I^Ireturn __kmap_atomic_primary(7, paddr, 9);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2900: FILE: arch/frv/include/asm/highmem.h:132:
+        case 8:^I^Ireturn __kmap_atomic_primary(8, paddr, 10);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2900: FILE: arch/frv/include/asm/highmem.h:132:
+        case 8:^I^Ireturn __kmap_atomic_primary(8, paddr, 10);$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2906: FILE: arch/frv/include/asm/highmem.h:138:
+		BUG();

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#2913: FILE: arch/frv/include/asm/highmem.h:145:
+	asm volatile("movgs gr0,dampr"#ampr"\n" ::: "memory");		\

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#2915: FILE: arch/frv/include/asm/highmem.h:147:
+		asm volatile("movgs gr0,iampr"#ampr"\n" ::: "memory");	\

ERROR:SPACING: space required before the open parenthesis '('
#2916: FILE: arch/frv/include/asm/highmem.h:148:
+} while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#2918: FILE: arch/frv/include/asm/highmem.h:150:
+#define __kunmap_atomic_secondary(slot, vaddr)				\
+do {									\
+	asm volatile("tlbpr %0,gr0,#4,#1" : : "r"(vaddr) : "memory");	\
+} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#2921: FILE: arch/frv/include/asm/highmem.h:153:
+} while(0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#2926: FILE: arch/frv/include/asm/highmem.h:158:
+        case 0:^I^I__kunmap_atomic_primary(0, 2);^Ibreak;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2926: FILE: arch/frv/include/asm/highmem.h:158:
+        case 0:^I^I__kunmap_atomic_primary(0, 2);^Ibreak;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2926: FILE: arch/frv/include/asm/highmem.h:158:
+        case 0:		__kunmap_atomic_primary(0, 2);	break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#2927: FILE: arch/frv/include/asm/highmem.h:159:
+        case 1:^I^I__kunmap_atomic_primary(1, 3);^Ibreak;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2927: FILE: arch/frv/include/asm/highmem.h:159:
+        case 1:^I^I__kunmap_atomic_primary(1, 3);^Ibreak;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2927: FILE: arch/frv/include/asm/highmem.h:159:
+        case 1:		__kunmap_atomic_primary(1, 3);	break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#2928: FILE: arch/frv/include/asm/highmem.h:160:
+        case 2:^I^I__kunmap_atomic_primary(2, 4);^Ibreak;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2928: FILE: arch/frv/include/asm/highmem.h:160:
+        case 2:^I^I__kunmap_atomic_primary(2, 4);^Ibreak;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2928: FILE: arch/frv/include/asm/highmem.h:160:
+        case 2:		__kunmap_atomic_primary(2, 4);	break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#2929: FILE: arch/frv/include/asm/highmem.h:161:
+        case 3:^I^I__kunmap_atomic_primary(3, 5);^Ibreak;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2929: FILE: arch/frv/include/asm/highmem.h:161:
+        case 3:^I^I__kunmap_atomic_primary(3, 5);^Ibreak;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2929: FILE: arch/frv/include/asm/highmem.h:161:
+        case 3:		__kunmap_atomic_primary(3, 5);	break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#2930: FILE: arch/frv/include/asm/highmem.h:162:
+        case 4:^I^I__kunmap_atomic_primary(4, 6);^Ibreak;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2930: FILE: arch/frv/include/asm/highmem.h:162:
+        case 4:^I^I__kunmap_atomic_primary(4, 6);^Ibreak;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2930: FILE: arch/frv/include/asm/highmem.h:162:
+        case 4:		__kunmap_atomic_primary(4, 6);	break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#2931: FILE: arch/frv/include/asm/highmem.h:163:
+        case 5:^I^I__kunmap_atomic_primary(5, 7);^Ibreak;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2931: FILE: arch/frv/include/asm/highmem.h:163:
+        case 5:^I^I__kunmap_atomic_primary(5, 7);^Ibreak;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2931: FILE: arch/frv/include/asm/highmem.h:163:
+        case 5:		__kunmap_atomic_primary(5, 7);	break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#2932: FILE: arch/frv/include/asm/highmem.h:164:
+        case 6:^I^I__kunmap_atomic_primary(6, 8);^Ibreak;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2932: FILE: arch/frv/include/asm/highmem.h:164:
+        case 6:^I^I__kunmap_atomic_primary(6, 8);^Ibreak;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2932: FILE: arch/frv/include/asm/highmem.h:164:
+        case 6:		__kunmap_atomic_primary(6, 8);	break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#2933: FILE: arch/frv/include/asm/highmem.h:165:
+        case 7:^I^I__kunmap_atomic_primary(7, 9);^Ibreak;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2933: FILE: arch/frv/include/asm/highmem.h:165:
+        case 7:^I^I__kunmap_atomic_primary(7, 9);^Ibreak;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2933: FILE: arch/frv/include/asm/highmem.h:165:
+        case 7:		__kunmap_atomic_primary(7, 9);	break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#2934: FILE: arch/frv/include/asm/highmem.h:166:
+        case 8:^I^I__kunmap_atomic_primary(8, 10);^Ibreak;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2934: FILE: arch/frv/include/asm/highmem.h:166:
+        case 8:^I^I__kunmap_atomic_primary(8, 10);^Ibreak;$

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2934: FILE: arch/frv/include/asm/highmem.h:166:
+        case 8:		__kunmap_atomic_primary(8, 10);	break;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2941: FILE: arch/frv/include/asm/highmem.h:173:
+		BUG();

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2957: FILE: arch/frv/include/asm/hw_irq.h:1:
+/* hw_irq.h: FR-V specific h/w IRQ stuff

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2971: FILE: arch/frv/include/asm/hw_irq.h:15:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2979: FILE: arch/frv/include/asm/init.h:1:
+#ifndef _ASM_INIT_H

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2982: FILE: arch/frv/include/asm/init.h:4:
+#define __init __attribute__ ((__section__ (".text.init")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2982: FILE: arch/frv/include/asm/init.h:4:
+#define __init __attribute__ ((__section__ (".text.init")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".text.init") over __attribute__((__section__(".text.init")))
#2982: FILE: arch/frv/include/asm/init.h:4:
+#define __init __attribute__ ((__section__ (".text.init")))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#2983: FILE: arch/frv/include/asm/init.h:5:
+#define __initdata __attribute__ ((__section__ (".data.init")))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2983: FILE: arch/frv/include/asm/init.h:5:
+#define __initdata __attribute__ ((__section__ (".data.init")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".data.init") over __attribute__((__section__(".data.init")))
#2983: FILE: arch/frv/include/asm/init.h:5:
+#define __initdata __attribute__ ((__section__ (".data.init")))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2985: FILE: arch/frv/include/asm/init.h:7:
+#define __INIT		.section	".text.init",#alloc,#execinstr
               		        	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2985: FILE: arch/frv/include/asm/init.h:7:
+#define __INIT		.section	".text.init",#alloc,#execinstr
               		        	                   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2985: FILE: arch/frv/include/asm/init.h:7:
+#define __INIT		.section	".text.init",#alloc,#execinstr

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2986: FILE: arch/frv/include/asm/init.h:8:
+#define __FINIT		.previous

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2987: FILE: arch/frv/include/asm/init.h:9:
+#define __INITDATA	.section	".data.init",#alloc,#write
                   	        	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2987: FILE: arch/frv/include/asm/init.h:9:
+#define __INITDATA	.section	".data.init",#alloc,#write
                   	        	                   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#2987: FILE: arch/frv/include/asm/init.h:9:
+#define __INITDATA	.section	".data.init",#alloc,#write

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2997: FILE: arch/frv/include/asm/io.h:1:
+/* io.h: FRV I/O operations

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/string.h> instead of <asm/string.h>
#3018: FILE: arch/frv/include/asm/io.h:22:
+#include <asm/string.h>

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3028: FILE: arch/frv/include/asm/io.h:32:
+    return ((v << 8) | (v >> 8));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3033: FILE: arch/frv/include/asm/io.h:37:
+    return ((v << 24) | ((v & 0xff00) << 8) | ((v & 0xff0000) >> 8) | (v >> 24));$

CHECK:SPACING: No space is necessary after a cast
#3049: FILE: arch/frv/include/asm/io.h:53:
+	unsigned long __ioaddr = (unsigned long) addr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#3050: FILE: arch/frv/include/asm/io.h:54:
+	const uint8_t *bp = buf;

CHECK:SPACING: No space is necessary after a cast
#3053: FILE: arch/frv/include/asm/io.h:57:
+		__builtin_write8((volatile void __iomem *) __ioaddr, *bp++);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3053: FILE: arch/frv/include/asm/io.h:57:
+		__builtin_write8((volatile void __iomem *) __ioaddr, *bp++);

CHECK:SPACING: No space is necessary after a cast
#3058: FILE: arch/frv/include/asm/io.h:62:
+	unsigned long __ioaddr = (unsigned long) addr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#3059: FILE: arch/frv/include/asm/io.h:63:
+	const uint16_t *bp = buf;

CHECK:SPACING: No space is necessary after a cast
#3062: FILE: arch/frv/include/asm/io.h:66:
+		__builtin_write16((volatile void __iomem *) __ioaddr, (*bp++));

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3062: FILE: arch/frv/include/asm/io.h:66:
+		__builtin_write16((volatile void __iomem *) __ioaddr, (*bp++));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3065: FILE: arch/frv/include/asm/io.h:69:
+extern void __outsl_ns(unsigned int addr, const void *buf, int len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3066: FILE: arch/frv/include/asm/io.h:70:
+extern void __outsl_sw(unsigned int addr, const void *buf, int len);

CHECK:SPACING: No space is necessary after a cast
#3069: FILE: arch/frv/include/asm/io.h:73:
+	unsigned long __ioaddr = (unsigned long) addr;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#3079: FILE: arch/frv/include/asm/io.h:83:
+	uint8_t *bp = buf;

CHECK:SPACING: No space is necessary after a cast
#3082: FILE: arch/frv/include/asm/io.h:86:
+		*bp++ = __builtin_read8((volatile void __iomem *) addr);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3082: FILE: arch/frv/include/asm/io.h:86:
+		*bp++ = __builtin_read8((volatile void __iomem *) addr);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#3087: FILE: arch/frv/include/asm/io.h:91:
+	uint16_t *bp = buf;

CHECK:SPACING: No space is necessary after a cast
#3090: FILE: arch/frv/include/asm/io.h:94:
+		*bp++ = __builtin_read16((volatile void __iomem *) addr);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3090: FILE: arch/frv/include/asm/io.h:94:
+		*bp++ = __builtin_read16((volatile void __iomem *) addr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3093: FILE: arch/frv/include/asm/io.h:97:
+extern void __insl_ns(unsigned long addr, void *buf, int len);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3094: FILE: arch/frv/include/asm/io.h:98:
+extern void __insl_sw(unsigned long addr, void *buf, int len);

WARNING:MEMORY_BARRIER: memory barrier without comment
#3103: FILE: arch/frv/include/asm/io.h:107:
+#define mmiowb() mb()

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3110: FILE: arch/frv/include/asm/io.h:114:
+static inline void memset_io(volatile void __iomem *addr, unsigned char val, int count)

CHECK:SPACING: No space is necessary after a cast
#3112: FILE: arch/frv/include/asm/io.h:116:
+	memset((void __force *) addr, val, count);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3115: FILE: arch/frv/include/asm/io.h:119:
+static inline void memcpy_fromio(void *dst, const volatile void __iomem *src, int count)

CHECK:SPACING: No space is necessary after a cast
#3117: FILE: arch/frv/include/asm/io.h:121:
+	memcpy(dst, (void __force *) src, count);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3120: FILE: arch/frv/include/asm/io.h:124:
+static inline void memcpy_toio(volatile void __iomem *dst, const void *src, int count)

CHECK:SPACING: No space is necessary after a cast
#3122: FILE: arch/frv/include/asm/io.h:126:
+	memcpy((void __force *) dst, src, count);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#3132: FILE: arch/frv/include/asm/io.h:136:
+	uint16_t ret = __builtin_read16((void __iomem *)addr);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3142: FILE: arch/frv/include/asm/io.h:146:
+	uint32_t ret = __builtin_read32((void __iomem *)addr);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#3150: FILE: arch/frv/include/asm/io.h:154:
+static inline void outb(uint8_t datum, unsigned long addr)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#3155: FILE: arch/frv/include/asm/io.h:159:
+static inline void outw(uint16_t datum, unsigned long addr)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3162: FILE: arch/frv/include/asm/io.h:166:
+static inline void outl(uint32_t datum, unsigned long addr)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3172: FILE: arch/frv/include/asm/io.h:176:
+#define outb_p(x,addr)	outb(x,addr)
                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3172: FILE: arch/frv/include/asm/io.h:176:
+#define outb_p(x,addr)	outb(x,addr)
                       	      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3173: FILE: arch/frv/include/asm/io.h:177:
+#define outw_p(x,addr)	outw(x,addr)
                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3173: FILE: arch/frv/include/asm/io.h:177:
+#define outw_p(x,addr)	outw(x,addr)
                       	      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3174: FILE: arch/frv/include/asm/io.h:178:
+#define outl_p(x,addr)	outl(x,addr)
                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3174: FILE: arch/frv/include/asm/io.h:178:
+#define outl_p(x,addr)	outl(x,addr)
                       	      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3176: FILE: arch/frv/include/asm/io.h:180:
+#define outsb(a,b,l)	io_outsb(a,b,l)
                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3176: FILE: arch/frv/include/asm/io.h:180:
+#define outsb(a,b,l)	io_outsb(a,b,l)
                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3176: FILE: arch/frv/include/asm/io.h:180:
+#define outsb(a,b,l)	io_outsb(a,b,l)
                     	          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3176: FILE: arch/frv/include/asm/io.h:180:
+#define outsb(a,b,l)	io_outsb(a,b,l)
                     	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3177: FILE: arch/frv/include/asm/io.h:181:
+#define outsw(a,b,l)	io_outsw(a,b,l)
                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3177: FILE: arch/frv/include/asm/io.h:181:
+#define outsw(a,b,l)	io_outsw(a,b,l)
                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3177: FILE: arch/frv/include/asm/io.h:181:
+#define outsw(a,b,l)	io_outsw(a,b,l)
                     	          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3177: FILE: arch/frv/include/asm/io.h:181:
+#define outsw(a,b,l)	io_outsw(a,b,l)
                     	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3178: FILE: arch/frv/include/asm/io.h:182:
+#define outsl(a,b,l)	__outsl(a,b,l,0)
                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3178: FILE: arch/frv/include/asm/io.h:182:
+#define outsl(a,b,l)	__outsl(a,b,l,0)
                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3178: FILE: arch/frv/include/asm/io.h:182:
+#define outsl(a,b,l)	__outsl(a,b,l,0)
                     	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3178: FILE: arch/frv/include/asm/io.h:182:
+#define outsl(a,b,l)	__outsl(a,b,l,0)
                     	           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3178: FILE: arch/frv/include/asm/io.h:182:
+#define outsl(a,b,l)	__outsl(a,b,l,0)
                     	             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3180: FILE: arch/frv/include/asm/io.h:184:
+#define insb(a,b,l)	io_insb(a,b,l)
               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3180: FILE: arch/frv/include/asm/io.h:184:
+#define insb(a,b,l)	io_insb(a,b,l)
                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3180: FILE: arch/frv/include/asm/io.h:184:
+#define insb(a,b,l)	io_insb(a,b,l)
                    	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3180: FILE: arch/frv/include/asm/io.h:184:
+#define insb(a,b,l)	io_insb(a,b,l)
                    	           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3181: FILE: arch/frv/include/asm/io.h:185:
+#define insw(a,b,l)	io_insw(a,b,l)
               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3181: FILE: arch/frv/include/asm/io.h:185:
+#define insw(a,b,l)	io_insw(a,b,l)
                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3181: FILE: arch/frv/include/asm/io.h:185:
+#define insw(a,b,l)	io_insw(a,b,l)
                    	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3181: FILE: arch/frv/include/asm/io.h:185:
+#define insw(a,b,l)	io_insw(a,b,l)
                    	           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3182: FILE: arch/frv/include/asm/io.h:186:
+#define insl(a,b,l)	__insl(a,b,l,0)
               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3182: FILE: arch/frv/include/asm/io.h:186:
+#define insl(a,b,l)	__insl(a,b,l,0)
                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3182: FILE: arch/frv/include/asm/io.h:186:
+#define insl(a,b,l)	__insl(a,b,l,0)
                    	        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3182: FILE: arch/frv/include/asm/io.h:186:
+#define insl(a,b,l)	__insl(a,b,l,0)
                    	          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3182: FILE: arch/frv/include/asm/io.h:186:
+#define insl(a,b,l)	__insl(a,b,l,0)
                    	            ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3186: FILE: arch/frv/include/asm/io.h:190:
+static inline uint8_t readb(const volatile void __iomem *addr)

CHECK:SPACING: No space is necessary after a cast
#3188: FILE: arch/frv/include/asm/io.h:192:
+	return __builtin_read8((__force void volatile __iomem *) addr);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3188: FILE: arch/frv/include/asm/io.h:192:
+	return __builtin_read8((__force void volatile __iomem *) addr);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3191: FILE: arch/frv/include/asm/io.h:195:
+static inline uint16_t readw(const volatile void __iomem *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3193: FILE: arch/frv/include/asm/io.h:197:
+	uint16_t ret =	__builtin_read16((__force void volatile __iomem *)addr);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#3193: FILE: arch/frv/include/asm/io.h:197:
+	uint16_t ret =	__builtin_read16((__force void volatile __iomem *)addr);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3200: FILE: arch/frv/include/asm/io.h:204:
+static inline uint32_t readl(const volatile void __iomem *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3202: FILE: arch/frv/include/asm/io.h:206:
+	uint32_t ret =	__builtin_read32((__force void volatile __iomem *)addr);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3202: FILE: arch/frv/include/asm/io.h:206:
+	uint32_t ret =	__builtin_read32((__force void volatile __iomem *)addr);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3214: FILE: arch/frv/include/asm/io.h:218:
+static inline void writeb(uint8_t datum, volatile void __iomem *addr)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u8' over 'uint8_t'
#3214: FILE: arch/frv/include/asm/io.h:218:
+static inline void writeb(uint8_t datum, volatile void __iomem *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3221: FILE: arch/frv/include/asm/io.h:225:
+static inline void writew(uint16_t datum, volatile void __iomem *addr)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#3221: FILE: arch/frv/include/asm/io.h:225:
+static inline void writew(uint16_t datum, volatile void __iomem *addr)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3231: FILE: arch/frv/include/asm/io.h:235:
+static inline void writel(uint32_t datum, volatile void __iomem *addr)

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3231: FILE: arch/frv/include/asm/io.h:235:
+static inline void writel(uint32_t datum, volatile void __iomem *addr)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3241: FILE: arch/frv/include/asm/io.h:245:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3248: FILE: arch/frv/include/asm/io.h:252:
+extern void __iomem *__ioremap(unsigned long physaddr, unsigned long size, int cacheflag);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3272: FILE: arch/frv/include/asm/io.h:276:
+extern void iounmap(void volatile __iomem *addr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3272: FILE: arch/frv/include/asm/io.h:276:
+extern void iounmap(void volatile __iomem *addr);

CHECK:SPACING: No space is necessary after a cast
#3276: FILE: arch/frv/include/asm/io.h:280:
+	return (void __iomem *) port;

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#3285: FILE: arch/frv/include/asm/io.h:289:
+	__asm__ __volatile__ ("membar" : : :"memory");
 	                                   ^

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#3298: FILE: arch/frv/include/asm/io.h:302:
+	uint16_t ret = __builtin_read16(p);

WARNING:LINE_SPACING: Missing a blank line after declarations
#3299: FILE: arch/frv/include/asm/io.h:303:
+	uint16_t ret = __builtin_read16(p);
+	if (__is_PCI_addr(p))

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#3306: FILE: arch/frv/include/asm/io.h:310:
+	uint32_t ret = __builtin_read32(p);

WARNING:LINE_SPACING: Missing a blank line after declarations
#3307: FILE: arch/frv/include/asm/io.h:311:
+	uint32_t ret = __builtin_read32(p);
+	if (__is_PCI_addr(p))

CHECK:SPACING: No space is necessary after a cast
#3339: FILE: arch/frv/include/asm/io.h:343:
+	io_insb((unsigned long) p, dst, count);

CHECK:SPACING: No space is necessary after a cast
#3344: FILE: arch/frv/include/asm/io.h:348:
+	io_insw((unsigned long) p, dst, count);

CHECK:SPACING: No space is necessary after a cast
#3349: FILE: arch/frv/include/asm/io.h:353:
+	__insl_ns((unsigned long) p, dst, count);

CHECK:SPACING: No space is necessary after a cast
#3354: FILE: arch/frv/include/asm/io.h:358:
+	io_outsb((unsigned long) p, src, count);

CHECK:SPACING: No space is necessary after a cast
#3359: FILE: arch/frv/include/asm/io.h:363:
+	io_outsw((unsigned long) p, src, count);

CHECK:SPACING: No space is necessary after a cast
#3364: FILE: arch/frv/include/asm/io.h:368:
+	__outsl_ns((unsigned long) p, src, count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#3369: FILE: arch/frv/include/asm/io.h:373:
+extern void __iomem *pci_iomap(struct pci_dev *dev, int bar, unsigned long max);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3374: FILE: arch/frv/include/asm/io.h:378:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3395: FILE: arch/frv/include/asm/ioctl.h:1:
+#include <asm-generic/ioctl.h>

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3402: FILE: arch/frv/include/asm/ioctls.h:1:
+#ifndef __ASM_IOCTLS_H__

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3451: FILE: arch/frv/include/asm/ioctls.h:50:
+#define TCGETS2		_IOR('T',0x2A, struct termios2)
                		        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3452: FILE: arch/frv/include/asm/ioctls.h:51:
+#define TCSETS2		_IOW('T',0x2B, struct termios2)
                		        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3453: FILE: arch/frv/include/asm/ioctls.h:52:
+#define TCSETSW2	_IOW('T',0x2C, struct termios2)
                 	        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3454: FILE: arch/frv/include/asm/ioctls.h:53:
+#define TCSETSF2	_IOW('T',0x2D, struct termios2)
                 	        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3455: FILE: arch/frv/include/asm/ioctls.h:54:
+#define TIOCGPTN	_IOR('T',0x30, unsigned int) /* Get Pty Number (of pty-mux device) */
                 	        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3456: FILE: arch/frv/include/asm/ioctls.h:55:
+#define TIOCSPTLCK	_IOW('T',0x31, int)  /* Lock/unlock Pty */
                   	        ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3494: FILE: arch/frv/include/asm/ipcbuf.h:1:
+#ifndef __ASM_IPCBUF_H__

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#3508: FILE: arch/frv/include/asm/ipcbuf.h:15:
+struct ipc64_perm
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3530: FILE: arch/frv/include/asm/irc-regs.h:1:
+/* irc-regs.h: on-chip interrupt controller registers

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#3544: FILE: arch/frv/include/asm/irc-regs.h:15:
+#define __reg(ADDR) (*(volatile unsigned long *)(ADDR))

ERROR:SPACING: space required before the open parenthesis '('
#3548: FILE: arch/frv/include/asm/irc-regs.h:19:
+#define __set_TM1(V)	do { __reg(0xfeff9808) = (V); mb(); } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#3548: FILE: arch/frv/include/asm/irc-regs.h:19:
+#define __set_TM1(V)	do { __reg(0xfeff9808) = (V); mb(); } while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3550: FILE: arch/frv/include/asm/irc-regs.h:21:
+#define __set_TM1x(XI,V)			\
                      ^

WARNING:MEMORY_BARRIER: memory barrier without comment
#3557: FILE: arch/frv/include/asm/irc-regs.h:28:
+	mb();					\

ERROR:SPACING: space required before the open parenthesis '('
#3558: FILE: arch/frv/include/asm/irc-regs.h:29:
+} while(0)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3560: FILE: arch/frv/include/asm/irc-regs.h:31:
+#define __get_RS(C)	({ (__reg(0xfeff9810) >> ((C)+16)) & 1; })
                    	                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3562: FILE: arch/frv/include/asm/irc-regs.h:33:
+#define __clr_RC(C)	do { __reg(0xfeff9818) = 1 << ((C)+16); mb(); } while(0)
                    	                                  ^

ERROR:SPACING: space required before the open parenthesis '('
#3562: FILE: arch/frv/include/asm/irc-regs.h:33:
+#define __clr_RC(C)	do { __reg(0xfeff9818) = 1 << ((C)+16); mb(); } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#3562: FILE: arch/frv/include/asm/irc-regs.h:33:
+#define __clr_RC(C)	do { __reg(0xfeff9818) = 1 << ((C)+16); mb(); } while(0)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3564: FILE: arch/frv/include/asm/irc-regs.h:35:
+#define __get_MASK(C)	({ (__reg(0xfeff9820) >> ((C)+16)) & 1; })
                      	                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3565: FILE: arch/frv/include/asm/irc-regs.h:36:
+#define __set_MASK(C)	do { __reg(0xfeff9820) |=  1 << ((C)+16); mb(); } while(0)
                      	                                    ^

ERROR:SPACING: space required before the open parenthesis '('
#3565: FILE: arch/frv/include/asm/irc-regs.h:36:
+#define __set_MASK(C)	do { __reg(0xfeff9820) |=  1 << ((C)+16); mb(); } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#3565: FILE: arch/frv/include/asm/irc-regs.h:36:
+#define __set_MASK(C)	do { __reg(0xfeff9820) |=  1 << ((C)+16); mb(); } while(0)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3566: FILE: arch/frv/include/asm/irc-regs.h:37:
+#define __clr_MASK(C)	do { __reg(0xfeff9820) &=  ~(1 << ((C)+16)); mb(); } while(0)
                      	                                      ^

ERROR:SPACING: space required before the open parenthesis '('
#3566: FILE: arch/frv/include/asm/irc-regs.h:37:
+#define __clr_MASK(C)	do { __reg(0xfeff9820) &=  ~(1 << ((C)+16)); mb(); } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#3566: FILE: arch/frv/include/asm/irc-regs.h:37:
+#define __clr_MASK(C)	do { __reg(0xfeff9820) &=  ~(1 << ((C)+16)); mb(); } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#3573: FILE: arch/frv/include/asm/irc-regs.h:44:
+#define __clr_IRL()	do { __reg(0xfeff9828) = 0x100000; mb(); } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#3573: FILE: arch/frv/include/asm/irc-regs.h:44:
+#define __clr_IRL()	do { __reg(0xfeff9828) = 0x100000; mb(); } while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3576: FILE: arch/frv/include/asm/irc-regs.h:47:
+#define __set_IRR(N,V)	do { __reg(0xfeff9840 + (N) * 8) = (V); } while(0)
                    ^

ERROR:SPACING: space required before the open parenthesis '('
#3576: FILE: arch/frv/include/asm/irc-regs.h:47:
+#define __set_IRR(N,V)	do { __reg(0xfeff9840 + (N) * 8) = (V); } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#3576: FILE: arch/frv/include/asm/irc-regs.h:47:
+#define __set_IRR(N,V)	do { __reg(0xfeff9840 + (N) * 8) = (V); } while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3579: FILE: arch/frv/include/asm/irc-regs.h:50:
+#define __set_IITMR(N,V) do { __reg(0xfeff9880 + (N) * 8) = (V); } while(0)
                      ^

ERROR:SPACING: space required before the open parenthesis '('
#3579: FILE: arch/frv/include/asm/irc-regs.h:50:
+#define __set_IITMR(N,V) do { __reg(0xfeff9880 + (N) * 8) = (V); } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#3579: FILE: arch/frv/include/asm/irc-regs.h:50:
+#define __set_IITMR(N,V) do { __reg(0xfeff9880 + (N) * 8) = (V); } while(0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3581: FILE: arch/frv/include/asm/irc-regs.h:52:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3589: FILE: arch/frv/include/asm/irq.h:1:
+/* irq.h: FRV IRQ definitions

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3625: FILE: arch/frv/include/asm/irq_regs.h:1:
+/* FRV per-CPU frame pointer holder

ERROR:DEFINE_ARCH_HAS: #define of 'ARCH_HAS_OWN_IRQ_REGS' is wrong - use Kconfig variables or standard guards instead
#3645: FILE: arch/frv/include/asm/irq_regs.h:21:
+#define ARCH_HAS_OWN_IRQ_REGS

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3658: FILE: arch/frv/include/asm/kdebug.h:1:
+#include <asm-generic/kdebug.h>

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3665: FILE: arch/frv/include/asm/kmap_types.h:1:
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#3677: FILE: arch/frv/include/asm/kmap_types.h:13:
+        KM_BOUNCE_READ,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3677: FILE: arch/frv/include/asm/kmap_types.h:13:
+        KM_BOUNCE_READ,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3678: FILE: arch/frv/include/asm/kmap_types.h:14:
+        KM_SKB_SUNRPC_DATA,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3678: FILE: arch/frv/include/asm/kmap_types.h:14:
+        KM_SKB_SUNRPC_DATA,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3679: FILE: arch/frv/include/asm/kmap_types.h:15:
+        KM_SKB_DATA_SOFTIRQ,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3679: FILE: arch/frv/include/asm/kmap_types.h:15:
+        KM_SKB_DATA_SOFTIRQ,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3680: FILE: arch/frv/include/asm/kmap_types.h:16:
+        KM_USER0,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3680: FILE: arch/frv/include/asm/kmap_types.h:16:
+        KM_USER0,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#3681: FILE: arch/frv/include/asm/kmap_types.h:17:
+        KM_USER1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#3681: FILE: arch/frv/include/asm/kmap_types.h:17:
+        KM_USER1,$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3700: FILE: arch/frv/include/asm/linkage.h:1:
+#ifndef __ASM_LINKAGE_H

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#3703: FILE: arch/frv/include/asm/linkage.h:4:
+#define __ALIGN		.align 4

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3713: FILE: arch/frv/include/asm/local.h:1:
+#ifndef _ASM_LOCAL_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#3725: FILE: arch/frv/include/asm/math-emu.h:1:
+#ifndef _ASM_MATH_EMU_H

CHECK:SPACING: No space is necessary after a cast
#3751: FILE: arch/frv/include/asm/math-emu.h:27:
+#define FPSR_QUOTIENT(fpsr) (*((signed char *) &(fpsr) + 1))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3759: FILE: arch/frv/include/asm/math-emu.h:35:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3773: FILE: arch/frv/include/asm/math-emu.h:49:
+
+

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3784: FILE: arch/frv/include/asm/math-emu.h:60:
+#define PMDECODE	(1<<PDECODE)
                 	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3784: FILE: arch/frv/include/asm/math-emu.h:60:
+#define PMDECODE	(1<<PDECODE)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3785: FILE: arch/frv/include/asm/math-emu.h:61:
+#define PMEXECUTE	(1<<PEXECUTE)
                  	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3785: FILE: arch/frv/include/asm/math-emu.h:61:
+#define PMEXECUTE	(1<<PEXECUTE)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3786: FILE: arch/frv/include/asm/math-emu.h:62:
+#define PMCONV		(1<<PCONV)
               		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3786: FILE: arch/frv/include/asm/math-emu.h:62:
+#define PMCONV		(1<<PCONV)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3787: FILE: arch/frv/include/asm/math-emu.h:63:
+#define PMNORM		(1<<PNORM)
               		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3787: FILE: arch/frv/include/asm/math-emu.h:63:
+#define PMNORM		(1<<PNORM)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3788: FILE: arch/frv/include/asm/math-emu.h:64:
+#define PMREGISTER	(1<<PREGISTER)
                   	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3788: FILE: arch/frv/include/asm/math-emu.h:64:
+#define PMREGISTER	(1<<PREGISTER)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3789: FILE: arch/frv/include/asm/math-emu.h:65:
+#define PMINSTR		(1<<PINSTR)
                		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3789: FILE: arch/frv/include/asm/math-emu.h:65:
+#define PMINSTR		(1<<PINSTR)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3790: FILE: arch/frv/include/asm/math-emu.h:66:
+#define PMUNIMPL	(1<<PUNIMPL)
                 	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3790: FILE: arch/frv/include/asm/math-emu.h:66:
+#define PMUNIMPL	(1<<PUNIMPL)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#3791: FILE: arch/frv/include/asm/math-emu.h:67:
+#define PMMOVEM		(1<<PMOVEM)
                		  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#3791: FILE: arch/frv/include/asm/math-emu.h:67:
+#define PMMOVEM		(1<<PMOVEM)

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#3818: FILE: arch/frv/include/asm/math-emu.h:94:
+/* NOTE: if you change this, you have to change the assembler offsets
+   below and the size in <asm/fpu.h>, too */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#3818: FILE: arch/frv/include/asm/math-emu.h:94:
+   below and the size in <asm/fpu.h>, too */

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3834: FILE: arch/frv/include/asm/math-emu.h:110:
+		printk(fmt, ## args);			\

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3844: FILE: arch/frv/include/asm/math-emu.h:120:
+		printk("You just hit an unimplemented "	\

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#3846: FILE: arch/frv/include/asm/math-emu.h:122:
+		printk("Please report this to ....\n");	\

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#3855: FILE: arch/frv/include/asm/math-emu.h:131:
+#define FPDATA		%a2
               		^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#3855: FILE: arch/frv/include/asm/math-emu.h:131:
+#define FPDATA		%a2

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3858: FILE: arch/frv/include/asm/math-emu.h:134:
+#define FPD_FPREG	(TASK_THREAD+THREAD_FPREG+0)
                  	            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3858: FILE: arch/frv/include/asm/math-emu.h:134:
+#define FPD_FPREG	(TASK_THREAD+THREAD_FPREG+0)
                  	                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3859: FILE: arch/frv/include/asm/math-emu.h:135:
+#define FPD_FPCR	(TASK_THREAD+THREAD_FPREG+96)
                 	            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3859: FILE: arch/frv/include/asm/math-emu.h:135:
+#define FPD_FPCR	(TASK_THREAD+THREAD_FPREG+96)
                 	                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3860: FILE: arch/frv/include/asm/math-emu.h:136:
+#define FPD_FPSR	(TASK_THREAD+THREAD_FPREG+100)
                 	            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3860: FILE: arch/frv/include/asm/math-emu.h:136:
+#define FPD_FPSR	(TASK_THREAD+THREAD_FPREG+100)
                 	                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3861: FILE: arch/frv/include/asm/math-emu.h:137:
+#define FPD_FPIAR	(TASK_THREAD+THREAD_FPREG+104)
                  	            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3861: FILE: arch/frv/include/asm/math-emu.h:137:
+#define FPD_FPIAR	(TASK_THREAD+THREAD_FPREG+104)
                  	                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3862: FILE: arch/frv/include/asm/math-emu.h:138:
+#define FPD_PREC	(TASK_THREAD+THREAD_FPREG+108)
                 	            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3862: FILE: arch/frv/include/asm/math-emu.h:138:
+#define FPD_PREC	(TASK_THREAD+THREAD_FPREG+108)
                 	                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3863: FILE: arch/frv/include/asm/math-emu.h:139:
+#define FPD_RND		(TASK_THREAD+THREAD_FPREG+110)
                		            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3863: FILE: arch/frv/include/asm/math-emu.h:139:
+#define FPD_RND		(TASK_THREAD+THREAD_FPREG+110)
                		                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3864: FILE: arch/frv/include/asm/math-emu.h:140:
+#define FPD_TEMPFP1	(TASK_THREAD+THREAD_FPREG+112)
                    	            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3864: FILE: arch/frv/include/asm/math-emu.h:140:
+#define FPD_TEMPFP1	(TASK_THREAD+THREAD_FPREG+112)
                    	                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3865: FILE: arch/frv/include/asm/math-emu.h:141:
+#define FPD_TEMPFP2	(TASK_THREAD+THREAD_FPREG+124)
                    	            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3865: FILE: arch/frv/include/asm/math-emu.h:141:
+#define FPD_TEMPFP2	(TASK_THREAD+THREAD_FPREG+124)
                    	                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3866: FILE: arch/frv/include/asm/math-emu.h:142:
+#define FPD_SIZEOF	(TASK_THREAD+THREAD_FPREG+136)
                   	            ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3866: FILE: arch/frv/include/asm/math-emu.h:142:
+#define FPD_SIZEOF	(TASK_THREAD+THREAD_FPREG+136)
                   	                         ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3880: FILE: arch/frv/include/asm/math-emu.h:156:
+#define FPS_EA		(PT_PC+6)
               		      ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3881: FILE: arch/frv/include/asm/math-emu.h:157:
+#define FPS_PC2		(PT_PC+10)
                		      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3884: FILE: arch/frv/include/asm/math-emu.h:160:
+	lea	(FPD_FPREG,FPDATA,%d0.w*4),%a0

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3884: FILE: arch/frv/include/asm/math-emu.h:160:
+	lea	(FPD_FPREG,FPDATA,%d0.w*4),%a0
 	   	          ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#3884: FILE: arch/frv/include/asm/math-emu.h:160:
+	lea	(FPD_FPREG,FPDATA,%d0.w*4),%a0
 	   	                 ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#3884: FILE: arch/frv/include/asm/math-emu.h:160:
+	lea	(FPD_FPREG,FPDATA,%d0.w*4),%a0
 	   	                  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3884: FILE: arch/frv/include/asm/math-emu.h:160:
+	lea	(FPD_FPREG,FPDATA,%d0.w*4),%a0
 	   	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#3884: FILE: arch/frv/include/asm/math-emu.h:160:
+	lea	(FPD_FPREG,FPDATA,%d0.w*4),%a0
 	   	                          ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#3884: FILE: arch/frv/include/asm/math-emu.h:160:
+	lea	(FPD_FPREG,FPDATA,%d0.w*4),%a0
 	   	                           ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3885: FILE: arch/frv/include/asm/math-emu.h:161:
+	lea	(%a0,%d0.w*8),%a0

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#3885: FILE: arch/frv/include/asm/math-emu.h:161:
+	lea	(%a0,%d0.w*8),%a0
 	   	 ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#3885: FILE: arch/frv/include/asm/math-emu.h:161:
+	lea	(%a0,%d0.w*8),%a0
 	   	    ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#3885: FILE: arch/frv/include/asm/math-emu.h:161:
+	lea	(%a0,%d0.w*8),%a0
 	   	     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3885: FILE: arch/frv/include/asm/math-emu.h:161:
+	lea	(%a0,%d0.w*8),%a0
 	   	          ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#3885: FILE: arch/frv/include/asm/math-emu.h:161:
+	lea	(%a0,%d0.w*8),%a0
 	   	             ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#3885: FILE: arch/frv/include/asm/math-emu.h:161:
+	lea	(%a0,%d0.w*8),%a0
 	   	              ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3894: FILE: arch/frv/include/asm/math-emu.h:170:
+	move.l	(FPS_PC+4,%sp),\dest

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3894: FILE: arch/frv/include/asm/math-emu.h:170:
+	move.l	(FPS_PC+4,%sp),\dest
 	      	       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#3894: FILE: arch/frv/include/asm/math-emu.h:170:
+	move.l	(FPS_PC+4,%sp),\dest
 	      	         ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#3894: FILE: arch/frv/include/asm/math-emu.h:170:
+	move.l	(FPS_PC+4,%sp),\dest
 	      	          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3894: FILE: arch/frv/include/asm/math-emu.h:170:
+	move.l	(FPS_PC+4,%sp),\dest
 	      	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3897: FILE: arch/frv/include/asm/math-emu.h:173:
+.macro	fp_put_pc src,jump=0
       	             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#3897: FILE: arch/frv/include/asm/math-emu.h:173:
+.macro	fp_put_pc src,jump=0
       	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3898: FILE: arch/frv/include/asm/math-emu.h:174:
+	move.l	\src,(FPS_PC+4,%sp)
 	      	    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3898: FILE: arch/frv/include/asm/math-emu.h:174:
+	move.l	\src,(FPS_PC+4,%sp)
 	      	            ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#3898: FILE: arch/frv/include/asm/math-emu.h:174:
+	move.l	\src,(FPS_PC+4,%sp)
 	      	              ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#3898: FILE: arch/frv/include/asm/math-emu.h:174:
+	move.l	\src,(FPS_PC+4,%sp)
 	      	               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3901: FILE: arch/frv/include/asm/math-emu.h:177:
+.macro	fp_get_instr_data	f,s,dest,label
       	                 	 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3901: FILE: arch/frv/include/asm/math-emu.h:177:
+.macro	fp_get_instr_data	f,s,dest,label
       	                 	   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3901: FILE: arch/frv/include/asm/math-emu.h:177:
+.macro	fp_get_instr_data	f,s,dest,label
       	                 	        ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#3902: FILE: arch/frv/include/asm/math-emu.h:178:
+	getuser	\f,%sp@(FPS_PC+4)@(0),\dest,\label,%sp@(FPS_PC+4)
 	       	  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#3902: FILE: arch/frv/include/asm/math-emu.h:178:
+	getuser	\f,%sp@(FPS_PC+4)@(0),\dest,\label,%sp@(FPS_PC+4)
 	       	   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3902: FILE: arch/frv/include/asm/math-emu.h:178:
+	getuser	\f,%sp@(FPS_PC+4)@(0),\dest,\label,%sp@(FPS_PC+4)
 	       	              ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3902: FILE: arch/frv/include/asm/math-emu.h:178:
+	getuser	\f,%sp@(FPS_PC+4)@(0),\dest,\label,%sp@(FPS_PC+4)
 	       	                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3902: FILE: arch/frv/include/asm/math-emu.h:178:
+	getuser	\f,%sp@(FPS_PC+4)@(0),\dest,\label,%sp@(FPS_PC+4)
 	       	                           ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#3902: FILE: arch/frv/include/asm/math-emu.h:178:
+	getuser	\f,%sp@(FPS_PC+4)@(0),\dest,\label,%sp@(FPS_PC+4)
 	       	                                  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#3902: FILE: arch/frv/include/asm/math-emu.h:178:
+	getuser	\f,%sp@(FPS_PC+4)@(0),\dest,\label,%sp@(FPS_PC+4)
 	       	                                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3902: FILE: arch/frv/include/asm/math-emu.h:178:
+	getuser	\f,%sp@(FPS_PC+4)@(0),\dest,\label,%sp@(FPS_PC+4)
 	       	                                              ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#3903: FILE: arch/frv/include/asm/math-emu.h:179:
+	addq.l	#\s,%sp@(FPS_PC+4)
 	      	   ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#3903: FILE: arch/frv/include/asm/math-emu.h:179:
+	addq.l	#\s,%sp@(FPS_PC+4)
 	      	    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3903: FILE: arch/frv/include/asm/math-emu.h:179:
+	addq.l	#\s,%sp@(FPS_PC+4)
 	      	               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3906: FILE: arch/frv/include/asm/math-emu.h:182:
+.macro	fp_get_instr_word	dest,label,addr
       	                 	    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3906: FILE: arch/frv/include/asm/math-emu.h:182:
+.macro	fp_get_instr_word	dest,label,addr
       	                 	          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3907: FILE: arch/frv/include/asm/math-emu.h:183:
+	fp_get_instr_data	w,2,\dest,\label,\addr
 	                 	 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3907: FILE: arch/frv/include/asm/math-emu.h:183:
+	fp_get_instr_data	w,2,\dest,\label,\addr
 	                 	   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3907: FILE: arch/frv/include/asm/math-emu.h:183:
+	fp_get_instr_data	w,2,\dest,\label,\addr
 	                 	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3907: FILE: arch/frv/include/asm/math-emu.h:183:
+	fp_get_instr_data	w,2,\dest,\label,\addr
 	                 	                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3910: FILE: arch/frv/include/asm/math-emu.h:186:
+.macro	fp_get_instr_long	dest,label,addr
       	                 	    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3910: FILE: arch/frv/include/asm/math-emu.h:186:
+.macro	fp_get_instr_long	dest,label,addr
       	                 	          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3911: FILE: arch/frv/include/asm/math-emu.h:187:
+	fp_get_instr_data	l,4,\dest,\label,\addr
 	                 	 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3911: FILE: arch/frv/include/asm/math-emu.h:187:
+	fp_get_instr_data	l,4,\dest,\label,\addr
 	                 	   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3911: FILE: arch/frv/include/asm/math-emu.h:187:
+	fp_get_instr_data	l,4,\dest,\label,\addr
 	                 	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3911: FILE: arch/frv/include/asm/math-emu.h:187:
+	fp_get_instr_data	l,4,\dest,\label,\addr
 	                 	                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3919: FILE: arch/frv/include/asm/math-emu.h:195:
+.macro	getuser	size,src,dest,label,addr
       	       	    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3919: FILE: arch/frv/include/asm/math-emu.h:195:
+.macro	getuser	size,src,dest,label,addr
       	       	        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3919: FILE: arch/frv/include/asm/math-emu.h:195:
+.macro	getuser	size,src,dest,label,addr
       	       	             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3919: FILE: arch/frv/include/asm/math-emu.h:195:
+.macro	getuser	size,src,dest,label,addr
       	       	                   ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#3920: FILE: arch/frv/include/asm/math-emu.h:196:
+|	printf	,"[\size<%08x]",1,\addr
  	      	^

ERROR:SPACING: space required after that ',' (ctx:WxV)
#3920: FILE: arch/frv/include/asm/math-emu.h:196:
+|	printf	,"[\size<%08x]",1,\addr
  	      	^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3920: FILE: arch/frv/include/asm/math-emu.h:196:
+|	printf	,"[\size<%08x]",1,\addr
  	      	               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3920: FILE: arch/frv/include/asm/math-emu.h:196:
+|	printf	,"[\size<%08x]",1,\addr
  	      	                 ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#3921: FILE: arch/frv/include/asm/math-emu.h:197:
+.Lu1\@:	moves\size	\src,\dest
       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3921: FILE: arch/frv/include/asm/math-emu.h:197:
+.Lu1\@:	moves\size	\src,\dest
        	          	    ^

CHECK:CAMELCASE: Avoid CamelCase: <Lu1>
#3921: FILE: arch/frv/include/asm/math-emu.h:197:
+.Lu1\@:	moves\size	\src,\dest

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3923: FILE: arch/frv/include/asm/math-emu.h:199:
+	.section .fixup,"ax"
 	               ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#3925: FILE: arch/frv/include/asm/math-emu.h:201:
+.Lu2\@:	move.l	\addr,%a0
       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#3925: FILE: arch/frv/include/asm/math-emu.h:201:
+.Lu2\@:	move.l	\addr,%a0
        	      	     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#3925: FILE: arch/frv/include/asm/math-emu.h:201:
+.Lu2\@:	move.l	\addr,%a0
        	      	      ^

CHECK:CAMELCASE: Avoid CamelCase: <Lu2>
#3925: FILE: arch/frv/include/asm/math-emu.h:201:
+.Lu2\@:	move.l	\addr,%a0

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3929: FILE: arch/frv/include/asm/math-emu.h:205:
+	.section __ex_table,"a"
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3931: FILE: arch/frv/include/asm/math-emu.h:207:
+	.long	.Lu1\@,.Lu2\@
 	     	      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3935: FILE: arch/frv/include/asm/math-emu.h:211:
+.macro	putuser	size,src,dest,label,addr
       	       	    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3935: FILE: arch/frv/include/asm/math-emu.h:211:
+.macro	putuser	size,src,dest,label,addr
       	       	        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3935: FILE: arch/frv/include/asm/math-emu.h:211:
+.macro	putuser	size,src,dest,label,addr
       	       	             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3935: FILE: arch/frv/include/asm/math-emu.h:211:
+.macro	putuser	size,src,dest,label,addr
       	       	                   ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxV)
#3936: FILE: arch/frv/include/asm/math-emu.h:212:
+|	printf	,"[\size>%08x]",1,\addr
  	      	^

ERROR:SPACING: space required after that ',' (ctx:WxV)
#3936: FILE: arch/frv/include/asm/math-emu.h:212:
+|	printf	,"[\size>%08x]",1,\addr
  	      	^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3936: FILE: arch/frv/include/asm/math-emu.h:212:
+|	printf	,"[\size>%08x]",1,\addr
  	      	               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3936: FILE: arch/frv/include/asm/math-emu.h:212:
+|	printf	,"[\size>%08x]",1,\addr
  	      	                 ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#3937: FILE: arch/frv/include/asm/math-emu.h:213:
+.Lu1\@:	moves\size	\src,\dest
       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3937: FILE: arch/frv/include/asm/math-emu.h:213:
+.Lu1\@:	moves\size	\src,\dest
        	          	    ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#3938: FILE: arch/frv/include/asm/math-emu.h:214:
+.Lu2\@:
       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3940: FILE: arch/frv/include/asm/math-emu.h:216:
+	.section .fixup,"ax"
 	               ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#3942: FILE: arch/frv/include/asm/math-emu.h:218:
+.Lu3\@:	move.l	\addr,%a0
       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#3942: FILE: arch/frv/include/asm/math-emu.h:218:
+.Lu3\@:	move.l	\addr,%a0
        	      	     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#3942: FILE: arch/frv/include/asm/math-emu.h:218:
+.Lu3\@:	move.l	\addr,%a0
        	      	      ^

CHECK:CAMELCASE: Avoid CamelCase: <Lu3>
#3942: FILE: arch/frv/include/asm/math-emu.h:218:
+.Lu3\@:	move.l	\addr,%a0

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3946: FILE: arch/frv/include/asm/math-emu.h:222:
+	.section __ex_table,"a"
 	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3948: FILE: arch/frv/include/asm/math-emu.h:224:
+	.long	.Lu1\@,.Lu3\@
 	     	      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3949: FILE: arch/frv/include/asm/math-emu.h:225:
+	.long	.Lu2\@,.Lu3\@
 	     	      ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#3953: FILE: arch/frv/include/asm/math-emu.h:229:
+
+

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3954: FILE: arch/frv/include/asm/math-emu.h:230:
+.macro	movestack	nr,arg1,arg2,arg3,arg4,arg5
       	         	  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3954: FILE: arch/frv/include/asm/math-emu.h:230:
+.macro	movestack	nr,arg1,arg2,arg3,arg4,arg5
       	         	       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3954: FILE: arch/frv/include/asm/math-emu.h:230:
+.macro	movestack	nr,arg1,arg2,arg3,arg4,arg5
       	         	            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3954: FILE: arch/frv/include/asm/math-emu.h:230:
+.macro	movestack	nr,arg1,arg2,arg3,arg4,arg5
       	         	                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3954: FILE: arch/frv/include/asm/math-emu.h:230:
+.macro	movestack	nr,arg1,arg2,arg3,arg4,arg5
       	         	                      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3956: FILE: arch/frv/include/asm/math-emu.h:232:
+	movestack	(\nr-1),\arg2,\arg3,\arg4,\arg5

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3956: FILE: arch/frv/include/asm/math-emu.h:232:
+	movestack	(\nr-1),\arg2,\arg3,\arg4,\arg5
 	         	    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3956: FILE: arch/frv/include/asm/math-emu.h:232:
+	movestack	(\nr-1),\arg2,\arg3,\arg4,\arg5
 	         	       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3956: FILE: arch/frv/include/asm/math-emu.h:232:
+	movestack	(\nr-1),\arg2,\arg3,\arg4,\arg5
 	         	             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3956: FILE: arch/frv/include/asm/math-emu.h:232:
+	movestack	(\nr-1),\arg2,\arg3,\arg4,\arg5
 	         	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3956: FILE: arch/frv/include/asm/math-emu.h:232:
+	movestack	(\nr-1),\arg2,\arg3,\arg4,\arg5
 	         	                         ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#3957: FILE: arch/frv/include/asm/math-emu.h:233:
+	move.l	\arg1,-(%sp)
 	      	     ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#3957: FILE: arch/frv/include/asm/math-emu.h:233:
+	move.l	\arg1,-(%sp)
 	      	      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#3957: FILE: arch/frv/include/asm/math-emu.h:233:
+	move.l	\arg1,-(%sp)
 	      	        ^

ERROR:SPACING: spaces required around that '=' (ctx:VxO)
#3961: FILE: arch/frv/include/asm/math-emu.h:237:
+.macro	printf	bit=-1,string,nr=0,arg1,arg2,arg3,arg4,arg5
       	      	   ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#3961: FILE: arch/frv/include/asm/math-emu.h:237:
+.macro	printf	bit=-1,string,nr=0,arg1,arg2,arg3,arg4,arg5
       	      	    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3961: FILE: arch/frv/include/asm/math-emu.h:237:
+.macro	printf	bit=-1,string,nr=0,arg1,arg2,arg3,arg4,arg5
       	      	      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3961: FILE: arch/frv/include/asm/math-emu.h:237:
+.macro	printf	bit=-1,string,nr=0,arg1,arg2,arg3,arg4,arg5
       	      	             ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#3961: FILE: arch/frv/include/asm/math-emu.h:237:
+.macro	printf	bit=-1,string,nr=0,arg1,arg2,arg3,arg4,arg5
       	      	                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3961: FILE: arch/frv/include/asm/math-emu.h:237:
+.macro	printf	bit=-1,string,nr=0,arg1,arg2,arg3,arg4,arg5
       	      	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3961: FILE: arch/frv/include/asm/math-emu.h:237:
+.macro	printf	bit=-1,string,nr=0,arg1,arg2,arg3,arg4,arg5
       	      	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3961: FILE: arch/frv/include/asm/math-emu.h:237:
+.macro	printf	bit=-1,string,nr=0,arg1,arg2,arg3,arg4,arg5
       	      	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3961: FILE: arch/frv/include/asm/math-emu.h:237:
+.macro	printf	bit=-1,string,nr=0,arg1,arg2,arg3,arg4,arg5
       	      	                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3961: FILE: arch/frv/include/asm/math-emu.h:237:
+.macro	printf	bit=-1,string,nr=0,arg1,arg2,arg3,arg4,arg5
       	      	                                      ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#3964: FILE: arch/frv/include/asm/math-emu.h:240:
+.Lpdata\@:
          ^

CHECK:CAMELCASE: Avoid CamelCase: <Lpdata>
#3964: FILE: arch/frv/include/asm/math-emu.h:240:
+.Lpdata\@:

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#3968: FILE: arch/frv/include/asm/math-emu.h:244:
+	movem.l	%d0/%d1/%a0/%a1,-(%sp)
 	       	^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxO)
#3968: FILE: arch/frv/include/asm/math-emu.h:244:
+	movem.l	%d0/%d1/%a0/%a1,-(%sp)
 	       	   ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#3968: FILE: arch/frv/include/asm/math-emu.h:244:
+	movem.l	%d0/%d1/%a0/%a1,-(%sp)
 	       	    ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxO)
#3968: FILE: arch/frv/include/asm/math-emu.h:244:
+	movem.l	%d0/%d1/%a0/%a1,-(%sp)
 	       	       ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#3968: FILE: arch/frv/include/asm/math-emu.h:244:
+	movem.l	%d0/%d1/%a0/%a1,-(%sp)
 	       	        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxO)
#3968: FILE: arch/frv/include/asm/math-emu.h:244:
+	movem.l	%d0/%d1/%a0/%a1,-(%sp)
 	       	           ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#3968: FILE: arch/frv/include/asm/math-emu.h:244:
+	movem.l	%d0/%d1/%a0/%a1,-(%sp)
 	       	            ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#3968: FILE: arch/frv/include/asm/math-emu.h:244:
+	movem.l	%d0/%d1/%a0/%a1,-(%sp)
 	       	               ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#3968: FILE: arch/frv/include/asm/math-emu.h:244:
+	movem.l	%d0/%d1/%a0/%a1,-(%sp)
 	       	                ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#3968: FILE: arch/frv/include/asm/math-emu.h:244:
+	movem.l	%d0/%d1/%a0/%a1,-(%sp)
 	       	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3969: FILE: arch/frv/include/asm/math-emu.h:245:
+	.if	\bit+1
 	   	    ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#3970: FILE: arch/frv/include/asm/math-emu.h:246:
+#if 0

ERROR:SPACING: space required after that ',' (ctx:VxO)
#3971: FILE: arch/frv/include/asm/math-emu.h:247:
+	moveq	#\bit,%d0
 	     	     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#3971: FILE: arch/frv/include/asm/math-emu.h:247:
+	moveq	#\bit,%d0
 	     	      ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#3972: FILE: arch/frv/include/asm/math-emu.h:248:
+	andw	#7,%d0
 	    	  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#3972: FILE: arch/frv/include/asm/math-emu.h:248:
+	andw	#7,%d0
 	    	   ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#3973: FILE: arch/frv/include/asm/math-emu.h:249:
+	btst	%d0,fp_debugprint+((31-\bit)/8)
 	    	^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3973: FILE: arch/frv/include/asm/math-emu.h:249:
+	btst	%d0,fp_debugprint+((31-\bit)/8)
 	    	   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3973: FILE: arch/frv/include/asm/math-emu.h:249:
+	btst	%d0,fp_debugprint+((31-\bit)/8)
 	    	                 ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3973: FILE: arch/frv/include/asm/math-emu.h:249:
+	btst	%d0,fp_debugprint+((31-\bit)/8)
 	    	                      ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3973: FILE: arch/frv/include/asm/math-emu.h:249:
+	btst	%d0,fp_debugprint+((31-\bit)/8)
 	    	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3975: FILE: arch/frv/include/asm/math-emu.h:251:
+	btst	#\bit,fp_debugprint+((31-\bit)/8)
 	    	     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3975: FILE: arch/frv/include/asm/math-emu.h:251:
+	btst	#\bit,fp_debugprint+((31-\bit)/8)
 	    	                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#3975: FILE: arch/frv/include/asm/math-emu.h:251:
+	btst	#\bit,fp_debugprint+((31-\bit)/8)
 	    	                        ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#3975: FILE: arch/frv/include/asm/math-emu.h:251:
+	btst	#\bit,fp_debugprint+((31-\bit)/8)
 	    	                              ^

CHECK:CAMELCASE: Avoid CamelCase: <Lpskip>
#3977: FILE: arch/frv/include/asm/math-emu.h:253:
+	jeq	.Lpskip\@

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3979: FILE: arch/frv/include/asm/math-emu.h:255:
+	movestack	\nr,\arg1,\arg2,\arg3,\arg4,\arg5
 	         	   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3979: FILE: arch/frv/include/asm/math-emu.h:255:
+	movestack	\nr,\arg1,\arg2,\arg3,\arg4,\arg5
 	         	         ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3979: FILE: arch/frv/include/asm/math-emu.h:255:
+	movestack	\nr,\arg1,\arg2,\arg3,\arg4,\arg5
 	         	               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3979: FILE: arch/frv/include/asm/math-emu.h:255:
+	movestack	\nr,\arg1,\arg2,\arg3,\arg4,\arg5
 	         	                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3979: FILE: arch/frv/include/asm/math-emu.h:255:
+	movestack	\nr,\arg1,\arg2,\arg3,\arg4,\arg5
 	         	                           ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3982: FILE: arch/frv/include/asm/math-emu.h:258:
+	lea	((\nr+1)*4,%sp),%sp

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#3982: FILE: arch/frv/include/asm/math-emu.h:258:
+	lea	((\nr+1)*4,%sp),%sp
 	   	     ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#3982: FILE: arch/frv/include/asm/math-emu.h:258:
+	lea	((\nr+1)*4,%sp),%sp
 	   	        ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#3982: FILE: arch/frv/include/asm/math-emu.h:258:
+	lea	((\nr+1)*4,%sp),%sp
 	   	          ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#3982: FILE: arch/frv/include/asm/math-emu.h:258:
+	lea	((\nr+1)*4,%sp),%sp
 	   	           ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#3982: FILE: arch/frv/include/asm/math-emu.h:258:
+	lea	((\nr+1)*4,%sp),%sp
 	   	               ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#3982: FILE: arch/frv/include/asm/math-emu.h:258:
+	lea	((\nr+1)*4,%sp),%sp
 	   	                ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#3983: FILE: arch/frv/include/asm/math-emu.h:259:
+.Lpskip\@:
          ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3984: FILE: arch/frv/include/asm/math-emu.h:260:
+	movem.l	(%sp)+,%d0/%d1/%a0/%a1

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#3984: FILE: arch/frv/include/asm/math-emu.h:260:
+	movem.l	(%sp)+,%d0/%d1/%a0/%a1
 	       	 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxO)
#3984: FILE: arch/frv/include/asm/math-emu.h:260:
+	movem.l	(%sp)+,%d0/%d1/%a0/%a1
 	       	     ^

ERROR:SPACING: space required after that ',' (ctx:OxO)
#3984: FILE: arch/frv/include/asm/math-emu.h:260:
+	movem.l	(%sp)+,%d0/%d1/%a0/%a1
 	       	      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#3984: FILE: arch/frv/include/asm/math-emu.h:260:
+	movem.l	(%sp)+,%d0/%d1/%a0/%a1
 	       	       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxO)
#3984: FILE: arch/frv/include/asm/math-emu.h:260:
+	movem.l	(%sp)+,%d0/%d1/%a0/%a1
 	       	          ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#3984: FILE: arch/frv/include/asm/math-emu.h:260:
+	movem.l	(%sp)+,%d0/%d1/%a0/%a1
 	       	           ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxO)
#3984: FILE: arch/frv/include/asm/math-emu.h:260:
+	movem.l	(%sp)+,%d0/%d1/%a0/%a1
 	       	              ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#3984: FILE: arch/frv/include/asm/math-emu.h:260:
+	movem.l	(%sp)+,%d0/%d1/%a0/%a1
 	       	               ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxO)
#3984: FILE: arch/frv/include/asm/math-emu.h:260:
+	movem.l	(%sp)+,%d0/%d1/%a0/%a1
 	       	                  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#3984: FILE: arch/frv/include/asm/math-emu.h:260:
+	movem.l	(%sp)+,%d0/%d1/%a0/%a1
 	       	                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3988: FILE: arch/frv/include/asm/math-emu.h:264:
+.macro	printx	bit,fp
       	      	   ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#3990: FILE: arch/frv/include/asm/math-emu.h:266:
+	movem.l	%d0/%a0,-(%sp)
 	       	^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxO)
#3990: FILE: arch/frv/include/asm/math-emu.h:266:
+	movem.l	%d0/%a0,-(%sp)
 	       	   ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#3990: FILE: arch/frv/include/asm/math-emu.h:266:
+	movem.l	%d0/%a0,-(%sp)
 	       	    ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#3990: FILE: arch/frv/include/asm/math-emu.h:266:
+	movem.l	%d0/%a0,-(%sp)
 	       	       ^

ERROR:SPACING: space required before that '-' (ctx:OxV)
#3990: FILE: arch/frv/include/asm/math-emu.h:266:
+	movem.l	%d0/%a0,-(%sp)
 	       	        ^

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#3990: FILE: arch/frv/include/asm/math-emu.h:266:
+	movem.l	%d0/%a0,-(%sp)
 	       	          ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#3991: FILE: arch/frv/include/asm/math-emu.h:267:
+	lea	\fp,%a0
 	   	   ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#3991: FILE: arch/frv/include/asm/math-emu.h:267:
+	lea	\fp,%a0
 	   	    ^

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#3992: FILE: arch/frv/include/asm/math-emu.h:268:
+#if 0

ERROR:SPACING: space required after that ',' (ctx:VxO)
#3993: FILE: arch/frv/include/asm/math-emu.h:269:
+	moveq	#'+',%d0
 	     	    ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#3993: FILE: arch/frv/include/asm/math-emu.h:269:
+	moveq	#'+',%d0
 	     	     ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3994: FILE: arch/frv/include/asm/math-emu.h:270:
+	tst.w	(%a0)

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#3994: FILE: arch/frv/include/asm/math-emu.h:270:
+	tst.w	(%a0)
 	     	 ^

CHECK:CAMELCASE: Avoid CamelCase: <Lx1>
#3995: FILE: arch/frv/include/asm/math-emu.h:271:
+	jeq	.Lx1\@

ERROR:SPACING: space required after that ',' (ctx:VxO)
#3996: FILE: arch/frv/include/asm/math-emu.h:272:
+	moveq	#'-',%d0
 	     	    ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#3996: FILE: arch/frv/include/asm/math-emu.h:272:
+	moveq	#'-',%d0
 	     	     ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#3997: FILE: arch/frv/include/asm/math-emu.h:273:
+.Lx1\@:	printf	\bit," %c",1,%d0
       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3997: FILE: arch/frv/include/asm/math-emu.h:273:
+.Lx1\@:	printf	\bit," %c",1,%d0
        	      	    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#3997: FILE: arch/frv/include/asm/math-emu.h:273:
+.Lx1\@:	printf	\bit," %c",1,%d0
        	      	          ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#3997: FILE: arch/frv/include/asm/math-emu.h:273:
+.Lx1\@:	printf	\bit," %c",1,%d0
        	      	            ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#3997: FILE: arch/frv/include/asm/math-emu.h:273:
+.Lx1\@:	printf	\bit," %c",1,%d0
        	      	             ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#3998: FILE: arch/frv/include/asm/math-emu.h:274:
+	move.l	(4,%a0),%d0

ERROR:SPACING: space required after that ',' (ctx:VxO)
#3998: FILE: arch/frv/include/asm/math-emu.h:274:
+	move.l	(4,%a0),%d0
 	      	  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#3998: FILE: arch/frv/include/asm/math-emu.h:274:
+	move.l	(4,%a0),%d0
 	      	   ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#3998: FILE: arch/frv/include/asm/math-emu.h:274:
+	move.l	(4,%a0),%d0
 	      	       ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#3998: FILE: arch/frv/include/asm/math-emu.h:274:
+	move.l	(4,%a0),%d0
 	      	        ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#3999: FILE: arch/frv/include/asm/math-emu.h:275:
+	bclr	#31,%d0
 	    	   ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#3999: FILE: arch/frv/include/asm/math-emu.h:275:
+	bclr	#31,%d0
 	    	    ^

CHECK:CAMELCASE: Avoid CamelCase: <Lx2>
#4000: FILE: arch/frv/include/asm/math-emu.h:276:
+	jne	.Lx2\@

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4001: FILE: arch/frv/include/asm/math-emu.h:277:
+	printf	\bit,"0."
 	      	    ^

CHECK:CAMELCASE: Avoid CamelCase: <Lx3>
#4002: FILE: arch/frv/include/asm/math-emu.h:278:
+	jra	.Lx3\@

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#4003: FILE: arch/frv/include/asm/math-emu.h:279:
+.Lx2\@:	printf	\bit,"1."
       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4003: FILE: arch/frv/include/asm/math-emu.h:279:
+.Lx2\@:	printf	\bit,"1."
        	      	    ^

ERROR:SPACING: spaces required around that ':' (ctx:VxW)
#4004: FILE: arch/frv/include/asm/math-emu.h:280:
+.Lx3\@:	printf	\bit,"%08x%08x",2,%d0,%a0@(8)
       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4004: FILE: arch/frv/include/asm/math-emu.h:280:
+.Lx3\@:	printf	\bit,"%08x%08x",2,%d0,%a0@(8)
        	      	    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4004: FILE: arch/frv/include/asm/math-emu.h:280:
+.Lx3\@:	printf	\bit,"%08x%08x",2,%d0,%a0@(8)
        	      	               ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#4004: FILE: arch/frv/include/asm/math-emu.h:280:
+.Lx3\@:	printf	\bit,"%08x%08x",2,%d0,%a0@(8)
        	      	                 ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#4004: FILE: arch/frv/include/asm/math-emu.h:280:
+.Lx3\@:	printf	\bit,"%08x%08x",2,%d0,%a0@(8)
        	      	                  ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#4004: FILE: arch/frv/include/asm/math-emu.h:280:
+.Lx3\@:	printf	\bit,"%08x%08x",2,%d0,%a0@(8)
        	      	                     ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#4004: FILE: arch/frv/include/asm/math-emu.h:280:
+.Lx3\@:	printf	\bit,"%08x%08x",2,%d0,%a0@(8)
        	      	                      ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#4005: FILE: arch/frv/include/asm/math-emu.h:281:
+	move.w	(2,%a0),%d0

ERROR:SPACING: space required after that ',' (ctx:VxO)
#4005: FILE: arch/frv/include/asm/math-emu.h:281:
+	move.w	(2,%a0),%d0
 	      	  ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#4005: FILE: arch/frv/include/asm/math-emu.h:281:
+	move.w	(2,%a0),%d0
 	      	   ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#4005: FILE: arch/frv/include/asm/math-emu.h:281:
+	move.w	(2,%a0),%d0
 	      	       ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#4005: FILE: arch/frv/include/asm/math-emu.h:281:
+	move.w	(2,%a0),%d0
 	      	        ^

CHECK:SPACING: spaces preferred around that '%' (ctx:WxV)
#4006: FILE: arch/frv/include/asm/math-emu.h:282:
+	ext.l	%d0
 	     	^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4007: FILE: arch/frv/include/asm/math-emu.h:283:
+	printf	\bit,"E%04x",1,%d0
 	      	    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4007: FILE: arch/frv/include/asm/math-emu.h:283:
+	printf	\bit,"E%04x",1,%d0
 	      	            ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#4007: FILE: arch/frv/include/asm/math-emu.h:283:
+	printf	\bit,"E%04x",1,%d0
 	      	              ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#4007: FILE: arch/frv/include/asm/math-emu.h:283:
+	printf	\bit,"E%04x",1,%d0
 	      	               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4009: FILE: arch/frv/include/asm/math-emu.h:285:
+	printf	\bit," %08x%08x%08x",3,%a0@,%a0@(4),%a0@(8)
 	      	    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4009: FILE: arch/frv/include/asm/math-emu.h:285:
+	printf	\bit," %08x%08x%08x",3,%a0@,%a0@(4),%a0@(8)
 	      	                    ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#4009: FILE: arch/frv/include/asm/math-emu.h:285:
+	printf	\bit," %08x%08x%08x",3,%a0@,%a0@(4),%a0@(8)
 	      	                      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#4009: FILE: arch/frv/include/asm/math-emu.h:285:
+	printf	\bit," %08x%08x%08x",3,%a0@,%a0@(4),%a0@(8)
 	      	                       ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#4009: FILE: arch/frv/include/asm/math-emu.h:285:
+	printf	\bit," %08x%08x%08x",3,%a0@,%a0@(4),%a0@(8)
 	      	                           ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#4009: FILE: arch/frv/include/asm/math-emu.h:285:
+	printf	\bit," %08x%08x%08x",3,%a0@,%a0@(4),%a0@(8)
 	      	                            ^

ERROR:SPACING: space required after that ',' (ctx:VxO)
#4009: FILE: arch/frv/include/asm/math-emu.h:285:
+	printf	\bit," %08x%08x%08x",3,%a0@,%a0@(4),%a0@(8)
 	      	                                   ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#4009: FILE: arch/frv/include/asm/math-emu.h:285:
+	printf	\bit," %08x%08x%08x",3,%a0@,%a0@(4),%a0@(8)
 	      	                                    ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#4011: FILE: arch/frv/include/asm/math-emu.h:287:
+	movem.l	(%sp)+,%d0/%a0

CHECK:SPACING: spaces preferred around that '%' (ctx:BxV)
#4011: FILE: arch/frv/include/asm/math-emu.h:287:
+	movem.l	(%sp)+,%d0/%a0
 	       	 ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxO)
#4011: FILE: arch/frv/include/asm/math-emu.h:287:
+	movem.l	(%sp)+,%d0/%a0
 	       	     ^

ERROR:SPACING: space required after that ',' (ctx:OxO)
#4011: FILE: arch/frv/include/asm/math-emu.h:287:
+	movem.l	(%sp)+,%d0/%a0
 	       	      ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#4011: FILE: arch/frv/include/asm/math-emu.h:287:
+	movem.l	(%sp)+,%d0/%a0
 	       	       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxO)
#4011: FILE: arch/frv/include/asm/math-emu.h:287:
+	movem.l	(%sp)+,%d0/%a0
 	       	          ^

CHECK:SPACING: spaces preferred around that '%' (ctx:OxV)
#4011: FILE: arch/frv/include/asm/math-emu.h:287:
+	movem.l	(%sp)+,%d0/%a0
 	       	           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4015: FILE: arch/frv/include/asm/math-emu.h:291:
+.macro	debug	instr,args
       	     	     ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4021: FILE: arch/frv/include/asm/math-emu.h:297:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4032: FILE: arch/frv/include/asm/mb-regs.h:1:
+/* mb-regs.h: motherboard registers

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#4053: FILE: arch/frv/include/asm/mb-regs.h:22:
+unsigned long __builtin_read8(volatile void __iomem *);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#4054: FILE: arch/frv/include/asm/mb-regs.h:23:
+unsigned long __builtin_read16(volatile void __iomem *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'volatile void __iomem *' should also have an identifier name
#4054: FILE: arch/frv/include/asm/mb-regs.h:23:
+unsigned long __builtin_read16(volatile void __iomem *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#4055: FILE: arch/frv/include/asm/mb-regs.h:24:
+unsigned long __builtin_read32(volatile void __iomem *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'volatile void __iomem *' should also have an identifier name
#4055: FILE: arch/frv/include/asm/mb-regs.h:24:
+unsigned long __builtin_read32(volatile void __iomem *);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#4056: FILE: arch/frv/include/asm/mb-regs.h:25:
+void __builtin_write8(volatile void __iomem *, unsigned char);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'volatile void __iomem *' should also have an identifier name
#4056: FILE: arch/frv/include/asm/mb-regs.h:25:
+void __builtin_write8(volatile void __iomem *, unsigned char);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned char' should also have an identifier name
#4056: FILE: arch/frv/include/asm/mb-regs.h:25:
+void __builtin_write8(volatile void __iomem *, unsigned char);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#4057: FILE: arch/frv/include/asm/mb-regs.h:26:
+void __builtin_write16(volatile void __iomem *, unsigned short);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'volatile void __iomem *' should also have an identifier name
#4057: FILE: arch/frv/include/asm/mb-regs.h:26:
+void __builtin_write16(volatile void __iomem *, unsigned short);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned short' should also have an identifier name
#4057: FILE: arch/frv/include/asm/mb-regs.h:26:
+void __builtin_write16(volatile void __iomem *, unsigned short);

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#4058: FILE: arch/frv/include/asm/mb-regs.h:27:
+void __builtin_write32(volatile void __iomem *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'volatile void __iomem *' should also have an identifier name
#4058: FILE: arch/frv/include/asm/mb-regs.h:27:
+void __builtin_write32(volatile void __iomem *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#4058: FILE: arch/frv/include/asm/mb-regs.h:27:
+void __builtin_write32(volatile void __iomem *, unsigned long);

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#4102: FILE: arch/frv/include/asm/mb-regs.h:71:
+#define __flush_PCI_writes()						\
+do {									\
+	__builtin_write8((volatile void __iomem *) __region_PCI_MEM, 0);	\
+} while(0)

CHECK:SPACING: No space is necessary after a cast
#4104: FILE: arch/frv/include/asm/mb-regs.h:73:
+	__builtin_write8((volatile void __iomem *) __region_PCI_MEM, 0);	\

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#4104: FILE: arch/frv/include/asm/mb-regs.h:73:
+	__builtin_write8((volatile void __iomem *) __region_PCI_MEM, 0);	\

ERROR:SPACING: space required before the open parenthesis '('
#4105: FILE: arch/frv/include/asm/mb-regs.h:74:
+} while(0)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#4116: FILE: arch/frv/include/asm/mb-regs.h:85:
+#define __get_CLKSW()	({ *(volatile unsigned long *)(__region_CS2 + 0x0130000cUL) & 0xffUL; })

CHECK:SPACING: No space is necessary after a cast
#4128: FILE: arch/frv/include/asm/mb-regs.h:97:
+		__builtin_write32((void __iomem *) __addr_LEDS(), ~(X));	\

CHECK:SPACING: No space is necessary after a cast
#4135: FILE: arch/frv/include/asm/mb-regs.h:104:
+#define __get_LCD(B)		__builtin_read32((volatile void __iomem *) (B))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#4135: FILE: arch/frv/include/asm/mb-regs.h:104:
+#define __get_LCD(B)		__builtin_read32((volatile void __iomem *) (B))

CHECK:SPACING: No space is necessary after a cast
#4136: FILE: arch/frv/include/asm/mb-regs.h:105:
+#define __set_LCD(B,X)		__builtin_write32((volatile void __iomem *) (B), (X))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4136: FILE: arch/frv/include/asm/mb-regs.h:105:
+#define __set_LCD(B,X)		__builtin_write32((volatile void __iomem *) (B), (X))
                    ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#4136: FILE: arch/frv/include/asm/mb-regs.h:105:
+#define __set_LCD(B,X)		__builtin_write32((volatile void __iomem *) (B), (X))

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4143: FILE: arch/frv/include/asm/mb-regs.h:112:
+#define LCD_CMD_CLEAR		(LCD_E|0x001)
                      		      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4144: FILE: arch/frv/include/asm/mb-regs.h:113:
+#define LCD_CMD_HOME		(LCD_E|0x002)
                     		      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4145: FILE: arch/frv/include/asm/mb-regs.h:114:
+#define LCD_CMD_CURSOR_INC	(LCD_E|0x004)
                           	      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4146: FILE: arch/frv/include/asm/mb-regs.h:115:
+#define LCD_CMD_SCROLL_INC	(LCD_E|0x005)
                           	      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4147: FILE: arch/frv/include/asm/mb-regs.h:116:
+#define LCD_CMD_CURSOR_DEC	(LCD_E|0x006)
                           	      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4148: FILE: arch/frv/include/asm/mb-regs.h:117:
+#define LCD_CMD_SCROLL_DEC	(LCD_E|0x007)
                           	      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4149: FILE: arch/frv/include/asm/mb-regs.h:118:
+#define LCD_CMD_OFF		(LCD_E|0x008)
                    		      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4150: FILE: arch/frv/include/asm/mb-regs.h:119:
+#define LCD_CMD_ON(CRSR,BLINK)	(LCD_E|0x00c|(CRSR<<1)|BLINK)
                        ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4150: FILE: arch/frv/include/asm/mb-regs.h:119:
+#define LCD_CMD_ON(CRSR,BLINK)	(LCD_E|0x00c|(CRSR<<1)|BLINK)
                               	      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4150: FILE: arch/frv/include/asm/mb-regs.h:119:
+#define LCD_CMD_ON(CRSR,BLINK)	(LCD_E|0x00c|(CRSR<<1)|BLINK)
                               	            ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#4150: FILE: arch/frv/include/asm/mb-regs.h:119:
+#define LCD_CMD_ON(CRSR,BLINK)	(LCD_E|0x00c|(CRSR<<1)|BLINK)
                               	                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4150: FILE: arch/frv/include/asm/mb-regs.h:119:
+#define LCD_CMD_ON(CRSR,BLINK)	(LCD_E|0x00c|(CRSR<<1)|BLINK)
                               	                      ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'CRSR' may be better as '(CRSR)' to avoid precedence issues
#4150: FILE: arch/frv/include/asm/mb-regs.h:119:
+#define LCD_CMD_ON(CRSR,BLINK)	(LCD_E|0x00c|(CRSR<<1)|BLINK)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'BLINK' may be better as '(BLINK)' to avoid precedence issues
#4150: FILE: arch/frv/include/asm/mb-regs.h:119:
+#define LCD_CMD_ON(CRSR,BLINK)	(LCD_E|0x00c|(CRSR<<1)|BLINK)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4151: FILE: arch/frv/include/asm/mb-regs.h:120:
+#define LCD_CMD_CURSOR_MOVE_L	(LCD_E|0x010)
                              	      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4152: FILE: arch/frv/include/asm/mb-regs.h:121:
+#define LCD_CMD_CURSOR_MOVE_R	(LCD_E|0x014)
                              	      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4153: FILE: arch/frv/include/asm/mb-regs.h:122:
+#define LCD_CMD_DISPLAY_SHIFT_L	(LCD_E|0x018)
                                	      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4154: FILE: arch/frv/include/asm/mb-regs.h:123:
+#define LCD_CMD_DISPLAY_SHIFT_R	(LCD_E|0x01c)
                                	      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4155: FILE: arch/frv/include/asm/mb-regs.h:124:
+#define LCD_CMD_FUNCSET(DL,N,F)	(LCD_E|0x020|(DL<<4)|(N<<3)|(F<<2))
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4155: FILE: arch/frv/include/asm/mb-regs.h:124:
+#define LCD_CMD_FUNCSET(DL,N,F)	(LCD_E|0x020|(DL<<4)|(N<<3)|(F<<2))
                             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4155: FILE: arch/frv/include/asm/mb-regs.h:124:
+#define LCD_CMD_FUNCSET(DL,N,F)	(LCD_E|0x020|(DL<<4)|(N<<3)|(F<<2))
                                	      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4155: FILE: arch/frv/include/asm/mb-regs.h:124:
+#define LCD_CMD_FUNCSET(DL,N,F)	(LCD_E|0x020|(DL<<4)|(N<<3)|(F<<2))
                                	            ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#4155: FILE: arch/frv/include/asm/mb-regs.h:124:
+#define LCD_CMD_FUNCSET(DL,N,F)	(LCD_E|0x020|(DL<<4)|(N<<3)|(F<<2))
                                	                ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4155: FILE: arch/frv/include/asm/mb-regs.h:124:
+#define LCD_CMD_FUNCSET(DL,N,F)	(LCD_E|0x020|(DL<<4)|(N<<3)|(F<<2))
                                	                    ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#4155: FILE: arch/frv/include/asm/mb-regs.h:124:
+#define LCD_CMD_FUNCSET(DL,N,F)	(LCD_E|0x020|(DL<<4)|(N<<3)|(F<<2))
                                	                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4155: FILE: arch/frv/include/asm/mb-regs.h:124:
+#define LCD_CMD_FUNCSET(DL,N,F)	(LCD_E|0x020|(DL<<4)|(N<<3)|(F<<2))
                                	                           ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#4155: FILE: arch/frv/include/asm/mb-regs.h:124:
+#define LCD_CMD_FUNCSET(DL,N,F)	(LCD_E|0x020|(DL<<4)|(N<<3)|(F<<2))
                                	                              ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'DL' may be better as '(DL)' to avoid precedence issues
#4155: FILE: arch/frv/include/asm/mb-regs.h:124:
+#define LCD_CMD_FUNCSET(DL,N,F)	(LCD_E|0x020|(DL<<4)|(N<<3)|(F<<2))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'N' may be better as '(N)' to avoid precedence issues
#4155: FILE: arch/frv/include/asm/mb-regs.h:124:
+#define LCD_CMD_FUNCSET(DL,N,F)	(LCD_E|0x020|(DL<<4)|(N<<3)|(F<<2))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'F' may be better as '(F)' to avoid precedence issues
#4155: FILE: arch/frv/include/asm/mb-regs.h:124:
+#define LCD_CMD_FUNCSET(DL,N,F)	(LCD_E|0x020|(DL<<4)|(N<<3)|(F<<2))

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4156: FILE: arch/frv/include/asm/mb-regs.h:125:
+#define LCD_CMD_SET_CG_ADDR(X)	(LCD_E|0x040|X)
                               	      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4156: FILE: arch/frv/include/asm/mb-regs.h:125:
+#define LCD_CMD_SET_CG_ADDR(X)	(LCD_E|0x040|X)
                               	            ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'X' may be better as '(X)' to avoid precedence issues
#4156: FILE: arch/frv/include/asm/mb-regs.h:125:
+#define LCD_CMD_SET_CG_ADDR(X)	(LCD_E|0x040|X)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4157: FILE: arch/frv/include/asm/mb-regs.h:126:
+#define LCD_CMD_SET_DD_ADDR(X)	(LCD_E|0x080|X)
                               	      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4157: FILE: arch/frv/include/asm/mb-regs.h:126:
+#define LCD_CMD_SET_DD_ADDR(X)	(LCD_E|0x080|X)
                               	            ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'X' may be better as '(X)' to avoid precedence issues
#4157: FILE: arch/frv/include/asm/mb-regs.h:126:
+#define LCD_CMD_SET_DD_ADDR(X)	(LCD_E|0x080|X)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4158: FILE: arch/frv/include/asm/mb-regs.h:127:
+#define LCD_CMD_READ_BUSY	(LCD_E|LCD_RW)
                          	      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4159: FILE: arch/frv/include/asm/mb-regs.h:128:
+#define LCD_DATA_WRITE(X)	(LCD_E|LCD_RS|(X))
                          	      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4159: FILE: arch/frv/include/asm/mb-regs.h:128:
+#define LCD_DATA_WRITE(X)	(LCD_E|LCD_RS|(X))
                          	             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4160: FILE: arch/frv/include/asm/mb-regs.h:129:
+#define LCD_DATA_READ		(LCD_E|LCD_RS|LCD_RW)
                      		      ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#4160: FILE: arch/frv/include/asm/mb-regs.h:129:
+#define LCD_DATA_READ		(LCD_E|LCD_RS|LCD_RW)
                      		             ^

ERROR:SPACING: space required before the open parenthesis '('
#4200: FILE: arch/frv/include/asm/mb-regs.h:169:
+#define __flush_PCI_writes()	do { } while(0)

CHECK:SPACING: No space is necessary after a cast
#4206: FILE: arch/frv/include/asm/mb-regs.h:175:
+#define __set_LEDS(X)		__builtin_write8((volatile void __iomem *) __addr_LEDS(), (X))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#4206: FILE: arch/frv/include/asm/mb-regs.h:175:
+#define __set_LEDS(X)		__builtin_write8((volatile void __iomem *) __addr_LEDS(), (X))

CHECK:SPACING: No space is necessary after a cast
#4209: FILE: arch/frv/include/asm/mb-regs.h:178:
+#define __set_FPGATR(X)		__builtin_write32((volatile void __iomem *) __addr_FPGATR(), (X))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#4209: FILE: arch/frv/include/asm/mb-regs.h:178:
+#define __set_FPGATR(X)		__builtin_write32((volatile void __iomem *) __addr_FPGATR(), (X))

CHECK:SPACING: No space is necessary after a cast
#4210: FILE: arch/frv/include/asm/mb-regs.h:179:
+#define __get_FPGATR()		__builtin_read32((volatile void __iomem *) __addr_FPGATR())

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#4210: FILE: arch/frv/include/asm/mb-regs.h:179:
+#define __get_FPGATR()		__builtin_read32((volatile void __iomem *) __addr_FPGATR())

CHECK:CAMELCASE: Avoid CamelCase: <MB93093_FPGA_FPGATR_AUDIO_CLK_11MHz>
#4218: FILE: arch/frv/include/asm/mb-regs.h:187:
+#define MB93093_FPGA_FPGATR_AUDIO_CLK_11MHz	0x1

CHECK:CAMELCASE: Avoid CamelCase: <MB93093_FPGA_FPGATR_AUDIO_CLK_12MHz>
#4219: FILE: arch/frv/include/asm/mb-regs.h:188:
+#define MB93093_FPGA_FPGATR_AUDIO_CLK_12MHz	0x2

CHECK:CAMELCASE: Avoid CamelCase: <MB93093_FPGA_FPGATR_AUDIO_CLK_02MHz>
#4220: FILE: arch/frv/include/asm/mb-regs.h:189:
+#define MB93093_FPGA_FPGATR_AUDIO_CLK_02MHz	0x3

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#4222: FILE: arch/frv/include/asm/mb-regs.h:191:
+#define MB93093_FPGA_SWR_PUSHSWMASK	(0x1F<<26)
                                    	     ^

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#4223: FILE: arch/frv/include/asm/mb-regs.h:192:
+#define MB93093_FPGA_SWR_PUSHSW4	(1<<29)
                                 	  ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#4223: FILE: arch/frv/include/asm/mb-regs.h:192:
+#define MB93093_FPGA_SWR_PUSHSW4	(1<<29)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#4225: FILE: arch/frv/include/asm/mb-regs.h:194:
+#define __addr_FPGA_SWR		((volatile void __iomem *)(__region_CS2 + 0x28UL))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4228: FILE: arch/frv/include/asm/mb-regs.h:197:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4238: FILE: arch/frv/include/asm/mb86943a.h:1:
+/* mb86943a.h: MB86943 SPARClite <-> PCI bridge registers

CHECK:SPACING: No space is necessary after a cast
#4254: FILE: arch/frv/include/asm/mb86943a.h:17:
+#define __reg_MB86943_sl_ctl		*(volatile uint32_t *) (__region_CS1 + 0x00)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#4254: FILE: arch/frv/include/asm/mb86943a.h:17:
+#define __reg_MB86943_sl_ctl		*(volatile uint32_t *) (__region_CS1 + 0x00)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#4254: FILE: arch/frv/include/asm/mb86943a.h:17:
+#define __reg_MB86943_sl_ctl		*(volatile uint32_t *) (__region_CS1 + 0x00)

CHECK:SPACING: No space is necessary after a cast
#4265: FILE: arch/frv/include/asm/mb86943a.h:28:
+#define __reg_MB86943_ecs_ctl(N)	*(volatile uint32_t *) (__region_CS1 + 0x08 + (0x08*(N)))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#4265: FILE: arch/frv/include/asm/mb86943a.h:28:
+#define __reg_MB86943_ecs_ctl(N)	*(volatile uint32_t *) (__region_CS1 + 0x08 + (0x08*(N)))
                                 	                                                   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#4265: FILE: arch/frv/include/asm/mb86943a.h:28:
+#define __reg_MB86943_ecs_ctl(N)	*(volatile uint32_t *) (__region_CS1 + 0x08 + (0x08*(N)))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#4265: FILE: arch/frv/include/asm/mb86943a.h:28:
+#define __reg_MB86943_ecs_ctl(N)	*(volatile uint32_t *) (__region_CS1 + 0x08 + (0x08*(N)))

CHECK:SPACING: No space is necessary after a cast
#4266: FILE: arch/frv/include/asm/mb86943a.h:29:
+#define __reg_MB86943_ecs_range(N)	*(volatile uint32_t *) (__region_CS1 + 0x20 + (0x10*(N)))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#4266: FILE: arch/frv/include/asm/mb86943a.h:29:
+#define __reg_MB86943_ecs_range(N)	*(volatile uint32_t *) (__region_CS1 + 0x20 + (0x10*(N)))
                                   	                                                   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#4266: FILE: arch/frv/include/asm/mb86943a.h:29:
+#define __reg_MB86943_ecs_range(N)	*(volatile uint32_t *) (__region_CS1 + 0x20 + (0x10*(N)))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#4266: FILE: arch/frv/include/asm/mb86943a.h:29:
+#define __reg_MB86943_ecs_range(N)	*(volatile uint32_t *) (__region_CS1 + 0x20 + (0x10*(N)))

CHECK:SPACING: No space is necessary after a cast
#4267: FILE: arch/frv/include/asm/mb86943a.h:30:
+#define __reg_MB86943_ecs_base(N)	*(volatile uint32_t *) (__region_CS1 + 0x28 + (0x10*(N)))

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#4267: FILE: arch/frv/include/asm/mb86943a.h:30:
+#define __reg_MB86943_ecs_base(N)	*(volatile uint32_t *) (__region_CS1 + 0x28 + (0x10*(N)))
                                  	                                                   ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#4267: FILE: arch/frv/include/asm/mb86943a.h:30:
+#define __reg_MB86943_ecs_base(N)	*(volatile uint32_t *) (__region_CS1 + 0x28 + (0x10*(N)))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#4267: FILE: arch/frv/include/asm/mb86943a.h:30:
+#define __reg_MB86943_ecs_base(N)	*(volatile uint32_t *) (__region_CS1 + 0x28 + (0x10*(N)))

CHECK:SPACING: No space is necessary after a cast
#4269: FILE: arch/frv/include/asm/mb86943a.h:32:
+#define __reg_MB86943_sl_pci_io_range	*(volatile uint32_t *) (__region_CS1 + 0x50)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#4269: FILE: arch/frv/include/asm/mb86943a.h:32:
+#define __reg_MB86943_sl_pci_io_range	*(volatile uint32_t *) (__region_CS1 + 0x50)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#4269: FILE: arch/frv/include/asm/mb86943a.h:32:
+#define __reg_MB86943_sl_pci_io_range	*(volatile uint32_t *) (__region_CS1 + 0x50)

CHECK:SPACING: No space is necessary after a cast
#4270: FILE: arch/frv/include/asm/mb86943a.h:33:
+#define __reg_MB86943_sl_pci_io_base	*(volatile uint32_t *) (__region_CS1 + 0x58)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#4270: FILE: arch/frv/include/asm/mb86943a.h:33:
+#define __reg_MB86943_sl_pci_io_base	*(volatile uint32_t *) (__region_CS1 + 0x58)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#4270: FILE: arch/frv/include/asm/mb86943a.h:33:
+#define __reg_MB86943_sl_pci_io_base	*(volatile uint32_t *) (__region_CS1 + 0x58)

CHECK:SPACING: No space is necessary after a cast
#4271: FILE: arch/frv/include/asm/mb86943a.h:34:
+#define __reg_MB86943_sl_pci_mem_range	*(volatile uint32_t *) (__region_CS1 + 0x60)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#4271: FILE: arch/frv/include/asm/mb86943a.h:34:
+#define __reg_MB86943_sl_pci_mem_range	*(volatile uint32_t *) (__region_CS1 + 0x60)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#4271: FILE: arch/frv/include/asm/mb86943a.h:34:
+#define __reg_MB86943_sl_pci_mem_range	*(volatile uint32_t *) (__region_CS1 + 0x60)

CHECK:SPACING: No space is necessary after a cast
#4272: FILE: arch/frv/include/asm/mb86943a.h:35:
+#define __reg_MB86943_sl_pci_mem_base	*(volatile uint32_t *) (__region_CS1 + 0x68)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#4272: FILE: arch/frv/include/asm/mb86943a.h:35:
+#define __reg_MB86943_sl_pci_mem_base	*(volatile uint32_t *) (__region_CS1 + 0x68)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#4272: FILE: arch/frv/include/asm/mb86943a.h:35:
+#define __reg_MB86943_sl_pci_mem_base	*(volatile uint32_t *) (__region_CS1 + 0x68)

CHECK:SPACING: No space is necessary after a cast
#4273: FILE: arch/frv/include/asm/mb86943a.h:36:
+#define __reg_MB86943_pci_sl_io_base	*(volatile uint32_t *) (__region_CS1 + 0x70)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#4273: FILE: arch/frv/include/asm/mb86943a.h:36:
+#define __reg_MB86943_pci_sl_io_base	*(volatile uint32_t *) (__region_CS1 + 0x70)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#4273: FILE: arch/frv/include/asm/mb86943a.h:36:
+#define __reg_MB86943_pci_sl_io_base	*(volatile uint32_t *) (__region_CS1 + 0x70)

CHECK:SPACING: No space is necessary after a cast
#4274: FILE: arch/frv/include/asm/mb86943a.h:37:
+#define __reg_MB86943_pci_sl_mem_base	*(volatile uint32_t *) (__region_CS1 + 0x78)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#4274: FILE: arch/frv/include/asm/mb86943a.h:37:
+#define __reg_MB86943_pci_sl_mem_base	*(volatile uint32_t *) (__region_CS1 + 0x78)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#4274: FILE: arch/frv/include/asm/mb86943a.h:37:
+#define __reg_MB86943_pci_sl_mem_base	*(volatile uint32_t *) (__region_CS1 + 0x78)

CHECK:SPACING: No space is necessary after a cast
#4276: FILE: arch/frv/include/asm/mb86943a.h:39:
+#define __reg_MB86943_pci_arbiter	*(volatile uint32_t *) (__region_CS2 + 0x01300014)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#4276: FILE: arch/frv/include/asm/mb86943a.h:39:
+#define __reg_MB86943_pci_arbiter	*(volatile uint32_t *) (__region_CS2 + 0x01300014)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#4276: FILE: arch/frv/include/asm/mb86943a.h:39:
+#define __reg_MB86943_pci_arbiter	*(volatile uint32_t *) (__region_CS2 + 0x01300014)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4286: FILE: arch/frv/include/asm/mb93091-fpga-irqs.h:1:
+/* mb93091-fpga-irqs.h: MB93091 CPU board FPGA IRQs

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4324: FILE: arch/frv/include/asm/mb93091-fpga-irqs.h:39:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4334: FILE: arch/frv/include/asm/mb93093-fpga-irqs.h:1:
+/* mb93093-fpga-irqs.h: MB93093 CPU board FPGA IRQs

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4359: FILE: arch/frv/include/asm/mb93093-fpga-irqs.h:26:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4369: FILE: arch/frv/include/asm/mb93493-irqs.h:1:
+/* mb93493-irqs.h: MB93493 companion chip IRQs

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4425: FILE: arch/frv/include/asm/mb93493-regs.h:1:
+/* mb93493-regs.h: MB93493 companion chip registers

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#4442: FILE: arch/frv/include/asm/mb93493-regs.h:18:
+#define __addr_MB93493(X)	((volatile unsigned long *)(__region_CS3 + (X)))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#4443: FILE: arch/frv/include/asm/mb93493-regs.h:19:
+#define __get_MB93493(X)	({ *(volatile unsigned long *)(__region_CS3 + (X)); })

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4445: FILE: arch/frv/include/asm/mb93493-regs.h:21:
+#define __set_MB93493(X,V)						\
                        ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#4447: FILE: arch/frv/include/asm/mb93493-regs.h:23:
+	*(volatile unsigned long *)(__region_CS3 + (X)) = (V); mb();	\

WARNING:MEMORY_BARRIER: memory barrier without comment
#4447: FILE: arch/frv/include/asm/mb93493-regs.h:23:
+	*(volatile unsigned long *)(__region_CS3 + (X)) = (V); mb();	\

ERROR:SPACING: space required before the open parenthesis '('
#4448: FILE: arch/frv/include/asm/mb93493-regs.h:24:
+} while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4451: FILE: arch/frv/include/asm/mb93493-regs.h:27:
+#define __set_MB93493_STSR(X,V)	__set_MB93493(0x3c0 + (X) * 4, (V))
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4456: FILE: arch/frv/include/asm/mb93493-regs.h:32:
+#define __set_MB93493_IQSR(X,V)	__set_MB93493(0x3d0 + (X) * 4, (V))
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4459: FILE: arch/frv/include/asm/mb93493-regs.h:35:
+#define __set_MB93493_DQSR(X,V)	__set_MB93493(0x3e0 + (X) * 4, (V))
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4480: FILE: arch/frv/include/asm/mb93493-regs.h:56:
+#define __set_MB93493_VDC(X,V)	__set_MB93493(MB93493_VDC_##X, (V))
                            ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#4494: FILE: arch/frv/include/asm/mb93493-regs.h:70:
+#define __addr_MB93493_VDC_BCI(X)  ({ (volatile unsigned long *)(__region_CS3 + 0x000 + (X)); })

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4518: FILE: arch/frv/include/asm/mb93493-regs.h:94:
+#define __set_MB93493_VCC(X,V)	__set_MB93493(MB93493_VCC_##X, (V))
                            ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#4594: FILE: arch/frv/include/asm/mb93493-regs.h:170:
+#define MB93493_I2C_BSR ^I0x340^I^I/* bus status */$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4601: FILE: arch/frv/include/asm/mb93493-regs.h:177:
+#define __addr_MB93493_I2C(port,X)   (__region_CS3 + MB93493_I2C_##X + ((port)*0x20))
                                ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#4601: FILE: arch/frv/include/asm/mb93493-regs.h:177:
+#define __addr_MB93493_I2C(port,X)   (__region_CS3 + MB93493_I2C_##X + ((port)*0x20))
                                                                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4602: FILE: arch/frv/include/asm/mb93493-regs.h:178:
+#define __get_MB93493_I2C(port,X)    __get_MB93493(MB93493_I2C_##X + ((port)*0x20))
                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#4602: FILE: arch/frv/include/asm/mb93493-regs.h:178:
+#define __get_MB93493_I2C(port,X)    __get_MB93493(MB93493_I2C_##X + ((port)*0x20))
                                                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4603: FILE: arch/frv/include/asm/mb93493-regs.h:179:
+#define __set_MB93493_I2C(port,X,V)  __set_MB93493(MB93493_I2C_##X + ((port)*0x20), (V))
                               ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4603: FILE: arch/frv/include/asm/mb93493-regs.h:179:
+#define __set_MB93493_I2C(port,X,V)  __set_MB93493(MB93493_I2C_##X + ((port)*0x20), (V))
                                 ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#4603: FILE: arch/frv/include/asm/mb93493-regs.h:179:
+#define __set_MB93493_I2C(port,X,V)  __set_MB93493(MB93493_I2C_##X + ((port)*0x20), (V))
                                                                             ^

CHECK:BIT_MACRO: Prefer using the BIT macro
#4605: FILE: arch/frv/include/asm/mb93493-regs.h:181:
+#define I2C_BSR_BB	(1 << 7)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4611: FILE: arch/frv/include/asm/mb93493-regs.h:187:
+#define __set_MB93493_I2S(X,V)	__set_MB93493(MB93493_I2S_##X, (V))
                            ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#4673: FILE: arch/frv/include/asm/mb93493-regs.h:249:
+#define __addr_MB93493_PCMCIA(X)  ((volatile unsigned long *)(__region_CS5 + (X)))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4679: FILE: arch/frv/include/asm/mb93493-regs.h:255:
+#define __set_MB93493_GPIO_PDR(X,V)	__set_MB93493(0x380 + (X) * 0xc0, (V))
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4682: FILE: arch/frv/include/asm/mb93493-regs.h:258:
+#define __set_MB93493_GPIO_GPDR(X,V)	__set_MB93493(0x384 + (X) * 0xc0, (V))
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4685: FILE: arch/frv/include/asm/mb93493-regs.h:261:
+#define __set_MB93493_GPIO_SIR(X,V)	__set_MB93493(0x388 + (X) * 0xc0, (V))
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4688: FILE: arch/frv/include/asm/mb93493-regs.h:264:
+#define __set_MB93493_GPIO_SOR(X,V)	__set_MB93493(0x38c + (X) * 0xc0, (V))
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4691: FILE: arch/frv/include/asm/mb93493-regs.h:267:
+#define __set_MB93493_GPIO_PDSR(X,V)	__set_MB93493(0x390 + (X) * 0xc0, (V))
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4694: FILE: arch/frv/include/asm/mb93493-regs.h:270:
+#define __set_MB93493_GPIO_PDCR(X,V)	__set_MB93493(0x394 + (X) * 0xc0, (V))
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4697: FILE: arch/frv/include/asm/mb93493-regs.h:273:
+#define __set_MB93493_GPIO_INTST(X,V)	__set_MB93493(0x398 + (X) * 0xc0, (V))
                                   ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4700: FILE: arch/frv/include/asm/mb93493-regs.h:276:
+#define __set_MB93493_GPIO_IEHL(X,V)	__set_MB93493(0x39c + (X) * 0xc0, (V))
                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#4703: FILE: arch/frv/include/asm/mb93493-regs.h:279:
+#define __set_MB93493_GPIO_IELH(X,V)	__set_MB93493(0x3a0 + (X) * 0xc0, (V))
                                  ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4712: FILE: arch/frv/include/asm/mc146818rtc.h:1:
+/* mc146818rtc.h: RTC defs

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4726: FILE: arch/frv/include/asm/mc146818rtc.h:15:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4734: FILE: arch/frv/include/asm/mem-layout.h:1:
+/* mem-layout.h: memory layout

CHECK:SPACING: No space is necessary after a cast
#4749: FILE: arch/frv/include/asm/mem-layout.h:16:
+#define __UL(X)	((unsigned long) (X))

CHECK:BIT_MACRO: Prefer using the BIT macro
#4760: FILE: arch/frv/include/asm/mem-layout.h:27:
+#define PAGE_SIZE			(1UL << PAGE_SHIFT)

CHECK:BIT_MACRO: Prefer using the BIT macro
#4762: FILE: arch/frv/include/asm/mem-layout.h:29:
+#define PAGE_SIZE			(1 << PAGE_SHIFT)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#4765: FILE: arch/frv/include/asm/mem-layout.h:32:
+#define PAGE_MASK			(~(PAGE_SIZE-1))
                  			            ^

CHECK:SPACING: No space is necessary after a cast
#4778: FILE: arch/frv/include/asm/mem-layout.h:45:
+#define PAGE_OFFSET			((unsigned long) &__page_offset)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#4796: FILE: arch/frv/include/asm/mem-layout.h:63:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4826: FILE: arch/frv/include/asm/mman.h:1:
+#ifndef __ASM_MMAN_H__

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4850: FILE: arch/frv/include/asm/mmu.h:1:
+/* mmu.h: memory management context for FR-V with or without MMU support

WARNING:NEW_TYPEDEFS: do not add new typedefs
#4863: FILE: arch/frv/include/asm/mmu.h:14:
+typedef struct {

WARNING:TYPO_SPELLING: 'PTD' may be misspelled - perhaps 'PDF'?
#4869: FILE: arch/frv/include/asm/mmu.h:20:
+	unsigned long	itlb_ptd_mapping;	/* [DAMR4] PTD mapping for itlb cached PGE */
 	             	                 	           ^^^

WARNING:TYPO_SPELLING: 'PTD' may be misspelled - perhaps 'PDF'?
#4871: FILE: arch/frv/include/asm/mmu.h:22:
+	unsigned long	dtlb_ptd_mapping;	/* [DAMR5] PTD mapping for dtlb cached PGE */
 	             	                 	           ^^^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4887: FILE: arch/frv/include/asm/mmu.h:38:
+extern int cxn_pin_by_pid(pid_t pid);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4897: FILE: arch/frv/include/asm/mmu_context.h:1:
+/* mmu_context.h: MMU context management routines

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4921: FILE: arch/frv/include/asm/mmu_context.h:25:
+extern int init_new_context(struct task_struct *tsk, struct mm_struct *mm);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4922: FILE: arch/frv/include/asm/mmu_context.h:26:
+extern void change_mm_context(mm_context_t *old, mm_context_t *ctx, pgd_t *_pgd);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#4923: FILE: arch/frv/include/asm/mmu_context.h:27:
+extern void destroy_context(struct mm_struct *mm);

ERROR:SPACING: space required before the open parenthesis '('
#4927: FILE: arch/frv/include/asm/mmu_context.h:31:
+#define change_mm_context(old, ctx, _pml4)	do {} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#4928: FILE: arch/frv/include/asm/mmu_context.h:32:
+#define destroy_context(mm)			do {} while(0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'prev' - possible side-effects?
#4931: FILE: arch/frv/include/asm/mmu_context.h:35:
+#define switch_mm(prev, next, tsk)						\
+do {										\
+	if (prev != next)							\
+		change_mm_context(&prev->context, &next->context, next->pgd);	\
+} while(0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'prev' may be better as '(prev)' to avoid precedence issues
#4931: FILE: arch/frv/include/asm/mmu_context.h:35:
+#define switch_mm(prev, next, tsk)						\
+do {										\
+	if (prev != next)							\
+		change_mm_context(&prev->context, &next->context, next->pgd);	\
+} while(0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'next' - possible side-effects?
#4931: FILE: arch/frv/include/asm/mmu_context.h:35:
+#define switch_mm(prev, next, tsk)						\
+do {										\
+	if (prev != next)							\
+		change_mm_context(&prev->context, &next->context, next->pgd);	\
+} while(0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'next' may be better as '(next)' to avoid precedence issues
#4931: FILE: arch/frv/include/asm/mmu_context.h:35:
+#define switch_mm(prev, next, tsk)						\
+do {										\
+	if (prev != next)							\
+		change_mm_context(&prev->context, &next->context, next->pgd);	\
+} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#4935: FILE: arch/frv/include/asm/mmu_context.h:39:
+} while(0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'prev' may be better as '(prev)' to avoid precedence issues
#4937: FILE: arch/frv/include/asm/mmu_context.h:41:
+#define activate_mm(prev, next)						\
+do {									\
+	change_mm_context(&prev->context, &next->context, next->pgd);	\
+} while(0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'next' - possible side-effects?
#4937: FILE: arch/frv/include/asm/mmu_context.h:41:
+#define activate_mm(prev, next)						\
+do {									\
+	change_mm_context(&prev->context, &next->context, next->pgd);	\
+} while(0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'next' may be better as '(next)' to avoid precedence issues
#4937: FILE: arch/frv/include/asm/mmu_context.h:41:
+#define activate_mm(prev, next)						\
+do {									\
+	change_mm_context(&prev->context, &next->context, next->pgd);	\
+} while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#4937: FILE: arch/frv/include/asm/mmu_context.h:41:
+#define activate_mm(prev, next)						\
+do {									\
+	change_mm_context(&prev->context, &next->context, next->pgd);	\
+} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#4940: FILE: arch/frv/include/asm/mmu_context.h:44:
+} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#4944: FILE: arch/frv/include/asm/mmu_context.h:48:
+} while(0)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4953: FILE: arch/frv/include/asm/module.h:1:
+/* module.h: FRV module stuff

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#4967: FILE: arch/frv/include/asm/module.h:15:
+struct mod_arch_specific
+{

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Shdr>
#4970: FILE: arch/frv/include/asm/module.h:18:
+#define Elf_Shdr	Elf32_Shdr

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Shdr>
#4970: FILE: arch/frv/include/asm/module.h:18:
+#define Elf_Shdr	Elf32_Shdr

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Sym>
#4971: FILE: arch/frv/include/asm/module.h:19:
+#define Elf_Sym		Elf32_Sym

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Sym>
#4971: FILE: arch/frv/include/asm/module.h:19:
+#define Elf_Sym		Elf32_Sym

CHECK:CAMELCASE: Avoid CamelCase: <Elf_Ehdr>
#4972: FILE: arch/frv/include/asm/module.h:20:
+#define Elf_Ehdr	Elf32_Ehdr

CHECK:CAMELCASE: Avoid CamelCase: <Elf32_Ehdr>
#4972: FILE: arch/frv/include/asm/module.h:20:
+#define Elf_Ehdr	Elf32_Ehdr

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#4987: FILE: arch/frv/include/asm/msgbuf.h:1:
+#ifndef _ASM_MSGBUF_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#5025: FILE: arch/frv/include/asm/mutex.h:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#5040: FILE: arch/frv/include/asm/page.h:1:
+#ifndef _ASM_PAGE_H

ERROR:SPACING: space required after that ',' (ctx:VxV)
#5054: FILE: arch/frv/include/asm/page.h:15:
+#define copy_page(to,from)			memcpy((to), (from), PAGE_SIZE)
                     ^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#5062: FILE: arch/frv/include/asm/page.h:23:
+typedef struct { unsigned long	pte;	} pte_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#5063: FILE: arch/frv/include/asm/page.h:24:
+typedef struct { unsigned long	ste[64];} pmd_t;

ERROR:SPACING: space required after that ';' (ctx:VxV)
#5063: FILE: arch/frv/include/asm/page.h:24:
+typedef struct { unsigned long	ste[64];} pmd_t;
                               	       ^

WARNING:NEW_TYPEDEFS: do not add new typedefs
#5064: FILE: arch/frv/include/asm/page.h:25:
+typedef struct { pmd_t		pue[1]; } pud_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#5065: FILE: arch/frv/include/asm/page.h:26:
+typedef struct { pud_t		pge[1];	} pgd_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#5066: FILE: arch/frv/include/asm/page.h:27:
+typedef struct { unsigned long	pgprot;	} pgprot_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#5067: FILE: arch/frv/include/asm/page.h:28:
+typedef struct page *pgtable_t;

ERROR:SPACING: space prohibited before that close parenthesis ')'
#5075: FILE: arch/frv/include/asm/page.h:36:
+#define __pte(x)	((pte_t) { (x) } )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#5076: FILE: arch/frv/include/asm/page.h:37:
+#define __pmd(x)	((pmd_t) { (x) } )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#5077: FILE: arch/frv/include/asm/page.h:38:
+#define __pud(x)	((pud_t) { (x) } )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#5078: FILE: arch/frv/include/asm/page.h:39:
+#define __pgd(x)	((pgd_t) { (x) } )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#5079: FILE: arch/frv/include/asm/page.h:40:
+#define __pgprot(x)	((pgprot_t) { (x) } )

CHECK:SPACING: No space is necessary after a cast
#5084: FILE: arch/frv/include/asm/page.h:45:
+#define __pa(vaddr)		virt_to_phys((void *) (unsigned long) (vaddr))

CHECK:SPACING: No space is necessary after a cast
#5085: FILE: arch/frv/include/asm/page.h:46:
+#define __va(paddr)		phys_to_virt((unsigned long) (paddr))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pfn' - possible side-effects?
#5097: FILE: arch/frv/include/asm/page.h:58:
+#define pfn_valid(pfn)		((pfn) >= min_low_pfn && (pfn) < max_low_pfn)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5104: FILE: arch/frv/include/asm/page.h:65:
+
+

ERROR:SPACING: space prohibited before that close parenthesis ')'
#5108: FILE: arch/frv/include/asm/page.h:69:
+	((current->personality & READ_IMPLIES_EXEC) ? VM_EXEC : 0 ) | \

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#5124: FILE: arch/frv/include/asm/param.h:1:
+#ifndef _ASM_PARAM_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#5152: FILE: arch/frv/include/asm/pci.h:1:
+/* pci.h: FR-V specific PCI declarations

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5176: FILE: arch/frv/include/asm/pci.h:25:
+extern void pcibios_set_master(struct pci_dev *dev);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5178: FILE: arch/frv/include/asm/pci.h:27:
+extern void pcibios_penalize_isa_irq(int irq);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5181: FILE: arch/frv/include/asm/pci.h:30:
+extern void *consistent_alloc(gfp_t gfp, size_t size, dma_addr_t *dma_handle);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5182: FILE: arch/frv/include/asm/pci.h:31:
+extern void consistent_free(void *vaddr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5183: FILE: arch/frv/include/asm/pci.h:32:
+extern void consistent_sync(void *vaddr, size_t size, int direction);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5184: FILE: arch/frv/include/asm/pci.h:33:
+extern void consistent_sync_page(struct page *page, unsigned long offset,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5188: FILE: arch/frv/include/asm/pci.h:37:
+extern void *pci_alloc_consistent(struct pci_dev *hwdev, size_t size,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5191: FILE: arch/frv/include/asm/pci.h:40:
+extern void pci_free_consistent(struct pci_dev *hwdev, size_t size,

WARNING:TYPO_SPELLING: 'strat' may be misspelled - perhaps 'start'?
#5213: FILE: arch/frv/include/asm/pci.h:62:
+					enum pci_dma_burst_strategy *strat,
 					                             ^^^^^

WARNING:TYPO_SPELLING: 'strat' may be misspelled - perhaps 'start'?
#5216: FILE: arch/frv/include/asm/pci.h:65:
+	*strat = PCI_DMA_BURST_INFINITY;
 	 ^^^^^

WARNING:TYPO_SPELLING: 'arbitary' may be misspelled - perhaps 'arbitrary'?
#5222: FILE: arch/frv/include/asm/pci.h:71:
+ *	These are pretty much arbitary with the CoMEM implementation.
   	                      ^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#5242: FILE: arch/frv/include/asm/pci.h:91:
+                BUG();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5242: FILE: arch/frv/include/asm/pci.h:91:
+                BUG();$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#5242: FILE: arch/frv/include/asm/pci.h:91:
+                BUG();

ERROR:CODE_INDENT: code indent should use tabs where possible
#5261: FILE: arch/frv/include/asm/pci.h:110:
+                BUG();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#5261: FILE: arch/frv/include/asm/pci.h:110:
+                BUG();$

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#5261: FILE: arch/frv/include/asm/pci.h:110:
+                BUG();

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#5265: FILE: arch/frv/include/asm/pci.h:114:
+				    sg_dma_address(&sg[i])+sg_dma_len(&sg[i]));
 				                          ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#5268: FILE: arch/frv/include/asm/pci.h:117:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#5276: FILE: arch/frv/include/asm/percpu.h:1:
+#ifndef __ASM_PERCPU_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#5288: FILE: arch/frv/include/asm/pgalloc.h:1:
+/* pgalloc.h: Page allocation routines for FRV

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#5311: FILE: arch/frv/include/asm/pgalloc.h:24:
+#define pmd_populate(MM, PMD, PAGE)						\
+do {										\
+	__set_pmd((PMD), page_to_pfn(PAGE) << PAGE_SHIFT | _PAGE_TABLE);	\
+} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#5314: FILE: arch/frv/include/asm/pgalloc.h:27:
+} while(0)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5321: FILE: arch/frv/include/asm/pgalloc.h:34:
+extern pgd_t *pgd_alloc(struct mm_struct *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#5321: FILE: arch/frv/include/asm/pgalloc.h:34:
+extern pgd_t *pgd_alloc(struct mm_struct *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5322: FILE: arch/frv/include/asm/pgalloc.h:35:
+extern void pgd_free(struct mm_struct *mm, pgd_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'pgd_t *' should also have an identifier name
#5322: FILE: arch/frv/include/asm/pgalloc.h:35:
+extern void pgd_free(struct mm_struct *mm, pgd_t *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5324: FILE: arch/frv/include/asm/pgalloc.h:37:
+extern pte_t *pte_alloc_one_kernel(struct mm_struct *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#5324: FILE: arch/frv/include/asm/pgalloc.h:37:
+extern pte_t *pte_alloc_one_kernel(struct mm_struct *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#5324: FILE: arch/frv/include/asm/pgalloc.h:37:
+extern pte_t *pte_alloc_one_kernel(struct mm_struct *, unsigned long);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5326: FILE: arch/frv/include/asm/pgalloc.h:39:
+extern pgtable_t pte_alloc_one(struct mm_struct *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mm_struct *' should also have an identifier name
#5326: FILE: arch/frv/include/asm/pgalloc.h:39:
+extern pgtable_t pte_alloc_one(struct mm_struct *, unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#5326: FILE: arch/frv/include/asm/pgalloc.h:39:
+extern pgtable_t pte_alloc_one(struct mm_struct *, unsigned long);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#5339: FILE: arch/frv/include/asm/pgalloc.h:52:
+#define __pte_free_tlb(tlb,pte)				\
                           ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pte' - possible side-effects?
#5339: FILE: arch/frv/include/asm/pgalloc.h:52:
+#define __pte_free_tlb(tlb,pte)				\
+do {							\
+	pgtable_page_dtor(pte);				\
+	tlb_remove_page((tlb),(pte));			\
+} while (0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#5342: FILE: arch/frv/include/asm/pgalloc.h:55:
+	tlb_remove_page((tlb),(pte));			\
 	                     ^

CHECK:SPACING: No space is necessary after a cast
#5350: FILE: arch/frv/include/asm/pgalloc.h:63:
+#define pmd_alloc_one(mm, addr)		({ BUG(); ((pmd_t *) 2); })

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#5350: FILE: arch/frv/include/asm/pgalloc.h:63:
+#define pmd_alloc_one(mm, addr)		({ BUG(); ((pmd_t *) 2); })

ERROR:SPACING: space required after that ',' (ctx:VxV)
#5352: FILE: arch/frv/include/asm/pgalloc.h:65:
+#define __pmd_free_tlb(tlb,x)		do { } while (0)
                           ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#5363: FILE: arch/frv/include/asm/pgtable.h:1:
+/* pgtable.h: FR-V page table mangling

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#5383: FILE: arch/frv/include/asm/pgtable.h:21:
+#include <asm/processor.h>

WARNING:NEW_TYPEDEFS: do not add new typedefs
#5396: FILE: arch/frv/include/asm/pgtable.h:34:
+typedef unsigned long pte_addr_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#5398: FILE: arch/frv/include/asm/pgtable.h:36:
+typedef pte_t *pte_addr_t;

CHECK:SPACING: No space is necessary after a cast
#5413: FILE: arch/frv/include/asm/pgtable.h:51:
+#define	pmd_offset(a, b)	((void *) 0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#5423: FILE: arch/frv/include/asm/pgtable.h:61:
+#define __swp_entry(typ,off)	((swp_entry_t) { ((typ) | ((off) << 7)) })
                        ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#5431: FILE: arch/frv/include/asm/pgtable.h:69:
+#define ZERO_PAGE(vaddr)	({ BUG(); NULL; })

CHECK:SPACING: No space is necessary after a cast
#5433: FILE: arch/frv/include/asm/pgtable.h:71:
+#define swapper_pg_dir		((pgd_t *) NULL)

CHECK:BIT_MACRO: Prefer using the BIT macro
#5488: FILE: arch/frv/include/asm/pgtable.h:126:
+#define PGDIR_SIZE		(1UL << PGDIR_SHIFT)

CHECK:BIT_MACRO: Prefer using the BIT macro
#5494: FILE: arch/frv/include/asm/pgtable.h:132:
+#define PUD_SIZE		(1UL << PUD_SHIFT)

CHECK:BIT_MACRO: Prefer using the BIT macro
#5499: FILE: arch/frv/include/asm/pgtable.h:137:
+#define PMD_SIZE		(1UL << PMD_SHIFT)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#5523: FILE: arch/frv/include/asm/pgtable.h:161:
+	printk("%s:%d: bad pte %08lx.\n", __FILE__, __LINE__, (e).pte)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#5525: FILE: arch/frv/include/asm/pgtable.h:163:
+	printk("%s:%d: bad pmd %08lx.\n", __FILE__, __LINE__, pmd_val(e))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#5527: FILE: arch/frv/include/asm/pgtable.h:165:
+	printk("%s:%d: bad pud %08lx.\n", __FILE__, __LINE__, pmd_val(pud_val(e)))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#5529: FILE: arch/frv/include/asm/pgtable.h:167:
+	printk("%s:%d: bad pgd %08lx.\n", __FILE__, __LINE__, pmd_val(pud_val(pgd_val(e))))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pteptr' - possible side-effects?
#5536: FILE: arch/frv/include/asm/pgtable.h:174:
+#define set_pte(pteptr, pteval)				\
+do {							\
+	*(pteptr) = (pteval);				\
+	asm volatile("dcf %M0" :: "U"(*pteptr));	\
+} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#5540: FILE: arch/frv/include/asm/pgtable.h:178:
+} while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#5541: FILE: arch/frv/include/asm/pgtable.h:179:
+#define set_pte_at(mm,addr,ptep,pteval) set_pte(ptep,pteval)
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#5541: FILE: arch/frv/include/asm/pgtable.h:179:
+#define set_pte_at(mm,addr,ptep,pteval) set_pte(ptep,pteval)
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#5541: FILE: arch/frv/include/asm/pgtable.h:179:
+#define set_pte_at(mm,addr,ptep,pteval) set_pte(ptep,pteval)
                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#5541: FILE: arch/frv/include/asm/pgtable.h:179:
+#define set_pte_at(mm,addr,ptep,pteval) set_pte(ptep,pteval)
                                                     ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'pgdptr' - possible side-effects?
#5570: FILE: arch/frv/include/asm/pgtable.h:208:
+#define set_pgd(pgdptr, pgdval)				\
+do {							\
+	memcpy((pgdptr), &(pgdval), sizeof(pgd_t));	\
+	asm volatile("dcf %M0" :: "U"(*(pgdptr)));	\
+} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#5574: FILE: arch/frv/include/asm/pgtable.h:212:
+} while(0)

CHECK:SPACING: No space is necessary after a cast
#5578: FILE: arch/frv/include/asm/pgtable.h:216:
+	return (pud_t *) pgd;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5617: FILE: arch/frv/include/asm/pgtable.h:255:
+extern void __set_pmd(pmd_t *pmdptr, unsigned long __pmd);

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#5619: FILE: arch/frv/include/asm/pgtable.h:257:
+#define set_pmd(pmdptr, pmdval)			\
+do {						\
+	__set_pmd((pmdptr), (pmdval).ste[0]);	\
+} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#5622: FILE: arch/frv/include/asm/pgtable.h:260:
+} while(0)

CHECK:SPACING: No space is necessary after a cast
#5628: FILE: arch/frv/include/asm/pgtable.h:266:
+	return (pmd_t *) dir + __pmd_index(address);

CHECK:SPACING: No space is necessary after a cast
#5638: FILE: arch/frv/include/asm/pgtable.h:276:
+#define VMALLOC_VMADDR(x)	((unsigned long) (x))

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_V_BIT>
#5645: FILE: arch/frv/include/asm/pgtable.h:283:
+#define _PAGE_BIT_PRESENT	xAMPRx_V_BIT

CHECK:CAMELCASE: Avoid CamelCase: <DAMPRx_WP_BIT>
#5646: FILE: arch/frv/include/asm/pgtable.h:284:
+#define _PAGE_BIT_WP		DAMPRx_WP_BIT

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_C_BIT>
#5647: FILE: arch/frv/include/asm/pgtable.h:285:
+#define _PAGE_BIT_NOCACHE	xAMPRx_C_BIT

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_S_BIT>
#5648: FILE: arch/frv/include/asm/pgtable.h:286:
+#define _PAGE_BIT_SUPER		xAMPRx_S_BIT

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_RESERVED8_BIT>
#5649: FILE: arch/frv/include/asm/pgtable.h:287:
+#define _PAGE_BIT_ACCESSED	xAMPRx_RESERVED8_BIT

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_M_BIT>
#5650: FILE: arch/frv/include/asm/pgtable.h:288:
+#define _PAGE_BIT_DIRTY		xAMPRx_M_BIT

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_NG_BIT>
#5651: FILE: arch/frv/include/asm/pgtable.h:289:
+#define _PAGE_BIT_NOTGLOBAL	xAMPRx_NG_BIT

CHECK:CAMELCASE: Avoid CamelCase: <DAMPRx_WP>
#5654: FILE: arch/frv/include/asm/pgtable.h:292:
+#define _PAGE_WP		DAMPRx_WP

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_C>
#5655: FILE: arch/frv/include/asm/pgtable.h:293:
+#define _PAGE_NOCACHE		xAMPRx_C

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_RESERVED8>
#5657: FILE: arch/frv/include/asm/pgtable.h:295:
+#define _PAGE_ACCESSED		xAMPRx_RESERVED8	/* accessed if set */

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_NG>
#5659: FILE: arch/frv/include/asm/pgtable.h:297:
+#define _PAGE_NOTGLOBAL		xAMPRx_NG

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_RESERVED13>
#5661: FILE: arch/frv/include/asm/pgtable.h:299:
+#define _PAGE_RESERVED_MASK	(xAMPRx_RESERVED8 | xAMPRx_RESERVED13)

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_D>
#5669: FILE: arch/frv/include/asm/pgtable.h:307:
+	(_PAGE_PRESENT | xAMPRx_SS_16Kb | xAMPRx_D | _PAGE_NOTGLOBAL | _PAGE_ACCESSED)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#5720: FILE: arch/frv/include/asm/pgtable.h:358:
+#define pte_clear(mm,addr,xp)	do { set_pte_at(mm, addr, xp, __pte(0)); } while (0)
                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#5720: FILE: arch/frv/include/asm/pgtable.h:358:
+#define pte_clear(mm,addr,xp)	do { set_pte_at(mm, addr, xp, __pte(0)); } while (0)
                          ^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#5720: FILE: arch/frv/include/asm/pgtable.h:358:
+#define pte_clear(mm,addr,xp)	do { set_pte_at(mm, addr, xp, __pte(0)); } while (0)

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_SS>
#5724: FILE: arch/frv/include/asm/pgtable.h:362:
+#define	pmd_bad(x)	(pmd_val(x) & xAMPRx_SS)

ERROR:SPACING: space required before the open parenthesis '('
#5725: FILE: arch/frv/include/asm/pgtable.h:363:
+#define pmd_clear(xp)	do { __set_pmd(xp, 0); } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#5725: FILE: arch/frv/include/asm/pgtable.h:363:
+#define pmd_clear(xp)	do { __set_pmd(xp, 0); } while(0)

CHECK:SPACING: No space is necessary after a cast
#5728: FILE: arch/frv/include/asm/pgtable.h:366:
+	((unsigned long) __va(pmd_val(pmd) & PAGE_MASK))

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#5734: FILE: arch/frv/include/asm/pgtable.h:372:
+#define pages_to_mb(x) ((x) >> (20-PAGE_SHIFT))
                                   ^

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#5753: FILE: arch/frv/include/asm/pgtable.h:391:
+static inline int ptep_test_and_clear_young(struct vm_area_struct *vma, unsigned long addr, pte_t *ptep)

WARNING:LINE_SPACING: Missing a blank line after declarations
#5756: FILE: arch/frv/include/asm/pgtable.h:394:
+	int i = test_and_clear_bit(_PAGE_BIT_ACCESSED, ptep);
+	asm volatile("dcf %M0" :: "U"(*ptep));

WARNING:LINE_SPACING: Missing a blank line after declarations
#5763: FILE: arch/frv/include/asm/pgtable.h:401:
+	unsigned long x = xchg(&ptep->pte, 0);
+	asm volatile("dcf %M0" :: "U"(*ptep));

CHECK:SPACING: No space is necessary after a cast
#5812: FILE: arch/frv/include/asm/pgtable.h:450:
+	((pte_t *) pmd_page_vaddr(*(dir)) +  pte_index(address))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#5816: FILE: arch/frv/include/asm/pgtable.h:454:
+	((pte_t *)kmap_atomic(pmd_page(*(dir)),KM_PTE0) + pte_index(address))
 	                                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#5818: FILE: arch/frv/include/asm/pgtable.h:456:
+	((pte_t *)kmap_atomic(pmd_page(*(dir)),KM_PTE1) + pte_index(address))
 	                                      ^

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5899: FILE: arch/frv/include/asm/pgtable.h:537:
+extern char *proc_pid_status_frv_cxnr(struct mm_struct *mm, char *buffer);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5902: FILE: arch/frv/include/asm/pgtable.h:540:
+extern void __init pgtable_cache_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#5908: FILE: arch/frv/include/asm/pgtable.h:546:
+extern void __init paging_init(void);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#5918: FILE: arch/frv/include/asm/poll.h:1:
+#ifndef _ASM_POLL_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#5936: FILE: arch/frv/include/asm/posix_types.h:1:
+#ifndef _ASM_POSIX_TYPES_H

WARNING:NEW_TYPEDEFS: do not add new typedefs
#5945: FILE: arch/frv/include/asm/posix_types.h:10:
+typedef unsigned long	__kernel_ino_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#5946: FILE: arch/frv/include/asm/posix_types.h:11:
+typedef unsigned short	__kernel_mode_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#5947: FILE: arch/frv/include/asm/posix_types.h:12:
+typedef unsigned short	__kernel_nlink_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#5948: FILE: arch/frv/include/asm/posix_types.h:13:
+typedef long		__kernel_off_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#5949: FILE: arch/frv/include/asm/posix_types.h:14:
+typedef int		__kernel_pid_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#5950: FILE: arch/frv/include/asm/posix_types.h:15:
+typedef unsigned short	__kernel_ipc_pid_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#5951: FILE: arch/frv/include/asm/posix_types.h:16:
+typedef unsigned short	__kernel_uid_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#5952: FILE: arch/frv/include/asm/posix_types.h:17:
+typedef unsigned short	__kernel_gid_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#5953: FILE: arch/frv/include/asm/posix_types.h:18:
+typedef unsigned int	__kernel_size_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#5954: FILE: arch/frv/include/asm/posix_types.h:19:
+typedef int		__kernel_ssize_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#5955: FILE: arch/frv/include/asm/posix_types.h:20:
+typedef int		__kernel_ptrdiff_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#5956: FILE: arch/frv/include/asm/posix_types.h:21:
+typedef long		__kernel_time_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#5957: FILE: arch/frv/include/asm/posix_types.h:22:
+typedef long		__kernel_suseconds_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#5958: FILE: arch/frv/include/asm/posix_types.h:23:
+typedef long		__kernel_clock_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#5959: FILE: arch/frv/include/asm/posix_types.h:24:
+typedef int		__kernel_timer_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#5960: FILE: arch/frv/include/asm/posix_types.h:25:
+typedef int		__kernel_clockid_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#5961: FILE: arch/frv/include/asm/posix_types.h:26:
+typedef int		__kernel_daddr_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#5962: FILE: arch/frv/include/asm/posix_types.h:27:
+typedef char *		__kernel_caddr_t;

ERROR:POINTER_LOCATION: "foo *		bar" should be "foo *bar"
#5962: FILE: arch/frv/include/asm/posix_types.h:27:
+typedef char *		__kernel_caddr_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#5963: FILE: arch/frv/include/asm/posix_types.h:28:
+typedef unsigned short	__kernel_uid16_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#5964: FILE: arch/frv/include/asm/posix_types.h:29:
+typedef unsigned short	__kernel_gid16_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#5965: FILE: arch/frv/include/asm/posix_types.h:30:
+typedef unsigned int	__kernel_uid32_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#5966: FILE: arch/frv/include/asm/posix_types.h:31:
+typedef unsigned int	__kernel_gid32_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#5968: FILE: arch/frv/include/asm/posix_types.h:33:
+typedef unsigned short	__kernel_old_uid_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#5969: FILE: arch/frv/include/asm/posix_types.h:34:
+typedef unsigned short	__kernel_old_gid_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#5970: FILE: arch/frv/include/asm/posix_types.h:35:
+typedef unsigned short	__kernel_old_dev_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#5973: FILE: arch/frv/include/asm/posix_types.h:38:
+typedef long long	__kernel_loff_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#5976: FILE: arch/frv/include/asm/posix_types.h:41:
+typedef struct {

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'd' - possible side-effects?
#5983: FILE: arch/frv/include/asm/posix_types.h:48:
+#define	__FD_SET(d, set)	((set)->fds_bits[__FDELT(d)] |= __FDMASK(d))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'd' - possible side-effects?
#5986: FILE: arch/frv/include/asm/posix_types.h:51:
+#define	__FD_CLR(d, set)	((set)->fds_bits[__FDELT(d)] &= ~__FDMASK(d))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'd' - possible side-effects?
#5989: FILE: arch/frv/include/asm/posix_types.h:54:
+#define	__FD_ISSET(d, set)	(!!((set)->fds_bits[__FDELT(d)] & __FDMASK(d)))

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#5992: FILE: arch/frv/include/asm/posix_types.h:57:
+#define __FD_ZERO(fdsetp) (memset (fdsetp, 0, sizeof(*(fd_set *)fdsetp)))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'fdsetp' - possible side-effects?
#5992: FILE: arch/frv/include/asm/posix_types.h:57:
+#define __FD_ZERO(fdsetp) (memset (fdsetp, 0, sizeof(*(fd_set *)fdsetp)))

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#6004: FILE: arch/frv/include/asm/processor.h:1:
+/* processor.h: FRV processor definitions

ERROR:SPACING: space required after that ';' (ctx:VxV)
#6025: FILE: arch/frv/include/asm/processor.h:22:
+#define current_text_addr() ({ __label__ _l; _l: &&_l;})
                                                      ^

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/cache.h> instead of <asm/cache.h>
#6035: FILE: arch/frv/include/asm/processor.h:32:
+#include <asm/cache.h>

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(8) over __attribute__((aligned(8)))
#6076: FILE: arch/frv/include/asm/processor.h:73:
+} __attribute__((aligned(8)));

CHECK:SPACING: No space is necessary after a cast
#6086: FILE: arch/frv/include/asm/processor.h:83:
+	(sizeof(init_stack) + (unsigned long) init_stack - sizeof(struct user_context)))

CHECK:SPACING: No space is necessary after a cast
#6090: FILE: arch/frv/include/asm/processor.h:87:
+	(struct task_struct *) init_stack,	\

ERROR:SPACING: space required before the open parenthesis '('
#6108: FILE: arch/frv/include/asm/processor.h:105:
+} while(0)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6110: FILE: arch/frv/include/asm/processor.h:107:
+extern void prepare_to_copy(struct task_struct *tsk);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#6117: FILE: arch/frv/include/asm/processor.h:114:
+extern asmlinkage int kernel_thread(int (*fn)(void *), void * arg, unsigned long flags);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6135: FILE: arch/frv/include/asm/processor.h:132:
+extern unsigned long thread_saved_pc(struct task_struct *tsk);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6143: FILE: arch/frv/include/asm/processor.h:140:
+extern struct task_struct *alloc_task_struct(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6144: FILE: arch/frv/include/asm/processor.h:141:
+extern void free_task_struct(struct task_struct *p);

ERROR:DEFINE_ARCH_HAS: #define of 'ARCH_HAS_PREFETCH' is wrong - use Kconfig variables or standard guards instead
#6149: FILE: arch/frv/include/asm/processor.h:146:
+#define ARCH_HAS_PREFETCH

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#6163: FILE: arch/frv/include/asm/ptrace.h:1:
+/* ptrace.h: ptrace() relevant definitions

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6183: FILE: arch/frv/include/asm/ptrace.h:21:
+
+

ERROR:SPACING: space prohibited after that open parenthesis '('
#6200: FILE: arch/frv/include/asm/ptrace.h:38:
+#define PT_GR(j)	( 14 + (j))	/* GRj for 0<=j<=63 */

ERROR:SPACING: space prohibited after that open parenthesis '('
#6201: FILE: arch/frv/include/asm/ptrace.h:39:
+#define PT_FR(j)	( 78 + (j))	/* FRj for 0<=j<=63 */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6216: FILE: arch/frv/include/asm/ptrace.h:54:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6239: FILE: arch/frv/include/asm/ptrace.h:77:
+extern unsigned long user_stack(const struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const struct pt_regs *' should also have an identifier name
#6239: FILE: arch/frv/include/asm/ptrace.h:77:
+extern unsigned long user_stack(const struct pt_regs *);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#6240: FILE: arch/frv/include/asm/ptrace.h:78:
+extern void show_regs(struct pt_regs *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct pt_regs *' should also have an identifier name
#6240: FILE: arch/frv/include/asm/ptrace.h:78:
+extern void show_regs(struct pt_regs *);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#6252: FILE: arch/frv/include/asm/registers.h:1:
+/* registers.h: register frame declarations

ERROR:SPACING: space required after that ',' (ctx:VxV)
#6311: FILE: arch/frv/include/asm/registers.h:60:
+#define __OFFSET(X,N)	((X)+(N)*4)
                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#6311: FILE: arch/frv/include/asm/registers.h:60:
+#define __OFFSET(X,N)	((X)+(N)*4)
                      	    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#6311: FILE: arch/frv/include/asm/registers.h:60:
+#define __OFFSET(X,N)	((X)+(N)*4)
                      	        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#6312: FILE: arch/frv/include/asm/registers.h:61:
+#define __OFFSETC(X,N)	xxxxxxxxxxxxxxxxxxxxxxxx
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#6314: FILE: arch/frv/include/asm/registers.h:63:
+#define __OFFSET(X,N)	((X)+(N)*4)
                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#6314: FILE: arch/frv/include/asm/registers.h:63:
+#define __OFFSET(X,N)	((X)+(N)*4)
                      	    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#6314: FILE: arch/frv/include/asm/registers.h:63:
+#define __OFFSET(X,N)	((X)+(N)*4)
                      	        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#6315: FILE: arch/frv/include/asm/registers.h:64:
+#define __OFFSETC(X,N)	((X)+(N))
                    ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#6315: FILE: arch/frv/include/asm/registers.h:64:
+#define __OFFSETC(X,N)	((X)+(N))
                       	    ^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(8) over __attribute__((aligned(8)))
#6373: FILE: arch/frv/include/asm/registers.h:122:
+} __attribute__((aligned(8)));

WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#6377: FILE: arch/frv/include/asm/registers.h:126:
+#define REG__STATUS_STEP	0x00000001	/* - reenable single stepping on return */
                         	          	     ^^^^^^^^

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#6397: FILE: arch/frv/include/asm/registers.h:146:
+struct frv_debug_regs
+{

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(8) over __attribute__((aligned(8)))
#6399: FILE: arch/frv/include/asm/registers.h:148:
+	unsigned long		ibar[4] __attribute__((aligned(8)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(8) over __attribute__((aligned(8)))
#6400: FILE: arch/frv/include/asm/registers.h:149:
+	unsigned long		dbar[4] __attribute__((aligned(8)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(8) over __attribute__((aligned(8)))
#6401: FILE: arch/frv/include/asm/registers.h:150:
+	unsigned long		dbdr[4][4] __attribute__((aligned(8)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(8) over __attribute__((aligned(8)))
#6402: FILE: arch/frv/include/asm/registers.h:151:
+	unsigned long		dbmr[4][4] __attribute__((aligned(8)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(8) over __attribute__((aligned(8)))
#6403: FILE: arch/frv/include/asm/registers.h:152:
+} __attribute__((aligned(8)));

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#6414: FILE: arch/frv/include/asm/registers.h:163:
+struct user_int_regs
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#6439: FILE: arch/frv/include/asm/registers.h:188:
+struct user_fpmedia_regs
+{

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#6450: FILE: arch/frv/include/asm/registers.h:199:
+struct user_context
+{

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(8) over __attribute__((aligned(8)))
#6458: FILE: arch/frv/include/asm/registers.h:207:
+} __attribute__((aligned(8)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(32) over __attribute__((aligned(32)))
#6468: FILE: arch/frv/include/asm/registers.h:217:
+} __attribute__((aligned(32)));

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#6490: FILE: arch/frv/include/asm/resource.h:1:
+#ifndef _ASM_RESOURCE_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#6503: FILE: arch/frv/include/asm/scatterlist.h:1:
+#ifndef _ASM_SCATTERLIST_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#6555: FILE: arch/frv/include/asm/sections.h:1:
+/* sections.h: linkage layout variables

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".data") over __attribute__((section(".data")))
#6580: FILE: arch/frv/include/asm/sections.h:26:
+#define __nongpreldata	__attribute__((section(".data")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".bss") over __attribute__((section(".bss")))
#6581: FILE: arch/frv/include/asm/sections.h:27:
+#define __nongprelbss	__attribute__((section(".bss")))

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#6607: FILE: arch/frv/include/asm/segment.h:1:
+/* segment.h: MMU segment settings

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6621: FILE: arch/frv/include/asm/segment.h:15:
+
+

WARNING:NEW_TYPEDEFS: do not add new typedefs
#6624: FILE: arch/frv/include/asm/segment.h:18:
+typedef struct {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#6640: FILE: arch/frv/include/asm/segment.h:34:
+#define segment_eq(a,b)		((a).seg == (b).seg)
                     ^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#6644: FILE: arch/frv/include/asm/segment.h:38:
+#define set_fs(_x)					\
+do {							\
+	__current_thread_info->addr_limit = (_x);	\
+} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#6647: FILE: arch/frv/include/asm/segment.h:41:
+} while(0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6649: FILE: arch/frv/include/asm/segment.h:43:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#6658: FILE: arch/frv/include/asm/sembuf.h:1:
+#ifndef _ASM_SEMBUF_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#6690: FILE: arch/frv/include/asm/serial-regs.h:1:
+/* serial-regs.h: serial port registers

ERROR:SPACING: space required after that ',' (ctx:VxV)
#6713: FILE: arch/frv/include/asm/serial-regs.h:24:
+#define __set_UART0(R,V) do { __reg(UART0_BASE + (R) * 8) = (V) << 24; } while(0)
                      ^

ERROR:SPACING: space required before the open parenthesis '('
#6713: FILE: arch/frv/include/asm/serial-regs.h:24:
+#define __set_UART0(R,V) do { __reg(UART0_BASE + (R) * 8) = (V) << 24; } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#6713: FILE: arch/frv/include/asm/serial-regs.h:24:
+#define __set_UART0(R,V) do { __reg(UART0_BASE + (R) * 8) = (V) << 24; } while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#6714: FILE: arch/frv/include/asm/serial-regs.h:25:
+#define __set_UART1(R,V) do { __reg(UART1_BASE + (R) * 8) = (V) << 24; } while(0)
                      ^

ERROR:SPACING: space required before the open parenthesis '('
#6714: FILE: arch/frv/include/asm/serial-regs.h:25:
+#define __set_UART1(R,V) do { __reg(UART1_BASE + (R) * 8) = (V) << 24; } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#6714: FILE: arch/frv/include/asm/serial-regs.h:25:
+#define __set_UART1(R,V) do { __reg(UART1_BASE + (R) * 8) = (V) << 24; } while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#6719: FILE: arch/frv/include/asm/serial-regs.h:30:
+#define __set_UART0_IER(V) __set_UART0(UART_IER,(V))
                                                ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#6720: FILE: arch/frv/include/asm/serial-regs.h:31:
+#define __set_UART1_IER(V) __set_UART1(UART_IER,(V))
                                                ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#6723: FILE: arch/frv/include/asm/serial-regs.h:34:
+#define __get_UCPSR()	({ *(volatile unsigned long *)(0xfeff9c90); })

ERROR:SPACING: space required before the open parenthesis '('
#6724: FILE: arch/frv/include/asm/serial-regs.h:35:
+#define __set_UCPSR(V)	do { *(volatile unsigned long *)(0xfeff9c90) = (V); } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#6724: FILE: arch/frv/include/asm/serial-regs.h:35:
+#define __set_UCPSR(V)	do { *(volatile unsigned long *)(0xfeff9c90) = (V); } while(0)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#6724: FILE: arch/frv/include/asm/serial-regs.h:35:
+#define __set_UCPSR(V)	do { *(volatile unsigned long *)(0xfeff9c90) = (V); } while(0)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#6729: FILE: arch/frv/include/asm/serial-regs.h:40:
+#define __get_UCPVR()	({ *(volatile unsigned long *)(0xfeff9c98); mb(); })

ERROR:SPACING: space required before the open parenthesis '('
#6730: FILE: arch/frv/include/asm/serial-regs.h:41:
+#define __set_UCPVR(V)	do { *(volatile unsigned long *)(0xfeff9c98) = (V) << 24; mb(); } while(0)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#6730: FILE: arch/frv/include/asm/serial-regs.h:41:
+#define __set_UCPVR(V)	do { *(volatile unsigned long *)(0xfeff9c98) = (V) << 24; mb(); } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#6730: FILE: arch/frv/include/asm/serial-regs.h:41:
+#define __set_UCPVR(V)	do { *(volatile unsigned long *)(0xfeff9c98) = (V) << 24; mb(); } while(0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#6732: FILE: arch/frv/include/asm/serial-regs.h:43:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#6740: FILE: arch/frv/include/asm/serial.h:1:
+/*

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#6764: FILE: arch/frv/include/asm/setup.h:1:
+/* setup.h: setup stuff

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#6801: FILE: arch/frv/include/asm/shmbuf.h:1:
+#ifndef _ASM_SHMBUF_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#6850: FILE: arch/frv/include/asm/shmparam.h:1:
+#ifndef _ASM_SHMPARAM_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#6863: FILE: arch/frv/include/asm/sigcontext.h:1:
+/* sigcontext.h: FRV signal context

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#6885: FILE: arch/frv/include/asm/sigcontext.h:23:
+^Iunsigned long^I^Isc_oldmask; ^I/* old sigmask */$

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(8) over __attribute__((aligned(8)))
#6886: FILE: arch/frv/include/asm/sigcontext.h:24:
+} __attribute__((aligned(8)));

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#6895: FILE: arch/frv/include/asm/siginfo.h:1:
+#ifndef _ASM_SIGINFO_H

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#6901: FILE: arch/frv/include/asm/siginfo.h:7:
+#define FPE_MDAOVF	(__SI_FAULT|9)	/* media overflow */
                   	           ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#6913: FILE: arch/frv/include/asm/signal.h:1:
+#ifndef _ASM_SIGNAL_H

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#6923: FILE: arch/frv/include/asm/signal.h:11:
+/* Most things should be clean enough to redefine this at will, if care
+   is taken to make libc match.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#6923: FILE: arch/frv/include/asm/signal.h:11:
+   is taken to make libc match.  */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#6929: FILE: arch/frv/include/asm/signal.h:17:
+typedef unsigned long old_sigset_t;		/* at least 32 bits */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#6931: FILE: arch/frv/include/asm/signal.h:19:
+typedef struct {

WARNING:NEW_TYPEDEFS: do not add new typedefs
#6939: FILE: arch/frv/include/asm/signal.h:27:
+typedef unsigned long sigset_t;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#6975: FILE: arch/frv/include/asm/signal.h:63:
+/*
+#define SIGLOST		29

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#6983: FILE: arch/frv/include/asm/signal.h:71:
+#define SIGRTMAX	(_NSIG-1)
                 	      ^

WARNING:TABSTOP: Statements should start on a tabstop
#7045: FILE: arch/frv/include/asm/signal.h:133:
+	  __sighandler_t _sa_handler;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#7046: FILE: arch/frv/include/asm/signal.h:134:
+	  void (*_sa_sigaction)(int, struct siginfo *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct siginfo *' should also have an identifier name
#7046: FILE: arch/frv/include/asm/signal.h:134:
+	  void (*_sa_sigaction)(int, struct siginfo *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#7046: FILE: arch/frv/include/asm/signal.h:134:
+	  void (*_sa_sigaction)(int, struct siginfo *, void *);

WARNING:NEW_TYPEDEFS: do not add new typedefs
#7058: FILE: arch/frv/include/asm/signal.h:146:
+typedef struct sigaltstack {

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#7080: FILE: arch/frv/include/asm/smp.h:1:
+#ifndef __ASM_SMP_H

CHECK:LINE_SPACING: Please don't use multiple blank lines
#7083: FILE: arch/frv/include/asm/smp.h:4:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#7095: FILE: arch/frv/include/asm/socket.h:1:
+#ifndef _ASM_SOCKET_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#7162: FILE: arch/frv/include/asm/sockios.h:1:
+#ifndef _ASM_SOCKIOS__

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#7166: FILE: arch/frv/include/asm/sockios.h:5:
+#define FIOSETOWN ^I0x8901$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#7182: FILE: arch/frv/include/asm/spinlock.h:1:
+/* spinlock.h: spinlocks for FR-V

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#7205: FILE: arch/frv/include/asm/spr-regs.h:1:
+/* spr-regs.h: special-purpose registers on the FRV

ERROR:SPACING: space required before the open parenthesis '('
#7263: FILE: arch/frv/include/asm/spr-regs.h:59:
+#define __set_PSR(V)	do { asm volatile("movgs %0,psr" : : "r"(V)); } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#7263: FILE: arch/frv/include/asm/spr-regs.h:59:
+#define __set_PSR(V)	do { asm volatile("movgs %0,psr" : : "r"(V)); } while(0)

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#7362: FILE: arch/frv/include/asm/spr-regs.h:158:
+#define __get_HSR(R)	({ unsigned long x; asm volatile("movsg hsr"#R",%0" : "=r"(x)); x; })

ERROR:SPACING: space required after that ',' (ctx:VxV)
#7363: FILE: arch/frv/include/asm/spr-regs.h:159:
+#define __set_HSR(R,V)	do { asm volatile("movgs %0,hsr"#R : : "r"(V)); } while(0)
                    ^

ERROR:SPACING: space required before the open parenthesis '('
#7363: FILE: arch/frv/include/asm/spr-regs.h:159:
+#define __set_HSR(R,V)	do { asm volatile("movgs %0,hsr"#R : : "r"(V)); } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#7363: FILE: arch/frv/include/asm/spr-regs.h:159:
+#define __set_HSR(R,V)	do { asm volatile("movgs %0,hsr"#R : : "r"(V)); } while(0)

CHECK:CAMELCASE: Avoid CamelCase: <ESRx_VALID>
#7419: FILE: arch/frv/include/asm/spr-regs.h:215:
+#define ESRx_VALID		0x00000001	/* register content validity indicator */

CHECK:CAMELCASE: Avoid CamelCase: <ESRx_EC>
#7420: FILE: arch/frv/include/asm/spr-regs.h:216:
+#define ESRx_EC			0x0000003e	/* exception type */

CHECK:CAMELCASE: Avoid CamelCase: <ESRx_EC_DATA_STORE>
#7421: FILE: arch/frv/include/asm/spr-regs.h:217:
+#define ESRx_EC_DATA_STORE	0x00000000	/* - data_store_error */

CHECK:CAMELCASE: Avoid CamelCase: <ESRx_EC_INSN_ACCESS>
#7422: FILE: arch/frv/include/asm/spr-regs.h:218:
+#define ESRx_EC_INSN_ACCESS	0x00000006	/* - instruction_access_error */

CHECK:CAMELCASE: Avoid CamelCase: <ESRx_EC_PRIV_INSN>
#7423: FILE: arch/frv/include/asm/spr-regs.h:219:
+#define ESRx_EC_PRIV_INSN	0x00000008	/* - privileged_instruction */

CHECK:CAMELCASE: Avoid CamelCase: <ESRx_EC_ILL_INSN>
#7424: FILE: arch/frv/include/asm/spr-regs.h:220:
+#define ESRx_EC_ILL_INSN	0x0000000a	/* - illegal_instruction */

CHECK:CAMELCASE: Avoid CamelCase: <ESRx_EC_MP_EXCEP>
#7425: FILE: arch/frv/include/asm/spr-regs.h:221:
+#define ESRx_EC_MP_EXCEP	0x0000001c	/* - mp_exception */

CHECK:CAMELCASE: Avoid CamelCase: <ESRx_EC_DATA_ACCESS>
#7426: FILE: arch/frv/include/asm/spr-regs.h:222:
+#define ESRx_EC_DATA_ACCESS	0x00000020	/* - data_access_error */

CHECK:CAMELCASE: Avoid CamelCase: <ESRx_EC_DIVISION>
#7427: FILE: arch/frv/include/asm/spr-regs.h:223:
+#define ESRx_EC_DIVISION	0x00000026	/* - division_exception */

CHECK:CAMELCASE: Avoid CamelCase: <ESRx_EC_ITLB_MISS>
#7428: FILE: arch/frv/include/asm/spr-regs.h:224:
+#define ESRx_EC_ITLB_MISS	0x00000034	/* - instruction_access_TLB_miss */

CHECK:CAMELCASE: Avoid CamelCase: <ESRx_EC_DTLB_MISS>
#7429: FILE: arch/frv/include/asm/spr-regs.h:225:
+#define ESRx_EC_DTLB_MISS	0x00000036	/* - data_access_TLB_miss */

CHECK:CAMELCASE: Avoid CamelCase: <ESRx_EC_DATA_ACCESS_DAT>
#7430: FILE: arch/frv/include/asm/spr-regs.h:226:
+#define ESRx_EC_DATA_ACCESS_DAT	0x0000003a	/* - data_access_DAT_exception */

CHECK:CAMELCASE: Avoid CamelCase: <MSRx_OVF>
#7458: FILE: arch/frv/include/asm/spr-regs.h:254:
+#define MSRx_OVF		0x00000002	/* overflow exception detected */

CHECK:CAMELCASE: Avoid CamelCase: <MSRx_SIE>
#7459: FILE: arch/frv/include/asm/spr-regs.h:255:
+#define MSRx_SIE		0x0000003c	/* last SIMD instruction exception detected */

CHECK:CAMELCASE: Avoid CamelCase: <MSRx_SIE_NONE>
#7460: FILE: arch/frv/include/asm/spr-regs.h:256:
+#define MSRx_SIE_NONE		0x00000000	/* - none detected */

CHECK:CAMELCASE: Avoid CamelCase: <MSRx_SIE_FRkHI_ACCk>
#7461: FILE: arch/frv/include/asm/spr-regs.h:257:
+#define MSRx_SIE_FRkHI_ACCk	0x00000020	/* - exception at FRkHI or ACCk */

CHECK:CAMELCASE: Avoid CamelCase: <MSRx_SIE_FRkLO_ACCk1>
#7462: FILE: arch/frv/include/asm/spr-regs.h:258:
+#define MSRx_SIE_FRkLO_ACCk1	0x00000010	/* - exception at FRkLO or ACCk+1 */

CHECK:CAMELCASE: Avoid CamelCase: <MSRx_SIE_FRk1HI_ACCk2>
#7463: FILE: arch/frv/include/asm/spr-regs.h:259:
+#define MSRx_SIE_FRk1HI_ACCk2	0x00000008	/* - exception at FRk+1HI or ACCk+2 */

CHECK:CAMELCASE: Avoid CamelCase: <MSRx_SIE_FRk1LO_ACCk3>
#7464: FILE: arch/frv/include/asm/spr-regs.h:260:
+#define MSRx_SIE_FRk1LO_ACCk3	0x00000004	/* - exception at FRk+1LO or ACCk+3 */

WARNING:TYPO_SPELLING: 'postive' may be misspelled - perhaps 'positive'?
#7481: FILE: arch/frv/include/asm/spr-regs.h:277:
+#define MSR0_RD_POS_INF		0x80000000	/* - postive infinity */
                        		          	     ^^^^^^^

CHECK:CAMELCASE: Avoid CamelCase: <DAMPRx_WP_RW>
#7490: FILE: arch/frv/include/asm/spr-regs.h:286:
+#define DAMPRx_WP_RW		0x00000000	/* - read/write */

CHECK:CAMELCASE: Avoid CamelCase: <DAMPRx_WP_RO>
#7491: FILE: arch/frv/include/asm/spr-regs.h:287:
+#define DAMPRx_WP_RO		0x00000002	/* - read-only */

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_C_CACHED>
#7493: FILE: arch/frv/include/asm/spr-regs.h:289:
+#define xAMPRx_C_CACHED		0x00000000	/* - cached */

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_C_UNCACHED>
#7494: FILE: arch/frv/include/asm/spr-regs.h:290:
+#define xAMPRx_C_UNCACHED	0x00000004	/* - uncached */

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_S_USER>
#7496: FILE: arch/frv/include/asm/spr-regs.h:292:
+#define xAMPRx_S_USER		0x00000000	/* - userspace can access */

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_S_KERNEL>
#7497: FILE: arch/frv/include/asm/spr-regs.h:293:
+#define xAMPRx_S_KERNEL		0x00000008	/* - kernel only */

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_SS_64Kb>
#7500: FILE: arch/frv/include/asm/spr-regs.h:296:
+#define xAMPRx_SS_64Kb		0x00000010	/* - 64 kilobytes */

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_SS_256Kb>
#7501: FILE: arch/frv/include/asm/spr-regs.h:297:
+#define xAMPRx_SS_256Kb		0x00000020	/* - 256 kilobytes */

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_SS_1Mb>
#7502: FILE: arch/frv/include/asm/spr-regs.h:298:
+#define xAMPRx_SS_1Mb		0x00000030	/* - 1 megabyte */

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_SS_2Mb>
#7503: FILE: arch/frv/include/asm/spr-regs.h:299:
+#define xAMPRx_SS_2Mb		0x00000040	/* - 2 megabytes */

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_SS_4Mb>
#7504: FILE: arch/frv/include/asm/spr-regs.h:300:
+#define xAMPRx_SS_4Mb		0x00000050	/* - 4 megabytes */

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_SS_8Mb>
#7505: FILE: arch/frv/include/asm/spr-regs.h:301:
+#define xAMPRx_SS_8Mb		0x00000060	/* - 8 megabytes */

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_SS_16Mb>
#7506: FILE: arch/frv/include/asm/spr-regs.h:302:
+#define xAMPRx_SS_16Mb		0x00000070	/* - 16 megabytes */

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_SS_32Mb>
#7507: FILE: arch/frv/include/asm/spr-regs.h:303:
+#define xAMPRx_SS_32Mb		0x00000080	/* - 32 megabytes */

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_SS_64Mb>
#7508: FILE: arch/frv/include/asm/spr-regs.h:304:
+#define xAMPRx_SS_64Mb		0x00000090	/* - 64 megabytes */

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_SS_128Mb>
#7509: FILE: arch/frv/include/asm/spr-regs.h:305:
+#define xAMPRx_SS_128Mb		0x000000a0	/* - 128 megabytes */

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_SS_256Mb>
#7510: FILE: arch/frv/include/asm/spr-regs.h:306:
+#define xAMPRx_SS_256Mb		0x000000b0	/* - 256 megabytes */

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_SS_512Mb>
#7511: FILE: arch/frv/include/asm/spr-regs.h:307:
+#define xAMPRx_SS_512Mb		0x000000c0	/* - 512 megabytes */

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_PPFN>
#7518: FILE: arch/frv/include/asm/spr-regs.h:314:
+#define xAMPRx_PPFN		0xfff00000	/* physical page frame number */

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_L_BIT>
#7526: FILE: arch/frv/include/asm/spr-regs.h:322:
+#define xAMPRx_L_BIT		10

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_D_BIT>
#7528: FILE: arch/frv/include/asm/spr-regs.h:324:
+#define xAMPRx_D_BIT		12

CHECK:CAMELCASE: Avoid CamelCase: <xAMPRx_RESERVED13_BIT>
#7529: FILE: arch/frv/include/asm/spr-regs.h:325:
+#define xAMPRx_RESERVED13_BIT	13

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#7531: FILE: arch/frv/include/asm/spr-regs.h:327:
+#define __get_IAMPR(R) ({ unsigned long x; asm volatile("movsg iampr"#R",%0" : "=r"(x)); x; })

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#7532: FILE: arch/frv/include/asm/spr-regs.h:328:
+#define __get_DAMPR(R) ({ unsigned long x; asm volatile("movsg dampr"#R",%0" : "=r"(x)); x; })

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#7534: FILE: arch/frv/include/asm/spr-regs.h:330:
+#define __get_IAMLR(R) ({ unsigned long x; asm volatile("movsg iamlr"#R",%0" : "=r"(x)); x; })

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#7535: FILE: arch/frv/include/asm/spr-regs.h:331:
+#define __get_DAMLR(R) ({ unsigned long x; asm volatile("movsg damlr"#R",%0" : "=r"(x)); x; })

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#7537: FILE: arch/frv/include/asm/spr-regs.h:333:
+#define __set_IAMPR(R,V) ^Ido { asm volatile("movgs %0,iampr"#R : : "r"(V)); } while(0)$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#7537: FILE: arch/frv/include/asm/spr-regs.h:333:
+#define __set_IAMPR(R,V) 	do { asm volatile("movgs %0,iampr"#R : : "r"(V)); } while(0)
                      ^

ERROR:SPACING: space required before the open parenthesis '('
#7537: FILE: arch/frv/include/asm/spr-regs.h:333:
+#define __set_IAMPR(R,V) 	do { asm volatile("movgs %0,iampr"#R : : "r"(V)); } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#7537: FILE: arch/frv/include/asm/spr-regs.h:333:
+#define __set_IAMPR(R,V) 	do { asm volatile("movgs %0,iampr"#R : : "r"(V)); } while(0)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#7538: FILE: arch/frv/include/asm/spr-regs.h:334:
+#define __set_DAMPR(R,V)  ^Ido { asm volatile("movgs %0,dampr"#R : : "r"(V)); } while(0)$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#7538: FILE: arch/frv/include/asm/spr-regs.h:334:
+#define __set_DAMPR(R,V)  	do { asm volatile("movgs %0,dampr"#R : : "r"(V)); } while(0)
                      ^

ERROR:SPACING: space required before the open parenthesis '('
#7538: FILE: arch/frv/include/asm/spr-regs.h:334:
+#define __set_DAMPR(R,V)  	do { asm volatile("movgs %0,dampr"#R : : "r"(V)); } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#7538: FILE: arch/frv/include/asm/spr-regs.h:334:
+#define __set_DAMPR(R,V)  	do { asm volatile("movgs %0,dampr"#R : : "r"(V)); } while(0)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#7540: FILE: arch/frv/include/asm/spr-regs.h:336:
+#define __set_IAMLR(R,V) ^Ido { asm volatile("movgs %0,iamlr"#R : : "r"(V)); } while(0)$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#7540: FILE: arch/frv/include/asm/spr-regs.h:336:
+#define __set_IAMLR(R,V) 	do { asm volatile("movgs %0,iamlr"#R : : "r"(V)); } while(0)
                      ^

ERROR:SPACING: space required before the open parenthesis '('
#7540: FILE: arch/frv/include/asm/spr-regs.h:336:
+#define __set_IAMLR(R,V) 	do { asm volatile("movgs %0,iamlr"#R : : "r"(V)); } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#7540: FILE: arch/frv/include/asm/spr-regs.h:336:
+#define __set_IAMLR(R,V) 	do { asm volatile("movgs %0,iamlr"#R : : "r"(V)); } while(0)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#7541: FILE: arch/frv/include/asm/spr-regs.h:337:
+#define __set_DAMLR(R,V)  ^Ido { asm volatile("movgs %0,damlr"#R : : "r"(V)); } while(0)$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#7541: FILE: arch/frv/include/asm/spr-regs.h:337:
+#define __set_DAMLR(R,V)  	do { asm volatile("movgs %0,damlr"#R : : "r"(V)); } while(0)
                      ^

ERROR:SPACING: space required before the open parenthesis '('
#7541: FILE: arch/frv/include/asm/spr-regs.h:337:
+#define __set_DAMLR(R,V)  	do { asm volatile("movgs %0,damlr"#R : : "r"(V)); } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#7541: FILE: arch/frv/include/asm/spr-regs.h:337:
+#define __set_DAMLR(R,V)  	do { asm volatile("movgs %0,damlr"#R : : "r"(V)); } while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#7543: FILE: arch/frv/include/asm/spr-regs.h:339:
+#define save_dampr(R, _dampr)					\
+do {								\
+	asm volatile("movsg dampr"R",%0" : "=r"(_dampr));	\
+} while(0)

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#7545: FILE: arch/frv/include/asm/spr-regs.h:341:
+	asm volatile("movsg dampr"R",%0" : "=r"(_dampr));	\

ERROR:SPACING: space required before the open parenthesis '('
#7546: FILE: arch/frv/include/asm/spr-regs.h:342:
+} while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#7548: FILE: arch/frv/include/asm/spr-regs.h:344:
+#define restore_dampr(R, _dampr)			\
+do {							\
+	asm volatile("movgs %0,dampr"R :: "r"(_dampr));	\
+} while(0)

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#7550: FILE: arch/frv/include/asm/spr-regs.h:346:
+	asm volatile("movgs %0,dampr"R :: "r"(_dampr));	\

ERROR:SPACING: space required before the open parenthesis '('
#7551: FILE: arch/frv/include/asm/spr-regs.h:347:
+} while(0)

CHECK:CAMELCASE: Avoid CamelCase: <BRR_DBNEx>
#7608: FILE: arch/frv/include/asm/spr-regs.h:404:
+#define BRR_DBNEx		0x0000f000	/* ? */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#7627: FILE: arch/frv/include/asm/stat.h:1:
+#ifndef _ASM_STAT_H

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#7687: FILE: arch/frv/include/asm/stat.h:61:
+/* This matches struct stat64 in uClibc/glibc.  The layout is exactly
+   the same as that of struct stat above, with 64-bit types taking up

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#7690: FILE: arch/frv/include/asm/stat.h:64:
+   overflow.  */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#7733: FILE: arch/frv/include/asm/statfs.h:1:
+#ifndef _ASM_STATFS_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#7746: FILE: arch/frv/include/asm/string.h:1:
+/* string.h: FRV string handling

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#7765: FILE: arch/frv/include/asm/string.h:20:
+extern void *memset(void *, int, __kernel_size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#7765: FILE: arch/frv/include/asm/string.h:20:
+extern void *memset(void *, int, __kernel_size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#7765: FILE: arch/frv/include/asm/string.h:20:
+extern void *memset(void *, int, __kernel_size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__kernel_size_t' should also have an identifier name
#7765: FILE: arch/frv/include/asm/string.h:20:
+extern void *memset(void *, int, __kernel_size_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#7766: FILE: arch/frv/include/asm/string.h:21:
+extern void *memcpy(void *, const void *, __kernel_size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#7766: FILE: arch/frv/include/asm/string.h:21:
+extern void *memcpy(void *, const void *, __kernel_size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const void *' should also have an identifier name
#7766: FILE: arch/frv/include/asm/string.h:21:
+extern void *memcpy(void *, const void *, __kernel_size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__kernel_size_t' should also have an identifier name
#7766: FILE: arch/frv/include/asm/string.h:21:
+extern void *memcpy(void *, const void *, __kernel_size_t);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#7803: FILE: arch/frv/include/asm/suspend.h:1:
+/* suspend.h: suspension stuff

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#7829: FILE: arch/frv/include/asm/swab.h:1:
+#ifndef _ASM_SWAB_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#7845: FILE: arch/frv/include/asm/system.h:1:
+/* system.h: FR-V CPU control definitions

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'prev' - possible side-effects?
#7875: FILE: arch/frv/include/asm/system.h:31:
+#define switch_to(prev, next, last)					\
+do {									\
+	(prev)->thread.sched_lr =					\
+		(unsigned long) __builtin_return_address(0);		\
+	(last) = __switch_to(&(prev)->thread, &(next)->thread, (prev));	\
+	mb();								\
+} while(0)

CHECK:SPACING: No space is necessary after a cast
#7878: FILE: arch/frv/include/asm/system.h:34:
+		(unsigned long) __builtin_return_address(0);		\

WARNING:MEMORY_BARRIER: memory barrier without comment
#7880: FILE: arch/frv/include/asm/system.h:36:
+	mb();								\

ERROR:SPACING: space required before the open parenthesis '('
#7881: FILE: arch/frv/include/asm/system.h:37:
+} while(0)

WARNING:TYPO_SPELLING: 'reenable' may be misspelled - perhaps 're-enable'?
#7892: FILE: arch/frv/include/asm/system.h:48:
+ * - uses TIHI (TRAP if Z==0 && C==0) #2 to really reenable interrupts
                                                    ^^^^^^^^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#7897: FILE: arch/frv/include/asm/system.h:53:
+#define local_irq_disable()					\
+do {								\
+	/* set Z flag, but don't change the C flag */		\
+	asm volatile("	andcc	gr0,gr0,gr0,icc2	\n"	\
+		     :						\
+		     :						\
+		     : "memory", "icc2"				\
+		     );						\
+} while(0)

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#7900: FILE: arch/frv/include/asm/system.h:56:
+	asm volatile("	andcc	gr0,gr0,gr0,icc2	\n"	\

ERROR:SPACING: space required before the open parenthesis '('
#7905: FILE: arch/frv/include/asm/system.h:61:
+} while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#7907: FILE: arch/frv/include/asm/system.h:63:
+#define local_irq_enable()					\
+do {								\
+	/* clear Z flag and then test the C flag */		\
+	asm volatile("  oricc	gr0,#1,gr0,icc2		\n"	\
+		     "	tihi	icc2,gr0,#2		\n"	\
+		     :						\
+		     :						\
+		     : "memory", "icc2"				\
+		     );						\
+} while(0)

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#7910: FILE: arch/frv/include/asm/system.h:66:
+	asm volatile("  oricc	gr0,#1,gr0,icc2		\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#7911: FILE: arch/frv/include/asm/system.h:67:
+		     "	tihi	icc2,gr0,#2		\n"	\

ERROR:SPACING: space required before the open parenthesis '('
#7916: FILE: arch/frv/include/asm/system.h:72:
+} while(0)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'flags' - possible side-effects?
#7918: FILE: arch/frv/include/asm/system.h:74:
+#define local_save_flags(flags)					\
+do {								\
+	typecheck(unsigned long, flags);			\
+	asm volatile("movsg ccr,%0"				\
+		     : "=r"(flags)				\
+		     :						\
+		     : "memory");				\
+								\
+	/* shift ICC2.Z to bit 0 */				\
+	flags >>= 26;						\
+								\
+	/* make flags 1 if interrupts disabled, 0 otherwise */	\
+	flags &= 1UL;						\
+} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#7931: FILE: arch/frv/include/asm/system.h:87:
+} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#7941: FILE: arch/frv/include/asm/system.h:97:
+} while(0)

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#7943: FILE: arch/frv/include/asm/system.h:99:
+#define	local_irq_restore(flags)					\
+do {									\
+	typecheck(unsigned long, flags);				\
+									\
+	/* load the Z flag by turning 1 if disabled into 0 if disabled	\

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#7948: FILE: arch/frv/include/asm/system.h:104:
+	 * and thus setting the Z flag but not the C flag */		\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#7949: FILE: arch/frv/include/asm/system.h:105:
+	asm volatile("  xoricc	%0,#1,gr0,icc2		\n"		\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#7951: FILE: arch/frv/include/asm/system.h:107:
+		     "	tihi	icc2,gr0,#2		\n"		\

ERROR:SPACING: space required before the open parenthesis '('
#7957: FILE: arch/frv/include/asm/system.h:113:
+} while(0)

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#7965: FILE: arch/frv/include/asm/system.h:121:
+	asm volatile("	movsg	psr,%0		\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#7966: FILE: arch/frv/include/asm/system.h:122:
+		     "	andi	%0,%2,%0	\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#7967: FILE: arch/frv/include/asm/system.h:123:
+		     "	ori	%0,%1,%0	\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#7968: FILE: arch/frv/include/asm/system.h:124:
+		     "	movgs	%0,psr		\n"	\

ERROR:SPACING: space required before the open parenthesis '('
#7972: FILE: arch/frv/include/asm/system.h:128:
+} while(0)

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#7977: FILE: arch/frv/include/asm/system.h:133:
+	asm volatile("	movsg	psr,%0		\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#7978: FILE: arch/frv/include/asm/system.h:134:
+		     "	andi	%0,%1,%0	\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#7979: FILE: arch/frv/include/asm/system.h:135:
+		     "	movgs	%0,psr		\n"	\

ERROR:SPACING: space required before the open parenthesis '('
#7983: FILE: arch/frv/include/asm/system.h:139:
+} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#7992: FILE: arch/frv/include/asm/system.h:148:
+} while(0)

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#7998: FILE: arch/frv/include/asm/system.h:154:
+	asm volatile("	movsg	psr,%0		\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#7999: FILE: arch/frv/include/asm/system.h:155:
+		     "	andi	%0,%3,%1	\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#8000: FILE: arch/frv/include/asm/system.h:156:
+		     "	ori	%1,%2,%1	\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#8001: FILE: arch/frv/include/asm/system.h:157:
+		     "	movgs	%1,psr		\n"	\

ERROR:SPACING: space required before the open parenthesis '('
#8005: FILE: arch/frv/include/asm/system.h:161:
+} while(0)

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#8010: FILE: arch/frv/include/asm/system.h:166:
+	asm volatile("	movgs	%0,psr		\n"	\

ERROR:SPACING: space required before the open parenthesis '('
#8014: FILE: arch/frv/include/asm/system.h:170:
+} while(0)

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#8022: FILE: arch/frv/include/asm/system.h:178:
+#define nop()			asm volatile ("nop"::)

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#8023: FILE: arch/frv/include/asm/system.h:179:
+#define mb()			asm volatile ("membar" : : :"memory")
             			                           ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#8023: FILE: arch/frv/include/asm/system.h:179:
+#define mb()			asm volatile ("membar" : : :"memory")

WARNING:MEMORY_BARRIER: memory barrier without comment
#8023: FILE: arch/frv/include/asm/system.h:179:
+#define mb()			asm volatile ("membar" : : :"memory")

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#8024: FILE: arch/frv/include/asm/system.h:180:
+#define rmb()			asm volatile ("membar" : : :"memory")
              			                           ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#8024: FILE: arch/frv/include/asm/system.h:180:
+#define rmb()			asm volatile ("membar" : : :"memory")

WARNING:MEMORY_BARRIER: memory barrier without comment
#8024: FILE: arch/frv/include/asm/system.h:180:
+#define rmb()			asm volatile ("membar" : : :"memory")

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#8025: FILE: arch/frv/include/asm/system.h:181:
+#define wmb()			asm volatile ("membar" : : :"memory")
              			                           ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#8025: FILE: arch/frv/include/asm/system.h:181:
+#define wmb()			asm volatile ("membar" : : :"memory")

WARNING:MEMORY_BARRIER: memory barrier without comment
#8025: FILE: arch/frv/include/asm/system.h:181:
+#define wmb()			asm volatile ("membar" : : :"memory")

WARNING:MEMORY_BARRIER: memory barrier without comment
#8029: FILE: arch/frv/include/asm/system.h:185:
+#define smp_mb()			mb()

WARNING:MEMORY_BARRIER: memory barrier without comment
#8030: FILE: arch/frv/include/asm/system.h:186:
+#define smp_rmb()			rmb()

WARNING:MEMORY_BARRIER: memory barrier without comment
#8031: FILE: arch/frv/include/asm/system.h:187:
+#define smp_wmb()			wmb()

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'var' may be better as '(var)' to avoid precedence issues
#8033: FILE: arch/frv/include/asm/system.h:189:
+#define set_mb(var, value) \
+	do { xchg(&var, (value)); } while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#8033: FILE: arch/frv/include/asm/system.h:189:
+#define set_mb(var, value) \
+	do { xchg(&var, (value)); } while (0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#8036: FILE: arch/frv/include/asm/system.h:192:
+#define smp_mb()			barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#8037: FILE: arch/frv/include/asm/system.h:193:
+#define smp_rmb()			barrier()

WARNING:MEMORY_BARRIER: memory barrier without comment
#8038: FILE: arch/frv/include/asm/system.h:194:
+#define smp_wmb()			barrier()

ERROR:SPACING: space required before the open parenthesis '('
#8039: FILE: arch/frv/include/asm/system.h:195:
+#define smp_read_barrier_depends()	do {} while(0)

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __printf(1, 2) over __attribute__((format(printf, 1, 2)))
#8044: FILE: arch/frv/include/asm/system.h:200:
+extern void die_if_kernel(const char *, ...) __attribute__((format(printf, 1, 2)));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#8044: FILE: arch/frv/include/asm/system.h:200:
+extern void die_if_kernel(const char *, ...) __attribute__((format(printf, 1, 2)));

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#8045: FILE: arch/frv/include/asm/system.h:201:
+extern void free_initmem(void);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#8057: FILE: arch/frv/include/asm/system.h:213:
+#define cmpxchg(ptr, test, new)							\
+({										\
+	__typeof__(ptr) __xg_ptr = (ptr);					\
+	__typeof__(*(ptr)) __xg_orig, __xg_tmp;					\
+	__typeof__(*(ptr)) __xg_test = (test);					\
+	__typeof__(*(ptr)) __xg_new = (new);					\
+										\
+	switch (sizeof(__xg_orig)) {						\
+	case 4:									\
+		asm volatile(							\
+			"0:						\n"	\
+			"	orcc		gr0,gr0,gr0,icc3	\n"	\
+			"	ckeq		icc3,cc7		\n"	\
+			"	ld.p		%M0,%1			\n"	\
+			"	orcr		cc7,cc7,cc3		\n"	\
+			"	sub%I4cc	%1,%4,%2,icc0		\n"	\
+			"	bne		icc0,#0,1f		\n"	\
+			"	cst.p		%3,%M0		,cc3,#1	\n"	\
+			"	corcc		gr29,gr29,gr0	,cc3,#1	\n"	\
+			"	beq		icc3,#0,0b		\n"	\
+			"1:						\n"	\
+			: "+U"(*__xg_ptr), "=&r"(__xg_orig), "=&r"(__xg_tmp)	\
+			: "r"(__xg_new), "NPr"(__xg_test)			\
+			: "memory", "cc7", "cc3", "icc3", "icc0"		\
+			);							\
+		break;								\
+										\
+	default:								\
+		__xg_orig = (__typeof__(__xg_orig))0;				\
+		asm volatile("break");						\
+		break;								\
+	}									\
+										\
+	__xg_orig;								\
+})

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#8067: FILE: arch/frv/include/asm/system.h:223:
+			"0:						\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#8068: FILE: arch/frv/include/asm/system.h:224:
+			"	orcc		gr0,gr0,gr0,icc3	\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#8069: FILE: arch/frv/include/asm/system.h:225:
+			"	ckeq		icc3,cc7		\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#8070: FILE: arch/frv/include/asm/system.h:226:
+			"	ld.p		%M0,%1			\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#8071: FILE: arch/frv/include/asm/system.h:227:
+			"	orcr		cc7,cc7,cc3		\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#8072: FILE: arch/frv/include/asm/system.h:228:
+			"	sub%I4cc	%1,%4,%2,icc0		\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#8073: FILE: arch/frv/include/asm/system.h:229:
+			"	bne		icc0,#0,1f		\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#8074: FILE: arch/frv/include/asm/system.h:230:
+			"	cst.p		%3,%M0		,cc3,#1	\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#8075: FILE: arch/frv/include/asm/system.h:231:
+			"	corcc		gr29,gr29,gr0	,cc3,#1	\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#8076: FILE: arch/frv/include/asm/system.h:232:
+			"	beq		icc3,#0,0b		\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#8077: FILE: arch/frv/include/asm/system.h:233:
+			"1:						\n"	\

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#8095: FILE: arch/frv/include/asm/system.h:251:
+extern uint32_t __cmpxchg_32(uint32_t *v, uint32_t test, uint32_t new);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#8095: FILE: arch/frv/include/asm/system.h:251:
+extern uint32_t __cmpxchg_32(uint32_t *v, uint32_t test, uint32_t new);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#8097: FILE: arch/frv/include/asm/system.h:253:
+#define cmpxchg(ptr, test, new)							\
+({										\
+	__typeof__(ptr) __xg_ptr = (ptr);					\
+	__typeof__(*(ptr)) __xg_orig;						\
+	__typeof__(*(ptr)) __xg_test = (test);					\
+	__typeof__(*(ptr)) __xg_new = (new);					\
+										\
+	switch (sizeof(__xg_orig)) {						\
+	case 4: __xg_orig = (__force __typeof__(*ptr))				\
+			__cmpxchg_32((__force uint32_t *)__xg_ptr,		\
+					 (__force uint32_t)__xg_test,		\
+					 (__force uint32_t)__xg_new); break;	\
+	default:								\
+		__xg_orig = (__typeof__(__xg_orig))0;				\
+		asm volatile("break");						\
+		break;								\
+	}									\
+										\
+	__xg_orig;								\
+})

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#8105: FILE: arch/frv/include/asm/system.h:261:
+	case 4: __xg_orig = (__force __typeof__(*ptr))				\

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#8122: FILE: arch/frv/include/asm/system.h:278:
+static inline unsigned long __cmpxchg_local(volatile void *ptr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#8123: FILE: arch/frv/include/asm/system.h:279:
+static inline unsigned long __cmpxchg_local(volatile void *ptr,
+				      unsigned long old,

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#8140: FILE: arch/frv/include/asm/system.h:296:
+#define cmpxchg_local(ptr, o, n)^I^I^I^I  ^I\$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#8140: FILE: arch/frv/include/asm/system.h:296:
+#define cmpxchg_local(ptr, o, n)				  	\
+	((__typeof__(*(ptr)))__cmpxchg_local((ptr), (unsigned long)(o),	\
+			(unsigned long)(n), sizeof(*(ptr))))

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#8152: FILE: arch/frv/include/asm/termbits.h:1:
+#ifndef _ASM_TERMBITS_H__

WARNING:NEW_TYPEDEFS: do not add new typedefs
#8157: FILE: arch/frv/include/asm/termbits.h:6:
+typedef unsigned char	cc_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#8158: FILE: arch/frv/include/asm/termbits.h:7:
+typedef unsigned int	speed_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#8159: FILE: arch/frv/include/asm/termbits.h:8:
+typedef unsigned int	tcflag_t;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#8212: FILE: arch/frv/include/asm/termbits.h:61:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#8335: FILE: arch/frv/include/asm/termbits.h:184:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#8360: FILE: arch/frv/include/asm/termios.h:1:
+#ifndef _ASM_TERMIOS_H

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#8385: FILE: arch/frv/include/asm/termios.h:26:
+/*	intr=^C		quit=^|		erase=del	kill=^U
+	eof=^D		vtime=\0	vmin=\1		sxtc=\0

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#8424: FILE: arch/frv/include/asm/thread_info.h:1:
+/* thread_info.h: description

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#8442: FILE: arch/frv/include/asm/thread_info.h:19:
+#include <asm/processor.h>

WARNING:TYPO_SPELLING: 'preemptable' may be misspelled - perhaps 'preemptible'?
#8461: FILE: arch/frv/include/asm/thread_info.h:38:
+	int			preempt_count;	/* 0 => preemptable, <0 => BUG */
 	   			              	        ^^^^^^^^^^^

ERROR:CODE_INDENT: code indent should use tabs where possible
#8464: FILE: arch/frv/include/asm/thread_info.h:41:
+^I^I^I^I^I ^I   0-0xBFFFFFFF for user-thead$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#8464: FILE: arch/frv/include/asm/thread_info.h:41:
+^I^I^I^I^I ^I   0-0xBFFFFFFF for user-thead$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#8464: FILE: arch/frv/include/asm/thread_info.h:41:
+	mm_segment_t		addr_limit;	/* thread address space:
+					 	   0-0xBFFFFFFF for user-thead

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'tsk' may be better as '(tsk)' to avoid precedence issues
#8487: FILE: arch/frv/include/asm/thread_info.h:64:
+#define INIT_THREAD_INFO(tsk)			\
+{						\
+	.task		= &tsk,			\
+	.exec_domain	= &default_exec_domain,	\
+	.flags		= 0,			\
+	.cpu		= 0,			\
+	.preempt_count	= 1,			\
+	.addr_limit	= KERNEL_DS,		\
+	.restart_block = {			\
+		.fn = do_no_restart_syscall,	\
+	},					\
+}

CHECK:BIT_MACRO: Prefer using the BIT macro
#8544: FILE: arch/frv/include/asm/thread_info.h:121:
+#define _TIF_SYSCALL_TRACE	(1 << TIF_SYSCALL_TRACE)

CHECK:BIT_MACRO: Prefer using the BIT macro
#8545: FILE: arch/frv/include/asm/thread_info.h:122:
+#define _TIF_SIGPENDING		(1 << TIF_SIGPENDING)

CHECK:BIT_MACRO: Prefer using the BIT macro
#8546: FILE: arch/frv/include/asm/thread_info.h:123:
+#define _TIF_NEED_RESCHED	(1 << TIF_NEED_RESCHED)

CHECK:BIT_MACRO: Prefer using the BIT macro
#8547: FILE: arch/frv/include/asm/thread_info.h:124:
+#define _TIF_SINGLESTEP		(1 << TIF_SINGLESTEP)

CHECK:BIT_MACRO: Prefer using the BIT macro
#8548: FILE: arch/frv/include/asm/thread_info.h:125:
+#define _TIF_IRET		(1 << TIF_IRET)

CHECK:BIT_MACRO: Prefer using the BIT macro
#8549: FILE: arch/frv/include/asm/thread_info.h:126:
+#define _TIF_RESTORE_SIGMASK	(1 << TIF_RESTORE_SIGMASK)

CHECK:BIT_MACRO: Prefer using the BIT macro
#8550: FILE: arch/frv/include/asm/thread_info.h:127:
+#define _TIF_POLLING_NRFLAG	(1 << TIF_POLLING_NRFLAG)

CHECK:BIT_MACRO: Prefer using the BIT macro
#8551: FILE: arch/frv/include/asm/thread_info.h:128:
+#define _TIF_FREEZE		(1 << TIF_FREEZE)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#8574: FILE: arch/frv/include/asm/timer-regs.h:1:
+/* timer-regs.h: hardware timer register definitions

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#8599: FILE: arch/frv/include/asm/timer-regs.h:26:
+#define __get_CLKC()	({ *(volatile unsigned long *)(0xfeff9a00); })

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#8605: FILE: arch/frv/include/asm/timer-regs.h:32:
+	asm volatile("	st%I0.p	%2,%M0		\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#8606: FILE: arch/frv/include/asm/timer-regs.h:33:
+		     "	setlos	%3,%1		\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#8607: FILE: arch/frv/include/asm/timer-regs.h:34:
+		     "	membar			\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#8608: FILE: arch/frv/include/asm/timer-regs.h:35:
+		     "0:			\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#8609: FILE: arch/frv/include/asm/timer-regs.h:36:
+		     "	subicc	%1,#1,%1,icc0	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#8610: FILE: arch/frv/include/asm/timer-regs.h:37:
+		     "	bnc	icc0,#1,0b	\n"

CHECK:SPACING: No space is necessary after a cast
#8611: FILE: arch/frv/include/asm/timer-regs.h:38:
+		     : "=m"(*(volatile unsigned long *) 0xfeff9a00), "=r"(tmp)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#8611: FILE: arch/frv/include/asm/timer-regs.h:38:
+		     : "=m"(*(volatile unsigned long *) 0xfeff9a00), "=r"(tmp)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#8616: FILE: arch/frv/include/asm/timer-regs.h:43:
+#define __get_TCTR()	({ *(volatile unsigned long *)(0xfeff9418); })

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#8617: FILE: arch/frv/include/asm/timer-regs.h:44:
+#define __get_TPRV()	({ *(volatile unsigned long *)(0xfeff9420); })

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#8618: FILE: arch/frv/include/asm/timer-regs.h:45:
+#define __get_TPRCKSL()	({ *(volatile unsigned long *)(0xfeff9428); })

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#8619: FILE: arch/frv/include/asm/timer-regs.h:46:
+#define __get_TCSR(T)	({ *(volatile unsigned long *)(0xfeff9400 + 8 * (T)); })

CHECK:CAMELCASE: Avoid CamelCase: <__get_TxCKSL>
#8620: FILE: arch/frv/include/asm/timer-regs.h:47:
+#define __get_TxCKSL(T)	({ *(volatile unsigned long *)(0xfeff9430 + 8 * (T)); })

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#8620: FILE: arch/frv/include/asm/timer-regs.h:47:
+#define __get_TxCKSL(T)	({ *(volatile unsigned long *)(0xfeff9430 + 8 * (T)); })

ERROR:SPACING: space required before the open parenthesis '('
#8624: FILE: arch/frv/include/asm/timer-regs.h:51:
+#define __set_TCTR(V)	do { *(volatile unsigned long *)(0xfeff9418) = (V); mb(); } while(0)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#8624: FILE: arch/frv/include/asm/timer-regs.h:51:
+#define __set_TCTR(V)	do { *(volatile unsigned long *)(0xfeff9418) = (V); mb(); } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#8624: FILE: arch/frv/include/asm/timer-regs.h:51:
+#define __set_TCTR(V)	do { *(volatile unsigned long *)(0xfeff9418) = (V); mb(); } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#8625: FILE: arch/frv/include/asm/timer-regs.h:52:
+#define __set_TPRV(V)	do { *(volatile unsigned long *)(0xfeff9420) = (V) << 24; mb(); } while(0)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#8625: FILE: arch/frv/include/asm/timer-regs.h:52:
+#define __set_TPRV(V)	do { *(volatile unsigned long *)(0xfeff9420) = (V) << 24; mb(); } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#8625: FILE: arch/frv/include/asm/timer-regs.h:52:
+#define __set_TPRV(V)	do { *(volatile unsigned long *)(0xfeff9420) = (V) << 24; mb(); } while(0)

ERROR:SPACING: space required before the open parenthesis '('
#8626: FILE: arch/frv/include/asm/timer-regs.h:53:
+#define __set_TPRCKSL(V) do { *(volatile unsigned long *)(0xfeff9428) = (V); mb(); } while(0)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#8626: FILE: arch/frv/include/asm/timer-regs.h:53:
+#define __set_TPRCKSL(V) do { *(volatile unsigned long *)(0xfeff9428) = (V); mb(); } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#8626: FILE: arch/frv/include/asm/timer-regs.h:53:
+#define __set_TPRCKSL(V) do { *(volatile unsigned long *)(0xfeff9428) = (V); mb(); } while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#8627: FILE: arch/frv/include/asm/timer-regs.h:54:
+#define __set_TCSR(T,V)	\
                     ^

ERROR:SPACING: space required before the open parenthesis '('
#8628: FILE: arch/frv/include/asm/timer-regs.h:55:
+do { *(volatile unsigned long *)(0xfeff9400 + 8 * (T)) = (V); mb(); } while(0)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#8628: FILE: arch/frv/include/asm/timer-regs.h:55:
+do { *(volatile unsigned long *)(0xfeff9400 + 8 * (T)) = (V); mb(); } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#8628: FILE: arch/frv/include/asm/timer-regs.h:55:
+do { *(volatile unsigned long *)(0xfeff9400 + 8 * (T)) = (V); mb(); } while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#8630: FILE: arch/frv/include/asm/timer-regs.h:57:
+#define __set_TxCKSL(T,V) \
                       ^

CHECK:CAMELCASE: Avoid CamelCase: <__set_TxCKSL>
#8630: FILE: arch/frv/include/asm/timer-regs.h:57:
+#define __set_TxCKSL(T,V) \

ERROR:SPACING: space required before the open parenthesis '('
#8631: FILE: arch/frv/include/asm/timer-regs.h:58:
+do { *(volatile unsigned long *)(0xfeff9430 + 8 * (T)) = (V); mb(); } while(0)

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#8631: FILE: arch/frv/include/asm/timer-regs.h:58:
+do { *(volatile unsigned long *)(0xfeff9430 + 8 * (T)) = (V); mb(); } while(0)

WARNING:MEMORY_BARRIER: memory barrier without comment
#8631: FILE: arch/frv/include/asm/timer-regs.h:58:
+do { *(volatile unsigned long *)(0xfeff9430 + 8 * (T)) = (V); mb(); } while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#8633: FILE: arch/frv/include/asm/timer-regs.h:60:
+#define __set_TCSR_DATA(T,V) __set_TCSR(T, (V) << 24)
                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#8634: FILE: arch/frv/include/asm/timer-regs.h:61:
+#define __set_TxCKSL_DATA(T,V) __set_TxCKSL(T, TxCKSL_EIGHT | __TxCKSL_SELECT((V)))
                            ^

CHECK:CAMELCASE: Avoid CamelCase: <__set_TxCKSL_DATA>
#8634: FILE: arch/frv/include/asm/timer-regs.h:61:
+#define __set_TxCKSL_DATA(T,V) __set_TxCKSL(T, TxCKSL_EIGHT | __TxCKSL_SELECT((V)))

CHECK:CAMELCASE: Avoid CamelCase: <TxCKSL_EIGHT>
#8634: FILE: arch/frv/include/asm/timer-regs.h:61:
+#define __set_TxCKSL_DATA(T,V) __set_TxCKSL(T, TxCKSL_EIGHT | __TxCKSL_SELECT((V)))

CHECK:CAMELCASE: Avoid CamelCase: <__TxCKSL_SELECT>
#8634: FILE: arch/frv/include/asm/timer-regs.h:61:
+#define __set_TxCKSL_DATA(T,V) __set_TxCKSL(T, TxCKSL_EIGHT | __TxCKSL_SELECT((V)))

CHECK:CAMELCASE: Avoid CamelCase: <TCSRx_DATA>
#8666: FILE: arch/frv/include/asm/timer-regs.h:93:
+#define TCSRx_DATA		0xff000000

CHECK:CAMELCASE: Avoid CamelCase: <TCSRx_OUTPUT>
#8669: FILE: arch/frv/include/asm/timer-regs.h:96:
+#define TCSRx_OUTPUT		0x80000000

CHECK:CAMELCASE: Avoid CamelCase: <TCSRx_NULLCOUNT>
#8670: FILE: arch/frv/include/asm/timer-regs.h:97:
+#define TCSRx_NULLCOUNT		0x40000000

CHECK:CAMELCASE: Avoid CamelCase: <TCSRx_RL>
#8671: FILE: arch/frv/include/asm/timer-regs.h:98:
+#define TCSRx_RL		0x30000000

CHECK:CAMELCASE: Avoid CamelCase: <TCSRx_MODE>
#8672: FILE: arch/frv/include/asm/timer-regs.h:99:
+#define TCSRx_MODE		0x07000000

CHECK:CAMELCASE: Avoid CamelCase: <TxCKSL_SELECT>
#8675: FILE: arch/frv/include/asm/timer-regs.h:102:
+#define TxCKSL_SELECT		0x0f000000

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#8686: FILE: arch/frv/include/asm/timex.h:1:
+/* timex.h: FR-V architecture timex specifications

WARNING:NEW_TYPEDEFS: do not add new typedefs
#8694: FILE: arch/frv/include/asm/timex.h:9:
+typedef unsigned long cycles_t;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#8712: FILE: arch/frv/include/asm/tlb.h:1:
+#ifndef _ASM_TLB_H

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#8718: FILE: arch/frv/include/asm/tlb.h:7:
+extern void check_pgt_cache(void);

ERROR:SPACING: space required before the open parenthesis '('
#8720: FILE: arch/frv/include/asm/tlb.h:9:
+#define check_pgt_cache() do {} while(0)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#8745: FILE: arch/frv/include/asm/tlbflush.h:1:
+/* tlbflush.h: TLB flushing functions

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#8760: FILE: arch/frv/include/asm/tlbflush.h:16:
+#include <asm/processor.h>

WARNING:STORAGE_CLASS: storage class 'asmlinkage' should be located before type 'void'
#8765: FILE: arch/frv/include/asm/tlbflush.h:21:
+extern void asmlinkage __flush_tlb_all(void);

WARNING:STORAGE_CLASS: storage class 'asmlinkage' should be located before type 'void'
#8766: FILE: arch/frv/include/asm/tlbflush.h:22:
+extern void asmlinkage __flush_tlb_mm(unsigned long contextid);

WARNING:STORAGE_CLASS: storage class 'asmlinkage' should be located before type 'void'
#8767: FILE: arch/frv/include/asm/tlbflush.h:23:
+extern void asmlinkage __flush_tlb_page(unsigned long contextid, unsigned long start);

WARNING:STORAGE_CLASS: storage class 'asmlinkage' should be located before type 'void'
#8768: FILE: arch/frv/include/asm/tlbflush.h:24:
+extern void asmlinkage __flush_tlb_range(unsigned long contextid,

ERROR:SPACING: space required before the open parenthesis '('
#8777: FILE: arch/frv/include/asm/tlbflush.h:33:
+} while(0)

ERROR:SPACING: space required before the open parenthesis '('
#8784: FILE: arch/frv/include/asm/tlbflush.h:40:
+} while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#8786: FILE: arch/frv/include/asm/tlbflush.h:42:
+#define flush_tlb_range(vma,start,end)					\
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#8786: FILE: arch/frv/include/asm/tlbflush.h:42:
+#define flush_tlb_range(vma,start,end)					\
                                  ^

ERROR:SPACING: space required before the open parenthesis '('
#8791: FILE: arch/frv/include/asm/tlbflush.h:47:
+} while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#8793: FILE: arch/frv/include/asm/tlbflush.h:49:
+#define flush_tlb_page(vma,addr)				\
                           ^

ERROR:SPACING: space required before the open parenthesis '('
#8798: FILE: arch/frv/include/asm/tlbflush.h:54:
+} while(0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#8800: FILE: arch/frv/include/asm/tlbflush.h:56:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#8807: FILE: arch/frv/include/asm/tlbflush.h:63:
+#define flush_tlb()				BUG()

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#8808: FILE: arch/frv/include/asm/tlbflush.h:64:
+#define flush_tlb_all()				BUG()

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#8809: FILE: arch/frv/include/asm/tlbflush.h:65:
+#define flush_tlb_mm(mm)			BUG()

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#8810: FILE: arch/frv/include/asm/tlbflush.h:66:
+#define flush_tlb_page(vma,addr)		BUG()

ERROR:SPACING: space required after that ',' (ctx:VxV)
#8810: FILE: arch/frv/include/asm/tlbflush.h:66:
+#define flush_tlb_page(vma,addr)		BUG()
                           ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#8811: FILE: arch/frv/include/asm/tlbflush.h:67:
+#define flush_tlb_range(mm,start,end)		BUG()

ERROR:SPACING: space required after that ',' (ctx:VxV)
#8811: FILE: arch/frv/include/asm/tlbflush.h:67:
+#define flush_tlb_range(mm,start,end)		BUG()
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#8811: FILE: arch/frv/include/asm/tlbflush.h:67:
+#define flush_tlb_range(mm,start,end)		BUG()
                                 ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#8812: FILE: arch/frv/include/asm/tlbflush.h:68:
+#define flush_tlb_kernel_range(start, end)	BUG()

CHECK:LINE_SPACING: Please don't use multiple blank lines
#8816: FILE: arch/frv/include/asm/tlbflush.h:72:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#8824: FILE: arch/frv/include/asm/topology.h:1:
+#ifndef _ASM_TOPOLOGY_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#8842: FILE: arch/frv/include/asm/types.h:1:
+/* types.h: FRV types

WARNING:NEW_TYPEDEFS: do not add new typedefs
#8860: FILE: arch/frv/include/asm/types.h:19:
+typedef unsigned short umode_t;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#8888: FILE: arch/frv/include/asm/uaccess.h:1:
+/* uaccess.h: userspace accessor functions

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#8927: FILE: arch/frv/include/asm/uaccess.h:40:
+	asm volatile (

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#8928: FILE: arch/frv/include/asm/uaccess.h:41:
+		"	addcc	%3,%2,%1,icc0	\n"	/* set C-flag if addr+size>4GB */

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#8929: FILE: arch/frv/include/asm/uaccess.h:42:
+		"	subcc.p	%1,%4,gr0,icc1	\n"	/* jump if addr+size>limit */

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#8930: FILE: arch/frv/include/asm/uaccess.h:43:
+		"	bc	icc0,#0,0f	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#8931: FILE: arch/frv/include/asm/uaccess.h:44:
+		"	bhi	icc1,#0,0f	\n"

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#8932: FILE: arch/frv/include/asm/uaccess.h:45:
+		"	setlos	#0,%0		\n"	/* mark okay */

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#8933: FILE: arch/frv/include/asm/uaccess.h:46:
+		"0:				\n"

CHECK:SPACING: No space is necessary after a cast
#8952: FILE: arch/frv/include/asm/uaccess.h:65:
+#define __range_ok(addr,size) ___range_ok((unsigned long) (addr), (unsigned long) (size))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#8952: FILE: arch/frv/include/asm/uaccess.h:65:
+#define __range_ok(addr,size) ___range_ok((unsigned long) (addr), (unsigned long) (size))
                        ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#8954: FILE: arch/frv/include/asm/uaccess.h:67:
+#define access_ok(type,addr,size) (__range_ok((void __user *)(addr), (size)) == 0)
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#8954: FILE: arch/frv/include/asm/uaccess.h:67:
+#define access_ok(type,addr,size) (__range_ok((void __user *)(addr), (size)) == 0)
                            ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#8955: FILE: arch/frv/include/asm/uaccess.h:68:
+#define __access_ok(addr,size) (__range_ok((addr), (size)) == 0)
                         ^

ERROR:OPEN_BRACE: open brace '{' following struct go on the same line
#8970: FILE: arch/frv/include/asm/uaccess.h:83:
+struct exception_table_entry
+{

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#8975: FILE: arch/frv/include/asm/uaccess.h:88:
+extern unsigned long search_exception_table(unsigned long);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#8975: FILE: arch/frv/include/asm/uaccess.h:88:
+extern unsigned long search_exception_table(unsigned long);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#8977: FILE: arch/frv/include/asm/uaccess.h:90:
+
+

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#8982: FILE: arch/frv/include/asm/uaccess.h:95:
+#define __put_user(x, ptr)						\
+({									\
+	int __pu_err = 0;						\
+									\
+	typeof(*(ptr)) __pu_val = (x);					\
+	__chk_user_ptr(ptr);						\
+									\
+	switch (sizeof (*(ptr))) {					\
+	case 1:								\
+		__put_user_asm(__pu_err, __pu_val, ptr, "b", "r");	\
+		break;							\
+	case 2:								\
+		__put_user_asm(__pu_err, __pu_val, ptr, "h", "r");	\
+		break;							\
+	case 4:								\
+		__put_user_asm(__pu_err, __pu_val, ptr, "",  "r");	\
+		break;							\
+	case 8:								\
+		__put_user_asm(__pu_err, __pu_val, ptr, "d", "e");	\
+		break;							\
+	default:							\
+		__pu_err = __put_user_bad();				\
+		break;							\
+	}								\
+	__pu_err;							\
+})

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#8989: FILE: arch/frv/include/asm/uaccess.h:102:
+	switch (sizeof (*(ptr))) {					\

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#9009: FILE: arch/frv/include/asm/uaccess.h:122:
+#define put_user(x, ptr)			\
+({						\
+	typeof(*(ptr)) __user *_p = (ptr);	\
+	int _e;					\
+						\
+	_e = __range_ok(_p, sizeof(*_p));	\
+	if (_e == 0)				\
+		_e = __put_user((x), _p);	\
+	_e;					\
+})

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#9020: FILE: arch/frv/include/asm/uaccess.h:133:
+extern int __put_user_bad(void);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#9030: FILE: arch/frv/include/asm/uaccess.h:143:
+#define __put_user_asm(err,x,ptr,dsize,constraint)					\
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#9030: FILE: arch/frv/include/asm/uaccess.h:143:
+#define __put_user_asm(err,x,ptr,dsize,constraint)					\
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#9030: FILE: arch/frv/include/asm/uaccess.h:143:
+#define __put_user_asm(err,x,ptr,dsize,constraint)					\
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#9030: FILE: arch/frv/include/asm/uaccess.h:143:
+#define __put_user_asm(err,x,ptr,dsize,constraint)					\
                                       ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'err' - possible side-effects?
#9030: FILE: arch/frv/include/asm/uaccess.h:143:
+#define __put_user_asm(err,x,ptr,dsize,constraint)					\
+do {											\
+	asm volatile("1:	st"dsize"%I1	%2,%M1	\n"				\
+		     "2:				\n"				\
+		     ".subsection 2			\n"				\
+		     "3:	setlos		%3,%0	\n"				\
+		     "		bra		2b	\n"				\
+		     ".previous				\n"				\
+		     ".section __ex_table,\"a\"		\n"				\
+		     "		.balign		8	\n"				\
+		     "		.long		1b,3b	\n"				\
+		     ".previous"							\
+		     : "=r" (err)							\
+		     : "m" (*__ptr(ptr)), constraint (x), "i"(-EFAULT), "0"(err)	\
+		     : "memory");							\
+} while (0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#9030: FILE: arch/frv/include/asm/uaccess.h:143:
+#define __put_user_asm(err,x,ptr,dsize,constraint)					\
+do {											\
+	asm volatile("1:	st"dsize"%I1	%2,%M1	\n"				\
+		     "2:				\n"				\
+		     ".subsection 2			\n"				\
+		     "3:	setlos		%3,%0	\n"				\
+		     "		bra		2b	\n"				\
+		     ".previous				\n"				\
+		     ".section __ex_table,\"a\"		\n"				\
+		     "		.balign		8	\n"				\
+		     "		.long		1b,3b	\n"				\
+		     ".previous"							\
+		     : "=r" (err)							\
+		     : "m" (*__ptr(ptr)), constraint (x), "i"(-EFAULT), "0"(err)	\
+		     : "memory");							\
+} while (0)

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#9032: FILE: arch/frv/include/asm/uaccess.h:145:
+	asm volatile("1:	st"dsize"%I1	%2,%M1	\n"				\

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#9032: FILE: arch/frv/include/asm/uaccess.h:145:
+	asm volatile("1:	st"dsize"%I1	%2,%M1	\n"				\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#9033: FILE: arch/frv/include/asm/uaccess.h:146:
+		     "2:				\n"				\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#9034: FILE: arch/frv/include/asm/uaccess.h:147:
+		     ".subsection 2			\n"				\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#9035: FILE: arch/frv/include/asm/uaccess.h:148:
+		     "3:	setlos		%3,%0	\n"				\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#9036: FILE: arch/frv/include/asm/uaccess.h:149:
+		     "		bra		2b	\n"				\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#9037: FILE: arch/frv/include/asm/uaccess.h:150:
+		     ".previous				\n"				\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#9038: FILE: arch/frv/include/asm/uaccess.h:151:
+		     ".section __ex_table,\"a\"		\n"				\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#9039: FILE: arch/frv/include/asm/uaccess.h:152:
+		     "		.balign		8	\n"				\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#9040: FILE: arch/frv/include/asm/uaccess.h:153:
+		     "		.long		1b,3b	\n"				\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#9049: FILE: arch/frv/include/asm/uaccess.h:162:
+#define __put_user_asm(err,x,ptr,bwl,con)	\
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#9049: FILE: arch/frv/include/asm/uaccess.h:162:
+#define __put_user_asm(err,x,ptr,bwl,con)	\
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#9049: FILE: arch/frv/include/asm/uaccess.h:162:
+#define __put_user_asm(err,x,ptr,bwl,con)	\
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#9049: FILE: arch/frv/include/asm/uaccess.h:162:
+#define __put_user_asm(err,x,ptr,bwl,con)	\
                                     ^

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#9049: FILE: arch/frv/include/asm/uaccess.h:162:
+#define __put_user_asm(err,x,ptr,bwl,con)	\
+do {						\
+	asm("	st"bwl"%I0	%1,%M0	\n"	\
+	    "	membar			\n"	\
+	    :					\
+	    : "m" (*__ptr(ptr)), con (x)	\
+	    : "memory");			\
+} while (0)

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#9051: FILE: arch/frv/include/asm/uaccess.h:164:
+	asm("	st"bwl"%I0	%1,%M0	\n"	\

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#9051: FILE: arch/frv/include/asm/uaccess.h:164:
+	asm("	st"bwl"%I0	%1,%M0	\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#9052: FILE: arch/frv/include/asm/uaccess.h:165:
+	    "	membar			\n"	\

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#9054: FILE: arch/frv/include/asm/uaccess.h:167:
+	    : "m" (*__ptr(ptr)), con (x)	\

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#9064: FILE: arch/frv/include/asm/uaccess.h:177:
+#define __get_user(x, ptr)						\
+({									\
+	int __gu_err = 0;						\
+	__chk_user_ptr(ptr);						\
+									\
+	switch (sizeof(*(ptr))) {					\
+	case 1: {							\
+		unsigned char __gu_val;					\
+		__get_user_asm(__gu_err, __gu_val, ptr, "ub", "=r");	\
+		(x) = *(__force __typeof__(*(ptr)) *) &__gu_val;	\
+		break;							\
+	}								\
+	case 2: {							\
+		unsigned short __gu_val;				\
+		__get_user_asm(__gu_err, __gu_val, ptr, "uh", "=r");	\
+		(x) = *(__force __typeof__(*(ptr)) *) &__gu_val;	\
+		break;							\
+	}								\
+	case 4: {							\
+		unsigned int __gu_val;					\
+		__get_user_asm(__gu_err, __gu_val, ptr, "", "=r");	\
+		(x) = *(__force __typeof__(*(ptr)) *) &__gu_val;	\
+		break;							\
+	}								\
+	case 8: {							\
+		unsigned long long __gu_val;				\
+		__get_user_asm(__gu_err, __gu_val, ptr, "d", "=e");	\
+		(x) = *(__force __typeof__(*(ptr)) *) &__gu_val;	\
+		break;							\
+	}								\
+	default:							\
+		__gu_err = __get_user_bad();				\
+		break;							\
+	}								\
+	__gu_err;							\
+})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#9064: FILE: arch/frv/include/asm/uaccess.h:177:
+#define __get_user(x, ptr)						\
+({									\
+	int __gu_err = 0;						\
+	__chk_user_ptr(ptr);						\
+									\
+	switch (sizeof(*(ptr))) {					\
+	case 1: {							\
+		unsigned char __gu_val;					\
+		__get_user_asm(__gu_err, __gu_val, ptr, "ub", "=r");	\
+		(x) = *(__force __typeof__(*(ptr)) *) &__gu_val;	\
+		break;							\
+	}								\
+	case 2: {							\
+		unsigned short __gu_val;				\
+		__get_user_asm(__gu_err, __gu_val, ptr, "uh", "=r");	\
+		(x) = *(__force __typeof__(*(ptr)) *) &__gu_val;	\
+		break;							\
+	}								\
+	case 4: {							\
+		unsigned int __gu_val;					\
+		__get_user_asm(__gu_err, __gu_val, ptr, "", "=r");	\
+		(x) = *(__force __typeof__(*(ptr)) *) &__gu_val;	\
+		break;							\
+	}								\
+	case 8: {							\
+		unsigned long long __gu_val;				\
+		__get_user_asm(__gu_err, __gu_val, ptr, "d", "=e");	\
+		(x) = *(__force __typeof__(*(ptr)) *) &__gu_val;	\
+		break;							\
+	}								\
+	default:							\
+		__gu_err = __get_user_bad();				\
+		break;							\
+	}								\
+	__gu_err;							\
+})

CHECK:SPACING: No space is necessary after a cast
#9073: FILE: arch/frv/include/asm/uaccess.h:186:
+		(x) = *(__force __typeof__(*(ptr)) *) &__gu_val;	\

CHECK:SPACING: No space is necessary after a cast
#9079: FILE: arch/frv/include/asm/uaccess.h:192:
+		(x) = *(__force __typeof__(*(ptr)) *) &__gu_val;	\

CHECK:SPACING: No space is necessary after a cast
#9085: FILE: arch/frv/include/asm/uaccess.h:198:
+		(x) = *(__force __typeof__(*(ptr)) *) &__gu_val;	\

CHECK:SPACING: No space is necessary after a cast
#9091: FILE: arch/frv/include/asm/uaccess.h:204:
+		(x) = *(__force __typeof__(*(ptr)) *) &__gu_val;	\

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
#9101: FILE: arch/frv/include/asm/uaccess.h:214:
+#define get_user(x, ptr)			\
+({						\
+	const typeof(*(ptr)) __user *_p = (ptr);\
+	int _e;					\
+						\
+	_e = __range_ok(_p, sizeof(*_p));	\
+	if (likely(_e == 0))			\
+		_e = __get_user((x), _p);	\
+	else					\
+		(x) = (typeof(x)) 0;		\
+	_e;					\
+})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'ptr' - possible side-effects?
#9101: FILE: arch/frv/include/asm/uaccess.h:214:
+#define get_user(x, ptr)			\
+({						\
+	const typeof(*(ptr)) __user *_p = (ptr);\
+	int _e;					\
+						\
+	_e = __range_ok(_p, sizeof(*_p));	\
+	if (likely(_e == 0))			\
+		_e = __get_user((x), _p);	\
+	else					\
+		(x) = (typeof(x)) 0;		\
+	_e;					\
+})

CHECK:SPACING: No space is necessary after a cast
#9110: FILE: arch/frv/include/asm/uaccess.h:223:
+		(x) = (typeof(x)) 0;		\

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#9114: FILE: arch/frv/include/asm/uaccess.h:227:
+extern int __get_user_bad(void);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#9118: FILE: arch/frv/include/asm/uaccess.h:231:
+#define __get_user_asm(err,x,ptr,dtype,constraint)	\
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#9118: FILE: arch/frv/include/asm/uaccess.h:231:
+#define __get_user_asm(err,x,ptr,dtype,constraint)	\
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#9118: FILE: arch/frv/include/asm/uaccess.h:231:
+#define __get_user_asm(err,x,ptr,dtype,constraint)	\
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#9118: FILE: arch/frv/include/asm/uaccess.h:231:
+#define __get_user_asm(err,x,ptr,dtype,constraint)	\
                                       ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'err' - possible side-effects?
#9118: FILE: arch/frv/include/asm/uaccess.h:231:
+#define __get_user_asm(err,x,ptr,dtype,constraint)	\
+do {							\
+	asm("1:		ld"dtype"%I2	%M2,%1	\n"	\
+	    "2:					\n"	\
+	    ".subsection 2			\n"	\
+	    "3:		setlos		%3,%0	\n"	\
+	    "		setlos		#0,%1	\n"	\
+	    "		bra		2b	\n"	\
+	    ".previous				\n"	\
+	    ".section __ex_table,\"a\"		\n"	\
+	    "		.balign		8	\n"	\
+	    "		.long		1b,3b	\n"	\
+	    ".previous"					\
+	    : "=r" (err), constraint (x)		\
+	    : "m" (*__ptr(ptr)), "i"(-EFAULT), "0"(err)	\
+	    );						\
+} while(0)

WARNING:SINGLE_STATEMENT_DO_WHILE_MACRO: Single statement macros should not use a do {} while (0) loop
#9118: FILE: arch/frv/include/asm/uaccess.h:231:
+#define __get_user_asm(err,x,ptr,dtype,constraint)	\
+do {							\
+	asm("1:		ld"dtype"%I2	%M2,%1	\n"	\
+	    "2:					\n"	\
+	    ".subsection 2			\n"	\
+	    "3:		setlos		%3,%0	\n"	\
+	    "		setlos		#0,%1	\n"	\
+	    "		bra		2b	\n"	\
+	    ".previous				\n"	\
+	    ".section __ex_table,\"a\"		\n"	\
+	    "		.balign		8	\n"	\
+	    "		.long		1b,3b	\n"	\
+	    ".previous"					\
+	    : "=r" (err), constraint (x)		\
+	    : "m" (*__ptr(ptr)), "i"(-EFAULT), "0"(err)	\
+	    );						\
+} while(0)

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#9120: FILE: arch/frv/include/asm/uaccess.h:233:
+	asm("1:		ld"dtype"%I2	%M2,%1	\n"	\

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#9120: FILE: arch/frv/include/asm/uaccess.h:233:
+	asm("1:		ld"dtype"%I2	%M2,%1	\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#9121: FILE: arch/frv/include/asm/uaccess.h:234:
+	    "2:					\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#9122: FILE: arch/frv/include/asm/uaccess.h:235:
+	    ".subsection 2			\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#9123: FILE: arch/frv/include/asm/uaccess.h:236:
+	    "3:		setlos		%3,%0	\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#9124: FILE: arch/frv/include/asm/uaccess.h:237:
+	    "		setlos		#0,%1	\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#9125: FILE: arch/frv/include/asm/uaccess.h:238:
+	    "		bra		2b	\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#9126: FILE: arch/frv/include/asm/uaccess.h:239:
+	    ".previous				\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#9127: FILE: arch/frv/include/asm/uaccess.h:240:
+	    ".section __ex_table,\"a\"		\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#9128: FILE: arch/frv/include/asm/uaccess.h:241:
+	    "		.balign		8	\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#9129: FILE: arch/frv/include/asm/uaccess.h:242:
+	    "		.long		1b,3b	\n"	\

ERROR:SPACING: space required before the open parenthesis '('
#9134: FILE: arch/frv/include/asm/uaccess.h:247:
+} while(0)

ERROR:SPACING: space required after that ',' (ctx:VxV)
#9138: FILE: arch/frv/include/asm/uaccess.h:251:
+#define __get_user_asm(err,x,ptr,bwl,con)	\
                           ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#9138: FILE: arch/frv/include/asm/uaccess.h:251:
+#define __get_user_asm(err,x,ptr,bwl,con)	\
                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#9138: FILE: arch/frv/include/asm/uaccess.h:251:
+#define __get_user_asm(err,x,ptr,bwl,con)	\
                                 ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#9138: FILE: arch/frv/include/asm/uaccess.h:251:
+#define __get_user_asm(err,x,ptr,bwl,con)	\
                                     ^

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#9139: FILE: arch/frv/include/asm/uaccess.h:252:
+	asm("	ld"bwl"%I1	%M1,%0	\n"	\

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#9139: FILE: arch/frv/include/asm/uaccess.h:252:
+	asm("	ld"bwl"%I1	%M1,%0	\n"	\

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#9140: FILE: arch/frv/include/asm/uaccess.h:253:
+	    "	membar			\n"	\

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#9150: FILE: arch/frv/include/asm/uaccess.h:263:
+#define ____force(x) (__force void *)(void __user *)(x)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#9152: FILE: arch/frv/include/asm/uaccess.h:265:
+extern long __memset_user(void *dst, unsigned long count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#9153: FILE: arch/frv/include/asm/uaccess.h:266:
+extern long __memcpy_user(void *dst, const void *src, unsigned long count);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#9155: FILE: arch/frv/include/asm/uaccess.h:268:
+#define clear_user(dst,count)			__memset_user(____force(dst), (count))
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#9161: FILE: arch/frv/include/asm/uaccess.h:274:
+#define clear_user(dst,count)			(memset(____force(dst), 0, (count)), 0)
                       ^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#9172: FILE: arch/frv/include/asm/uaccess.h:285:
+       might_sleep();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#9173: FILE: arch/frv/include/asm/uaccess.h:286:
+       return __copy_to_user_inatomic(to, from, n);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#9179: FILE: arch/frv/include/asm/uaccess.h:292:
+       might_sleep();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#9180: FILE: arch/frv/include/asm/uaccess.h:293:
+       return __copy_from_user_inatomic(to, from, n);$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#9201: FILE: arch/frv/include/asm/uaccess.h:314:
+extern long strncpy_from_user(char *dst, const char __user *src, long count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#9202: FILE: arch/frv/include/asm/uaccess.h:315:
+extern long strnlen_user(const char __user *src, long count);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#9206: FILE: arch/frv/include/asm/uaccess.h:319:
+extern unsigned long search_exception_table(unsigned long addr);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#9215: FILE: arch/frv/include/asm/ucontext.h:1:
+#ifndef _ASM_UCONTEXT_H

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#9233: FILE: arch/frv/include/asm/unaligned.h:1:
+/* unaligned.h: unaligned access handler

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#9261: FILE: arch/frv/include/asm/unistd.h:1:
+#ifndef _ASM_UNISTD_H_

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#9328: FILE: arch/frv/include/asm/unistd.h:68:
+// #define __NR_oldolduname	 /* 59 */ obsolete
+#define __NR_umask		 60

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#9367: FILE: arch/frv/include/asm/unistd.h:107:
+// #define __NR_profil		 /* 98 */ obsolete
+#define __NR_statfs		 99

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#9370: FILE: arch/frv/include/asm/unistd.h:110:
+// #define __NR_ioperm		/* 101 */ not supported
+#define __NR_socketcall		102

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#9378: FILE: arch/frv/include/asm/unistd.h:118:
+// #define __NR_olduname		/* 109 */ obsolete
+// #define __NR_iopl		/* 110 */ not supported

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#9379: FILE: arch/frv/include/asm/unistd.h:119:
+// #define __NR_iopl		/* 110 */ not supported
+#define __NR_vhangup		111

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#9381: FILE: arch/frv/include/asm/unistd.h:121:
+// #define __NR_idle		/* 112 */ Obsolete
+// #define __NR_vm86old		/* 113 */ not supported

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#9382: FILE: arch/frv/include/asm/unistd.h:122:
+// #define __NR_vm86old		/* 113 */ not supported
+#define __NR_wait4		114

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#9392: FILE: arch/frv/include/asm/unistd.h:132:
+// #define __NR_modify_ldt	/* 123 */ not supported
+#define __NR_cacheflush		123

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#9436: FILE: arch/frv/include/asm/unistd.h:176:
+// #define __NR_vm86		/* 166 */ not supported
+#define __NR_query_module	167

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#9529: FILE: arch/frv/include/asm/unistd.h:269:
+#define __NR_timer_settime	(__NR_timer_create+1)
                           	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#9530: FILE: arch/frv/include/asm/unistd.h:270:
+#define __NR_timer_gettime	(__NR_timer_create+2)
                           	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#9531: FILE: arch/frv/include/asm/unistd.h:271:
+#define __NR_timer_getoverrun	(__NR_timer_create+3)
                              	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#9532: FILE: arch/frv/include/asm/unistd.h:272:
+#define __NR_timer_delete	(__NR_timer_create+4)
                          	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#9533: FILE: arch/frv/include/asm/unistd.h:273:
+#define __NR_clock_settime	(__NR_timer_create+5)
                           	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#9534: FILE: arch/frv/include/asm/unistd.h:274:
+#define __NR_clock_gettime	(__NR_timer_create+6)
                           	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#9535: FILE: arch/frv/include/asm/unistd.h:275:
+#define __NR_clock_getres	(__NR_timer_create+7)
                          	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#9536: FILE: arch/frv/include/asm/unistd.h:276:
+#define __NR_clock_nanosleep	(__NR_timer_create+8)
                             	                  ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#9546: FILE: arch/frv/include/asm/unistd.h:286:
+#define __NR_mq_open ^I^I277$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#9547: FILE: arch/frv/include/asm/unistd.h:287:
+#define __NR_mq_unlink		(__NR_mq_open+1)
                       		             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#9548: FILE: arch/frv/include/asm/unistd.h:288:
+#define __NR_mq_timedsend	(__NR_mq_open+2)
                          	             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#9549: FILE: arch/frv/include/asm/unistd.h:289:
+#define __NR_mq_timedreceive	(__NR_mq_open+3)
                             	             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#9550: FILE: arch/frv/include/asm/unistd.h:290:
+#define __NR_mq_notify		(__NR_mq_open+4)
                       		             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#9551: FILE: arch/frv/include/asm/unistd.h:291:
+#define __NR_mq_getsetattr	(__NR_mq_open+5)
                           	             ^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#9634: FILE: arch/frv/include/asm/unistd.h:374:
+ * What we want is __attribute__((weak,alias("sys_ni_syscall"))),

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __alias("sys_ni_syscall") over __attribute__((alias("sys_ni_syscall")))
#9634: FILE: arch/frv/include/asm/unistd.h:374:
+ * What we want is __attribute__((weak,alias("sys_ni_syscall"))),

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#9649: FILE: arch/frv/include/asm/user.h:1:
+/* user.h: FR-V core file format stuff

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#9705: FILE: arch/frv/include/asm/user.h:57:
+	 * from the ptrace(3,...) function.  */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#9716: FILE: arch/frv/include/asm/user.h:68:
+						 * esp register.  */

WARNING:UNNECESSARY_INT: Prefer 'long' over 'long int' as the int is unnecessary
#9717: FILE: arch/frv/include/asm/user.h:69:
+	long int		signal;		/* Signal that caused the core dump. */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#9735: FILE: arch/frv/include/asm/vga.h:1:
+/* vga.h: VGA register stuff

CHECK:LINE_SPACING: Please don't use multiple blank lines
#9749: FILE: arch/frv/include/asm/vga.h:15:
+
+

WARNING:TYPO_SPELLING: 'convertion' may be misspelled - perhaps 'conversion'?
#9758: FILE: arch/frv/include/asm/virtconvert.h:1:
+/* virtconvert.h: virtual/physical/page address convertion
                                                 ^^^^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#9758: FILE: arch/frv/include/asm/virtconvert.h:1:
+/* virtconvert.h: virtual/physical/page address convertion

CHECK:SPACING: No space is necessary after a cast
#9781: FILE: arch/frv/include/asm/virtconvert.h:24:
+#define phys_to_virt(vaddr)	((void *) ((unsigned long)(vaddr) + PAGE_OFFSET))

CHECK:SPACING: No space is necessary after a cast
#9782: FILE: arch/frv/include/asm/virtconvert.h:25:
+#define virt_to_phys(vaddr)	((unsigned long) (vaddr) - PAGE_OFFSET)

CHECK:SPACING: No space is necessary after a cast
#9786: FILE: arch/frv/include/asm/virtconvert.h:29:
+#define phys_to_virt(vaddr)	((void *) (vaddr))

CHECK:SPACING: No space is necessary after a cast
#9787: FILE: arch/frv/include/asm/virtconvert.h:30:
+#define virt_to_phys(vaddr)	((unsigned long) (vaddr))

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#9805: FILE: arch/frv/include/asm/xor.h:1:
+#include <asm-generic/xor.h>

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000141503.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 479 errors, 739 warnings, 645 checks, 8626 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000141503.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
