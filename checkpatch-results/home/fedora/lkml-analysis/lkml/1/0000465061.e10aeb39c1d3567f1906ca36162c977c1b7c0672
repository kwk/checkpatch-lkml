WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#31: 
Signed-off-by:	Suleiman Souhlal <suleiman@google.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'drive->current_speed == 0xff'
#95: FILE: drivers/ide/ide-io.c:1015:
+	if ((drive->current_speed == 0xff) &&
+	    ((rq->cmd_type == REQ_TYPE_ATA_CMD) ||
+	    (rq->cmd_type == REQ_TYPE_ATA_TASK)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rq->cmd_type == REQ_TYPE_ATA_CMD'
#95: FILE: drivers/ide/ide-io.c:1015:
+	if ((drive->current_speed == 0xff) &&
+	    ((rq->cmd_type == REQ_TYPE_ATA_CMD) ||
+	    (rq->cmd_type == REQ_TYPE_ATA_TASK)))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rq->cmd_type == REQ_TYPE_ATA_TASK'
#95: FILE: drivers/ide/ide-io.c:1015:
+	if ((drive->current_speed == 0xff) &&
+	    ((rq->cmd_type == REQ_TYPE_ATA_CMD) ||
+	    (rq->cmd_type == REQ_TYPE_ATA_TASK)))

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#113: FILE: drivers/ide/ide-iops.c:736:
+	switch(speed) {
+		case XFER_UDMA_7:   drive->id->dma_ultra |= 0x8080; break;
+		case XFER_UDMA_6:   drive->id->dma_ultra |= 0x4040; break;
+		case XFER_UDMA_5:   drive->id->dma_ultra |= 0x2020; break;
+		case XFER_UDMA_4:   drive->id->dma_ultra |= 0x1010; break;
+		case XFER_UDMA_3:   drive->id->dma_ultra |= 0x0808; break;
+		case XFER_UDMA_2:   drive->id->dma_ultra |= 0x0404; break;
+		case XFER_UDMA_1:   drive->id->dma_ultra |= 0x0202; break;
+		case XFER_UDMA_0:   drive->id->dma_ultra |= 0x0101; break;
+		case XFER_MW_DMA_2: drive->id->dma_mword |= 0x0404; break;
+		case XFER_MW_DMA_1: drive->id->dma_mword |= 0x0202; break;
+		case XFER_MW_DMA_0: drive->id->dma_mword |= 0x0101; break;
+		case XFER_SW_DMA_2: drive->id->dma_1word |= 0x0404; break;
+		case XFER_SW_DMA_1: drive->id->dma_1word |= 0x0202; break;
+		case XFER_SW_DMA_0: drive->id->dma_1word |= 0x0101; break;
+		default: break;

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required before the open parenthesis '('
#113: FILE: drivers/ide/ide-iops.c:736:
+	switch(speed) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#114: FILE: drivers/ide/ide-iops.c:737:
+		case XFER_UDMA_7:   drive->id->dma_ultra |= 0x8080; break;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#115: FILE: drivers/ide/ide-iops.c:738:
+		case XFER_UDMA_6:   drive->id->dma_ultra |= 0x4040; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#116: FILE: drivers/ide/ide-iops.c:739:
+		case XFER_UDMA_5:   drive->id->dma_ultra |= 0x2020; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#117: FILE: drivers/ide/ide-iops.c:740:
+		case XFER_UDMA_4:   drive->id->dma_ultra |= 0x1010; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#118: FILE: drivers/ide/ide-iops.c:741:
+		case XFER_UDMA_3:   drive->id->dma_ultra |= 0x0808; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#119: FILE: drivers/ide/ide-iops.c:742:
+		case XFER_UDMA_2:   drive->id->dma_ultra |= 0x0404; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#120: FILE: drivers/ide/ide-iops.c:743:
+		case XFER_UDMA_1:   drive->id->dma_ultra |= 0x0202; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#121: FILE: drivers/ide/ide-iops.c:744:
+		case XFER_UDMA_0:   drive->id->dma_ultra |= 0x0101; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#122: FILE: drivers/ide/ide-iops.c:745:
+		case XFER_MW_DMA_2: drive->id->dma_mword |= 0x0404; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#123: FILE: drivers/ide/ide-iops.c:746:
+		case XFER_MW_DMA_1: drive->id->dma_mword |= 0x0202; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#124: FILE: drivers/ide/ide-iops.c:747:
+		case XFER_MW_DMA_0: drive->id->dma_mword |= 0x0101; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#125: FILE: drivers/ide/ide-iops.c:748:
+		case XFER_SW_DMA_2: drive->id->dma_1word |= 0x0404; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#126: FILE: drivers/ide/ide-iops.c:749:
+		case XFER_SW_DMA_1: drive->id->dma_1word |= 0x0202; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#127: FILE: drivers/ide/ide-iops.c:750:
+		case XFER_SW_DMA_0: drive->id->dma_1word |= 0x0101; break;

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#128: FILE: drivers/ide/ide-iops.c:751:
+		default: break;

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#200: FILE: drivers/ide/ide-iops.c:848:
+		return (error);

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#203: FILE: drivers/ide/ide-iops.c:851:
+int ide_config_drive_speed (ide_drive_t *drive, u8 speed)

CHECK:BRACES: braces {} should be used on all arms of this statement
#218: FILE: drivers/ide/ide-iops.c:866:
+	if (drive->queue != NULL && !in_interrupt()) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "drive->queue"
#218: FILE: drivers/ide/ide-iops.c:866:
+	if (drive->queue != NULL && !in_interrupt()) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#220: FILE: drivers/ide/ide-iops.c:868:
+		error = ide_wait_cmd(drive, WIN_SETFEATURES, speed,
+		    SETFEATURES_XFER, 0, NULL);

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#224: FILE: drivers/ide/ide-iops.c:872:
+			return (error);

CHECK:BRACES: Unbalanced braces around else statement
#227: FILE: drivers/ide/ide-iops.c:875:
+	} else

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#230: FILE: drivers/ide/ide-iops.c:878:
+	return (error);

ERROR:CODE_INDENT: code indent should use tabs where possible
#253: FILE: include/linux/ide.h:619:
+        u8^Idesired_speed;^I/* desired transfer rate set */$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: include/linux/ide.h:619:
+        u8^Idesired_speed;^I/* desired transfer rate set */$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#261: FILE: include/linux/ide.h:1188:
+extern int ide_config_drive_speed_irq(ide_drive_t *, u8);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'ide_drive_t *' should also have an identifier name
#261: FILE: include/linux/ide.h:1188:
+extern int ide_config_drive_speed_irq(ide_drive_t *, u8);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#261: FILE: include/linux/ide.h:1188:
+extern int ide_config_drive_speed_irq(ide_drive_t *, u8);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000465061.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 21 errors, 5 warnings, 8 checks, 205 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000465061.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
