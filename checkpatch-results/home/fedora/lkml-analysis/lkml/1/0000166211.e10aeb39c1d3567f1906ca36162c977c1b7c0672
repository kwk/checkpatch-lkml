CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#131: FILE: include/linux/ftrace.h:125:
+extern void unregister_ftrace_function_hook_all(char *glob);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:BIT_MACRO: Prefer using the BIT macro
#153: FILE: kernel/trace/ftrace.c:1250:
+#define FTRACE_FUNC_HASHSIZE (1 << FTRACE_HASH_BITS)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#195: FILE: kernel/trace/ftrace.c:1292:
+static struct ftrace_ops trace_hook_ops __read_mostly =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#210: FILE: kernel/trace/ftrace.c:1307:
+		struct hlist_head *hhd = &ftrace_func_hash[i];
+		if (hhd->first)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#231: FILE: kernel/trace/ftrace.c:1328:
+		struct hlist_head *hhd = &ftrace_func_hash[i];
+		if (hhd->first)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#241: FILE: kernel/trace/ftrace.c:1338:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#252: FILE: kernel/trace/ftrace.c:1349:
+
+

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#274: FILE: kernel/trace/ftrace.c:1371:
+	do_for_each_ftrace_rec(pg, rec) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#337: FILE: kernel/trace/ftrace.c:1434:
+	if (glob && (strcmp(glob, "*") || !strlen(glob)))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#339: FILE: kernel/trace/ftrace.c:1436:
+	else {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#355: FILE: kernel/trace/ftrace.c:1452:
+		hlist_for_each_entry_safe(entry, n, tmp, hhd, node) {
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000166211.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 2 warnings, 8 checks, 283 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000166211.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
