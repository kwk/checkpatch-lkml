WARNING:BAD_SIGN_OFF: Duplicate signature
#83: 
Signed-off-by: Steven Rostedt <srostedt@redhat.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#171: FILE: arch/x86/kernel/ftrace.c:89:
+static unsigned nmi_wait_count;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#195: FILE: arch/x86/kernel/ftrace.c:113:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#262: FILE: arch/x86/kernel/ftrace.c:180:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#264: FILE: arch/x86/kernel/ftrace.c:182:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#364: FILE: include/linux/ftrace.h:99:
+extern int ftrace_make_nop(struct module *mod,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#389: FILE: include/linux/ftrace.h:122:
+extern int ftrace_make_call(struct dyn_ftrace *rec, unsigned long addr);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#391: FILE: include/linux/ftrace.h:124:
+
+

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#393: FILE: include/linux/ftrace.h:126:
+extern int ftrace_arch_read_dyn_info(char *buf, int size);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#402: FILE: include/linux/ftrace.h:253:
+extern void ftrace_init_module(struct module *mod,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#438: FILE: kernel/trace/ftrace.c:329:
+	printk(KERN_CONT "%s", fmt);

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#438: FILE: kernel/trace/ftrace.c:329:
+	printk(KERN_CONT "%s", fmt);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#441: FILE: kernel/trace/ftrace.c:332:
+		printk(KERN_CONT "%s%02x", i ? ":" : "", p[i]);

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#441: FILE: kernel/trace/ftrace.c:332:
+		printk(KERN_CONT "%s%02x", i ? ":" : "", p[i]);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#457: FILE: kernel/trace/ftrace.c:348:
+		printk(KERN_CONT "\n");

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#457: FILE: kernel/trace/ftrace.c:348:
+		printk(KERN_CONT "\n");

CHECK:BRACES: Unbalanced braces around else statement
#545: FILE: kernel/trace/ftrace.c:470:
+				} else

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000201978.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 9 checks, 548 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000201978.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
