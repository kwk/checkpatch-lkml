CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#94: FILE: drivers/rapidio/rio.c:360:
+int rio_map_inb_region(struct rio_mport *mport, struct resource *rio_res,
+			dma_addr_t local, u32 rflags)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#120: FILE: drivers/rapidio/rio.c:386:
+int rio_map_outb_region(struct rio_mport *mport, u16 tid,
+		struct resource *rio_res, phys_addr_t lstart, u32 rflags)

WARNING:LINE_SPACING: Missing a blank line after declarations
#142: FILE: drivers/rapidio/rio.c:408:
+	unsigned long flags;
+	if (!mport->mops)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#157: FILE: drivers/rapidio/rio.c:423:
+	unsigned long flags;
+	if (!mport->mops)

WARNING:SPACING: Unnecessary space before function pointer arguments
#205: FILE: include/linux/rio.h:337:
+	int (*map_inb) (struct rio_mport *, dma_addr_t lstart,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mport *' should also have an identifier name
#205: FILE: include/linux/rio.h:337:
+	int (*map_inb) (struct rio_mport *, dma_addr_t lstart,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:SPACING: Unnecessary space before function pointer arguments
#208: FILE: include/linux/rio.h:340:
+	int (*map_outb) (struct rio_mport *, phys_addr_t lstart,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mport *' should also have an identifier name
#208: FILE: include/linux/rio.h:340:
+	int (*map_outb) (struct rio_mport *, phys_addr_t lstart,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#209: FILE: include/linux/rio.h:341:
+	int (*map_outb) (struct rio_mport *, phys_addr_t lstart,
+			resource_size_t rstart,

WARNING:SPACING: Unnecessary space before function pointer arguments
#211: FILE: include/linux/rio.h:343:
+	void (*unmap_inb) (struct rio_mport *, dma_addr_t lstart);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mport *' should also have an identifier name
#211: FILE: include/linux/rio.h:343:
+	void (*unmap_inb) (struct rio_mport *, dma_addr_t lstart);

WARNING:SPACING: Unnecessary space before function pointer arguments
#212: FILE: include/linux/rio.h:344:
+	void (*unmap_outb) (struct rio_mport *, phys_addr_t lstart);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mport *' should also have an identifier name
#212: FILE: include/linux/rio.h:344:
+	void (*unmap_outb) (struct rio_mport *, phys_addr_t lstart);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#227: FILE: include/linux/rio_drv.h:336:
+static inline void rio_init_io_res(struct resource *res, resource_size_t start,
+		resource_size_t size, const char *name, unsigned long flag)

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#250: FILE: include/linux/rio_drv.h:420:
+extern int rio_map_inb_region(struct rio_mport *, struct resource *,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mport *' should also have an identifier name
#250: FILE: include/linux/rio_drv.h:420:
+extern int rio_map_inb_region(struct rio_mport *, struct resource *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct resource *' should also have an identifier name
#250: FILE: include/linux/rio_drv.h:420:
+extern int rio_map_inb_region(struct rio_mport *, struct resource *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'dma_addr_t' should also have an identifier name
#250: FILE: include/linux/rio_drv.h:420:
+extern int rio_map_inb_region(struct rio_mport *, struct resource *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#250: FILE: include/linux/rio_drv.h:420:
+extern int rio_map_inb_region(struct rio_mport *, struct resource *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#251: FILE: include/linux/rio_drv.h:421:
+extern int rio_map_inb_region(struct rio_mport *, struct resource *,
+				dma_addr_t, u32);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#252: FILE: include/linux/rio_drv.h:422:
+extern int rio_map_outb_region(struct rio_mport *, u16, struct resource *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mport *' should also have an identifier name
#252: FILE: include/linux/rio_drv.h:422:
+extern int rio_map_outb_region(struct rio_mport *, u16, struct resource *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u16' should also have an identifier name
#252: FILE: include/linux/rio_drv.h:422:
+extern int rio_map_outb_region(struct rio_mport *, u16, struct resource *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct resource *' should also have an identifier name
#252: FILE: include/linux/rio_drv.h:422:
+extern int rio_map_outb_region(struct rio_mport *, u16, struct resource *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'phys_addr_t' should also have an identifier name
#252: FILE: include/linux/rio_drv.h:422:
+extern int rio_map_outb_region(struct rio_mport *, u16, struct resource *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#252: FILE: include/linux/rio_drv.h:422:
+extern int rio_map_outb_region(struct rio_mport *, u16, struct resource *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#253: FILE: include/linux/rio_drv.h:423:
+extern int rio_map_outb_region(struct rio_mport *, u16, struct resource *,
+				phys_addr_t, u32);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#254: FILE: include/linux/rio_drv.h:424:
+extern void rio_unmap_inb_region(struct rio_mport *, dma_addr_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mport *' should also have an identifier name
#254: FILE: include/linux/rio_drv.h:424:
+extern void rio_unmap_inb_region(struct rio_mport *, dma_addr_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'dma_addr_t' should also have an identifier name
#254: FILE: include/linux/rio_drv.h:424:
+extern void rio_unmap_inb_region(struct rio_mport *, dma_addr_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#255: FILE: include/linux/rio_drv.h:425:
+extern void rio_unmap_outb_region(struct rio_mport *, phys_addr_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mport *' should also have an identifier name
#255: FILE: include/linux/rio_drv.h:425:
+extern void rio_unmap_outb_region(struct rio_mport *, phys_addr_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'phys_addr_t' should also have an identifier name
#255: FILE: include/linux/rio_drv.h:425:
+extern void rio_unmap_outb_region(struct rio_mport *, phys_addr_t);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#263: FILE: include/linux/rio_drv.h:475:
+extern u32 rio_get_mport_id(struct rio_mport *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rio_mport *' should also have an identifier name
#263: FILE: include/linux/rio_drv.h:475:
+extern u32 rio_get_mport_id(struct rio_mport *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000133358.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 24 warnings, 11 checks, 202 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000133358.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
