WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#38: 
> https://blackfin.uclinux.org/gf/download/frsrelease/39/2583/blackfin-arch.p 

WARNING:REPEATED_WORD: Possible repeated word: 'the'
#46: 
> on top of the -mm kernel but rather patch the the patch old itself. 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#117: FILE: arch/blackfin/Kconfig:14:
+^Idefault y $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#168: FILE: arch/blackfin/Kconfig:436:
+config EXCPT_IRQ_SYSC_L1
+	bool "Locate entire ASM lowlevel excepetion / interrupt - Syscall and CPLB handler code in L1 Memory"
+	default y
+	help
+	  If enabled entire ASM lowlevel exception and interrupt entry code (STORE/RESTORE CONTEXT) is linked
+	  into L1 instruction memory.(less latency)
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:TYPO_SPELLING: 'excepetion' may be misspelled - perhaps 'exception'?
#169: FILE: arch/blackfin/Kconfig:437:
+	bool "Locate entire ASM lowlevel excepetion / interrupt - Syscall and CPLB handler code in L1 Memory"
 	                                 ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#175: FILE: arch/blackfin/Kconfig:443:
+config DO_IRQ_L1
+	bool "Locate frequently called do_irq dispatcher function in L1 Memory"
+	default y
+	help
+	  If enabled frequently called do_irq dispatcher function is linked
+	  into L1 instruction memory.(less latency)
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#182: FILE: arch/blackfin/Kconfig:450:
+config CORE_TIMER_IRQ_L1
+	bool "Locate frequently called timer_interrupt() function in L1 Memory"
+	default y
+	help
+	  If enabled frequently called timer_interrupt() function is linked
+	  into L1 instruction memory.(less latency)
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#189: FILE: arch/blackfin/Kconfig:457:
+config IDLE_L1
+	bool "Locate frequently idle function in L1 Memory"
+	default y
+	help
+	  If enabled frequently called idle function is linked
+	  into L1 instruction memory.(less latency)
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#196: FILE: arch/blackfin/Kconfig:464:
+config SCHEDULE_L1
+	bool "Locate kernel schedule function in L1 Memory"
+	default y
+	help
+	  If enabled frequently called kernel schedule is linked
+	  into L1 instruction memory.(less latency)
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#203: FILE: arch/blackfin/Kconfig:471:
+config ARITHMETIC_OPS_L1
+	bool "Locate kernel owned arithmetic functions in L1 Memory"
+	default y
+	help
+	  If enabled arithmetic functions are linked
+	  into L1 instruction memory.(less latency)
+	  

ERROR:TRAILING_WHITESPACE: trailing whitespace
#209: FILE: arch/blackfin/Kconfig:477:
+^I  $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#210: FILE: arch/blackfin/Kconfig:478:
+config ACCESS_OK_L1
+	bool "Locate access_ok function in L1 Memory"
+	default y
+	help
+	  If enabled access_ok function is linked
+	  into L1 instruction memory.(less latency)
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#217: FILE: arch/blackfin/Kconfig:485:
+config MEMSET_L1
+	bool "Locate memset function in L1 Memory"
+	default y
+	help
+	  If enabled memset function is linked
+	  into L1 instruction memory.(less latency)
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#224: FILE: arch/blackfin/Kconfig:492:
+config MEMCPY_L1
+	bool "Locate memcpy function in L1 Memory"
+	default y
+	help
+	  If enabled memcpy function is linked
+	  into L1 instruction memory.(less latency)
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#231: FILE: arch/blackfin/Kconfig:499:
+config SYS_BFIN_SPINLOCK_L1
+	bool "Locate sys_bfin_spinlock function in L1 Memory"
+	default y
+	help
+	  If enabled sys_bfin_spinlock function is linked
+	  into L1 instruction memory.(less latency)
+	  

ERROR:TRAILING_WHITESPACE: trailing whitespace
#237: FILE: arch/blackfin/Kconfig:505:
+^I  $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#238: FILE: arch/blackfin/Kconfig:506:
+config IP_CHECKSUM_L1
+	bool "Locate IP Checksum function in L1 Memory"
+	default n
+	help
+	  If enabled IP Checksum function is linked
+	  into L1 instruction memory.(less latency)
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#245: FILE: arch/blackfin/Kconfig:513:
+config SYSCALL_TAB_L1
+	bool "Locate Syscall Table L1 Data Memory"
+	default n
+	depends on !BF531
+	help
+	  If enabled the Syscall LUT is linked
+	  into L1 data memory.(less latency)
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#253: FILE: arch/blackfin/Kconfig:521:
+config CPLB_SWITCH_TAB_L1
+	bool "Locate CPLB Switch Tables L1 Data Memory"
+	default n
+	depends on !BF531
+	help
+	  If enabled the CPLB Switch Tables are linked
+	  into L1 data memory.(less latency)
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#268: FILE: arch/blackfin/Kconfig:585:
+config BLKFIN_DCACHE_BANKA
+	bool "Enable only 16k BankA DCACHE - BankB is SRAM"
+	depends on BLKFIN_DCACHE && !BF531
+	default n

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void' should also have an identifier name
#323: FILE: arch/blackfin/kernel/process.c:102:
+void cpu_idle(void)__attribute__((l1_text));

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#337: FILE: arch/blackfin/kernel/process.c:358:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#340: FILE: arch/blackfin/kernel/process.c:361:
+	if (segment_eq(get_fs(),KERNEL_DS))
 	                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#355: FILE: arch/blackfin/kernel/process.c:376:
+	if (addr >= L1_SCRATCH_START
+	    && addr + size <= L1_SCRATCH_START + L1_SCRATCH_LENGTH)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#359: FILE: arch/blackfin/kernel/process.c:380:
+	if (addr >= L1_CODE_START + (_etext_l1 - _stext_l1)
+	    && addr + size <= L1_CODE_START + L1_CODE_LENGTH)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#364: FILE: arch/blackfin/kernel/process.c:385:
+	if (addr >= L1_DATA_A_START + (_ebss_l1 - _sdata_l1)
+	    && addr + size <= L1_DATA_A_START + L1_DATA_A_LENGTH)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#369: FILE: arch/blackfin/kernel/process.c:390:
+	if (addr >= L1_DATA_B_START
+	    && addr + size <= L1_DATA_B_START + L1_DATA_B_LENGTH)

WARNING:LONG_LINE_COMMENT: line length of 115 exceeds 100 columns
#383: FILE: arch/blackfin/kernel/setup.c:312:
+	memory_end -= SIZE_4K; /*In case there is no valid CPLB behind memory_end make sure we don't get to close*/

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: No space is necessary after a cast
#394: FILE: arch/blackfin/kernel/setup.c:452:
+	if ((start <= (u32) _stext && end >= (u32) _end)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#395: FILE: arch/blackfin/kernel/setup.c:453:
+	if ((start <= (u32) _stext && end >= (u32) _end)
+	    || (start >= (u32) _stext && end <= (u32) _end))

CHECK:SPACING: No space is necessary after a cast
#395: FILE: arch/blackfin/kernel/setup.c:453:
+	    || (start >= (u32) _stext && end <= (u32) _end))

CHECK:LINE_SPACING: Please don't use multiple blank lines
#423: FILE: arch/blackfin/kernel/setup.c:810:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#424: FILE: arch/blackfin/kernel/setup.c:811:
+	switch(bfin_read_DMEM_CONTROL() & (1 << DMC0_P | 1 << DMC1_P)) {
+		case ACACHE_BSRAM:
[...]
+		case ACACHE_BCACHE:
[...]
+		case ASRAM_BSRAM:
[...]
+		default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:SPACING: space required before the open parenthesis '('
#424: FILE: arch/blackfin/kernel/setup.c:811:
+	switch(bfin_read_DMEM_CONTROL() & (1 << DMC0_P | 1 << DMC1_P)) {

WARNING:STRING_FRAGMENTS: Consecutive strings are generally better as a single string
#426: FILE: arch/blackfin/kernel/setup.c:813:
+			seq_printf(m, "DBANK-A:\tCACHE\n" "DBANK-B:\tSRAM\n");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#426: FILE: arch/blackfin/kernel/setup.c:813:
+			seq_printf(m, "DBANK-A:\tCACHE\n" "DBANK-B:\tSRAM\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#427: FILE: arch/blackfin/kernel/setup.c:814:
+^I^I^Idcache_size = 16; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#429: FILE: arch/blackfin/kernel/setup.c:816:
+^I^I^Ibreak;^I^I^I^I$

WARNING:STRING_FRAGMENTS: Consecutive strings are generally better as a single string
#431: FILE: arch/blackfin/kernel/setup.c:818:
+			seq_printf(m, "DBANK-A:\tCACHE\n" "DBANK-B:\tCACHE\n");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#431: FILE: arch/blackfin/kernel/setup.c:818:
+			seq_printf(m, "DBANK-A:\tCACHE\n" "DBANK-B:\tCACHE\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#432: FILE: arch/blackfin/kernel/setup.c:819:
+^I^I^Idcache_size = 32; $

WARNING:STRING_FRAGMENTS: Consecutive strings are generally better as a single string
#436: FILE: arch/blackfin/kernel/setup.c:823:
+			seq_printf(m, "DBANK-A:\tSRAM\n" "DBANK-B:\tSRAM\n");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#436: FILE: arch/blackfin/kernel/setup.c:823:
+			seq_printf(m, "DBANK-A:\tSRAM\n" "DBANK-B:\tSRAM\n");

ERROR:TRAILING_WHITESPACE: trailing whitespace
#437: FILE: arch/blackfin/kernel/setup.c:824:
+^I^I^Idcache_size = 0; $

CHECK:LINE_SPACING: Please don't use multiple blank lines
#444: FILE: arch/blackfin/kernel/setup.c:831:
+
+

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#464: FILE: arch/blackfin/kernel/signal.c:69:
+asmlinkage int sys_sigaltstack(const stack_t * uss, stack_t * uoss)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#464: FILE: arch/blackfin/kernel/signal.c:69:
+asmlinkage int sys_sigaltstack(const stack_t * uss, stack_t * uoss)

CHECK:CAMELCASE: Avoid CamelCase: <DItype>
#540: FILE: arch/blackfin/lib/ashldi3.c:35:
+DItype __ashldi3(DItype u, word_type b)__attribute__((l1_text));

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

ERROR:TRAILING_WHITESPACE: trailing whitespace
#707: FILE: arch/blackfin/lib/udivsi3.S:115:
+  R2 = R0 >> 16; $

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#715: FILE: arch/blackfin/lib/umodsi3.S:29:
  * 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#790: FILE: arch/blackfin/mach-bf537/boards/stamp.c:90:
+	unsigned int num_devices=ARRAY_SIZE(bfin_isp1761_devices);
 	                        ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#792: FILE: arch/blackfin/mach-bf537/boards/stamp.c:92:
+	printk(KERN_INFO "%s(): registering device resources\n", __FUNCTION__);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#792: FILE: arch/blackfin/mach-bf537/boards/stamp.c:92:
+	printk(KERN_INFO "%s(): registering device resources\n", __FUNCTION__);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1171: FILE: include/asm-blackfin/cplbinit.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1172: FILE: include/asm-blackfin/cplbinit.h:2:
+ * File:         include/asm-blackfin/cplbinit.h

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:CVS_KEYWORD: CVS style keyword markers, these will _not_ be updated
#1179: FILE: include/asm-blackfin/cplbinit.h:9:
+ * Rev:          $Id: cplbinit.h,v 1.3 2007/01/02 03:11:59 adamliyi Exp $

Since linux moved to git, the CVS markers are no longer used.
So, CVS style keywords ($Id$, $Revision$, $Log$) should not be
added.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1199: FILE: include/asm-blackfin/cplbinit.h:29:
+ * 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

ERROR:OPEN_BRACE: open brace '{' following enum go on the same line
#1213: FILE: include/asm-blackfin/cplbinit.h:43:
+enum
+{ZERO_P, L1I_MEM, L1D_MEM, SDRAM_KERN , SDRAM_RAM_MTD, SDRAM_DMAZ, RES_MEM, ASYNC_MEM, L2_MEM};

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1213: FILE: include/asm-blackfin/cplbinit.h:43:
+{ZERO_P, L1I_MEM, L1D_MEM, SDRAM_KERN , SDRAM_RAM_MTD, SDRAM_DMAZ, RES_MEM, ASYNC_MEM, L2_MEM};
                                       ^

WARNING:TYPO_SPELLING: 'prefered' may be misspelled - perhaps 'preferred'?
#1218: FILE: include/asm-blackfin/cplbinit.h:48:
+	u32 psize; /* prefered size if any otherwise 1MB or 4MB*/
 	              ^^^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1227: FILE: include/asm-blackfin/cplbinit.h:57:
+  u_long *tab;$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1232: FILE: include/asm-blackfin/cplbinit.h:62:
+u_long icplb_table[MAX_CPLBS+1];
                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1233: FILE: include/asm-blackfin/cplbinit.h:63:
+u_long dcplb_table[MAX_CPLBS+1];
                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1245: FILE: include/asm-blackfin/cplbinit.h:75:
+u_long ipdt_table[MAX_SWITCH_I_CPLBS+1]__attribute__((l1_data));
                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1246: FILE: include/asm-blackfin/cplbinit.h:76:
+u_long dpdt_table[MAX_SWITCH_D_CPLBS+1]__attribute__((l1_data));
                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1255: FILE: include/asm-blackfin/cplbinit.h:85:
+u_long ipdt_table[MAX_SWITCH_I_CPLBS+1];
                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1256: FILE: include/asm-blackfin/cplbinit.h:86:
+u_long dpdt_table[MAX_SWITCH_D_CPLBS+1];
                                     ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1386: FILE: include/asm-blackfin/delay.h:11:
+                              "1:\t NOP;\n\t"$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LONG_LINE: line length of 137 exceeds 100 columns
#1430: FILE: include/asm-blackfin/mach-bf533/bf533.h:274:
+#define L1_DMEMORY       (CPLB_SUPV_WR | CPLB_USER_WR | CPLB_USER_RD | CPLB_VALID | ANOMALY_05000158_WORKAROUND | CPLB_LOCK | CPLB_DIRTY)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1442: FILE: include/asm-blackfin/mach-bf533/mem_map.h:56:
+#define BLKFIN_ICACHESIZE	(16*1024)
                          	   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1444: FILE: include/asm-blackfin/mach-bf533/mem_map.h:58:
+#define BLKFIN_ICACHESIZE	(0*1024)
                          	  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1460: FILE: include/asm-blackfin/mach-bf533/mem_map.h:80:
+#define BLKFIN_DCACHESIZE	(16*1024)
                          	   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1468: FILE: include/asm-blackfin/mach-bf533/mem_map.h:86:
+#define BLKFIN_DCACHESIZE	(32*1024)
                          	   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1479: FILE: include/asm-blackfin/mach-bf533/mem_map.h:94:
+#define BLKFIN_DCACHESIZE	(0*1024)
                          	  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1495: FILE: include/asm-blackfin/mach-bf533/mem_map.h:118:
+#define BLKFIN_DCACHESIZE	(16*1024)
                          	   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1504: FILE: include/asm-blackfin/mach-bf533/mem_map.h:125:
+#define BLKFIN_DCACHESIZE	(32*1024)
                          	   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1515: FILE: include/asm-blackfin/mach-bf533/mem_map.h:133:
+#define BLKFIN_DCACHESIZE	(0*1024)
                          	  ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1526: FILE: include/asm-blackfin/mach-bf533/mem_map.h:147:
+
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1531: FILE: include/asm-blackfin/mach-bf533/mem_map.h:151:
+#define BLKFIN_DCACHESIZE	(16*1024)
                          	   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1537: FILE: include/asm-blackfin/mach-bf533/mem_map.h:156:
+#define BLKFIN_DCACHESIZE	(0*1024)
                          	  ^

WARNING:LONG_LINE: line length of 138 exceeds 100 columns
#1568: FILE: include/asm-blackfin/mach-bf537/bf537.h:255:
+#define L1_DMEMORY       (CPLB_SUPV_WR | CPLB_USER_WR | CPLB_USER_RD | CPLB_VALID | ANOMALY_05000158_WORKAROUND | CPLB_LOCK | CPLB_DIRTY )

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1568: FILE: include/asm-blackfin/mach-bf537/bf537.h:255:
+#define L1_DMEMORY       (CPLB_SUPV_WR | CPLB_USER_WR | CPLB_USER_RD | CPLB_VALID | ANOMALY_05000158_WORKAROUND | CPLB_LOCK | CPLB_DIRTY )

WARNING:LONG_LINE_COMMENT: line length of 106 exceeds 100 columns
#1580: FILE: include/asm-blackfin/mach-bf537/defBF534.h:1174:
+#define SPI_SIZE	0x0100	/* Size of Words (16/8* Bits)                                           */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1592: FILE: include/asm-blackfin/mach-bf537/mem_map.h:63:
+#define BLKFIN_ICACHESIZE	(16*1024)
                          	   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1594: FILE: include/asm-blackfin/mach-bf537/mem_map.h:65:
+#define BLKFIN_ICACHESIZE	(0*1024)
                          	  ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1597: FILE: include/asm-blackfin/mach-bf537/mem_map.h:68:
+
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1611: FILE: include/asm-blackfin/mach-bf537/mem_map.h:82:
+#define BLKFIN_DCACHESIZE	(16*1024)
                          	   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1619: FILE: include/asm-blackfin/mach-bf537/mem_map.h:88:
+#define BLKFIN_DCACHESIZE	(32*1024)
                          	   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1630: FILE: include/asm-blackfin/mach-bf537/mem_map.h:96:
+#define BLKFIN_DCACHESIZE	(0*1024)
                          	  ^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1643: FILE: include/asm-blackfin/mach-bf537/mem_map.h:111:
 
+

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1651: FILE: include/asm-blackfin/mach-bf537/mem_map.h:118:
+#define BLKFIN_DCACHESIZE	(16*1024)
                          	   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1660: FILE: include/asm-blackfin/mach-bf537/mem_map.h:125:
+#define BLKFIN_DCACHESIZE	(32*1024)
                          	   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1671: FILE: include/asm-blackfin/mach-bf537/mem_map.h:133:
+#define BLKFIN_DCACHESIZE	(0*1024)
                          	  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1686: FILE: include/asm-blackfin/mach-bf537/mem_map.h:154:
+#define BLKFIN_DCACHESIZE	(16*1024)
                          	   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1697: FILE: include/asm-blackfin/mach-bf537/mem_map.h:161:
+#define BLKFIN_DCACHESIZE	(32*1024)
                          	   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1706: FILE: include/asm-blackfin/mach-bf537/mem_map.h:169:
+#define BLKFIN_DCACHESIZE	(0*1024)
                          	  ^

WARNING:LONG_LINE: line length of 137 exceeds 100 columns
#1735: FILE: include/asm-blackfin/mach-bf561/bf561.h:351:
+#define L1_DMEMORY       (CPLB_SUPV_WR | CPLB_USER_WR | CPLB_USER_RD | CPLB_VALID | ANOMALY_05000158_WORKAROUND | CPLB_LOCK | CPLB_DIRTY)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1747: FILE: include/asm-blackfin/mach-bf561/mem_map.h:27:
+#define BLKFIN_ICACHESIZE	(16*1024)
                          	   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1749: FILE: include/asm-blackfin/mach-bf561/mem_map.h:29:
+#define BLKFIN_ICACHESIZE	(0*1024)
                          	  ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1765: FILE: include/asm-blackfin/mach-bf561/mem_map.h:47:
+#define BLKFIN_DCACHESIZE	(16*1024)
                          	   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1773: FILE: include/asm-blackfin/mach-bf561/mem_map.h:53:
+#define BLKFIN_DCACHESIZE	(32*1024)
                          	   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1784: FILE: include/asm-blackfin/mach-bf561/mem_map.h:61:
+#define BLKFIN_DCACHESIZE	(0*1024)
                          	  ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1817: FILE: include/asm-blackfin/uaccess.h:45:
+static inline int _access_ok(unsigned long addr, unsigned long size) { return 1; } $

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1829: FILE: include/asm-blackfin/uaccess.h:48:
+extern int _access_ok(unsigned long addr, unsigned long size)__attribute__((l1_text));

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1849: FILE: include/asm-blackfin/uaccess.h:50:
+extern int _access_ok(unsigned long addr, unsigned long size);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1878: FILE: include/asm-blackfin/xor.h:1:
+#include <asm-generic/xor.h>

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000460708.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 21 errors, 37 warnings, 48 checks, 1563 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000460708.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
