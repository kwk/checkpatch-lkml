WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#31: 
dcache_lock: 3000 0 [618] [<ffffffff8033badd>] _atomic_dec_and_lock+0x39/0x58 [17] [<ffffffff802d6dce>] sysfs_open_file+0x28/0x25a [160] [<ffffffff802a5b61>] d_instantiate+0x2a/0xad [52] [<ffffffff8029d926>] __link_path_walk+0x270/0xde9

WARNING:INCLUDE_LINUX: Use #include <linux/atomic.h> instead of <asm/atomic.h>
#69: FILE: include/linux/lockdep.h:19:
+#include <asm/atomic.h>

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#100: FILE: include/linux/lockdep.h:256:
+extern void lock_contended(struct lockdep_map *lock, int read,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#124: FILE: kernel/lockdep.c:2266:
+print_lock_contention_bug(struct task_struct *curr, struct lockdep_map *lock,
+			   unsigned long ip)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#131: FILE: kernel/lockdep.c:2273:
+	printk("\n=================================\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#132: FILE: kernel/lockdep.c:2274:
+	printk(  "[ BUG: bad contention detected! ]\n");

ERROR:SPACING: space prohibited after that open parenthesis '('
#132: FILE: kernel/lockdep.c:2274:
+	printk(  "[ BUG: bad contention detected! ]\n");

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#133: FILE: kernel/lockdep.c:2275:
+	printk(  "---------------------------------\n");

ERROR:SPACING: space prohibited after that open parenthesis '('
#133: FILE: kernel/lockdep.c:2275:
+	printk(  "---------------------------------\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#134: FILE: kernel/lockdep.c:2276:
+	printk("%s/%d is trying to content lock (",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#135: FILE: kernel/lockdep.c:2277:
+	printk("%s/%d is trying to content lock (",
+		curr->comm, curr->pid);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#137: FILE: kernel/lockdep.c:2279:
+	printk(") at:\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#139: FILE: kernel/lockdep.c:2281:
+	printk("but there are no locks held!\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#140: FILE: kernel/lockdep.c:2282:
+	printk("\nother info that might help us debug this:\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#143: FILE: kernel/lockdep.c:2285:
+	printk("\nstack backtrace:\n");

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#174: FILE: kernel/lockdep.c:2449:
+	for (i = depth-1; i >= 0; i--) {
 	              ^

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#268: FILE: kernel/lockdep_proc.c:18:
+#include <asm/uaccess.h>

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#300: FILE: kernel/lockdep_proc.c:370:
+				seq_printf(m, " [%d] [<%p>] %s",
+						atomic_read(&cp->count),

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#303: FILE: kernel/lockdep_proc.c:373:
+			seq_printf(m, "\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#316: FILE: kernel/lockdep_proc.c:386:
+ssize_t lockdep_contentions_write(struct file *file, const char __user *buf,
+		size_t count, loff_t *ppos)

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR' are not preferred. Consider using octal permissions '0400'.
#355: FILE: kernel/lockdep_proc.c:430:
+	entry = create_proc_entry("lockdep_contentions", S_IRUSR, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000429132.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 13 warnings, 6 checks, 470 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000429132.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
