WARNING:TYPO_SPELLING: 'constuct' may be misspelled - perhaps 'construct'?
#46: 
This adds the segment buffer which is used to constuct logs.
                                              ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#57: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#62: FILE: fs/nilfs2/segbuf.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#78: FILE: fs/nilfs2/segbuf.c:17:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#79: FILE: fs/nilfs2/segbuf.c:18:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#92: FILE: fs/nilfs2/segbuf.c:31:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!nilfs_segbuf_cachep"
#108: FILE: fs/nilfs2/segbuf.c:47:
+	return (nilfs_segbuf_cachep == NULL) ? -ENOMEM : 0;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "ent"
#136: FILE: fs/nilfs2/segbuf.c:75:
+	if (ent != NULL && list_empty(&ent->list)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ent"
#159: FILE: fs/nilfs2/segbuf.c:98:
+	if (ent == NULL) {

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#164: FILE: fs/nilfs2/segbuf.c:103:
+		BUG_ON(ent->bh_su || !list_empty(&ent->list));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#205: FILE: fs/nilfs2/segbuf.c:144:
+int nilfs_segbuf_reset(struct nilfs_segment_buffer *segbuf, unsigned flags,

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#210: FILE: fs/nilfs2/segbuf.c:149:
+	segbuf->sb_sum.nblocks = segbuf->sb_sum.nsumblk = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#217: FILE: fs/nilfs2/segbuf.c:156:
+	segbuf->sb_sum.nfinfo = segbuf->sb_sum.nfileblk = 0;

WARNING:TYPO_SPELLING: 'segument' may be misspelled - perhaps 'segment'?
#225: FILE: fs/nilfs2/segbuf.c:164:
+ * Setup segument summary
          ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#333: FILE: fs/nilfs2/segbuf.c:272:
+	const int uptodate = test_bit(BIO_UPTODATE, &bio->bi_flags);
 	          ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#342: FILE: fs/nilfs2/segbuf.c:281:
+	if (!uptodate)
 	     ^^^^^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!bio"
#404: FILE: fs/nilfs2/segbuf.c:343:
+	if (bio == NULL) {

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#422: FILE: fs/nilfs2/segbuf.c:361:
+	wi->start = wi->end = 0;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#435: FILE: fs/nilfs2/segbuf.c:374:
+	BUG_ON(wi->nr_vecs <= 0);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#517: FILE: fs/nilfs2/segbuf.c:456:
+		printk(KERN_ERR "NILFS: IO error writing segment\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#529: FILE: fs/nilfs2/segbuf.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#545: FILE: fs/nilfs2/segbuf.h:17:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#546: FILE: fs/nilfs2/segbuf.h:18:
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'sum' - possible side-effects?
#593: FILE: fs/nilfs2/segbuf.h:65:
+#define NILFS_SEG_EMPTY(sum)	((sum)->nblocks == (sum)->nsumblk)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#622: FILE: fs/nilfs2/segbuf.h:94:
+	unsigned		sb_rest_blocks;

CHECK:MACRO_ARG_REUSE: Macro argument reuse 's' - possible side-effects?
#640: FILE: fs/nilfs2/segbuf.h:112:
+#define nilfs_for_each_segbuf_before(s, t, h) \
+	for ((s) = NILFS_FIRST_SEGBUF(h); (s) != (t); \
+	     (s) = NILFS_NEXT_SEGBUF(s))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'head' may be better as '(head)' to avoid precedence issues
#649: FILE: fs/nilfs2/segbuf.h:121:
+#define NILFS_SEGBUF_BH_IS_LAST(bh, head)  ((bh)->b_assoc_buffers.next == head)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#651: FILE: fs/nilfs2/segbuf.h:123:
+
+

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct super_block *' should also have an identifier name
#654: FILE: fs/nilfs2/segbuf.h:126:
+struct nilfs_segment_buffer *nilfs_segbuf_new(struct super_block *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_segment_buffer *' should also have an identifier name
#655: FILE: fs/nilfs2/segbuf.h:127:
+void nilfs_segbuf_free(struct nilfs_segment_buffer *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_segment_buffer *' should also have an identifier name
#656: FILE: fs/nilfs2/segbuf.h:128:
+int nilfs_segbuf_map(struct nilfs_segment_buffer *, __u64, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u64' should also have an identifier name
#656: FILE: fs/nilfs2/segbuf.h:128:
+int nilfs_segbuf_map(struct nilfs_segment_buffer *, __u64, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#656: FILE: fs/nilfs2/segbuf.h:128:
+int nilfs_segbuf_map(struct nilfs_segment_buffer *, __u64, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct the_nilfs *' should also have an identifier name
#656: FILE: fs/nilfs2/segbuf.h:128:
+int nilfs_segbuf_map(struct nilfs_segment_buffer *, __u64, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_segment_buffer *' should also have an identifier name
#658: FILE: fs/nilfs2/segbuf.h:130:
+void nilfs_segbuf_set_next_segnum(struct nilfs_segment_buffer *, __u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u64' should also have an identifier name
#658: FILE: fs/nilfs2/segbuf.h:130:
+void nilfs_segbuf_set_next_segnum(struct nilfs_segment_buffer *, __u64,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct the_nilfs *' should also have an identifier name
#658: FILE: fs/nilfs2/segbuf.h:130:
+void nilfs_segbuf_set_next_segnum(struct nilfs_segment_buffer *, __u64,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#660: FILE: fs/nilfs2/segbuf.h:132:
+int nilfs_segbuf_reset(struct nilfs_segment_buffer *, unsigned, time_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_segment_buffer *' should also have an identifier name
#660: FILE: fs/nilfs2/segbuf.h:132:
+int nilfs_segbuf_reset(struct nilfs_segment_buffer *, unsigned, time_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned' should also have an identifier name
#660: FILE: fs/nilfs2/segbuf.h:132:
+int nilfs_segbuf_reset(struct nilfs_segment_buffer *, unsigned, time_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'time_t' should also have an identifier name
#660: FILE: fs/nilfs2/segbuf.h:132:
+int nilfs_segbuf_reset(struct nilfs_segment_buffer *, unsigned, time_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_segment_buffer *' should also have an identifier name
#661: FILE: fs/nilfs2/segbuf.h:133:
+int nilfs_segbuf_extend_segsum(struct nilfs_segment_buffer *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_segment_buffer *' should also have an identifier name
#662: FILE: fs/nilfs2/segbuf.h:134:
+int nilfs_segbuf_extend_payload(struct nilfs_segment_buffer *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct buffer_head **' should also have an identifier name
#662: FILE: fs/nilfs2/segbuf.h:134:
+int nilfs_segbuf_extend_payload(struct nilfs_segment_buffer *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_segment_buffer *' should also have an identifier name
#664: FILE: fs/nilfs2/segbuf.h:136:
+void nilfs_segbuf_fill_in_segsum(struct nilfs_segment_buffer *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_segment_buffer *' should also have an identifier name
#665: FILE: fs/nilfs2/segbuf.h:137:
+void nilfs_segbuf_fill_in_segsum_crc(struct nilfs_segment_buffer *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#665: FILE: fs/nilfs2/segbuf.h:137:
+void nilfs_segbuf_fill_in_segsum_crc(struct nilfs_segment_buffer *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_segment_buffer *' should also have an identifier name
#666: FILE: fs/nilfs2/segbuf.h:138:
+void nilfs_segbuf_fill_in_data_crc(struct nilfs_segment_buffer *, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#666: FILE: fs/nilfs2/segbuf.h:138:
+void nilfs_segbuf_fill_in_data_crc(struct nilfs_segment_buffer *, u32);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#704: FILE: fs/nilfs2/segbuf.h:176:
+^Iint ^I^I^Istart, end; /* The region to be submitted */$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#723: FILE: fs/nilfs2/segbuf.h:195:
+
+

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_segment_buffer *' should also have an identifier name
#724: FILE: fs/nilfs2/segbuf.h:196:
+void nilfs_segbuf_prepare_write(struct nilfs_segment_buffer *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_write_info *' should also have an identifier name
#724: FILE: fs/nilfs2/segbuf.h:196:
+void nilfs_segbuf_prepare_write(struct nilfs_segment_buffer *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_segment_buffer *' should also have an identifier name
#726: FILE: fs/nilfs2/segbuf.h:198:
+int nilfs_segbuf_write(struct nilfs_segment_buffer *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_write_info *' should also have an identifier name
#726: FILE: fs/nilfs2/segbuf.h:198:
+int nilfs_segbuf_write(struct nilfs_segment_buffer *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_segment_buffer *' should also have an identifier name
#728: FILE: fs/nilfs2/segbuf.h:200:
+int nilfs_segbuf_wait(struct nilfs_segment_buffer *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nilfs_write_info *' should also have an identifier name
#728: FILE: fs/nilfs2/segbuf.h:200:
+int nilfs_segbuf_wait(struct nilfs_segment_buffer *,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000228146.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 40 warnings, 13 checks, 664 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000228146.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
