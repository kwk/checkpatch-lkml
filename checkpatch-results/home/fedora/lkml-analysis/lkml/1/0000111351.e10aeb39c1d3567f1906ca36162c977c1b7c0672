CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'msrs' may be better as '(msrs)' to avoid precedence issues
#118: FILE: arch/x86/oprofile/op_x86_model.h:14:
+#define CTR_IS_RESERVED(msrs, c) (msrs->counters[(c)].addr ? 1 : 0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'msrs' may be better as '(msrs)' to avoid precedence issues
#119: FILE: arch/x86/oprofile/op_x86_model.h:15:
+#define CTRL_IS_RESERVED(msrs, c) (msrs->controls[(c)].addr ? 1 : 0)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#120: FILE: arch/x86/oprofile/op_x86_model.h:16:
+#define CTRL_SET_ACTIVE(n) (n |= (1<<22))
                                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'n' may be better as '(n)' to avoid precedence issues
#120: FILE: arch/x86/oprofile/op_x86_model.h:16:
+#define CTRL_SET_ACTIVE(n) (n |= (1<<22))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#121: FILE: arch/x86/oprofile/op_x86_model.h:17:
+#define CTRL_SET_ENABLE(val) (val |= 1<<20)
                                       ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'val' may be better as '(val)' to avoid precedence issues
#121: FILE: arch/x86/oprofile/op_x86_model.h:17:
+#define CTRL_SET_ENABLE(val) (val |= 1<<20)

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#122: FILE: arch/x86/oprofile/op_x86_model.h:18:
+#define CTRL_SET_INACTIVE(n) (n &= ~(1<<22))
                                       ^

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'n' may be better as '(n)' to avoid precedence issues
#122: FILE: arch/x86/oprofile/op_x86_model.h:18:
+#define CTRL_SET_INACTIVE(n) (n &= ~(1<<22))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'val' may be better as '(val)' to avoid precedence issues
#123: FILE: arch/x86/oprofile/op_x86_model.h:19:
+#define CTRL_SET_KERN(val, k) (val |= ((k & 1) << 17))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'k' may be better as '(k)' to avoid precedence issues
#123: FILE: arch/x86/oprofile/op_x86_model.h:19:
+#define CTRL_SET_KERN(val, k) (val |= ((k & 1) << 17))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'val' may be better as '(val)' to avoid precedence issues
#124: FILE: arch/x86/oprofile/op_x86_model.h:20:
+#define CTRL_SET_UM(val, m) (val |= (m << 8))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'm' may be better as '(m)' to avoid precedence issues
#124: FILE: arch/x86/oprofile/op_x86_model.h:20:
+#define CTRL_SET_UM(val, m) (val |= (m << 8))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'val' may be better as '(val)' to avoid precedence issues
#125: FILE: arch/x86/oprofile/op_x86_model.h:21:
+#define CTRL_SET_USR(val, u) (val |= ((u & 1) << 16))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'u' may be better as '(u)' to avoid precedence issues
#125: FILE: arch/x86/oprofile/op_x86_model.h:21:
+#define CTRL_SET_USR(val, u) (val |= ((u & 1) << 16))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000111351.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 0 warnings, 14 checks, 64 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000111351.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
