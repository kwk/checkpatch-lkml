WARNING:TYPO_SPELLING: 'agressive' may be misspelled - perhaps 'aggressive'?
#35: 
We are a bit agressive in invalidating all the pages. But
             ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#54: FILE: fs/ext4/inode.c:1787:
+static void ext4_da_block_invalidatepages(struct mpage_da_data *mpd,
+					sector_t logical, long blk_cnt)

WARNING:LINE_SPACING: Missing a blank line after declarations
#71: FILE: fs/ext4/inode.c:1804:
+			struct page *page = pvec.pages[i];
+			index = page->index;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#76: FILE: fs/ext4/inode.c:1809:
+			BUG_ON(!PageLocked(page));

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#77: FILE: fs/ext4/inode.c:1810:
+			BUG_ON(PageWriteback(page));

WARNING:RETURN_VOID: void function return statements are not generally useful
#84: FILE: fs/ext4/inode.c:1817:
+	return;
+}

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#117: FILE: fs/ext4/inode.c:1853:
+	if (err) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#133: FILE: fs/ext4/inode.c:1869:
+		printk(KERN_EMERG "%s block allocation failed for inode %lu "

WARNING:SPLIT_STRING: quoted string split across lines
#134: FILE: fs/ext4/inode.c:1870:
+		printk(KERN_EMERG "%s block allocation failed for inode %lu "
+				  "at logical offset %llu with max blocks "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#135: FILE: fs/ext4/inode.c:1871:
+				  "at logical offset %llu with max blocks "
+				  "%zd with error %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#139: FILE: fs/ext4/inode.c:1875:
+		printk(KERN_EMERG "This should not happen.!! "

WARNING:SPLIT_STRING: quoted string split across lines
#140: FILE: fs/ext4/inode.c:1876:
+		printk(KERN_EMERG "This should not happen.!! "
+					"Data will be lost\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#143: FILE: fs/ext4/inode.c:1879:
+		ext4_da_block_invalidatepages(mpd, next,
+				lbh->b_size >> mpd->inode->i_blkbits);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000219332.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 10 warnings, 3 checks, 134 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000219332.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
