WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#26: 
the system. Based on the zones allowed by a gfp mask, one of these zonelists

WARNING:TYPO_SPELLING: 'interates' may be misspelled - perhaps 'iterates'?
#31: 
is introduced called for_each_zone_zonelist() interates through each zone
                                              ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#73: FILE: arch/parisc/mm/init.c:612:
+					printk(KERN_INFO, "[%ld/%s] ",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#74: FILE: arch/parisc/mm/init.c:613:
+					printk(KERN_INFO, "[%ld/%s] ",
+						zone_to_nid(zone), zone->name);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#108: FILE: fs/buffer.c:366:
+		zones = first_zones_zonelist(node_zonelist(nid),
+			gfp_zone(GFP_NOFS));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#164: FILE: include/linux/mmzone.h:681:
+static inline struct zone **first_zones_zonelist(struct zonelist *zonelist,
+					enum zone_type highest_zoneidx)

WARNING:LINE_SPACING: Missing a blank line after declarations
#167: FILE: include/linux/mmzone.h:684:
+	struct zone **z;
+	for (z = zonelist->zones; *z && zone_idx(*z) > highest_zoneidx; z++);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#167: FILE: include/linux/mmzone.h:684:
+	for (z = zonelist->zones; *z && zone_idx(*z) > highest_zoneidx; z++);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#173: FILE: include/linux/mmzone.h:690:
+static inline struct zone **next_zones_zonelist(struct zone **z,
+					enum zone_type highest_zoneidx)

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#175: FILE: include/linux/mmzone.h:692:
+	for (++z; *z && zone_idx(*z) > highest_zoneidx; z++);

WARNING:LONG_LINE_COMMENT: line length of 113 exceeds 100 columns
#180: FILE: include/linux/mmzone.h:697:
+ * for_each_zone_zonelist - helper macro to iterate over valid zones in a zonelist at or below a given zone index

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'zone' - possible side-effects?
#188: FILE: include/linux/mmzone.h:705:
+#define for_each_zone_zonelist(zone, z, zlist, highidx) \
+	for (z = first_zones_zonelist(zlist, highidx), zone = *z;	\
+		zone;							\
+		z = next_zones_zonelist(z, highidx), zone = *z)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'z' - possible side-effects?
#188: FILE: include/linux/mmzone.h:705:
+#define for_each_zone_zonelist(zone, z, zlist, highidx) \
+	for (z = first_zones_zonelist(zlist, highidx), zone = *z;	\
+		zone;							\
+		z = next_zones_zonelist(z, highidx), zone = *z)

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'highidx' - possible side-effects?
#188: FILE: include/linux/mmzone.h:705:
+#define for_each_zone_zonelist(zone, z, zlist, highidx) \
+	for (z = first_zones_zonelist(zlist, highidx), zone = *z;	\
+		zone;							\
+		z = next_zones_zonelist(z, highidx), zone = *z)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#223: FILE: mm/mempolicy.c:1123:
+	return node_zonelist(nd);
 	                     ^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "zonelist->zones[j]"
#345: FILE: mm/page_alloc.c:2153:
+	for (j = 0; zonelist->zones[j] != NULL; j++)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#347: FILE: mm/page_alloc.c:2155:
+	j = build_zonelists_node(NODE_DATA(node), zonelist, j, MAX_NR_ZONES-1);
 	                                                                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#375: FILE: mm/page_alloc.c:2176:
+	for (zone_type = MAX_NR_ZONES-1; zone_type >= 0; zone_type--) {
 	                             ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#431: FILE: mm/page_alloc.c:2313:
+	zonelist->zlcache_ptr = zlc = &zonelist->zlcache;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#472: FILE: mm/page_alloc.c:2336:
+	j = build_zonelists_node(pgdat, zonelist, 0, MAX_NR_ZONES-1);
 	                                                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#487: FILE: mm/page_alloc.c:2350:
+		j = build_zonelists_node(NODE_DATA(node), zonelist, j,
+								MAX_NR_ZONES-1);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#487: FILE: mm/page_alloc.c:2350:
+								MAX_NR_ZONES-1);
 								            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#493: FILE: mm/page_alloc.c:2356:
+		j = build_zonelists_node(NODE_DATA(node), zonelist, j,
+								MAX_NR_ZONES-1);

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#493: FILE: mm/page_alloc.c:2356:
+								MAX_NR_ZONES-1);
 								            ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 32)
#541: FILE: mm/slab.c:3261:
+		if (cpuset_zone_allowed_hardwall(zone, flags) &&
[...]
 				obj = ____cache_alloc_node(cache,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#542: FILE: mm/slab.c:3262:
+		if (cpuset_zone_allowed_hardwall(zone, flags) &&
 			cache->nodelists[nid] &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#573: FILE: mm/slub.c:1320:
+		if (n && cpuset_zone_allowed_hardwall(zone, flags) &&
 				n->nr_partial > MIN_PARTIAL) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000393675.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 7 warnings, 18 checks, 509 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000393675.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
