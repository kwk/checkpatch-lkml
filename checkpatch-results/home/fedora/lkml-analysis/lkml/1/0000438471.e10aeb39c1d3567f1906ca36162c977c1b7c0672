WARNING:LEADING_SPACE: please, no spaces at the start of a line
#49: FILE: lib/inflate.c:801:
+  unsigned *ll;         /* literal/length and distance code lengths */$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int *' to bare use of 'unsigned *'
#49: FILE: lib/inflate.c:801:
+  unsigned *ll;         /* literal/length and distance code lengths */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#52: FILE: lib/inflate.c:804:
+  int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#57: FILE: lib/inflate.c:809:
+  ll = malloc(sizeof(*ll) * (288+32));  /* literal/length and distance code lengths */$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#57: FILE: lib/inflate.c:809:
+  ll = malloc(sizeof(*ll) * (288+32));  /* literal/length and distance code lengths */
                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: lib/inflate.c:811:
+  ll = malloc(sizeof(*ll) * (286+30));  /* literal/length and distance code lengths */$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#59: FILE: lib/inflate.c:811:
+  ll = malloc(sizeof(*ll) * (286+30));  /* literal/length and distance code lengths */
                                 ^

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 2)
#67: FILE: lib/inflate.c:832:
   if (nl > 286 || nd > 30)
[...]
+  {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#70: FILE: lib/inflate.c:834:
+  {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#71: FILE: lib/inflate.c:835:
+    ret = 1;             /* bad lengths */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#72: FILE: lib/inflate.c:836:
+    goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#73: FILE: lib/inflate.c:837:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: lib/inflate.c:859:
+    ret = i;                   /* incomplete code set */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: lib/inflate.c:860:
+    goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#93: FILE: lib/inflate.c:882:
+      if ((unsigned)i + j > n) {$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#93: FILE: lib/inflate.c:882:
+      if ((unsigned)i + j > n) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#94: FILE: lib/inflate.c:883:
+        ret = 1;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: lib/inflate.c:883:
+        ret = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: lib/inflate.c:885:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#106: FILE: lib/inflate.c:894:
+      if ((unsigned)i + j > n) {$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#106: FILE: lib/inflate.c:894:
+      if ((unsigned)i + j > n) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#107: FILE: lib/inflate.c:895:
+        ret = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: lib/inflate.c:895:
+        ret = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#109: FILE: lib/inflate.c:897:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#119: FILE: lib/inflate.c:907:
+      if ((unsigned)i + j > n) {$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#119: FILE: lib/inflate.c:907:
+      if ((unsigned)i + j > n) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#120: FILE: lib/inflate.c:908:
+        ret = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#120: FILE: lib/inflate.c:908:
+        ret = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#122: FILE: lib/inflate.c:910:
+      }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#131: FILE: lib/inflate.c:939:
+    ret = i;                   /* incomplete code set */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#132: FILE: lib/inflate.c:940:
+    goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: lib/inflate.c:956:
+    ret = i;                   /* incomplete code set */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: lib/inflate.c:957:
+    goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: lib/inflate.c:964:
+  if (inflate_codes(tl, td, bl, bd)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (2, 4)
#151: FILE: lib/inflate.c:964:
+  if (inflate_codes(tl, td, bl, bd)) {
+    ret = 1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: lib/inflate.c:965:
+    ret = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: lib/inflate.c:966:
+    goto out;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: lib/inflate.c:967:
+  }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: lib/inflate.c:976:
+  ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: lib/inflate.c:978:
+  free(ll);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: lib/inflate.c:979:
+  return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: lib/inflate.c:982:
+  ret = 4;^I^I^I/* Input underrun */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#173: FILE: lib/inflate.c:983:
+  goto out;$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000438471.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 38 warnings, 2 checks, 128 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000438471.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
