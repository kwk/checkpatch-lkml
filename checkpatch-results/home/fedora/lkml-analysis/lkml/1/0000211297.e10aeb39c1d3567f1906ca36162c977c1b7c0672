WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
There is a small race in do_swap_page(). When the page swapped-in is charged,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#115: FILE: include/linux/memcontrol.h:30:
+extern int mem_cgroup_newpage_charge(struct page *page, struct mm_struct *mm,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#116: FILE: include/linux/memcontrol.h:31:
+extern int mem_cgroup_newpage_charge(struct page *page, struct mm_struct *mm,
 				gfp_t gfp_mask);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#117: FILE: include/linux/memcontrol.h:32:
+extern int mem_cgroup_charge_migrate_fixup(struct page *page,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#118: FILE: include/linux/memcontrol.h:33:
+extern int mem_cgroup_charge_migrate_fixup(struct page *page,
+				struct mm_struct *mm, gfp_t gfp_mask);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#120: FILE: include/linux/memcontrol.h:35:
+extern int mem_cgroup_try_charge(struct mm_struct *mm,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#121: FILE: include/linux/memcontrol.h:36:
+extern int mem_cgroup_try_charge(struct mm_struct *mm,
+		gfp_t gfp_mask, struct mem_cgroup **ptr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#122: FILE: include/linux/memcontrol.h:37:
+extern void mem_cgroup_commit_charge_swapin(struct page *page,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#123: FILE: include/linux/memcontrol.h:38:
+extern void mem_cgroup_commit_charge_swapin(struct page *page,
+					struct mem_cgroup *ptr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#124: FILE: include/linux/memcontrol.h:39:
+extern void mem_cgroup_cancel_charge_swapin(struct mem_cgroup *ptr);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#137: FILE: include/linux/memcontrol.h:86:
+static inline int mem_cgroup_newpage_charge(struct page *page,
 					struct mm_struct *mm, gfp_t gfp_mask)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#145: FILE: include/linux/memcontrol.h:98:
+static inline int mem_cgroup_charge_migrate_fixup(struct page *page,
+					struct mm_struct *mm, gfp_t gfp_mask)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#151: FILE: include/linux/memcontrol.h:104:
+static int mem_cgroup_try_charge(struct mm_struct *mm,
+				gfp_t gfp_mask, struct mem_cgroup **ptr)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#157: FILE: include/linux/memcontrol.h:110:
+static void mem_cgroup_commit_charge_swapin(struct page *page,
+					  struct mem_cgroup *ptr)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#160: FILE: include/linux/memcontrol.h:113:
+}
+static void mem_cgroup_cancel_charge_swapin(struct mem_cgroup *ptr)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#180: FILE: mm/memcontrol.c:470:
 
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#197: FILE: mm/memcontrol.c:484:
+int mem_cgroup_try_charge(struct mm_struct *mm,
+			gfp_t gfp_mask, struct mem_cgroup **memcg)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#236: FILE: mm/memcontrol.c:512:
 
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#264: FILE: mm/memcontrol.c:547:
+static void __mem_cgroup_commit_charge(struct mem_cgroup *mem,
+				     struct page_cgroup *pc,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#298: FILE: mm/memcontrol.c:586:
+static int mem_cgroup_charge_common(struct page *page, struct mm_struct *mm,
+				gfp_t gfp_mask, enum charge_type ctype,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#341: FILE: mm/memcontrol.c:637:
+int mem_cgroup_charge_migrate_fixup(struct page *page,
+				struct mm_struct *mm, gfp_t gfp_mask)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#359: FILE: mm/memcontrol.c:655:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#361: FILE: mm/memcontrol.c:657:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#369: FILE: mm/memcontrol.c:700:
 
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#392: FILE: mm/memcontrol.c:723:
+
+

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000211297.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 1 warnings, 24 checks, 362 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000211297.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
