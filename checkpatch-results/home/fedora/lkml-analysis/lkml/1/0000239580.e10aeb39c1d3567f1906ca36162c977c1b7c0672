CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#81: FILE: arch/x86/kernel/io_apic_32.c:409:
+		reg = io_apic_read(entry->apic, 0x10 + pin*2);
 		                                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#131: FILE: arch/x86/kernel/io_apic_32.c:612:
+	struct io_apic __iomem *io_apic = io_apic_base(apic);
+	readl(&io_apic->data);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'R' - possible side-effects?
#134: FILE: arch/x86/kernel/io_apic_32.c:615:
+#define __DO_ACTION(R, ACTION, FINAL)					\
+									\
+{									\
+	int pin;							\
+	struct irq_cfg *cfg;						\
+	struct irq_pin_list *entry;					\
+									\
+	cfg = irq_cfg(irq);						\
+	entry = cfg->irq_2_pin;						\
+	for (;;) {							\
+		unsigned int reg;					\
+		if (!entry)						\
+			break;						\
+		pin = entry->pin;					\
+		reg = io_apic_read(entry->apic, 0x10 + R + pin*2);	\
+		reg ACTION;						\
+		io_apic_modify(entry->apic, 0x10 + R + pin*2, reg);	\
+		FINAL;							\
+		if (!entry->next)					\
+			break;						\
+		entry = entry->next;					\
+	}								\
+}

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'R' may be better as '(R)' to avoid precedence issues
#134: FILE: arch/x86/kernel/io_apic_32.c:615:
+#define __DO_ACTION(R, ACTION, FINAL)					\
+									\
+{									\
+	int pin;							\
+	struct irq_cfg *cfg;						\
+	struct irq_pin_list *entry;					\
+									\
+	cfg = irq_cfg(irq);						\
+	entry = cfg->irq_2_pin;						\
+	for (;;) {							\
+		unsigned int reg;					\
+		if (!entry)						\
+			break;						\
+		pin = entry->pin;					\
+		reg = io_apic_read(entry->apic, 0x10 + R + pin*2);	\
+		reg ACTION;						\
+		io_apic_modify(entry->apic, 0x10 + R + pin*2, reg);	\
+		FINAL;							\
+		if (!entry->next)					\
+			break;						\
+		entry = entry->next;					\
+	}								\
+}

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#148: FILE: arch/x86/kernel/io_apic_32.c:629:
+		reg = io_apic_read(entry->apic, 0x10 + R + pin*2);	\
 		                                              ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#150: FILE: arch/x86/kernel/io_apic_32.c:631:
+		io_apic_modify(entry->apic, 0x10 + R + pin*2, reg);	\
 		                                          ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#158: FILE: arch/x86/kernel/io_apic_32.c:639:
+#define DO_ACTION(name,R,ACTION, FINAL)					\
                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#158: FILE: arch/x86/kernel/io_apic_32.c:639:
+#define DO_ACTION(name,R,ACTION, FINAL)					\
                         ^

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#160: FILE: arch/x86/kernel/io_apic_32.c:641:
+	static void name##_IO_APIC_irq (unsigned int irq)		\

ERROR:SPACING: space prohibited before that close parenthesis ')'
#167: FILE: arch/x86/kernel/io_apic_32.c:648:
+DO_ACTION(__unmask,	0, &= ~IO_APIC_REDIR_MASKED, )

ERROR:CODE_INDENT: code indent should use tabs where possible
#207: FILE: arch/x86/kernel/io_apic_32.c:1189:
+                if (vector == IA32_SYSCALL_VECTOR)$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: arch/x86/kernel/io_apic_32.c:1189:
+                if (vector == IA32_SYSCALL_VECTOR)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#211: FILE: arch/x86/kernel/io_apic_32.c:1192:
+                if (vector == SYSCALL_VECTOR)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: arch/x86/kernel/io_apic_32.c:1192:
+                if (vector == SYSCALL_VECTOR)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: arch/x86/kernel/io_apic_32.c:1193:
+                        goto next;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#212: FILE: arch/x86/kernel/io_apic_32.c:1193:
+                        goto next;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: arch/x86/kernel/io_apic_32.c:1301:
+        return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: arch/x86/kernel/io_apic_32.c:1301:
+        return 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#276: FILE: arch/x86/kernel/io_apic_32.c:2121:
+        int do_unmask_irq = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: arch/x86/kernel/io_apic_32.c:2121:
+        int do_unmask_irq = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#278: FILE: arch/x86/kernel/io_apic_32.c:2123:
+        irq_complete_move(irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: arch/x86/kernel/io_apic_32.c:2123:
+        irq_complete_move(irq);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#280: FILE: arch/x86/kernel/io_apic_32.c:2125:
+        /* If we are moving the irq we need to mask it */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#281: FILE: arch/x86/kernel/io_apic_32.c:2126:
+        if (unlikely(desc->status & IRQ_MOVE_PENDING)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: arch/x86/kernel/io_apic_32.c:2126:
+        if (unlikely(desc->status & IRQ_MOVE_PENDING)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#282: FILE: arch/x86/kernel/io_apic_32.c:2127:
+                do_unmask_irq = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: arch/x86/kernel/io_apic_32.c:2127:
+                do_unmask_irq = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#283: FILE: arch/x86/kernel/io_apic_32.c:2128:
+                mask_IO_APIC_irq(irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#283: FILE: arch/x86/kernel/io_apic_32.c:2128:
+                mask_IO_APIC_irq(irq);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#284: FILE: arch/x86/kernel/io_apic_32.c:2129:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#284: FILE: arch/x86/kernel/io_apic_32.c:2129:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#287: FILE: arch/x86/kernel/io_apic_32.c:2132:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#288: FILE: arch/x86/kernel/io_apic_32.c:2133:
+         * We must acknowledge the irq before we move it or the acknowledge will$

ERROR:CODE_INDENT: code indent should use tabs where possible
#289: FILE: arch/x86/kernel/io_apic_32.c:2134:
+         * not propagate properly.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#290: FILE: arch/x86/kernel/io_apic_32.c:2135:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#291: FILE: arch/x86/kernel/io_apic_32.c:2136:
+        ack_APIC_irq();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#291: FILE: arch/x86/kernel/io_apic_32.c:2136:
+        ack_APIC_irq();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#293: FILE: arch/x86/kernel/io_apic_32.c:2138:
+        /* Now we can move and renable the irq */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#294: FILE: arch/x86/kernel/io_apic_32.c:2139:
+        if (unlikely(do_unmask_irq)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: arch/x86/kernel/io_apic_32.c:2139:
+        if (unlikely(do_unmask_irq)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#295: FILE: arch/x86/kernel/io_apic_32.c:2140:
+                /* Only migrate the irq if the ack has been received.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#296: FILE: arch/x86/kernel/io_apic_32.c:2141:
+                 *$

ERROR:CODE_INDENT: code indent should use tabs where possible
#297: FILE: arch/x86/kernel/io_apic_32.c:2142:
+                 * On rare occasions the broadcast level triggered ack gets$

ERROR:CODE_INDENT: code indent should use tabs where possible
#298: FILE: arch/x86/kernel/io_apic_32.c:2143:
+                 * delayed going to ioapics, and if we reprogram the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#299: FILE: arch/x86/kernel/io_apic_32.c:2144:
+                 * vector while Remote IRR is still set the irq will never$

ERROR:CODE_INDENT: code indent should use tabs where possible
#300: FILE: arch/x86/kernel/io_apic_32.c:2145:
+                 * fire again.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#301: FILE: arch/x86/kernel/io_apic_32.c:2146:
+                 *$

ERROR:CODE_INDENT: code indent should use tabs where possible
#302: FILE: arch/x86/kernel/io_apic_32.c:2147:
+                 * To prevent this scenario we read the Remote IRR bit$

ERROR:CODE_INDENT: code indent should use tabs where possible
#303: FILE: arch/x86/kernel/io_apic_32.c:2148:
+                 * of the ioapic.  This has two effects.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#304: FILE: arch/x86/kernel/io_apic_32.c:2149:
+                 * - On any sane system the read of the ioapic will$

ERROR:CODE_INDENT: code indent should use tabs where possible
#305: FILE: arch/x86/kernel/io_apic_32.c:2150:
+                 *   flush writes (and acks) going to the ioapic from$

ERROR:CODE_INDENT: code indent should use tabs where possible
#306: FILE: arch/x86/kernel/io_apic_32.c:2151:
+                 *   this cpu.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#307: FILE: arch/x86/kernel/io_apic_32.c:2152:
+                 * - We get to see if the ACK has actually been delivered.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#308: FILE: arch/x86/kernel/io_apic_32.c:2153:
+                 *$

ERROR:CODE_INDENT: code indent should use tabs where possible
#309: FILE: arch/x86/kernel/io_apic_32.c:2154:
+                 * Based on failed experiments of reprogramming the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#310: FILE: arch/x86/kernel/io_apic_32.c:2155:
+                 * ioapic entry from outside of irq context starting$

ERROR:CODE_INDENT: code indent should use tabs where possible
#311: FILE: arch/x86/kernel/io_apic_32.c:2156:
+                 * with masking the ioapic entry and then polling until$

ERROR:CODE_INDENT: code indent should use tabs where possible
#312: FILE: arch/x86/kernel/io_apic_32.c:2157:
+                 * Remote IRR was clear before reprogramming the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#313: FILE: arch/x86/kernel/io_apic_32.c:2158:
+                 * ioapic I don't trust the Remote IRR bit to be$

ERROR:CODE_INDENT: code indent should use tabs where possible
#314: FILE: arch/x86/kernel/io_apic_32.c:2159:
+                 * completey accurate.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#315: FILE: arch/x86/kernel/io_apic_32.c:2160:
+                 *$

ERROR:CODE_INDENT: code indent should use tabs where possible
#316: FILE: arch/x86/kernel/io_apic_32.c:2161:
+                 * However there appears to be no other way to plug$

ERROR:CODE_INDENT: code indent should use tabs where possible
#317: FILE: arch/x86/kernel/io_apic_32.c:2162:
+                 * this race, so if the Remote IRR bit is not$

ERROR:CODE_INDENT: code indent should use tabs where possible
#318: FILE: arch/x86/kernel/io_apic_32.c:2163:
+                 * accurate and is causing problems then it is a hardware bug$

ERROR:CODE_INDENT: code indent should use tabs where possible
#319: FILE: arch/x86/kernel/io_apic_32.c:2164:
+                 * and you can go talk to the chipset vendor about it.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#320: FILE: arch/x86/kernel/io_apic_32.c:2165:
+                 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#321: FILE: arch/x86/kernel/io_apic_32.c:2166:
+                if (!io_apic_level_ack_pending(irq))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: arch/x86/kernel/io_apic_32.c:2166:
+                if (!io_apic_level_ack_pending(irq))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#322: FILE: arch/x86/kernel/io_apic_32.c:2167:
+                        move_masked_irq(irq, desc);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: arch/x86/kernel/io_apic_32.c:2167:
+                        move_masked_irq(irq, desc);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#323: FILE: arch/x86/kernel/io_apic_32.c:2168:
+                unmask_IO_APIC_irq(irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: arch/x86/kernel/io_apic_32.c:2168:
+                unmask_IO_APIC_irq(irq);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#324: FILE: arch/x86/kernel/io_apic_32.c:2169:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#324: FILE: arch/x86/kernel/io_apic_32.c:2169:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#373: FILE: arch/x86/kernel/io_apic_32.c:2878:
+        unsigned int irq;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#373: FILE: arch/x86/kernel/io_apic_32.c:2878:
+        unsigned int irq;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#374: FILE: arch/x86/kernel/io_apic_32.c:2879:
+        int ret, sub_handle;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#374: FILE: arch/x86/kernel/io_apic_32.c:2879:
+        int ret, sub_handle;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#375: FILE: arch/x86/kernel/io_apic_32.c:2880:
+        struct msi_desc *desc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: arch/x86/kernel/io_apic_32.c:2880:
+        struct msi_desc *desc;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#376: FILE: arch/x86/kernel/io_apic_32.c:2881:
+        unsigned int irq_want;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: arch/x86/kernel/io_apic_32.c:2881:
+        unsigned int irq_want;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#378: FILE: arch/x86/kernel/io_apic_32.c:2883:
+        irq_want = build_irq_for_pci_dev(dev) + 0x100;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: arch/x86/kernel/io_apic_32.c:2883:
+        irq_want = build_irq_for_pci_dev(dev) + 0x100;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#379: FILE: arch/x86/kernel/io_apic_32.c:2884:
+        sub_handle = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: arch/x86/kernel/io_apic_32.c:2884:
+        sub_handle = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#380: FILE: arch/x86/kernel/io_apic_32.c:2885:
+        list_for_each_entry(desc, &dev->msi_list, list) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: arch/x86/kernel/io_apic_32.c:2885:
+        list_for_each_entry(desc, &dev->msi_list, list) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#381: FILE: arch/x86/kernel/io_apic_32.c:2886:
+                irq = create_irq(irq_want--);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#381: FILE: arch/x86/kernel/io_apic_32.c:2886:
+                irq = create_irq(irq_want--);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#382: FILE: arch/x86/kernel/io_apic_32.c:2887:
+                if (irq == 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: arch/x86/kernel/io_apic_32.c:2887:
+                if (irq == 0)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#383: FILE: arch/x86/kernel/io_apic_32.c:2888:
+                        return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: arch/x86/kernel/io_apic_32.c:2888:
+                        return -1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#384: FILE: arch/x86/kernel/io_apic_32.c:2889:
+                ret = setup_msi_irq(dev, desc, irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#384: FILE: arch/x86/kernel/io_apic_32.c:2889:
+                ret = setup_msi_irq(dev, desc, irq);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#385: FILE: arch/x86/kernel/io_apic_32.c:2890:
+                if (ret < 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#385: FILE: arch/x86/kernel/io_apic_32.c:2890:
+                if (ret < 0)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#386: FILE: arch/x86/kernel/io_apic_32.c:2891:
+                        goto error;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#386: FILE: arch/x86/kernel/io_apic_32.c:2891:
+                        goto error;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#387: FILE: arch/x86/kernel/io_apic_32.c:2892:
+                sub_handle++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#387: FILE: arch/x86/kernel/io_apic_32.c:2892:
+                sub_handle++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#388: FILE: arch/x86/kernel/io_apic_32.c:2893:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: arch/x86/kernel/io_apic_32.c:2893:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#389: FILE: arch/x86/kernel/io_apic_32.c:2894:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: arch/x86/kernel/io_apic_32.c:2894:
+        return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#392: FILE: arch/x86/kernel/io_apic_32.c:2897:
+        destroy_irq(irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: arch/x86/kernel/io_apic_32.c:2897:
+        destroy_irq(irq);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#393: FILE: arch/x86/kernel/io_apic_32.c:2898:
+        return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: arch/x86/kernel/io_apic_32.c:2898:
+        return ret;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#396: FILE: arch/x86/kernel/io_apic_32.c:2901:
+
+

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#408: FILE: arch/x86/kernel/io_apic_64.c:97:
+#if defined (CONFIG_MCA) || defined (CONFIG_EISA)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#408: FILE: arch/x86/kernel/io_apic_64.c:97:
+#if defined (CONFIG_MCA) || defined (CONFIG_EISA)

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#511: FILE: arch/x86/kernel/io_apic_64.c:671:
+		reg = io_apic_read(entry->apic, 0x10 + pin*2);
 		                                          ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#514: FILE: arch/x86/kernel/io_apic_64.c:674:
+		io_apic_modify(entry->apic, 0x10 + pin*2, reg);
 		                                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#537: FILE: arch/x86/kernel/io_apic_64.c:697:
+	__modify_IO_APIC_irq(irq, IO_APIC_REDIR_MASKED,
+				IO_APIC_REDIR_LEVEL_TRIGGER);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#544: FILE: arch/x86/kernel/io_apic_64.c:704:
+	__modify_IO_APIC_irq(irq, IO_APIC_REDIR_LEVEL_TRIGGER,
+				IO_APIC_REDIR_MASKED);

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#580: FILE: arch/x86/kernel/io_apic_64.c:774:
+static int pirq_entries [MAX_PIRQS];

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#586: FILE: arch/x86/kernel/io_apic_64.c:780:
+	int ints[MAX_PIRQS+1];
 	                  ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#602: FILE: arch/x86/kernel/io_apic_64.c:796:
+				"... PIRQ%d -> IRQ %d\n", i, ints[i+1]);
 				                                   ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#606: FILE: arch/x86/kernel/io_apic_64.c:800:
+		pirq_entries[MAX_PIRQS-i-1] = ints[i+1];
 		                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#606: FILE: arch/x86/kernel/io_apic_64.c:800:
+		pirq_entries[MAX_PIRQS-i-1] = ints[i+1];
 		                        ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#606: FILE: arch/x86/kernel/io_apic_64.c:800:
+		pirq_entries[MAX_PIRQS-i-1] = ints[i+1];
 		                                    ^

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#611: FILE: arch/x86/kernel/io_apic_64.c:805:
+__setup("pirq=", ioapic_pirq_setup);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#621: FILE: arch/x86/kernel/io_apic_64.c:981:
+EXPORT_SYMBOL(IO_APIC_get_PCI_irq_vector);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:LINE_SPACING: Missing a blank line after declarations
#631: FILE: arch/x86/kernel/io_apic_64.c:991:
+		unsigned int port = 0x4d0 + (irq >> 3);
+		return (inb(port) >> (irq & 7)) & 1;

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#649: FILE: arch/x86/kernel/io_apic_64.c:1009:
+ * be read in from the ELCR */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#663: FILE: arch/x86/kernel/io_apic_64.c:1023:
+ * be read in from the ELCR */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#668: FILE: arch/x86/kernel/io_apic_64.c:1028:
+
+

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#677: FILE: arch/x86/kernel/io_apic_64.c:1087:
+			switch (mp_bus_id_to_type[bus]) {
+				case MP_BUS_ISA: /* ISA pin */
[...]
+				case MP_BUS_EISA: /* EISA pin */
[...]
+				case MP_BUS_PCI: /* PCI pin */
[...]
+				case MP_BUS_MCA: /* MCA pin */
[...]
+				default:

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#700: FILE: arch/x86/kernel/io_apic_64.c:1110:
+					printk(KERN_WARNING "broken BIOS!!\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#721: FILE: arch/x86/kernel/io_apic_64.c:1175:
+                /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#722: FILE: arch/x86/kernel/io_apic_64.c:1176:
+                 * For MPS mode, so far only needed by ES7000 platform$

ERROR:CODE_INDENT: code indent should use tabs where possible
#723: FILE: arch/x86/kernel/io_apic_64.c:1177:
+                 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#724: FILE: arch/x86/kernel/io_apic_64.c:1178:
+                if (ioapic_renumber_irq)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#724: FILE: arch/x86/kernel/io_apic_64.c:1178:
+                if (ioapic_renumber_irq)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#725: FILE: arch/x86/kernel/io_apic_64.c:1179:
+                        irq = ioapic_renumber_irq(apic, irq);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#725: FILE: arch/x86/kernel/io_apic_64.c:1179:
+                        irq = ioapic_renumber_irq(apic, irq);$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pin >= 16'
#732: FILE: arch/x86/kernel/io_apic_64.c:1186:
+	if ((pin >= 16) && (pin <= 23)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pin <= 23'
#732: FILE: arch/x86/kernel/io_apic_64.c:1186:
+	if ((pin >= 16) && (pin <= 23)) {

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#733: FILE: arch/x86/kernel/io_apic_64.c:1187:
+		if (pirq_entries[pin-16] != -1) {
 		                    ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#734: FILE: arch/x86/kernel/io_apic_64.c:1188:
+			if (!pirq_entries[pin-16]) {
 			                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#736: FILE: arch/x86/kernel/io_apic_64.c:1190:
+						"disabling PIRQ%d\n", pin-16);
 						                         ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#738: FILE: arch/x86/kernel/io_apic_64.c:1192:
+				irq = pirq_entries[pin-16];
 				                      ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#741: FILE: arch/x86/kernel/io_apic_64.c:1195:
+						pin-16, irq);
 						   ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#775: FILE: arch/x86/kernel/io_apic_64.c:1364:
+        int apic, idx, pin;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#775: FILE: arch/x86/kernel/io_apic_64.c:1364:
+        int apic, idx, pin;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#777: FILE: arch/x86/kernel/io_apic_64.c:1366:
+        for (apic = 0; apic < nr_ioapics; apic++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#777: FILE: arch/x86/kernel/io_apic_64.c:1366:
+        for (apic = 0; apic < nr_ioapics; apic++) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#778: FILE: arch/x86/kernel/io_apic_64.c:1367:
+                for (pin = 0; pin < nr_ioapic_registers[apic]; pin++) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#778: FILE: arch/x86/kernel/io_apic_64.c:1367:
+                for (pin = 0; pin < nr_ioapic_registers[apic]; pin++) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#779: FILE: arch/x86/kernel/io_apic_64.c:1368:
+                        idx = find_irq_entry(apic, pin, mp_INT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#779: FILE: arch/x86/kernel/io_apic_64.c:1368:
+                        idx = find_irq_entry(apic, pin, mp_INT);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#780: FILE: arch/x86/kernel/io_apic_64.c:1369:
+                        if ((idx != -1) && (irq == pin_2_irq(idx, apic, pin)))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#780: FILE: arch/x86/kernel/io_apic_64.c:1369:
+                        if ((idx != -1) && (irq == pin_2_irq(idx, apic, pin)))$

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'irq == pin_2_irq(idx, apic, pin)'
#780: FILE: arch/x86/kernel/io_apic_64.c:1369:
+                        if ((idx != -1) && (irq == pin_2_irq(idx, apic, pin)))

ERROR:CODE_INDENT: code indent should use tabs where possible
#781: FILE: arch/x86/kernel/io_apic_64.c:1370:
+                                return irq_trigger(idx);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#781: FILE: arch/x86/kernel/io_apic_64.c:1370:
+                                return irq_trigger(idx);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#782: FILE: arch/x86/kernel/io_apic_64.c:1371:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#782: FILE: arch/x86/kernel/io_apic_64.c:1371:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#783: FILE: arch/x86/kernel/io_apic_64.c:1372:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#783: FILE: arch/x86/kernel/io_apic_64.c:1372:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#784: FILE: arch/x86/kernel/io_apic_64.c:1373:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#785: FILE: arch/x86/kernel/io_apic_64.c:1374:
+         * nonexistent IRQs are edge default$

ERROR:CODE_INDENT: code indent should use tabs where possible
#786: FILE: arch/x86/kernel/io_apic_64.c:1375:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#787: FILE: arch/x86/kernel/io_apic_64.c:1376:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#787: FILE: arch/x86/kernel/io_apic_64.c:1376:
+        return 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#824: FILE: arch/x86/kernel/io_apic_64.c:1551:
+                if (multi_timer_check(apic, irq))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#824: FILE: arch/x86/kernel/io_apic_64.c:1551:
+                if (multi_timer_check(apic, irq))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#825: FILE: arch/x86/kernel/io_apic_64.c:1552:
+                        continue;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#825: FILE: arch/x86/kernel/io_apic_64.c:1552:
+                        continue;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#842: FILE: arch/x86/kernel/io_apic_64.c:1636:
+        if (reg_01.bits.version >= 0x20)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#842: FILE: arch/x86/kernel/io_apic_64.c:1636:
+        if (reg_01.bits.version >= 0x20)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#843: FILE: arch/x86/kernel/io_apic_64.c:1637:
+                reg_03.raw = io_apic_read(apic, 3);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#843: FILE: arch/x86/kernel/io_apic_64.c:1637:
+                reg_03.raw = io_apic_read(apic, 3);$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#869: FILE: arch/x86/kernel/io_apic_64.c:1670:
+		printk(KERN_DEBUG ".... register #03: %08X\n", reg_03.raw);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#870: FILE: arch/x86/kernel/io_apic_64.c:1671:
+		printk(KERN_DEBUG ".......     : Boot DT    : %X\n", reg_03.bits.boot_DT);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#896: FILE: arch/x86/kernel/io_apic_64.c:1764:
+		printk(KERN_DEBUG "... APIC ARBPRI: %08x (%02x)\n", v,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#897: FILE: arch/x86/kernel/io_apic_64.c:1765:
+		printk(KERN_DEBUG "... APIC ARBPRI: %08x (%02x)\n", v,
+			v & APIC_ARBPRI_MASK);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#899: FILE: arch/x86/kernel/io_apic_64.c:1767:
+		printk(KERN_DEBUG "... APIC PROCPRI: %08x\n", v);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#915: FILE: arch/x86/kernel/io_apic_64.c:1793:
+		printk(KERN_DEBUG "... APIC ESR: %08x\n", v);

WARNING:LINE_SPACING: Missing a blank line after declarations
#926: FILE: arch/x86/kernel/io_apic_64.c:1887:
+	int i;
+	if (!pirqs_enabled)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#974: FILE: arch/x86/kernel/io_apic_64.c:2008:
+	if (!(boot_cpu_data.x86_vendor == X86_VENDOR_INTEL)
+		|| APIC_XAPIC(apic_version[boot_cpu_physical_apicid]))

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#986: FILE: arch/x86/kernel/io_apic_64.c:2020:
+	for (apic = 0; apic < nr_ioapics; apic++) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#995: FILE: arch/x86/kernel/io_apic_64.c:2029:
+			printk(KERN_ERR "BIOS bug, IO-APIC#%d ID is %d in the MPC table!...\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#996: FILE: arch/x86/kernel/io_apic_64.c:2030:
+			printk(KERN_ERR "BIOS bug, IO-APIC#%d ID is %d in the MPC table!...\n",
+				apic, mp_ioapics[apic].mp_apicid);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#997: FILE: arch/x86/kernel/io_apic_64.c:2031:
+			printk(KERN_ERR "... fixing up to %d. (tell your hw vendor)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#998: FILE: arch/x86/kernel/io_apic_64.c:2032:
+			printk(KERN_ERR "... fixing up to %d. (tell your hw vendor)\n",
+				reg_00.bits.ID);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1008: FILE: arch/x86/kernel/io_apic_64.c:2042:
+		if (check_apicid_used(phys_id_present_map,
+					mp_ioapics[apic].mp_apicid)) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1009: FILE: arch/x86/kernel/io_apic_64.c:2043:
+			printk(KERN_ERR "BIOS bug, IO-APIC#%d ID %d is already used!...\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1010: FILE: arch/x86/kernel/io_apic_64.c:2044:
+			printk(KERN_ERR "BIOS bug, IO-APIC#%d ID %d is already used!...\n",
+				apic, mp_ioapics[apic].mp_apicid);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1016: FILE: arch/x86/kernel/io_apic_64.c:2050:
+			printk(KERN_ERR "... fixing up to %d. (tell your hw vendor)\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1017: FILE: arch/x86/kernel/io_apic_64.c:2051:
+			printk(KERN_ERR "... fixing up to %d. (tell your hw vendor)\n",
+				i);

WARNING:LINE_SPACING: Missing a blank line after declarations
#1022: FILE: arch/x86/kernel/io_apic_64.c:2056:
+			physid_mask_t tmp;
+			tmp = apicid_to_cpu_present(mp_ioapics[apic].mp_apicid);

WARNING:SPLIT_STRING: quoted string split across lines
#1024: FILE: arch/x86/kernel/io_apic_64.c:2058:
+			apic_printk(APIC_VERBOSE, "Setting %d in the "
+					"phys_id_present_map\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1029: FILE: arch/x86/kernel/io_apic_64.c:2063:
+
+

CHECK:ASSIGNMENT_CONTINUATIONS: Assignment operator '=' should be on the previous line
#1038: FILE: arch/x86/kernel/io_apic_64.c:2072:
+					mp_irqs[i].mp_dstapic
+						= mp_ioapics[apic].mp_apicid;

Assignment operators should not be written at the start of a
line but should follow the operand at the previous line.

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1058: FILE: arch/x86/kernel/io_apic_64.c:2092:
+			printk("could not set ID!\n");

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1075: FILE: arch/x86/kernel/io_apic_64.c:2187:
 {
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#1086: FILE: arch/x86/kernel/io_apic_64.c:2200:
+        send_IPI_self(irq_cfg(irq)->vector);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1086: FILE: arch/x86/kernel/io_apic_64.c:2200:
+        send_IPI_self(irq_cfg(irq)->vector);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1088: FILE: arch/x86/kernel/io_apic_64.c:2202:
+        return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1088: FILE: arch/x86/kernel/io_apic_64.c:2202:
+        return 1;$

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1126: FILE: arch/x86/kernel/io_apic_64.c:2501:
+	/*
+	* It appears there is an erratum which affects at least version 0x11

ERROR:CODE_INDENT: code indent should use tabs where possible
#1252: FILE: arch/x86/kernel/io_apic_64.c:2747:
+        ver = apic_read(APIC_LVR);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1252: FILE: arch/x86/kernel/io_apic_64.c:2747:
+        ver = apic_read(APIC_LVR);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1253: FILE: arch/x86/kernel/io_apic_64.c:2748:
+        ver = GET_APIC_VERSION(ver);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1253: FILE: arch/x86/kernel/io_apic_64.c:2748:
+        ver = GET_APIC_VERSION(ver);$

CHECK:BIT_MACRO: Prefer using the BIT macro
#1293: FILE: arch/x86/kernel/io_apic_64.c:2917:
+#define PIC_IRQS	(1 << PIC_CASCADE_IR)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

ERROR:CODE_INDENT: code indent should use tabs where possible
#1310: FILE: arch/x86/kernel/io_apic_64.c:2933:
+        /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1311: FILE: arch/x86/kernel/io_apic_64.c:2934:
+         * Set up IO-APIC IRQ routing.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1312: FILE: arch/x86/kernel/io_apic_64.c:2935:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1314: FILE: arch/x86/kernel/io_apic_64.c:2937:
+        if (!acpi_ioapic)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1314: FILE: arch/x86/kernel/io_apic_64.c:2937:
+        if (!acpi_ioapic)$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1315: FILE: arch/x86/kernel/io_apic_64.c:2938:
+                setup_ioapic_ids_from_mpc();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1315: FILE: arch/x86/kernel/io_apic_64.c:2938:
+                setup_ioapic_ids_from_mpc();$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1351: FILE: arch/x86/kernel/io_apic_64.c:3626:
+		printk(KERN_WARNING "IOAPIC[%d]: Invalid apic_id %d, trying "

WARNING:SPLIT_STRING: quoted string split across lines
#1352: FILE: arch/x86/kernel/io_apic_64.c:3627:
+		printk(KERN_WARNING "IOAPIC[%d]: Invalid apic_id %d, trying "
+			"%d\n", ioapic, apic_id, reg_00.bits.ID);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1361: FILE: arch/x86/kernel/io_apic_64.c:3636:
+	if (check_apicid_used(apic_id_map, apic_id)) {
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1370: FILE: arch/x86/kernel/io_apic_64.c:3645:
+		printk(KERN_WARNING "IOAPIC[%d]: apic_id %d already used, "

WARNING:SPLIT_STRING: quoted string split across lines
#1371: FILE: arch/x86/kernel/io_apic_64.c:3646:
+		printk(KERN_WARNING "IOAPIC[%d]: apic_id %d already used, "
+			"trying %d\n", ioapic, apic_id, i);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#1389: FILE: arch/x86/kernel/io_apic_64.c:3664:
+			printk("IOAPIC[%d]: Unable to change apic_id!\n", ioapic);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1443: FILE: arch/x86/kernel/io_apic_64.c:3839:
+                        if (!ioapic_phys) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1443: FILE: arch/x86/kernel/io_apic_64.c:3839:
+                        if (!ioapic_phys) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1444: FILE: arch/x86/kernel/io_apic_64.c:3840:
+                                printk(KERN_ERR$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1444: FILE: arch/x86/kernel/io_apic_64.c:3840:
+                                printk(KERN_ERR$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1444: FILE: arch/x86/kernel/io_apic_64.c:3840:
+                                printk(KERN_ERR

ERROR:CODE_INDENT: code indent should use tabs where possible
#1445: FILE: arch/x86/kernel/io_apic_64.c:3841:
+                                       "WARNING: bogus zero IO-APIC "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1445: FILE: arch/x86/kernel/io_apic_64.c:3841:
+                                       "WARNING: bogus zero IO-APIC "$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1446: FILE: arch/x86/kernel/io_apic_64.c:3842:
+                                       "address found in MPTABLE, "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1446: FILE: arch/x86/kernel/io_apic_64.c:3842:
+                                       "address found in MPTABLE, "$

WARNING:SPLIT_STRING: quoted string split across lines
#1446: FILE: arch/x86/kernel/io_apic_64.c:3842:
+                                       "WARNING: bogus zero IO-APIC "
+                                       "address found in MPTABLE, "

ERROR:CODE_INDENT: code indent should use tabs where possible
#1447: FILE: arch/x86/kernel/io_apic_64.c:3843:
+                                       "disabling IO/APIC support!\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1447: FILE: arch/x86/kernel/io_apic_64.c:3843:
+                                       "disabling IO/APIC support!\n");$

WARNING:SPLIT_STRING: quoted string split across lines
#1447: FILE: arch/x86/kernel/io_apic_64.c:3843:
+                                       "address found in MPTABLE, "
+                                       "disabling IO/APIC support!\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#1448: FILE: arch/x86/kernel/io_apic_64.c:3844:
+                                smp_found_config = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1448: FILE: arch/x86/kernel/io_apic_64.c:3844:
+                                smp_found_config = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1449: FILE: arch/x86/kernel/io_apic_64.c:3845:
+                                skip_ioapic_setup = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1449: FILE: arch/x86/kernel/io_apic_64.c:3845:
+                                skip_ioapic_setup = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1450: FILE: arch/x86/kernel/io_apic_64.c:3846:
+                                goto fake_ioapic_page;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1450: FILE: arch/x86/kernel/io_apic_64.c:3846:
+                                goto fake_ioapic_page;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1451: FILE: arch/x86/kernel/io_apic_64.c:3847:
+                        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1451: FILE: arch/x86/kernel/io_apic_64.c:3847:
+                        }$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000239580.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 110 errors, 95 warnings, 38 checks, 1370 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000239580.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
