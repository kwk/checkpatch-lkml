WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#58: FILE: fs/afs/dir.c:26:
+static int afs_d_revalidate(struct dentry *dentry, struct nameidata *nd,
                                                                      ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#68: FILE: fs/afs/dir.c:568:
+static int afs_d_revalidate(struct dentry *dentry, struct nameidata *nd,
                                                                      ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#90: FILE: fs/autofs4/root.c:140:
+		ret = (dentry->d_op->d_revalidate)(dentry, &nd, cred);
 		                                            ^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (dentry->d_op->d_revalidate)
#90: FILE: fs/autofs4/root.c:140:
+		ret = (dentry->d_op->d_revalidate)(dentry, &nd, cred);

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#99: FILE: fs/autofs4/root.c:398:
+static int autofs4_revalidate(struct dentry *dentry, struct nameidata *nd,
                                                                        ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#109: FILE: fs/autofs4/root.c:638:
+		(dentry->d_op->d_revalidate)(dentry, nd, cred);
 		                                     ^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around function pointer (dentry->d_op->d_revalidate)
#109: FILE: fs/autofs4/root.c:638:
+		(dentry->d_op->d_revalidate)(dentry, nd, cred);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#123: FILE: fs/namei.c:382:
+	int status = dentry->d_op->d_revalidate(dentry, nd, cred);
 	                                                ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#140: FILE: fs/namei.c:985:
+			if (!nd->dentry->d_op->d_revalidate(nd->dentry, nd,
 			                                                ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#154: FILE: fs/nfs/dir.c:765:
+static int nfs_lookup_revalidate(struct dentry * dentry, struct nameidata *nd,
                                                                            ^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#154: FILE: fs/nfs/dir.c:765:
+static int nfs_lookup_revalidate(struct dentry * dentry, struct nameidata *nd,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#176: FILE: fs/nfs/dir.c:1094:
+static int nfs_open_revalidate(struct dentry *dentry, struct nameidata *nd,
                                                                         ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#188: FILE: fs/nfs/dir.c:1142:
+	return nfs_lookup_revalidate(dentry, nd, acred);
 	                                     ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#201: FILE: fs/proc/base.c:1104:
+static int pid_revalidate(struct dentry *dentry, struct nameidata *nd,
                                                                    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#231: FILE: fs/proc/base.c:1273:
+static int tid_fd_revalidate(struct dentry *dentry, struct nameidata *nd,
                                                                       ^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#354: FILE: fs/proc/base.c:1684:
+			if (proc_pident_fill_cache(filp, dirent, filldir, task,
 			                           ^^^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#364: FILE: fs/proc/base.c:1775:
+			    void * dirent, filldir_t filldir)

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#383: FILE: fs/proc/base.c:1928:
+static int proc_base_revalidate(struct dentry *dentry, struct nameidata *nd,
                                                                          ^^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#422: FILE: fs/proc/base.c:2120:
+			    void * dirent, filldir_t filldir)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#459: FILE: fs/proc/base.c:2246:
+struct dentry *proc_pid_lookup(struct inode *dir, struct dentry * dentry,

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#460: FILE: fs/proc/base.c:2247:
+			       struct nameidata *nd, struct cred *cred)
 			                         ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#527: FILE: fs/proc/proc_sysctl.c:454:
+static int proc_sys_revalidate(struct dentry *dentry, struct nameidata *nd,
                                                                         ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#541: FILE: fs/proc/root.c:100:
+	return proc_pid_lookup(dir, dentry, nd, cred);
 	                                    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#554: FILE: fs/vfat/namei.c:28:
+static int vfat_revalidate(struct dentry *dentry, struct nameidata *nd,
                                                                     ^^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#576: FILE: include/linux/dcache.h:131:
+	int (*d_revalidate)(struct dentry *, struct nameidata *, struct cred *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nameidata *' should also have an identifier name
#576: FILE: include/linux/dcache.h:131:
+	int (*d_revalidate)(struct dentry *, struct nameidata *, struct cred *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cred *' should also have an identifier name
#576: FILE: include/linux/dcache.h:131:
+	int (*d_revalidate)(struct dentry *, struct nameidata *, struct cred *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#589: FILE: include/linux/proc_fs.h:113:
+struct dentry *proc_pid_lookup(struct inode *, struct dentry *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#589: FILE: include/linux/proc_fs.h:113:
+struct dentry *proc_pid_lookup(struct inode *, struct dentry *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct nameidata *' should also have an identifier name
#589: FILE: include/linux/proc_fs.h:113:
+struct dentry *proc_pid_lookup(struct inode *, struct dentry *,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct cred *' should also have an identifier name
#589: FILE: include/linux/proc_fs.h:113:
+struct dentry *proc_pid_lookup(struct inode *, struct dentry *,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000371056.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 25 warnings, 2 checks, 454 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000371056.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
