WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#65: FILE: drivers/video/Kconfig:1745:
+config FB_PXA_SMARTPANEL
+	bool "PXA Smartpanel LCD support"
+	default n
+	depends on FB_PXA
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#96: FILE: drivers/video/pxafb.c:586:
*fbi, int dma, int pal,

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#122: FILE: drivers/video/pxafb.c:612:
+	uint32_t prsr;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#159: FILE: drivers/video/pxafb.c:649:
+	if (wait_for_completion_timeout(&fbi->command_done, HZ/2) == 0) {
 	                                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#161: FILE: drivers/video/pxafb.c:651:
+		pr_warning("%s: timeout waiting for command done\n",
+				__func__);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#190: FILE: drivers/video/pxafb.c:680:
+static unsigned int __smart_timing(unsigned time_ns, unsigned long lcd_clk)

WARNING:LINE_SPACING: Missing a blank line after declarations
#193: FILE: drivers/video/pxafb.c:683:
+	unsigned int t = (time_ns * (lcd_clk / 1000000) / 1000);
+	return (t == 0) ? 1 : t;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#197: FILE: drivers/video/pxafb.c:687:
+static void setup_smart_timing(struct pxafb_info *fbi,
+				struct fb_var_screeninfo *var)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#202: FILE: drivers/video/pxafb.c:692:
+	unsigned t1, t2, t3, t4;

CHECK:CAMELCASE: Avoid CamelCase: <LCCR1_DisWdth>
#210: FILE: drivers/video/pxafb.c:700:
+		LCCR1_DisWdth(var->xres) |

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <LCCR1_BegLnDel>
#211: FILE: drivers/video/pxafb.c:701:
+		LCCR1_BegLnDel(__smart_timing(t1, lclk)) |

CHECK:CAMELCASE: Avoid CamelCase: <LCCR1_EndLnDel>
#212: FILE: drivers/video/pxafb.c:702:
+		LCCR1_EndLnDel(__smart_timing(t2, lclk)) |

CHECK:CAMELCASE: Avoid CamelCase: <LCCR1_HorSnchWdth>
#213: FILE: drivers/video/pxafb.c:703:
+		LCCR1_HorSnchWdth(__smart_timing(t3, lclk));

CHECK:CAMELCASE: Avoid CamelCase: <LCCR2_DisHght>
#215: FILE: drivers/video/pxafb.c:705:
+	fbi->reg_lccr2 = LCCR2_DisHght(var->yres);

CHECK:CAMELCASE: Avoid CamelCase: <LCCR3_PixClkDiv>
#216: FILE: drivers/video/pxafb.c:706:
+	fbi->reg_lccr3 = LCCR3_PixClkDiv(__smart_timing(t4, lclk));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#229: FILE: drivers/video/pxafb.c:719:
+		pr_err("%s: not properly initialized, thread terminated\n",
+				__func__);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#237: FILE: drivers/video/pxafb.c:727:
+	while (!kthread_should_stop()) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#259: FILE: drivers/video/pxafb.c:749:
+		printk(KERN_ERR "%s: unable to create kernel thread\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#260: FILE: drivers/video/pxafb.c:750:
+		printk(KERN_ERR "%s: unable to create kernel thread\n",
+				__func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#301: FILE: drivers/video/pxafb.c:818:
+			printk(KERN_ERR "%s: invalid xres %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#302: FILE: drivers/video/pxafb.c:819:
+			printk(KERN_ERR "%s: invalid xres %d\n",
+				fbi->fb.fix.id, var->xres);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#311: FILE: drivers/video/pxafb.c:828:
+			printk(KERN_ERR "%s: invalid bit depth %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#317: FILE: drivers/video/pxafb.c:834:
+			printk(KERN_ERR "%s: invalid hsync_len %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#318: FILE: drivers/video/pxafb.c:835:
+			printk(KERN_ERR "%s: invalid hsync_len %d\n",
+				fbi->fb.fix.id, var->hsync_len);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#320: FILE: drivers/video/pxafb.c:837:
+			printk(KERN_ERR "%s: invalid left_margin %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#321: FILE: drivers/video/pxafb.c:838:
+			printk(KERN_ERR "%s: invalid left_margin %d\n",
+				fbi->fb.fix.id, var->left_margin);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#323: FILE: drivers/video/pxafb.c:840:
+			printk(KERN_ERR "%s: invalid right_margin %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#324: FILE: drivers/video/pxafb.c:841:
+			printk(KERN_ERR "%s: invalid right_margin %d\n",
+				fbi->fb.fix.id, var->right_margin);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#326: FILE: drivers/video/pxafb.c:843:
+			printk(KERN_ERR "%s: invalid yres %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#327: FILE: drivers/video/pxafb.c:844:
+			printk(KERN_ERR "%s: invalid yres %d\n",
+				fbi->fb.fix.id, var->yres);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#329: FILE: drivers/video/pxafb.c:846:
+			printk(KERN_ERR "%s: invalid vsync_len %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#330: FILE: drivers/video/pxafb.c:847:
+			printk(KERN_ERR "%s: invalid vsync_len %d\n",
+				fbi->fb.fix.id, var->vsync_len);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#332: FILE: drivers/video/pxafb.c:849:
+			printk(KERN_ERR "%s: invalid upper_margin %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#333: FILE: drivers/video/pxafb.c:850:
+			printk(KERN_ERR "%s: invalid upper_margin %d\n",
+				fbi->fb.fix.id, var->upper_margin);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#335: FILE: drivers/video/pxafb.c:852:
+			printk(KERN_ERR "%s: invalid lower_margin %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#336: FILE: drivers/video/pxafb.c:853:
+			printk(KERN_ERR "%s: invalid lower_margin %d\n",
+				fbi->fb.fix.id, var->lower_margin);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'var->bits_per_pixel >= 16'
#378: FILE: drivers/video/pxafb.c:879:
+	if ((var->bits_per_pixel >= 16) || (fbi->lccr0 & LCCR0_LCDT))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#400: FILE: drivers/video/pxafb.c:1003:
+		wait_for_completion_timeout(&fbi->refresh_done,
+				200 * HZ / 1000);

CHECK:SPACING: No space is necessary after a cast
#448: FILE: drivers/video/pxafb.c:1267:
+		fbi->dma_buff = (void *) fbi->map_cpu;

CHECK:SPACING: No space is necessary after a cast
#451: FILE: drivers/video/pxafb.c:1269:
+		fbi->palette_cpu = (u16 *) fbi->dma_buff->palette;

CHECK:SPACING: No space is necessary after a cast
#454: FILE: drivers/video/pxafb.c:1272:
+		fbi->smart_cmds = (uint16_t *) fbi->dma_buff->cmd_buff;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#499: FILE: drivers/video/pxafb.h:59:
+	uint16_t cmd_buff[CMD_BUFF_SIZE];

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#524: FILE: drivers/video/pxafb.h:116:
+	uint16_t		*smart_cmds;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#571: FILE: include/asm-arm/arch-pxa/pxafb.h:94:
+	unsigned	a0csrd_set_hld;	/* A0 and CS Setup/Hold Time before/after

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#573: FILE: include/asm-arm/arch-pxa/pxafb.h:95:
+	unsigned	a0csrd_set_hld;	/* A0 and CS Setup/Hold Time before/after
+	unsigned	a0cswr_set_hld;	/* A0 and CS Setup/Hold Time before/after

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#575: FILE: include/asm-arm/arch-pxa/pxafb.h:96:
+	unsigned	a0cswr_set_hld;	/* A0 and CS Setup/Hold Time before/after
+	unsigned	wr_pulse_width;	/* L_PCLK_WR pulse width */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#576: FILE: include/asm-arm/arch-pxa/pxafb.h:97:
+	unsigned	rd_pulse_width;	/* L_FCLK_RD pulse width */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#577: FILE: include/asm-arm/arch-pxa/pxafb.h:98:
+	unsigned	cmd_inh_time;	/* Command Inhibit time between two writes */

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#578: FILE: include/asm-arm/arch-pxa/pxafb.h:99:
+	unsigned	op_hold_time;	/* Output Hold time from L_FCLK_RD negation */

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct fb_info *' should also have an identifier name
#587: FILE: include/asm-arm/arch-pxa/pxafb.h:143:
+	void (*smart_update)(struct fb_info *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#593: FILE: include/asm-arm/arch-pxa/pxafb.h:149:
+extern int pxafb_smart_queue(struct fb_info *info, uint16_t *cmds, int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#593: FILE: include/asm-arm/arch-pxa/pxafb.h:149:
+extern int pxafb_smart_queue(struct fb_info *info, uint16_t *cmds, int);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#594: FILE: include/asm-arm/arch-pxa/pxafb.h:150:
+extern int pxafb_smart_flush(struct fb_info *info);

CHECK:BIT_MACRO: Prefer using the BIT macro
#646: FILE: include/asm-arm/arch-pxa/regs-lcd.h:148:
+#define LCSR_RD_ST	(1 << 11)	/* read status */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#647: FILE: include/asm-arm/arch-pxa/regs-lcd.h:149:
+#define LCSR_CMD_INT	(1 << 12)	/* command interrupt */

CHECK:BIT_MACRO: Prefer using the BIT macro
#653: FILE: include/asm-arm/arch-pxa/regs-lcd.h:155:
+#define PRSR_A0		(1 << 8)	/* Read Data Source */

CHECK:BIT_MACRO: Prefer using the BIT macro
#654: FILE: include/asm-arm/arch-pxa/regs-lcd.h:156:
+#define PRSR_ST_OK	(1 << 9)	/* Status OK */

CHECK:BIT_MACRO: Prefer using the BIT macro
#655: FILE: include/asm-arm/arch-pxa/regs-lcd.h:157:
+#define PRSR_CON_NT	(1 << 10)	/* Continue to Next Command */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000298272.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 22 warnings, 35 checks, 566 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000298272.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
