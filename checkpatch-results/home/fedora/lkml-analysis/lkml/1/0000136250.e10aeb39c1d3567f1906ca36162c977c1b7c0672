WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#60: FILE: drivers/virtio/Kconfig:26:
+config VIRTIO_VBUS
+	tristate "VBUS driver for virtio devices (EXPERIMENTAL)"
+	depends on VBUS_DRIVERS && EXPERIMENTAL
+	select VIRTIO
+	select VIRTIO_RING
+	---help---
+	  This drivers provides support for virtio based paravirtual device
+	  drivers over VBUS.  This requires that your VMM has appropriate VBUS
+	  virtio backends.
+
+	  Currently, the ABI is not considered stable so there is no guarantee
+	  that this version of the driver will work with your VMM.
+
+	  If unsure, say M.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#89: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#94: FILE: drivers/virtio/virtio_vbus.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#192: FILE: drivers/virtio/virtio_vbus.c:99:
+	BUG_ON(ret < 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#215: FILE: drivers/virtio/virtio_vbus.c:122:
+	BUG_ON(ret < 0);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#219: FILE: drivers/virtio/virtio_vbus.c:126:
+_virtio_get(struct virtio_device *vdev, unsigned offset,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#220: FILE: drivers/virtio/virtio_vbus.c:127:
+	    void *buf, unsigned len)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#224: FILE: drivers/virtio/virtio_vbus.c:131:
+	BUG_ON((offset + len) > VIRTIO_VBUS_CONFIGSPACE_LEN);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#229: FILE: drivers/virtio/virtio_vbus.c:136:
+_virtio_set(struct virtio_device *vdev, unsigned offset,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#230: FILE: drivers/virtio/virtio_vbus.c:137:
+	    const void *buf, unsigned len)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#235: FILE: drivers/virtio/virtio_vbus.c:142:
+	BUG_ON((offset + len) > VIRTIO_VBUS_CONFIGSPACE_LEN);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#239: FILE: drivers/virtio/virtio_vbus.c:146:
+	BUG_ON(ret < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#250: FILE: drivers/virtio/virtio_vbus.c:157:
+	BUG_ON(ret < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#262: FILE: drivers/virtio/virtio_vbus.c:169:
+	BUG_ON(status == 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#266: FILE: drivers/virtio/virtio_vbus.c:173:
+	BUG_ON(ret < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#276: FILE: drivers/virtio/virtio_vbus.c:183:
+	BUG_ON(ret < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#308: FILE: drivers/virtio/virtio_vbus.c:215:
+	BUG_ON(ret < 0);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#324: FILE: drivers/virtio/virtio_vbus.c:231:
+_virtio_find_vq(struct virtio_device *vdev, unsigned index,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#325: FILE: drivers/virtio/virtio_vbus.c:232:
+_virtio_find_vq(struct virtio_device *vdev, unsigned index,
+	 void (*callback)(struct virtqueue *vq))

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*_vq)...) over kmalloc(sizeof(struct vbus_virtqueue)...)
#339: FILE: drivers/virtio/virtio_vbus.c:246:
+	_vq = kmalloc(sizeof(struct vbus_virtqueue), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#349: FILE: drivers/virtio/virtio_vbus.c:256:
+	_vq->shm = alloc_pages_exact(_vq->size, GFP_KERNEL|__GFP_ZERO);
 	                                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#439: FILE: drivers/virtio/virtio_vbus.c:346:
+	BUG_ON(ret < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#449: FILE: drivers/virtio/virtio_vbus.c:356:
+	BUG_ON(ret < 0);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#472: FILE: drivers/virtio/virtio_vbus.c:379:
+	BUG_ON(ret < 0);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#489: FILE: drivers/virtio/virtio_vbus.c:396:
+	printk(KERN_INFO "VIRTIO-VBUS: Found new device at %lld\n", vdev->id);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#493: FILE: drivers/virtio/virtio_vbus.c:400:
+		printk(KERN_ERR "virtio_vbus: ABI version %d failed with: %d\n",

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*priv)...) over kzalloc(sizeof(struct virtio_vbus_priv)...)
#498: FILE: drivers/virtio/virtio_vbus.c:405:
+	priv = kzalloc(sizeof(struct virtio_vbus_priv), GFP_KERNEL);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#577: FILE: drivers/virtio/virtio_vbus.c:484:
+	printk(KERN_INFO "Virtio-VBUS: Copyright (C) 2009 Novell, Gregory Haskins\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#596: FILE: include/linux/virtio_vbus.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#616: FILE: include/linux/virtio_vbus.h:21:
+ * along with this program; if not, write to the Free Software Foundation,$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#617: FILE: include/linux/virtio_vbus.h:22:
+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#711: FILE: include/linux/virtio_vbus.h:116:
+int virtio_device_interface_register(struct vbus_device *dev,
+				   struct vbus *vbus,

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#767: FILE: kernel/vbus/Kconfig:17:
+config VBUS_VIRTIO_BACKEND
+       tristate "Virtio VBUS Backend"
+       depends on VIRTIO_RING
+       depends on VBUS
+       default n
+       help
+        Provides backend support for virtio devices over vbus
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#798: FILE: kernel/vbus/virtio.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#814: FILE: kernel/vbus/virtio.c:17:
+ * along with this program; if not, write to the Free Software Foundation,$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#815: FILE: kernel/vbus/virtio.c:18:
+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#828: FILE: kernel/vbus/virtio.c:31:
+#  define PDEBUG(fmt, args...) printk(KERN_DEBUG "virtio-vbus: " fmt, ## args)

WARNING:TYPO_SPELLING: 'compatability' may be misspelled - perhaps 'compatibility'?
#924: FILE: kernel/vbus/virtio.c:127:
+ * interface may be extended without breaking ABI compatability
                                                   ^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1120: FILE: kernel/vbus/virtio.c:323:
+_virtio_connection_call(struct vbus_connection *conn,
+		    unsigned long func,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1266: FILE: kernel/vbus/virtio.c:469:
+_virtio_connection_shm(struct vbus_connection *conn,
+		   unsigned long id,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000136250.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 29 warnings, 7 checks, 1335 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000136250.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
