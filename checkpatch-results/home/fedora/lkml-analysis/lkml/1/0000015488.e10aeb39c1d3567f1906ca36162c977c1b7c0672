CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#55: FILE: drivers/scsi/hpsa.c:155:
+static void calc_bucket_map(int *bucket, int num_buckets,
+	int nsgs, int *bucket_map);

CHECK:CAMELCASE: Avoid CamelCase: <transMethod>
#80: FILE: drivers/scsi/hpsa.c:404:
+	if (unlikely(h->transMethod != CFGTBL_Trans_Performant))

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around h->reply_pool_head
#83: FILE: drivers/scsi/hpsa.c:407:
+	if ((*(h->reply_pool_head) & 1) == (h->reply_pool_wraparound)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'h->reply_pool_head'
#83: FILE: drivers/scsi/hpsa.c:407:
+	if ((*(h->reply_pool_head) & 1) == (h->reply_pool_wraparound)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'h->reply_pool_wraparound'
#83: FILE: drivers/scsi/hpsa.c:407:
+	if ((*(h->reply_pool_head) & 1) == (h->reply_pool_wraparound)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around h->reply_pool_head
#84: FILE: drivers/scsi/hpsa.c:408:
+		a = *(h->reply_pool_head); /* Next cmd in ring buffer */

CHECK:CAMELCASE: Avoid CamelCase: <CommandList>
#102: FILE: drivers/scsi/hpsa.c:426:
+static void set_performant_mode(struct ctlr_info *h, struct CommandList *c)

CHECK:CAMELCASE: Avoid CamelCase: <blockFetchTable>
#105: FILE: drivers/scsi/hpsa.c:429:
+		c->busaddr |= 1 | (h->blockFetchTable[c->Header.SGList] << 1);

CHECK:CAMELCASE: Avoid CamelCase: <Header>
#105: FILE: drivers/scsi/hpsa.c:429:
+		c->busaddr |= 1 | (h->blockFetchTable[c->Header.SGList] << 1);

CHECK:CAMELCASE: Avoid CamelCase: <SGList>
#105: FILE: drivers/scsi/hpsa.c:429:
+		c->busaddr |= 1 | (h->blockFetchTable[c->Header.SGList] << 1);

CHECK:CAMELCASE: Avoid CamelCase: <Tag>
#135: FILE: drivers/scsi/hpsa.c:1885:
+	c->Header.Tag.lower = (c->cmdindex << DIRECT_LOOKUP_SHIFT);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#174: FILE: drivers/scsi/hpsa.c:2787:
+static inline u32 process_indexed_cmd(struct ctlr_info *h,
+	u32 raw_tag)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#189: FILE: drivers/scsi/hpsa.c:2802:
+static inline u32 process_nonindexed_cmd(struct ctlr_info *h,
+	u32 raw_tag)

CHECK:CAMELCASE: Avoid CamelCase: <cmpQ>
#196: FILE: drivers/scsi/hpsa.c:2809:
+	hlist_for_each_entry(c, tmp, &h->cmpQ, list) {

WARNING:TYPO_SPELLING: 'firmwart' may be misspelled - perhaps 'firmware'?
#249: FILE: drivers/scsi/hpsa.c:2839:
+/* Send a message CDB to the firmwart. */
                              ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#250: FILE: drivers/scsi/hpsa.c:2840:
 static __devinit int hpsa_message(struct pci_dev *pdev, unsigned char opcode,

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around h->cfgtable->TransMethodOffset
#279: FILE: drivers/scsi/hpsa.c:3276:
+	trans_offset = readl(&(h->cfgtable->TransMethodOffset));

CHECK:CAMELCASE: Avoid CamelCase: <TransMethodOffset>
#279: FILE: drivers/scsi/hpsa.c:3276:
+	trans_offset = readl(&(h->cfgtable->TransMethodOffset));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#281: FILE: drivers/scsi/hpsa.c:3278:
+	h->transtable = remap_pci_mem(pci_resource_start(pdev,
+				cfg_base_addr_index)+cfg_offset+trans_offset,

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#281: FILE: drivers/scsi/hpsa.c:3278:
+				cfg_base_addr_index)+cfg_offset+trans_offset,
 				                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#281: FILE: drivers/scsi/hpsa.c:3278:
+				cfg_base_addr_index)+cfg_offset+trans_offset,
 				                               ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around h->cfgtable->MaxPerformantModeCommands
#285: FILE: drivers/scsi/hpsa.c:3282:
+	h->max_commands = readl(&(h->cfgtable->MaxPerformantModeCommands));

CHECK:CAMELCASE: Avoid CamelCase: <MaxPerformantModeCommands>
#285: FILE: drivers/scsi/hpsa.c:3282:
+	h->max_commands = readl(&(h->cfgtable->MaxPerformantModeCommands));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#310: FILE: drivers/scsi/hpsa.c:3422:
+	rc = request_irq(h->intr[PERF_MODE_INT], do_hpsa_intr,
+			IRQF_DISABLED, h->devname, h);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#322: FILE: drivers/scsi/hpsa.c:3430:
+	dev_info(&pdev->dev, "%s: <0x%x> at IRQ %d%s using DAC\n",
+	       h->devname, pdev->device,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#358: FILE: drivers/scsi/hpsa.c:3551:
+	pci_free_consistent(h->pdev, h->reply_pool_size,
+		h->reply_pool, h->reply_pool_dhandle);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#381: FILE: drivers/scsi/hpsa.c:3598:
+static void  calc_bucket_map(int bucket[], int num_buckets,
+	int nsgs, int *bucket_map)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around h->cfgtable->TransportSupport
#419: FILE: drivers/scsi/hpsa.c:3636:
+	trans_support = readl(&(h->cfgtable->TransportSupport));

CHECK:CAMELCASE: Avoid CamelCase: <TransportSupport>
#419: FILE: drivers/scsi/hpsa.c:3636:
+	trans_support = readl(&(h->cfgtable->TransportSupport));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around h->cfgtable->MaxPerformantModeCommands
#423: FILE: drivers/scsi/hpsa.c:3640:
+	h->max_commands = readl(&(h->cfgtable->MaxPerformantModeCommands));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#428: FILE: drivers/scsi/hpsa.c:3645:
+	h->reply_pool = pci_alloc_consistent(h->pdev, h->reply_pool_size,
+				&(h->reply_pool_dhandle));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around h->reply_pool_dhandle
#428: FILE: drivers/scsi/hpsa.c:3645:
+				&(h->reply_pool_dhandle));

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#431: FILE: drivers/scsi/hpsa.c:3648:
+	h->blockFetchTable = kmalloc(((h->max_sg_entries+1) *
 	                                                ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'h->reply_pool == NULL'
#434: FILE: drivers/scsi/hpsa.c:3651:
+	if ((h->reply_pool == NULL)
+		|| (h->blockFetchTable == NULL))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'h->blockFetchTable == NULL'
#434: FILE: drivers/scsi/hpsa.c:3651:
+	if ((h->reply_pool == NULL)
+		|| (h->blockFetchTable == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!h->reply_pool"
#434: FILE: drivers/scsi/hpsa.c:3651:
+	if ((h->reply_pool == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#435: FILE: drivers/scsi/hpsa.c:3652:
+	if ((h->reply_pool == NULL)
+		|| (h->blockFetchTable == NULL))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!h->blockFetchTable"
#435: FILE: drivers/scsi/hpsa.c:3652:
+		|| (h->blockFetchTable == NULL))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around h->cfgtable->TransMethodOffset
#444: FILE: drivers/scsi/hpsa.c:3661:
+	trans_offset = readl(&(h->cfgtable->TransMethodOffset));

CHECK:CAMELCASE: Avoid CamelCase: <BlockFetch>
#448: FILE: drivers/scsi/hpsa.c:3665:
+		writel(bft[i], &h->transtable->BlockFetch[i]);

CHECK:CAMELCASE: Avoid CamelCase: <RepQSize>
#451: FILE: drivers/scsi/hpsa.c:3668:
+	writel(h->max_commands, &h->transtable->RepQSize);

CHECK:CAMELCASE: Avoid CamelCase: <RepQCount>
#452: FILE: drivers/scsi/hpsa.c:3669:
+	writel(1, &h->transtable->RepQCount);

CHECK:CAMELCASE: Avoid CamelCase: <RepQCtrAddrLow32>
#453: FILE: drivers/scsi/hpsa.c:3670:
+	writel(0, &h->transtable->RepQCtrAddrLow32);

CHECK:CAMELCASE: Avoid CamelCase: <RepQCtrAddrHigh32>
#454: FILE: drivers/scsi/hpsa.c:3671:
+	writel(0, &h->transtable->RepQCtrAddrHigh32);

CHECK:CAMELCASE: Avoid CamelCase: <RepQAddr0Low32>
#455: FILE: drivers/scsi/hpsa.c:3672:
+	writel(h->reply_pool_dhandle, &h->transtable->RepQAddr0Low32);

CHECK:CAMELCASE: Avoid CamelCase: <RepQAddr0High32>
#456: FILE: drivers/scsi/hpsa.c:3673:
+	writel(0, &h->transtable->RepQAddr0High32);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#458: FILE: drivers/scsi/hpsa.c:3675:
+	writel(CFGTBL_Trans_Performant,
+		&(h->cfgtable->HostWrite.TransportRequest));

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around h->cfgtable->HostWrite.TransportRequest
#458: FILE: drivers/scsi/hpsa.c:3675:
+		&(h->cfgtable->HostWrite.TransportRequest));

CHECK:CAMELCASE: Avoid CamelCase: <HostWrite>
#458: FILE: drivers/scsi/hpsa.c:3675:
+		&(h->cfgtable->HostWrite.TransportRequest));

CHECK:CAMELCASE: Avoid CamelCase: <TransportRequest>
#458: FILE: drivers/scsi/hpsa.c:3675:
+		&(h->cfgtable->HostWrite.TransportRequest));

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#462: FILE: drivers/scsi/hpsa.c:3679:
+	 * as we enter this code.) */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around h->cfgtable->TransportActive
#471: FILE: drivers/scsi/hpsa.c:3688:
+	register_value = readl(&(h->cfgtable->TransportActive));

CHECK:CAMELCASE: Avoid CamelCase: <TransportActive>
#471: FILE: drivers/scsi/hpsa.c:3688:
+	register_value = readl(&(h->cfgtable->TransportActive));

WARNING:SPLIT_STRING: quoted string split across lines
#474: FILE: drivers/scsi/hpsa.c:3691:
+		dev_warn(&h->pdev->dev, "unable to get board into"
+					" performant mode\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#487: FILE: drivers/scsi/hpsa.c:3704:
+		pci_free_consistent(h->pdev, h->reply_pool_size,
+			h->reply_pool, h->reply_pool_dhandle);

CHECK:CAMELCASE: Avoid CamelCase: <TransTable_struct>
#525: FILE: drivers/scsi/hpsa.h:111:
+	struct TransTable_struct *transtable;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#553: FILE: drivers/scsi/hpsa.h:195:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#580: FILE: drivers/scsi/hpsa.h:237:
+		writel(SA5_PERF_INTR_OFF,
+			h->vaddr + SA5_REPLY_INTR_MASK_OFFSET);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around h->reply_pool_head
#601: FILE: drivers/scsi/hpsa.h:258:
+	if ((*(h->reply_pool_head) & 1) == (h->reply_pool_wraparound)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'h->reply_pool_head'
#601: FILE: drivers/scsi/hpsa.h:258:
+	if ((*(h->reply_pool_head) & 1) == (h->reply_pool_wraparound)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'h->reply_pool_wraparound'
#601: FILE: drivers/scsi/hpsa.h:258:
+	if ((*(h->reply_pool_head) & 1) == (h->reply_pool_wraparound)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around h->reply_pool_head
#602: FILE: drivers/scsi/hpsa.h:259:
+		register_value = *(h->reply_pool_head);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#685: FILE: drivers/scsi/hpsa_cmd.h:276:
+#define USEEXTRA ((sizeof(void *) - 4)/4)
                                       ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#721: FILE: drivers/scsi/hpsa_cmd.h:319:
+#define COMMANDLIST_PAD ((8 - sizeof(long))/4 * 8)
                                            ^

CHECK:CAMELCASE: Avoid CamelCase: <Signature>
#747: FILE: drivers/scsi/hpsa_cmd.h:337:
+	u8            Signature[4];

CHECK:CAMELCASE: Avoid CamelCase: <SpecValence>
#748: FILE: drivers/scsi/hpsa_cmd.h:338:
+	u32		SpecValence;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#751: FILE: drivers/scsi/hpsa_cmd.h:341:
+^Istruct ^I^IHostWrite HostWrite;$

CHECK:CAMELCASE: Avoid CamelCase: <CmdsOutMax>
#752: FILE: drivers/scsi/hpsa_cmd.h:342:
+	u32           CmdsOutMax;

CHECK:CAMELCASE: Avoid CamelCase: <BusTypes>
#753: FILE: drivers/scsi/hpsa_cmd.h:343:
+	u32           BusTypes;

CHECK:CAMELCASE: Avoid CamelCase: <ServerName>
#755: FILE: drivers/scsi/hpsa_cmd.h:345:
+	u8            ServerName[16];

CHECK:CAMELCASE: Avoid CamelCase: <HeartBeat>
#756: FILE: drivers/scsi/hpsa_cmd.h:346:
+	u32           HeartBeat;

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#758: FILE: drivers/scsi/hpsa_cmd.h:348:
+^Iu32^I ^IMaxScatterGatherElements;$

CHECK:CAMELCASE: Avoid CamelCase: <MaxScatterGatherElements>
#758: FILE: drivers/scsi/hpsa_cmd.h:348:
+	u32	 	MaxScatterGatherElements;

CHECK:CAMELCASE: Avoid CamelCase: <MaxLogicalUnits>
#759: FILE: drivers/scsi/hpsa_cmd.h:349:
+	u32		MaxLogicalUnits;

CHECK:CAMELCASE: Avoid CamelCase: <MaxPhysicalDevices>
#760: FILE: drivers/scsi/hpsa_cmd.h:350:
+	u32		MaxPhysicalDevices;

CHECK:CAMELCASE: Avoid CamelCase: <MaxPhysicalDrivesPerLogicalUnit>
#761: FILE: drivers/scsi/hpsa_cmd.h:351:
+	u32		MaxPhysicalDrivesPerLogicalUnit;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000015488.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 70 checks, 691 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000015488.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
