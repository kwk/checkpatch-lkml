WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
> > how about __paravirt_nop_start < func < __paravirt_nop_end  and preserve

ERROR:DIFF_IN_COMMIT_MSG: Avoid using diff content in the commit message - patch(1) might not work
#44: 
--- a/arch/i386/kernel/paravirt.c	Fri Mar 16 11:09:10 2007 -0700

Avoid having diff content in commit message.
This causes problems when one tries to apply a file containing both
the changelog and the diff because patch(1) tries to apply the diff
which it found in the changelog.

See: https://lore.kernel.org/lkml/20150611134006.9df79a893e3636019ad2759e@linux-foundation.org/

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#58: FILE: arch/i386/kernel/paravirt.c:42:
+}
+void __paravirt_nop pv_nop_set_lazy_mode(int mode)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#61: FILE: arch/i386/kernel/paravirt.c:45:
+}
+void __paravirt_nop pv_nop_alloc_pt(struct mm_struct *mm, u32 pfn)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#64: FILE: arch/i386/kernel/paravirt.c:48:
+}
+void __paravirt_nop pv_nop_alloc_pd(u32 pfn)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#67: FILE: arch/i386/kernel/paravirt.c:51:
+}
+void __paravirt_nop pv_nop_alloc_pd_clone(u32 pfn, u32 clonepfn, u32 start, u32 count)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#70: FILE: arch/i386/kernel/paravirt.c:54:
+}
+void __paravirt_nop pv_nop_release_pt(u32 pfn)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#73: FILE: arch/i386/kernel/paravirt.c:57:
+}
+void __paravirt_nop pv_nop_release_pd(u32 pfn)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#76: FILE: arch/i386/kernel/paravirt.c:60:
+}
+void __paravirt_nop pv_nop_pte_update(struct mm_struct *mm, unsigned long addr, pte_t *ptep)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#79: FILE: arch/i386/kernel/paravirt.c:63:
+}
+void __paravirt_nop pv_nop_pte_update_defer(struct mm_struct *mm, unsigned long addr, pte_t *ptep)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#82: FILE: arch/i386/kernel/paravirt.c:66:
+}
+void * __paravirt_nop pv_nop_kmap_atomic_pte(struct page *page, enum km_type type)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#85: FILE: arch/i386/kernel/paravirt.c:69:
+}
+void __paravirt_nop pv_nop_load_tr_desc(void)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#88: FILE: arch/i386/kernel/paravirt.c:72:
+}
+void __paravirt_nop pv_nop_activate_mm(struct mm_struct *prev, struct mm_struct *next)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#91: FILE: arch/i386/kernel/paravirt.c:75:
+}
+void __paravirt_nop pv_nop_dup_mmap(struct mm_struct *oldmm, struct mm_struct *mm)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#94: FILE: arch/i386/kernel/paravirt.c:78:
+}
+void __paravirt_nop pv_nop_exit_mmap(struct mm_struct *mm)

WARNING:LONG_LINE: line length of 110 exceeds 100 columns
#97: FILE: arch/i386/kernel/paravirt.c:81:
+void __paravirt_nop pv_nop_startup_ipi_hook(int phys_apicid, unsigned long start_eip, unsigned long start_esp)

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#97: FILE: arch/i386/kernel/paravirt.c:81:
+}
+void __paravirt_nop pv_nop_startup_ipi_hook(int phys_apicid, unsigned long start_eip, unsigned long start_esp)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#100: FILE: arch/i386/kernel/paravirt.c:84:
+}
+#ifdef CONFIG_X86_LOCAL_APIC

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#104: FILE: arch/i386/kernel/paravirt.c:88:
+}
+void __paravirt_nop pv_nop_setup_secondary_clock(void)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#266: FILE: include/asm-i386/paravirt.h:207:
+#define __paravirt_nop __attribute__ ((__section__ (".paravirtnop")))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#266: FILE: include/asm-i386/paravirt.h:207:
+#define __paravirt_nop __attribute__ ((__section__ (".paravirtnop")))

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __section(".paravirtnop") over __attribute__((__section__(".paravirtnop")))
#266: FILE: include/asm-i386/paravirt.h:207:
+#define __paravirt_nop __attribute__ ((__section__ (".paravirtnop")))

WARNING:LONG_LINE: line length of 111 exceeds 100 columns
#283: FILE: include/asm-i386/paravirt.h:224:
+void __paravirt_nop pv_nop_startup_ipi_hook(int phys_apicid, unsigned long start_eip, unsigned long start_esp);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000455129.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 5 warnings, 16 checks, 232 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000455129.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
