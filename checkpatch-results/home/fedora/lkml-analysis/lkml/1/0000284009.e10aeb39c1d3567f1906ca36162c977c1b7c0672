WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#41: FILE: drivers/video/via/viafbdev.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#57: FILE: drivers/video/via/viafbdev.c:17:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#59: FILE: drivers/video/via/viafbdev.c:19:
+ * 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:CAMELCASE: Avoid CamelCase: <resMode>
#77: FILE: drivers/video/via/viafbdev.c:37:
+static int resMode = VIA_RES_640X480;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:CONST_STRUCT: struct fb_ops should normally be const
#98: FILE: drivers/video/via/viafbdev.c:58:
+static struct fb_ops viafb_ops;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#123: FILE: drivers/video/via/viafbdev.c:83:
+		p_max_size->x = p_max_size->y = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#126: FILE: drivers/video/via/viafbdev.c:86:
+		p_max_size->x = p_max_size->y = 0;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#129: FILE: drivers/video/via/viafbdev.c:89:
+}
+void get_panel_max_scal_pos(struct _panel_size_pos_info *p_para)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#133: FILE: drivers/video/via/viafbdev.c:93:
+		p_para->x = p_para->y = 0;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#136: FILE: drivers/video/via/viafbdev.c:96:
+		p_para->x = p_para->y = 0;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#144: FILE: drivers/video/via/viafbdev.c:104:
+		p_para->x = p_para->y = 0;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#147: FILE: drivers/video/via/viafbdev.c:107:
+		p_para->x = p_para->y = 0;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#150: FILE: drivers/video/via/viafbdev.c:110:
+}
+void get_panel_scal_size(struct _panel_size_pos_info *p_para)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#154: FILE: drivers/video/via/viafbdev.c:114:
+		p_para->x = p_para->y = 0;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#157: FILE: drivers/video/via/viafbdev.c:117:
+		p_para->x = p_para->y = 0;

WARNING:DEFAULT_NO_BREAK: switch default: should use break
#166: FILE: drivers/video/via/viafbdev.c:126:
+	default:
+		;

switch default case is sometimes written as "default:;".  This can
cause new cases added below default to be defective.

A "break;" should be added after empty default statement to avoid
unwanted fallthrough.

WARNING:DEFAULT_NO_BREAK: switch default: should use break
#176: FILE: drivers/video/via/viafbdev.c:136:
+	default:
+		;

WARNING:LINE_SPACING: Missing a blank line after declarations
#184: FILE: drivers/video/via/viafbdev.c:144:
+	struct viafb_par *ppar;
+	ppar = info->par;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'viafb_get_fix', this function's name, in a string
#186: FILE: drivers/video/via/viafbdev.c:146:
+	DEBUG_MSG(KERN_INFO "viafb_get_fix!\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#200: FILE: drivers/video/via/viafbdev.c:160:
+	fix->xpanstep = fix->ywrapstep = 0;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'viafb_open', this function's name, in a string
#217: FILE: drivers/video/via/viafbdev.c:177:
+	DEBUG_MSG(KERN_INFO "viafb_open!\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'viafb_release', this function's name, in a string
#223: FILE: drivers/video/via/viafbdev.c:183:
+	DEBUG_MSG(KERN_INFO "viafb_release!\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#232: FILE: drivers/video/via/viafbdev.c:192:
+	struct viafb_par *ppar;
+	ppar = info->par;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'viafb_check_var', this function's name, in a string
#234: FILE: drivers/video/via/viafbdev.c:194:
+	DEBUG_MSG(KERN_INFO "viafb_check_var!\n");

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#244: FILE: drivers/video/via/viafbdev.c:204:
+	if (24 == var->bits_per_pixel)

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#251: FILE: drivers/video/via/viafbdev.c:211:
+	/*Fill var's time information according our table,
+	   or fbset will show wrong information */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#251: FILE: drivers/video/via/viafbdev.c:211:
+	   or fbset will show wrong information */

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#298: FILE: drivers/video/via/viafbdev.c:258:
+	vres = ppar->vres = var->yres;

WARNING:LINE_SPACING: Missing a blank line after declarations
#346: FILE: drivers/video/via/viafbdev.c:306:
+	int vmode_index1 = 0;
+	DEBUG_MSG(KERN_INFO "viafb_set_par!\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'viafb_set_par', this function's name, in a string
#346: FILE: drivers/video/via/viafbdev.c:306:
+	DEBUG_MSG(KERN_INFO "viafb_set_par!\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'viafb_get_cmap_len', this function's name, in a string
#390: FILE: drivers/video/via/viafbdev.c:350:
+	DEBUG_MSG(KERN_INFO "viafb_get_cmap_len!\n");

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#396: FILE: drivers/video/via/viafbdev.c:356:
+static int viafb_setcolreg(unsigned regno, unsigned red, unsigned green,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#396: FILE: drivers/video/via/viafbdev.c:356:
+static int viafb_setcolreg(unsigned regno, unsigned red, unsigned green,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#396: FILE: drivers/video/via/viafbdev.c:356:
+static int viafb_setcolreg(unsigned regno, unsigned red, unsigned green,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#397: FILE: drivers/video/via/viafbdev.c:357:
+			   unsigned blue, unsigned transp, struct fb_info *info)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#397: FILE: drivers/video/via/viafbdev.c:357:
+			   unsigned blue, unsigned transp, struct fb_info *info)

WARNING:LINE_SPACING: Missing a blank line after declarations
#400: FILE: drivers/video/via/viafbdev.c:360:
+	u8 sr1a, sr1b, cr67, cr6a, rev = 0, shift = 10;
+	DEBUG_MSG(KERN_INFO "viafb_setcolreg!\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'viafb_setcolreg', this function's name, in a string
#400: FILE: drivers/video/via/viafbdev.c:360:
+	DEBUG_MSG(KERN_INFO "viafb_setcolreg!\n");

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#403: FILE: drivers/video/via/viafbdev.c:363:
+	if (UNICHROME_CLE266 == chip_info.gfx_chip_name) {

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(unsigned long)0xCF8' could be '0xCF8UL'
#405: FILE: drivers/video/via/viafbdev.c:365:
+		outl(0x80000000 | (0xf6 & ~3), (unsigned long)0xCF8);

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(unsigned long)0xCFC' could be '0xCFCUL'
#406: FILE: drivers/video/via/viafbdev.c:366:
+		rev = (inl((unsigned long)0xCFC) >> ((0xf6 & 3) * 8)) & 0xff;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#440: FILE: drivers/video/via/viafbdev.c:400:
+		if (UNICHROME_CLE266 == chip_info.gfx_chip_name && rev >= 15) {

CHECK:SPACING: No space is necessary after a cast
#474: FILE: drivers/video/via/viafbdev.c:434:
+		((u32 *) info->pseudo_palette)[regno] = (red & 0xF800) |

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#478: FILE: drivers/video/via/viafbdev.c:438:
+		((u32 *) info->pseudo_palette)[regno] =

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#487: FILE: drivers/video/via/viafbdev.c:447:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#502: FILE: drivers/video/via/viafbdev.c:462:
+	u8 sr1a, sr1b, cr67, cr6a, rev = 0, shift = 10;
+	if (len > 256)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#504: FILE: drivers/video/via/viafbdev.c:464:
+	if (UNICHROME_CLE266 == chip_info.gfx_chip_name) {

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(unsigned long)0xCF8' could be '0xCF8UL'
#506: FILE: drivers/video/via/viafbdev.c:466:
+		outl(0x80000000 | (0xf6 & ~3), (unsigned long)0xCF8);

WARNING:TYPECAST_INT_CONSTANT: Unnecessary typecast of c90 int constant - '(unsigned long)0xCFC' could be '0xCFCUL'
#507: FILE: drivers/video/via/viafbdev.c:467:
+		rev = (inl((unsigned long)0xCFC) >> ((0xf6 & 3) * 8)) & 0xff;

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#539: FILE: drivers/video/via/viafbdev.c:499:
+		if (UNICHROME_CLE266 == chip_info.gfx_chip_name && rev >= 15) {

CHECK:SPACING: No space is necessary after a cast
#579: FILE: drivers/video/via/viafbdev.c:539:
+			((u32 *) info->pseudo_palette)[i] =

CHECK:SPACING: No space is necessary after a cast
#589: FILE: drivers/video/via/viafbdev.c:549:
+				((u32 *) info->pseudo_palette)[i] =

CHECK:SPACING: No space is necessary after a cast
#596: FILE: drivers/video/via/viafbdev.c:556:
+				((u32 *) info->pseudo_palette)[i] =

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'viafb_pan_display', this function's name, in a string
#612: FILE: drivers/video/via/viafbdev.c:572:
+	DEBUG_MSG(KERN_INFO "viafb_pan_display!\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'viafb_blank', this function's name, in a string
#631: FILE: drivers/video/via/viafbdev.c:591:
+	DEBUG_MSG(KERN_INFO "viafb_blank!\n");

CHECK:SPACING: No space is necessary after a cast
#672: FILE: drivers/video/via/viafbdev.c:632:
+	u32 __user *argp = (u32 __user *) arg;

WARNING:LINE_SPACING: Missing a blank line after declarations
#677: FILE: drivers/video/via/viafbdev.c:637:
+	struct device_t active_dev;
+	ss = sizeof(active_dev);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'viafb_ioctl', this function's name, in a string
#681: FILE: drivers/video/via/viafbdev.c:641:
+	DEBUG_MSG(KERN_INFO "viafb_ioctl: 0x%X !!\n", cmd);

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#687: FILE: drivers/video/via/viafbdev.c:647:
+		return -EFAULT;
+		break;

CHECK:SPACING: No space is necessary after a cast
#704: FILE: drivers/video/via/viafbdev.c:664:
+		viamode.xres = (u32) via_fb_hotplug_Xres;

CHECK:CAMELCASE: Avoid CamelCase: <via_fb_hotplug_Xres>
#704: FILE: drivers/video/via/viafbdev.c:664:
+		viamode.xres = (u32) via_fb_hotplug_Xres;

CHECK:SPACING: No space is necessary after a cast
#705: FILE: drivers/video/via/viafbdev.c:665:
+		viamode.yres = (u32) via_fb_hotplug_Yres;

CHECK:CAMELCASE: Avoid CamelCase: <via_fb_hotplug_Yres>
#705: FILE: drivers/video/via/viafbdev.c:665:
+		viamode.yres = (u32) via_fb_hotplug_Yres;

CHECK:SPACING: No space is necessary after a cast
#706: FILE: drivers/video/via/viafbdev.c:666:
+		viamode.refresh = (u32) via_fb_hotplug_refresh;

CHECK:SPACING: No space is necessary after a cast
#707: FILE: drivers/video/via/viafbdev.c:667:
+		viamode.bpp = (u32) via_fb_hotplug_bpp;

CHECK:CAMELCASE: Avoid CamelCase: <iMajorNum>
#818: FILE: drivers/video/via/viafbdev.c:778:
+		driver_version.iMajorNum = VERSION_MAJOR;

CHECK:CAMELCASE: Avoid CamelCase: <iKernelNum>
#819: FILE: drivers/video/via/viafbdev.c:779:
+		driver_version.iKernelNum = VERSION_KERNEL;

CHECK:CAMELCASE: Avoid CamelCase: <iOSNum>
#820: FILE: drivers/video/via/viafbdev.c:780:
+		driver_version.iOSNum = VERSION_OS;

CHECK:CAMELCASE: Avoid CamelCase: <iMinorNum>
#821: FILE: drivers/video/via/viafbdev.c:781:
+		driver_version.iMinorNum = VERSION_MINOR;

CHECK:SPACING: No space is necessary after a cast
#1005: FILE: drivers/video/via/viafbdev.c:965:
+		col = ((u32 *) (info->pseudo_palette))[rect->color];

CHECK:SPACING: No space is necessary after a cast
#1008: FILE: drivers/video/via/viafbdev.c:968:
+		col = ((u32 *) (info->pseudo_palette))[rect->color];

CHECK:SPACING: No space is necessary after a cast
#1019: FILE: drivers/video/via/viafbdev.c:979:
+		   ((u32) (info->screen_base) - (u32) FB_MM) >> 3);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'info->var.bits_per_pixel'
#1027: FILE: drivers/video/via/viafbdev.c:987:
+								info->var.
+								bits_per_pixel

A single dereferencing identifier spanned on multiple lines like::

  struct_identifier->member[index].
  member = <foo>;

is generally hard to follow. It can easily lead to typos and so makes
the code vulnerable to bugs.

If fixing the multiple line dereferencing leads to an 80 column
violation, then either rewrite the code in a more simple way or if the
starting part of the dereferencing identifier is the same and used at
multiple places then store it in a temporary variable, and use that
temporary variable only at all the places. For example, if there are
two dereferencing identifiers::

  member1->member2->member3.foo1;
  member1->member2->member3.foo2;

then store the member1->member2->member3 part in a temporary variable.
It not only helps to avoid the 80 column violation but also reduces
the program size by removing the unnecessary dereferences.

But if none of the above methods work then ignore the 80 column
violation because it is much easier to read a dereferencing identifier
on a single line.

WARNING:TYPO_SPELLING: 'Forground' may be misspelled - perhaps 'Foreground'?
#1035: FILE: drivers/video/via/viafbdev.c:995:
+	/* Forground color or Destination color */
 	   ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1040: FILE: drivers/video/via/viafbdev.c:1000:
+
+}

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'viafb_copyarea', this function's name, in a string
#1048: FILE: drivers/video/via/viafbdev.c:1008:
+	DEBUG_MSG(KERN_INFO "viafb_copyarea!!\n");

CHECK:SPACING: No space is necessary after a cast
#1071: FILE: drivers/video/via/viafbdev.c:1031:
+		   ((u32) (info->screen_base) - (u32) FB_MM) >> 3);

CHECK:SPACING: No space is necessary after a cast
#1075: FILE: drivers/video/via/viafbdev.c:1035:
+		   ((u32) (info->screen_base) - (u32) FB_MM) >> 3);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'info->var.bits_per_pixel'
#1084: FILE: drivers/video/via/viafbdev.c:1044:
+								info->var.
+								bits_per_pixel

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1097: FILE: drivers/video/via/viafbdev.c:1057:
+
+}

CHECK:SPACING: No space is necessary after a cast
#1108: FILE: drivers/video/via/viafbdev.c:1068:
+	udata = (u32 *) image->data;

CHECK:SPACING: No space is necessary after a cast
#1116: FILE: drivers/video/via/viafbdev.c:1076:
+		bg_col = ((u32 *) (info->pseudo_palette))[image->bg_color];

CHECK:SPACING: No space is necessary after a cast
#1117: FILE: drivers/video/via/viafbdev.c:1077:
+		fg_col = ((u32 *) (info->pseudo_palette))[image->fg_color];

CHECK:SPACING: No space is necessary after a cast
#1120: FILE: drivers/video/via/viafbdev.c:1080:
+		bg_col = ((u32 *) (info->pseudo_palette))[image->bg_color];

CHECK:SPACING: No space is necessary after a cast
#1121: FILE: drivers/video/via/viafbdev.c:1081:
+		fg_col = ((u32 *) (info->pseudo_palette))[image->fg_color];

CHECK:SPACING: No space is necessary after a cast
#1131: FILE: drivers/video/via/viafbdev.c:1091:
+		   ((u32) (info->screen_base) - (u32) FB_MM) >> 3);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'info->var.bits_per_pixel'
#1139: FILE: drivers/video/via/viafbdev.c:1099:
+								info->var.
+								bits_per_pixel

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1161: FILE: drivers/video/via/viafbdev.c:1121:
+
+}

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'info->par'
#1173: FILE: drivers/video/via/viafbdev.c:1133:
+	if ((((struct viafb_par *)(info->par))->iga_path == IGA2)
+	    && (chip_info.gfx_chip_name == UNICHROME_CLE266))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'chip_info.gfx_chip_name == UNICHROME_CLE266'
#1173: FILE: drivers/video/via/viafbdev.c:1133:
+	if ((((struct viafb_par *)(info->par))->iga_path == IGA2)
+	    && (chip_info.gfx_chip_name == UNICHROME_CLE266))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1174: FILE: drivers/video/via/viafbdev.c:1134:
+	if ((((struct viafb_par *)(info->par))->iga_path == IGA2)
+	    && (chip_info.gfx_chip_name == UNICHROME_CLE266))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'info->par'
#1178: FILE: drivers/video/via/viafbdev.c:1138:
+	if (LCD_ON || ((struct viafb_par *)(info->par))->duoview)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cursor->image.width <= 32'
#1203: FILE: drivers/video/via/viafbdev.c:1163:
+		if ((cursor->image.width <= 32)
+		    && (cursor->image.height <= 32)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cursor->image.height <= 32'
#1203: FILE: drivers/video/via/viafbdev.c:1163:
+		if ((cursor->image.width <= 32)
+		    && (cursor->image.height <= 32)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1204: FILE: drivers/video/via/viafbdev.c:1164:
+		if ((cursor->image.width <= 32)
+		    && (cursor->image.height <= 32)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1208: FILE: drivers/video/via/viafbdev.c:1168:
+		} else if ((cursor->image.width <= 64)
+			   && (cursor->image.height <= 64)) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1229: FILE: drivers/video/via/viafbdev.c:1189:
+			/*FIX ME:It seems that hardware cursor
+			   always work in true color mode */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1229: FILE: drivers/video/via/viafbdev.c:1189:
+			   always work in true color mode */

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'viafb_256_colors.red[viacursor.image.bg_color]'
#1232: FILE: drivers/video/via/viafbdev.c:1192:
+			    (viafb_256_colors.
+			     red[viacursor.image.bg_color] >> 8 << 16);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'viafb_256_colors.green'
#1235: FILE: drivers/video/via/viafbdev.c:1195:
+			    bg_col | (viafb_256_colors.
+				      green[viacursor.image.

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'viacursor.image.bg_color'
#1236: FILE: drivers/video/via/viafbdev.c:1196:
+				      green[viacursor.image.
+					    bg_color] >> 8 << 8);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'viafb_256_colors.blue[viacursor.image.bg_color]'
#1239: FILE: drivers/video/via/viafbdev.c:1199:
+			    bg_col | (viafb_256_colors.
+				      blue[viacursor.image.bg_color] >> 8);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'viafb_256_colors.red[viacursor.image.fg_color]'
#1242: FILE: drivers/video/via/viafbdev.c:1202:
+			    (viafb_256_colors.
+			     red[viacursor.image.fg_color] >> 8 << 16);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'viafb_256_colors.green'
#1245: FILE: drivers/video/via/viafbdev.c:1205:
+			    fg_col | (viafb_256_colors.
+				      green[viacursor.image.

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'viacursor.image.fg_color'
#1246: FILE: drivers/video/via/viafbdev.c:1206:
+				      green[viacursor.image.
+					    fg_color] >> 8 << 8);

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'viafb_256_colors.blue[viacursor.image.fg_color]'
#1249: FILE: drivers/video/via/viafbdev.c:1209:
+			    fg_col | (viafb_256_colors.
+				      blue[viacursor.image.fg_color] >> 8);

CHECK:SPACING: No space is necessary after a cast
#1253: FILE: drivers/video/via/viafbdev.c:1213:
+			    ((u32 *) (info->pseudo_palette))[viacursor.

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'viacursor.image.bg_color'
#1254: FILE: drivers/video/via/viafbdev.c:1214:
+			    ((u32 *) (info->pseudo_palette))[viacursor.
+							     image.bg_color];

CHECK:SPACING: No space is necessary after a cast
#1259: FILE: drivers/video/via/viafbdev.c:1219:
+			    ((u32 *) (info->pseudo_palette))[viacursor.

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'viacursor.image.fg_color'
#1260: FILE: drivers/video/via/viafbdev.c:1220:
+			    ((u32 *) (info->pseudo_palette))[viacursor.
+							     image.fg_color];

CHECK:SPACING: No space is necessary after a cast
#1267: FILE: drivers/video/via/viafbdev.c:1227:
+			    ((u32 *) (info->pseudo_palette))[viacursor.

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'viacursor.image.bg_color'
#1268: FILE: drivers/video/via/viafbdev.c:1228:
+			    ((u32 *) (info->pseudo_palette))[viacursor.
+							     image.bg_color];

CHECK:SPACING: No space is necessary after a cast
#1270: FILE: drivers/video/via/viafbdev.c:1230:
+			    ((u32 *) (info->pseudo_palette))[viacursor.

WARNING:MULTILINE_DEREFERENCE: Avoid multiple line dereference - prefer 'viacursor.image.fg_color'
#1271: FILE: drivers/video/via/viafbdev.c:1231:
+			    ((u32 *) (info->pseudo_palette))[viacursor.
+							     image.fg_color];

CHECK:SPACING: No space is necessary after a cast
#1315: FILE: drivers/video/via/viafbdev.c:1275:
+				data_bak[j] = (u32) data[i];

CHECK:SPACING: No space is necessary after a cast
#1321: FILE: drivers/video/via/viafbdev.c:1281:
+				data_bak[j] = (u32) data[i];

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'get_mode_index', this function's name, in a string
#1349: FILE: drivers/video/via/viafbdev.c:1309:
+	DEBUG_MSG(KERN_INFO "get_mode_index!\n");

CHECK:CAMELCASE: Avoid CamelCase: <DeviceStatus>
#1626: FILE: drivers/video/via/viafbdev.c:1586:
+	DeviceStatus = None_Device;

CHECK:CAMELCASE: Avoid CamelCase: <None_Device>
#1626: FILE: drivers/video/via/viafbdev.c:1586:
+	DeviceStatus = None_Device;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'device_num < MAX_ACTIVE_DEV_NUM'
#1628: FILE: drivers/video/via/viafbdev.c:1588:
+	if ((device_id & CRT_Device) && (device_num < MAX_ACTIVE_DEV_NUM)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'device_num < MAX_ACTIVE_DEV_NUM'
#1634: FILE: drivers/video/via/viafbdev.c:1594:
+	if ((device_id & DVI_Device) && (device_num < MAX_ACTIVE_DEV_NUM)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'device_num < MAX_ACTIVE_DEV_NUM'
#1640: FILE: drivers/video/via/viafbdev.c:1600:
+	if ((device_id & LCD_Device) && (device_num < MAX_ACTIVE_DEV_NUM)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'device_num < MAX_ACTIVE_DEV_NUM'
#1646: FILE: drivers/video/via/viafbdev.c:1606:
+	if ((device_id & LCD2_Device) && (device_num < MAX_ACTIVE_DEV_NUM)) {

CHECK:CAMELCASE: Avoid CamelCase: <LCD2_Device>
#1646: FILE: drivers/video/via/viafbdev.c:1606:
+	if ((device_id & LCD2_Device) && (device_num < MAX_ACTIVE_DEV_NUM)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1664: FILE: drivers/video/via/viafbdev.c:1624:
+	int device_id = None_Device;
+	if (active_dev.crt)

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1676: FILE: drivers/video/via/viafbdev.c:1636:
+			lvds_setting_info.display_method = lcd_dsp_method =

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1679: FILE: drivers/video/via/viafbdev.c:1639:
+			lvds_setting_info.display_method = lcd_dsp_method =

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1684: FILE: drivers/video/via/viafbdev.c:1644:
+			lvds_setting_info.lcd_mode = lcd_mode = LCD_SPWG;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1686: FILE: drivers/video/via/viafbdev.c:1646:
+			lvds_setting_info.lcd_mode = lcd_mode = LCD_OPENLDI;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 12)
#1713: FILE: drivers/video/via/viafbdev.c:1673:
+	if ((active_dev.samm == STATE_OFF)
[...]
+	    SAMM_ON = active_dev.samm;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'active_dev.samm == STATE_OFF'
#1713: FILE: drivers/video/via/viafbdev.c:1673:
+	if ((active_dev.samm == STATE_OFF)
+	    || (active_dev.samm == STATE_ON))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'active_dev.samm == STATE_ON'
#1713: FILE: drivers/video/via/viafbdev.c:1673:
+	if ((active_dev.samm == STATE_OFF)
+	    || (active_dev.samm == STATE_ON))

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1714: FILE: drivers/video/via/viafbdev.c:1674:
+	if ((active_dev.samm == STATE_OFF)
+	    || (active_dev.samm == STATE_ON))

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#1736: FILE: drivers/video/via/viafbdev.c:1696:
+}
+void viafb_get_video_device(u32 *video_dev_info)

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1748: FILE: drivers/video/via/viafbdev.c:1708:
+/*
+*   S.T.Chen [2006.01.17]:

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - int get_primary_device() should probably be int get_primary_device(void)
#1752: FILE: drivers/video/via/viafbdev.c:1712:
+int get_primary_device()

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1819: FILE: drivers/video/via/viafbdev.c:1779:
+	int need_set_mode = 0;
+	DEBUG_MSG(KERN_INFO "apply_device_setting\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'apply_device_setting', this function's name, in a string
#1819: FILE: drivers/video/via/viafbdev.c:1779:
+	DEBUG_MSG(KERN_INFO "apply_device_setting\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1827: FILE: drivers/video/via/viafbdev.c:1787:
+	/* Unlock LCD's operation according to LCD flag
+	   and check if the setting value is valid. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1827: FILE: drivers/video/via/viafbdev.c:1787:
+	   and check if the setting value is valid. */

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1853: FILE: drivers/video/via/viafbdev.c:1813:
+				lvds_setting_info.lcd_mode = lcd_mode =

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1856: FILE: drivers/video/via/viafbdev.c:1816:
+				lvds_setting_info.lcd_mode = lcd_mode =

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1878: FILE: drivers/video/via/viafbdev.c:1838:
+		if (setting_info.samm_status == 0
+		    || setting_info.samm_status == 1) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1903: FILE: drivers/video/via/viafbdev.c:1863:
+{
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'video_on_crt == 1'
#1913: FILE: drivers/video/via/viafbdev.c:1873:
+	if ((video_on_crt == 1) && (CRT_ON == 1))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'CRT_ON == 1'
#1913: FILE: drivers/video/via/viafbdev.c:1873:
+	if ((video_on_crt == 1) && (CRT_ON == 1))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1950: FILE: drivers/video/via/viafbdev.c:1910:
+	/* 2. Keep the order of devices, so we can set corresponding
+	   IGA path to devices in SAMM case. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1950: FILE: drivers/video/via/viafbdev.c:1910:
+	   IGA path to devices in SAMM case. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1952: FILE: drivers/video/via/viafbdev.c:1912:
+	/*    Note: The previous of active_dev is primary device,
+	   and the following is secondary device. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1952: FILE: drivers/video/via/viafbdev.c:1912:
+	   and the following is secondary device. */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2044: FILE: drivers/video/via/viafbdev.c:2004:
+}
+void parse_lcd_port(void)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'parse_lcd_port', this function's name, in a string
#2050: FILE: drivers/video/via/viafbdev.c:2010:
+	DEBUG_MSG(KERN_INFO "parse_lcd_port: lcd_port:%s,interface:%d\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'parse_dvi_port', this function's name, in a string
#2058: FILE: drivers/video/via/viafbdev.c:2018:
+	DEBUG_MSG(KERN_INFO "parse_dvi_port: dvi_port:%s,interface:%d\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#2073: FILE: drivers/video/via/viafbdev.c:2033:
+	u8 dvp0_data_dri = 0, dvp0_clk_dri = 0, dvp0 = 0;
+	dvp0_data_dri =

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2085: FILE: drivers/video/via/viafbdev.c:2045:
+}
+static int viafb_dvp0_proc_write(struct file *file,

WARNING:LINE_SPACING: Missing a blank line after declarations
#2092: FILE: drivers/video/via/viafbdev.c:2052:
+	unsigned long length, i;
+	if (count < 1)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "value"
#2101: FILE: drivers/video/via/viafbdev.c:2061:
+		if (value != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#2102: FILE: drivers/video/via/viafbdev.c:2062:
+			reg_val = simple_strtoul(value, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2126: FILE: drivers/video/via/viafbdev.c:2086:
+}
+static int viafb_dvp1_proc_read(char *buf, char **start, off_t offset,

WARNING:LINE_SPACING: Missing a blank line after declarations
#2131: FILE: drivers/video/via/viafbdev.c:2091:
+	u8 dvp1 = 0, dvp1_data_dri = 0, dvp1_clk_dri = 0;
+	dvp1 = read_reg(VIACR, CR9B) & 0x0f;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2139: FILE: drivers/video/via/viafbdev.c:2099:
+}
+static int viafb_dvp1_proc_write(struct file *file,

WARNING:LINE_SPACING: Missing a blank line after declarations
#2146: FILE: drivers/video/via/viafbdev.c:2106:
+	unsigned long length, i;
+	if (count < 1)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "value"
#2155: FILE: drivers/video/via/viafbdev.c:2115:
+		if (value != NULL) {

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#2156: FILE: drivers/video/via/viafbdev.c:2116:
+			reg_val = simple_strtoul(value, NULL, 0);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2182: FILE: drivers/video/via/viafbdev.c:2142:
+	u8 dfp_high = 0;
+	dfp_high = read_reg(VIACR, CR97) & 0x0f;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2187: FILE: drivers/video/via/viafbdev.c:2147:
+}
+static int viafb_dfph_proc_write(struct file *file,

WARNING:LINE_SPACING: Missing a blank line after declarations
#2194: FILE: drivers/video/via/viafbdev.c:2154:
+	unsigned long length;
+	if (count < 1)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#2200: FILE: drivers/video/via/viafbdev.c:2160:
+	reg_val = simple_strtoul(&buf[0], NULL, 0);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2204: FILE: drivers/video/via/viafbdev.c:2164:
+}
+static int viafb_dfpl_proc_read(char *buf, char **start, off_t offset,

WARNING:LINE_SPACING: Missing a blank line after declarations
#2209: FILE: drivers/video/via/viafbdev.c:2169:
+	u8 dfp_low = 0;
+	dfp_low = read_reg(VIACR, CR99) & 0x0f;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2214: FILE: drivers/video/via/viafbdev.c:2174:
+}
+static int viafb_dfpl_proc_write(struct file *file,

WARNING:LINE_SPACING: Missing a blank line after declarations
#2221: FILE: drivers/video/via/viafbdev.c:2181:
+	unsigned long length;
+	if (count < 1)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#2227: FILE: drivers/video/via/viafbdev.c:2187:
+	reg_val = simple_strtoul(&buf[0], NULL, 0);

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2231: FILE: drivers/video/via/viafbdev.c:2191:
+}
+static int viafb_vt1636_proc_read(char *buf, char **start, off_t offset,

WARNING:LINE_SPACING: Missing a blank line after declarations
#2236: FILE: drivers/video/via/viafbdev.c:2196:
+	u8 vt1636_08 = 0, vt1636_09 = 0;
+	switch (chip_info.lvds_chip_info.lvds_chip_name) {

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2265: FILE: drivers/video/via/viafbdev.c:2225:
+}
+static int viafb_vt1636_proc_write(struct file *file,

WARNING:LINE_SPACING: Missing a blank line after declarations
#2272: FILE: drivers/video/via/viafbdev.c:2232:
+	unsigned long length, i;
+	if (count < 1)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "value"
#2283: FILE: drivers/video/via/viafbdev.c:2243:
+			if (value != NULL) {

CHECK:CAMELCASE: Avoid CamelCase: <Data>
#2284: FILE: drivers/video/via/viafbdev.c:2244:
+				reg_val.Data = simple_strtoul(value, NULL, 0);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#2284: FILE: drivers/video/via/viafbdev.c:2244:
+				reg_val.Data = simple_strtoul(value, NULL, 0);

CHECK:CAMELCASE: Avoid CamelCase: <Index>
#2287: FILE: drivers/video/via/viafbdev.c:2247:
+					reg_val.Index = 0x08;

CHECK:CAMELCASE: Avoid CamelCase: <Mask>
#2288: FILE: drivers/video/via/viafbdev.c:2248:
+					reg_val.Mask = 0x0f;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "value"
#2317: FILE: drivers/video/via/viafbdev.c:2277:
+			if (value != NULL) {

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#2318: FILE: drivers/video/via/viafbdev.c:2278:
+				reg_val.Data = simple_strtoul(value, NULL, 0);

WARNING:LINE_SPACING: Missing a blank line after declarations
#2353: FILE: drivers/video/via/viafbdev.c:2313:
+	struct proc_dir_entry *entry;
+	viafb_entry = proc_mkdir("viafb", NULL);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#2379: FILE: drivers/video/via/viafbdev.c:2339:
+		if (VT1636_LVDS == chip_info.lvds_chip_info.lvds_chip_name

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2380: FILE: drivers/video/via/viafbdev.c:2340:
+		if (VT1636_LVDS == chip_info.lvds_chip_info.lvds_chip_name
+		    || VT1636_LVDS ==

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#2390: FILE: drivers/video/via/viafbdev.c:2350:
+
+	}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2392: FILE: drivers/video/via/viafbdev.c:2352:
+}
+static void viafb_remove_proc(struct proc_dir_entry *viafb_entry)

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#2403: FILE: drivers/video/via/viafbdev.c:2363:
+static int __devinit via_pci_probe(void)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#2405: FILE: drivers/video/via/viafbdev.c:2365:
+{
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2433: FILE: drivers/video/via/viafbdev.c:2393:
+		printk(KERN_INFO "ioremap failed\n");

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'second_size < 8'
#2453: FILE: drivers/video/via/viafbdev.c:2413:
+	if (second_size && (second_size < 8)) {

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#2463: FILE: drivers/video/via/viafbdev.c:2423:
+	default_xres = simple_strtoul(tmpc, NULL, 0);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#2464: FILE: drivers/video/via/viafbdev.c:2424:
+	default_yres = simple_strtoul(tmpm, NULL, 0);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#2473: FILE: drivers/video/via/viafbdev.c:2433:
+			second_xres = simple_strtoul(tmpc_sec, NULL, 0);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#2474: FILE: drivers/video/via/viafbdev.c:2434:
+			second_yres = simple_strtoul(tmpm_sec, NULL, 0);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#2479: FILE: drivers/video/via/viafbdev.c:2439:
+		if (0 == second_virtual_xres) {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#2489: FILE: drivers/video/via/viafbdev.c:2449:
+		if (0 == second_virtual_yres)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'primary_dev == LCD_Device'
#2594: FILE: drivers/video/via/viafbdev.c:2554:
+	if (dual_fb && (primary_dev == LCD_Device)
+	    && (chip_info.gfx_chip_name == UNICHROME_CLE266)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'chip_info.gfx_chip_name == UNICHROME_CLE266'
#2594: FILE: drivers/video/via/viafbdev.c:2554:
+	if (dual_fb && (primary_dev == LCD_Device)
+	    && (chip_info.gfx_chip_name == UNICHROME_CLE266)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2595: FILE: drivers/video/via/viafbdev.c:2555:
+	if (dual_fb && (primary_dev == LCD_Device)
+	    && (chip_info.gfx_chip_name == UNICHROME_CLE266)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'primary_dev != LCD_Device'
#2602: FILE: drivers/video/via/viafbdev.c:2562:
+	if (dual_fb && ((primary_dev != LCD_Device)
+			|| (chip_info.gfx_chip_name != UNICHROME_CLE266))) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'chip_info.gfx_chip_name != UNICHROME_CLE266'
#2602: FILE: drivers/video/via/viafbdev.c:2562:
+	if (dual_fb && ((primary_dev != LCD_Device)
+			|| (chip_info.gfx_chip_name != UNICHROME_CLE266))) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#2603: FILE: drivers/video/via/viafbdev.c:2563:
+	if (dual_fb && ((primary_dev != LCD_Device)
+			|| (chip_info.gfx_chip_name != UNICHROME_CLE266))) {

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#2616: FILE: drivers/video/via/viafbdev.c:2576:
+static void __devexit via_pci_remove(void)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'via_pci_remove', this function's name, in a string
#2618: FILE: drivers/video/via/viafbdev.c:2578:
+	DEBUG_MSG(KERN_INFO "via_pci_remove!\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'viafb_init', this function's name, in a string
#2629: FILE: drivers/video/via/viafbdev.c:2589:
+	DEBUG_MSG(KERN_INFO "viafb_init!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2630: FILE: drivers/video/via/viafbdev.c:2590:
+	printk(KERN_INFO

WARNING:TYPO_SPELLING: 'Intergration' may be misspelled - perhaps 'Integration'?
#2631: FILE: drivers/video/via/viafbdev.c:2591:
+       "VIA Graphics Intergration Chipset framebuffer %d.%d initializing\n",
                      ^^^^^^^^^^^^

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2631: FILE: drivers/video/via/viafbdev.c:2591:
+       "VIA Graphics Intergration Chipset framebuffer %d.%d initializing\n",$

WARNING:LINE_SPACING: Missing a blank line after declarations
#2635: FILE: drivers/video/via/viafbdev.c:2595:
+	char *option = NULL;
+	if (fb_get_options("viafb", &option))

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'viafb_exit', this function's name, in a string
#2644: FILE: drivers/video/via/viafbdev.c:2604:
+	DEBUG_MSG(KERN_INFO "viafb_exit!\n");

WARNING:LINE_SPACING: Missing a blank line after declarations
#2655: FILE: drivers/video/via/viafbdev.c:2615:
+	char *this_opt;
+	DEBUG_MSG(KERN_INFO "viafb_setup!\n");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'viafb_setup', this function's name, in a string
#2655: FILE: drivers/video/via/viafbdev.c:2615:
+	DEBUG_MSG(KERN_INFO "viafb_setup!\n");

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#2671: FILE: drivers/video/via/viafbdev.c:2631:
+			via_fb_bpp = simple_strtoul(this_opt + 4, NULL, 0);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#2673: FILE: drivers/video/via/viafbdev.c:2633:
+			via_fb_bpp1 = simple_strtoul(this_opt + 5, NULL, 0);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#2675: FILE: drivers/video/via/viafbdev.c:2635:
+			refresh = simple_strtoul(this_opt + 8, NULL, 0);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#2677: FILE: drivers/video/via/viafbdev.c:2637:
+			refresh1 = simple_strtoul(this_opt + 9, NULL, 0);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#2679: FILE: drivers/video/via/viafbdev.c:2639:
+			lcd_dsp_method = simple_strtoul(this_opt + 15, NULL, 0);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#2681: FILE: drivers/video/via/viafbdev.c:2641:
+			lcd_panel_id = simple_strtoul(this_opt + 13, NULL, 0);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#2683: FILE: drivers/video/via/viafbdev.c:2643:
+			via_fb_accel = simple_strtoul(this_opt + 6, NULL, 0);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#2685: FILE: drivers/video/via/viafbdev.c:2645:
+			SAMM_ON = simple_strtoul(this_opt + 8, NULL, 0);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#2691: FILE: drivers/video/via/viafbdev.c:2651:
+			    simple_strtoul(this_opt + 24, NULL, 0);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#2693: FILE: drivers/video/via/viafbdev.c:2653:
+			second_size = simple_strtoul(this_opt + 12, NULL, 0);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#2696: FILE: drivers/video/via/viafbdev.c:2656:
+			    simple_strtoul(this_opt + 9, NULL, 0);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#2699: FILE: drivers/video/via/viafbdev.c:2659:
+			    simple_strtoul(this_opt + 12, NULL, 0);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#2701: FILE: drivers/video/via/viafbdev.c:2661:
+			via_bus_width = simple_strtoul(this_opt + 9, NULL, 0);

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#2703: FILE: drivers/video/via/viafbdev.c:2663:
+			lcd_mode = simple_strtoul(this_opt + 9, NULL, 0);

WARNING:CONST_STRUCT: struct fb_ops should normally be const
#2715: FILE: drivers/video/via/viafbdev.c:2675:
+static struct fb_ops viafb_ops = {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2782: FILE: drivers/video/via/viafbdev.c:2742:
+MODULE_PARM_DESC(dual_fb,
+	"Turn on/off flag of dual framebuffer devices.(Default = OFF)");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2786: FILE: drivers/video/via/viafbdev.c:2746:
+MODULE_PARM_DESC(platform_epia_dvi,
+	"Turn on/off flag of DVI devices on EPIA board.(Default = OFF)");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2813: FILE: drivers/video/via/viafbdev.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2829: FILE: drivers/video/via/viafbdev.h:17:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2831: FILE: drivers/video/via/viafbdev.h:19:
+ * 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#2890: FILE: drivers/video/via/viafbdev.h:78:
+};
+extern unsigned int second_virtual_yres;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2903: FILE: drivers/video/via/viafbdev.h:91:
+extern int soft_cursor(struct fb_info *info, struct fb_cursor *cursor);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:CAMELCASE: Avoid CamelCase: <ViaSetting>
#2908: FILE: drivers/video/via/viafbdev.h:96:
+int apply_device_setting(struct viafb_ioctl_setting ViaSetting,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000284009.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 123 warnings, 111 checks, 2882 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000284009.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
