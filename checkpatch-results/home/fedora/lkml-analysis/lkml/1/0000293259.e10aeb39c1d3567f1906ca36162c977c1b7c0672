WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#56: FILE: drivers/base/sys.c:171:
+		printk(KERN_WARNING "sysdev: invalid class passed to "

WARNING:SPLIT_STRING: quoted string split across lines
#57: FILE: drivers/base/sys.c:172:
+		printk(KERN_WARNING "sysdev: invalid class passed to "
+			"sysdev_driver_register!\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sysdev_driver_register', this function's name, in a string
#57: FILE: drivers/base/sys.c:172:
+			"sysdev_driver_register!\n");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'drv->entry.next != drv->entry.prev'
#63: FILE: drivers/base/sys.c:178:
+	if ((drv->entry.next != drv->entry.prev) ||
+	    (drv->entry.next != NULL)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'drv->entry.next != NULL'
#63: FILE: drivers/base/sys.c:178:
+	if ((drv->entry.next != drv->entry.prev) ||
+	    (drv->entry.next != NULL)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "drv->entry.next"
#64: FILE: drivers/base/sys.c:179:
+	    (drv->entry.next != NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#65: FILE: drivers/base/sys.c:180:
+		printk(KERN_WARNING "sysdev: class %s: driver (%p) has already"

WARNING:SPLIT_STRING: quoted string split across lines
#66: FILE: drivers/base/sys.c:181:
+		printk(KERN_WARNING "sysdev: class %s: driver (%p) has already"
+			" been registered to a class, something is wrong, but "

WARNING:SPLIT_STRING: quoted string split across lines
#67: FILE: drivers/base/sys.c:182:
+			" been registered to a class, something is wrong, but "
+			"will forge on!\n", cls->name, drv);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000293259.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 6 warnings, 3 checks, 22 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000293259.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
