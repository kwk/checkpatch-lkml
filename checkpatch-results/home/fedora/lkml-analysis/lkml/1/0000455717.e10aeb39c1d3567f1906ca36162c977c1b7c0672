WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
This hashtable is dynamically allocated on the first _PRIVATE futex syscall.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#90: FILE: kernel/futex.c:150:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#106: FILE: kernel/futex.c:166:
+ * PTHREAD_PROCESS_PRIVATE futexes may be hashed into this table too if the $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#115: FILE: kernel/futex.c:175:
 
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#146: FILE: kernel/futex.c:206:
+		if (mm->mm_priv_futex_queues) {
[...]
+		else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#152: FILE: kernel/futex.c:212:
+		}
+		else

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#155: FILE: kernel/futex.c:215:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#155: FILE: kernel/futex.c:215:
+	else {

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#198: FILE: kernel/futex.c:256:
+	if (key->both.offset & (OFF_INODE|OFF_MMSHARED))
 	                                 ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#219: FILE: include/linux/futex.h:118:
+extern void __mm_free_futex(struct mm_struct *mm);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#227: FILE: include/linux/futex.h:126:
 }
+static inline void __mm_free_futex(struct mm_struct *mm)

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#248: FILE: include/linux/sched.h:1379:
+static inline void mm_free_futex(struct mm_struct * mm)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000455717.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 1 warnings, 7 checks, 180 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000455717.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
