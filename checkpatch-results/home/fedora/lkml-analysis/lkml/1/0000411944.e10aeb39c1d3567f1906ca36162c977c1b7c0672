WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#62: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:TYPO_SPELLING: 'intialization' may be misspelled - perhaps 'initialization'?
#223: FILE: Documentation/pps/pps.txt:124:
+intialization routine as follow:
 ^^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'Documentaion' may be misspelled - perhaps 'Documentation'?
#294: FILE: Documentation/pps/pps.txt:195:
+and the userland tools provided into Documentaion/pps/ directory.
                                      ^^^^^^^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#303: FILE: Documentation/pps/pps.txt:204:
+   $ ./ppstest $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'Documentaion' may be misspelled - perhaps 'Documentation'?
#310: FILE: Documentation/pps/pps.txt:211:
+(see Documentaion/pps/).
      ^^^^^^^^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#318: FILE: Documentation/pps/ppsctl.c:1:
+#include <stdio.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:CODE_INDENT: code indent should use tabs where possible
#331: FILE: Documentation/pps/ppsctl.c:14:
+        fprintf(stderr, "usage: %s <ttyS> [enable|disable]\n", name);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: Documentation/pps/ppsctl.c:14:
+        fprintf(stderr, "usage: %s <ttyS> [enable|disable]\n", name);$

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'usage', this function's name, in a string
#331: FILE: Documentation/pps/ppsctl.c:14:
+        fprintf(stderr, "usage: %s <ttyS> [enable|disable]\n", name);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

ERROR:CODE_INDENT: code indent should use tabs where possible
#344: FILE: Documentation/pps/ppsctl.c:27:
+        fd = open(argv[1], O_RDWR);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: Documentation/pps/ppsctl.c:27:
+        fd = open(argv[1], O_RDWR);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#345: FILE: Documentation/pps/ppsctl.c:28:
+        if (fd < 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: Documentation/pps/ppsctl.c:28:
+        if (fd < 0) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#346: FILE: Documentation/pps/ppsctl.c:29:
+                perror("open");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: Documentation/pps/ppsctl.c:29:
+                perror("open");$

ERROR:CODE_INDENT: code indent should use tabs where possible
#350: FILE: Documentation/pps/ppsctl.c:33:
+       ^Iret = ioctl(fd, TIOCGSERIAL, &ss);$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#350: FILE: Documentation/pps/ppsctl.c:33:
+       ^Iret = ioctl(fd, TIOCGSERIAL, &ss);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: Documentation/pps/ppsctl.c:33:
+       ^Iret = ioctl(fd, TIOCGSERIAL, &ss);$

ERROR:SPACING: space prohibited before that close parenthesis ')'
#351: FILE: Documentation/pps/ppsctl.c:34:
+	if (ret < 0 ) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#358: FILE: Documentation/pps/ppsctl.c:41:
+		printf("PPS is %sabled\n",
+			ss.flags & ASYNC_HARDPPS_CD ? "en" : "dis");

CHECK:BRACES: braces {} should be used on all arms of this statement
#362: FILE: Documentation/pps/ppsctl.c:45:
+	if (argv[2][0] == 'e' || argv[2][0] == '1')
[...]
+	else if (argv[2][0] == 'd' || argv[2][0] == '0')
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#366: FILE: Documentation/pps/ppsctl.c:49:
+	else {

ERROR:TRAILING_WHITESPACE: trailing whitespace
#369: FILE: Documentation/pps/ppsctl.c:52:
+^I} $

ERROR:CODE_INDENT: code indent should use tabs where possible
#377: FILE: Documentation/pps/ppsctl.c:60:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#377: FILE: Documentation/pps/ppsctl.c:60:
+        return 0;$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#385: FILE: Documentation/pps/ppstest.c:1:
+#include <stdio.h>

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#425: FILE: Documentation/pps/ppstest.c:41:
+	 * for a generic source) */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'infact' may be misspelled - perhaps 'in fact'?
#441: FILE: Documentation/pps/ppstest.c:57:
+	 * Note that this can be NOT enough anyway, infact you may need sending
 	                                            ^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#443: FILE: Documentation/pps/ppstest.c:59:
+	 * the PPS signal. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#475: FILE: Documentation/pps/ppstest.c:91:
+	 * propagation delay */

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#483: FILE: Documentation/pps/ppstest.c:99:
+	params.mode |= PPS_CAPTUREASSERT|PPS_OFFSETASSERT;
 	                                ^

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#503: FILE: Documentation/pps/ppstest.c:119:
+retry :
       ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#504: FILE: Documentation/pps/ppstest.c:120:
+	if (*avail_mode&PPS_CANWAIT) {
 	               ^

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#508: FILE: Documentation/pps/ppstest.c:124:
+	}
+	else {

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#508: FILE: Documentation/pps/ppstest.c:124:
+	else {

WARNING:SPLIT_STRING: quoted string split across lines
#523: FILE: Documentation/pps/ppstest.c:139:
+	printf("source %d - "
+	       "assert %ld.%09ld, sequence: %ld - "

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#524: FILE: Documentation/pps/ppstest.c:140:
+	       "assert %ld.%09ld, sequence: %ld - "
+	       "clear  %ld.%09ld, sequence: %ld\n",

ERROR:CODE_INDENT: code indent should use tabs where possible
#525: FILE: Documentation/pps/ppstest.c:141:
+^I        i,$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#552: FILE: Documentation/pps/ppstest.c:168:
+	}
+	else {

CHECK:BRACES: Unbalanced braces around else statement
#552: FILE: Documentation/pps/ppstest.c:168:
+	else {

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#554: FILE: Documentation/pps/ppstest.c:170:
+			ret = sscanf(argv[i], "%d", &num);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#559: FILE: Documentation/pps/ppstest.c:175:
+^I$

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#560: FILE: Documentation/pps/ppstest.c:176:
+			ret = find_source(try_link, link, &handle[i-1], &avail_mode[i-1]);
 			                                           ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#560: FILE: Documentation/pps/ppstest.c:176:
+			ret = find_source(try_link, link, &handle[i-1], &avail_mode[i-1]);
 			                                                             ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#565: FILE: Documentation/pps/ppstest.c:181:
+		num = i-1;
 		       ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#590: FILE: Documentation/pps/timepps.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#606: FILE: Documentation/pps/timepps.h:17:
+ *   along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#607: FILE: Documentation/pps/timepps.h:18:
+ *   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#620: FILE: Documentation/pps/timepps.h:31:
+typedef int pps_handle_t;		/* represents a PPS source */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#621: FILE: Documentation/pps/timepps.h:32:
+typedef unsigned long pps_seq_t;	/* sequence number */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#622: FILE: Documentation/pps/timepps.h:33:
+typedef struct ntp_fp ntp_fp_t;		/* NTP-compatible time stamp */

WARNING:NEW_TYPEDEFS: do not add new typedefs
#623: FILE: Documentation/pps/timepps.h:34:
+typedef union pps_timeu pps_timeu_t;	/* generic data type to represent time stamps */

ERROR:TRAILING_WHITESPACE: trailing whitespace
#624: FILE: Documentation/pps/timepps.h:35:
+typedef struct pps_info pps_info_t;^I$

WARNING:NEW_TYPEDEFS: do not add new typedefs
#624: FILE: Documentation/pps/timepps.h:35:
+typedef struct pps_info pps_info_t;	

WARNING:NEW_TYPEDEFS: do not add new typedefs
#625: FILE: Documentation/pps/timepps.h:36:
+typedef struct pps_params pps_params_t;

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#646: FILE: Documentation/pps/timepps.h:57:
+#define pps_min(a, b)		(a) < (b) ? a : b

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'a' - possible side-effects?
#646: FILE: Documentation/pps/timepps.h:57:
+#define pps_min(a, b)		(a) < (b) ? a : b

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'b' - possible side-effects?
#646: FILE: Documentation/pps/timepps.h:57:
+#define pps_min(a, b)		(a) < (b) ? a : b

WARNING:RETURN_VOID: void function return statements are not generally useful
#679: FILE: Documentation/pps/timepps.h:90:
+	return;
+}

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#704: FILE: Documentation/pps/timepps.h:115:
+	 * a PPS handle so we return the same value. */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#718: FILE: Documentation/pps/timepps.h:129:
+int time_pps_getparams(pps_handle_t handle,
+				pps_params_t *ppsparams)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#724: FILE: Documentation/pps/timepps.h:135:
+int time_pps_setparams(pps_handle_t handle,
+				const pps_params_t *ppsparams)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#736: FILE: Documentation/pps/timepps.h:147:
+int time_pps_fetch(pps_handle_t handle, const int tsformat,
+				pps_info_t *ppsinfobuf,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#744: FILE: Documentation/pps/timepps.h:155:
+int time_pps_kcbind(pps_handle_t handle, const int kernel_consumer,
+				const int edge, const int tsformat)

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#761: FILE: MAINTAINERS:2908:
+P:	Rodolfo Giometti
+M:	giometti@enneenne.com

WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'L:' before 'W:'
#763: FILE: MAINTAINERS:2910:
+W:	http://wiki.enneenne.com/index.php/LinuxPPS_support
+L:	linuxpps@ml.enneenne.com

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#826: FILE: drivers/char/lp.c:760:
+	parport_write_control(port,
+		parport_read_control(port) | PARPORT_CONTROL_SELECT);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#831: FILE: drivers/char/lp.c:765:
+^I^I^Iparport_read_control(port) & ~PARPORT_CONTROL_SELECT); $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#831: FILE: drivers/char/lp.c:765:
+		parport_write_control(port,
+			parport_read_control(port) & ~PARPORT_CONTROL_SELECT); 

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#850: FILE: drivers/char/lp.c:848:
+		port->pps_info.mode = PPS_CAPTUREASSERT | PPS_OFFSETASSERT | \

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around port->pps_info
#856: FILE: drivers/char/lp.c:854:
+		port->pps_source = pps_register_source(&(port->pps_info),

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#857: FILE: drivers/char/lp.c:855:
+		port->pps_source = pps_register_source(&(port->pps_info),
+				PPS_CAPTUREASSERT | PPS_OFFSETASSERT,

ERROR:TRAILING_WHITESPACE: trailing whitespace
#859: FILE: drivers/char/lp.c:857:
+^I^Iif (port->pps_source < 0) $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#861: FILE: drivers/char/lp.c:859:
+^I^I^I^I^Iport->pps_info.path);^I$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#861: FILE: drivers/char/lp.c:859:
+			pps_err("cannot register PPS source \"%s\"",
+					port->pps_info.path);	

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#864: FILE: drivers/char/lp.c:862:
+			pps_info("PPS source #%d \"%s\" added to the system",
+					port->pps_source, port->pps_info.path);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around port->pps_info
#882: FILE: drivers/char/lp.c:916:
+		pps_unregister_source(&(port->pps_info));

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#902: FILE: drivers/pps/Kconfig:7:
+config PPS
+	bool "PPS support"
+	depends on EXPERIMENTAL
+	---help---
+	  PPS (Pulse Per Second) is a special pulse provided by some GPS
+	  antennae. Userland can use it to get an high time reference.
+
+	  Some antennae's PPS signals are connected with the CD (Carrier
+	  Detect) pin of the serial line they use to communicate with the
+	  host. In this case use the SERIAL_LINE client support.
+
+	  Some antennae's PPS signals are connected with some special host
+	  inputs so you have to enable the corresponding client support.
+
+	  This PPS support can also be built as a module.  If so, the module
+	  will be called pps-core.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#919: FILE: drivers/pps/Kconfig:24:
+config PPS_DEBUG
+	bool "PPS debugging messages"
+	depends on PPS 
+	help
+	  Say Y here if you want the PPS support to produce a bunch of debug
+	  messages to the system log.  Select this if you are having a
+	  problem with PPS support and want to see more of what is going on.
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#921: FILE: drivers/pps/Kconfig:26:
+^Idepends on PPS $

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#966: FILE: drivers/pps/clients/Kconfig:18:
+config PPS_CLIENT_UART
+	bool "UART serial support"
+	help
+	  If you say yes here you get support for a PPS source connected
+	  with the CD (Carrier Detect) pin of your serial port.
+

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#972: FILE: drivers/pps/clients/Kconfig:24:
+config PPS_CLIENT_LP
+	bool "Parallel printer support"
+	help
+	  If you say yes here you get support for a PPS source connected
+	  with the interrupt pin of your parallel port.
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#997: FILE: drivers/pps/clients/ktimer.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1014: FILE: drivers/pps/clients/ktimer.c:18:
+ *   along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1015: FILE: drivers/pps/clients/ktimer.c:19:
+ *   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1018: FILE: drivers/pps/clients/ktimer.c:22:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1054: FILE: drivers/pps/clients/ktimer.c:58:
+	pps_info("echo %s %s for source %d",
+		event & PPS_CAPTUREASSERT ? "assert" : "",

ERROR:SPACING: space prohibited before that ':' (ctx:WxW)
#1064: FILE: drivers/pps/clients/ktimer.c:68:
+	name		: "ktimer",
 	    		^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1066: FILE: drivers/pps/clients/ktimer.c:70:
+	mode		: PPS_CAPTUREASSERT|PPS_OFFSETASSERT|PPS_ECHOASSERT| \
 	    		                   ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1066: FILE: drivers/pps/clients/ktimer.c:70:
+	mode		: PPS_CAPTUREASSERT|PPS_OFFSETASSERT|PPS_ECHOASSERT| \
 	    		                                    ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxE)
#1066: FILE: drivers/pps/clients/ktimer.c:70:
+	mode		: PPS_CAPTUREASSERT|PPS_OFFSETASSERT|PPS_ECHOASSERT| \
 	    		                                                   ^

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#1066: FILE: drivers/pps/clients/ktimer.c:70:
+	mode		: PPS_CAPTUREASSERT|PPS_OFFSETASSERT|PPS_ECHOASSERT| \

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1067: FILE: drivers/pps/clients/ktimer.c:71:
+			  PPS_CANWAIT|PPS_TSFMT_TSPEC,
 			             ^

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1068: FILE: drivers/pps/clients/ktimer.c:72:
+^Iecho ^I^I: pps_ktimer_echo,$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1088: FILE: drivers/pps/clients/ktimer.c:92:
+	ret = pps_register_source(&pps_ktimer_info,
+				PPS_CAPTUREASSERT|PPS_OFFSETASSERT,

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1088: FILE: drivers/pps/clients/ktimer.c:92:
+				PPS_CAPTUREASSERT|PPS_OFFSETASSERT,
 				                 ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1116: FILE: drivers/pps/kapi.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1133: FILE: drivers/pps/kapi.c:18:
+ *   along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1134: FILE: drivers/pps/kapi.c:19:
+ *   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1137: FILE: drivers/pps/kapi.c:22:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1145: FILE: drivers/pps/kapi.c:30:
+/* $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1167: FILE: drivers/pps/kapi.c:52:
+static int __pps_register_source(struct pps_source_info_s *info,
+				int default_params, int try_id)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1192: FILE: drivers/pps/kapi.c:77:
+	if ((info->mode & (PPS_ECHOASSERT|PPS_ECHOCLEAR)) != 0 &&
 	                                 ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1193: FILE: drivers/pps/kapi.c:78:
+	if ((info->mode & (PPS_ECHOASSERT|PPS_ECHOCLEAR)) != 0 &&
+			info->echo == NULL) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info->echo"
#1193: FILE: drivers/pps/kapi.c:78:
+			info->echo == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1197: FILE: drivers/pps/kapi.c:82:
+	if ((info->mode & (PPS_TSFMT_TSPEC|PPS_TSFMT_NTPFP)) == 0) {
 	                                  ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1204: FILE: drivers/pps/kapi.c:89:
+	 * Note that we should reset all fields BUT "info" one! */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around pps_source[i].params
#1205: FILE: drivers/pps/kapi.c:90:
+	memset(&(pps_source[i].params), 0, sizeof(struct pps_params));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1243: FILE: drivers/pps/kapi.c:128:
+{  $

WARNING:TYPO_SPELLING: 'unknow' may be misspelled - perhaps 'unknown'?
#1251: FILE: drivers/pps/kapi.c:136:
+		pps_err("warning! Try to unregister an unknow PPS source");
 		                                       ^^^^^^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1256: FILE: drivers/pps/kapi.c:141:
+^Ipps_source[i].info = &dummy_info; $

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1257: FILE: drivers/pps/kapi.c:142:
+} $

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1261: FILE: drivers/pps/kapi.c:146:
+{
+

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1278: FILE: drivers/pps/kapi.c:163:
+	if ((event & (PPS_CAPTUREASSERT|PPS_CAPTURECLEAR)) == 0 ) {
 	                               ^

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1278: FILE: drivers/pps/kapi.c:163:
+	if ((event & (PPS_CAPTUREASSERT|PPS_CAPTURECLEAR)) == 0 ) {

WARNING:TYPO_SPELLING: 'unknow' may be misspelled - perhaps 'unknown'?
#1279: FILE: drivers/pps/kapi.c:164:
+		pps_err("unknow event (%x) for source %d", event, source);
 		         ^^^^^^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1284: FILE: drivers/pps/kapi.c:169:
+	if ((pps_source[source].params.mode & (PPS_ECHOASSERT|PPS_ECHOCLEAR)) != 0)
 	                                                     ^

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1291: FILE: drivers/pps/kapi.c:176:
+		if (pps_source[source].params.mode&PPS_OFFSETASSERT)
 		                                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1293: FILE: drivers/pps/kapi.c:178:
+			pps_add_offset(&ts,
+				&pps_source[source].params.assert_off_tu.tspec);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1298: FILE: drivers/pps/kapi.c:183:
+^I^Ipps_dbg("capture assert seq #%lu for source %d", $

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1303: FILE: drivers/pps/kapi.c:188:
+		if (pps_source[source].params.mode&PPS_OFFSETCLEAR)
 		                                  ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1305: FILE: drivers/pps/kapi.c:190:
+			pps_add_offset(&ts,
+				&pps_source[source].params.clear_off_tu.tspec);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1310: FILE: drivers/pps/kapi.c:195:
+^I^Ipps_dbg("capture clear seq #%lu for source %d", $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1324: FILE: drivers/pps/pps.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1341: FILE: drivers/pps/pps.c:18:
+ *   along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1342: FILE: drivers/pps/pps.c:19:
+ *   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1345: FILE: drivers/pps/pps.c:22:
+
+

WARNING:INCLUDE_LINUX: Use #include <linux/uaccess.h> instead of <asm/uaccess.h>
#1354: FILE: drivers/pps/pps.c:31:
+#include <asm/uaccess.h>

CHECK:UNCOMMENTED_DEFINITION: DEFINE_MUTEX definition without comment
#1361: FILE: drivers/pps/pps.c:38:
+DEFINE_MUTEX(pps_mutex);

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1365: FILE: drivers/pps/pps.c:42:
+struct pps_source_info_s dummy_info;	/* Dummy PPS info for unallocated
+					   PPS sources */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1365: FILE: drivers/pps/pps.c:42:
+					   PPS sources */

ERROR:CODE_INDENT: code indent should use tabs where possible
#1404: FILE: drivers/pps/pps.c:81:
+^I^I^I     ^IPPS_MAX_NAME_LEN) == 0 ||$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1404: FILE: drivers/pps/pps.c:81:
+^I^I^I     ^IPPS_MAX_NAME_LEN) == 0 ||$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1406: FILE: drivers/pps/pps.c:83:
+^I^I^I     ^IPPS_MAX_NAME_LEN) == 0))$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1406: FILE: drivers/pps/pps.c:83:
+^I^I^I     ^IPPS_MAX_NAME_LEN) == 0))$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1406: FILE: drivers/pps/pps.c:83:
+		     strncmp(pps_source[i].info->name, path,
+			     	PPS_MAX_NAME_LEN) == 0))

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1424: FILE: drivers/pps/pps.c:101:
+	pps_dbg("%s: cmd %d", __FUNCTION__, cmd);

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#1440: FILE: drivers/pps/pps.c:117:
+	case PPS_CMD_FIND_SRC :
 	                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1442: FILE: drivers/pps/pps.c:119:
+		ret = copy_from_user(&data, arg,
+					sizeof(struct pps_source_data_s));

ERROR:CODE_INDENT: code indent should use tabs where possible
#1455: FILE: drivers/pps/pps.c:132:
+^I ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1455: FILE: drivers/pps/pps.c:132:
+^I ^I}$

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#1459: FILE: drivers/pps/pps.c:136:
+	case PPS_CMD_FIND_PATH :
 	                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1461: FILE: drivers/pps/pps.c:138:
+		ret = copy_from_user(&data, arg,
+					sizeof(struct pps_source_data_s));

ERROR:CODE_INDENT: code indent should use tabs where possible
#1474: FILE: drivers/pps/pps.c:151:
+^I ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1474: FILE: drivers/pps/pps.c:151:
+^I ^I}$

ERROR:SPACING: space prohibited before that ':' (ctx:WxE)
#1478: FILE: drivers/pps/pps.c:155:
+	default :
 	        ^

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sys_time_pps_cmd', this function's name, in a string
#1479: FILE: drivers/pps/pps.c:156:
+		pps_err("invalid sys_time_pps_cmd %d", cmd);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1486: FILE: drivers/pps/pps.c:163:
+	strncpy(data.name, pps_source[data.source].info->name,
+				PPS_MAX_NAME_LEN);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1488: FILE: drivers/pps/pps.c:165:
+	strncpy(data.path, pps_source[data.source].info->path,
+				PPS_MAX_NAME_LEN);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1501: FILE: drivers/pps/pps.c:178:
+asmlinkage long sys_time_pps_getparams(int source,
+					struct pps_params __user *params)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1505: FILE: drivers/pps/pps.c:182:
+	pps_dbg("%s: source %d", __FUNCTION__, source);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1524: FILE: drivers/pps/pps.c:201:
+	ret = copy_to_user(params, &pps_source[source].params,
+						sizeof(struct pps_params));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1535: FILE: drivers/pps/pps.c:212:
+asmlinkage long sys_time_pps_setparams(int source,
+					const struct pps_params __user *params)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1539: FILE: drivers/pps/pps.c:216:
+	pps_dbg("%s: source %d", __FUNCTION__, source);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1553: FILE: drivers/pps/pps.c:230:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1553: FILE: drivers/pps/pps.c:230:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1553: FILE: drivers/pps/pps.c:230:
+ ^I}$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1570: FILE: drivers/pps/pps.c:247:
+	ret = copy_from_user(&pps_source[source].params, params,
+						sizeof(struct pps_params));

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1596: FILE: drivers/pps/pps.c:273:
+	pps_dbg("%s: source %d", __FUNCTION__, source);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1622: FILE: drivers/pps/pps.c:299:
+^I^I^I^I^Istruct pps_info __user *info, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1622: FILE: drivers/pps/pps.c:299:
+static long __sys_time_pps_fetch(int source, const int tsformat,
+					struct pps_info __user *info, 

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#1629: FILE: drivers/pps/pps.c:306:
+	pps_dbg("%s: source %d", __FUNCTION__, source);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1635: FILE: drivers/pps/pps.c:312:
+ ^I}$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1635: FILE: drivers/pps/pps.c:312:
+ ^I}$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1635: FILE: drivers/pps/pps.c:312:
+ ^I}$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1652: FILE: drivers/pps/pps.c:329:
+ ^I/* Manage the timeout */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1652: FILE: drivers/pps/pps.c:329:
+ ^I/* Manage the timeout */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1652: FILE: drivers/pps/pps.c:329:
+ ^I/* Manage the timeout */$

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1659: FILE: drivers/pps/pps.c:336:
+			ret = wait_event_interruptible_timeout(

ERROR:CODE_INDENT: code indent should use tabs where possible
#1662: FILE: drivers/pps/pps.c:339:
+  ^I^I^Iif (ret == 0) {$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1662: FILE: drivers/pps/pps.c:339:
+  ^I^I^Iif (ret == 0) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1662: FILE: drivers/pps/pps.c:339:
+  ^I^I^Iif (ret == 0) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1668: FILE: drivers/pps/pps.c:345:
+ ^I} else$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1668: FILE: drivers/pps/pps.c:345:
+ ^I} else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1668: FILE: drivers/pps/pps.c:345:
+ ^I} else$

CHECK:BRACES: Unbalanced braces around else statement
#1668: FILE: drivers/pps/pps.c:345:
+ 	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1670: FILE: drivers/pps/pps.c:347:
+		ret = wait_event_interruptible(pps_source[source].queue,
+				pps_source[source].go);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1696: FILE: drivers/pps/pps.c:373:
+^I^I^I^I^Istruct pps_info __user *info, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1696: FILE: drivers/pps/pps.c:373:
+asmlinkage long sys_time_pps_fetch(int source, const int tsformat,
+					struct pps_info __user *info, 

CHECK:BRACES: braces {} should be used on all arms of this statement
#1702: FILE: drivers/pps/pps.c:379:
+	if (timeout) {
[...]
+	else
[...]

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1707: FILE: drivers/pps/pps.c:384:
+	}
+	else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1708: FILE: drivers/pps/pps.c:385:
+^I^Ito.tv_sec = -1;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1715: FILE: drivers/pps/pps.c:392:
+^I^I^I^Istruct pps_info __user *info, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1715: FILE: drivers/pps/pps.c:392:
+asmlinkage long compat_sys_time_pps_fetch(int source, const int tsformat,
+				struct pps_info __user *info, 

CHECK:BRACES: braces {} should be used on all arms of this statement
#1721: FILE: drivers/pps/pps.c:398:
+	if (timeout) {
[...]
+	else
[...]

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#1726: FILE: drivers/pps/pps.c:403:
+	}
+	else

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1727: FILE: drivers/pps/pps.c:404:
+^I^Ito.tv_sec = -1;^I$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#1728: FILE: drivers/pps/pps.c:405:
+^I$

WARNING:SPLIT_STRING: quoted string split across lines
#1764: FILE: drivers/pps/pps.c:441:
+	pps_info("Software ver. %s - Copyright 2005-2007 Rodolfo Giometti "
+		"<giometti@linux.it>", PPS_VERSION);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1781: FILE: drivers/pps/sysfs.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1798: FILE: drivers/pps/sysfs.c:18:
+ *   along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1799: FILE: drivers/pps/sysfs.c:19:
+ *   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1802: FILE: drivers/pps/sysfs.c:22:
+
+

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1869: FILE: drivers/pps/sysfs.c:89:
+^I^I.mode = _mode, ^I^I^I^I^I^I\$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info"
#1908: FILE: drivers/pps/sysfs.c:128:
+	if (info == NULL)

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1912: FILE: drivers/pps/sysfs.c:132:
+	if (info->mode&PPS_CAPTUREASSERT)
 	              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1914: FILE: drivers/pps/sysfs.c:134:
+		class_device_remove_file(&info->class_dev,
+					&pps_class_device_attributes[0]);

CHECK:SPACING: spaces preferred around that '&' (ctx:VxV)
#1916: FILE: drivers/pps/sysfs.c:136:
+	if (info->mode&PPS_CAPTURECLEAR)
 	              ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1918: FILE: drivers/pps/sysfs.c:138:
+		class_device_remove_file(&info->class_dev,
+					&pps_class_device_attributes[1]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1922: FILE: drivers/pps/sysfs.c:142:
+		class_device_remove_file(&info->class_dev,
+					&pps_class_device_attributes[i]);

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!info"
#1934: FILE: drivers/pps/sysfs.c:154:
+	if (info == NULL || id >= PPS_MAX_SOURCES)

WARNING:STRLCPY: Prefer strscpy over strlcpy - see: https://lore.kernel.org/r/CAHk-=wgfRnXz0W3D37d01q3JFkr_i_uTL=V6A6G1oUZcprmknw@mail.gmail.com/
#1943: FILE: drivers/pps/sysfs.c:163:
+	strlcpy(info->class_dev.class_id, buf, KOBJ_NAME_LEN);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1956: FILE: drivers/pps/sysfs.c:176:
+		ret = class_device_create_file(&info->class_dev,
+					&pps_class_device_attributes[0]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1963: FILE: drivers/pps/sysfs.c:183:
+		ret = class_device_create_file(&info->class_dev,
+					&pps_class_device_attributes[1]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1971: FILE: drivers/pps/sysfs.c:191:
+		ret = class_device_create_file(&info->class_dev,
+					&pps_class_device_attributes[i]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1981: FILE: drivers/pps/sysfs.c:201:
+		class_device_remove_file(&info->class_dev,
+					&pps_class_device_attributes[i]);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2038: FILE: drivers/serial/serial_core.c:646:
+	snprintf(state->pps_info.name, PPS_MAX_NAME_LEN, "%s%d",
+		drv->driver_name, port->line);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2040: FILE: drivers/serial/serial_core.c:648:
+	snprintf(state->pps_info.path, PPS_MAX_NAME_LEN, "/dev/%s%d",
+		drv->name, port->line);

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2042: FILE: drivers/serial/serial_core.c:650:
+	state->pps_info.mode = PPS_CAPTUREBOTH | \

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#2046: FILE: drivers/serial/serial_core.c:654:
+	ret = pps_register_source(&state->pps_info, PPS_CAPTUREBOTH | \

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2055: FILE: drivers/serial/serial_core.c:663:
+	pps_info("PPS source #%d \"%s\" added to the system ",
+		port->pps_source, state->pps_info.path);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2065: FILE: drivers/serial/serial_core.c:673:
+	pps_dbg("PPS source #%d \"%s\" removed from the system",
+	port->pps_source, state->pps_info.path);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#2086: FILE: drivers/serial/serial_core.c:861:
+^I^Ielse^I$

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2095: FILE: drivers/serial/serial_core.c:869:
+		if (((old_flags ^ port->flags) & (UPF_SPD_MASK|UPF_HARDPPS_CD)) ||
 		                                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#2104: FILE: drivers/serial/serial_core.c:2159:
+ ^I * Add the PPS support for the current port.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2104: FILE: drivers/serial/serial_core.c:2159:
+ ^I * Add the PPS support for the current port.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2105: FILE: drivers/serial/serial_core.c:2160:
+ ^I */$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2105: FILE: drivers/serial/serial_core.c:2160:
+ ^I */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2116: FILE: drivers/serial/serial_core.c:2413:
+ ^I * Remove PPS support from the current port.$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2116: FILE: drivers/serial/serial_core.c:2413:
+ ^I * Remove PPS support from the current port.$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2201: FILE: include/linux/pps.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2218: FILE: include/linux/pps.h:18:
+ *   along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#2219: FILE: include/linux/pps.h:19:
+ *   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#2222: FILE: include/linux/pps.h:22:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2228: FILE: include/linux/pps.h:28:
+ * means the bit is set.  */

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2258: FILE: include/linux/pps.h:58:
+^Iunsigned long clear_sequence; ^I/* seq. num. of clear event */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2301: FILE: include/linux/pps.h:101:
+#define PPS_KC_HARDPPS_PLL	1	/* hardpps() constrained to
+					   use a phase-locked loop */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2301: FILE: include/linux/pps.h:101:
+					   use a phase-locked loop */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2303: FILE: include/linux/pps.h:103:
+#define PPS_KC_HARDPPS_FLL	2	/* hardpps() constrained to
+					use a frequency-locked loop */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2303: FILE: include/linux/pps.h:103:
+					use a frequency-locked loop */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#2330: FILE: include/linux/pps.h:130:
+#define pps_dbg(format, arg...) printk(KERN_DEBUG "%s: " format "\n" , \

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#2330: FILE: include/linux/pps.h:130:
+#define pps_dbg(format, arg...) printk(KERN_DEBUG "%s: " format "\n" , \
                                                                      ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#2331: FILE: include/linux/pps.h:131:
+	KBUILD_MODNAME , ## arg)
 	               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#2336: FILE: include/linux/pps.h:136:
+#define pps_err(format, arg...) printk(KERN_ERR "%s: " format "\n" , \

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#2336: FILE: include/linux/pps.h:136:
+#define pps_err(format, arg...) printk(KERN_ERR "%s: " format "\n" , \
                                                                    ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#2337: FILE: include/linux/pps.h:137:
+	KBUILD_MODNAME , ## arg)
 	               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2338: FILE: include/linux/pps.h:138:
+#define pps_info(format, arg...) printk(KERN_INFO "%s: " format "\n" , \

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#2338: FILE: include/linux/pps.h:138:
+#define pps_info(format, arg...) printk(KERN_INFO "%s: " format "\n" , \
                                                                      ^

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#2339: FILE: include/linux/pps.h:139:
+	KBUILD_MODNAME , ## arg)
 	               ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#2365: FILE: include/linux/pps.h:165:
+	volatile unsigned long assert_sequence;	/* PPS' assert event seq # */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#2366: FILE: include/linux/pps.h:166:
+	volatile unsigned long clear_sequence;	/* PPS' clear event seq # */

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#2367: FILE: include/linux/pps.h:167:
+	volatile union pps_timeu assert_tu;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#2368: FILE: include/linux/pps.h:168:
+	volatile union pps_timeu clear_tu;

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2398: FILE: include/linux/pps.h:198:
+extern int pps_register_source(struct pps_source_info_s *info,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2399: FILE: include/linux/pps.h:199:
+extern int pps_register_source(struct pps_source_info_s *info,
+				int default_params, int try_id);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2400: FILE: include/linux/pps.h:200:
+extern void pps_unregister_source(struct pps_source_info_s *info);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2401: FILE: include/linux/pps.h:201:
+extern void pps_event(int source, int event, void *data);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2403: FILE: include/linux/pps.h:203:
+extern int pps_sysfs_create_source_entry(struct pps_source_info_s *info,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2404: FILE: include/linux/pps.h:204:
+extern int pps_sysfs_create_source_entry(struct pps_source_info_s *info,
+				int id);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2405: FILE: include/linux/pps.h:205:
+extern void pps_sysfs_remove_source_entry(struct pps_source_info_s *info);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2406: FILE: include/linux/pps.h:206:
+extern int pps_sysfs_register(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2407: FILE: include/linux/pps.h:207:
+extern void pps_sysfs_unregister(void);

CHECK:SPACING: No space is necessary after a cast
#2439: FILE: include/linux/serial_core.h:283:
+#define UPF_USR_MASK		((__force upf_t) (UPF_SPD_MASK|UPF_LOW_LATENCY\

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2439: FILE: include/linux/serial_core.h:283:
+#define UPF_USR_MASK		((__force upf_t) (UPF_SPD_MASK|UPF_LOW_LATENCY\
                     		                              ^

CHECK:SPACING: spaces preferred around that '|' (ctx:ExV)
#2440: FILE: include/linux/serial_core.h:284:
+							|UPF_HARDPPS_CD))
 							^

ERROR:CODE_INDENT: code indent should use tabs where possible
#2449: FILE: include/linux/serial_core.h:317:
+        struct pps_source_info_s pps_info;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#2449: FILE: include/linux/serial_core.h:317:
+        struct pps_source_info_s pps_info;$

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#2473: FILE: include/linux/serial_core.h:494:
+		}
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#2473: FILE: include/linux/serial_core.h:494:
+		else {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2505: FILE: include/linux/syscalls.h:617:
+asmlinkage long sys_time_pps_getparams(int source,
+					struct pps_params __user *params);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2507: FILE: include/linux/syscalls.h:619:
+asmlinkage long sys_time_pps_setparams(int source,
+					const struct pps_params __user *params);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2510: FILE: include/linux/syscalls.h:622:
+asmlinkage long sys_time_pps_fetch(int source, const int tsformat,
+					struct pps_info __user *info,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000411944.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 72 errors, 92 warnings, 98 checks, 2307 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000411944.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
