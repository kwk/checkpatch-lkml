CHECK:MACRO_ARG_REUSE: Macro argument reuse 'op' - possible side-effects?
#72: FILE: arch/x86/include/asm/percpu.h:165:
+#define percpu_addr_op(op, var)				\
+({							\
+	switch (sizeof(var)) {				\
+	case 1:						\
+		asm(op "b "__percpu_seg"%0"		\
+				: : "m"(var));		\
+		break;					\
+	case 2:						\
+		asm(op "w "__percpu_seg"%0"		\
+				: : "m"(var));		\
+		break;					\
+	case 4:						\
+		asm(op "l "__percpu_seg"%0"		\
+				: : "m"(var));		\
+	break;					\
+		default: __bad_percpu_size();			\
+	}						\
+})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'var' - possible side-effects?
#72: FILE: arch/x86/include/asm/percpu.h:165:
+#define percpu_addr_op(op, var)				\
+({							\
+	switch (sizeof(var)) {				\
+	case 1:						\
+		asm(op "b "__percpu_seg"%0"		\
+				: : "m"(var));		\
+		break;					\
+	case 2:						\
+		asm(op "w "__percpu_seg"%0"		\
+				: : "m"(var));		\
+		break;					\
+	case 4:						\
+		asm(op "l "__percpu_seg"%0"		\
+				: : "m"(var));		\
+	break;					\
+		default: __bad_percpu_size();			\
+	}						\
+})

ERROR:SWITCH_CASE_INDENT_LEVEL: switch and case should be at the same indent
#74: FILE: arch/x86/include/asm/percpu.h:167:
+	switch (sizeof(var)) {				\
[...]
+		default: __bad_percpu_size();			\

switch should be at the same indent as case.
Example::

  switch (suffix) {
  case 'G':
  case 'g':
          mem <<= 30;
          break;
  case 'M':
  case 'm':
          mem <<= 20;
          break;
  case 'K':
  case 'k':
          mem <<= 10;
          fallthrough;
  default:
          break;
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#76: FILE: arch/x86/include/asm/percpu.h:169:
+		asm(op "b "__percpu_seg"%0"		\

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#80: FILE: arch/x86/include/asm/percpu.h:173:
+		asm(op "w "__percpu_seg"%0"		\

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#84: FILE: arch/x86/include/asm/percpu.h:177:
+		asm(op "l "__percpu_seg"%0"		\

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#87: FILE: arch/x86/include/asm/percpu.h:180:
+		default: __bad_percpu_size();			\

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'var' - possible side-effects?
#91: FILE: arch/x86/include/asm/percpu.h:184:
+#define percpu_cmpxchg_op(var, old, new)				\
+({									\
+	typeof(var) prev;						\
+	switch (sizeof(var)) {						\
+	case 1:								\
+		asm("cmpxchgb %b1, "__percpu_seg"%2"			\
+				     : "=a"(prev)			\
+				     : "q"(new), "m"(var), "0"(old)	\
+				     : "memory");			\
+		break;							\
+	case 2:								\
+		asm("cmpxchgw %w1, "__percpu_seg"%2"			\
+				     : "=a"(prev)			\
+				     : "r"(new), "m"(var), "0"(old)	\
+				     : "memory");			\
+		break;							\
+	case 4:								\
+		asm("cmpxchgl %k1, "__percpu_seg"%2"			\
+				     : "=a"(prev)			\
+				     : "r"(new), "m"(var), "0"(old)	\
+				     : "memory");			\
+		break;							\
+	default:							\
+		__bad_percpu_size();					\
+	}								\
+	return prev;							\
+})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'old' - possible side-effects?
#91: FILE: arch/x86/include/asm/percpu.h:184:
+#define percpu_cmpxchg_op(var, old, new)				\
+({									\
+	typeof(var) prev;						\
+	switch (sizeof(var)) {						\
+	case 1:								\
+		asm("cmpxchgb %b1, "__percpu_seg"%2"			\
+				     : "=a"(prev)			\
+				     : "q"(new), "m"(var), "0"(old)	\
+				     : "memory");			\
+		break;							\
+	case 2:								\
+		asm("cmpxchgw %w1, "__percpu_seg"%2"			\
+				     : "=a"(prev)			\
+				     : "r"(new), "m"(var), "0"(old)	\
+				     : "memory");			\
+		break;							\
+	case 4:								\
+		asm("cmpxchgl %k1, "__percpu_seg"%2"			\
+				     : "=a"(prev)			\
+				     : "r"(new), "m"(var), "0"(old)	\
+				     : "memory");			\
+		break;							\
+	default:							\
+		__bad_percpu_size();					\
+	}								\
+	return prev;							\
+})

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'new' - possible side-effects?
#91: FILE: arch/x86/include/asm/percpu.h:184:
+#define percpu_cmpxchg_op(var, old, new)				\
+({									\
+	typeof(var) prev;						\
+	switch (sizeof(var)) {						\
+	case 1:								\
+		asm("cmpxchgb %b1, "__percpu_seg"%2"			\
+				     : "=a"(prev)			\
+				     : "q"(new), "m"(var), "0"(old)	\
+				     : "memory");			\
+		break;							\
+	case 2:								\
+		asm("cmpxchgw %w1, "__percpu_seg"%2"			\
+				     : "=a"(prev)			\
+				     : "r"(new), "m"(var), "0"(old)	\
+				     : "memory");			\
+		break;							\
+	case 4:								\
+		asm("cmpxchgl %k1, "__percpu_seg"%2"			\
+				     : "=a"(prev)			\
+				     : "r"(new), "m"(var), "0"(old)	\
+				     : "memory");			\
+		break;							\
+	default:							\
+		__bad_percpu_size();					\
+	}								\
+	return prev;							\
+})

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#91: FILE: arch/x86/include/asm/percpu.h:184:
+#define percpu_cmpxchg_op(var, old, new)				\
+({									\
+	typeof(var) prev;						\
+	switch (sizeof(var)) {						\
+	case 1:								\
+		asm("cmpxchgb %b1, "__percpu_seg"%2"			\
+				     : "=a"(prev)			\
+				     : "q"(new), "m"(var), "0"(old)	\
+				     : "memory");			\
+		break;							\
+	case 2:								\
+		asm("cmpxchgw %w1, "__percpu_seg"%2"			\
+				     : "=a"(prev)			\
+				     : "r"(new), "m"(var), "0"(old)	\
+				     : "memory");			\
+		break;							\
+	case 4:								\
+		asm("cmpxchgl %k1, "__percpu_seg"%2"			\
+				     : "=a"(prev)			\
+				     : "r"(new), "m"(var), "0"(old)	\
+				     : "memory");			\
+		break;							\
+	default:							\
+		__bad_percpu_size();					\
+	}								\
+	return prev;							\
+})

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#96: FILE: arch/x86/include/asm/percpu.h:189:
+		asm("cmpxchgb %b1, "__percpu_seg"%2"			\

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#102: FILE: arch/x86/include/asm/percpu.h:195:
+		asm("cmpxchgw %w1, "__percpu_seg"%2"			\

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#108: FILE: arch/x86/include/asm/percpu.h:201:
+		asm("cmpxchgl %k1, "__percpu_seg"%2"			\

ERROR:SPACING: space required after that ',' (ctx:VxV)
#134: FILE: arch/x86/include/asm/percpu.h:273:
+#define CPU_WRITE(obj,val)	percpu_to_op("mov", obj, val)
                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#135: FILE: arch/x86/include/asm/percpu.h:274:
+#define CPU_ADD(obj,val)	percpu_to_op("add", obj, val)
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#136: FILE: arch/x86/include/asm/percpu.h:275:
+#define CPU_SUB(obj,val)	percpu_to_op("sub", obj, val)
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#139: FILE: arch/x86/include/asm/percpu.h:278:
+#define CPU_XCHG(obj,val)	percpu_to_op("xchg", var, val)
                     ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000207802.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 1 warnings, 11 checks, 112 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000207802.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
