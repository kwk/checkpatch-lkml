ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#76: FILE: drivers/md/raid5.c:329:
+raid5_end_read_request(struct bio * bi, unsigned int bytes_done, int error);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#78: FILE: drivers/md/raid5.c:331:
+raid5_end_write_request (struct bio *bi, unsigned int bytes_done, int error);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#87: FILE: drivers/md/raid5.c:340:
+	for (i=disks; i-- ;) {
 	      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#91: FILE: drivers/md/raid5.c:344:
+		mdk_rdev_t *rdev;
+		if (test_and_clear_bit(R5_Wantwrite, &sh->dev[i].flags))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <R5_Wantwrite>
#91: FILE: drivers/md/raid5.c:344:
+		if (test_and_clear_bit(R5_Wantwrite, &sh->dev[i].flags))

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <R5_Wantread>
#93: FILE: drivers/md/raid5.c:346:
+		else if (test_and_clear_bit(R5_Wantread, &sh->dev[i].flags))

CHECK:CAMELCASE: Avoid CamelCase: <Faulty>
#108: FILE: drivers/md/raid5.c:361:
+		if (rdev && test_bit(Faulty, &rdev->flags))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#116: FILE: drivers/md/raid5.c:369:
+			if (test_bit(STRIPE_SYNCING, &sh->state) ||
+				test_bit(STRIPE_EXPAND_SOURCE, &sh->state) ||

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#122: FILE: drivers/md/raid5.c:375:
+			PRINTK("%s: for %llu schedule op %ld on disc %d\n",
+				__FUNCTION__, (unsigned long long)sh->sector,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#122: FILE: drivers/md/raid5.c:375:
+				__FUNCTION__, (unsigned long long)sh->sector,

CHECK:CAMELCASE: Avoid CamelCase: <R5_ReWrite>
#136: FILE: drivers/md/raid5.c:389:
+			    test_bit(R5_ReWrite, &sh->dev[i].flags))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#143: FILE: drivers/md/raid5.c:396:
+			PRINTK("skip op %ld on disc %d for sector %llu\n",
+				bi->bi_rw, i, (unsigned long long)sh->sector);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#152: FILE: drivers/md/raid5.c:405:
+async_copy_data(int frombio, struct bio *bio, struct page *page, sector_t sector,
+	struct dma_async_tx_descriptor *tx)

WARNING:UNSPECIFIED_INT: Prefer 'signed int' to bare use of 'signed'
#160: FILE: drivers/md/raid5.c:413:
+		page_offset = (signed)(bio->bi_sector - sector) * 512;

WARNING:UNSPECIFIED_INT: Prefer 'signed int' to bare use of 'signed'
#162: FILE: drivers/md/raid5.c:415:
+		page_offset = (signed)(sector - bio->bi_sector) * -512;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#164: FILE: drivers/md/raid5.c:417:
+		int len = bio_iovec_idx(bio,i)->bv_len;
 		                           ^

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#176: FILE: drivers/md/raid5.c:429:
+		else clen = len;

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#179: FILE: drivers/md/raid5.c:432:
+			b_offset += bio_iovec_idx(bio,i)->bv_offset;
 			                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#180: FILE: drivers/md/raid5.c:433:
+			bio_page = bio_iovec_idx(bio,i)->bv_page;
 			                            ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#183: FILE: drivers/md/raid5.c:436:
+				tx = async_memcpy(page, bio_page, page_offset,
+					b_offset, clen,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#188: FILE: drivers/md/raid5.c:441:
+				tx = async_memcpy(bio_page, page, b_offset,
+					page_offset, clen,

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#205: FILE: drivers/md/raid5.c:458:
+	int i, more_to_read=0;
 	                   ^

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#207: FILE: drivers/md/raid5.c:460:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#208: FILE: drivers/md/raid5.c:461:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,
+		(unsigned long long)sh->sector);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#211: FILE: drivers/md/raid5.c:464:
+	for (i=sh->disks ; i-- ;) {
 	      ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#216: FILE: drivers/md/raid5.c:469:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#219: FILE: drivers/md/raid5.c:472:
+		/* and check if we need to reply to a read request
+		*/

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:CAMELCASE: Avoid CamelCase: <R5_Wantfill>
#220: FILE: drivers/md/raid5.c:473:
+		if (test_bit(R5_Wantfill, &dev->flags) && !dev->toread) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#222: FILE: drivers/md/raid5.c:475:
+			struct bio *rbi, *rbi2;
+			clear_bit(R5_Wantfill, &dev->flags);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#227: FILE: drivers/md/raid5.c:480:
+			BUG_ON(!dev->read);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:LINE_SPACING: Please don't use multiple blank lines
#245: FILE: drivers/md/raid5.c:498:
+
+

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#246: FILE: drivers/md/raid5.c:499:
+	while ((bi=return_bi)) {
 	          ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#254: FILE: drivers/md/raid5.c:507:
+^I^I^I        ? 0 : -EIO);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:TRAILING_WHITESPACE: trailing whitespace
#256: FILE: drivers/md/raid5.c:509:
+^I$

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#268: FILE: drivers/md/raid5.c:521:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#269: FILE: drivers/md/raid5.c:522:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,
+		(unsigned long long)sh->sector);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#271: FILE: drivers/md/raid5.c:524:
+	for (i=sh->disks ; i-- ;) {
 	      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#273: FILE: drivers/md/raid5.c:526:
+		struct r5dev *dev = &sh->dev[i];
+		if (test_bit(R5_Wantfill, &dev->flags)) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#275: FILE: drivers/md/raid5.c:528:
+			struct bio *rbi;
+			spin_lock_irq(&conf->device_lock);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#276: FILE: drivers/md/raid5.c:529:
+			dev->read = rbi = dev->toread;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#281: FILE: drivers/md/raid5.c:534:
+				tx = async_copy_data(0, rbi, dev->page,
+					dev->sector, tx);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#289: FILE: drivers/md/raid5.c:542:
+	async_trigger_callback(ASYNC_TX_DEP_ACK | ASYNC_TX_ACK, tx,
+		ops_complete_biofill, sh);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#298: FILE: drivers/md/raid5.c:551:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#299: FILE: drivers/md/raid5.c:552:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,
+		(unsigned long long)sh->sector);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#302: FILE: drivers/md/raid5.c:555:
+	BUG_ON(!test_bit(R5_Wantcompute, &tgt->flags));

CHECK:CAMELCASE: Avoid CamelCase: <R5_Wantcompute>
#302: FILE: drivers/md/raid5.c:555:
+	BUG_ON(!test_bit(R5_Wantcompute, &tgt->flags));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#323: FILE: drivers/md/raid5.c:576:
+	PRINTK("%s: stripe %llu block: %d\n",
+		__FUNCTION__, (unsigned long long)sh->sector, target);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#323: FILE: drivers/md/raid5.c:576:
+		__FUNCTION__, (unsigned long long)sh->sector, target);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#324: FILE: drivers/md/raid5.c:577:
+	BUG_ON(!test_bit(R5_Wantcompute, &tgt->flags));

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#326: FILE: drivers/md/raid5.c:579:
+	for (i=disks ; i-- ; )
 	      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#334: FILE: drivers/md/raid5.c:587:
+		tx = async_memcpy(xor_dest, xor_srcs[0], 0, 0, STRIPE_SIZE,
+			0, NULL, ops_complete_compute5, sh);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#337: FILE: drivers/md/raid5.c:590:
+		tx = async_xor(xor_dest, xor_srcs, 0, count, STRIPE_SIZE,
+			ASYNC_TX_XOR_ZERO_DST, NULL,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#351: FILE: drivers/md/raid5.c:604:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#352: FILE: drivers/md/raid5.c:605:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,
+		(unsigned long long)sh->sector);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#368: FILE: drivers/md/raid5.c:621:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#369: FILE: drivers/md/raid5.c:622:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,
+		(unsigned long long)sh->sector);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#371: FILE: drivers/md/raid5.c:624:
+	for (i=disks ; i-- ;) {
 	      ^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#373: FILE: drivers/md/raid5.c:626:
+		/* Only process blocks that are known to be uptodate */
 		                                            ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:CAMELCASE: Avoid CamelCase: <R5_Wantprexor>
#374: FILE: drivers/md/raid5.c:627:
+		if (dev->towrite && test_bit(R5_Wantprexor, &dev->flags))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#379: FILE: drivers/md/raid5.c:632:
+	tx = async_xor(xor_dest, xor_srcs, 0, count, STRIPE_SIZE,
+		ASYNC_TX_DEP_ACK | ASYNC_TX_XOR_DROP_DST, tx,

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#396: FILE: drivers/md/raid5.c:649:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#397: FILE: drivers/md/raid5.c:650:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,
+		(unsigned long long)sh->sector);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#399: FILE: drivers/md/raid5.c:652:
+	for (i=disks ; i-- ;) {
 	      ^

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#409: FILE: drivers/md/raid5.c:662:
+			if (i!=pd_idx && dev->towrite &&
 			     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#410: FILE: drivers/md/raid5.c:663:
+			if (i!=pd_idx && dev->towrite &&
+				test_bit(R5_LOCKED, &dev->flags))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#420: FILE: drivers/md/raid5.c:673:
+			BUG_ON(dev->written);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#421: FILE: drivers/md/raid5.c:674:
+			wbi = dev->written = chosen;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#426: FILE: drivers/md/raid5.c:679:
+				tx = async_copy_data(1, wbi, dev->page,
+					dev->sector, tx);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#439: FILE: drivers/md/raid5.c:692:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#440: FILE: drivers/md/raid5.c:693:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,
+		(unsigned long long)sh->sector);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#452: FILE: drivers/md/raid5.c:705:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#453: FILE: drivers/md/raid5.c:706:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,
+		(unsigned long long)sh->sector);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#455: FILE: drivers/md/raid5.c:708:
+	for (i=disks ; i-- ;) {
 	      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#457: FILE: drivers/md/raid5.c:710:
+		struct r5dev *dev = &sh->dev[i];
+		if (dev->written || i == pd_idx)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#481: FILE: drivers/md/raid5.c:734:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#482: FILE: drivers/md/raid5.c:735:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,
+		(unsigned long long)sh->sector);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#488: FILE: drivers/md/raid5.c:741:
+		xor_dest = xor_srcs[count++] = sh->dev[pd_idx].page;

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#489: FILE: drivers/md/raid5.c:742:
+		for (i=disks; i--;) {
 		      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#491: FILE: drivers/md/raid5.c:744:
+			struct r5dev *dev = &sh->dev[i];
+			if (dev->written)

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#496: FILE: drivers/md/raid5.c:749:
+		for (i=disks; i--;) {
 		      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#498: FILE: drivers/md/raid5.c:751:
+			struct r5dev *dev = &sh->dev[i];
+			if (i!=pd_idx)

ERROR:SPACING: spaces required around that '!=' (ctx:VxV)
#498: FILE: drivers/md/raid5.c:751:
+			if (i!=pd_idx)
 			     ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#520: FILE: drivers/md/raid5.c:773:
+		tx = async_memcpy(xor_dest, xor_srcs[0], 0, 0, STRIPE_SIZE,
+			flags, tx, callback, sh);

CHECK:BRACES: Unbalanced braces around else statement
#521: FILE: drivers/md/raid5.c:774:
+	} else

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#523: FILE: drivers/md/raid5.c:776:
+		tx = async_xor(xor_dest, xor_srcs, 0, count, STRIPE_SIZE,
+			flags, tx, callback, sh);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#531: FILE: drivers/md/raid5.c:784:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#532: FILE: drivers/md/raid5.c:785:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,
+		(unsigned long long)sh->sector);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#535: FILE: drivers/md/raid5.c:788:
+	if (test_and_clear_bit(STRIPE_OP_MOD_DMA_CHECK, &sh->ops.pending) &&
+		sh->ops.zero_sum_result == 0)

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#553: FILE: drivers/md/raid5.c:806:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#554: FILE: drivers/md/raid5.c:807:
+	PRINTK("%s: stripe %llu\n", __FUNCTION__,
+		(unsigned long long)sh->sector);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#556: FILE: drivers/md/raid5.c:809:
+	for (i=disks; i--;) {
 	      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#558: FILE: drivers/md/raid5.c:811:
+		struct r5dev *dev = &sh->dev[i];
+		if (i != pd_idx)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#563: FILE: drivers/md/raid5.c:816:
+	tx = async_xor_zero_sum(xor_dest, xor_srcs, 0, count, STRIPE_SIZE,
+		&sh->ops.zero_sum_result, 0, NULL, NULL, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#572: FILE: drivers/md/raid5.c:825:
+	tx = async_trigger_callback(ASYNC_TX_DEP_ACK | ASYNC_TX_ACK, tx,
+		ops_complete_check, sh);

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#577: FILE: drivers/md/raid5.c:830:
+	int overlap_clear=0, i, disks = sh->disks;
 	                 ^

ERROR:SPACING: spaces required around that '=' (ctx:VxV)
#606: FILE: drivers/md/raid5.c:859:
+		for (i=disks; i-- ;) {
 		      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#608: FILE: drivers/md/raid5.c:861:
+			struct r5dev *dev = &sh->dev[i];
+			if (test_and_clear_bit(R5_Overlap, &dev->flags))

CHECK:CAMELCASE: Avoid CamelCase: <R5_Overlap>
#608: FILE: drivers/md/raid5.c:861:
+			if (test_and_clear_bit(R5_Overlap, &dev->flags))

WARNING:LONG_LINE_COMMENT: line length of 141 exceeds 100 columns
#625: FILE: include/linux/raid/raid5.h:119:
+ *     lockstripe clrSTRIPE_HANDLE ... (lockdev check-buffers unlockdev) .. change-state .. record io/ops needed unlockstripe schedule io/ops

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:TYPO_SPELLING: 'guaruntees' may be misspelled - perhaps 'guarantees'?
#660: FILE: include/linux/raid/raid5.h:153:
+ *    guaruntees that any operation that is dependent on the
       ^^^^^^^^^^

WARNING:LONG_LINE_COMMENT: line length of 104 exceeds 100 columns
#670: FILE: include/linux/raid/raid5.h:169:
+		unsigned long	   pending;  /* pending operations (set for request->issue->complete) */

WARNING:LONG_LINE_COMMENT: line length of 101 exceeds 100 columns
#674: FILE: include/linux/raid/raid5.h:173:
+		int		   count;    /* raid5_runs_ops is set to run when this is non-zero */

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#690: FILE: include/linux/raid/raid5.h:198:
+#define	R5_Wantcompute	11	/* compute_block in progress treat as uptodate */
        	              	  	                                      ^^^^^^^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000437223.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 24 errors, 36 warnings, 43 checks, 647 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000437223.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
