WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#47: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

CHECK:CAMELCASE: Avoid CamelCase: <dest_LowestPrio>
#400: FILE: arch/x86/mach-generic/es7000.c:20:
+#define INT_DELIVERY_MODE_CLUSTER	(dest_LowestPrio)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#405: FILE: arch/x86/mach-generic/es7000.c:25:
+extern void es7000_enable_apic_mode(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:BRACKET_SPACE: space prohibited before open square bracket '['
#406: FILE: arch/x86/mach-generic/es7000.c:26:
+extern int apic_version [MAX_APICS];

Whitespace before opening bracket '[' is prohibited.
There are some exceptions:

1. With a type on the left::

    int [] a;

2. At the beginning of a line for slice initialisers::

    [0...10] = 5,

3. Inside a curly brace::

    = { [0...10] = 5 }

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#406: FILE: arch/x86/mach-generic/es7000.c:26:
+extern int apic_version [MAX_APICS];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#407: FILE: arch/x86/mach-generic/es7000.c:27:
+extern u8 cpu_2_logical_apicid[];

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#408: FILE: arch/x86/mach-generic/es7000.c:28:
+extern unsigned int boot_cpu_physical_apicid;

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#410: FILE: arch/x86/mach-generic/es7000.c:30:
+extern int parse_unisys_oem (char *oemptr);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#410: FILE: arch/x86/mach-generic/es7000.c:30:
+extern int parse_unisys_oem (char *oemptr);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#411: FILE: arch/x86/mach-generic/es7000.c:31:
+extern int find_unisys_acpi_oem_table(unsigned long *oem_addr);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#412: FILE: arch/x86/mach-generic/es7000.c:32:
+extern void unmap_unisys_acpi_oem_table(unsigned long oem_addr);

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#413: FILE: arch/x86/mach-generic/es7000.c:33:
+extern void setup_unisys(void);

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'apicid' may be better as '(apicid)' to avoid precedence issues
#415: FILE: arch/x86/mach-generic/es7000.c:35:
+#define apicid_cluster(apicid)		(apicid & 0xF0)

WARNING:TYPO_SPELLING: 'desitination' may be misspelled - perhaps 'destination'?
#426: FILE: arch/x86/mach-generic/es7000.c:46:
+	 * hyperthread was specified in the interrupt desitination.
 	                                              ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#431: FILE: arch/x86/mach-generic/es7000.c:51:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:RETURN_VOID: void function return statements are not generally useful
#439: FILE: arch/x86/mach-generic/es7000.c:59:
+	return;
+}

ERROR:CODE_INDENT: code indent should use tabs where possible
#475: FILE: arch/x86/mach-generic/es7000.c:95:
+^I        return 1;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#493: FILE: arch/x86/mach-generic/es7000.c:113:
+}
+static unsigned long es7000_check_apicid_present(int bit)

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#502: FILE: arch/x86/mach-generic/es7000.c:122:
+	return (SET_APIC_LOGICAL_ID(id));

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

WARNING:LINE_SPACING: Missing a blank line after declarations
#535: FILE: arch/x86/mach-generic/es7000.c:155:
+	int apic = per_cpu(x86_bios_cpu_apicid, smp_processor_id());
+	printk("Enabling APIC mode:  %s. Using %d I/O APICs, target cpus %lx\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#535: FILE: arch/x86/mach-generic/es7000.c:155:
+	printk("Enabling APIC mode:  %s. Using %d I/O APICs, target cpus %lx\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#536: FILE: arch/x86/mach-generic/es7000.c:156:
+	printk("Enabling APIC mode:  %s. Using %d I/O APICs, target cpus %lx\n",
+		(apic_version[apic] == 0x14) ?

CHECK:LINE_SPACING: Please don't use multiple blank lines
#546: FILE: arch/x86/mach-generic/es7000.c:166:
+
+

CHECK:SPACING: No space is necessary after a cast
#552: FILE: arch/x86/mach-generic/es7000.c:172:
+		return (int) per_cpu(x86_bios_cpu_apicid, mps_cpu);

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#559: FILE: arch/x86/mach-generic/es7000.c:179:
+	static int id = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#589: FILE: arch/x86/mach-generic/es7000.c:209:
+	return (1);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#617: FILE: arch/x86/mach-generic/es7000.c:237:
+				printk ("%s: Not a valid mask!\n", __func__);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#617: FILE: arch/x86/mach-generic/es7000.c:237:
+				printk ("%s: Not a valid mask!\n", __func__);

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#652: FILE: arch/x86/mach-generic/es7000.c:272:
+				printk ("%s: Not a valid mask!\n", __func__);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#652: FILE: arch/x86/mach-generic/es7000.c:272:
+				printk ("%s: Not a valid mask!\n", __func__);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000174762.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 5 errors, 18 warnings, 7 checks, 336 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000174762.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
