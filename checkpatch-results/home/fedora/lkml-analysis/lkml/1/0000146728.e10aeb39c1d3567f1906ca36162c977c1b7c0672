CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'pdev->revision <= 2'
#77: FILE: drivers/pci/hotplug/cpqphp_core.c:890:
+	if ((pdev->revision <= 2) && (vendor_id != PCI_VENDOR_ID_INTEL)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'vendor_id != PCI_VENDOR_ID_INTEL'
#77: FILE: drivers/pci/hotplug/cpqphp_core.c:890:
+	if ((pdev->revision <= 2) && (vendor_id != PCI_VENDOR_ID_INTEL)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'subsystem_vid != PCI_VENDOR_ID_COMPAQ'
#91: FILE: drivers/pci/hotplug/cpqphp_core.c:904:
+	if ((subsystem_vid != PCI_VENDOR_ID_COMPAQ) && (subsystem_vid != PCI_VENDOR_ID_INTEL)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'subsystem_vid != PCI_VENDOR_ID_INTEL'
#91: FILE: drivers/pci/hotplug/cpqphp_core.c:904:
+	if ((subsystem_vid != PCI_VENDOR_ID_COMPAQ) && (subsystem_vid != PCI_VENDOR_ID_INTEL)) {

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*ctrl)...) over kzalloc(sizeof(struct controller)...)
#97: FILE: drivers/pci/hotplug/cpqphp_core.c:910:
+	ctrl = kzalloc(sizeof(struct controller), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:CAMELCASE: Avoid CamelCase: <PCI_SPEED_133MHz_PCIX>
#135: FILE: drivers/pci/hotplug/cpqphp_core.c:943:
+				ctrl->speed_capability = PCI_SPEED_133MHz_PCIX;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <PCI_SPEED_100MHz_PCIX>
#140: FILE: drivers/pci/hotplug/cpqphp_core.c:948:
+				ctrl->speed_capability = PCI_SPEED_100MHz_PCIX;

CHECK:CAMELCASE: Avoid CamelCase: <PCI_SPEED_66MHz_PCIX>
#145: FILE: drivers/pci/hotplug/cpqphp_core.c:953:
+				ctrl->speed_capability = PCI_SPEED_66MHz_PCIX;

CHECK:CAMELCASE: Avoid CamelCase: <PCI_SPEED_66MHz>
#150: FILE: drivers/pci/hotplug/cpqphp_core.c:958:
+				ctrl->speed_capability = PCI_SPEED_66MHz;

CHECK:CAMELCASE: Avoid CamelCase: <PCI_SPEED_33MHz>
#164: FILE: drivers/pci/hotplug/cpqphp_core.c:969:
+			ctrl->speed_capability = PCI_SPEED_33MHz;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000146728.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 0 warnings, 10 checks, 406 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000146728.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
