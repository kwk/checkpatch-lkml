WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
allocation. This patch breaks up the allocator path into fast and slow paths.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#54: FILE: mm/page_alloc.c:1468:
+should_alloc_retry(gfp_t gfp_mask, unsigned int order,
+				unsigned long pages_reclaimed)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#59: FILE: mm/page_alloc.c:1473:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#80: FILE: mm/page_alloc.c:1494:
+^I * explicitly requests that. $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#92: FILE: mm/page_alloc.c:1504:
+__alloc_pages_may_oom(gfp_t gfp_mask, unsigned int order,
+	struct zonelist *zonelist, enum zone_type high_zoneidx,

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#112: FILE: mm/page_alloc.c:1520:
+	page = get_page_from_freelist(gfp_mask|__GFP_HARDWALL, nodemask,
 	                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#113: FILE: mm/page_alloc.c:1521:
+	page = get_page_from_freelist(gfp_mask|__GFP_HARDWALL, nodemask,
+		order, zonelist, high_zoneidx,

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#114: FILE: mm/page_alloc.c:1522:
+		ALLOC_WMARK_HIGH|ALLOC_CPUSET);
 		                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#133: FILE: mm/page_alloc.c:1541:
+__alloc_pages_direct_reclaim(gfp_t gfp_mask, unsigned int order,
+	struct zonelist *zonelist, enum zone_type high_zoneidx,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#186: FILE: mm/page_alloc.c:1573:
+		page = get_page_from_freelist(gfp_mask, nodemask, order,
+					zonelist, high_zoneidx, alloc_flags);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#191: FILE: mm/page_alloc.c:1578:
+static inline int is_allocation_high_priority(struct task_struct *p,
+							gfp_t gfp_mask)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#194: FILE: mm/page_alloc.c:1581:
+	if (((p->flags & PF_MEMALLOC) || unlikely(test_thread_flag(TIF_MEMDIE)))
+			&& !in_interrupt())

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#206: FILE: mm/page_alloc.c:1593:
+__alloc_pages_high_priority(gfp_t gfp_mask, unsigned int order,
+	struct zonelist *zonelist, enum zone_type high_zoneidx,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#213: FILE: mm/page_alloc.c:1600:
+		page = get_page_from_freelist(gfp_mask, nodemask, order,
+			zonelist, high_zoneidx, ALLOC_NO_WATERMARKS);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#216: FILE: mm/page_alloc.c:1603:
+			congestion_wait(WRITE, HZ/50);
 			                         ^

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#232: FILE: mm/page_alloc.c:1619:
+static struct page * noinline

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:INLINE_LOCATION: inline keyword should sit between storage class and type
#232: FILE: mm/page_alloc.c:1619:
+static struct page * noinline

The inline keyword should sit between storage class and type.

For example, the following segment::

  inline static int example_function(void)
  {
          ...
  }

should be::

  static inline int example_function(void)
  {
          ...
  }

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#234: FILE: mm/page_alloc.c:1621:
+__alloc_pages_slowpath(gfp_t gfp_mask, unsigned int order,
+	struct zonelist *zonelist, enum zone_type high_zoneidx,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#290: FILE: mm/page_alloc.c:1679:
+		page = __alloc_pages_high_priority(gfp_mask, order,
+			zonelist, high_zoneidx, nodemask);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#301: FILE: mm/page_alloc.c:1689:
+	page = __alloc_pages_direct_reclaim(gfp_mask, order,
+					zonelist, high_zoneidx,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#331: FILE: mm/page_alloc.c:1702:
+			page = __alloc_pages_may_oom(gfp_mask, order,
+					zonelist, high_zoneidx,

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#414: FILE: mm/page_alloc.c:1730:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#421: FILE: mm/page_alloc.c:1737:
+__alloc_pages_nodemask(gfp_t gfp_mask, unsigned int order,
+			struct zonelist *zonelist, nodemask_t *nodemask)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#439: FILE: mm/page_alloc.c:1755:
+	page = get_page_from_freelist(gfp_mask|__GFP_HARDWALL, nodemask, order,
 	                                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#440: FILE: mm/page_alloc.c:1756:
+	page = get_page_from_freelist(gfp_mask|__GFP_HARDWALL, nodemask, order,
+			zonelist, high_zoneidx, ALLOC_WMARK_LOW|ALLOC_CPUSET);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#440: FILE: mm/page_alloc.c:1756:
+			zonelist, high_zoneidx, ALLOC_WMARK_LOW|ALLOC_CPUSET);
 			                                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#443: FILE: mm/page_alloc.c:1759:
+		page = __alloc_pages_slowpath(gfp_mask, order,
+				zonelist, high_zoneidx, nodemask);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000163795.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 1 warnings, 22 checks, 399 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000163795.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
