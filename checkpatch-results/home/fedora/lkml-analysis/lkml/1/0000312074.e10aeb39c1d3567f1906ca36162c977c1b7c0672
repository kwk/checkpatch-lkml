WARNING:TYPO_SPELLING: 'occurences' may be misspelled - perhaps 'occurrences'?
#17: 
Subject: [PATCH] security: replace remaining __FUNCTION__ occurences
                                                          ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#77: FILE: security/keys/internal.h:25:
+	printk(KERN_DEBUG "==> %s("FMT")\n", __func__, ##__VA_ARGS__)

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#77: FILE: security/keys/internal.h:25:
+	printk(KERN_DEBUG "==> %s("FMT")\n", __func__, ##__VA_ARGS__)

Concatenated elements should have a space in between.
Example::

  printk(KERN_INFO"bar");

should be::

  printk(KERN_INFO "bar");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#80: FILE: security/keys/internal.h:27:
+	printk(KERN_DEBUG "<== %s()"FMT"\n", __func__, ##__VA_ARGS__)

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#80: FILE: security/keys/internal.h:27:
+	printk(KERN_DEBUG "<== %s()"FMT"\n", __func__, ##__VA_ARGS__)

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#86: FILE: security/keys/internal.h:32:
+	no_printk(KERN_DEBUG "==> %s("FMT")\n", __func__, ##__VA_ARGS__)

CHECK:CONCATENATED_STRING: Concatenated strings should use spaces between elements
#89: FILE: security/keys/internal.h:34:
+	no_printk(KERN_DEBUG "<== %s()"FMT"\n", __func__, ##__VA_ARGS__)

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#102: FILE: security/root_plug.c:52:
+^I^I^I^IMY_NAME , __func__ , ^I\$

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#102: FILE: security/root_plug.c:52:
+				MY_NAME , __func__ , 	\
 				        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#102: FILE: security/root_plug.c:52:
+				MY_NAME , __func__ , 	\
 				                   ^

WARNING:SPLIT_STRING: quoted string split across lines
#115: FILE: security/security.c:60:
 		printk(KERN_ERR "%s could not verify "
+		       "dummy_security_ops structure.\n", __func__);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#124: FILE: security/security.c:85:
 		printk(KERN_DEBUG "%s could not verify "
+		       "security_operations structure.\n", __func__);

WARNING:SPLIT_STRING: quoted string split across lines
#133: FILE: security/security.c:113:
 		printk(KERN_INFO "%s could not verify "
+		       "security operations.\n", __func__);

WARNING:SPLIT_STRING: quoted string split across lines
#140: FILE: security/security.c:119:
 		printk(KERN_INFO "%s security operations "
+		       "already registered.\n", __func__);

WARNING:SPLIT_STRING: quoted string split across lines
#162: FILE: security/selinux/hooks.c:1122:
 			printk(KERN_WARNING "%s:  no dentry for dev=%s "
+			       "ino=%ld\n", __func__, inode->i_sb->s_id,

WARNING:SPLIT_STRING: quoted string split across lines
#171: FILE: security/selinux/hooks.c:1160:
 				printk(KERN_WARNING "%s:  getxattr returned "
+				       "%d for dev=%s ino=%ld\n", __func__,

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#198: FILE: security/selinux/hooks.c:2630:
+		       "%s, rc=%d\n", __func__, (char*)value, -rc);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPLIT_STRING: quoted string split across lines
#198: FILE: security/selinux/hooks.c:2630:
 		printk(KERN_WARNING "%s:  unable to obtain SID for context "
+		       "%s, rc=%d\n", __func__, (char*)value, -rc);

WARNING:SPLIT_STRING: quoted string split across lines
#207: FILE: security/selinux/hooks.c:4978:
 		printk(KERN_ERR "%s:  There is already a secondary security "
+		       "module registered.\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#228: FILE: security/selinux/netlink.c:92:
+	printk(KERN_ERR "SELinux:  OOM in %s\n", __func__);

WARNING:SPLIT_STRING: quoted string split across lines
#241: FILE: security/selinux/selinuxfs.c:394:
 		printk(KERN_ERR "%s:  context size (%u) exceeds payload "
+		       "max\n", __func__, len);

WARNING:SPLIT_STRING: quoted string split across lines
#250: FILE: security/selinux/selinuxfs.c:647:
 		printk(KERN_ERR "%s:  context size (%u) exceeds payload "
+		       "max\n", __func__, len);

WARNING:SPLIT_STRING: quoted string split across lines
#259: FILE: security/selinux/selinuxfs.c:824:
 		printk(KERN_ERR "%s:  context size (%u) exceeds payload "
+		       "max\n", __func__, len);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#268: FILE: security/selinux/selinuxfs.c:1763:
+	printk(KERN_ERR "%s:  failed while creating inodes\n", __func__);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#281: FILE: security/selinux/ss/services.c:415:
+	printk(KERN_ERR "%s:  unrecognized class %d\n", __func__, tclass);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000312074.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 18 warnings, 4 checks, 195 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000312074.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
