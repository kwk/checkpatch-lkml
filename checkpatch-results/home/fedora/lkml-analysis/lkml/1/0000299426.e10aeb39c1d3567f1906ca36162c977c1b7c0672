WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#55: FILE: include/linux/cgroup_freezer.h:1:
+#ifndef _LINUX_CGROUP_FREEZER_H

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#78: FILE: include/linux/cgroup_freezer.h:24:
+	spinlock_t lock;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#81: FILE: include/linux/cgroup_freezer.h:27:
+static inline struct freezer *cgroup_freezer(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#84: FILE: include/linux/cgroup_freezer.h:30:
+	return container_of(

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#138: FILE: init/Kconfig:326:
+config CGROUP_FREEZER
+        bool "control group freezer subsystem"
+        depends on CGROUPS
+        help
+          Provides a way to freeze and unfreeze all tasks in a
+	  cgroup
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#171: FILE: kernel/cgroup_freezer.c:1:
+/*

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#186: FILE: kernel/cgroup_freezer.c:16:
+static const char *freezer_state_strs[] = {

ERROR:SPACING: space prohibited before that ',' (ctx:WxE)
#188: FILE: kernel/cgroup_freezer.c:18:
+	"FREEZING\n" ,
 	             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#192: FILE: kernel/cgroup_freezer.c:22:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#195: FILE: kernel/cgroup_freezer.c:25:
+
+

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#196: FILE: kernel/cgroup_freezer.c:26:
+static struct cgroup_subsys_state *freezer_create(

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*freezer)...) over kzalloc(sizeof(struct freezer)...)
#204: FILE: kernel/cgroup_freezer.c:34:
+	freezer = kzalloc(sizeof(struct freezer), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:LINE_SPACING: Please don't use multiple blank lines
#219: FILE: kernel/cgroup_freezer.c:49:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!buffer"
#379: FILE: kernel/cgroup_freezer.c:209:
+	if (buffer == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#395: FILE: kernel/cgroup_freezer.c:225:
+	if (sscanf(buffer, "%d", &value) != 1) {
+		retval = -EIO;
+		goto unlock;
+	}

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000299426.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 5 warnings, 9 checks, 382 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000299426.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
