WARNING:TYPO_SPELLING: 'actally' may be misspelled - perhaps 'actually'?
#37: 
marked unlikely.  If they were not inlined, it actally increases text size
                                               ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#61: FILE: mm/page_alloc.c:1467:
+should_alloc_retry(gfp_t gfp_mask, unsigned int order,
+				unsigned long pages_reclaimed)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#118: FILE: mm/page_alloc.c:1503:
+__alloc_pages_may_oom(gfp_t gfp_mask, unsigned int order,
+	struct zonelist *zonelist, enum zone_type high_zoneidx,

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#137: FILE: mm/page_alloc.c:1519:
+	page = get_page_from_freelist(gfp_mask|__GFP_HARDWALL, nodemask,
 	                                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#138: FILE: mm/page_alloc.c:1520:
+	page = get_page_from_freelist(gfp_mask|__GFP_HARDWALL, nodemask,
+		order, zonelist, high_zoneidx,

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#139: FILE: mm/page_alloc.c:1521:
+		ALLOC_WMARK_HIGH|ALLOC_CPUSET);
 		                ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#159: FILE: mm/page_alloc.c:1540:
+__alloc_pages_direct_reclaim(gfp_t gfp_mask, unsigned int order,
+	struct zonelist *zonelist, enum zone_type high_zoneidx,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#191: FILE: mm/page_alloc.c:1572:
+		page = get_page_from_freelist(gfp_mask, nodemask, order,
+					zonelist, high_zoneidx, alloc_flags);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#199: FILE: mm/page_alloc.c:1580:
+	if (((p->flags & PF_MEMALLOC) || unlikely(test_thread_flag(TIF_MEMDIE)))
+			&& !in_interrupt())

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#211: FILE: mm/page_alloc.c:1592:
+__alloc_pages_high_priority(gfp_t gfp_mask, unsigned int order,
+	struct zonelist *zonelist, enum zone_type high_zoneidx,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#218: FILE: mm/page_alloc.c:1599:
+		page = get_page_from_freelist(gfp_mask, nodemask, order,
+			zonelist, high_zoneidx, ALLOC_NO_WATERMARKS);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#221: FILE: mm/page_alloc.c:1602:
+			congestion_wait(WRITE, HZ/50);
 			                         ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#229: FILE: mm/page_alloc.c:1610:
+void wake_all_kswapd(unsigned int order, struct zonelist *zonelist,
+						enum zone_type high_zoneidx)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#240: FILE: mm/page_alloc.c:1621:
+__alloc_pages_slowpath(gfp_t gfp_mask, unsigned int order,
+	struct zonelist *zonelist, enum zone_type high_zoneidx,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#296: FILE: mm/page_alloc.c:1679:
+		page = __alloc_pages_high_priority(gfp_mask, order,
+			zonelist, high_zoneidx, nodemask);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#307: FILE: mm/page_alloc.c:1689:
+	page = __alloc_pages_direct_reclaim(gfp_mask, order,
+					zonelist, high_zoneidx,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#337: FILE: mm/page_alloc.c:1702:
+			page = __alloc_pages_may_oom(gfp_mask, order,
+					zonelist, high_zoneidx,

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#420: FILE: mm/page_alloc.c:1730:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#427: FILE: mm/page_alloc.c:1737:
+__alloc_pages_nodemask(gfp_t gfp_mask, unsigned int order,
+			struct zonelist *zonelist, nodemask_t *nodemask)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#445: FILE: mm/page_alloc.c:1755:
+	page = get_page_from_freelist(gfp_mask|__GFP_HARDWALL, nodemask, order,
 	                                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#446: FILE: mm/page_alloc.c:1756:
+	page = get_page_from_freelist(gfp_mask|__GFP_HARDWALL, nodemask, order,
+			zonelist, high_zoneidx, ALLOC_WMARK_LOW|ALLOC_CPUSET);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#446: FILE: mm/page_alloc.c:1756:
+			zonelist, high_zoneidx, ALLOC_WMARK_LOW|ALLOC_CPUSET);
 			                                       ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#449: FILE: mm/page_alloc.c:1759:
+		page = __alloc_pages_slowpath(gfp_mask, order,
+				zonelist, high_zoneidx, nodemask);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000153926.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 1 warnings, 22 checks, 401 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000153926.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
