WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#33: 
Gitweb:     http://git.kernel.org/tip/65187d24fa3ef60f691f847c792e8eaca7e19251

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#98: FILE: arch/x86/Kconfig.debug:118:
+config DEBUG_SET_MODULE_RONX
+	bool "Set loadable kernel module data as NX and text as RO"
+	default n
+	depends on X86 && MODULES
+	---help---
+	  This option helps to catch unintended modifications to loadable
+	  kernel module's text and read-only data. It also prevents execution
+	  of LKM's data. Such protection may interfere with run-time code
+	  patching and dynamic kernel tracing.
+	  If in doubt, say "N".
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void set_all_modules_text_rw() should probably be void set_all_modules_text_rw(void)
#171: FILE: include/linux/module.h:671:
+static inline void set_all_modules_text_rw()

Function declarations without arguments like::

  int foo()

should be::

  int foo(void)

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void set_all_modules_text_ro() should probably be void set_all_modules_text_ro(void)
#175: FILE: include/linux/module.h:675:
+static inline void set_all_modules_text_ro()

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'BASE' - possible side-effects?
#212: FILE: kernel/module.c:90:
+#define NUMBER_OF_PAGES(BASE, SIZE) (((SIZE) > 0) ?		\
+		(PFN_DOWN((unsigned long)(BASE) + (SIZE) - 1) -	\
+			 PFN_DOWN((unsigned long)BASE) + 1)	\
+		: (0UL))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'SIZE' - possible side-effects?
#212: FILE: kernel/module.c:90:
+#define NUMBER_OF_PAGES(BASE, SIZE) (((SIZE) > 0) ?		\
+		(PFN_DOWN((unsigned long)(BASE) + (SIZE) - 1) -	\
+			 PFN_DOWN((unsigned long)BASE) + 1)	\
+		: (0UL))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#230: FILE: kernel/module.c:1402:
+void set_page_attributes(void *start, void *end,
+		int (*set)(unsigned long start, int num_pages))

WARNING:LINE_SPACING: Missing a blank line after declarations
#234: FILE: kernel/module.c:1406:
+	unsigned long end_pfn = PFN_DOWN((unsigned long)end);
+	if (end_pfn > begin_pfn)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#239: FILE: kernel/module.c:1411:
+static void set_section_ro_nx(void *base,
+			unsigned long text_size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#265: FILE: kernel/module.c:1437:
+			set_memory_nx(begin_pfn << PAGE_SHIFT,
+						end_pfn - begin_pfn);

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void set_all_modules_text_rw() should probably be void set_all_modules_text_rw(void)
#289: FILE: kernel/module.c:1461:
+void set_all_modules_text_rw()

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mod->module_core'
#295: FILE: kernel/module.c:1467:
+		if ((mod->module_core) && (mod->core_text_size)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mod->core_text_size'
#295: FILE: kernel/module.c:1467:
+		if ((mod->module_core) && (mod->core_text_size)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#297: FILE: kernel/module.c:1469:
+			set_page_attributes(mod->module_core,
+						mod->module_core

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mod->module_init'
#301: FILE: kernel/module.c:1473:
+		if ((mod->module_init) && (mod->init_text_size)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mod->init_text_size'
#301: FILE: kernel/module.c:1473:
+		if ((mod->module_init) && (mod->init_text_size)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#303: FILE: kernel/module.c:1475:
+			set_page_attributes(mod->module_init,
+						mod->module_init

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void set_all_modules_text_ro() should probably be void set_all_modules_text_ro(void)
#312: FILE: kernel/module.c:1484:
+void set_all_modules_text_ro()

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mod->module_core'
#318: FILE: kernel/module.c:1490:
+		if ((mod->module_core) && (mod->core_text_size)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mod->core_text_size'
#318: FILE: kernel/module.c:1490:
+		if ((mod->module_core) && (mod->core_text_size)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#320: FILE: kernel/module.c:1492:
+			set_page_attributes(mod->module_core,
+						mod->module_core

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mod->module_init'
#324: FILE: kernel/module.c:1496:
+		if ((mod->module_init) && (mod->init_text_size)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mod->init_text_size'
#324: FILE: kernel/module.c:1496:
+		if ((mod->module_init) && (mod->init_text_size)) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#326: FILE: kernel/module.c:1498:
+			set_page_attributes(mod->module_init,
+						mod->module_init

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#334: FILE: kernel/module.c:1506:
+static void set_section_ro_nx(void *base,
+			unsigned long text_size,
+			unsigned long ro_size,
+			unsigned long total_size) { }

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#335: FILE: kernel/module.c:1507:
+static void set_section_ro_nx(void *base,
+			unsigned long text_size,

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void set_all_modules_text_rw() should probably be void set_all_modules_text_rw(void)
#340: FILE: kernel/module.c:1512:
+void set_all_modules_text_rw() { }

ERROR:FUNCTION_WITHOUT_ARGS: Bad function definition - void set_all_modules_text_ro() should probably be void set_all_modules_text_ro(void)
#341: FILE: kernel/module.c:1513:
+void set_all_modules_text_ro() { }

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#411: FILE: kernel/module.c:2552:
+	set_section_ro_nx(mod->module_core,
+				mod->core_text_size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#417: FILE: kernel/module.c:2558:
+	set_section_ro_nx(mod->module_init,
+				mod->init_text_size,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000010665.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 3 warnings, 20 checks, 311 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000010665.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
