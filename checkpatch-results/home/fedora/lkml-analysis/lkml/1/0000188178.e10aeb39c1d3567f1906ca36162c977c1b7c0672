ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#87: FILE: arch/x86/include/asm/linkage.h:65:
+#define __set_entry		.set ENTRY_IN, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#88: FILE: arch/x86/include/asm/linkage.h:66:
+#define __unset_entry		.set ENTRY_IN, 1

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#89: FILE: arch/x86/include/asm/linkage.h:67:
+#define __set_proc		.set PROC_IN, 0

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#90: FILE: arch/x86/include/asm/linkage.h:68:
+#define __unset_proc		.set PROC_IN, 1

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#92: FILE: arch/x86/include/asm/linkage.h:70:
+#define __macro_err \
+	.error "ENTRY/PROC unbalanced,missed,mixed"; \
+	.abort

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#96: FILE: arch/x86/include/asm/linkage.h:74:
+#define __check_entry		\
+	.ifdef ENTRY_IN;	\
+	.ifeq ENTRY_IN;		\
+	__macro_err;		\
 	.endif;			\
 	.endif

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#108: FILE: arch/x86/include/asm/linkage.h:81:
+#define __check_in_entry	\
+	.ifndef ENTRY_IN;	\
+	__macro_err;		\
+	.else;			\
+	.ifeq !ENTRY_IN;	\
+	__macro_err;		\
 	.endif;			\
 	.endif

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#120: FILE: arch/x86/include/asm/linkage.h:90:
+#define __check_proc		\
+	.ifdef PROC_IN;		\
+	.ifeq PROC_IN;		\
+	__macro_err;		\
+	.endif;			\
+	.endif

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#128: FILE: arch/x86/include/asm/linkage.h:97:
+#define __check_in_proc		\
+	.ifndef PROC_IN;	\
+	__macro_err;		\
+	.else;			\
+	.ifeq !PROC_IN;		\
+	__macro_err;		\
+	.endif;			\
+	.endif

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#140: FILE: arch/x86/include/asm/linkage.h:106:
+#define __check_entry_proc	\
+	__check_entry;		\
+	__check_proc

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#146: FILE: arch/x86/include/asm/linkage.h:112:
+#define ENTRY(name)			\
+	__check_entry_proc;		\
+	__set_entry;			\
 	.globl name;			\
 	__ALIGN;			\
 	name:

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#146: FILE: arch/x86/include/asm/linkage.h:112:
+#define ENTRY(name)			\
+	__check_entry_proc;		\
+	__set_entry;			\
 	.globl name;			\
 	__ALIGN;			\
 	name:

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#156: FILE: arch/x86/include/asm/linkage.h:119:
+#define END(name)			\
+	__check_in_entry;		\
+	__unset_entry;			\
+	__check_entry_proc;		\
 	.size name, .-name

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#156: FILE: arch/x86/include/asm/linkage.h:119:
+#define END(name)			\
+	__check_in_entry;		\
+	__unset_entry;			\
+	__check_entry_proc;		\
 	.size name, .-name

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#166: FILE: arch/x86/include/asm/linkage.h:125:
+#define PROC(name)			\
+	__check_entry_proc;		\
+	__set_proc;			\
 	.globl name;			\
 	__ALIGN;			\
 	name:

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#166: FILE: arch/x86/include/asm/linkage.h:125:
+#define PROC(name)			\
+	__check_entry_proc;		\
+	__set_proc;			\
 	.globl name;			\
 	__ALIGN;			\
 	name:

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#178: FILE: arch/x86/include/asm/linkage.h:132:
+#define ENDPROC(name)			\
+	__check_in_proc;		\
+	__unset_proc;			\
+	__check_entry_proc;		\
+	.type name, @function;		\
+	.size name, .-name

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'name' - possible side-effects?
#178: FILE: arch/x86/include/asm/linkage.h:132:
+#define ENDPROC(name)			\
+	__check_in_proc;		\
+	__unset_proc;			\
+	__check_entry_proc;		\
+	.type name, @function;		\
+	.size name, .-name

ERROR:SPACING: space required before that '-' (ctx:VxV)
#183: FILE: arch/x86/include/asm/linkage.h:137:
+	.size name, .-name
 	             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000188178.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 15 errors, 0 warnings, 4 checks, 122 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000188178.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
