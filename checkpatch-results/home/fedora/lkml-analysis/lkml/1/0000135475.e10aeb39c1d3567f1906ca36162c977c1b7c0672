CHECK:CAMELCASE: Avoid CamelCase: <Sg_device>
#119: FILE: drivers/scsi/sg.c:206:
+static Sg_device *sg_lookup_dev(int dev);

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sfp"
#234: FILE: drivers/scsi/sg.c:1266:
+	if (WARN_ON(sfp == NULL))

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#240: FILE: drivers/scsi/sg.c:1271:
+		printk(KERN_INFO "sg_rq_end_io: device detached\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#279: FILE: drivers/scsi/sg.c:1320:
+	if (likely(done)) {
[...]
-	}
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#287: FILE: drivers/scsi/sg.c:1326:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#356: FILE: drivers/scsi/sg.c:1509:
+	SCSI_LOG_TIMEOUT(3,
+		printk("sg_device_destroy: %s\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#356: FILE: drivers/scsi/sg.c:1509:
+		printk("sg_device_destroy: %s\n",

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sg_device_destroy', this function's name, in a string
#356: FILE: drivers/scsi/sg.c:1509:
+		printk("sg_device_destroy: %s\n",

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#357: FILE: drivers/scsi/sg.c:1510:
+		printk("sg_device_destroy: %s\n",
+			sdp->disk->disk_name));

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#379: FILE: drivers/scsi/sg.c:1526:
+	SCSI_LOG_TIMEOUT(3, printk("sg_remove: %s\n", sdp->disk->disk_name));

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'sg_remove', this function's name, in a string
#379: FILE: drivers/scsi/sg.c:1526:
+	SCSI_LOG_TIMEOUT(3, printk("sg_remove: %s\n", sdp->disk->disk_name));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#508: FILE: drivers/scsi/sg.c:2093:
+		SCSI_LOG_TIMEOUT(6,
+			printk("sg_remove_sfp:    bufflen=%d, k_use_sg=%d\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#508: FILE: drivers/scsi/sg.c:2093:
+			printk("sg_remove_sfp:    bufflen=%d, k_use_sg=%d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#509: FILE: drivers/scsi/sg.c:2094:
+			printk("sg_remove_sfp:    bufflen=%d, k_use_sg=%d\n",
+				(int) sfp->reserve.bufflen,

CHECK:SPACING: No space is necessary after a cast
#509: FILE: drivers/scsi/sg.c:2094:
+				(int) sfp->reserve.bufflen,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#510: FILE: drivers/scsi/sg.c:2095:
+				(int) sfp->reserve.k_use_sg));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#515: FILE: drivers/scsi/sg.c:2100:
+	SCSI_LOG_TIMEOUT(6,
+		printk("sg_remove_sfp: %s, sfp=0x%p\n",

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#515: FILE: drivers/scsi/sg.c:2100:
+		printk("sg_remove_sfp: %s, sfp=0x%p\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#516: FILE: drivers/scsi/sg.c:2101:
+		printk("sg_remove_sfp: %s, sfp=0x%p\n",
+			sdp->disk->disk_name,

CHECK:BRACES: braces {} should be used on all arms of this statement
#624: FILE: drivers/scsi/sg.c:2194:
+	if (!sdp)
[...]
+	else if (sdp->detached) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#631: FILE: drivers/scsi/sg.c:2201:
+	} else

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "fp"
#693: FILE: drivers/scsi/sg.c:2520:
+	for (k = 0, fp = sdp->headfp; fp != NULL; ++k, fp = fp->nextfp) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "srp"
#704: FILE: drivers/scsi/sg.c:2532:
+				srp != NULL;

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#759: FILE: drivers/scsi/sg.c:2598:
+			seq_printf(s, "detached pending close ");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000135475.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 8 warnings, 16 checks, 664 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000135475.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
