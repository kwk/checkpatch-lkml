WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#37: 
Gitweb:     http://git.kernel.org/tip/e27454cc6352c4226ddc76f5e3a5dedd7dff456a

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#84: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#89: FILE: tools/perf/bench/sched-messaging.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#122: FILE: tools/perf/bench/sched-messaging.c:34:
+static int use_pipes = 0;

Static variables should not be initialized explicitly to zero.
Your compiler (or rather your loader) automatically does
it for you.

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#124: FILE: tools/perf/bench/sched-messaging.c:36:
+static unsigned int thread_mode = 0;

ERROR:INITIALISED_STATIC: do not initialise statics to 0
#126: FILE: tools/perf/bench/sched-messaging.c:38:
+static int simple = 0;

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'ready', this function's name, in a string
#169: FILE: tools/perf/bench/sched-messaging.c:81:
+		barf("CLIENT: ready write");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#191: FILE: tools/perf/bench/sched-messaging.c:103:
+				    sizeof(data)-done);
 				                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#203: FILE: tools/perf/bench/sched-messaging.c:115:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
#205: FILE: tools/perf/bench/sched-messaging.c:117:
+static void *receiver(struct receiver_context* ctx)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#290: FILE: tools/perf/bench/sched-messaging.c:202:
+static unsigned int group(pthread_t *pth,
+		unsigned int num_fds,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#308: FILE: tools/perf/bench/sched-messaging.c:220:
+
+

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#331: FILE: tools/perf/bench/sched-messaging.c:243:
+		pth[num_fds+i] = create_worker(snd_ctx, (void *)sender);
 		           ^

WARNING:SPLIT_STRING: quoted string split across lines
#354: FILE: tools/perf/bench/sched-messaging.c:266:
+		    "Do simple output (this maybe useful for"
+		    "processing by scripts or graph tools like gnuplot)"),

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:MISSING_SPACE: break quoted strings at a space character
#354: FILE: tools/perf/bench/sched-messaging.c:266:
+		    "Do simple output (this maybe useful for"
+		    "processing by scripts or graph tools like gnuplot)"),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#364: FILE: tools/perf/bench/sched-messaging.c:276:
+int bench_sched_messaging(int argc, const char **argv,
+		    const char *prefix __used)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#385: FILE: tools/perf/bench/sched-messaging.c:297:
+		total_children += group(pth_tab+total_children, num_fds,
 		                               ^

CHECK:BRACES: braces {} should be used on all arms of this statement
#407: FILE: tools/perf/bench/sched-messaging.c:319:
+	if (simple)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#408: FILE: tools/perf/bench/sched-messaging.c:320:
+		printf("%lu.%03lu\n", diff.tv_sec, diff.tv_usec/1000);
 		                                               ^

CHECK:BRACES: Unbalanced braces around else statement
#409: FILE: tools/perf/bench/sched-messaging.c:321:
+	else {

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#416: FILE: tools/perf/bench/sched-messaging.c:328:
+		       diff.tv_sec, diff.tv_usec/1000);
 		                                ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000050783.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 6 warnings, 11 checks, 332 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000050783.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
