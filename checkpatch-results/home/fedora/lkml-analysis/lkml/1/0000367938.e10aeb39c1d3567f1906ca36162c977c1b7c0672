CHECK:SPACING: No space is necessary after a cast
#92: FILE: arch/s390/mm/init.c:115:
+	pud_val(*((pud_t *) init_mm.pgd)) = _REGION3_ENTRY_EMPTY;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#104: FILE: arch/s390/mm/vmem.c:76:
+#define vmem_pud_alloc()	({ BUG(); ((pud_t *) NULL); })

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#104: FILE: arch/s390/mm/vmem.c:76:
+#define vmem_pud_alloc()	({ BUG(); ((pud_t *) NULL); })

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:NEW_TYPEDEFS: do not add new typedefs
#202: FILE: include/asm-s390/page.h:85:
+typedef struct { unsigned long pud; } pud_t;

WARNING:NEW_TYPEDEFS: do not add new typedefs
#218: FILE: include/asm-s390/page.h:103:
+typedef struct { unsigned long pud; } pud_t;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#235: FILE: include/asm-s390/pgalloc.h:46:
+#define pud_alloc_one(mm,address)		({ BUG(); ((pud_t *)2); })

ERROR:SPACING: space required after that ',' (ctx:VxV)
#235: FILE: include/asm-s390/pgalloc.h:46:
+#define pud_alloc_one(mm,address)		({ BUG(); ((pud_t *)2); })
                         ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#243: FILE: include/asm-s390/pgalloc.h:52:
+#define pgd_populate(mm, pgd, pud)		BUG()

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#244: FILE: include/asm-s390/pgalloc.h:53:
+#define pgd_populate_kernel(mm, pgd, pud)	BUG()

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#246: FILE: include/asm-s390/pgalloc.h:55:
+#define pud_populate(mm, pud, pmd)		BUG()

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#247: FILE: include/asm-s390/pgalloc.h:56:
+#define pud_populate_kernel(mm, pud, pmd)	BUG()

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#255: FILE: include/asm-s390/pgalloc.h:65:
+#define pud_alloc_one(mm,address)		({ BUG(); ((pud_t *)2); })

ERROR:SPACING: space required after that ',' (ctx:VxV)
#255: FILE: include/asm-s390/pgalloc.h:65:
+#define pud_alloc_one(mm,address)		({ BUG(); ((pud_t *)2); })
                         ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#267: FILE: include/asm-s390/pgalloc.h:77:
+#define pgd_populate(mm, pgd, pud)		BUG()

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#268: FILE: include/asm-s390/pgalloc.h:78:
+#define pgd_populate_kernel(mm, pgd, pud)	BUG()

CHECK:BIT_MACRO: Prefer using the BIT macro
#320: FILE: include/asm-s390/pgtable.h:71:
+#define PUD_SIZE	(1UL << PUD_SHIFT)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#321: FILE: include/asm-s390/pgtable.h:72:
+#define PUD_MASK	(~(PUD_SIZE-1))
                 	           ^

CHECK:SPACING: No space is necessary after a cast
#343: FILE: include/asm-s390/pgtable.h:101:
+	printk("%s:%d: bad pud %p.\n", __FILE__, __LINE__, (void *) pud_val(e))

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#343: FILE: include/asm-s390/pgtable.h:101:
+	printk("%s:%d: bad pud %p.\n", __FILE__, __LINE__, (void *) pud_val(e))

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#417: FILE: include/asm-s390/pgtable.h:563:
+static inline void pud_clear(pud_t * pud)

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#455: FILE: include/asm-s390/pgtable.h:830:
+#define pgd_index(address) (((address) >> PGDIR_SHIFT) & (PTRS_PER_PGD-1))
                                                                       ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#456: FILE: include/asm-s390/pgtable.h:831:
+#define pud_index(address) (((address) >> PUD_SHIFT) & (PTRS_PER_PUD-1))
                                                                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#457: FILE: include/asm-s390/pgtable.h:832:
+#define pmd_index(address) (((address) >> PMD_SHIFT) & (PTRS_PER_PMD-1))
                                                                     ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#458: FILE: include/asm-s390/pgtable.h:833:
+#define pte_index(address) (((address) >> PAGE_SHIFT) & (PTRS_PER_PTE-1))
                                                                      ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#469: FILE: include/asm-s390/pgtable.h:841:
+#define pud_deref(pmd) ({ BUG(); 0UL; })

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#470: FILE: include/asm-s390/pgtable.h:842:
+#define pgd_deref(pmd) ({ BUG(); 0UL; })

CHECK:SPACING: No space is necessary after a cast
#473: FILE: include/asm-s390/pgtable.h:844:
+#define pud_offset(pgd, address) ((pud_t *) pgd)

CHECK:SPACING: No space is necessary after a cast
#474: FILE: include/asm-s390/pgtable.h:845:
+#define pmd_offset(pud, address) ((pmd_t *) pud + pmd_index(address))

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'pud' may be better as '(pud)' to avoid precedence issues
#474: FILE: include/asm-s390/pgtable.h:845:
+#define pmd_offset(pud, address) ((pmd_t *) pud + pmd_index(address))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#485: FILE: include/asm-s390/pgtable.h:851:
+#define pgd_deref(pgd) ({ BUG(); 0UL; })

CHECK:SPACING: No space is necessary after a cast
#488: FILE: include/asm-s390/pgtable.h:853:
+#define pud_offset(pgd, address) ((pud_t *) pgd)

CHECK:SPACING: No space is necessary after a cast
#495: FILE: include/asm-s390/pgtable.h:857:
+	pmd_t *pmd = (pmd_t *) pud_deref(*pud);

WARNING:LINE_SPACING: Missing a blank line after declarations
#496: FILE: include/asm-s390/pgtable.h:858:
+	pmd_t *pmd = (pmd_t *) pud_deref(*pud);
+	return pmd + pmd_index(address);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#506: FILE: include/asm-s390/pgtable.h:863:
+#define pfn_pte(pfn,pgprot) mk_pte_phys(__pa((pfn) << PAGE_SHIFT),(pgprot))
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#506: FILE: include/asm-s390/pgtable.h:863:
+#define pfn_pte(pfn,pgprot) mk_pte_phys(__pa((pfn) << PAGE_SHIFT),(pgprot))
                                                                  ^

CHECK:SPACING: No space is necessary after a cast
#518: FILE: include/asm-s390/pgtable.h:870:
+#define pte_offset(pmd, addr) ((pte_t *) pmd_deref(*(pmd)) + pte_index(addr))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#519: FILE: include/asm-s390/pgtable.h:871:
+#define pte_offset_kernel(pmd, address) pte_offset(pmd,address)
                                                       ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000367938.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 16 warnings, 15 checks, 443 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000367938.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
