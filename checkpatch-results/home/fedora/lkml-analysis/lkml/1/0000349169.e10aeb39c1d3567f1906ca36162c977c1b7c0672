WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#37: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#42: FILE: fs/unionfs/main.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#145: FILE: fs/unionfs/main.c:104:
+	BUG_ON(is_negative_dentry);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#219: FILE: fs/unionfs/main.c:178:
+		printk(KERN_CRIT "unionfs: invalid interpose flag passed!\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#220: FILE: fs/unionfs/main.c:179:
+		BUG();

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#262: FILE: fs/unionfs/main.c:221:
+ * make sure the branch we just looked up (nd) makes sense:
                                            ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#268: FILE: fs/unionfs/main.c:227:
+int check_branch(struct nameidata *nd)
                                    ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#327: FILE: fs/unionfs/main.c:286:
+	struct nameidata nd;
 	                 ^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#338: FILE: fs/unionfs/main.c:297:
+		printk(KERN_ERR "unionfs: no branches specified\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#387: FILE: fs/unionfs/main.c:346:
+			printk(KERN_ERR "unionfs: invalid mode \"%s\" for "

WARNING:SPLIT_STRING: quoted string split across lines
#388: FILE: fs/unionfs/main.c:347:
+			printk(KERN_ERR "unionfs: invalid mode \"%s\" for "
+			       "branch %d\n", mode, bindex);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#393: FILE: fs/unionfs/main.c:352:
+			printk(KERN_ERR "unionfs: leftmost branch cannot be "

WARNING:SPLIT_STRING: quoted string split across lines
#394: FILE: fs/unionfs/main.c:353:
+			printk(KERN_ERR "unionfs: leftmost branch cannot be "
+			       "read-only (use \"-o ro\" to create a "

WARNING:SPLIT_STRING: quoted string split across lines
#395: FILE: fs/unionfs/main.c:354:
+			       "read-only (use \"-o ro\" to create a "
+			       "read-only union)\n");

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#400: FILE: fs/unionfs/main.c:359:
+		err = path_lookup(name, LOOKUP_FOLLOW, &nd);
 		                                        ^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#402: FILE: fs/unionfs/main.c:361:
+			printk(KERN_ERR "unionfs: error accessing "

WARNING:SPLIT_STRING: quoted string split across lines
#403: FILE: fs/unionfs/main.c:362:
+			printk(KERN_ERR "unionfs: error accessing "
+			       "lower directory '%s' (error %d)\n",

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#408: FILE: fs/unionfs/main.c:367:
+		err = check_branch(&nd);
 		                    ^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#410: FILE: fs/unionfs/main.c:369:
+			printk(KERN_ERR "unionfs: lower directory "

WARNING:SPLIT_STRING: quoted string split across lines
#411: FILE: fs/unionfs/main.c:370:
+			printk(KERN_ERR "unionfs: lower directory "
+			       "'%s' is not a valid branch\n", name);

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#412: FILE: fs/unionfs/main.c:371:
+			path_release(&nd);
 			              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#416: FILE: fs/unionfs/main.c:375:
+		lower_root_info->lower_paths[bindex].dentry = nd.dentry;
 		                                              ^^

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#417: FILE: fs/unionfs/main.c:376:
+		lower_root_info->lower_paths[bindex].mnt = nd.mnt;
 		                                           ^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#430: FILE: fs/unionfs/main.c:389:
+		printk(KERN_ERR "unionfs: no branches specified\n");

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#435: FILE: fs/unionfs/main.c:394:
+	BUG_ON(branches != (lower_root_info->bend + 1));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#457: FILE: fs/unionfs/main.c:416:
+				printk(KERN_ERR "unionfs: branches %d and "

WARNING:SPLIT_STRING: quoted string split across lines
#458: FILE: fs/unionfs/main.c:417:
+				printk(KERN_ERR "unionfs: branches %d and "
+				       "%d overlap\n", i, j);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#493: FILE: fs/unionfs/main.c:452:
+static struct unionfs_dentry_info *unionfs_parse_options(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#530: FILE: fs/unionfs/main.c:489:
+			printk(KERN_ERR "unionfs: %s requires an argument\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#538: FILE: fs/unionfs/main.c:497:
+				printk(KERN_ERR

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#550: FILE: fs/unionfs/main.c:509:
+		intval = simple_strtoul(optarg, &endptr, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#552: FILE: fs/unionfs/main.c:511:
+			printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#560: FILE: fs/unionfs/main.c:519:
+		printk(KERN_ERR

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#565: FILE: fs/unionfs/main.c:524:
+		printk(KERN_ERR "unionfs: dirs option required\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#637: FILE: fs/unionfs/main.c:596:
+		printk(KERN_ERR

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*sb->s_fs_info)...) over kzalloc(sizeof(struct unionfs_sb_info)...)
#644: FILE: fs/unionfs/main.c:603:
+	sb->s_fs_info = kzalloc(sizeof(struct unionfs_sb_info), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_crit([subsystem]dev, ... then dev_crit(dev, ... then pr_crit(...  to printk(KERN_CRIT ...
#646: FILE: fs/unionfs/main.c:605:
+		printk(KERN_CRIT "unionfs: read_super: out of memory\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#658: FILE: fs/unionfs/main.c:617:
+		printk(KERN_ERR

WARNING:SPLIT_STRING: quoted string split across lines
#660: FILE: fs/unionfs/main.c:619:
+		       "unionfs: read_super: error while parsing options "
+		       "(err = %ld)\n", PTR_ERR(lower_root_info));

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#672: FILE: fs/unionfs/main.c:631:
+	BUG_ON(bstart != 0);

WARNING:LINE_SPACING: Missing a blank line after declarations
#676: FILE: fs/unionfs/main.c:635:
+		struct dentry *d = lower_root_info->lower_paths[bindex].dentry;
+		unionfs_set_lower_super_idx(sb, bindex, d->d_sb);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#722: FILE: fs/unionfs/main.c:681:
+	/* else fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:SPLIT_STRING: quoted string split across lines
#818: FILE: fs/unionfs/main.c:777:
+MODULE_AUTHOR("Erez Zadok, Filesystems and Storage Lab, Stony Brook University"
+	      " (http://www.fsl.cs.sunysb.edu)");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000349169.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 41 warnings, 2 checks, 783 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000349169.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
