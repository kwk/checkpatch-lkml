WARNING:LINE_SPACING: Missing a blank line after declarations
#163: FILE: drivers/block/cciss.c:742:
+	drive_info_struct *drv = to_drv(dev);
+	kfree(drv);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#217: FILE: drivers/block/cciss.c:1629:
+		if (!(h->drv[curr_queue]->queue) ||
+			!(h->drv[curr_queue]->heads))

CHECK:CAMELCASE: Avoid CamelCase: <LunID>
#227: FILE: drivers/block/cciss.c:1689:
+	memcpy(scsi3addr, h->drv[log_unit]->LunID,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#228: FILE: drivers/block/cciss.c:1690:
+	memcpy(scsi3addr, h->drv[log_unit]->LunID,
+		sizeof(h->drv[log_unit]->LunID));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#281: FILE: drivers/block/cciss.c:1880:
+	memcpy(drvinfo->LunID, h->drv[drv_index]->LunID,
+		sizeof(drvinfo->LunID));

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 24)
#285: FILE: drivers/block/cciss.c:1883:
+	if (h->drv[drv_index]->raid_level != -1 &&
[...]
 			goto freeret;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#286: FILE: drivers/block/cciss.c:1884:
+	if (h->drv[drv_index]->raid_level != -1 &&
 		((memcmp(drvinfo->serial_no,

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!h->drv[drv_index]"
#342: FILE: drivers/block/cciss.c:1921:
+	if (h->drv[drv_index] == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#356: FILE: drivers/block/cciss.c:1935:
+		memcpy(h->drv[drv_index]->vendor, drvinfo->vendor,
+			VENDOR_LEN + 1);

WARNING:TYPO_SPELLING: 'tha' may be misspelled - perhaps 'than'?
#390: FILE: drivers/block/cciss.c:1974:
+ * If there are no available indexes or if tha allocation fails, then -1
                                            ^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#407: FILE: drivers/block/cciss.c:1986:
 	for (i = 0; i < CISS_MAX_LUN; i++) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "h->drv[i]"
#426: FILE: drivers/block/cciss.c:2005:
+		if (i == 0 && h->drv[i] != NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#477: FILE: drivers/block/cciss.c:2064:
+	memcpy(h->drv[drv_index]->LunID, lunid,
+		sizeof(h->drv[drv_index]->LunID));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!h->drv[i]"
#526: FILE: drivers/block/cciss.c:2187:
+		if (h->drv[i] == NULL)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#533: FILE: drivers/block/cciss.c:2193:
+			if (memcmp(h->drv[i]->LunID, lunid,
 				sizeof(lunid)) == 0) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "h->drv[i]"
#545: FILE: drivers/block/cciss.c:2204:
+			if (h->drv[i] != NULL)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "h->drv[j]"
#557: FILE: drivers/block/cciss.c:2226:
+			if (h->drv[j] != NULL &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#558: FILE: drivers/block/cciss.c:2227:
+			if (h->drv[j] != NULL &&
+				memcmp(h->drv[j]->LunID, lunid,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#559: FILE: drivers/block/cciss.c:2228:
+				memcmp(h->drv[j]->LunID, lunid,
+					sizeof(h->drv[j]->LunID)) == 0) {

WARNING:TYPO_SPELLING: 'hightest' may be misspelled - perhaps 'highest'?
#624: FILE: drivers/block/cciss.c:2361:
+	/* if it was the last disk, find the new hightest lun */
 	                                         ^^^^^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#627: FILE: drivers/block/cciss.c:2364:
+		int i, newhighest = -1;
+		for (i = 0; i <= h->highest_lun; i++) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#643: FILE: drivers/block/cciss.c:2801:
+		if (memcmp(h->drv[logvol]->LunID, drv->LunID,
 			sizeof(drv->LunID)) == 0) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000070878.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 17 checks, 606 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000070878.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
