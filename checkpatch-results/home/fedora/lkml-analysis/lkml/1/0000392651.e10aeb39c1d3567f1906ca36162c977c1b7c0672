WARNING:TYPO_SPELLING: 'alot' may be misspelled - perhaps 'a lot'?
#39: 
> impossible to apply the patch without alot of hand editing.
                                        ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#77: 
--- linux-2.6.19-gentoo-r5/include/linux/init_task.h	2007-07-12 22:03:14.000000000 +0200

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'fd' - possible side-effects?
#111: FILE: include/linux/sched.h:1030:
+#define REQUIRED_FD_INIT(fd) { .fd = fd }

WARNING:LONG_LINE: line length of 104 exceeds 100 columns
#136: FILE: include/linux/fs.h:1123:
+	void (*closing_fd) (struct inode *, struct file *, struct files_struct *files, unsigned int fd);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACING: Unnecessary space before function pointer arguments
#136: FILE: include/linux/fs.h:1123:
+	void (*closing_fd) (struct inode *, struct file *, struct files_struct *files, unsigned int fd);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct inode *' should also have an identifier name
#136: FILE: include/linux/fs.h:1123:
+	void (*closing_fd) (struct inode *, struct file *, struct files_struct *files, unsigned int fd);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#136: FILE: include/linux/fs.h:1123:
+	void (*closing_fd) (struct inode *, struct file *, struct files_struct *files, unsigned int fd);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#144: FILE: include/linux/fs.h:1501:
+extern int required_fds_are_bad(struct task_struct *task);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#145: FILE: include/linux/fs.h:1502:
+extern void add_required_fd(struct task_struct *task,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#147: FILE: include/linux/fs.h:1504:
+extern void del_required_fds(struct task_struct *task);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#244: FILE: fs/open.c:1044:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#248: FILE: fs/open.c:1048:
+EXPORT_SYMBOL(required_fds_are_bad);

EXPORT_SYMBOL should immediately follow the symbol to be exported.

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#257: FILE: fs/open.c:1057:
+EXPORT_SYMBOL(add_required_fd);

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#266: FILE: fs/open.c:1066:
+EXPORT_SYMBOL(del_required_fds);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#281: FILE: fs/open.c:1107:
+	 * that are really interested in learning this? */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:SPACING: space required before the open parenthesis '('
#283: FILE: fs/open.c:1109:
+		if(task->files == files)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#285: FILE: fs/open.c:1111:
+^I$

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#295: FILE: fs/open.c:1125:
+		filp->f_op->closing_fd(inode, filp, files, fd);
 		                              ^^^^

WARNING:LINE_SPACING: Missing a blank line after declarations
#295: FILE: fs/open.c:1125:
+		struct inode *inode = filp->f_dentry->d_inode;
+		filp->f_op->closing_fd(inode, filp, files, fd);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000392651.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 12 warnings, 4 checks, 277 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000392651.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
