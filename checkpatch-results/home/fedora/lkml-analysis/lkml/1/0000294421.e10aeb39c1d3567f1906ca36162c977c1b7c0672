WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
- sigp sense tries to retrieve information such as existence or running state

WARNING:BAD_SIGN_OFF: Duplicate signature
#54: 
Signed-off-by: Carsten Otte <cotte@de.ibm.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:ENOTSUPP: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
#105: FILE: arch/s390/kvm/intercept.c:131:
+			rc = -ENOTSUPP;

ENOTSUPP is not a standard error code and should be avoided in new patches.
EOPNOTSUPP should be used instead.

See: https://lore.kernel.org/netdev/20200510182252.GA411829@lunn.ch/

CHECK:BRACES: braces {} should be used on all arms of this statement
#108: FILE: arch/s390/kvm/intercept.c:134:
+	if (vcpu->arch.local_int.action_bits & ACTION_STOP_ON_STOP) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:ENOTSUPP: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
#111: FILE: arch/s390/kvm/intercept.c:137:
+		rc = -ENOTSUPP;

CHECK:BRACES: Unbalanced braces around else statement
#112: FILE: arch/s390/kvm/intercept.c:138:
+	} else

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#161: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#166: FILE: arch/s390/kvm/sigp.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#210: FILE: arch/s390/kvm/sigp.c:45:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!fi->local_int[cpu_addr]"
#220: FILE: arch/s390/kvm/sigp.c:55:
+	if (fi->local_int[cpu_addr] == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!li"
#255: FILE: arch/s390/kvm/sigp.c:90:
+	if (li == NULL) {

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#264: FILE: arch/s390/kvm/sigp.c:99:
+	if (waitqueue_active(&li->wq))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!li"
#292: FILE: arch/s390/kvm/sigp.c:127:
+	if (li == NULL) {

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#304: FILE: arch/s390/kvm/sigp.c:139:
+	if (waitqueue_active(&li->wq))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#320: FILE: arch/s390/kvm/sigp.c:155:
+		printk(KERN_WARNING "kvm: request to switch to ESA/390 mode"

WARNING:SPLIT_STRING: quoted string split across lines
#321: FILE: arch/s390/kvm/sigp.c:156:
+		printk(KERN_WARNING "kvm: request to switch to ESA/390 mode"
+							" not supported");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:ENOTSUPP: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
#329: FILE: arch/s390/kvm/sigp.c:164:
+		rc = -ENOTSUPP;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#346: FILE: arch/s390/kvm/sigp.c:181:
+	if ((copy_from_guest(vcpu, &tmp,
+		(u64) (address + vcpu->kvm->arch.guest_origin) , 1)) ||

CHECK:SPACING: No space is necessary after a cast
#346: FILE: arch/s390/kvm/sigp.c:181:
+		(u64) (address + vcpu->kvm->arch.guest_origin) , 1)) ||

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#346: FILE: arch/s390/kvm/sigp.c:181:
+		(u64) (address + vcpu->kvm->arch.guest_origin) , 1)) ||
 		                                               ^

CHECK:SPACING: No space is necessary after a cast
#347: FILE: arch/s390/kvm/sigp.c:182:
+	   (copy_from_guest(vcpu, &tmp, (u64) (address +

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'cpu_addr >= KVM_MAX_VCPUS'
#360: FILE: arch/s390/kvm/sigp.c:195:
+	if ((cpu_addr >= KVM_MAX_VCPUS) || (li == NULL)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'li == NULL'
#360: FILE: arch/s390/kvm/sigp.c:195:
+	if ((cpu_addr >= KVM_MAX_VCPUS) || (li == NULL)) {

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!li"
#360: FILE: arch/s390/kvm/sigp.c:195:
+	if ((cpu_addr >= KVM_MAX_VCPUS) || (li == NULL)) {

WARNING:WAITQUEUE_ACTIVE: waitqueue_active without comment
#381: FILE: arch/s390/kvm/sigp.c:216:
+	if (waitqueue_active(&li->wq))

WARNING:ENOTSUPP: ENOTSUPP is not a SUSV4 error code, prefer EOPNOTSUPP
#444: FILE: arch/s390/kvm/sigp.c:279:
+		return -ENOTSUPP;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000294421.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 13 warnings, 12 checks, 390 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000294421.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
