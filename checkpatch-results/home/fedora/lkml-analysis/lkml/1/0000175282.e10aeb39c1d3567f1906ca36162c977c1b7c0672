WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#45: 
Subject: [PATCH 2/2] [Target_Core_Mod/ConfigFS]: Updates for PERSISTENT_RESERVE

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#107: FILE: drivers/lio-core/target_core_configfs.c:794:
+	if (!(pr_reg = dev->dev_pr_res_holder)) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:SPACING: spaces preferred around that '+' (ctx:VxO)
#108: FILE: drivers/lio-core/target_core_configfs.c:795:
+		*len += sprintf(page+*len, "No SPC-3 Reservation holder\n");
 		                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before that '*' (ctx:OxV)
#108: FILE: drivers/lio-core/target_core_configfs.c:795:
+		*len += sprintf(page+*len, "No SPC-3 Reservation holder\n");
 		                     ^

ERROR:TRAILING_WHITESPACE: trailing whitespace
#110: FILE: drivers/lio-core/target_core_configfs.c:797:
+^I^Ireturn(*len);^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#110: FILE: drivers/lio-core/target_core_configfs.c:797:
+		return(*len);	

return is not a function and as such doesn't need parentheses::

  return (bar);

can simply be::

  return bar;

CHECK:SPACING: spaces preferred around that '+' (ctx:VxO)
#113: FILE: drivers/lio-core/target_core_configfs.c:800:
+	*len += sprintf(page+*len, "SPC-3 Reservation FABRIC[%s]: Initiator: %s\n",
 	                    ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#113: FILE: drivers/lio-core/target_core_configfs.c:800:
+	*len += sprintf(page+*len, "SPC-3 Reservation FABRIC[%s]: Initiator: %s\n",
 	                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxO)
#126: FILE: drivers/lio-core/target_core_configfs.c:817:
+		*len += sprintf(page+*len, "No SPC-2 Reservation holder\n");
 		                    ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#126: FILE: drivers/lio-core/target_core_configfs.c:817:
+		*len += sprintf(page+*len, "No SPC-2 Reservation holder\n");
 		                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxO)
#131: FILE: drivers/lio-core/target_core_configfs.c:821:
+	*len += sprintf(page+*len, "SPC-2 Reservation FABRIC[%s]: Initiator: %s\n",
 	                    ^

ERROR:SPACING: space required before that '*' (ctx:OxV)
#131: FILE: drivers/lio-core/target_core_configfs.c:821:
+	*len += sprintf(page+*len, "SPC-2 Reservation FABRIC[%s]: Initiator: %s\n",
 	                     ^

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#146: FILE: drivers/lio-core/target_core_configfs.c:873:
+	if (!(dev = su_dev->se_dev_ptr))

ERROR:TRAILING_WHITESPACE: trailing whitespace
#152: FILE: drivers/lio-core/target_core_configfs.c:876:
+^Iif (T10_RES(su_dev)->res_type != SPC3_PERSISTENT_RESERVATIONS) $

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: drivers/lio-core/target_core_configfs.c:880:
+        if (!(pr_reg = dev->dev_pr_res_holder)) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: drivers/lio-core/target_core_configfs.c:880:
+        if (!(pr_reg = dev->dev_pr_res_holder)) {$

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#156: FILE: drivers/lio-core/target_core_configfs.c:880:
+        if (!(pr_reg = dev->dev_pr_res_holder)) {

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#159: FILE: drivers/lio-core/target_core_configfs.c:883:
+		return(len);

WARNING:SPLIT_STRING: quoted string split across lines
#167: FILE: drivers/lio-core/target_core_configfs.c:891:
+		len = sprintf(page, "SPC-3 Reservation holder: All Target"
+			" Ports reserved\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:BRACES: Unbalanced braces around else statement
#168: FILE: drivers/lio-core/target_core_configfs.c:892:
+	else {

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:TRAILING_WHITESPACE: trailing whitespace
#177: FILE: drivers/lio-core/target_core_configfs.c:901:
+^I^I^I" Port reserved\n");^I$

WARNING:SPLIT_STRING: quoted string split across lines
#177: FILE: drivers/lio-core/target_core_configfs.c:901:
+		len = sprintf(page, "SPC-3 Reservation holder: Single Target"
+			" Port reserved\n");	

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#178: FILE: drivers/lio-core/target_core_configfs.c:902:
+		len += sprintf(page+len, "SPC-3 Reservation holder: Fabric: "
 		                   ^

WARNING:SPLIT_STRING: quoted string split across lines
#179: FILE: drivers/lio-core/target_core_configfs.c:903:
+		len += sprintf(page+len, "SPC-3 Reservation holder: Fabric: "
+			" %s Node Endpoint: %s\n", tfo->get_fabric_name(),

ERROR:TRAILING_WHITESPACE: trailing whitespace
#180: FILE: drivers/lio-core/target_core_configfs.c:904:
+^I^I^Itfo->tpg_get_wwn(se_tpg));^I$

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#181: FILE: drivers/lio-core/target_core_configfs.c:905:
+		len += sprintf(page+len, "SPC-3 Reservation holder: Portal"
 		                   ^

WARNING:TYPO_SPELLING: 'Identifer' may be misspelled - perhaps 'Identifier'?
#182: FILE: drivers/lio-core/target_core_configfs.c:906:
+			" Identifer Tag: %hu Logical Unit: %u\n",
 			  ^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPLIT_STRING: quoted string split across lines
#182: FILE: drivers/lio-core/target_core_configfs.c:906:
+		len += sprintf(page+len, "SPC-3 Reservation holder: Portal"
+			" Identifer Tag: %hu Logical Unit: %u\n",

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#220: FILE: drivers/lio-core/target_core_configfs.c:953:
+	len += sprintf(page+len, "SPC-3 PR Registrations:\n");
 	                   ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#234: FILE: drivers/lio-core/target_core_configfs.c:975:
+		len += sprintf(page+len, "None\n");
 		                   ^

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#244: FILE: drivers/lio-core/target_core_configfs.c:985:
+static ssize_t target_core_dev_pr_show_attr_res_pr_type (

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#244: FILE: drivers/lio-core/target_core_configfs.c:985:
+static ssize_t target_core_dev_pr_show_attr_res_pr_type (

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#252: FILE: drivers/lio-core/target_core_configfs.c:993:
+	if (!(dev = su_dev->se_dev_ptr))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#259: FILE: drivers/lio-core/target_core_configfs.c:1000:
+	if (!(pr_reg = dev->dev_pr_res_holder)) {

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#262: FILE: drivers/lio-core/target_core_configfs.c:1003:
+		return(len);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#265: FILE: drivers/lio-core/target_core_configfs.c:1006:
+	len = sprintf(page, "SPC-3 Reservation Type: %s\n",
+		core_scsi3_pr_dump_type(pr_reg->pr_res_type));

ERROR:RETURN_PARENTHESES: return is not a function, parentheses are not required
#268: FILE: drivers/lio-core/target_core_configfs.c:1009:
+	return(len);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000175282.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 18 errors, 8 warnings, 11 checks, 187 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000175282.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
