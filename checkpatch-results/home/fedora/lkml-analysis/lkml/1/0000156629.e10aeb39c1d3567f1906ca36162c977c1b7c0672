WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
Add new sysfs interface /sys/class/net/ethXXX/rx_queueXXX/processing_cpu. Admin

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#97: FILE: include/linux/netdevice.h:1802:
+extern struct net_device *alloc_netdev_rxtx_mq(int sizeof_priv,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#98: FILE: include/linux/netdevice.h:1803:
+extern struct net_device *alloc_netdev_rxtx_mq(int sizeof_priv,
+				const char *name,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#111: FILE: include/linux/etherdevice.h:54:
+extern struct net_device *alloc_etherdev_rxtx_mq(int sizeof_priv,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#112: FILE: include/linux/etherdevice.h:55:
+extern struct net_device *alloc_etherdev_rxtx_mq(int sizeof_priv,
+		unsigned int rx_queue_count, unsigned int tx_queue_count);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#124: FILE: net/core/dev.c:4866:
+struct net_device *alloc_netdev_rxtx_mq(int sizeof_priv,
+		const char *name,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#136: FILE: net/core/dev.c:4878:
+		rx = kcalloc(rx_queue_count,
+			sizeof(struct netdev_queue_attr),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#139: FILE: net/core/dev.c:4881:
+			printk(KERN_ERR "alloc_netdev: Unable to allocate "

WARNING:SPLIT_STRING: quoted string split across lines
#140: FILE: net/core/dev.c:4882:
+			printk(KERN_ERR "alloc_netdev: Unable to allocate "
+					"rx attributes.\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#145: FILE: net/core/dev.c:4887:
+		for (i = 0; i < rx_queue_count; i ++)
 		                                  ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#174: FILE: net/core/net-sysfs.c:423:
+#define RX_QUEUE_ATTR(name)				\
+static struct kobj_attribute name##_attr =		\
+	__ATTR(name, 0644, show_##name, store_##name);

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#179: FILE: net/core/net-sysfs.c:428:
+static ssize_t show_processing_cpu(struct kobject *kobj,
+			struct kobj_attribute *attr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#186: FILE: net/core/net-sysfs.c:435:
+static ssize_t store_processing_cpu(struct kobject *kobj,
+		struct kobj_attribute *attr,

WARNING:LINE_SPACING: Missing a blank line after declarations
#191: FILE: net/core/net-sysfs.c:440:
+	int var;
+	sscanf(buf, "%d", &var);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:NAKED_SSCANF: unchecked sscanf return value
#191: FILE: net/core/net-sysfs.c:440:
+	sscanf(buf, "%d", &var);

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#191: FILE: net/core/net-sysfs.c:440:
+	sscanf(buf, "%d", &var);

CHECK:BRACES: braces {} should be used on all arms of this statement
#192: FILE: net/core/net-sysfs.c:441:
+	if ((var >= 0 && var < nr_cpu_ids) || var == -1) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#195: FILE: net/core/net-sysfs.c:444:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#212: FILE: net/core/net-sysfs.c:461:
+static int sysfs_net_remove_rx_queue(struct net_device *net,
+		int rx_queue_count)

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#216: FILE: net/core/net-sysfs.c:465:
+	for (i = 0; i < rx_queue_count; i ++)
 	                                  ^

ERROR:SPACING: space prohibited before that '++' (ctx:WxB)
#235: FILE: net/core/net-sysfs.c:484:
+	for (i = 0; i < net->num_rx_queues; i ++) {
 	                                      ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#238: FILE: net/core/net-sysfs.c:487:
+		retval = kobject_init_and_add(&net->_rx_attr[i].kobj,
+				&ktype_rx_queue,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#298: FILE: net/ethernet/eth.c:378:
+struct net_device *alloc_etherdev_rxtx_mq(int sizeof_priv,
+		unsigned int rx_queue_count, unsigned int tx_queue_count)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000156629.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 7 warnings, 13 checks, 242 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000156629.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
