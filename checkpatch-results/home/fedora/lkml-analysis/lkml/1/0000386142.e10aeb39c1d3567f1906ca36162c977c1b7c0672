CHECK:BRACES: braces {} should be used on all arms of this statement
#127: FILE: arch/i386/kernel/traps.c:327:
+			if (rdmsr_safe(__get_cpu_var(ler_msr), &from, &hi) == 0
[...]
+			} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#128: FILE: arch/i386/kernel/traps.c:328:
+			if (rdmsr_safe(__get_cpu_var(ler_msr), &from, &hi) == 0
+			    && rdmsr_safe(__get_cpu_var(ler_msr) + 1, &to, &hi) == 0) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#129: FILE: arch/i386/kernel/traps.c:329:
+				printk("\n" KERN_EMERG

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#131: FILE: arch/i386/kernel/traps.c:331:
+				printk(KERN_EMERG " from %08x", from);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_emerg([subsystem]dev, ... then dev_emerg(dev, ... then pr_emerg(...  to printk(KERN_EMERG ...
#133: FILE: arch/i386/kernel/traps.c:333:
+				printk(KERN_EMERG " to %08x", to);

CHECK:BRACES: Unbalanced braces around else statement
#135: FILE: arch/i386/kernel/traps.c:335:
+			} else

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#148: FILE: arch/i386/kernel/traps.c:380:
+void ler_enable(void) {

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#153: FILE: arch/i386/kernel/traps.c:385:
+		if (rdmsr_safe(MSR_IA32_DEBUGCTLMSR, &lo, &hi) < 0
+		    || wrmsr_safe(MSR_IA32_DEBUGCTLMSR, lo | 1, hi) < 0)

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#179: FILE: arch/i386/kernel/traps.c:1276:
+__setup("noler", ler_setup);

CHECK:BRACES: braces {} should be used on all arms of this statement
#237: FILE: arch/x86_64/kernel/traps.c:432:
+			if (checking_rdmsrl(__get_cpu_var(ler_msr), from) == 0
[...]
+			} else
[...]

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#238: FILE: arch/x86_64/kernel/traps.c:433:
+			if (checking_rdmsrl(__get_cpu_var(ler_msr), from) == 0
+			    && checking_rdmsrl(__get_cpu_var(ler_msr) + 1, to) == 0) {

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#239: FILE: arch/x86_64/kernel/traps.c:434:
+				printk("last branch before last exception/interrupt\n");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#240: FILE: arch/x86_64/kernel/traps.c:435:
+				printk(" from ");

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#242: FILE: arch/x86_64/kernel/traps.c:437:
+				printk(" to ");

CHECK:BRACES: Unbalanced braces around else statement
#244: FILE: arch/x86_64/kernel/traps.c:439:
+			} else

ERROR:OPEN_BRACE: open brace '{' following function definitions go on the next line
#257: FILE: arch/x86_64/kernel/traps.c:483:
+void ler_enable(void) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#262: FILE: arch/x86_64/kernel/traps.c:488:
+		if (rdmsr_safe(MSR_IA32_DEBUGCTLMSR, &lo, &hi) < 0
+		    || wrmsr_safe(MSR_IA32_DEBUGCTLMSR, lo | 1, hi) < 0)

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#288: FILE: arch/x86_64/kernel/traps.c:1172:
+__setup("noler", ler_setup);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#295: FILE: include/asm-i386/msr-index.h:66:
+#define MSR_P4_LER_FROM_LIP ^I^I0x000001d7$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#296: FILE: include/asm-i386/msr-index.h:67:
+#define MSR_P4_LER_TO_LIP ^I^I0x000001d8$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#320: FILE: include/asm-x86_64/msr.h:66:
+#define checking_rdmsrl(msr,val) ({				\
                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000386142.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 8 warnings, 10 checks, 253 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000386142.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
