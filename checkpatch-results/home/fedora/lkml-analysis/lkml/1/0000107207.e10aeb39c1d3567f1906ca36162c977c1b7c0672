CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#65: FILE: kernel/trace/trace_ksym.c:151:
+	hlist_for_each_entry_safe(entry, node, node1, &ksym_filter_head,
+								ksym_hlist) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around entry->ksym_hlist
#68: FILE: kernel/trace/trace_ksym.c:154:
+		hlist_del_rcu(&(entry->ksym_hlist));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#75: FILE: kernel/trace/trace_ksym.c:161:
+		if (strncmp(entry->ksym_hbp->info.name, KSYM_SELFTEST_ENTRY,
+					strlen(KSYM_SELFTEST_ENTRY)) != 0)

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'count == 1'
#129: FILE: kernel/trace/trace_ksym.c:293:
+	if ((count == 1) && !isalnum(input_string[0])) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'op == 0'
#140: FILE: kernel/trace/trace_ksym.c:304:
+	if ((strncmp(ksymname, "*", strlen("*")) == 0) && (op == 0)) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000107207.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 0 warnings, 5 checks, 131 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000107207.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
