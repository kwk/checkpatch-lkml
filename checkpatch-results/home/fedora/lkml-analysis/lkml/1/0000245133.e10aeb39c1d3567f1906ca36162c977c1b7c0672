CHECK:MACRO_ARG_REUSE: Macro argument reuse 'nest_lock' - possible side-effects?
#67: FILE: include/linux/spinlock.h:186:
+# define spin_lock_nest_lock(lock, nest_lock)				\
+	 do {								\
+		 typecheck(struct lockdep_map *, &nest_lock->dep_map);	\
+		 _spin_lock_nest_lock(lock, &nest_lock->dep_map);	\
+	 } while (0)

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'nest_lock' may be better as '(nest_lock)' to avoid precedence issues
#67: FILE: include/linux/spinlock.h:186:
+# define spin_lock_nest_lock(lock, nest_lock)				\
+	 do {								\
+		 typecheck(struct lockdep_map *, &nest_lock->dep_map);	\
+		 _spin_lock_nest_lock(lock, &nest_lock->dep_map);	\
+	 } while (0)

WARNING:TABSTOP: Statements should start on a tabstop
#68: FILE: include/linux/spinlock.h:187:
+	 do {								\

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (9, 17)
#68: FILE: include/linux/spinlock.h:187:
+	 do {								\
+		 typecheck(struct lockdep_map *, &nest_lock->dep_map);	\

WARNING:TABSTOP: Statements should start on a tabstop
#71: FILE: include/linux/spinlock.h:190:
+	 } while (0)

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#102: FILE: kernel/spinlock.c:326:
+EXPORT_SYMBOL(_spin_lock_nest_lock)

EXPORT_SYMBOL should immediately follow the symbol to be exported.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000245133.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 2 checks, 47 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000245133.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
