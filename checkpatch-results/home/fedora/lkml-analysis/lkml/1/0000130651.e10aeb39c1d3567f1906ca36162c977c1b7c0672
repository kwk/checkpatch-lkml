WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#38: FILE: Makefile:4:
+EXTRAVERSION = .22
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:CODE_INDENT: code indent should use tabs where possible
#125: FILE: arch/powerpc/kernel/signal.c:34:
+        oldsp = get_clean_sp(regs, is_32);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: arch/powerpc/kernel/signal.c:34:
+        oldsp = get_clean_sp(regs, is_32);$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#188: FILE: arch/x86/boot/memory.c:31:
+		/* Important: %edx and %esi are clobbered by some BIOSes,
+		   so they must be either used for the error output

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:TYPO_SPELLING: 'initalization' may be misspelled - perhaps 'initialization'?
#212: FILE: arch/x86/kernel/cpu/mtrr/generic.c:53:
+ * to 1 during BIOS initalization of the fixed MTRRs, then cleared to
                     ^^^^^^^^^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'boot_cpu_data.x86_vendor == X86_VENDOR_AMD'
#219: FILE: arch/x86/kernel/cpu/mtrr/generic.c:60:
+	if (!((boot_cpu_data.x86_vendor == X86_VENDOR_AMD) &&
+	      (boot_cpu_data.x86 >= 0x0f)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'boot_cpu_data.x86 >= 0x0f'
#219: FILE: arch/x86/kernel/cpu/mtrr/generic.c:60:
+	if (!((boot_cpu_data.x86_vendor == X86_VENDOR_AMD) &&
+	      (boot_cpu_data.x86 >= 0x0f)))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#225: FILE: arch/x86/kernel/cpu/mtrr/generic.c:66:
+		printk(KERN_ERR "MTRR: CPU %u: SYSCFG[MtrrFixDramModEn]"

WARNING:SPLIT_STRING: quoted string split across lines
#226: FILE: arch/x86/kernel/cpu/mtrr/generic.c:67:
+		printk(KERN_ERR "MTRR: CPU %u: SYSCFG[MtrrFixDramModEn]"
+		       " not cleared by BIOS, clearing this bit\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#301: FILE: arch/x86/pci/i386.c:329:
+		vma->vm_page_prot = __pgprot(

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#345: FILE: drivers/acpi/ec.c:1002:
+	/* fall through */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#351: FILE: drivers/acpi/ec.c:1005:
+	 * which require early EC, but fail to provide ECDT */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#352: FILE: drivers/acpi/ec.c:1006:
+	printk(KERN_DEBUG PREFIX "Look up EC in DSDT\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#354: FILE: drivers/acpi/ec.c:1008:
+	status = acpi_get_devices(ec_device_ids[0].id, ec_parse_device,
+					boot_ec, NULL);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#485: FILE: drivers/crypto/ixp4xx_crypto.c:312:
+static void free_buf_chain(struct device *dev, struct buffer_desc *buf,u32 phys)
                                                                       ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#546: FILE: drivers/crypto/ixp4xx_crypto.c:739:
+static struct buffer_desc *chainup_buffers(struct device *dev,
+		struct scatterlist *sg,	unsigned nbytes,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#546: FILE: drivers/crypto/ixp4xx_crypto.c:739:
+		struct scatterlist *sg,	unsigned nbytes,

ERROR:SPACING: space required after that ';' (ctx:BxV)
#562: FILE: drivers/crypto/ixp4xx_crypto.c:743:
+	for (;nbytes > 0; sg = scatterwalk_sg_next(sg)) {
 	     ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#563: FILE: drivers/crypto/ixp4xx_crypto.c:744:
+		unsigned len = min(nbytes, sg->length);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#655: FILE: drivers/crypto/ixp4xx_crypto.c:862:
+		BUG_ON(req->dst->length < nbytes);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#658: FILE: drivers/crypto/ixp4xx_crypto.c:865:
+		if (!chainup_buffers(dev, req->dst, nbytes, &dst_hook,
+					flags, DMA_FROM_DEVICE))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#678: FILE: drivers/crypto/ixp4xx_crypto.c:875:
+	if (!chainup_buffers(dev, req->src, nbytes, &src_hook,
+				flags, src_direction))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#753: FILE: drivers/crypto/ixp4xx_crypto.c:997:
+	buf = chainup_buffers(dev, req->assoc, req->assoclen, &src_hook,
+		flags, DMA_TO_DEVICE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#765: FILE: drivers/crypto/ixp4xx_crypto.c:1006:
+	buf = chainup_buffers(dev, &req_ctx->ivlist, ivsize, buf, flags,
+			DMA_BIDIRECTIONAL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#789: FILE: drivers/crypto/ixp4xx_crypto.c:1026:
+	buf = chainup_buffers(dev, req->src, cryptlen + authsize, buf, flags,
+			DMA_BIDIRECTIONAL);

ERROR:CODE_INDENT: code indent should use tabs where possible
#1069: FILE: drivers/net/bonding/bonding.h:253:
+        return bond->params.mode == BOND_MODE_TLB$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1069: FILE: drivers/net/bonding/bonding.h:253:
+        return bond->params.mode == BOND_MODE_TLB$

ERROR:CODE_INDENT: code indent should use tabs where possible
#1070: FILE: drivers/net/bonding/bonding.h:254:
+                || bond->params.mode == BOND_MODE_ALB;$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#1070: FILE: drivers/net/bonding/bonding.h:254:
+        return bond->params.mode == BOND_MODE_TLB
+                || bond->params.mode == BOND_MODE_ALB;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1070: FILE: drivers/net/bonding/bonding.h:254:
+                || bond->params.mode == BOND_MODE_ALB;$

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1151: FILE: drivers/net/r8169.c:1000:
+	/*
+	 * Some chips are unable to dump tally counters when the receiver

CHECK:CAMELCASE: Avoid CamelCase: <ChipCmd>
#1154: FILE: drivers/net/r8169.c:1003:
+	if ((RTL_R8(ChipCmd) & CmdRxEnb) == 0)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <CmdRxEnb>
#1154: FILE: drivers/net/r8169.c:1003:
+	if ((RTL_R8(ChipCmd) & CmdRxEnb) == 0)

CHECK:CAMELCASE: Avoid CamelCase: <CounterAddrLow>
#1166: FILE: drivers/net/r8169.c:1016:
+		if ((RTL_R32(CounterAddrLow) & CounterDump) == 0) {

CHECK:CAMELCASE: Avoid CamelCase: <CounterDump>
#1166: FILE: drivers/net/r8169.c:1016:
+		if ((RTL_R32(CounterAddrLow) & CounterDump) == 0) {

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#1171: FILE: drivers/net/r8169.c:1021:
+		udelay(10);

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

CHECK:CAMELCASE: Avoid CamelCase: <IntrMask>
#1227: FILE: drivers/net/r8169.c:1690:
+	RTL_W16(IntrMask, 0x0000);

CHECK:CAMELCASE: Avoid CamelCase: <IntrStatus>
#1235: FILE: drivers/net/r8169.c:1702:
+	RTL_W16(IntrStatus, 0xffff);

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1307: FILE: drivers/net/wireless/ath9k/core.h:1025:
+	spinlock_t sc_serial_rw;

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1316: FILE: drivers/net/wireless/ath9k/core.h:1074:
+/*
+ * Read and write, they both share the same lock. We do this to serialize

CHECK:BRACES: braces {} should be used on all arms of this statement
#1325: FILE: drivers/net/wireless/ath9k/core.h:1083:
+	if (ah->ah_config.serialize_regmode == SER_REG_MODE_ON) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#1327: FILE: drivers/net/wireless/ath9k/core.h:1085:
+		unsigned long flags;
+		spin_lock_irqsave(&ah->ah_sc->sc_serial_rw, flags);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Unbalanced braces around else statement
#1330: FILE: drivers/net/wireless/ath9k/core.h:1088:
+	} else

WARNING:LINE_SPACING: Missing a blank line after declarations
#1337: FILE: drivers/net/wireless/ath9k/core.h:1095:
+	u32 val;
+	if (ah->ah_config.serialize_regmode == SER_REG_MODE_ON) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1337: FILE: drivers/net/wireless/ath9k/core.h:1095:
+	if (ah->ah_config.serialize_regmode == SER_REG_MODE_ON) {
[...]
+	} else
[...]

WARNING:LINE_SPACING: Missing a blank line after declarations
#1339: FILE: drivers/net/wireless/ath9k/core.h:1097:
+		unsigned long flags;
+		spin_lock_irqsave(&ah->ah_sc->sc_serial_rw, flags);

CHECK:BRACES: Unbalanced braces around else statement
#1342: FILE: drivers/net/wireless/ath9k/core.h:1100:
+	} else

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1358: FILE: drivers/net/wireless/ath9k/hw.c:374:
+	/*
+	 * We need this for PCI devices only (Cardbus, PCI, miniPCI)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1373: FILE: drivers/net/wireless/ath9k/hw.c:389:
+       if (num_possible_cpus() > 1)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#1373: FILE: drivers/net/wireless/ath9k/hw.c:389:
+       if (num_possible_cpus() > 1)
+               ah->ah_config.serialize_regmode = SER_REG_MODE_AUTO;

ERROR:CODE_INDENT: code indent should use tabs where possible
#1374: FILE: drivers/net/wireless/ath9k/hw.c:390:
+               ah->ah_config.serialize_regmode = SER_REG_MODE_AUTO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1374: FILE: drivers/net/wireless/ath9k/hw.c:390:
+               ah->ah_config.serialize_regmode = SER_REG_MODE_AUTO;$

CHECK:CAMELCASE: Avoid CamelCase: <ah_macVersion>
#1383: FILE: drivers/net/wireless/ath9k/hw.c:3316:
+		if (ah->ah_macVersion == AR_SREV_VERSION_5416_PCI ||

CHECK:CAMELCASE: Avoid CamelCase: <ah_isPciExpress>
#1384: FILE: drivers/net/wireless/ath9k/hw.c:3317:
+		    (AR_SREV_9280(ah) && !ah->ah_isPciExpress)) {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1499: FILE: drivers/usb/host/ehci-q.c:343:
 			if ((token & QTD_STS_HALT) != 0) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1504: FILE: drivers/usb/host/ehci-q.c:348:
+				if ((token & QTD_STS_XACT) &&
+						QTD_CERR(token) == 0 &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1508: FILE: drivers/usb/host/ehci-q.c:352:
+					ehci_dbg(ehci,
+	"detected XactErr len %d/%d retry %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1521: FILE: drivers/usb/host/ehci-q.c:365:
+					qtd->hw_token = cpu_to_hc32(ehci,
+							token);

WARNING:MEMORY_BARRIER: memory barrier without comment
#1522: FILE: drivers/usb/host/ehci-q.c:366:
+					wmb();

ERROR:SPACING: space prohibited before that close parenthesis ')'
#1665: FILE: drivers/usb/storage/unusual_devs.h:1251:
+		US_FL_IGNORE_RESIDUE | US_FL_MAX_SECTORS_64 ),

CHECK:CAMELCASE: Avoid CamelCase: <pSMB>
#1706: FILE: fs/cifs/cifssmb.c:2353:
+		pSMB->OldFileName[name_len] = 0x04;

CHECK:CAMELCASE: Avoid CamelCase: <OldFileName>
#1706: FILE: fs/cifs/cifssmb.c:2353:
+		pSMB->OldFileName[name_len] = 0x04;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1720: FILE: fs/cifs/connect.c:3552:
+				    kzalloc(2*(length + 1), GFP_KERNEL);
 				             ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1775: FILE: fs/dquot.c:729:
+		if (inode->i_state & (I_FREEING|I_CLEAR|I_WILL_FREE))
 		                               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1775: FILE: fs/dquot.c:729:
+		if (inode->i_state & (I_FREEING|I_CLEAR|I_WILL_FREE))
 		                                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1788: FILE: fs/drop_caches.c:21:
+		if (inode->i_state & (I_FREEING|I_CLEAR|I_WILL_FREE))
 		                               ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1788: FILE: fs/drop_caches.c:21:
+		if (inode->i_state & (I_FREEING|I_CLEAR|I_WILL_FREE))
 		                                       ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1817: FILE: fs/fs-writeback.c:542:
+					(I_FREEING|I_CLEAR|I_WILL_FREE|I_NEW))
 					          ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1817: FILE: fs/fs-writeback.c:542:
+					(I_FREEING|I_CLEAR|I_WILL_FREE|I_NEW))
 					                  ^

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1817: FILE: fs/fs-writeback.c:542:
+					(I_FREEING|I_CLEAR|I_WILL_FREE|I_NEW))
 					                              ^

ERROR:CODE_INDENT: code indent should use tabs where possible
#1838: FILE: fs/hugetlbfs/inode.c:840:
+ ^Ireturn -EINVAL;$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#1838: FILE: fs/hugetlbfs/inode.c:840:
+ ^Ireturn -EINVAL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1838: FILE: fs/hugetlbfs/inode.c:840:
+ ^Ireturn -EINVAL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2216: FILE: net/ipv4/netfilter/ip_tables.c:506:
+^I^I^I    ^I^I    IPT_STANDARD_TARGET) == 0) &&$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2216: FILE: net/ipv4/netfilter/ip_tables.c:506:
+^I^I^I    ^I^I    IPT_STANDARD_TARGET) == 0) &&$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2216: FILE: net/ipv4/netfilter/ip_tables.c:506:
+				if ((strcmp(t->target.u.user.name,
+			    		    IPT_STANDARD_TARGET) == 0) &&

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2293: FILE: net/netfilter/nf_conntrack_proto_tcp.c:470:
+					tmp = get_unaligned_be32((__be32 *)(ptr+i)+1);
 					                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2293: FILE: net/netfilter/nf_conntrack_proto_tcp.c:470:
+					tmp = get_unaligned_be32((__be32 *)(ptr+i)+1);
 					                                          ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2307: FILE: net/netrom/af_netrom.c:1086:
+	/* Build a packet - the conventional user limit is 236 bytes. We can
+	   do ludicrously large NetROM frames but must not overflow */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2307: FILE: net/netrom/af_netrom.c:1086:
+	   do ludicrously large NetROM frames but must not overflow */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!value"
#2392: FILE: security/smack/smack_lsm.c:1365:
+	if (value == NULL || size > SMK_LABELLEN || size == 0)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000130651.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 9 errors, 30 warnings, 43 checks, 1950 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000130651.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
