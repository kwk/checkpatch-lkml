WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#55: FILE: arch/x86/Kconfig:556:
+config X86_HYPERVISOR
+	bool
+	default n
+	prompt "X86 Hypervisor Support"
+	---help---
+	  A hypervisor, also called virtual machine monitor (VMM),
+	  is a computer hardware platform virtualization software
+	  that allows multiple operating systems to run on a host
+	  computer concurrently
+
+	  Choose Y to use VMware Hypervisor
+	
 # Mark as embedded because too many people got it wrong.
 # The code disables itself when not needed.

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#66: FILE: arch/x86/Kconfig:567:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#75: FILE: arch/x86/include/asm/hypervisor.h:17:
  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#93: FILE: arch/x86/include/asm/hypervisor.h:33:
+#define VMWARE_PORT(cmd, eax, ebx, ecx, edx)				\
+	__asm__("inl (%%dx)":						\
+			"=a"(eax), "=c"(ecx), "=d"(edx), "=b"(ebx) :	\
+			"0"(VMWARE_HYPERVISOR_MAGIC),			\
+			"1"(VMWARE_PORT_CMD_##cmd),			\
+			"2"(VMWARE_HYPERVISOR_PORT), "3"(UINT_MAX) :	\
+			"memory");

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#94: FILE: arch/x86/include/asm/hypervisor.h:34:
+	__asm__("inl (%%dx)":						\
 	                    ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#117: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/processor.h> instead of <asm/processor.h>
#187: FILE: arch/x86/kernel/cpu/hypervisor.c:28:
+#include <asm/processor.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#200: FILE: arch/x86/kernel/cpu/hypervisor.c:34:
+	uint32_t eax, ebx, ecx, edx;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#201: FILE: arch/x86/kernel/cpu/hypervisor.c:35:
+	uint64_t tsc_hz;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#209: FILE: arch/x86/kernel/cpu/hypervisor.c:43:
+	BUG_ON(tsc_hz >> 32);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#219: FILE: arch/x86/kernel/cpu/hypervisor.c:50:
+	uint32_t eax, ebx, ecx, edx;

WARNING:TYPO_SPELLING: 'infomation' may be misspelled - perhaps 'information'?
#227: FILE: arch/x86/kernel/cpu/hypervisor.c:58:
+ * While checking the dmi string infomation, just checking the product
                                  ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: braces {} should be used on all arms of this statement
#269: FILE: arch/x86/kernel/cpu/hypervisor.c:92:
+	if (vmware_platform()) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#273: FILE: arch/x86/kernel/cpu/hypervisor.c:96:
+	} else

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000153578.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 5 warnings, 6 checks, 175 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000153578.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
