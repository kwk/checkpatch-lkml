WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#41: 
Identity mapping for IOMMU defines a single domain to 1:1 map all pci devices

WARNING:TYPO_SPELLING: 'creats' may be misspelled - perhaps 'creates'?
#89: FILE: drivers/pci/intel-iommu.c:223:
+ *	1. This domain creats a static 1:1 mapping to all usable memory.
   	               ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#90: FILE: drivers/pci/intel-iommu.c:224:
+ * ^I2. It maps to each iommu if successful.$

WARNING:TYPO_SPELLING: 'mulitple' may be misspelled - perhaps 'multiple'?
#102: FILE: drivers/pci/intel-iommu.c:237:
+/* si_domain contains mulitple devices */
                       ^^^^^^^^

CHECK:BIT_MACRO: Prefer using the BIT macro
#103: FILE: drivers/pci/intel-iommu.c:238:
+#define DOMAIN_FLAG_STATIC_IDENTITY	(1 << 2)

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#120: FILE: drivers/pci/intel-iommu.c:457:
+	BUG_ON(domain->flags & DOMAIN_FLAG_STATIC_IDENTITY);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#206: FILE: drivers/pci/intel-iommu.c:1270:
+				    cap_ndoms(iommu->cap), num+1);
 				                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:LINE_SPACING: Please don't use multiple blank lines
#328: FILE: drivers/pci/intel-iommu.c:2029:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#348: FILE: drivers/pci/intel-iommu.c:2049:
+static void domain_remove_one_dev_info(struct dmar_domain *domain,
+					  struct pci_dev *pdev);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#356: FILE: drivers/pci/intel-iommu.c:2057:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#364: FILE: drivers/pci/intel-iommu.c:2065:
+static int domain_add_dev_info(struct dmar_domain *domain,
+				  struct pci_dev *pdev)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#398: FILE: drivers/pci/intel-iommu.c:2099:
+	printk(KERN_INFO "IOMMU: Setting identity map:\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#405: FILE: drivers/pci/intel-iommu.c:2106:
+				ret = iommu_prepare_identity_map(pdev,
+					ei->addr, ei->addr + ei->size);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#407: FILE: drivers/pci/intel-iommu.c:2108:
+					printk(KERN_INFO "1:1 mapping to one domain failed.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#456: FILE: drivers/pci/intel-iommu.c:2286:
+		printk(KERN_INFO "IOMMU: Setting RMRR:\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#479: FILE: drivers/pci/intel-iommu.c:2443:
+		if (pdev->dma_mask > DMA_BIT_MASK(32))
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#481: FILE: drivers/pci/intel-iommu.c:2445:
+			return 1;
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#481: FILE: drivers/pci/intel-iommu.c:2445:
+		else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#487: FILE: drivers/pci/intel-iommu.c:2451:
+			printk(KERN_INFO "32bit %s uses non-identity mapping\n",

WARNING:LINE_SPACING: Missing a blank line after declarations
#498: FILE: drivers/pci/intel-iommu.c:2462:
+			int ret;
+			ret = domain_add_dev_info(si_domain, pdev);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#500: FILE: drivers/pci/intel-iommu.c:2464:
+				printk(KERN_INFO "64bit %s uses identity mapping\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#590: FILE: drivers/pci/intel-iommu.c:3207:
+static void domain_remove_one_dev_info(struct dmar_domain *domain,
 					  struct pci_dev *pdev)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000107419.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 12 warnings, 10 checks, 535 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000107419.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
