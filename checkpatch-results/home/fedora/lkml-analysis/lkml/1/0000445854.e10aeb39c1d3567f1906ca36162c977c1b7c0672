CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#55: FILE: arch/um/include/skas/mode_kern_skas.h:36:
+extern void flush_tlb_page_skas(struct vm_area_struct *vma,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

ERROR:SPACING: space required before the open parenthesis '('
#91: FILE: arch/um/kernel/skas/tlb.c:109:
+	if(!pgd_present(*pgd))

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#95: FILE: arch/um/kernel/skas/tlb.c:113:
+	if(!pud_present(*pud))

ERROR:SPACING: space required before the open parenthesis '('
#99: FILE: arch/um/kernel/skas/tlb.c:117:
+	if(!pmd_present(*pmd))

ERROR:SPACING: space required before the open brace '{'
#115: FILE: arch/um/kernel/skas/tlb.c:133:
+	if(pte_newpage(*pte)){

ERROR:SPACING: space required before the open parenthesis '('
#115: FILE: arch/um/kernel/skas/tlb.c:133:
+	if(pte_newpage(*pte)){

CHECK:BRACES: braces {} should be used on all arms of this statement
#115: FILE: arch/um/kernel/skas/tlb.c:133:
+	if(pte_newpage(*pte)){
[...]
+	else if(pte_newprot(*pte))
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open brace '{'
#116: FILE: arch/um/kernel/skas/tlb.c:134:
+		if(pte_present(*pte)){

ERROR:SPACING: space required before the open parenthesis '('
#116: FILE: arch/um/kernel/skas/tlb.c:134:
+		if(pte_present(*pte)){

CHECK:BRACES: braces {} should be used on all arms of this statement
#116: FILE: arch/um/kernel/skas/tlb.c:134:
+		if(pte_present(*pte)){
[...]
+		else err = unmap(mm_id, address, PAGE_SIZE, 1, &flush);
[...]

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#124: FILE: arch/um/kernel/skas/tlb.c:142:
+		else err = unmap(mm_id, address, PAGE_SIZE, 1, &flush);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#124: FILE: arch/um/kernel/skas/tlb.c:142:
+		}
+		else err = unmap(mm_id, address, PAGE_SIZE, 1, &flush);

`else {` should follow the closing block `}` on the same line.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#126: FILE: arch/um/kernel/skas/tlb.c:144:
+	else if(pte_newprot(*pte))

ERROR:ELSE_AFTER_BRACE: else should follow close brace '}'
#126: FILE: arch/um/kernel/skas/tlb.c:144:
+	}
+	else if(pte_newprot(*pte))

ERROR:SPACING: space required before the open parenthesis '('
#129: FILE: arch/um/kernel/skas/tlb.c:147:
+	if(err)

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#137: FILE: arch/um/kernel/skas/tlb.c:155:
+	printk("Failed to flush page for address 0x%lx\n", address);

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#165: FILE: arch/um/include/os.h:305:
+extern int unmap(struct mm_id * mm_idp, unsigned long addr, unsigned long len,

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#165: FILE: arch/um/include/os.h:305:
+extern int unmap(struct mm_id * mm_idp, unsigned long addr, unsigned long len,

ERROR:POINTER_LOCATION: "foo * bar" should be "foo *bar"
#179: FILE: arch/um/os-Linux/skas/mem.c:222:
+int unmap(struct mm_id * mm_idp, unsigned long addr, unsigned long len,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000445854.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 14 errors, 1 warnings, 4 checks, 111 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000445854.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
