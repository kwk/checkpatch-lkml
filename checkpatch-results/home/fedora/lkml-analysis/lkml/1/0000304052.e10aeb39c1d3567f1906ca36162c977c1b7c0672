WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#57: 
Only the "lc0cch" bits are written to the APICID register. The remaining bits are

WARNING:BAD_SIGN_OFF: Do not use whitespace before Signed-off-by:
#70: 
	Signed-off-by: Jack Steiner <steiner@sgi.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:ONE_SEMICOLON: Statements terminations use 1 semicolon
#115: FILE: arch/x86/kernel/genapic_64.c:83:
+		id = (id >> 24) & 0xFFu;;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#126: FILE: arch/x86/kernel/genx2apic_uv_x.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/smp.h> instead of <asm/smp.h>
#145: FILE: arch/x86/kernel/genx2apic_uv_x.c:20:
+#include <asm/smp.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:LINE_SPACING: Missing a blank line after declarations
#177: FILE: arch/x86/kernel/genx2apic_uv_x.c:52:
+	cpumask_t domain = CPU_MASK_NONE;
+	cpu_set(cpu, domain);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#186: FILE: arch/x86/kernel/genx2apic_uv_x.c:61:
+	printk(KERN_DEBUG "ZZZZZZZZZZZ send SIPI to apicid 0x%x, start 0x%x\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#193: FILE: arch/x86/kernel/genx2apic_uv_x.c:68:
+	printk(KERN_DEBUG "ZZZZZZZZZZZ      nasid %d, val 0x%lx\n", nasid, val);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#210: FILE: arch/x86/kernel/genx2apic_uv_x.c:85:
+	printk(KERN_DEBUG

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#221: FILE: arch/x86/kernel/genx2apic_uv_x.c:96:
+	for (cpu = 0; cpu < NR_CPUS; ++cpu)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#256: FILE: arch/x86/kernel/genx2apic_uv_x.c:131:
+	if ((unsigned)cpu < NR_CPUS)

WARNING:NR_CPUS: usage of NR_CPUS is often wrong - consider using cpu_possible(), num_possible_cpus(), for_each_possible_cpu(), etc
#256: FILE: arch/x86/kernel/genx2apic_uv_x.c:131:
+	if ((unsigned)cpu < NR_CPUS)

CHECK:CAMELCASE: Avoid CamelCase: <dest_Fixed>
#276: FILE: arch/x86/kernel/genx2apic_uv_x.c:151:
+	.int_delivery_mode = dest_Fixed,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#307: FILE: arch/x86/kernel/genx2apic_uv_x.c:182:
+	printk(KERN_DEBUG "UV: global MMR base 0x%lx\n", mmr_base);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#317: FILE: arch/x86/kernel/genx2apic_uv_x.c:192:
+	printk(KERN_DEBUG "UV: Found %d blades\n", uv_num_possible_blades());

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#360: FILE: arch/x86/kernel/genx2apic_uv_x.c:235:
+		printk(KERN_DEBUG "UV cpu %d, apicid 0x%x, nasid %d, nid %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#362: FILE: arch/x86/kernel/genx2apic_uv_x.c:237:
+		printk(KERN_DEBUG "UV   lcpu %d, blade %d\n", lcpu, blade);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#365: FILE: arch/x86/kernel/genx2apic_uv_x.c:240:
+		printk(KERN_DEBUG "UV ZZZZ nasid %d\n", nasid);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#366: FILE: arch/x86/kernel/genx2apic_uv_x.c:241:
+		printk(KERN_DEBUG "UV  ZZZ local paddr %p\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#369: FILE: arch/x86/kernel/genx2apic_uv_x.c:244:
+		printk(KERN_DEBUG "UV  ZZZ global paddr %p\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#372: FILE: arch/x86/kernel/genx2apic_uv_x.c:247:
+		printk(KERN_DEBUG "UV  ZZZ global32 paddr %p\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#375: FILE: arch/x86/kernel/genx2apic_uv_x.c:250:
+		printk(KERN_DEBUG "UV  ZZZ local addr %p\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#377: FILE: arch/x86/kernel/genx2apic_uv_x.c:252:
+		printk(KERN_DEBUG "UV  ZZZ global addr %p\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#380: FILE: arch/x86/kernel/genx2apic_uv_x.c:255:
+		printk(KERN_DEBUG "UV  ZZZ global32 addr %p\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#382: FILE: arch/x86/kernel/genx2apic_uv_x.c:257:
+		       uv_global_mmr32_address(nasid,
+					UVH_LB_BAU_SB_DESCRIPTOR_BASE_32));

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#384: FILE: arch/x86/kernel/genx2apic_uv_x.c:259:
+		printk(KERN_DEBUG "UV  ZZZ local 0x%lx\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#386: FILE: arch/x86/kernel/genx2apic_uv_x.c:261:
+		printk(KERN_DEBUG "UV  ZZZ global 0x%lx\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#389: FILE: arch/x86/kernel/genx2apic_uv_x.c:264:
+		printk(KERN_DEBUG "UV  ZZZ global32 0x%lx\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#410: FILE: arch/x86/kernel/genx2apic_uv_x.c:285:
+	printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#412: FILE: arch/x86/kernel/genx2apic_uv_x.c:287:
+	       "UV cpu %d, lcpu %d, blade %d, nasid %d/%d/%d, possible %d,"
+	       " online %d, cputoblade %d, uv_node_to_blade_id %d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#422: FILE: arch/x86/kernel/genx2apic_uv_x.c:297:
+	printk(KERN_DEBUG

WARNING:SPLIT_STRING: quoted string split across lines
#424: FILE: arch/x86/kernel/genx2apic_uv_x.c:299:
+	       "UV cpu %d: hdw_apic_id 0x%x, extra_apic 0x%x, nasid 0x%x, "
+	       "M %d, N %d, nasid_h 0x%x, mmrs 0x%lx\n",

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#506: FILE: include/asm-x86/genapic_64.h:44:
+extern void uv_cpu_init(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#507: FILE: include/asm-x86/genapic_64.h:45:
+extern int uv_wakeup_secondary(int phys_apicid, unsigned int start_rip);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000304052.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 29 warnings, 5 checks, 394 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000304052.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
