WARNING:BAD_SIGN_OFF: email address 'linux-arm-kernel@lists.arm.linux.org.uk, eric.y.miao@gmail.com, linux-kernel@vger.kernel.org, spi-devel-general@lists.sourceforge.net' might be better as 'linux-arm-kernel@lists.arm.linux.org.uk eric.y.miao@gmail.com, linux-kernel@vger.kernel.org, spi-devel-general@lists.sourceforge.net'
#67: 
Cc: linux-arm-kernel@lists.arm.linux.org.uk, eric.y.miao@gmail.com, linux-kernel@vger.kernel.org, spi-devel-general@lists.sourceforge.net

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: Unexpected content after email: 'linux-arm-kernel@lists.arm.linux.org.uk, eric.y.miao@gmail.com, linux-kernel@vger.kernel.org, spi-devel-general@lists.sourceforge.net', should be: 'linux-arm-kernel@lists.arm.linux.org.uk (eric.y.miao@gmail.com, linux-kernel@vger.kernel.org, spi-devel-general@lists.sourceforge.net)'
#67: 
Cc: linux-arm-kernel@lists.arm.linux.org.uk, eric.y.miao@gmail.com, linux-kernel@vger.kernel.org, spi-devel-general@lists.sourceforge.net

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#111: FILE: drivers/mfd/Kconfig:156:
+config EZX_PCAP
+	bool "PCAP Support"
+	depends on PXA_EZX
+	help
+	  This enables the PCAP ASIC present on EZX Phones. This is
+	  needed for MMC, TouchScreen, Sound, USB, etc..
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#135: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#140: FILE: drivers/mfd/ezx-pcap.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#164: FILE: drivers/mfd/ezx-pcap.c:25:
+	void (*adc_done)(void *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#167: FILE: drivers/mfd/ezx-pcap.c:28:
+};
+static struct pcap_chip pcap;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SIZEOF_PARENTHESIS: sizeof t should be sizeof(t)
#179: FILE: drivers/mfd/ezx-pcap.c:40:
+	memset(&t, 0, sizeof t);

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#302: FILE: drivers/mfd/ezx-pcap.c:163:
+	tmp &= ~(PCAP_ADC_ADEN|PCAP_ADC_BATT_I_ADC|PCAP_ADC_BATT_I_POLARITY);
 	                      ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#302: FILE: drivers/mfd/ezx-pcap.c:163:
+	tmp &= ~(PCAP_ADC_ADEN|PCAP_ADC_BATT_I_ADC|PCAP_ADC_BATT_I_POLARITY);
 	                                          ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#310: FILE: drivers/mfd/ezx-pcap.c:171:
+	void (*adc_done)(void *);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#318: FILE: drivers/mfd/ezx-pcap.c:179:
+	pcap.adc_done = pcap.adc_data = NULL;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#325: FILE: drivers/mfd/ezx-pcap.c:186:
+void ezx_pcap_start_adc(u8 bank, u8 time, u32 flags,
+						void *adc_done, void *adc_data)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#382: FILE: drivers/mfd/ezx-pcap.c:243:
+		ezx_pcap_get_adc_channel_result(x, (x+1) % 6, tmp);
 		                                     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#385: FILE: drivers/mfd/ezx-pcap.c:246:
+			res[x+1] = tmp[1];
 			     ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#387: FILE: drivers/mfd/ezx-pcap.c:248:
+			res[x+1] = 0;
 			     ^

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*cb)...) over kzalloc(sizeof(struct pcap_event)...)
#464: FILE: drivers/mfd/ezx-pcap.c:325:
+	cb = kzalloc(sizeof(struct pcap_event), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#505: FILE: drivers/mfd/ezx-pcap.c:366:
+static ssize_t pcap_show_regs(struct device *dev,
+			struct device_attribute *attr, char *buf)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#518: FILE: drivers/mfd/ezx-pcap.c:379:
+static ssize_t pcap_store_regs(struct device *dev,
+		struct device_attribute *attr, const char *buf, size_t size)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#525: FILE: drivers/mfd/ezx-pcap.c:386:
+		if ((sscanf(p, "%u %x\n", &reg, &val) != 2) ||
+			reg < 0 || reg >= 32)

WARNING:NAKED_SSCANF: unchecked sscanf return value
#532: FILE: drivers/mfd/ezx-pcap.c:393:
+		sscanf(p, "%u %x\n", &reg, &val);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#541: FILE: drivers/mfd/ezx-pcap.c:402:
+static ssize_t pcap_show_adc_coin(struct device *dev,
+			struct device_attribute *attr, char *buf)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#548: FILE: drivers/mfd/ezx-pcap.c:409:
+}
+static ssize_t pcap_show_adc_battery(struct device *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#549: FILE: drivers/mfd/ezx-pcap.c:410:
+static ssize_t pcap_show_adc_battery(struct device *dev,
+			struct device_attribute *attr, char *buf)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#556: FILE: drivers/mfd/ezx-pcap.c:417:
+}
+static ssize_t pcap_show_adc_bplus(struct device *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#557: FILE: drivers/mfd/ezx-pcap.c:418:
+static ssize_t pcap_show_adc_bplus(struct device *dev,
+			struct device_attribute *attr, char *buf)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#564: FILE: drivers/mfd/ezx-pcap.c:425:
+}
+static ssize_t pcap_show_adc_mobportb(struct device *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#565: FILE: drivers/mfd/ezx-pcap.c:426:
+static ssize_t pcap_show_adc_mobportb(struct device *dev,
+			struct device_attribute *attr, char *buf)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#572: FILE: drivers/mfd/ezx-pcap.c:433:
+}
+static ssize_t pcap_show_adc_temperature(struct device *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#573: FILE: drivers/mfd/ezx-pcap.c:434:
+static ssize_t pcap_show_adc_temperature(struct device *dev,
+			struct device_attribute *attr, char *buf)

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#580: FILE: drivers/mfd/ezx-pcap.c:441:
+}
+static ssize_t pcap_show_adc_chargerid(struct device *dev,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#581: FILE: drivers/mfd/ezx-pcap.c:442:
+static ssize_t pcap_show_adc_chargerid(struct device *dev,
+			struct device_attribute *attr, char *buf)

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions '0600' used
#587: FILE: drivers/mfd/ezx-pcap.c:448:
+}

The permissions used in DEVICE_ATTR are unusual.
Typically only three permissions are used - 0644 (RW), 0444 (RO)
and 0200 (WO).

See: https://www.kernel.org/doc/html/latest/filesystems/sysfs.html#attributes

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions '0400' used
#590: FILE: drivers/mfd/ezx-pcap.c:451:
+static DEVICE_ATTR(adc_coin, 0400, pcap_show_adc_coin, NULL);

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions '0400' used
#591: FILE: drivers/mfd/ezx-pcap.c:452:
+static DEVICE_ATTR(adc_battery, 0400, pcap_show_adc_battery, NULL);

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions '0400' used
#592: FILE: drivers/mfd/ezx-pcap.c:453:
+static DEVICE_ATTR(adc_bplus, 0400, pcap_show_adc_bplus, NULL);

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions '0400' used
#593: FILE: drivers/mfd/ezx-pcap.c:454:
+static DEVICE_ATTR(adc_mobportb, 0400, pcap_show_adc_mobportb, NULL);

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions '0400' used
#594: FILE: drivers/mfd/ezx-pcap.c:455:
+static DEVICE_ATTR(adc_temperature, 0400, pcap_show_adc_temperature, NULL);

WARNING:DEVICE_ATTR_PERMS: DEVICE_ATTR unusual permissions '0400' used
#595: FILE: drivers/mfd/ezx-pcap.c:456:
+static DEVICE_ATTR(adc_chargerid, 0400, pcap_show_adc_chargerid, NULL);

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#650: FILE: drivers/mfd/ezx-pcap.c:511:
+static int __devinit ezx_pcap_probe(struct spi_device *spi)

WARNING:TYPO_SPELLING: 'cant' may be misspelled - perhaps 'can't'?
#663: FILE: drivers/mfd/ezx-pcap.c:524:
+		dev_err(&spi->dev, "cant create pcap thread\n");
 		                    ^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'cant' may be misspelled - perhaps 'can't'?
#677: FILE: drivers/mfd/ezx-pcap.c:538:
+		dev_err(&spi->dev, "cant create sysfs files\n");
 		                    ^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#687: FILE: drivers/mfd/ezx-pcap.c:548:
+	ret = request_irq(pdata->irq, pcap_irq_handler, IRQF_DISABLED,
+		"PCAP", NULL);

WARNING:TYPO_SPELLING: 'cant' may be misspelled - perhaps 'can't'?
#689: FILE: drivers/mfd/ezx-pcap.c:550:
+		dev_err(&spi->dev, "cant request IRQ\n");
 		                    ^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#737: FILE: include/linux/mfd/ezx-pcap.h:1:
+/*

WARNING:SPACING: Unnecessary space before function pointer arguments
#749: FILE: include/linux/mfd/ezx-pcap.h:13:
+	void (*init) (void);	/* board specific init */

WARNING:TYPO_SPELLING: 'acessible' may be misspelled - perhaps 'accessible'?
#764: FILE: include/linux/mfd/ezx-pcap.h:28:
+/* registers acessible by both pcap ports */
              ^^^^^^^^^

WARNING:TYPO_SPELLING: 'acessible' may be misspelled - perhaps 'accessible'?
#786: FILE: include/linux/mfd/ezx-pcap.h:50:
+/* registers acessible by pcap port 1 only (a1200, e2 & e6) */
              ^^^^^^^^^

CHECK:BIT_MACRO: Prefer using the BIT macro
#801: FILE: include/linux/mfd/ezx-pcap.h:65:
+#define PCAP_IRQ_ADCDONE	(1 << 0)	/* AD Conversion Done Port 1 */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:BIT_MACRO: Prefer using the BIT macro
#802: FILE: include/linux/mfd/ezx-pcap.h:66:
+#define PCAP_IRQ_TS		(1 << 1)	/* Touch Screen */

CHECK:BIT_MACRO: Prefer using the BIT macro
#803: FILE: include/linux/mfd/ezx-pcap.h:67:
+#define PCAP_IRQ_1HZ		(1 << 2)	/* 1HZ Timer */

CHECK:BIT_MACRO: Prefer using the BIT macro
#804: FILE: include/linux/mfd/ezx-pcap.h:68:
+#define PCAP_IRQ_WH		(1 << 3)	/* "...high"??? */

CHECK:BIT_MACRO: Prefer using the BIT macro
#805: FILE: include/linux/mfd/ezx-pcap.h:69:
+#define PCAP_IRQ_WL		(1 << 4)	/* "...low"??? */

CHECK:BIT_MACRO: Prefer using the BIT macro
#806: FILE: include/linux/mfd/ezx-pcap.h:70:
+#define PCAP_IRQ_TODA		(1 << 5)	/* RTC Time Of Day?

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#807: FILE: include/linux/mfd/ezx-pcap.h:71:
+#define PCAP_IRQ_TODA		(1 << 5)	/* RTC Time Of Day?
+						   (see "RTC_TODA") */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#807: FILE: include/linux/mfd/ezx-pcap.h:71:
+						   (see "RTC_TODA") */

CHECK:BIT_MACRO: Prefer using the BIT macro
#808: FILE: include/linux/mfd/ezx-pcap.h:72:
+#define PCAP_IRQ_USB4V		(1 << 6)	/* USB OTG */

CHECK:BIT_MACRO: Prefer using the BIT macro
#809: FILE: include/linux/mfd/ezx-pcap.h:73:
+#define PCAP_IRQ_ONOFF		(1 << 7)	/* in blob: "ONOFFSNS" */

CHECK:BIT_MACRO: Prefer using the BIT macro
#810: FILE: include/linux/mfd/ezx-pcap.h:74:
+#define PCAP_IRQ_ONOFF2		(1 << 8)	/* in blob: "ONOFFSNS2" */

CHECK:BIT_MACRO: Prefer using the BIT macro
#811: FILE: include/linux/mfd/ezx-pcap.h:75:
+#define PCAP_IRQ_USB1V		(1 << 9)	/* USB below 1volt???

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#812: FILE: include/linux/mfd/ezx-pcap.h:76:
+#define PCAP_IRQ_USB1V		(1 << 9)	/* USB below 1volt???
+						   in blob: "USBDET_1V" */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#812: FILE: include/linux/mfd/ezx-pcap.h:76:
+						   in blob: "USBDET_1V" */

CHECK:BIT_MACRO: Prefer using the BIT macro
#813: FILE: include/linux/mfd/ezx-pcap.h:77:
+#define PCAP_IRQ_MOBPORT	(1 << 10)	/* GSM-related?? ("mobport",

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#814: FILE: include/linux/mfd/ezx-pcap.h:78:
+#define PCAP_IRQ_MOBPORT	(1 << 10)	/* GSM-related?? ("mobport",
+						   see 958_MotDoc.pdf);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#815: FILE: include/linux/mfd/ezx-pcap.h:79:
+						   in blob: "MOBSENSB" */

CHECK:BIT_MACRO: Prefer using the BIT macro
#816: FILE: include/linux/mfd/ezx-pcap.h:80:
+#define PCAP_IRQ_MB2		(1 << 11)	/* Mic; in blob: "MB2SNS" */

CHECK:BIT_MACRO: Prefer using the BIT macro
#817: FILE: include/linux/mfd/ezx-pcap.h:81:
+#define PCAP_IRQ_A1		(1 << 12)	/* Audio jack;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#818: FILE: include/linux/mfd/ezx-pcap.h:82:
+#define PCAP_IRQ_A1		(1 << 12)	/* Audio jack;
+						   in blob: "A1SNS" */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#818: FILE: include/linux/mfd/ezx-pcap.h:82:
+						   in blob: "A1SNS" */

CHECK:BIT_MACRO: Prefer using the BIT macro
#819: FILE: include/linux/mfd/ezx-pcap.h:83:
+#define PCAP_IRQ_ST		(1 << 13)	/* called "MSTB" in blob */

CHECK:BIT_MACRO: Prefer using the BIT macro
#820: FILE: include/linux/mfd/ezx-pcap.h:84:
+#define PCAP_IRQ_PC		(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#821: FILE: include/linux/mfd/ezx-pcap.h:85:
+#define PCAP_IRQ_WARM		(1 << 15)

CHECK:BIT_MACRO: Prefer using the BIT macro
#822: FILE: include/linux/mfd/ezx-pcap.h:86:
+#define PCAP_IRQ_EOL		(1 << 16)	/*  battery End Of Life???

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#823: FILE: include/linux/mfd/ezx-pcap.h:87:
+#define PCAP_IRQ_EOL		(1 << 16)	/*  battery End Of Life???
+						   (see below);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#824: FILE: include/linux/mfd/ezx-pcap.h:88:
+						   in blob: "EOL_STAT" */

CHECK:BIT_MACRO: Prefer using the BIT macro
#825: FILE: include/linux/mfd/ezx-pcap.h:89:
+#define PCAP_IRQ_CLK		(1 << 17)	/* called "CLK_STAT" in blob */

CHECK:BIT_MACRO: Prefer using the BIT macro
#826: FILE: include/linux/mfd/ezx-pcap.h:90:
+#define PCAP_IRQ_SYSRST		(1 << 18)

CHECK:BIT_MACRO: Prefer using the BIT macro
#827: FILE: include/linux/mfd/ezx-pcap.h:91:
+#define PCAP_IRQ_DUMMY		(1 << 19)

CHECK:BIT_MACRO: Prefer using the BIT macro
#828: FILE: include/linux/mfd/ezx-pcap.h:92:
+#define PCAP_IRQ_ADCDONE2	(1 << 20)	/* AD Conversion Done Port 2 */

CHECK:BIT_MACRO: Prefer using the BIT macro
#829: FILE: include/linux/mfd/ezx-pcap.h:93:
+#define PCAP_IRQ_SOFTRESET	(1 << 21)

CHECK:BIT_MACRO: Prefer using the BIT macro
#830: FILE: include/linux/mfd/ezx-pcap.h:94:
+#define PCAP_IRQ_MNEXB		(1 << 22)

CHECK:BIT_MACRO: Prefer using the BIT macro
#860: FILE: include/linux/mfd/ezx-pcap.h:124:
+#define PCAP_BATT_B_FDBK		(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#861: FILE: include/linux/mfd/ezx-pcap.h:125:
+#define PCAP_BATT_EXT_ISENSE		(1 << 9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#864: FILE: include/linux/mfd/ezx-pcap.h:128:
+#define PCAP_BATT_I_COIN		(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#865: FILE: include/linux/mfd/ezx-pcap.h:129:
+#define PCAP_BATT_COIN_CH_EN		(1 << 15)

CHECK:BIT_MACRO: Prefer using the BIT macro
#868: FILE: include/linux/mfd/ezx-pcap.h:132:
+#define PCAP_BATT_EOL_CMP_EN		(1 << 20)

CHECK:BIT_MACRO: Prefer using the BIT macro
#869: FILE: include/linux/mfd/ezx-pcap.h:133:
+#define PCAP_BATT_BATT_DET_EN		(1 << 21)

CHECK:BIT_MACRO: Prefer using the BIT macro
#870: FILE: include/linux/mfd/ezx-pcap.h:134:
+#define PCAP_BATT_THERMBIAS_CTRL	(1 << 22)

CHECK:BIT_MACRO: Prefer using the BIT macro
#872: FILE: include/linux/mfd/ezx-pcap.h:136:
+#define PCAP_ADC_ADEN			(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#873: FILE: include/linux/mfd/ezx-pcap.h:137:
+#define PCAP_ADC_RAND			(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#874: FILE: include/linux/mfd/ezx-pcap.h:138:
+#define PCAP_ADC_AD_SEL1		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#875: FILE: include/linux/mfd/ezx-pcap.h:139:
+#define PCAP_ADC_AD_SEL2		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#882: FILE: include/linux/mfd/ezx-pcap.h:146:
+#define PCAP_ADC_ATOX			(1 << 14)

CHECK:BIT_MACRO: Prefer using the BIT macro
#883: FILE: include/linux/mfd/ezx-pcap.h:147:
+#define PCAP_ADC_MTR1			(1 << 15)

CHECK:BIT_MACRO: Prefer using the BIT macro
#884: FILE: include/linux/mfd/ezx-pcap.h:148:
+#define PCAP_ADC_MTR2			(1 << 16)

CHECK:BIT_MACRO: Prefer using the BIT macro
#887: FILE: include/linux/mfd/ezx-pcap.h:151:
+#define PCAP_ADC_TS_REF_LOWPWR		(1 << 20)

CHECK:BIT_MACRO: Prefer using the BIT macro
#888: FILE: include/linux/mfd/ezx-pcap.h:152:
+#define PCAP_ADC_TS_REFENB		(1 << 21)

CHECK:BIT_MACRO: Prefer using the BIT macro
#889: FILE: include/linux/mfd/ezx-pcap.h:153:
+#define PCAP_ADC_BATT_I_POLARITY	(1 << 22)

CHECK:BIT_MACRO: Prefer using the BIT macro
#890: FILE: include/linux/mfd/ezx-pcap.h:154:
+#define PCAP_ADC_BATT_I_ADC		(1 << 23)

CHECK:BIT_MACRO: Prefer using the BIT macro
#929: FILE: include/linux/mfd/ezx-pcap.h:193:
+#define PCAP_ADR_ADINC1			(1 << 20)

CHECK:BIT_MACRO: Prefer using the BIT macro
#930: FILE: include/linux/mfd/ezx-pcap.h:194:
+#define PCAP_ADR_ADINC2			(1 << 21)

CHECK:BIT_MACRO: Prefer using the BIT macro
#931: FILE: include/linux/mfd/ezx-pcap.h:195:
+#define PCAP_ADR_ASC			(1 << 22)

CHECK:BIT_MACRO: Prefer using the BIT macro
#932: FILE: include/linux/mfd/ezx-pcap.h:196:
+#define PCAP_ADR_ONESHOT		(1 << 23)

CHECK:BIT_MACRO: Prefer using the BIT macro
#934: FILE: include/linux/mfd/ezx-pcap.h:198:
+#define PCAP_BUSCTRL_FSENB		(1 << 0)

CHECK:BIT_MACRO: Prefer using the BIT macro
#935: FILE: include/linux/mfd/ezx-pcap.h:199:
+#define PCAP_BUSCTRL_USB_SUSPEND	(1 << 1)

CHECK:BIT_MACRO: Prefer using the BIT macro
#936: FILE: include/linux/mfd/ezx-pcap.h:200:
+#define PCAP_BUSCTRL_USB_PU		(1 << 2)

CHECK:BIT_MACRO: Prefer using the BIT macro
#937: FILE: include/linux/mfd/ezx-pcap.h:201:
+#define PCAP_BUSCTRL_USB_PD		(1 << 3)

CHECK:BIT_MACRO: Prefer using the BIT macro
#938: FILE: include/linux/mfd/ezx-pcap.h:202:
+#define PCAP_BUSCTRL_VUSB_EN		(1 << 4)

CHECK:BIT_MACRO: Prefer using the BIT macro
#939: FILE: include/linux/mfd/ezx-pcap.h:203:
+#define PCAP_BUSCTRL_USB_PS		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#940: FILE: include/linux/mfd/ezx-pcap.h:204:
+#define PCAP_BUSCTRL_VUSB_MSTR_EN	(1 << 6)

CHECK:BIT_MACRO: Prefer using the BIT macro
#941: FILE: include/linux/mfd/ezx-pcap.h:205:
+#define PCAP_BUSCTRL_VBUS_PD_ENB	(1 << 7)

CHECK:BIT_MACRO: Prefer using the BIT macro
#942: FILE: include/linux/mfd/ezx-pcap.h:206:
+#define PCAP_BUSCTRL_CURRLIM		(1 << 8)

CHECK:BIT_MACRO: Prefer using the BIT macro
#943: FILE: include/linux/mfd/ezx-pcap.h:207:
+#define PCAP_BUSCTRL_RS232ENB		(1 << 9)

CHECK:BIT_MACRO: Prefer using the BIT macro
#944: FILE: include/linux/mfd/ezx-pcap.h:208:
+#define PCAP_BUSCTRL_RS232_DIR		(1 << 10)

CHECK:BIT_MACRO: Prefer using the BIT macro
#945: FILE: include/linux/mfd/ezx-pcap.h:209:
+#define PCAP_BUSCTRL_SE0_CONN		(1 << 11)

CHECK:BIT_MACRO: Prefer using the BIT macro
#946: FILE: include/linux/mfd/ezx-pcap.h:210:
+#define PCAP_BUSCTRL_USB_PDM		(1 << 12)

CHECK:BIT_MACRO: Prefer using the BIT macro
#947: FILE: include/linux/mfd/ezx-pcap.h:211:
+#define PCAP_BUSCTRL_BUS_PRI_ADJ	(1 << 24)

CHECK:BIT_MACRO: Prefer using the BIT macro
#965: FILE: include/linux/mfd/ezx-pcap.h:229:
+#define PCAP_LED0_EN		(1 << 5)

CHECK:BIT_MACRO: Prefer using the BIT macro
#966: FILE: include/linux/mfd/ezx-pcap.h:230:
+#define PCAP_LED1_EN		(1 << 6)

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#1003: FILE: include/linux/mfd/ezx-pcap.h:267:
+int ezx_pcap_write(u8, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#1003: FILE: include/linux/mfd/ezx-pcap.h:267:
+int ezx_pcap_write(u8, u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#1004: FILE: include/linux/mfd/ezx-pcap.h:268:
+int ezx_pcap_read(u8, u32 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32 *' should also have an identifier name
#1004: FILE: include/linux/mfd/ezx-pcap.h:268:
+int ezx_pcap_read(u8, u32 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#1005: FILE: include/linux/mfd/ezx-pcap.h:269:
+int ezx_pcap_set_sw(u8, u8, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#1005: FILE: include/linux/mfd/ezx-pcap.h:269:
+int ezx_pcap_set_sw(u8, u8, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#1005: FILE: include/linux/mfd/ezx-pcap.h:269:
+int ezx_pcap_set_sw(u8, u8, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#1006: FILE: include/linux/mfd/ezx-pcap.h:270:
+int ezx_pcap_set_vreg(u8, u8, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#1006: FILE: include/linux/mfd/ezx-pcap.h:270:
+int ezx_pcap_set_vreg(u8, u8, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#1006: FILE: include/linux/mfd/ezx-pcap.h:270:
+int ezx_pcap_set_vreg(u8, u8, u8);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#1007: FILE: include/linux/mfd/ezx-pcap.h:271:
+void ezx_pcap_start_adc(u8, u8, u32, void *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#1007: FILE: include/linux/mfd/ezx-pcap.h:271:
+void ezx_pcap_start_adc(u8, u8, u32, void *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#1007: FILE: include/linux/mfd/ezx-pcap.h:271:
+void ezx_pcap_start_adc(u8, u8, u32, void *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1007: FILE: include/linux/mfd/ezx-pcap.h:271:
+void ezx_pcap_start_adc(u8, u8, u32, void *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1007: FILE: include/linux/mfd/ezx-pcap.h:271:
+void ezx_pcap_start_adc(u8, u8, u32, void *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#1008: FILE: include/linux/mfd/ezx-pcap.h:272:
+void ezx_pcap_get_adc_channel_result(u8, u8, u32[]);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#1008: FILE: include/linux/mfd/ezx-pcap.h:272:
+void ezx_pcap_get_adc_channel_result(u8, u8, u32[]);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32[]' should also have an identifier name
#1008: FILE: include/linux/mfd/ezx-pcap.h:272:
+void ezx_pcap_get_adc_channel_result(u8, u8, u32[]);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32[]' should also have an identifier name
#1009: FILE: include/linux/mfd/ezx-pcap.h:273:
+void ezx_pcap_get_adc_bank_result(u32[]);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#1011: FILE: include/linux/mfd/ezx-pcap.h:275:
+void ezx_pcap_do_general_adc(u8, u8, u32 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u8' should also have an identifier name
#1011: FILE: include/linux/mfd/ezx-pcap.h:275:
+void ezx_pcap_do_general_adc(u8, u8, u32 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32 *' should also have an identifier name
#1011: FILE: include/linux/mfd/ezx-pcap.h:275:
+void ezx_pcap_do_general_adc(u8, u8, u32 *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#1012: FILE: include/linux/mfd/ezx-pcap.h:276:
+void ezx_pcap_do_batt_adc(int, u32[]);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32[]' should also have an identifier name
#1012: FILE: include/linux/mfd/ezx-pcap.h:276:
+void ezx_pcap_do_batt_adc(int, u32[]);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#1013: FILE: include/linux/mfd/ezx-pcap.h:277:
+int ezx_pcap_register_event(u32, void *, void *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1013: FILE: include/linux/mfd/ezx-pcap.h:277:
+int ezx_pcap_register_event(u32, void *, void *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1013: FILE: include/linux/mfd/ezx-pcap.h:277:
+int ezx_pcap_register_event(u32, void *, void *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#1013: FILE: include/linux/mfd/ezx-pcap.h:277:
+int ezx_pcap_register_event(u32, void *, void *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#1014: FILE: include/linux/mfd/ezx-pcap.h:278:
+int ezx_pcap_unregister_event(u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#1015: FILE: include/linux/mfd/ezx-pcap.h:279:
+void ezx_pcap_mask_event(u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#1016: FILE: include/linux/mfd/ezx-pcap.h:280:
+void ezx_pcap_unmask_event(u32);

WARNING:SPACING: Unnecessary space before function pointer arguments
#1022: FILE: include/linux/mfd/ezx-pcap.h:286:
+	void (*callback) (u32, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'u32' should also have an identifier name
#1022: FILE: include/linux/mfd/ezx-pcap.h:286:
+	void (*callback) (u32, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1022: FILE: include/linux/mfd/ezx-pcap.h:286:
+	void (*callback) (u32, void *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000200784.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 68 warnings, 85 checks, 909 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000200784.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
