WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#168: FILE: drivers/scst/scst_local/Kconfig:1:
+config SCST_LOCAL
+	tristate "SCST Local driver"
+	depends on SCST
+	---help---
+	  This module provides a LLD SCSI driver that connects to 
+	  the SCST target mode subsystem in a loop-back manner.
+	  It allows you to test target-mode device-handlers locally.
+	  You will need the SCST subsystem as well.
+
+	  If unsure whether you really want or need this, say N.

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#172: FILE: drivers/scst/scst_local/Kconfig:5:
+^I  This module provides a LLD SCSI driver that connects to $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:DEPRECATED_VARIABLE: Use of EXTRA_CFLAGS is deprecated, please use `ccflags-y instead.
#184: FILE: drivers/scst/scst_local/Makefile:3:
+EXTRA_CFLAGS += -I$(SCST_INC_DIR) -I$(SCST_DIR)

EXTRA_{A,C,CPP,LD}FLAGS are deprecated and should be replaced by the new
flags added via commit f77bf01425b1 ("kbuild: introduce ccflags-y,
asflags-y and ldflags-y").

The following conversion scheme maybe used::

  EXTRA_AFLAGS    ->  asflags-y
  EXTRA_CFLAGS    ->  ccflags-y
  EXTRA_CPPFLAGS  ->  cppflags-y
  EXTRA_LDFLAGS   ->  ldflags-y

See:

  1. https://lore.kernel.org/lkml/20070930191054.GA15876@uranus.ravnborg.org/
  2. https://lore.kernel.org/lkml/1313384834-24433-12-git-send-email-lacombar@gmail.com/
  3. https://www.kernel.org/doc/html/latest/kbuild/makefiles.html#compilation-flags

ERROR:TRAILING_WHITESPACE: trailing whitespace
#186: FILE: drivers/scst/scst_local/Makefile:5:
+#EXTRA_CFLAGS += -DCONFIG_SCST_EXTRACHECKS $

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#196: FILE: drivers/scst/scst_local/scst_local.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:LINE_SPACING: Please don't use multiple blank lines
#241: FILE: drivers/scst/scst_local/scst_local.c:46:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <Scsi_Host>
#311: FILE: drivers/scst/scst_local/scst_local.c:116:
+	struct Scsi_Host *shost;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct scsi_cmnd *' should also have an identifier name
#325: FILE: drivers/scst/scst_local/scst_local.c:130:
+	void (*done)(struct scsi_cmnd *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:STATIC_CONST_CHAR_ARRAY: static char array declaration should probably be static const char
#337: FILE: drivers/scst/scst_local/scst_local.c:142:
+static char scst_local_proc_name[] = "scst_ini_targ_debug";

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#347: FILE: drivers/scst/scst_local/scst_local.c:152:
+module_param_named(add_host, scst_local_add_host, int, S_IRUGO | S_IWUSR);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#348: FILE: drivers/scst/scst_local/scst_local.c:153:
+module_param_named(num_tgts, scst_local_num_tgts, int, S_IRUGO | S_IWUSR);

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#349: FILE: drivers/scst/scst_local/scst_local.c:154:
+module_param_named(max_luns, scst_local_max_luns, int, S_IRUGO | S_IWUSR);

WARNING:TYPO_SPELLING: 'mumber' may be misspelled - perhaps 'number'?
#357: FILE: drivers/scst/scst_local/scst_local.c:162:
+MODULE_PARM_DESC(num_tgts, "mumber of targets per host (def=1)");
                             ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'inout' may be misspelled - perhaps 'input'?
#364: FILE: drivers/scst/scst_local/scst_local.c:169:
+				int inout)
 				    ^^^^^

WARNING:TYPO_SPELLING: 'inout' may be misspelled - perhaps 'input'?
#370: FILE: drivers/scst/scst_local/scst_local.c:175:
+	if (inout == 1)
 	    ^^^^^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#374: FILE: drivers/scst/scst_local/scst_local.c:179:
+	pos = len = sprintf(buffer, "scst_local adapter driver, version "

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

WARNING:SPLIT_STRING: quoted string split across lines
#375: FILE: drivers/scst/scst_local/scst_local.c:180:
+	pos = len = sprintf(buffer, "scst_local adapter driver, version "
+			    "%s [%s]\n"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#377: FILE: drivers/scst/scst_local/scst_local.c:182:
+			    "num_tgts=%d, Aborts=%d, Device Resets=%d, "
+			    "Target Resets=%d\n",

WARNING:SSCANF_TO_KSTRTO: Prefer kstrto<type> to single variable sscanf
#419: FILE: drivers/scst/scst_local/scst_local.c:224:
+	if (sscanf(buf, "%d", &delta_hosts) != 1)
+		return -EINVAL;

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO | S_IWUSR' are not preferred. Consider using octal permissions '0644'.
#435: FILE: drivers/scst/scst_local/scst_local.c:240:
+static DRIVER_ATTR(add_host, S_IRUGO | S_IWUSR, scst_local_add_host_show,

WARNING:SPLIT_STRING: quoted string split across lines
#464: FILE: drivers/scst/scst_local/scst_local.c:269:
+	sprintf(scst_local_info_buf, "scst_local, version %s [%s], "
+		"Aborts: %d, Device Resets: %d, Target Resets: %d",

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#473: FILE: drivers/scst/scst_local/scst_local.c:278:
+/*
+static int scst_local_ioctl(struct scsi_device *dev, int cmd, void __user *arg)

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:CAMELCASE: Avoid CamelCase: <SCpnt>
#485: FILE: drivers/scst/scst_local/scst_local.c:290:
+static int scst_local_abort(struct scsi_cmnd *SCpnt)

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#580: FILE: drivers/scst/scst_local/scst_local.c:385:
+	scst_cmnd_sense_len = (SCSI_SENSE_BUFFERSIZE < scst_cmnd_sense_len ?

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:RETURN_VOID: void function return statements are not generally useful
#589: FILE: drivers/scst/scst_local/scst_local.c:394:
+	return;
+}

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#636: FILE: drivers/scst/scst_local/scst_local.c:441:
+	TRACE_DBG("targ: %d, init id %d, lun %d, cmd: 0X%02X\n",
+	      target, SCpnt->device->host->hostt->this_id, SCpnt->device->lun,

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#644: FILE: drivers/scst/scst_local/scst_local.c:449:
+		printk(KERN_ERR "%s: initiator's id used as target\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#661: FILE: drivers/scst/scst_local/scst_local.c:466:
+		printk(KERN_ERR "%s out of memory at line %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#692: FILE: drivers/scst/scst_local/scst_local.c:497:
+		printk(KERN_ERR "%s: DMA_BIDIRECTIONAL not allowed!\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#710: FILE: drivers/scst/scst_local/scst_local.c:515:
+		printk(KERN_ERR "%s out of memory at line %d\n",

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#745: FILE: drivers/scst/scst_local/scst_local.c:550:
+				scst_unregister_session(

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*scst_lcl_host)...) over kzalloc(sizeof(struct scst_local_host_info)...)
#770: FILE: drivers/scst/scst_local/scst_local.c:575:
+	scst_lcl_host = kzalloc(sizeof(struct scst_local_host_info),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#772: FILE: drivers/scst/scst_local/scst_local.c:577:
+	if (NULL == scst_lcl_host) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#773: FILE: drivers/scst/scst_local/scst_local.c:578:
+		printk(KERN_ERR "%s out of memory at line %d\n",

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#773: FILE: drivers/scst/scst_local/scst_local.c:578:
+	if (NULL == scst_lcl_host) {
+		printk(KERN_ERR "%s out of memory at line %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#788: FILE: drivers/scst/scst_local/scst_local.c:593:
+		printk(KERN_WARNING "scst_register_target failed:\n");

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#798: FILE: drivers/scst/scst_local/scst_local.c:603:
+		scst_lcl_host->session[i] = scst_register_session(

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#802: FILE: drivers/scst/scst_local/scst_local.c:607:
+			printk(KERN_WARNING "scst_register_session failed:\n");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#826: FILE: drivers/scst/scst_local/scst_local.c:631:
+			scst_unregister_session(scst_lcl_host->session[i],
+			TRUE, NULL);

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#865: FILE: drivers/scst/scst_local/scst_local.c:670:
+^I.proc_info ^I^I^I= scst_local_proc_info,$

WARNING:SPLIT_STRING: quoted string split across lines
#909: FILE: drivers/scst/scst_local/scst_local.c:714:
+	PRINT_ERROR("%s", "HIGHMEM kernel configurations are not supported. "
+		"Consider changing VMSPLIT option or use a 64-bit "

WARNING:SPLIT_STRING: quoted string split across lines
#910: FILE: drivers/scst/scst_local/scst_local.c:715:
+		"Consider changing VMSPLIT option or use a 64-bit "
+		"configuration instead. See SCST core README file for "

WARNING:SPLIT_STRING: quoted string split across lines
#911: FILE: drivers/scst/scst_local/scst_local.c:716:
+		"configuration instead. See SCST core README file for "
+		"details.");

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#925: FILE: drivers/scst/scst_local/scst_local.c:730:
+	tgt_specific_pool = kmem_cache_create("scst_tgt_specific",
+				      sizeof(struct scst_local_tgt_specific),

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#929: FILE: drivers/scst/scst_local/scst_local.c:734:
+		printk(KERN_WARNING "%s: out of memory for "

WARNING:SPLIT_STRING: quoted string split across lines
#930: FILE: drivers/scst/scst_local/scst_local.c:735:
+		printk(KERN_WARNING "%s: out of memory for "
+		       "tgt_specific structs",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#937: FILE: drivers/scst/scst_local/scst_local.c:742:
+		printk(KERN_WARNING "%s: device_register error: %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#943: FILE: drivers/scst/scst_local/scst_local.c:748:
+		printk(KERN_WARNING "%s: bus_register error: %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#949: FILE: drivers/scst/scst_local/scst_local.c:754:
+		printk(KERN_WARNING "%s: driver_register error: %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#955: FILE: drivers/scst/scst_local/scst_local.c:760:
+		printk(KERN_WARNING "%s: create_files error: %d\n",

CHECK:LINE_SPACING: Please don't use multiple blank lines
#960: FILE: drivers/scst/scst_local/scst_local.c:765:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#969: FILE: drivers/scst/scst_local/scst_local.c:774:
+		printk(KERN_WARNING "%s: unable to register targ griver: %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#981: FILE: drivers/scst/scst_local/scst_local.c:786:
+			printk(KERN_ERR "%s: "

WARNING:SPLIT_STRING: quoted string split across lines
#982: FILE: drivers/scst/scst_local/scst_local.c:787:
+			printk(KERN_ERR "%s: "
+					"scst_local_add_adapter failed: %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1012: FILE: drivers/scst/scst_local/scst_local.c:817:
+		printk(KERN_INFO "removing adapter in %s\n", __func__);

WARNING:NEEDLESS_IF: kmem_cache_destroy(NULL) is safe and this check is probably not required
#1029: FILE: drivers/scst/scst_local/scst_local.c:834:
+	if (tgt_specific_pool)
+		kmem_cache_destroy(tgt_specific_pool);

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#1053: FILE: drivers/scst/scst_local/scst_local.c:858:
+	if (NULL == hpnt) {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1054: FILE: drivers/scst/scst_local/scst_local.c:859:
+		printk(KERN_ERR "%s: scsi_register failed\n", __func__);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'hpnt->this_id >= 0'
#1067: FILE: drivers/scst/scst_local/scst_local.c:872:
+	if ((hpnt->this_id >= 0) && (scst_local_num_tgts > hpnt->this_id))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'scst_local_num_tgts > hpnt->this_id'
#1067: FILE: drivers/scst/scst_local/scst_local.c:872:
+	if ((hpnt->this_id >= 0) && (scst_local_num_tgts > hpnt->this_id))

CHECK:BRACES: braces {} should be used on all arms of this statement
#1074: FILE: drivers/scst/scst_local/scst_local.c:879:
+	if (ret) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1075: FILE: drivers/scst/scst_local/scst_local.c:880:
+		printk(KERN_ERR "%s: scsi_add_host failed\n", __func__);

CHECK:BRACES: Unbalanced braces around else statement
#1078: FILE: drivers/scst/scst_local/scst_local.c:883:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1094: FILE: drivers/scst/scst_local/scst_local.c:899:
+		printk(KERN_ERR "%s: Unable to locate host info\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1161: FILE: drivers/scst/scst_local/scst_local.c:966:
+		printk(KERN_INFO "%s aborted command handled\n", __func__);

WARNING:RETURN_VOID: void function return statements are not generally useful
#1197: FILE: drivers/scst/scst_local/scst_local.c:1002:
+	return;
+}

WARNING:RETURN_VOID: void function return statements are not generally useful
#1213: FILE: drivers/scst/scst_local/scst_local.c:1018:
+	return;
+}

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1236: FILE: drivers/scst/scst_local/scst_local.c:1041:
+		printk(KERN_WARNING "scst_register_target_template "

WARNING:SPLIT_STRING: quoted string split across lines
#1237: FILE: drivers/scst/scst_local/scst_local.c:1042:
+		printk(KERN_WARNING "scst_register_target_template "
+		       "failed: %d\n",

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000193967.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 52 warnings, 15 checks, 1074 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000193967.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
