CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#54: FILE: include/linux/swap.h:197:
+extern unsigned long try_to_free_pages_in_container(struct rss_container *);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct rss_container *' should also have an identifier name
#54: FILE: include/linux/swap.h:197:
+extern unsigned long try_to_free_pages_in_container(struct rss_container *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#80: FILE: mm/vmscan.c:79:
+	unsigned long (*isolate_pages)(unsigned long nr, struct list_head *dst,
+			unsigned long *scanned, int order, int mode,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#100: FILE: mm/vmscan.c:787:
+static unsigned long isolate_pages_global(unsigned long nr,
+		struct list_head *dst, unsigned long *scanned,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#149: FILE: mm/vmscan.c:1173:
+unsigned long do_try_to_free_pages(struct zone **zones, gfp_t gfp_mask,
+		struct scan_control *sc)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sc->container"
#179: FILE: mm/vmscan.c:1201:
+		if (sc->container == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sc->container"
#223: FILE: mm/vmscan.c:1241:
+	if (!sc->all_unreclaimable && sc->container == NULL)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000422955.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 1 warnings, 6 checks, 211 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000422955.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
