WARNING:MAINTAINERS_STYLE: Misordered MAINTAINERS entry - list 'M:' before 'P:'
#53: FILE: MAINTAINERS:1796:
+P:	Eric Paris
+M:	eparis@parisplace.org

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "dn"
#131: FILE: fs/notify/dnotify/dnotify.c:66:
+	for (dn = dnentry->dn; dn != NULL; dn = dn->dn_next)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:TYPO_SPELLING: 'alreay' may be misspelled - perhaps 'already'?
#166: FILE: fs/notify/dnotify/dnotify.c:101:
+	/* unlikely since we alreay passed dnotify_should_send_event() */
 	                     ^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:BRACES: braces {} should be used on all arms of this statement
#180: FILE: fs/notify/dnotify/dnotify.c:115:
+		if (dn->dn_mask & FS_DN_MULTISHOT)
[...]
+		else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#182: FILE: fs/notify/dnotify/dnotify.c:117:
+		else {

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#206: FILE: fs/notify/dnotify/dnotify.c:141:
+	/* !dir_notify_enable should never get here, don't waste time checking
+	if (!dir_notify_enable)

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#207: FILE: fs/notify/dnotify/dnotify.c:142:
+		return 0; */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#241: FILE: fs/notify/dnotify/dnotify.c:176:
+	BUG_ON(dnentry->dn);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!dnentry->dn"
#300: FILE: fs/notify/dnotify/dnotify.c:231:
+	if (dnentry->dn == NULL)

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#340: FILE: fs/notify/dnotify/dnotify.c:271:
+		     fl_owner_t id, int fd, struct file *filp, __u32 mask)
 		                                         ^^^^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "odn"
#345: FILE: fs/notify/dnotify/dnotify.c:276:
+	while (odn != NULL) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#347: FILE: fs/notify/dnotify/dnotify.c:278:
+		if ((odn->dn_owner == id) && (odn->dn_filp == filp)) {
 		                                              ^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'odn->dn_owner == id'
#347: FILE: fs/notify/dnotify/dnotify.c:278:
+		if ((odn->dn_owner == id) && (odn->dn_filp == filp)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'odn->dn_filp == filp'
#347: FILE: fs/notify/dnotify/dnotify.c:278:
+		if ((odn->dn_owner == id) && (odn->dn_filp == filp)) {

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#357: FILE: fs/notify/dnotify/dnotify.c:288:
+	dn->dn_filp = filp;
 	              ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#535: FILE: fs/notify/dnotify/dnotify.c:381:
+	/* if (f != filp) means that we lost a race and another task/thread
 	            ^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#539: FILE: fs/notify/dnotify/dnotify.c:385:
+	 * the list. */

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#540: FILE: fs/notify/dnotify/dnotify.c:386:
+	if (f != filp) {
 	         ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#561: FILE: fs/notify/dnotify/dnotify.c:398:
+	error = __f_setown(filp, task_pid(current), PIDTYPE_PID, 0);
 	                   ^^^^

WARNING:TYPO_SPELLING: 'filp' may be misspelled - perhaps 'flip'?
#569: FILE: fs/notify/dnotify/dnotify.c:406:
+	error = attach_dn(dn, dnentry, id, fd, filp, mask);
 	                                       ^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#574: FILE: fs/notify/dnotify/dnotify.c:411:
+	 * that isn't an error (and the unused dn should be freed) */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000133629.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 14 warnings, 7 checks, 746 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000133629.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
