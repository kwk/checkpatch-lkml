WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#47: 
/proc/mounts in its current state fail to disambiguate bind mounts, especially

CHECK:CAMELCASE: Avoid CamelCase: <Elong>
#139: FILE: fs/dcache.c:1916:
+			goto Elong;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#144: FILE: fs/dcache.c:1921:
+	retval = end-1;
 	            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#149: FILE: fs/dcache.c:1926:
+		struct dentry *parent;
+		if (IS_ROOT(dentry))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#156: FILE: fs/dcache.c:1933:
+		if (prepend(&end, &buflen, dentry->d_name.name,
+				dentry->d_name.len) ||

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#256: FILE: fs/namespace.c:691:
+		seq_printf(m, "unbindable");

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#258: FILE: fs/namespace.c:693:
+		seq_printf(m, "private");

WARNING:LINE_SPACING: Missing a blank line after declarations
#280: FILE: fs/seq_file.c:356:
+		char c = *p++;
+		if (!c) {

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#286: FILE: fs/seq_file.c:362:
+			break;
+		} else {

WARNING:LINE_SPACING: Missing a blank line after declarations
#341: FILE: fs/seq_file.c:402:
+		char *p = dentry_path(dentry, s, m->size - m->count);
+		if (!IS_ERR(p)) {

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#366: FILE: include/linux/dcache.h:305:
+extern char *dentry_path(struct dentry *, char *, int);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#366: FILE: include/linux/dcache.h:305:
+extern char *dentry_path(struct dentry *, char *, int);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#366: FILE: include/linux/dcache.h:305:
+extern char *dentry_path(struct dentry *, char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'int' should also have an identifier name
#366: FILE: include/linux/dcache.h:305:
+extern char *dentry_path(struct dentry *, char *, int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct seq_file *' should also have an identifier name
#386: FILE: include/linux/seq_file.h:47:
+int seq_dentry(struct seq_file *, struct dentry *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct dentry *' should also have an identifier name
#386: FILE: include/linux/seq_file.h:47:
+int seq_dentry(struct seq_file *, struct dentry *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#386: FILE: include/linux/seq_file.h:47:
+int seq_dentry(struct seq_file *, struct dentry *, char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsmount *' should also have an identifier name
#444: FILE: fs/pnode.h:38:
+int get_peer_group_id(struct vfsmount *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct vfsmount *' should also have an identifier name
#445: FILE: fs/pnode.h:39:
+int get_master_id(struct vfsmount *);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000335810.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 15 warnings, 4 checks, 305 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000335810.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
