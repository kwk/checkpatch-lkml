WARNING:TYPO_SPELLING: 'recieves' may be misspelled - perhaps 'receives'?
#37: 
exceeds stack size it recieves a segfault as it would if it exceeded the
                      ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#79: FILE: fs/exec.c:63:
+#define HUGE_STACK_MAX (256*1024*1024)
                            ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#79: FILE: fs/exec.c:63:
+#define HUGE_STACK_MAX (256*1024*1024)
                                 ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#120: FILE: fs/exec.c:594:
+		printk(KERN_DEBUG

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#126: FILE: fs/exec.c:600:
+	hugefile = hugetlb_file_setup(HUGETLB_STACK_FILE,
+					HPAGE_SIZE * stack_hpages,

WARNING:LIKELY_MISUSE: nested (un)?likely() calls, IS_ERR already uses unlikely() internally
#128: FILE: fs/exec.c:602:
+	if (unlikely(IS_ERR(hugefile))) {

WARNING:REPEATED_WORD: Possible repeated word: 'fall'
#131: FILE: fs/exec.c:605:
+		 * If huge pages are not available for this stack fall
+		 * fall back to normal pages for execution instead of

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_dbg([subsystem]dev, ... then dev_dbg(dev, ... then pr_debug(...  to printk(KERN_DEBUG ...
#134: FILE: fs/exec.c:608:
+		printk(KERN_DEBUG

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#144: FILE: fs/exec.c:618:
+static int move_to_huge_pages(struct linux_binprm *bprm,
+				struct vm_area_struct *vma, unsigned long shift)

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#181: FILE: fs/exec.c:655:
+	from_pages = kmalloc(num_pages * sizeof(struct page*), GFP_KERNEL);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#181: FILE: fs/exec.c:655:
+	from_pages = kmalloc(num_pages * sizeof(struct page*), GFP_KERNEL);

Prefer kmalloc_array/kcalloc over kmalloc/kzalloc with a
sizeof multiply.

See: https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#182: FILE: fs/exec.c:656:
+	to_pages = kmalloc(num_pages * sizeof(struct page*), GFP_KERNEL);

WARNING:ALLOC_WITH_MULTIPLY: Prefer kmalloc_array over kmalloc with multiply
#182: FILE: fs/exec.c:656:
+	to_pages = kmalloc(num_pages * sizeof(struct page*), GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#187: FILE: fs/exec.c:661:
+	ret = get_user_pages(current, mm, (old_end - arg_size) & PAGE_MASK,
+				num_pages, 0, 0, from_pages, NULL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#205: FILE: fs/exec.c:679:
+	if (IS_ERR_VALUE(do_mmap(hugefile, new_start, length,
+			PROT_READ | PROT_WRITE, MAP_FIXED | MAP_PRIVATE, 0)))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#211: FILE: fs/exec.c:685:
+	ret = get_user_pages(current, mm, (new_end - arg_size) & PAGE_MASK,
+				num_pages, 0, 0, to_pages, NULL);

WARNING:LINE_SPACING: Missing a blank line after declarations
#219: FILE: fs/exec.c:693:
+		char *vfrom, *vto;
+		vfrom = kmap(from_pages[i]);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#234: FILE: fs/exec.c:708:
+	new_vma->vm_flags &= ~(VM_GROWSUP|VM_GROWSDOWN);
 	                                 ^

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#246: FILE: fs/exec.c:720:
+	if (from_pages)
+		kfree(from_pages);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#248: FILE: fs/exec.c:722:
+	if (to_pages)
+		kfree(to_pages);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#255: FILE: fs/exec.c:729:
+	if (from_pages)
+		kfree(from_pages);

WARNING:NEEDLESS_IF: kfree(NULL) is safe and this check is probably not required
#257: FILE: fs/exec.c:731:
+	if (to_pages)
+		kfree(to_pages);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#320: FILE: include/linux/hugetlb.h:115:
+extern void hugetlb_mm_setup(struct mm_struct *mm, unsigned long addr,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#321: FILE: include/linux/hugetlb.h:116:
+extern void hugetlb_mm_setup(struct mm_struct *mm, unsigned long addr,
+				unsigned long len) __attribute__ ((weak));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __weak over __attribute__((weak))
#321: FILE: include/linux/hugetlb.h:116:
+				unsigned long len) __attribute__ ((weak));

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000248578.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 13 warnings, 10 checks, 248 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000248578.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
