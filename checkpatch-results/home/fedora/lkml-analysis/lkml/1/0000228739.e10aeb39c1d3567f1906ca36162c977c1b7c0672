WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
freezing from time to time. We usually check the logs and find various tasks

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#57: 
Signed-Off-By: Gerd v. Egidy <gve@intra2net.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:BAD_SIGN_OFF: 'Signed-off-by:' is the preferred signature form
#58: 
Signed-Off-By: Thomas Jarosch <thomas.jarosch@intra2net.com>

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#71: FILE: kernel/signal.c:521:
+unsigned long volatile siglog_wtime = 0;

Global variables should not be initialized explicitly to
0 (or NULL, false, etc.).  Your compiler (or rather your
loader, which is responsible for zeroing out the relevant
sections) automatically does it for you.

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#71: FILE: kernel/signal.c:521:
+unsigned long volatile siglog_wtime = 0;

ERROR:GLOBAL_INITIALISERS: do not initialise globals to 0
#72: FILE: kernel/signal.c:522:
+unsigned long volatile siglog_fyet = 0;

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#72: FILE: kernel/signal.c:522:
+unsigned long volatile siglog_fyet = 0;

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sig == SIGSEGV'
#86: FILE: kernel/signal.c:536:
+	if ((sig == SIGSEGV) || (sig == SIGILL) || (sig == SIGABRT)
+        || (sig == SIGBUS) || (sig == SIGKILL) || (sig == SIGFPE)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sig == SIGILL'
#86: FILE: kernel/signal.c:536:
+	if ((sig == SIGSEGV) || (sig == SIGILL) || (sig == SIGABRT)
+        || (sig == SIGBUS) || (sig == SIGKILL) || (sig == SIGFPE)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sig == SIGABRT'
#86: FILE: kernel/signal.c:536:
+	if ((sig == SIGSEGV) || (sig == SIGILL) || (sig == SIGABRT)
+        || (sig == SIGBUS) || (sig == SIGKILL) || (sig == SIGFPE)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sig == SIGBUS'
#86: FILE: kernel/signal.c:536:
+	if ((sig == SIGSEGV) || (sig == SIGILL) || (sig == SIGABRT)
+        || (sig == SIGBUS) || (sig == SIGKILL) || (sig == SIGFPE)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sig == SIGKILL'
#86: FILE: kernel/signal.c:536:
+	if ((sig == SIGSEGV) || (sig == SIGILL) || (sig == SIGABRT)
+        || (sig == SIGBUS) || (sig == SIGKILL) || (sig == SIGFPE)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'sig == SIGFPE'
#86: FILE: kernel/signal.c:536:
+	if ((sig == SIGSEGV) || (sig == SIGILL) || (sig == SIGABRT)
+        || (sig == SIGBUS) || (sig == SIGKILL) || (sig == SIGFPE)) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#87: FILE: kernel/signal.c:537:
+        || (sig == SIGBUS) || (sig == SIGKILL) || (sig == SIGFPE)) {$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#87: FILE: kernel/signal.c:537:
+	if ((sig == SIGSEGV) || (sig == SIGILL) || (sig == SIGABRT)
+        || (sig == SIGBUS) || (sig == SIGKILL) || (sig == SIGFPE)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#87: FILE: kernel/signal.c:537:
+        || (sig == SIGBUS) || (sig == SIGKILL) || (sig == SIGFPE)) {$

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#88: FILE: kernel/signal.c:538:
+        || (sig == SIGBUS) || (sig == SIGKILL) || (sig == SIGFPE)) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#96: FILE: kernel/signal.c:546:
+                    && (siglog_fyet < SIGLOG_FLOOD_BURST_LINES)) {$

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#96: FILE: kernel/signal.c:546:
+		} else if ((jiffies - siglog_wtime <= SIGLOG_FLOOD_SECONDS * HZ)
+                    && (siglog_fyet < SIGLOG_FLOOD_BURST_LINES)) {

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: kernel/signal.c:546:
+                    && (siglog_fyet < SIGLOG_FLOOD_BURST_LINES)) {$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_alert([subsystem]dev, ... then dev_alert(dev, ... then pr_alert(...  to printk(KERN_ALERT ...
#104: FILE: kernel/signal.c:554:
+				printk(KERN_ALERT "siglog: more alerts, logging disabled for"

ERROR:CODE_INDENT: code indent should use tabs where possible
#105: FILE: kernel/signal.c:555:
+                       " %d seconds\n", SIGLOG_FLOOD_SECONDS);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: kernel/signal.c:555:
+                       " %d seconds\n", SIGLOG_FLOOD_SECONDS);$

WARNING:SPLIT_STRING: quoted string split across lines
#105: FILE: kernel/signal.c:555:
+				printk(KERN_ALERT "siglog: more alerts, logging disabled for"
+                       " %d seconds\n", SIGLOG_FLOOD_SECONDS);

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#113: FILE: kernel/signal.c:563:
+		printk(KERN_WARNING "signal %d sent to %.30s[%d] uid:%u, "

ERROR:CODE_INDENT: code indent should use tabs where possible
#114: FILE: kernel/signal.c:564:
+               "parent %.30s[%d] uid:%u by %.30s[%d] uid:%u, "$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: kernel/signal.c:564:
+               "parent %.30s[%d] uid:%u by %.30s[%d] uid:%u, "$

WARNING:SPLIT_STRING: quoted string split across lines
#114: FILE: kernel/signal.c:564:
+		printk(KERN_WARNING "signal %d sent to %.30s[%d] uid:%u, "
+               "parent %.30s[%d] uid:%u by %.30s[%d] uid:%u, "

ERROR:CODE_INDENT: code indent should use tabs where possible
#115: FILE: kernel/signal.c:565:
+               "parent %.30s[%d] uid:%u\n", sig, t->comm, t->pid, t->uid,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#115: FILE: kernel/signal.c:565:
+               "parent %.30s[%d] uid:%u\n", sig, t->comm, t->pid, t->uid,$

WARNING:SPLIT_STRING: quoted string split across lines
#115: FILE: kernel/signal.c:565:
+               "parent %.30s[%d] uid:%u by %.30s[%d] uid:%u, "
+               "parent %.30s[%d] uid:%u\n", sig, t->comm, t->pid, t->uid,

ERROR:CODE_INDENT: code indent should use tabs where possible
#116: FILE: kernel/signal.c:566:
+               t->parent->comm, t->parent->pid, t->parent->uid,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: kernel/signal.c:566:
+               t->parent->comm, t->parent->pid, t->parent->uid,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#117: FILE: kernel/signal.c:567:
+               current->comm, current->pid, current->uid,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#117: FILE: kernel/signal.c:567:
+               current->comm, current->pid, current->uid,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#118: FILE: kernel/signal.c:568:
+               current->parent->comm, current->parent->pid, current->parent->uid);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: kernel/signal.c:568:
+               current->parent->comm, current->parent->pid, current->parent->uid);$

WARNING:RETURN_VOID: void function return statements are not generally useful
#122: FILE: kernel/signal.c:572:
+	return;
+}

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000228739.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 10 errors, 19 warnings, 9 checks, 81 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000228739.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
