WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#245: FILE: include/asm-x86/desc_64.h:14:
+static inline void _set_gate(int gate, unsigned type, unsigned long func,

CHECK:SPACING: No space is necessary after a cast
#261: FILE: include/asm-x86/desc_64.h:39:
+	_set_gate(nr, GATE_INTERRUPT, (unsigned long) func, 0, 0);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#268: FILE: include/asm-x86/desc_64.h:45:
+	_set_gate(nr, GATE_INTERRUPT, (unsigned long) func, 0, ist);
 	                                                       ^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:SPACING: No space is necessary after a cast
#268: FILE: include/asm-x86/desc_64.h:45:
+	_set_gate(nr, GATE_INTERRUPT, (unsigned long) func, 0, ist);

CHECK:SPACING: No space is necessary after a cast
#275: FILE: include/asm-x86/desc_64.h:51:
+	_set_gate(nr, GATE_INTERRUPT, (unsigned long) func, 3, 0);

WARNING:TYPO_SPELLING: 'ist' may be misspelled - perhaps 'is'?
#308: FILE: include/asm-x86/desc_64.h:56:
+	_set_gate(nr, GATE_INTERRUPT, (unsigned long) func, 3, ist);
 	                                                       ^^^

CHECK:SPACING: No space is necessary after a cast
#308: FILE: include/asm-x86/desc_64.h:56:
+	_set_gate(nr, GATE_INTERRUPT, (unsigned long) func, 3, ist);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#325: FILE: include/asm-x86/desc_64.h:72:
+	set_tssldt_descriptor(&tss,
 		(unsigned long)addr, DESC_TSS,

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(PAGE_SIZE) over __attribute__((aligned(PAGE_SIZE)))
#394: FILE: include/asm-x86/desc.h:39:
+} __attribute__((aligned(PAGE_SIZE)));

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#409: FILE: include/asm-x86/desc.h:54:
+#define load_tr(tr) __asm__ __volatile("ltr %0"::"m" (tr))

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#410: FILE: include/asm-x86/desc.h:55:
+#define load_ldt(ldt) __asm__ __volatile("lldt %0"::"m" (ldt))

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#415: FILE: include/asm-x86/desc.h:60:
+#define store_ldt(ldt) __asm__ ("sldt %0":"=m" (ldt))
                                          ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#415: FILE: include/asm-x86/desc.h:60:
+#define store_ldt(ldt) __asm__ ("sldt %0":"=m" (ldt))

WARNING:LINE_SPACING: Missing a blank line after declarations
#443: FILE: include/asm-x86/desc.h:88:
+	unsigned int size;
+	switch (type) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#458: FILE: include/asm-x86/desc.h:103:
+					 unsigned long tss, unsigned type,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#459: FILE: include/asm-x86/desc.h:104:
+					 unsigned size)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#484: FILE: include/asm-x86/desc.h:129:
+static inline void pack_ldt(ldt_desc *ldt, unsigned long addr,
+			   unsigned size)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#484: FILE: include/asm-x86/desc.h:129:
+			   unsigned size)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#486: FILE: include/asm-x86/desc.h:131:
+{
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#489: FILE: include/asm-x86/desc.h:134:
+		set_tssldt_descriptor(ldt,
+			     addr, DESC_LDT, size);

CHECK:BRACES: braces {} should be used on all arms of this statement
#499: FILE: include/asm-x86/desc.h:144:
+	if (likely(entries == 0))
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#501: FILE: include/asm-x86/desc.h:146:
+	else {

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#502: FILE: include/asm-x86/desc.h:147:
+		unsigned cpu = smp_processor_id();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#506: FILE: include/asm-x86/desc.h:151:
+		pack_ldt(&ldt, (unsigned long)addr,
+				entries * sizeof(ldt) - 1);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#509: FILE: include/asm-x86/desc.h:154:
+		__asm__ __volatile__("lldt %w0"::"q" (GDT_ENTRY_LDT*8));
 		                                                   ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#515: FILE: include/asm-x86/desc.h:160:
+	asm volatile("ltr %w0"::"q" (GDT_ENTRY_TSS*8));
 	                                          ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#530: FILE: include/asm-x86/desc.h:175:
+	asm volatile("sgdt %0":"=m" (*dtr));
 	                      ^

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#535: FILE: include/asm-x86/desc.h:180:
+	asm volatile("sidt %0":"=m" (*dtr));
 	                      ^

WARNING:LINE_SPACING: Missing a blank line after declarations
#541: FILE: include/asm-x86/desc.h:186:
+	unsigned long tr;
+	asm volatile("str %0":"=r" (tr));

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#541: FILE: include/asm-x86/desc.h:186:
+	asm volatile("str %0":"=r" (tr));
 	                     ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000347887.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 10 warnings, 17 checks, 489 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000347887.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
