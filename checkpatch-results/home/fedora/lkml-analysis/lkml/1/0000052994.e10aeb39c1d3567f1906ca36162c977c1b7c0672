WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#222: FILE: include/asm-generic/vmlinux.lds.h:643:
+^I/* ^I^I^I^I^I^I^I^I\$

WARNING:LINE_CONTINUATIONS: Avoid unnecessary line continuations
#226: FILE: include/asm-generic/vmlinux.lds.h:647:
+	 */								\

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#227: FILE: include/asm-generic/vmlinux.lds.h:648:
+	*(__ksymtab)							\
 	^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#228: FILE: include/asm-generic/vmlinux.lds.h:649:
+	*(__ksymtab_gpl)						\
 	^

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#229: FILE: include/asm-generic/vmlinux.lds.h:650:
+	*(__ksymtab_unused)						\
 	^

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#230: FILE: include/asm-generic/vmlinux.lds.h:651:
+	*(__ksymtab_unused_gpl)						\
 	^

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#231: FILE: include/asm-generic/vmlinux.lds.h:652:
+	*(__ksymtab_gpl_future)						\
 	^

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#232: FILE: include/asm-generic/vmlinux.lds.h:653:
+	*(__kcrctab)							\
 	^

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#233: FILE: include/asm-generic/vmlinux.lds.h:654:
+	*(__kcrctab_gpl)						\
 	^

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#234: FILE: include/asm-generic/vmlinux.lds.h:655:
+	*(__kcrctab_unused)						\
 	^

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#235: FILE: include/asm-generic/vmlinux.lds.h:656:
+	*(__kcrctab_unused_gpl)						\
 	^

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#236: FILE: include/asm-generic/vmlinux.lds.h:657:
+	*(__kcrctab_gpl_future)						\
 	^

CHECK:SPACING: spaces preferred around that '*' (ctx:ExV)
#237: FILE: include/asm-generic/vmlinux.lds.h:658:
+	*(__ksymtab_strings)						\
 	^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#269: FILE: include/linux/mod_export.h:23:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#300: FILE: include/linux/mod_export.h:88:
+#define PTR .quad

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#301: FILE: include/linux/mod_export.h:89:
+#define ALGN .balign 8

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#304: FILE: include/linux/mod_export.h:92:
+#define ALGN .balign 4

CHECK:LINE_SPACING: Please don't use multiple blank lines
#321: FILE: include/linux/mod_export.h:109:
+
+

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#323: FILE: include/linux/mod_export.h:111:
+#define __CRC_SYMBOL(sym, crcsec)				\
+	.globl SYM(__crc_##sym);				\
+	.weak SYM(__crc_##sym);					\
+	.pushsection crcsec, "a";				\
+	ALGN;							\
+	SYM(__kcrctab_##sym):					\
+	PTR SYM(__crc_##sym);					\
+	.popsection;

Macros with multiple statements should be enclosed in a
do - while block.  Same should also be the case for macros
starting with `if` to avoid logic defects::

  #define macrofun(a, b, c)                 \
    do {                                    \
            if (a == 5)                     \
                    do_this(b, c);          \
    } while (0)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#macros-enums-and-rtl

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#323: FILE: include/linux/mod_export.h:111:
+#define __CRC_SYMBOL(sym, crcsec)				\
+	.globl SYM(__crc_##sym);				\
+	.weak SYM(__crc_##sym);					\
+	.pushsection crcsec, "a";				\
+	ALGN;							\
+	SYM(__kcrctab_##sym):					\
+	PTR SYM(__crc_##sym);					\
+	.popsection;

Macro definition should not end with a semicolon. The macro
invocation style should be consistent with function calls.
This can prevent any unexpected code paths::

  #define MAC do_something;

If this macro is used within a if else statement, like::

  if (some_condition)
          MAC;

  else
          do_something;

Then there would be a compilation error, because when the macro is
expanded there are two trailing semicolons, so the else branch gets
orphaned.

See: https://lore.kernel.org/lkml/1399671106.2912.21.camel@joe-AO725/

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#328: FILE: include/linux/mod_export.h:116:
+	SYM(__kcrctab_##sym):					\
 	                    ^

WARNING:EXPORT_SYMBOL: EXPORT_SYMBOL(foo); should immediately follow its function/variable
#335: FILE: include/linux/mod_export.h:123:
+#define __EXPORT_SYMBOL(sym, sec, strsec, crcsec)		\

EXPORT_SYMBOL should immediately follow the symbol to be exported.

ERROR:MULTISTATEMENT_MACRO_USE_DO_WHILE: Macros with multiple statements should be enclosed in a do - while loop
#335: FILE: include/linux/mod_export.h:123:
+#define __EXPORT_SYMBOL(sym, sec, strsec, crcsec)		\
+	.globl SYM(sym);					\
+								\
+	__CRC_SYMBOL(sym, crcsec)				\
+								\
+	.pushsection strsec, "a";				\
+	SYM(__kstrtab_##sym):					\
+	.asciz __stringify(SYM(sym));				\
+	.popsection;						\
+								\
+	.pushsection sec, "a";					\
+	ALGN;							\
+	SYM(__ksymtab_##sym):					\
+	PTR SYM(sym);						\
+	PTR SYM(__kstrtab_##sym);				\
+	.popsection;

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'sym' - possible side-effects?
#335: FILE: include/linux/mod_export.h:123:
+#define __EXPORT_SYMBOL(sym, sec, strsec, crcsec)		\
+	.globl SYM(sym);					\
+								\
+	__CRC_SYMBOL(sym, crcsec)				\
+								\
+	.pushsection strsec, "a";				\
+	SYM(__kstrtab_##sym):					\
+	.asciz __stringify(SYM(sym));				\
+	.popsection;						\
+								\
+	.pushsection sec, "a";					\
+	ALGN;							\
+	SYM(__ksymtab_##sym):					\
+	PTR SYM(sym);						\
+	PTR SYM(__kstrtab_##sym);				\
+	.popsection;

WARNING:TRAILING_SEMICOLON: macros should not use a trailing semicolon
#335: FILE: include/linux/mod_export.h:123:
+#define __EXPORT_SYMBOL(sym, sec, strsec, crcsec)		\
+	.globl SYM(sym);					\
+								\
+	__CRC_SYMBOL(sym, crcsec)				\
+								\
+	.pushsection strsec, "a";				\
+	SYM(__kstrtab_##sym):					\
+	.asciz __stringify(SYM(sym));				\
+	.popsection;						\
+								\
+	.pushsection sec, "a";					\
+	ALGN;							\
+	SYM(__ksymtab_##sym):					\
+	PTR SYM(sym);						\
+	PTR SYM(__kstrtab_##sym);				\
+	.popsection;

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#341: FILE: include/linux/mod_export.h:129:
+	SYM(__kstrtab_##sym):					\
 	                    ^

ERROR:SPACING: spaces required around that ':' (ctx:VxE)
#347: FILE: include/linux/mod_export.h:135:
+	SYM(__ksymtab_##sym):					\
 	                    ^

WARNING:FUNCTION_ARGUMENTS: function definition argument '__kstrtab_' should also have an identifier name
#349: FILE: include/linux/mod_export.h:137:
+	PTR SYM(__kstrtab_##sym);				\

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:STATIC_CONST_CHAR_ARRAY: static const char * array should probably be static const char * const
#410: FILE: scripts/mod/modpost.c:1985:
+static const char *section_names[] = {

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#411: FILE: scripts/mod/modpost.c:1986:
+^I[export_plain] ^I^I= "",$

WARNING:SPLIT_STRING: quoted string split across lines
#451: FILE: scripts/mod/modpost.c:2026:
+		buf_printf(&buf, "__EXPORT_SYMBOL(%s,"
+					" __ksymtab%s_sorted,"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#452: FILE: scripts/mod/modpost.c:2027:
+					" __ksymtab%s_sorted,"
+					" __ksymtab_strings_sorted,"

WARNING:SPLIT_STRING: quoted string split across lines
#453: FILE: scripts/mod/modpost.c:2028:
+					" __ksymtab_strings_sorted,"
+					" __kcrctab%s_sorted)\n",

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000052994.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 11 warnings, 14 checks, 403 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000052994.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
