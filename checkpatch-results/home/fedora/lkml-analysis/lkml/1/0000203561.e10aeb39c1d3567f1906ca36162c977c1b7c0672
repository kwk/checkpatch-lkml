WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
Add support for building hierarchies in resource counters. Cgroups allows us

WARNING:TYPO_SPELLING: 'hiearchy' may be misspelled - perhaps 'hierarchy'?
#38: 
provides the infrastructure for resource counters that have the same hiearchy
                                                                     ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'hiearchy' may be misspelled - perhaps 'hierarchy'?
#41: 
These set of patches are based on the resource counter hiearchy patches posted
                                                       ^^^^^^^^

WARNING:TYPO_SPELLING: 'hiearchies' may be misspelled - perhaps 'hierarchies'?
#44: 
NOTE: Building hiearchies is expensive, deeper hierarchies imply charging
               ^^^^^^^^^^

WARNING:TYPO_SPELLING: 'hiearchies' may be misspelled - perhaps 'hierarchies'?
#45: 
the all the way up to the root. It is known that hiearchies are expensive,
                                                 ^^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#112: FILE: kernel/res_counter.c:39:
+int res_counter_charge(struct res_counter *counter, unsigned long val,
+			struct res_counter **limit_fail_at)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "c"
#123: FILE: kernel/res_counter.c:47:
+	for (c = counter; c != NULL; c = c->parent) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "c"
#155: FILE: kernel/res_counter.c:83:
+	for (c = counter; c != NULL; c = c->parent) {

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#186: FILE: mm/memcontrol.c:507:
+			ret = res_counter_charge(&mem->memsw, PAGE_SIZE,
+							&fail_res);

CHECK:BRACES: braces {} should be used on all arms of this statement
#210: FILE: mm/memcontrol.c:1703:
+	if (cont->parent == NULL) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cont->parent"
#210: FILE: mm/memcontrol.c:1703:
+	if (cont->parent == NULL) {

CHECK:BRACES: Unbalanced braces around else statement
#213: FILE: mm/memcontrol.c:1706:
+	} else

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: mm/memcontrol.c:1709:
+ ^Ires_counter_init(&mem->res, parent ? &parent->res : NULL);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#216: FILE: mm/memcontrol.c:1709:
+ ^Ires_counter_init(&mem->res, parent ? &parent->res : NULL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: mm/memcontrol.c:1709:
+ ^Ires_counter_init(&mem->res, parent ? &parent->res : NULL);$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000203561.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 7 warnings, 7 checks, 146 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000203561.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
