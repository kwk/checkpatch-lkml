CHECK:UNCOMMENTED_DEFINITION: struct mutex definition without comment
#159: FILE: fs/dlm/dlm_internal.h:455:
+	struct mutex		ls_timeout_mutex;

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#195: FILE: fs/dlm/lock.c:91:
+void dlm_timeout_warn(struct dlm_lkb *lkb);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#208: FILE: fs/dlm/lock.c:297:
+	/* if the operation was a cancel, then return -DLM_ECANCEL, if a
+	   timeout caused the cancel then return -ETIMEDOUT */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#208: FILE: fs/dlm/lock.c:297:
+	   timeout caused the cancel then return -ETIMEDOUT */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#268: FILE: fs/dlm/lock.c:1048:
+/* FIXME: is it safe to look at lkb_exflags, lkb_flags, lkb_timestamp, and
+   lkb_lksb_timeout without lock_rsb?  Note: we can't lock timeout_mutex

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#271: FILE: fs/dlm/lock.c:1051:
+   be accessed under the timeout_mutex. */

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#287: FILE: fs/dlm/lock.c:1067:
+		list_for_each_entry(lkb, &ls->ls_timeout, lkb_time_list) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#290: FILE: fs/dlm/lock.c:1070:
+					  lkb->lkb_timeout_cs * HZ/100))
 					                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#295: FILE: fs/dlm/lock.c:1075:
+^I^I^I^I   ^I   dlm_config.ci_timewarn_cs * HZ/100))$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#295: FILE: fs/dlm/lock.c:1075:
+^I^I^I^I   ^I   dlm_config.ci_timewarn_cs * HZ/100))$

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#295: FILE: fs/dlm/lock.c:1075:
+				   	   dlm_config.ci_timewarn_cs * HZ/100))
 				   	                                 ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#334: FILE: fs/dlm/lock.c:1114:
+/* This is only called by dlm_recoverd, and we rely on dlm_ls_stop() stopping
+   dlm_recoverd before checking/setting ls_recover_begin. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#334: FILE: fs/dlm/lock.c:1114:
+   dlm_recoverd before checking/setting ls_recover_begin. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#452: FILE: fs/dlm/lockspace.c:430:
+	/* ls_exflags are forced to match among nodes, and we don't
+	   need to require all nodes to have TIMEWARN active */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#452: FILE: fs/dlm/lockspace.c:430:
+	   need to require all nodes to have TIMEWARN active */

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#487: FILE: fs/dlm/main.c:29:
+void dlm_netlink_exit(void);

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#540: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#545: FILE: fs/dlm/netlink.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#559: FILE: fs/dlm/netlink.c:15:
+static uint32_t dlm_nl_seqnum;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#560: FILE: fs/dlm/netlink.c:16:
+static uint32_t listener_nlpid;

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#616: FILE: fs/dlm/netlink.c:72:
+	printk("user_cmd nlpid %u\n", listener_nlpid);

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'user_cmd', this function's name, in a string
#616: FILE: fs/dlm/netlink.c:72:
+	printk("user_cmd nlpid %u\n", listener_nlpid);

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

CHECK:SPACING: No space is necessary after a cast
#651: FILE: fs/dlm/netlink.c:107:
+	struct dlm_user_args *ua = (struct dlm_user_args *) lkb->lkb_astparam;

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#788: FILE: include/linux/dlm_netlink.h:1:
+/*

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#808: FILE: include/linux/dlm_netlink.h:21:
+	uint16_t version;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#809: FILE: include/linux/dlm_netlink.h:22:
+	uint32_t lockspace_id;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#812: FILE: include/linux/dlm_netlink.h:25:
+	uint32_t id;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u32' over 'uint32_t'
#813: FILE: include/linux/dlm_netlink.h:26:
+	uint32_t remid;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#814: FILE: include/linux/dlm_netlink.h:27:
+	uint64_t xid;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's8' over 'int8_t'
#815: FILE: include/linux/dlm_netlink.h:28:
+	int8_t status;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's8' over 'int8_t'
#816: FILE: include/linux/dlm_netlink.h:29:
+	int8_t grmode;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 's8' over 'int8_t'
#817: FILE: include/linux/dlm_netlink.h:30:
+	int8_t rqmode;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000408908.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 16 warnings, 15 checks, 686 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000408908.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
