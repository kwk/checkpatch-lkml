WARNING:BAD_SIGN_OFF: Use a single space after Signed-off-by:
#36: 
Signed-off-by:	Douglas Thompson	<dougthompson@xmission.com>

The signed-off-by line does not fall in line with the standards
specified by the community.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#developer-s-certificate-of-origin-1-1

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#56: FILE: drivers/edac/edac_core.h:331:
+ * ^Isysfs top level entries$

ERROR:CODE_INDENT: code indent should use tabs where possible
#59: FILE: drivers/edac/edac_core.h:334:
+        struct attribute attr;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#59: FILE: drivers/edac/edac_core.h:334:
+        struct attribute attr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#60: FILE: drivers/edac/edac_core.h:335:
+        ssize_t (*show)(struct mem_ctl_info *,char *);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#60: FILE: drivers/edac/edac_core.h:335:
+        ssize_t (*show)(struct mem_ctl_info *,char *);$

ERROR:SPACING: space required after that ',' (ctx:OxV)
#60: FILE: drivers/edac/edac_core.h:335:
+        ssize_t (*show)(struct mem_ctl_info *,char *);
                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mem_ctl_info *' should also have an identifier name
#60: FILE: drivers/edac/edac_core.h:335:
+        ssize_t (*show)(struct mem_ctl_info *,char *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#60: FILE: drivers/edac/edac_core.h:335:
+        ssize_t (*show)(struct mem_ctl_info *,char *);

ERROR:CODE_INDENT: code indent should use tabs where possible
#61: FILE: drivers/edac/edac_core.h:336:
+        ssize_t (*store)(struct mem_ctl_info *, const char *,size_t);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#61: FILE: drivers/edac/edac_core.h:336:
+        ssize_t (*store)(struct mem_ctl_info *, const char *,size_t);$

ERROR:SPACING: space required after that ',' (ctx:OxV)
#61: FILE: drivers/edac/edac_core.h:336:
+        ssize_t (*store)(struct mem_ctl_info *, const char *,size_t);
                                                             ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mem_ctl_info *' should also have an identifier name
#61: FILE: drivers/edac/edac_core.h:336:
+        ssize_t (*store)(struct mem_ctl_info *, const char *,size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#61: FILE: drivers/edac/edac_core.h:336:
+        ssize_t (*store)(struct mem_ctl_info *, const char *,size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#61: FILE: drivers/edac/edac_core.h:336:
+        ssize_t (*store)(struct mem_ctl_info *, const char *,size_t);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#73: FILE: drivers/edac/edac_core.h:368:
 
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:OxV)
#115: FILE: drivers/edac/edac_core.h:539:
+	ssize_t (*show)(struct edac_device_ctl_info *,char *);
 	                                             ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct edac_device_ctl_info *' should also have an identifier name
#115: FILE: drivers/edac/edac_core.h:539:
+	ssize_t (*show)(struct edac_device_ctl_info *,char *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'char *' should also have an identifier name
#115: FILE: drivers/edac/edac_core.h:539:
+	ssize_t (*show)(struct edac_device_ctl_info *,char *);

ERROR:SPACING: space required after that ',' (ctx:OxV)
#116: FILE: drivers/edac/edac_core.h:540:
+	ssize_t (*store)(struct edac_device_ctl_info *, const char *,size_t);
 	                                                            ^

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct edac_device_ctl_info *' should also have an identifier name
#116: FILE: drivers/edac/edac_core.h:540:
+	ssize_t (*store)(struct edac_device_ctl_info *, const char *,size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'const char *' should also have an identifier name
#116: FILE: drivers/edac/edac_core.h:540:
+	ssize_t (*store)(struct edac_device_ctl_info *, const char *,size_t);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'size_t' should also have an identifier name
#116: FILE: drivers/edac/edac_core.h:540:
+	ssize_t (*store)(struct edac_device_ctl_info *, const char *,size_t);

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#159: FILE: drivers/edac/edac_mc_sysfs.c:8:
www.softwarebitmaker.com

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:SPACING: space required after that ',' (ctx:VxV)
#181: FILE: drivers/edac/edac_mc_sysfs.c:664:
+#define to_mcidev_attr(a) container_of(a,struct
                                         ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sysfs_attrib->attr.name"
#241: FILE: drivers/edac/edac_mc_sysfs.c:767:
+	while (sysfs_attrib->attr.name != NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: No space is necessary after a cast
#243: FILE: drivers/edac/edac_mc_sysfs.c:769:
+					(struct attribute*) sysfs_attrib);

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#243: FILE: drivers/edac/edac_mc_sysfs.c:769:
+					(struct attribute*) sysfs_attrib);

When using pointer data or a function that returns a pointer type,
the preferred use of * is adjacent to the data name or function name
and not adjacent to the type name.
Examples::

  char *linux_banner;
  unsigned long long memparse(char *ptr, char **retptr);
  char *match_strdup(substring_t *s);

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#244: FILE: drivers/edac/edac_mc_sysfs.c:770:
+		if (err) {
+			return err;
+		}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#294: FILE: drivers/edac/edac_device_sysfs.c:626:
+static int edac_device_add_sysfs_attributes(

ERROR:CODE_INDENT: code indent should use tabs where possible
#298: FILE: drivers/edac/edac_device_sysfs.c:630:
+        struct edac_dev_sysfs_attribute *sysfs_attrib;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#298: FILE: drivers/edac/edac_device_sysfs.c:630:
+        struct edac_dev_sysfs_attribute *sysfs_attrib;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#300: FILE: drivers/edac/edac_device_sysfs.c:632:
+        /* point to the start of the array and iterate over it$

ERROR:CODE_INDENT: code indent should use tabs where possible
#301: FILE: drivers/edac/edac_device_sysfs.c:633:
+         * adding each attribute listed to this mci instance's kobject$

ERROR:CODE_INDENT: code indent should use tabs where possible
#302: FILE: drivers/edac/edac_device_sysfs.c:634:
+         */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#303: FILE: drivers/edac/edac_device_sysfs.c:635:
+        sysfs_attrib = edac_dev->sysfs_attributes;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#303: FILE: drivers/edac/edac_device_sysfs.c:635:
+        sysfs_attrib = edac_dev->sysfs_attributes;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#305: FILE: drivers/edac/edac_device_sysfs.c:637:
+        while (sysfs_attrib->attr.name != NULL) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: drivers/edac/edac_device_sysfs.c:637:
+        while (sysfs_attrib->attr.name != NULL) {$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "sysfs_attrib->attr.name"
#305: FILE: drivers/edac/edac_device_sysfs.c:637:
+        while (sysfs_attrib->attr.name != NULL) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#306: FILE: drivers/edac/edac_device_sysfs.c:638:
+                err = sysfs_create_file(&edac_dev->kobj,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: drivers/edac/edac_device_sysfs.c:638:
+                err = sysfs_create_file(&edac_dev->kobj,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#307: FILE: drivers/edac/edac_device_sysfs.c:639:
+                                        (struct attribute*)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#307: FILE: drivers/edac/edac_device_sysfs.c:639:
+                                        (struct attribute*)$

ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
#307: FILE: drivers/edac/edac_device_sysfs.c:639:
+                                        (struct attribute*)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#308: FILE: drivers/edac/edac_device_sysfs.c:639:
+                err = sysfs_create_file(&edac_dev->kobj,
sysfs_attrib);

ERROR:CODE_INDENT: code indent should use tabs where possible
#309: FILE: drivers/edac/edac_device_sysfs.c:640:
+                if (err) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#309: FILE: drivers/edac/edac_device_sysfs.c:640:
+                if (err) {$

WARNING:BRACES: braces {} are not necessary for single statement blocks
#309: FILE: drivers/edac/edac_device_sysfs.c:640:
+                if (err) {
+                        return err;
+                }

ERROR:CODE_INDENT: code indent should use tabs where possible
#310: FILE: drivers/edac/edac_device_sysfs.c:641:
+                        return err;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#310: FILE: drivers/edac/edac_device_sysfs.c:641:
+                        return err;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#311: FILE: drivers/edac/edac_device_sysfs.c:642:
+                }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: drivers/edac/edac_device_sysfs.c:642:
+                }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#313: FILE: drivers/edac/edac_device_sysfs.c:644:
+                sysfs_attrib++;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: drivers/edac/edac_device_sysfs.c:644:
+                sysfs_attrib++;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#314: FILE: drivers/edac/edac_device_sysfs.c:645:
+        }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#314: FILE: drivers/edac/edac_device_sysfs.c:645:
+        }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#316: FILE: drivers/edac/edac_device_sysfs.c:647:
+        return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: drivers/edac/edac_device_sysfs.c:647:
+        return 0;$

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "edac_dev->sysfs_attributes"
#330: FILE: drivers/edac/edac_device_sysfs.c:674:
+	if (edac_dev->sysfs_attributes != NULL) {

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000423232.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 25 errors, 28 warnings, 7 checks, 295 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000423232.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
