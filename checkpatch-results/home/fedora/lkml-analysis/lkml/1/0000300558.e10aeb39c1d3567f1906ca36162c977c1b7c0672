CHECK:LINE_SPACING: Please don't use multiple blank lines
#116: FILE: fs/unionfs/file.c:79:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#125: FILE: fs/unionfs/file.c:88:
+	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:CONST_STRUCT: struct vm_operations_struct should normally be const
#134: FILE: fs/unionfs/file.c:97:
+	struct vm_operations_struct *saved_vm_ops = NULL;

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#158: FILE: fs/unionfs/file.c:134:
+			printk(KERN_ERR "unionfs: lower mmap failed %d\n", err);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#165: FILE: fs/unionfs/file.c:141:
+			printk(KERN_ERR "unionfs: do_munmap failed %d\n", err);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#174: FILE: fs/unionfs/file.c:150:
+		printk(KERN_ERR "unionfs: generic_file_mmap failed %d\n", err);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#335: FILE: fs/unionfs/mmap.c:34:
+	BUG();

WARNING:CONST_STRUCT: struct vm_operations_struct should normally be const
#350: FILE: fs/unionfs/mmap.c:42:
+	struct vm_operations_struct *lower_vm_ops;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#362: FILE: fs/unionfs/mmap.c:44:
+	BUG_ON(!vma);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#365: FILE: fs/unionfs/mmap.c:47:
+	BUG_ON(!lower_vm_ops);

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#407: FILE: fs/unionfs/mmap.c:50:
+	BUG_ON(!lower_file);

WARNING:CONST_STRUCT: struct address_space_operations should normally be const
#551: FILE: fs/unionfs/mmap.c:78:
+struct address_space_operations unionfs_dummy_aops = {

WARNING:CONST_STRUCT: struct vm_operations_struct should normally be const
#558: FILE: fs/unionfs/mmap.c:82:
+struct vm_operations_struct unionfs_vm_ops = {

WARNING:CONST_STRUCT: struct address_space_operations should normally be const
#570: FILE: fs/unionfs/union.h:78:
+extern struct address_space_operations unionfs_aops, unionfs_dummy_aops;

WARNING:CONST_STRUCT: struct vm_operations_struct should normally be const
#571: FILE: fs/unionfs/union.h:79:
+extern struct vm_operations_struct unionfs_vm_ops;

WARNING:CONST_STRUCT: struct vm_operations_struct should normally be const
#579: FILE: fs/unionfs/union.h:93:
+	struct vm_operations_struct *lower_vm_ops;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000300558.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 15 warnings, 1 checks, 515 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000300558.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
