CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*io_req)...) over kmalloc(sizeof(struct io_thread_req)...)
#90: FILE: arch/um/drivers/ubd_kern.c:1104:
+			io_req = kmalloc(sizeof(struct io_thread_req),

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

ERROR:SPACING: space required before the open brace '{'
#92: FILE: arch/um/drivers/ubd_kern.c:1106:
+			if(io_req == NULL){

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#92: FILE: arch/um/drivers/ubd_kern.c:1106:
+			if(io_req == NULL){

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!io_req"
#92: FILE: arch/um/drivers/ubd_kern.c:1106:
+			if(io_req == NULL){

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

ERROR:SPACING: space required before the open parenthesis '('
#93: FILE: arch/um/drivers/ubd_kern.c:1107:
+				if(list_empty(&dev->restart))

ERROR:SPACING: space required before the open brace '{'
#106: FILE: arch/um/drivers/ubd_kern.c:1117:
+			if(n != sizeof(struct io_thread_req *)){

ERROR:SPACING: space required before the open parenthesis '('
#106: FILE: arch/um/drivers/ubd_kern.c:1117:
+			if(n != sizeof(struct io_thread_req *)){

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#123: FILE: arch/um/drivers/ubd_kern.c:1455:
+		n = os_read_file_k(kernel_fd, &req,
+				 sizeof(struct io_thread_req *));

ERROR:SPACING: space required before the open brace '{'
#124: FILE: arch/um/drivers/ubd_kern.c:1456:
+		if(n != sizeof(struct io_thread_req *)){

ERROR:SPACING: space required before the open parenthesis '('
#124: FILE: arch/um/drivers/ubd_kern.c:1456:
+		if(n != sizeof(struct io_thread_req *)){

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#137: FILE: arch/um/drivers/ubd_kern.c:1469:
+		n = os_write_file_k(kernel_fd, &req,
+				  sizeof(struct io_thread_req *));

ERROR:SPACING: space required before the open parenthesis '('
#138: FILE: arch/um/drivers/ubd_kern.c:1470:
+		if(n != sizeof(struct io_thread_req *))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000446288.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 8 errors, 0 warnings, 4 checks, 92 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000446288.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
