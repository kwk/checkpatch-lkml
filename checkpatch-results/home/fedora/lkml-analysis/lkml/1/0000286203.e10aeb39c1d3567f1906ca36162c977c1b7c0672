WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#46: 
> > > whaa?  kmalloc is ready to be used quite early in boot.  It's a bit of

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#100: FILE: kernel/sched.c:254:
+#define CPU_CGROUP_STAT_THRESHOLD 1 << 30

CHECK:BIT_MACRO: Prefer using the BIT macro
#100: FILE: kernel/sched.c:254:
+#define CPU_CGROUP_STAT_THRESHOLD 1 << 30

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#115: FILE: kernel/sched.c:269:
+static void __cpu_cgroup_stat_add(struct cpu_cgroup_stat *stat,
+		enum cpu_cgroup_stat_index idx, int val)

WARNING:LINE_SPACING: Missing a blank line after declarations
#138: FILE: kernel/sched.c:3870:
+		struct task_group *tg;
+		tg = task_group(p);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#140: FILE: kernel/sched.c:3872:
+		__cpu_cgroup_stat_add(&tg->stat, CPU_CGROUP_STAT_UTIME,
+				cputime_to_msecs(cputime));

WARNING:LINE_SPACING: Missing a blank line after declarations
#154: FILE: kernel/sched.c:3942:
+		struct task_group *tg;
+		tg = task_group(p);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#156: FILE: kernel/sched.c:3944:
+		__cpu_cgroup_stat_add(&tg->stat, CPU_CGROUP_STAT_STIME,
+				cputime_to_msecs(cputime));

ERROR:TRAILING_WHITESPACE: trailing whitespace
#166: FILE: kernel/sched.c:7473:
+^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required before the open parenthesis '('
#167: FILE: kernel/sched.c:7474:
+	for(i = 0; i < CPU_CGROUP_STAT_NSTATS; i++) {

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BRACES: braces {} are not necessary for single statement blocks
#167: FILE: kernel/sched.c:7474:
+	for(i = 0; i < CPU_CGROUP_STAT_NSTATS; i++) {
+		percpu_counter_init(&init_task_group.stat.cpustat[i], 0);
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#191: FILE: kernel/sched.c:8255:
+	for(i = 0; i < CPU_CGROUP_STAT_NSTATS; i++)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#203: FILE: kernel/sched.c:8308:
+static s64 cpu_cgroup_read_stat(struct cpu_cgroup_stat *stat,
+		enum cpu_cgroup_stat_index idx)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#217: FILE: kernel/sched.c:8322:
+static int cpu_cgroup_stats_show(struct cgroup *cgrp, struct cftype *cft,
+				struct cgroup_map_cb *cb)

WARNING:LINE_SPACING: Missing a blank line after declarations
#225: FILE: kernel/sched.c:8330:
+		s64 val;
+		val = cpu_cgroup_read_stat(stat, i);

ERROR:SPACING: space required after that ',' (ctx:VxV)
#262: FILE: lib/percpu_counter.c:17:
+#define per_cpu_ptr(var,cpu) &var[cpu]
                        ^

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#262: FILE: lib/percpu_counter.c:17:
+#define per_cpu_ptr(var,cpu) &var[cpu]

CHECK:MACRO_ARG_PRECEDENCE: Macro argument 'var' may be better as '(var)' to avoid precedence issues
#262: FILE: lib/percpu_counter.c:17:
+#define per_cpu_ptr(var,cpu) &var[cpu]

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000286203.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 5 warnings, 7 checks, 187 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000286203.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
