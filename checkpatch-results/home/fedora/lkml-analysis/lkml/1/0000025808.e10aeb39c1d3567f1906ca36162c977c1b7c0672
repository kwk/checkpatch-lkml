WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#55: FILE: include/linux/fs.h:1507:
+	unsigned long (*mmap_pgoff)(struct file *, unsigned long,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#55: FILE: include/linux/fs.h:1507:
+	unsigned long (*mmap_pgoff)(struct file *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#55: FILE: include/linux/fs.h:1507:
+	unsigned long (*mmap_pgoff)(struct file *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#55: FILE: include/linux/fs.h:1507:
+	unsigned long (*mmap_pgoff)(struct file *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#55: FILE: include/linux/fs.h:1507:
+	unsigned long (*mmap_pgoff)(struct file *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#55: FILE: include/linux/fs.h:1507:
+	unsigned long (*mmap_pgoff)(struct file *, unsigned long,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#56: FILE: include/linux/fs.h:1508:
+	unsigned long (*mmap_pgoff)(struct file *, unsigned long,
+			unsigned long, unsigned long,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#65: FILE: include/linux/fs.h:2197:
+extern unsigned long generic_file_mmap_pgoff(struct file *, unsigned long,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#65: FILE: include/linux/fs.h:2197:
+extern unsigned long generic_file_mmap_pgoff(struct file *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#65: FILE: include/linux/fs.h:2197:
+extern unsigned long generic_file_mmap_pgoff(struct file *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#65: FILE: include/linux/fs.h:2197:
+extern unsigned long generic_file_mmap_pgoff(struct file *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#65: FILE: include/linux/fs.h:2197:
+extern unsigned long generic_file_mmap_pgoff(struct file *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#65: FILE: include/linux/fs.h:2197:
+extern unsigned long generic_file_mmap_pgoff(struct file *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#65: FILE: include/linux/fs.h:2197:
+extern unsigned long generic_file_mmap_pgoff(struct file *, unsigned long,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#66: FILE: include/linux/fs.h:2198:
+extern unsigned long generic_file_mmap_pgoff(struct file *, unsigned long,
+		unsigned long, unsigned long, unsigned long, unsigned long);

ERROR:TRAILING_WHITESPACE: trailing whitespace
#86: FILE: mm/filemap.c:1605:
+ */ $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#88: FILE: mm/filemap.c:1607:
+unsigned long generic_file_mmap_pgoff(struct file *file, unsigned long addr,
+			unsigned long len, unsigned long prot,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#112: FILE: mm/mmap.c:1050:
+	unsigned long (*func)(struct file *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#112: FILE: mm/mmap.c:1050:
+	unsigned long (*func)(struct file *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#112: FILE: mm/mmap.c:1050:
+	unsigned long (*func)(struct file *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#112: FILE: mm/mmap.c:1050:
+	unsigned long (*func)(struct file *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#112: FILE: mm/mmap.c:1050:
+	unsigned long (*func)(struct file *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#112: FILE: mm/mmap.c:1050:
+	unsigned long (*func)(struct file *, unsigned long,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#113: FILE: mm/mmap.c:1051:
+	unsigned long (*func)(struct file *, unsigned long,
+			unsigned long, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct file *' should also have an identifier name
#141: FILE: mm/nommu.c:1410:
+	unsigned long (*func)(struct file *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#141: FILE: mm/nommu.c:1410:
+	unsigned long (*func)(struct file *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#141: FILE: mm/nommu.c:1410:
+	unsigned long (*func)(struct file *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#141: FILE: mm/nommu.c:1410:
+	unsigned long (*func)(struct file *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#141: FILE: mm/nommu.c:1410:
+	unsigned long (*func)(struct file *, unsigned long,

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned long' should also have an identifier name
#141: FILE: mm/nommu.c:1410:
+	unsigned long (*func)(struct file *, unsigned long,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#142: FILE: mm/nommu.c:1411:
+	unsigned long (*func)(struct file *, unsigned long,
+			unsigned long, unsigned long,

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000025808.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 24 warnings, 6 checks, 92 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000025808.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
