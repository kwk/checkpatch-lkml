WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#39: 
1. Fix enumeration in configurations with multiple switches. The patch adds:

CHECK:BRACES: braces {} should be used on all arms of this statement
#76: FILE: drivers/rapidio/rio-scan.c:330:
+		if (do_enum) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#81: FILE: drivers/rapidio/rio-scan.c:335:
+		} else

WARNING:DEEP_INDENTATION: Too many leading tabs - consider code refactoring
#206: FILE: drivers/rapidio/rio-scan.c:643:
+						if (destid == port->host_deviceid)

Indentation with 6 or more tabs usually indicate overly indented
code.

It is suggested to refactor excessive indentation of
if/else/for/do/while/switch statements.

See: https://lore.kernel.org/lkml/1328311239.21255.24.camel@joe2Laptop/

ERROR:TRAILING_WHITESPACE: trailing whitespace
#260: FILE: drivers/rapidio/rio-scan.c:833:
+^I^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#260: FILE: drivers/rapidio/rio-scan.c:833:
+	list_for_each_entry(rdev, &rio_devices, global_list) {
+		

ERROR:TRAILING_WHITESPACE: trailing whitespace
#261: FILE: drivers/rapidio/rio-scan.c:834:
+^I^Idestid = (rio_is_switch(rdev))?rdev->rswitch->destid:rdev->destid; $

CHECK:SPACING: spaces required around that '?' (ctx:VxV)
#261: FILE: drivers/rapidio/rio-scan.c:834:
+		destid = (rio_is_switch(rdev))?rdev->rswitch->destid:rdev->destid; 
 		                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces required around that ':' (ctx:VxV)
#261: FILE: drivers/rapidio/rio-scan.c:834:
+		destid = (rio_is_switch(rdev))?rdev->rswitch->destid:rdev->destid; 
 		                                                    ^

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#264: FILE: drivers/rapidio/rio-scan.c:837:
+		list_for_each_entry(rswitch, &rio_switches, node) {
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'rdev->rswitch == rswitch'
#265: FILE: drivers/rapidio/rio-scan.c:838:
+			if (rio_is_switch(rdev)	&& (rdev->rswitch == rswitch))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#268: FILE: drivers/rapidio/rio-scan.c:841:
+			if (RIO_INVALID_ROUTE == rswitch->route_table[destid]) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#269: FILE: drivers/rapidio/rio-scan.c:842:
+			if (RIO_INVALID_ROUTE == rswitch->route_table[destid]) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#271: FILE: drivers/rapidio/rio-scan.c:844:
+				sport = rio_get_swpinfo_inport(port,
+						rswitch->destid, rswitch->hopcount);

WARNING:LONG_LINE: line length of 108 exceeds 100 columns
#274: FILE: drivers/rapidio/rio-scan.c:847:
+					rio_route_add_entry(port, rswitch, RIO_GLOBAL_TABLE, destid, sport);

The line has exceeded the specified maximum length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

Earlier, the default line length was 80 columns.  Commit bdc48fa11e46
("checkpatch/coding-style: deprecate 80-column warning") increased the
limit to 100 columns.  This is not a hard limit either and it's
preferable to stay within 80 columns whenever possible.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000472488.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 4 warnings, 9 checks, 232 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000472488.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
