WARNING:TYPO_SPELLING: 'aproximately' may be misspelled - perhaps 'approximately'?
#31: 
limits enforcement at least aproximately works.
                            ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#34: 
mostly handled by the generic VFS code (which implements a trie of structures

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#141: FILE: fs/ocfs2/dlmglue.c:294:
+	BUG_ON(lockres->l_type != OCFS2_LOCK_TYPE_QINFO);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#260: FILE: fs/ocfs2/dlmglue.c:3558:
+ * so that we can safely refresh quota info from disk. */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:CODE_INDENT: code indent should use tabs where possible
#329: FILE: fs/ocfs2/dlmglue.h:87:
+                               struct ocfs2_mem_dqinfo *info);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: fs/ocfs2/dlmglue.h:87:
+                               struct ocfs2_mem_dqinfo *info);$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#410: FILE: fs/ocfs2/ocfs2_fs.h:901:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#413: FILE: fs/ocfs2/ocfs2_fs.h:904:
+ * checksums, etc. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#425: FILE: fs/ocfs2/ocfs2_fs.h:916:
+ * header) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#430: FILE: fs/ocfs2/ocfs2_fs.h:921:
+				 * global quota file */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#434: FILE: fs/ocfs2/ocfs2_fs.h:925:
+				 * file */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#438: FILE: fs/ocfs2/ocfs2_fs.h:929:
+ * for future use. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#471: FILE: fs/ocfs2/ocfs2_fs.h:962:
+				 * quota has been cleanly turned off) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#476: FILE: fs/ocfs2/ocfs2_fs.h:967:
+ * header) */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#480: FILE: fs/ocfs2/ocfs2_fs.h:971:
+				 * with a bitmap */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#488: FILE: fs/ocfs2/ocfs2_fs.h:979:
+				 * chunk of quota file */

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#532: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#537: FILE: fs/ocfs2/quota.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:LONG_LINE_COMMENT: line length of 113 exceeds 100 columns
#567: FILE: fs/ocfs2/quota.h:31:
+	unsigned int dq_use_count;	/* Number of nodes having reference to this entry in global quota file */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:LONG_LINE_COMMENT: line length of 123 exceeds 100 columns
#581: FILE: fs/ocfs2/quota.h:45:
+	struct buffer_head *dqi_gqi_bh;	/* Buffer head with global quota file inode - set only if inode lock is obtained */

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#616: FILE: fs/ocfs2/quota.h:80:
+}
+static inline int ocfs2_global_release_dquot(struct dquot *dquot)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#636: FILE: fs/ocfs2/quota_global.c:1:
+/*

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#655: FILE: fs/ocfs2/quota_global.c:20:
+#include "uptodate.h"
           ^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#717: FILE: fs/ocfs2/quota_global.c:82:
+
+

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#754: FILE: fs/ocfs2/quota_global.c:119:
+ * operations. Caller is responsible for acquiring it. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#790: FILE: fs/ocfs2/quota_global.c:155:
+ * enough credits) */

WARNING:SPLIT_STRING: quoted string split across lines
#805: FILE: fs/ocfs2/quota_global.c:170:
+		mlog(ML_ERROR, "Quota write (off=%llu, len=%llu) cancelled "
+		     "because transaction was not started.\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#837: FILE: fs/ocfs2/quota_global.c:202:
+		err = ocfs2_journal_access(handle, gqinode, bh,
+						OCFS2_JOURNAL_ACCESS_WRITE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#845: FILE: fs/ocfs2/quota_global.c:210:
+		err = ocfs2_journal_access(handle, gqinode, bh,
+						OCFS2_JOURNAL_ACCESS_CREATE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#916: FILE: fs/ocfs2/quota_global.c:281:
+	gqinode = ocfs2_get_system_file_inode(OCFS2_SB(sb), ino[type],
+			OCFS2_INVALID_SLOT);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#919: FILE: fs/ocfs2/quota_global.c:284:
+		mlog(ML_ERROR, "failed to get global quota inode (type=%d)\n",
+			type);

WARNING:TYPO_SPELLING: 'exlusive' may be misspelled - perhaps 'exclusive'?
#963: FILE: fs/ocfs2/quota_global.c:328:
+/* Write information to global quota file. Expects exlusive lock on quota
                                                    ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#964: FILE: fs/ocfs2/quota_global.c:329:
+ * file inode and quota info */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1007: FILE: fs/ocfs2/quota_global.c:372:
+ * dquot_acquire() has already started the transaction and locked quota file */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1048: FILE: fs/ocfs2/quota_global.c:413:
+ * global quota file inode */

WARNING:SPLIT_STRING: quoted string split across lines
#1065: FILE: fs/ocfs2/quota_global.c:430:
+			mlog(ML_ERROR, "Short read from global quota file "
+				       "(%u read)\n", err);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1073: FILE: fs/ocfs2/quota_global.c:438:
+	 * We are */

WARNING:TYPO_SPELLING: 'loosing' may be misspelled - perhaps 'losing'?
#1131: FILE: fs/ocfs2/quota_global.c:496:
+		mlog(ML_ERROR, "Failed to lock quota info, loosing quota write"
 		                                           ^^^^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#1132: FILE: fs/ocfs2/quota_global.c:497:
+		mlog(ML_ERROR, "Failed to lock quota info, loosing quota write"
+			       " (type=%d, id=%u)\n", dquot->dq_type,

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1133: FILE: fs/ocfs2/quota_global.c:498:
+			       (unsigned)dquot->dq_id);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1193: FILE: fs/ocfs2/quota_global.c:558:
+	 * global and local inode */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1212: FILE: fs/ocfs2/quota_global.c:577:
+	handle = ocfs2_start_trans(osb,
+		ocfs2_calc_qdel_credits(dquot->dq_sb, dquot->dq_type));

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1242: FILE: fs/ocfs2/quota_global.c:607:
+	 * global file we can modify info, tree and leaf block */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1258: FILE: fs/ocfs2/quota_global.c:623:
+	 * and instantiate possibly new dquot structure */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1263: FILE: fs/ocfs2/quota_global.c:628:
+	handle = ocfs2_start_trans(osb,
+		ocfs2_calc_qinit_credits(dquot->dq_sb, dquot->dq_type));

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1298: FILE: fs/ocfs2/quota_global.c:663:
+	 * quota file so that information propagates quicker */

WARNING:TYPO_SPELLING: 'exlusive' may be misspelled - perhaps 'exclusive'?
#1360: FILE: fs/ocfs2/quota_global.c:725:
+ * in this function but we don't want to take the penalty of exlusive
                                                              ^^^^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1363: FILE: fs/ocfs2/quota_global.c:728:
+ * we don't have to take the write lock... */

WARNING:TYPO_SPELLING: 'noone' may be misspelled - perhaps 'no one'?
#1386: FILE: fs/ocfs2/quota_global.c:751:
+		 * Since we hold an inode lock, noone can actually release
 		                                ^^^^^

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1387: FILE: fs/ocfs2/quota_global.c:752:
+		 * the structure until we are finished with initialization. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1395: FILE: fs/ocfs2/quota_global.c:760:
+		 * our node already has it. */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1401: FILE: fs/ocfs2/quota_global.c:766:
+			BUG();

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1414: FILE: fs/ocfs2/quota_global.c:779:
+			handle = ocfs2_start_trans(OCFS2_SB(sb),
+					ocfs2_calc_qinit_credits(sb, cnt));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1458: FILE: fs/ocfs2/quota_global.c:823:
+	handle = ocfs2_start_trans(OCFS2_SB(sb),
+			ocfs2_calc_qinit_credits(sb, USRQUOTA) +

WARNING:REPEATED_WORD: Possible repeated word: 'when'
#1496: FILE: fs/ocfs2/quota_global.c:861:
+	/* Lock against anyone releasing references so that when when we check

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1497: FILE: fs/ocfs2/quota_global.c:862:
+	 * we know we are not going to be last ones to release dquot */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1517: FILE: fs/ocfs2/quota_global.c:882:
+	 * do it now... */

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1561: FILE: fs/ocfs2/quota_local.c:1:
+/*

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1646: FILE: fs/ocfs2/quota_local.c:86:
+static int ocfs2_modify_bh(struct inode *inode, struct buffer_head *bh,
+		void (*modify)(struct buffer_head *, void *), void *private)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1702: FILE: fs/ocfs2/quota_local.c:142:
+		mlog(ML_ERROR, "failed to read quota file header (type=%d)\n",
+			type);

WARNING:SPLIT_STRING: quoted string split across lines
#1708: FILE: fs/ocfs2/quota_local.c:148:
+		mlog(ML_ERROR, "quota file magic does not match (%u != %u),"
+			" type=%d\n", le32_to_cpu(dqhead->dqh_magic),

WARNING:SPLIT_STRING: quoted string split across lines
#1714: FILE: fs/ocfs2/quota_local.c:154:
+		mlog(ML_ERROR, "quota file version does not match (%u != %u),"
+			" type=%d\n", le32_to_cpu(dqhead->dqh_version),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1723: FILE: fs/ocfs2/quota_local.c:163:
+	ginode = ocfs2_get_system_file_inode(OCFS2_SB(sb), ino[type],
+						OCFS2_INVALID_SLOT);

WARNING:SPLIT_STRING: quoted string split across lines
#1726: FILE: fs/ocfs2/quota_local.c:166:
+		mlog(ML_ERROR, "cannot get global quota file inode "
+				"(type=%d)\n", type);

WARNING:SPLIT_STRING: quoted string split across lines
#1734: FILE: fs/ocfs2/quota_local.c:174:
+		mlog(ML_ERROR, "failed to read global quota file header "
+				"(type=%d)\n", type);

WARNING:SPLIT_STRING: quoted string split across lines
#1740: FILE: fs/ocfs2/quota_local.c:180:
+		mlog(ML_ERROR, "global quota file magic does not match "
+			"(%u != %u), type=%d\n",

WARNING:SPLIT_STRING: quoted string split across lines
#1746: FILE: fs/ocfs2/quota_local.c:186:
+		mlog(ML_ERROR, "global quota file version does not match "
+			"(%u != %u), type=%d\n",

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#1755: FILE: fs/ocfs2/quota_local.c:195:
+	iput(ginode);
 	^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1773: FILE: fs/ocfs2/quota_local.c:213:
+static int ocfs2_load_local_quota_bitmaps(struct inode *inode,
+			struct ocfs2_local_disk_dqinfo *ldinfo,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1788: FILE: fs/ocfs2/quota_local.c:228:
+		newchunk->qc_headerbh = ocfs2_read_quota_block(inode,
+				ol_quota_chunk_block(inode->i_sb, i),

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kmalloc(sizeof(*oinfo)...) over kmalloc(sizeof(struct ocfs2_mem_dqinfo)...)
#1829: FILE: fs/ocfs2/quota_local.c:269:
+	oinfo = kmalloc(sizeof(struct ocfs2_mem_dqinfo), GFP_NOFS);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:SPLIT_STRING: quoted string split across lines
#1832: FILE: fs/ocfs2/quota_local.c:272:
+		mlog(ML_ERROR, "failed to allocate memory for ocfs2 quota"
+			       " info.");

WARNING:SPLIT_STRING: quoted string split across lines
#1857: FILE: fs/ocfs2/quota_local.c:297:
+		mlog(ML_ERROR, "failed to read quota file info header "
+			"(type=%d)\n", type);

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#1890: FILE: fs/ocfs2/quota_local.c:330:
+		iput(oinfo->dqi_gqinode);
 		^^^^

WARNING:TYPO_SPELLING: 'iput' may be misspelled - perhaps 'input'?
#1931: FILE: fs/ocfs2/quota_local.c:371:
+	iput(oinfo->dqi_gqinode);
 	^^^^

WARNING:SPLIT_STRING: quoted string split across lines
#1947: FILE: fs/ocfs2/quota_local.c:387:
+			mlog(ML_ERROR, "releasing quota file with used "
+					"entries (type=%d)\n", type);

WARNING:SPLIT_STRING: quoted string split across lines
#2055: FILE: fs/ocfs2/quota_local.c:495:
+		mlog(ML_ERROR, "Did not find empty entry in chunk %d with %u"
+		     " entries free (type=%d)\n", chunk->qc_num,

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2064: FILE: fs/ocfs2/quota_local.c:504:
+static struct ocfs2_quota_chunk *ocfs2_local_quota_add_chunk(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#2172: FILE: fs/ocfs2/quota_local.c:612:
+static struct ocfs2_quota_chunk *ocfs2_extend_local_quota_file(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2191: FILE: fs/ocfs2/quota_local.c:631:
+	chunk = list_entry(oinfo->dqi_chunk.prev,
+			struct ocfs2_quota_chunk, qc_chunk);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2218: FILE: fs/ocfs2/quota_local.c:658:
+	status = ocfs2_journal_access(handle, lqinode, chunk->qc_headerbh,
+				 OCFS2_JOURNAL_ACCESS_WRITE);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2331: FILE: fs/ocfs2/quota_local.c:771:
+ * quota file. */

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#2342: FILE: fs/ocfs2/quota_local.c:782:
+	BUG_ON(!handle);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2351: FILE: fs/ocfs2/quota_local.c:791:
+	status = ocfs2_journal_access(handle, sb_dqopt(sb)->files[type],
+			od->dq_chunk->qc_headerbh, OCFS2_JOURNAL_ACCESS_WRITE);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2357: FILE: fs/ocfs2/quota_local.c:797:
+	offset = ol_dqblk_chunk_off(sb, od->dq_chunk->qc_num,
+					     od->dq_local_off);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#2374: FILE: fs/ocfs2/quota_local.c:814:
+	 * dquot structure */

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2444: FILE: fs/ocfs2/super.c:1254:
+	ocfs2_dquot_cachep = kmem_cache_create("ocfs2_dquot_cache",
+					sizeof(struct ocfs2_dquot),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2446: FILE: fs/ocfs2/super.c:1256:
+					(SLAB_HWCACHE_ALIGN|SLAB_RECLAIM_ACCOUNT|
 					                   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#2446: FILE: fs/ocfs2/super.c:1256:
+					(SLAB_HWCACHE_ALIGN|SLAB_RECLAIM_ACCOUNT|
 					                                        ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2450: FILE: fs/ocfs2/super.c:1260:
+	ocfs2_qf_chunk_cachep = kmem_cache_create("ocfs2_qf_chunk_cache",
+					sizeof(struct ocfs2_quota_chunk),

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#2452: FILE: fs/ocfs2/super.c:1262:
+					(SLAB_RECLAIM_ACCOUNT|SLAB_MEM_SPREAD),
 					                     ^

WARNING:NEEDLESS_IF: kmem_cache_destroy(NULL) is safe and this check is probably not required
#2457: FILE: fs/ocfs2/super.c:1267:
+		if (ocfs2_inode_cachep)
+			kmem_cache_destroy(ocfs2_inode_cachep);

WARNING:NEEDLESS_IF: kmem_cache_destroy(NULL) is safe and this check is probably not required
#2459: FILE: fs/ocfs2/super.c:1269:
+		if (ocfs2_dquot_cachep)
+			kmem_cache_destroy(ocfs2_dquot_cachep);

WARNING:NEEDLESS_IF: kmem_cache_destroy(NULL) is safe and this check is probably not required
#2461: FILE: fs/ocfs2/super.c:1271:
+		if (ocfs2_qf_chunk_cachep)
+			kmem_cache_destroy(ocfs2_qf_chunk_cachep);

WARNING:NEEDLESS_IF: kmem_cache_destroy(NULL) is safe and this check is probably not required
#2475: FILE: fs/ocfs2/super.c:1285:
+	if (ocfs2_dquot_cachep)
+		kmem_cache_destroy(ocfs2_dquot_cachep);

WARNING:NEEDLESS_IF: kmem_cache_destroy(NULL) is safe and this check is probably not required
#2479: FILE: fs/ocfs2/super.c:1289:
+	if (ocfs2_qf_chunk_cachep)
+		kmem_cache_destroy(ocfs2_qf_chunk_cachep);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000190643.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 67 warnings, 28 checks, 2338 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000190643.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
