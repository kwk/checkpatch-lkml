CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#129: FILE: arch/x86_64/kernel/apic.c:84:
+};
+static DEFINE_PER_CPU(struct clock_event_device, lapic_events);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#189: FILE: arch/x86_64/kernel/apic.c:802:
+		apic_write(APIC_TMICT, clocks/APIC_DIVISOR);
 		                             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#309: FILE: arch/x86_64/kernel/apic.c:854:
+static void __devinit setup_APIC_timer(void)

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#344: FILE: arch/x86_64/kernel/apic.c:885:
+#define LAPIC_CAL_LOOPS		(HZ/10)
                        		   ^

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#348: FILE: arch/x86_64/kernel/apic.c:887:
+static __initdata volatile int lapic_cal_loops = -1;

WARNING:MISPLACED_INIT: __initdata should be placed after lapic_cal_loops
#348: FILE: arch/x86_64/kernel/apic.c:887:
+static __initdata volatile int lapic_cal_loops = -1;

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#395: FILE: arch/x86_64/kernel/apic.c:927:
+	const long pm_100ms = PMTMR_TICKS_PER_SEC/10;
 	                                         ^

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#396: FILE: arch/x86_64/kernel/apic.c:928:
+	const long pm_thresh = pm_100ms/100;
 	                               ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#409: FILE: arch/x86_64/kernel/apic.c:941:
+		printk(KERN_INFO "Disabling APIC timer\n");

CHECK:SPACING: No space is necessary after a cast
#486: FILE: arch/x86_64/kernel/apic.c:989:
+			res = (((u64) deltapm) *  mult) >> 22;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#488: FILE: arch/x86_64/kernel/apic.c:991:
+			printk(KERN_WARNING "APIC calibration not consistent "

WARNING:SPLIT_STRING: quoted string split across lines
#489: FILE: arch/x86_64/kernel/apic.c:992:
+			printk(KERN_WARNING "APIC calibration not consistent "
+			       "with PM Timer: %ldms instead of 100ms\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:SPACING: No space is necessary after a cast
#492: FILE: arch/x86_64/kernel/apic.c:995:
+			res = (((u64) delta ) * pm_100ms);

ERROR:SPACING: space prohibited before that close parenthesis ')'
#492: FILE: arch/x86_64/kernel/apic.c:995:
+			res = (((u64) delta ) * pm_100ms);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#494: FILE: arch/x86_64/kernel/apic.c:997:
+			printk(KERN_INFO "APIC delta adjusted to PM-Timer: "

CHECK:SPACING: No space is necessary after a cast
#495: FILE: arch/x86_64/kernel/apic.c:998:
+			       "%lu (%ld)\n", (unsigned long) res, delta);

WARNING:SPLIT_STRING: quoted string split across lines
#495: FILE: arch/x86_64/kernel/apic.c:998:
+			printk(KERN_INFO "APIC delta adjusted to PM-Timer: "
+			       "%lu (%ld)\n", (unsigned long) res, delta);

CHECK:SPACING: No space is necessary after a cast
#496: FILE: arch/x86_64/kernel/apic.c:999:
+			delta = (long) res;

WARNING:SPLIT_STRING: quoted string split across lines
#527: FILE: arch/x86_64/kernel/apic.c:1021:
+		apic_printk(APIC_VERBOSE, "..... CPU clock speed is "
+			    "%ld.%04ld MHz.\n",

WARNING:SPLIT_STRING: quoted string split across lines
#538: FILE: arch/x86_64/kernel/apic.c:1027:
+	apic_printk(APIC_VERBOSE, "..... host bus clock speed is "
+		    "%u.%04u MHz.\n",

CHECK:BRACES: braces {} should be used on all arms of this statement
#556: FILE: arch/x86_64/kernel/apic.c:1034:
+	if (!pm_referenced) {
[...]
+		deltaj = lapic_cal_j2 - lapic_cal_j1;
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:SPACING: space required before the open parenthesis '('
#575: FILE: arch/x86_64/kernel/apic.c:1047:
+		while(lapic_cal_loops <= LAPIC_CAL_LOOPS)

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#592: FILE: arch/x86_64/kernel/apic.c:1062:
+		if (deltaj >= LAPIC_CAL_LOOPS-2 && deltaj <= LAPIC_CAL_LOOPS+2)
 		                             ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#592: FILE: arch/x86_64/kernel/apic.c:1062:
+		if (deltaj >= LAPIC_CAL_LOOPS-2 && deltaj <= LAPIC_CAL_LOOPS+2)
 		                                                            ^

CHECK:BRACES: Unbalanced braces around else statement
#596: FILE: arch/x86_64/kernel/apic.c:1066:
+	} else

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#600: FILE: arch/x86_64/kernel/apic.c:1070:
+		printk(KERN_WARNING

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#690: FILE: arch/x86_64/kernel/apic.c:1135:
+		printk(KERN_WARNING

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#754: FILE: arch/x86_64/kernel/apic.c:1273:
+		smp_processor_id(), v , v1);
 		                      ^

CHECK:UNDOCUMENTED_SETUP: __setup appears un-documented -- check Documentation/admin-guide/kernel-parameters.txt
#841: FILE: arch/x86_64/kernel/apic.c:1340:
+__setup("noapictimer", setup_noapictimer);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#952: FILE: arch/x86_64/kernel/time.c:220:
        for (i = 0; i < 4; i++)
+	       if (avail_to_resrv_perfctr_nmi_bit(i))

WARNING:TABSTOP: Statements should start on a tabstop
#955: FILE: arch/x86_64/kernel/time.c:221:
+	       if (avail_to_resrv_perfctr_nmi_bit(i))

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#955: FILE: arch/x86_64/kernel/time.c:221:
+	       if (avail_to_resrv_perfctr_nmi_bit(i))
+		       break;

WARNING:TABSTOP: Statements should start on a tabstop
#956: FILE: arch/x86_64/kernel/time.c:222:
+		       break;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#958: FILE: arch/x86_64/kernel/time.c:224:
        if (no_ctr_free) {
+	       i = 3;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#967: FILE: arch/x86_64/kernel/time.c:229:
        } else {
+	       reserve_perfctr_nmi(MSR_K7_PERFCTR0 + i);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#978: FILE: arch/x86_64/kernel/time.c:238:
        do {
+	       rdmsrl(MSR_K7_PERFCTR0 + i, pmc_now);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#986: FILE: arch/x86_64/kernel/time.c:244:
        if (no_ctr_free) {
+	       wrmsrl(MSR_K7_EVNTSEL3, 0);

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#993: FILE: arch/x86_64/kernel/time.c:248:
        } else {
+	       release_perfctr_nmi(MSR_K7_PERFCTR0 + i);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1928: FILE: include/asm-i386/hpet.h:68:
+extern int hpet_enable(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1950: FILE: include/asm-i386/hpet.h:81:
+extern int hpet_set_alarm_time(unsigned char hrs, unsigned char min,

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#1986: FILE: arch/i386/kernel/hpet.c:30:
+#include <asm/pgtable.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#2161: FILE: include/asm-x86_64/i8253.h:1:
+#include <asm-i386/i8253.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2191: FILE: include/asm-x86_64/apic.h:84:
+extern void setup_APIC_extended_lvt(unsigned char lvt_off, unsigned char vector,

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#2295: FILE: arch/x86_64/kernel/tsc.c:138:
+	while ((inb(0x61) & 0x20) == 0);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2310: FILE: arch/x86_64/kernel/tsc.c:153:
+		printk(KERN_INFO "TSC calibrated against PIT\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2316: FILE: arch/x86_64/kernel/tsc.c:159:
+		printk(KERN_WARNING "TSC calibration disturbed by SMI, "

WARNING:SPLIT_STRING: quoted string split across lines
#2317: FILE: arch/x86_64/kernel/tsc.c:160:
+		printk(KERN_WARNING "TSC calibration disturbed by SMI, "
+		       "using PIT calibration result\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2324: FILE: arch/x86_64/kernel/tsc.c:167:
+		printk(KERN_INFO "TSC calibrated against HPET\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#2330: FILE: arch/x86_64/kernel/tsc.c:173:
+		printk(KERN_INFO "TSC calibrated against PM_TIMER\n");

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#2352: FILE: include/asm-i386/tsc.h:75:
+extern void tsc_calibrate(void);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000417341.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 4 errors, 27 warnings, 19 checks, 1707 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000417341.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
