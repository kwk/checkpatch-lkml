CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#45: FILE: arch/x86/kernel/cpu/mcheck/mce_64.c:49:
+static u64 bank[NR_BANKS] = { [0 ... NR_BANKS-1] = ~0UL };
                                              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#73: FILE: arch/x86/kernel/cpu/mcheck/mce_64.c:757:
+^I^Ireturn sprintf(buf, "%Lx\n", (u64)var); ^I^I\$

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#73: FILE: arch/x86/kernel/cpu/mcheck/mce_64.c:757:
+		return sprintf(buf, "%Lx\n", (u64)var); 		\

WARNING:CONSIDER_KSTRTO: strict_strtoull is obsolete, use kstrtoull instead
#78: FILE: arch/x86/kernel/cpu/mcheck/mce_64.c:761:
+		u64 new = strict_strtoull(buf, &end, 0);		\

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#91: FILE: include/asm-x86/mce.h:13:
+#define MCG_CTL_P	 (1ULL<<8)   /* MCG_CAP register available */
                  	      ^

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#91: FILE: include/asm-x86/mce.h:13:
+#define MCG_CTL_P	 (1ULL<<8)   /* MCG_CAP register available */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#104: FILE: include/asm-x86/mce.h:15:
+#define MCG_STATUS_RIPV  (1ULL<<0)   /* restart ip valid */
                               ^

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#104: FILE: include/asm-x86/mce.h:15:
+#define MCG_STATUS_RIPV  (1ULL<<0)   /* restart ip valid */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#105: FILE: include/asm-x86/mce.h:16:
+#define MCG_STATUS_EIPV  (1ULL<<1)   /* ip points to correct instruction */
                               ^

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#105: FILE: include/asm-x86/mce.h:16:
+#define MCG_STATUS_EIPV  (1ULL<<1)   /* ip points to correct instruction */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#106: FILE: include/asm-x86/mce.h:17:
+#define MCG_STATUS_MCIP  (1ULL<<2)   /* machine check in progress */
                               ^

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#106: FILE: include/asm-x86/mce.h:17:
+#define MCG_STATUS_MCIP  (1ULL<<2)   /* machine check in progress */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#108: FILE: include/asm-x86/mce.h:19:
+#define MCI_STATUS_VAL	 (1ULL<<63)  /* valid error */
                       	      ^

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#108: FILE: include/asm-x86/mce.h:19:
+#define MCI_STATUS_VAL	 (1ULL<<63)  /* valid error */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#109: FILE: include/asm-x86/mce.h:20:
+#define MCI_STATUS_OVER  (1ULL<<62)  /* previous errors lost */
                               ^

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#109: FILE: include/asm-x86/mce.h:20:
+#define MCI_STATUS_OVER  (1ULL<<62)  /* previous errors lost */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#110: FILE: include/asm-x86/mce.h:21:
+#define MCI_STATUS_UC	 (1ULL<<61)  /* uncorrected error */
                      	      ^

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#110: FILE: include/asm-x86/mce.h:21:
+#define MCI_STATUS_UC	 (1ULL<<61)  /* uncorrected error */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#111: FILE: include/asm-x86/mce.h:22:
+#define MCI_STATUS_EN	 (1ULL<<60)  /* error enabled */
                      	      ^

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#111: FILE: include/asm-x86/mce.h:22:
+#define MCI_STATUS_EN	 (1ULL<<60)  /* error enabled */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#112: FILE: include/asm-x86/mce.h:23:
+#define MCI_STATUS_MISCV (1ULL<<59)  /* misc error reg. valid */
                               ^

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#112: FILE: include/asm-x86/mce.h:23:
+#define MCI_STATUS_MISCV (1ULL<<59)  /* misc error reg. valid */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#113: FILE: include/asm-x86/mce.h:24:
+#define MCI_STATUS_ADDRV (1ULL<<58)  /* addr reg. valid */
                               ^

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#113: FILE: include/asm-x86/mce.h:24:
+#define MCI_STATUS_ADDRV (1ULL<<58)  /* addr reg. valid */

CHECK:SPACING: spaces preferred around that '<<' (ctx:VxV)
#114: FILE: include/asm-x86/mce.h:25:
+#define MCI_STATUS_PCC	 (1ULL<<57)  /* processor context corrupt */
                       	      ^

CHECK:BIT_MACRO: Prefer using the BIT_ULL macro
#114: FILE: include/asm-x86/mce.h:25:
+#define MCI_STATUS_PCC	 (1ULL<<57)  /* processor context corrupt */

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000258850.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 3 warnings, 23 checks, 70 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000258850.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
