WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#30: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#1397: FILE: Makefile:4:
+EXTRAVERSION = .2
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1409: FILE: arch/powerpc/kernel/ppc32.h:138:
+extern int copy_siginfo_to_user32(struct compat_siginfo __user *d, siginfo_t *s);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "child->sighand"
#1442: FILE: arch/powerpc/kernel/ptrace32.c:76:
+	if (likely(child->sighand != NULL)) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "child->last_siginfo"
#1445: FILE: arch/powerpc/kernel/ptrace32.c:79:
+		if (likely(child->last_siginfo != NULL)) {

WARNING:MISPLACED_INIT: __initdata should be placed after i8042_dmi_nopnp_table[]
#1570: FILE: drivers/input/serio/i8042-x86ia64io.h:305:
+static struct dmi_system_id __initdata i8042_dmi_nopnp_table[] = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1699: FILE: drivers/net/wireless/ath5k/base.c:1802:
+		/*
+		 * last buffer must not be freed to ensure proper hardware

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#2023: FILE: fs/romfs/inode.c:443:
+		filled = romfs_copyfrom(inode, buf, ROMFS_I(inode)->i_dataoffset+offset, readlen);
 		                                                                ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#2037: FILE: fs/romfs/inode.c:453:
+		memset(buf + filled, 0, PAGE_SIZE-filled);
 		                                 ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#2165: FILE: net/ipv4/netfilter/nf_nat_sip.c:385:
+	if (mangle_sdp_packet(skb, dptr, dataoff, datalen,
 			       SDP_HDR_OWNER_IP4, SDP_HDR_MEDIA,

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#2177: FILE: net/ipv4/netfilter/nf_nat_sip.c:394:
+	/*
+	 * RFC 2327:

WARNING:LINE_SPACING: Missing a blank line after declarations
#2391: FILE: sound/pci/hda/hda_intel.c:1462:
+	struct azx_dev *azx_dev = get_azx_dev(substream);
+	return bytes_to_frames(substream->runtime,

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#2410: FILE: sound/pci/hda/hda_intel.c:1481:
+		if (!pos) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#2411: FILE: sound/pci/hda/hda_intel.c:1482:
+			printk(KERN_WARNING

WARNING:SPLIT_STRING: quoted string split across lines
#2413: FILE: sound/pci/hda/hda_intel.c:1484:
+			       "hda-intel: Invalid position buffer, "
+			       "using LPIB read method instead.\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:BRACES: Unbalanced braces around else statement
#2416: FILE: sound/pci/hda/hda_intel.c:1487:
+		} else

WARNING:LINE_SPACING: Missing a blank line after declarations
#2438: FILE: sound/pci/hda/hda_intel.c:1509:
+			struct azx_dev *azx_dev = &chip->azx_dev[i];
+			if (!azx_dev->irq_pending ||

CHECK:BRACES: braces {} should be used on all arms of this statement
#2442: FILE: sound/pci/hda/hda_intel.c:1513:
+			if (azx_position_ok(chip, azx_dev)) {
[...]
+			} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#2447: FILE: sound/pci/hda/hda_intel.c:1518:
+			} else

WARNING:LINE_SPACING: Missing a blank line after declarations
#2533: FILE: sound/pci/hda/patch_analog.c:2639:
+		hda_nid_t dac = ad1988_idx_to_dac(codec, ad1988_pin_idx(pin));
+		if (dac == nid)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000243738.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 11 warnings, 10 checks, 972 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000243738.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
