WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#86: FILE: drivers/block/aoe/aoecmd.c:124:
+	if (skb)
+	if (atomic_read(&skb_shinfo(skb)->dataref) == 1) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#92: FILE: drivers/block/aoe/aoecmd.c:130:
+	if (d->nskbpool < NSKBPOOLMAX)
+	if ((skb = new_skb(ETH_ZLEN))) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#93: FILE: drivers/block/aoe/aoecmd.c:131:
+	if ((skb = new_skb(ETH_ZLEN))) {

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#121: FILE: drivers/block/aoe/aoecmd.c:155:
+		if ((*t)->nout < (*t)->maxout)
 		if (t != d->htgt)

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (16, 16)
#122: FILE: drivers/block/aoe/aoecmd.c:156:
 		if (t != d->htgt)
+		if ((*t)->ifp->nd) {

WARNING:TYPO_SPELLING: 'nd' may be misspelled - perhaps 'and'?
#126: FILE: drivers/block/aoe/aoecmd.c:157:
+		if ((*t)->ifp->nd) {
 		               ^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (32, 32)
#137: FILE: drivers/block/aoe/aoecmd.c:165:
+				if (!skb)
+				if (!(f->skb = skb = new_skb(ETH_ZLEN)))

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#138: FILE: drivers/block/aoe/aoecmd.c:166:
+				if (!(f->skb = skb = new_skb(ETH_ZLEN)))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#155: FILE: drivers/block/aoe/aoecmd.c:180:
+			/* Work can be done, but the network layer is
+			   holding our precious packets.  Try to grab

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#156: FILE: drivers/block/aoe/aoecmd.c:181:
+			   one from the pool. */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!f"
#158: FILE: drivers/block/aoe/aoecmd.c:183:
+			if (f == NULL) {	/* more paranoia */

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#159: FILE: drivers/block/aoe/aoecmd.c:184:
+				printk(KERN_ERR "aoe: freeframe: unexpected null rf.\n");

WARNING:TYPO_SPELLING: 'te' may be misspelled - perhaps 'the'?
#195: FILE: drivers/block/aoe/aoecmd.c:932:
+	for (; tt<te && *tt; tt++)
 	          ^^

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#195: FILE: drivers/block/aoe/aoecmd.c:932:
+	for (; tt<te && *tt; tt++)
 	         ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#235: FILE: drivers/block/aoe/aoecmd.c:950:
+	for (; f<e; f++)
 	        ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#276: FILE: drivers/block/aoe/aoedev.c:183:
+/* I'm not really sure that this is a realistic problem, but if the
+network driver goes gonzo let's just leak memory after complaining. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#276: FILE: drivers/block/aoe/aoedev.c:183:
+network driver goes gonzo let's just leak memory after complaining. */

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#280: FILE: drivers/block/aoe/aoedev.c:187:
+	enum { Sms= 100, Tms= 3*1000};
 	          ^

ERROR:SPACING: spaces required around that '=' (ctx:VxW)
#280: FILE: drivers/block/aoe/aoedev.c:187:
+	enum { Sms= 100, Tms= 3*1000};
 	                    ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#280: FILE: drivers/block/aoe/aoedev.c:187:
+	enum { Sms= 100, Tms= 3*1000};
 	                       ^

CHECK:CAMELCASE: Avoid CamelCase: <Sms>
#280: FILE: drivers/block/aoe/aoedev.c:187:
+	enum { Sms= 100, Tms= 3*1000};

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Tms>
#280: FILE: drivers/block/aoe/aoedev.c:187:
+	enum { Sms= 100, Tms= 3*1000};

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!skb"
#283: FILE: drivers/block/aoe/aoedev.c:190:
+	if (skb == NULL)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#288: FILE: drivers/block/aoe/aoedev.c:195:
+		printk(KERN_ERR

ERROR:SPACING: spaces required around that '<' (ctx:VxV)
#329: FILE: drivers/block/aoe/aoedev.c:262:
+	for (; f<e; f++)
 	        ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000413116.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 13 warnings, 5 checks, 281 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000413116.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
