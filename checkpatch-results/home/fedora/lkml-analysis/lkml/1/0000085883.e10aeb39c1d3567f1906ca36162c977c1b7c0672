CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'old->mask == new->mask'
#58: FILE: fs/notify/inotify/inotify_fsnotify.c:40:
+	if ((old->mask == new->mask) &&
+	    (old->to_tell == new->to_tell) &&
+	    (old->data_type == new->data_type) &&
+	    (old->name_len == new->name_len)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'old->to_tell == new->to_tell'
#58: FILE: fs/notify/inotify/inotify_fsnotify.c:40:
+	if ((old->mask == new->mask) &&
+	    (old->to_tell == new->to_tell) &&
+	    (old->data_type == new->data_type) &&
+	    (old->name_len == new->name_len)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'old->data_type == new->data_type'
#58: FILE: fs/notify/inotify/inotify_fsnotify.c:40:
+	if ((old->mask == new->mask) &&
+	    (old->to_tell == new->to_tell) &&
+	    (old->data_type == new->data_type) &&
+	    (old->name_len == new->name_len)) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'old->name_len == new->name_len'
#58: FILE: fs/notify/inotify/inotify_fsnotify.c:40:
+	if ((old->mask == new->mask) &&
+	    (old->to_tell == new->to_tell) &&
+	    (old->data_type == new->data_type) &&
+	    (old->name_len == new->name_len)) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#66: FILE: fs/notify/inotify/inotify_fsnotify.c:48:
+			 * left to check was if the file_name is the same */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'old->path.mnt == new->path.mnt'
#72: FILE: fs/notify/inotify/inotify_fsnotify.c:54:
+			if ((old->path.mnt == new->path.mnt) &&
+			    (old->path.dentry == new->path.dentry))

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'old->path.dentry == new->path.dentry'
#72: FILE: fs/notify/inotify/inotify_fsnotify.c:54:
+			if ((old->path.mnt == new->path.mnt) &&
+			    (old->path.dentry == new->path.dentry))

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#240: FILE: include/linux/fsnotify_backend.h:331:
+extern int fsnotify_add_notify_event(struct fsnotify_group *group,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000085883.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 1 warnings, 7 checks, 179 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000085883.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
