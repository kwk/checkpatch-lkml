WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#47: FILE: drivers/video/Kconfig:556:
+config FB_BFIN_T350MCQB
+	tristate "Varitronix COG-T350MCQB TFT LCD display (BF527 EZKIT)"
+	depends on FB && BLACKFIN
+	select BFIN_GPTIMERS
+	select FB_CFB_FILLRECT
+	select FB_CFB_COPYAREA
+	select FB_CFB_IMAGEBLIT
+	help
+	 This is the framebuffer device driver for a Varitronix VL-PS-COG-T350MCQB-01 display TFT LCD
+	 This display is a QVGA 320x240 24-bit RGB display interfaced by an 8-bit wide PPI
+	 It uses PPI[0..7] PPI_FS1, PPI_FS2 and PPI_CLK. 
+
+

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#57: FILE: drivers/video/Kconfig:566:
+^I It uses PPI[0..7] PPI_FS1, PPI_FS2 and PPI_CLK. $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#184: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#189: FILE: drivers/video/bfin-t350mcqb-fb.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#190: FILE: drivers/video/bfin-t350mcqb-fb.c:2:
+ * File:         drivers/video/bfin-t350mcqb-fb.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

WARNING:TYPO_SPELLING: 'Framebufer' may be misspelled - perhaps 'Framebuffer'?
#195: FILE: drivers/video/bfin-t350mcqb-fb.c:7:
+ * Description:  Blackfin LCD Framebufer driver
                               ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#216: FILE: drivers/video/bfin-t350mcqb-fb.c:28:
+ * 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#247: FILE: drivers/video/bfin-t350mcqb-fb.c:59:
+#define^ILCD_CLK         ^I(12*1000*1000)^I/* 12MHz */$

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#247: FILE: drivers/video/bfin-t350mcqb-fb.c:59:
+#define	LCD_CLK         	(12*1000*1000)	/* 12MHz */
        	                	   ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#247: FILE: drivers/video/bfin-t350mcqb-fb.c:59:
+#define	LCD_CLK         	(12*1000*1000)	/* 12MHz */
        	                	        ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#297: FILE: drivers/video/bfin-t350mcqb-fb.c:109:
+	bfin_write_PPI_COUNT(H_ACTPIX-1);
 	                             ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#335: FILE: drivers/video/bfin-t350mcqb-fb.c:147:
+
+}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#339: FILE: drivers/video/bfin-t350mcqb-fb.c:151:
+{
+

CHECK:SPACING: space preferred before that '|' (ctx:VxE)
#345: FILE: drivers/video/bfin-t350mcqb-fb.c:157:
+				      TIMER_TIN_SEL | TIMER_CLK_SEL|
 				                                   ^

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#354: FILE: drivers/video/bfin-t350mcqb-fb.c:166:
+
+}

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#358: FILE: drivers/video/bfin-t350mcqb-fb.c:170:
+{
+

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#371: FILE: drivers/video/bfin-t350mcqb-fb.c:183:
+
+}

CHECK:BRACES: braces {} should be used on all arms of this statement
#380: FILE: drivers/video/bfin-t350mcqb-fb.c:192:
+	if (action) {
[...]
+	} else
[...]

WARNING:TYPO_SPELLING: 'faild' may be misspelled - perhaps 'failed'?
#382: FILE: drivers/video/bfin-t350mcqb-fb.c:194:
+			printk(KERN_ERR "Requesting Peripherals faild\n");
 			                                        ^^^^^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#382: FILE: drivers/video/bfin-t350mcqb-fb.c:194:
+			printk(KERN_ERR "Requesting Peripherals faild\n");

CHECK:BRACES: Unbalanced braces around else statement
#385: FILE: drivers/video/bfin-t350mcqb-fb.c:197:
+	} else

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#399: FILE: drivers/video/bfin-t350mcqb-fb.c:211:
+	if (fbi->lq043_open_cnt <= 1) {
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#441: FILE: drivers/video/bfin-t350mcqb-fb.c:253:
+static int bfin_t350mcqb_fb_check_var(struct fb_var_screeninfo *var,
+				   struct fb_info *info)

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#443: FILE: drivers/video/bfin-t350mcqb-fb.c:255:
+{
+

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#445: FILE: drivers/video/bfin-t350mcqb-fb.c:257:
+		pr_debug("%s: depth not supported: %u BPP\n", __FUNCTION__,

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#453: FILE: drivers/video/bfin-t350mcqb-fb.c:265:
+		pr_debug("%s: Resolution not supported: X%u x Y%u \n",

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#454: FILE: drivers/video/bfin-t350mcqb-fb.c:266:
+			 __FUNCTION__, var->xres, var->yres);

WARNING:USE_FUNC: __func__ should be used instead of gcc specific __FUNCTION__
#464: FILE: drivers/video/bfin-t350mcqb-fb.c:276:
+			 __FUNCTION__, var->yres_virtual);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#506: FILE: drivers/video/bfin-t350mcqb-fb.c:318:
+static int bfin_t350mcqb_fb_setcolreg(u_int regno, u_int red, u_int green,
+				   u_int blue, u_int transp,

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#514: FILE: drivers/video/bfin-t350mcqb-fb.c:326:
+		red = green = blue = (red * 77 + green * 151 + blue * 28) >> 8;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#518: FILE: drivers/video/bfin-t350mcqb-fb.c:330:
+	if (info->fix.visual == FB_VISUAL_TRUECOLOR) {
+

CHECK:SPACING: No space is necessary after a cast
#533: FILE: drivers/video/bfin-t350mcqb-fb.c:345:
+		((u32 *) (info->pseudo_palette))[regno] = value;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#535: FILE: drivers/video/bfin-t350mcqb-fb.c:347:
+
+	}

WARNING:CONST_STRUCT: struct fb_ops should normally be const
#540: FILE: drivers/video/bfin-t350mcqb-fb.c:352:
+static struct fb_ops bfin_t350mcqb_fb_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:CONST_STRUCT: struct backlight_ops should normally be const
#559: FILE: drivers/video/bfin-t350mcqb-fb.c:371:
+static struct backlight_ops bfin_lq043fb_bl_ops = {

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#582: FILE: drivers/video/bfin-t350mcqb-fb.c:394:
+{
+

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'fi == &bfin_t350mcqb_fb'
#588: FILE: drivers/video/bfin-t350mcqb-fb.c:400:
+	if (!fi || (fi == &bfin_t350mcqb_fb))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:LINE_SPACING: Missing a blank line after declarations
#609: FILE: drivers/video/bfin-t350mcqb-fb.c:421:
+	u16 status = bfin_read_PPI_STATUS();
+	bfin_write_PPI_STATUS(0xFFFF);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#630: FILE: drivers/video/bfin-t350mcqb-fb.c:442:
+	printk(KERN_INFO DRIVER_NAME ": %dx%d %d-bit RGB FrameBuffer initializing...\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#631: FILE: drivers/video/bfin-t350mcqb-fb.c:443:
+	printk(KERN_INFO DRIVER_NAME ": %dx%d %d-bit RGB FrameBuffer initializing...\n",
+					 LCD_X_RES, LCD_Y_RES, LCD_BPP);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#634: FILE: drivers/video/bfin-t350mcqb-fb.c:446:
+		printk(KERN_ERR DRIVER_NAME

CHECK:LINE_SPACING: Please don't use multiple blank lines
#689: FILE: drivers/video/bfin-t350mcqb-fb.c:501:
+
+

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#697: FILE: drivers/video/bfin-t350mcqb-fb.c:509:
+	if (NULL == info->fb_buffer) {

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#698: FILE: drivers/video/bfin-t350mcqb-fb.c:510:
+		printk(KERN_ERR DRIVER_NAME

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#713: FILE: drivers/video/bfin-t350mcqb-fb.c:525:
+		printk(KERN_ERR DRIVER_NAME

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#713: FILE: drivers/video/bfin-t350mcqb-fb.c:525:
+	if (!fbinfo->pseudo_palette) {
+		printk(KERN_ERR DRIVER_NAME

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#724: FILE: drivers/video/bfin-t350mcqb-fb.c:536:
+		printk(KERN_ERR DRIVER_NAME

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#732: FILE: drivers/video/bfin-t350mcqb-fb.c:544:
+		printk(KERN_ERR DRIVER_NAME ": couldn't request gpio port.\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#745: FILE: drivers/video/bfin-t350mcqb-fb.c:557:
+		printk(KERN_ERR DRIVER_NAME

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#752: FILE: drivers/video/bfin-t350mcqb-fb.c:564:
+		printk(KERN_ERR DRIVER_NAME

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#764: FILE: drivers/video/bfin-t350mcqb-fb.c:576:
+	lcd_dev->props.max_contrast = 255, printk(KERN_INFO "Done.\n");

WARNING:SUSPECT_COMMA_SEMICOLON: Possible comma where semicolon could be used
#764: FILE: drivers/video/bfin-t350mcqb-fb.c:576:
+	lcd_dev->props.max_contrast = 255, printk(KERN_INFO "Done.\n");

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#792: FILE: drivers/video/bfin-t350mcqb-fb.c:604:
+{
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "info->fb_buffer"
#799: FILE: drivers/video/bfin-t350mcqb-fb.c:611:
+	if (info->fb_buffer != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#815: FILE: drivers/video/bfin-t350mcqb-fb.c:627:
+	printk(KERN_INFO DRIVER_NAME ": Unregister LCD driver.\n");

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#859: FILE: drivers/video/bfin-t350mcqb-fb.c:671:
+static int __devinit bfin_t350mcqb_driver_init(void)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000329519.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 2 errors, 29 warnings, 25 checks, 812 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000329519.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
