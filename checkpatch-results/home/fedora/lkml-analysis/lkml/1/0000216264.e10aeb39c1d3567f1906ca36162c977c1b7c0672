CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#112: FILE: drivers/usb/gadget/ether.c:319:
+		dev_warn(&gadget->dev,
+				"controller '%s' not recognized; trying %s\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#122: FILE: drivers/usb/gadget/ether.c:359:
+	dev_info(&gadget->dev, "%s, version: " DRIVER_VERSION "\n",
+			DRIVER_DESC);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#135: FILE: drivers/usb/gadget/f_ecm.c:86:
+static inline unsigned ecm_bitrate(struct usb_gadget *g)

CHECK:CAMELCASE: Avoid CamelCase: <bLength>
#155: FILE: drivers/usb/gadget/f_ecm.c:129:
+	.bLength =		sizeof ecm_header_desc,

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

WARNING:SIZEOF_PARENTHESIS: sizeof ecm_header_desc should be sizeof(ecm_header_desc)
#155: FILE: drivers/usb/gadget/f_ecm.c:129:
+	.bLength =		sizeof ecm_header_desc,

WARNING:SIZEOF_PARENTHESIS: sizeof ecm_desc should be sizeof(ecm_desc)
#166: FILE: drivers/usb/gadget/f_ecm.c:145:
+	.bLength =		sizeof ecm_desc,

CHECK:CAMELCASE: Avoid CamelCase: <wMaxPacketSize>
#182: FILE: drivers/usb/gadget/f_ecm.c:195:
+	.wMaxPacketSize =	__constant_cpu_to_le16(ECM_STATUS_BYTECOUNT),

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_le16 should be cpu_to_le16
#182: FILE: drivers/usb/gadget/f_ecm.c:195:
+	.wMaxPacketSize =	__constant_cpu_to_le16(ECM_STATUS_BYTECOUNT),

Use of __constant_<foo> form is discouraged for the following functions::

  __constant_cpu_to_be[x]
  __constant_cpu_to_le[x]
  __constant_be[x]_to_cpu
  __constant_le[x]_to_cpu
  __constant_htons
  __constant_ntohs

Using any of these outside of include/uapi/ is not preferred as using the
function without __constant_ is identical when the argument is a
constant.

In big endian systems, the macros like __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to the same expression::

  #define __constant_cpu_to_be32(x) ((__force __be32)(__u32)(x))
  #define __cpu_to_be32(x)          ((__force __be32)(__u32)(x))

In little endian systems, the macros __constant_cpu_to_be32(x) and
cpu_to_be32(x) expand to __constant_swab32 and __swab32.  __swab32
has a __builtin_constant_p check::

  #define __swab32(x)				\
    (__builtin_constant_p((__u32)(x)) ?	\
    ___constant_swab32(x) :			\
    __fswab32(x))

So ultimately they have a special case for constants.
Similar is the case with all of the macros in the list.  Thus
using the __constant_... forms are unnecessarily verbose and
not preferred outside of include/uapi.

See: https://lore.kernel.org/lkml/1400106425.12666.6.camel@joe-AO725/

CHECK:SPACING: No space is necessary after a cast
#209: FILE: drivers/usb/gadget/f_ecm.c:218:
+	(struct usb_descriptor_header *) &ecm_header_desc,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#212: FILE: drivers/usb/gadget/f_ecm.c:220:
+	(struct usb_descriptor_header *) &ecm_desc,

CHECK:SPACING: No space is necessary after a cast
#215: FILE: drivers/usb/gadget/f_ecm.c:222:
+	(struct usb_descriptor_header *) &fs_ecm_notify_desc,

CHECK:SPACING: No space is necessary after a cast
#221: FILE: drivers/usb/gadget/f_ecm.c:226:
+	(struct usb_descriptor_header *) &fs_ecm_in_desc,

CHECK:SPACING: No space is necessary after a cast
#222: FILE: drivers/usb/gadget/f_ecm.c:227:
+	(struct usb_descriptor_header *) &fs_ecm_out_desc,

WARNING:CONSTANT_CONVERSION: __constant_cpu_to_le16 should be cpu_to_le16
#236: FILE: drivers/usb/gadget/f_ecm.c:239:
+	.wMaxPacketSize =	__constant_cpu_to_le16(ECM_STATUS_BYTECOUNT),

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#240: FILE: drivers/usb/gadget/f_ecm.c:242:
 };
+static struct usb_endpoint_descriptor hs_ecm_in_desc __initdata = {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#262: FILE: drivers/usb/gadget/f_ecm.c:263:
+	(struct usb_descriptor_header *) &ecm_header_desc,

CHECK:SPACING: No space is necessary after a cast
#265: FILE: drivers/usb/gadget/f_ecm.c:265:
+	(struct usb_descriptor_header *) &ecm_desc,

CHECK:SPACING: No space is necessary after a cast
#268: FILE: drivers/usb/gadget/f_ecm.c:267:
+	(struct usb_descriptor_header *) &hs_ecm_notify_desc,

CHECK:SPACING: No space is necessary after a cast
#274: FILE: drivers/usb/gadget/f_ecm.c:271:
+	(struct usb_descriptor_header *) &hs_ecm_in_desc,

CHECK:SPACING: No space is necessary after a cast
#275: FILE: drivers/usb/gadget/f_ecm.c:272:
+	(struct usb_descriptor_header *) &hs_ecm_out_desc,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#346: FILE: drivers/usb/gadget/f_ecm.c:671:
+	ecm->fs.in = usb_find_endpoint(ecm_fs_function,
+			f->descriptors, &fs_ecm_in_desc);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#348: FILE: drivers/usb/gadget/f_ecm.c:673:
+	ecm->fs.out = usb_find_endpoint(ecm_fs_function,
+			f->descriptors, &fs_ecm_out_desc);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#350: FILE: drivers/usb/gadget/f_ecm.c:675:
+	ecm->fs.notify = usb_find_endpoint(ecm_fs_function,
+			f->descriptors, &fs_ecm_notify_desc);

CHECK:CAMELCASE: Avoid CamelCase: <bEndpointAddress>
#363: FILE: drivers/usb/gadget/f_ecm.c:682:
+		hs_ecm_in_desc.bEndpointAddress =

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#383: FILE: drivers/usb/gadget/f_ecm.c:695:
+		ecm->hs.in = usb_find_endpoint(ecm_hs_function,
+				f->hs_descriptors, &hs_ecm_in_desc);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#385: FILE: drivers/usb/gadget/f_ecm.c:697:
+		ecm->hs.out = usb_find_endpoint(ecm_hs_function,
+				f->hs_descriptors, &hs_ecm_out_desc);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#387: FILE: drivers/usb/gadget/f_ecm.c:699:
+		ecm->hs.notify = usb_find_endpoint(ecm_hs_function,
+				f->hs_descriptors, &hs_ecm_notify_desc);

CHECK:CAMELCASE: Avoid CamelCase: <iMACAddress>
#396: FILE: drivers/usb/gadget/f_ecm.c:798:
+		ecm_desc.iMACAddress = status;

WARNING:SIZEOF_PARENTHESIS: sizeof mdlm_header_desc should be sizeof(mdlm_header_desc)
#411: FILE: drivers/usb/gadget/f_subset.c:107:
+	.bLength =		sizeof mdlm_header_desc,

CHECK:SPACING: No space is necessary after a cast
#438: FILE: drivers/usb/gadget/f_subset.c:173:
+	(struct usb_descriptor_header *) &mdlm_header_desc,

CHECK:SPACING: No space is necessary after a cast
#444: FILE: drivers/usb/gadget/f_subset.c:177:
+	(struct usb_descriptor_header *) &fs_subset_in_desc,

CHECK:SPACING: No space is necessary after a cast
#445: FILE: drivers/usb/gadget/f_subset.c:178:
+	(struct usb_descriptor_header *) &fs_subset_out_desc,

CHECK:SPACING: No space is necessary after a cast
#470: FILE: drivers/usb/gadget/f_subset.c:202:
+	(struct usb_descriptor_header *) &mdlm_header_desc,

CHECK:SPACING: No space is necessary after a cast
#476: FILE: drivers/usb/gadget/f_subset.c:206:
+	(struct usb_descriptor_header *) &hs_subset_in_desc,

CHECK:SPACING: No space is necessary after a cast
#477: FILE: drivers/usb/gadget/f_subset.c:207:
+	(struct usb_descriptor_header *) &hs_subset_out_desc,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#559: FILE: drivers/usb/gadget/rndis.c:184:
+			pr_debug("%03d: %08x %08x %08x %08x\n", i,
 				get_unaligned_le32(&buf[i]),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#826: FILE: drivers/usb/gadget/rndis.c:505:
+			pr_debug("%03d: %08x %08x %08x %08x\n", i,
 				get_unaligned_le32(&buf[i]),

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#835: FILE: drivers/usb/gadget/rndis.c:524:
+		pr_debug("%s: OID_GEN_CURRENT_PACKET_FILTER %08x\n",
 			__func__, *params->filter);

CHECK:CAMELCASE: Avoid CamelCase: <BufLength>
#863: FILE: drivers/usb/gadget/rndis.c:657:
+	pr_debug("%s: Length: %d\n", __func__, BufLength);

CHECK:CAMELCASE: Avoid CamelCase: <BufOffset>
#864: FILE: drivers/usb/gadget/rndis.c:658:
+	pr_debug("%s: Offset: %d\n", __func__, BufOffset);

CHECK:SPACING: No space is necessary after a cast
#869: FILE: drivers/usb/gadget/rndis.c:662:
+		pr_debug("%02x ", *(((u8 *) buf) + i + 8 + BufOffset));

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#883: FILE: drivers/usb/gadget/rndis.c:820:
+		pr_debug("%s: REMOTE_NDIS_INITIALIZE_MSG\n",
 			__func__ );

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#891: FILE: drivers/usb/gadget/rndis.c:827:
+		pr_debug("%s: REMOTE_NDIS_HALT_MSG\n",
 			__func__ );

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#900: FILE: drivers/usb/gadget/rndis.c:845:
+		pr_debug("%s: REMOTE_NDIS_RESET_MSG\n",
 			__func__ );

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#909: FILE: drivers/usb/gadget/rndis.c:853:
+			pr_debug("%s: REMOTE_NDIS_KEEPALIVE_MSG\n",
 				__func__ );

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#939: FILE: drivers/usb/gadget/rndis.c:914:
+	pr_debug("%s: \n", __func__);

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#939: FILE: drivers/usb/gadget/rndis.c:914:
+	pr_debug("%s: \n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#948: FILE: drivers/usb/gadget/rndis.c:924:
+	pr_debug("%s:\n", __func__);

WARNING:TRACING_LOGGING: Unnecessary ftrace-like logging - prefer using ftrace
#957: FILE: drivers/usb/gadget/rndis.c:937:
+	pr_debug("%s:\n", __func__);

ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
#975: FILE: drivers/usb/gadget/rndis.c:1112:
+			else pr_debug("%c is not valid\n", c);

Trailing statements (for example after any conditional) should be
on the next line.
Statements, such as::

  if (x == y) break;

should be::

  if (x == y)
          break;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000216264.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 10 warnings, 39 checks, 860 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000216264.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
