WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#44: 
[ Impact: pure structure member movement/variable renames, no logic changes ]

CHECK:SPACING: No space is necessary after a cast
#163: FILE: drivers/dma/ioat/dma.c:159:
+			     (unsigned long) ioat);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'chan->last_completion == chan->watchdog_completion'
#391: FILE: drivers/dma/ioat/dma.c:342:
+		if (chan->device->version == IOAT_VER_1_2
 			/* have we started processing anything yet */
+		    && chan->last_completion
 			/* have we completed any since last watchdog cycle? */
+		    && (chan->last_completion == chan->watchdog_completion)
 			/* has TCP stuck on one cookie since last watchdog? */
+		    && (chan->watchdog_tcp_cookie == chan->watchdog_last_tcp_cookie)
+		    && (chan->watchdog_tcp_cookie != chan->completed_cookie)
 			/* is there something in the chain to be processed? */
 			/* CB1 chain always has at least the last one processed */
+		    && (ioat->used_desc.prev != ioat->used_desc.next)
+		    && ioat->pending == 0) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'chan->watchdog_tcp_cookie == chan->watchdog_last_tcp_cookie'
#391: FILE: drivers/dma/ioat/dma.c:342:
+		if (chan->device->version == IOAT_VER_1_2
 			/* have we started processing anything yet */
+		    && chan->last_completion
 			/* have we completed any since last watchdog cycle? */
+		    && (chan->last_completion == chan->watchdog_completion)
 			/* has TCP stuck on one cookie since last watchdog? */
+		    && (chan->watchdog_tcp_cookie == chan->watchdog_last_tcp_cookie)
+		    && (chan->watchdog_tcp_cookie != chan->completed_cookie)
 			/* is there something in the chain to be processed? */
 			/* CB1 chain always has at least the last one processed */
+		    && (ioat->used_desc.prev != ioat->used_desc.next)
+		    && ioat->pending == 0) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'chan->watchdog_tcp_cookie != chan->completed_cookie'
#391: FILE: drivers/dma/ioat/dma.c:342:
+		if (chan->device->version == IOAT_VER_1_2
 			/* have we started processing anything yet */
+		    && chan->last_completion
 			/* have we completed any since last watchdog cycle? */
+		    && (chan->last_completion == chan->watchdog_completion)
 			/* has TCP stuck on one cookie since last watchdog? */
+		    && (chan->watchdog_tcp_cookie == chan->watchdog_last_tcp_cookie)
+		    && (chan->watchdog_tcp_cookie != chan->completed_cookie)
 			/* is there something in the chain to be processed? */
 			/* CB1 chain always has at least the last one processed */
+		    && (ioat->used_desc.prev != ioat->used_desc.next)
+		    && ioat->pending == 0) {

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'ioat->used_desc.prev != ioat->used_desc.next'
#391: FILE: drivers/dma/ioat/dma.c:342:
+		if (chan->device->version == IOAT_VER_1_2
 			/* have we started processing anything yet */
+		    && chan->last_completion
 			/* have we completed any since last watchdog cycle? */
+		    && (chan->last_completion == chan->watchdog_completion)
 			/* has TCP stuck on one cookie since last watchdog? */
+		    && (chan->watchdog_tcp_cookie == chan->watchdog_last_tcp_cookie)
+		    && (chan->watchdog_tcp_cookie != chan->completed_cookie)
 			/* is there something in the chain to be processed? */
 			/* CB1 chain always has at least the last one processed */
+		    && (ioat->used_desc.prev != ioat->used_desc.next)
+		    && ioat->pending == 0) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#394: FILE: drivers/dma/ioat/dma.c:344:
 			/* have we started processing anything yet */
+		    && chan->last_completion

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#398: FILE: drivers/dma/ioat/dma.c:346:
 			/* have we completed any since last watchdog cycle? */
+		    && (chan->last_completion == chan->watchdog_completion)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#404: FILE: drivers/dma/ioat/dma.c:348:
 			/* has TCP stuck on one cookie since last watchdog? */
+		    && (chan->watchdog_tcp_cookie == chan->watchdog_last_tcp_cookie)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#405: FILE: drivers/dma/ioat/dma.c:349:
+		    && (chan->watchdog_tcp_cookie == chan->watchdog_last_tcp_cookie)
+		    && (chan->watchdog_tcp_cookie != chan->completed_cookie)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#410: FILE: drivers/dma/ioat/dma.c:352:
 			/* CB1 chain always has at least the last one processed */
+		    && (ioat->used_desc.prev != ioat->used_desc.next)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#411: FILE: drivers/dma/ioat/dma.c:353:
+		    && (ioat->used_desc.prev != ioat->used_desc.next)
+		    && ioat->pending == 0) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#439: FILE: drivers/dma/ioat/dma.c:384:
 			if ((compl_desc_addr_hw != 0)
+			   && (compl_desc_addr_hw != chan->watchdog_completion)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#440: FILE: drivers/dma/ioat/dma.c:385:
+			   && (compl_desc_addr_hw != chan->watchdog_completion)
+			   && (compl_desc_addr_hw != chan->last_compl_desc_addr_hw)) {

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#463: FILE: drivers/dma/ioat/dma.c:404:
+		} else if (chan->device->version == IOAT_VER_2_0
+		    && ioat->used_desc.prev

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#464: FILE: drivers/dma/ioat/dma.c:405:
+		    && ioat->used_desc.prev
+		    && chan->last_completion

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#465: FILE: drivers/dma/ioat/dma.c:406:
+		    && chan->last_completion
+		    && chan->last_completion == chan->watchdog_completion) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#469: FILE: drivers/dma/ioat/dma.c:408:
+			if (ioat->pending < ioat_pending_level)
[...]
 			else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#585: FILE: drivers/dma/ioat/dma.c:534:
+	ioat->base.common.cookie = new->txd.cookie = cookie;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:SPACING: No space is necessary after a cast
#751: FILE: drivers/dma/ioat/dma.c:671:
+	writel(((u64) chan->completion_addr) & 0x00000000FFFFFFFF,

CHECK:SPACING: No space is necessary after a cast
#753: FILE: drivers/dma/ioat/dma.c:673:
+	writel(((u64) chan->completion_addr) >> 32,

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#862: FILE: drivers/dma/ioat/dma.c:756:
+	chan->last_completion = chan->completion_addr = 0;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#865: FILE: drivers/dma/ioat/dma.c:759:
+	chan->watchdog_tcp_cookie = chan->watchdog_last_tcp_cookie = 0;

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ioat->used_desc.prev"
#973: FILE: drivers/dma/ioat/dma.c:851:
+	if (ioat->used_desc.prev == NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1201: FILE: drivers/dma/ioat/dma.c:1062:
+				       chan->last_completion_time + HZ*WATCHDOG_DELAY)) {
 				                                      ^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around chan->device->work.work
#1202: FILE: drivers/dma/ioat/dma.c:1063:
+				ioat_dma_chan_watchdog(&(chan->device->work.work));

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ioat->used_desc.prev"
#1251: FILE: drivers/dma/ioat/dma.c:1121:
+		if (ioat->used_desc.prev == NULL)

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#1583: FILE: drivers/dma/ioat/dma.h:117:
+	spinlock_t desc_lock;

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000076577.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 1 warnings, 27 checks, 1489 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000076577.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
