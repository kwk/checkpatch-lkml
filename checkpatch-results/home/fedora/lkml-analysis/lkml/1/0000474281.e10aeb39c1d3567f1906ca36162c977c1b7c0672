ERROR:SPACING: space required after that ',' (ctx:VxV)
#221: FILE: arch/s390/kernel/time.c:270:
+	__ctl_set_bit(0,11);
 	               ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#332: FILE: arch/s390/kernel/time.c:370:
+		etr_port0_online = etr_port1_online = 0;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#338: FILE: arch/s390/kernel/time.c:376:
+		etr_port0_online = etr_port1_online = 1;

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#341: FILE: arch/s390/kernel/time.c:379:
+}
+early_param("etr", early_parse_etr);

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#418: FILE: arch/s390/kernel/time.c:456:
+		return -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:LINE_SPACING: Missing a blank line after declarations
#448: FILE: arch/s390/kernel/time.c:486:
+	atomic_t *sw_ptr = &__get_cpu_var(etr_sync_word);
+	atomic_set_mask(0x80000000, sw_ptr);

CHECK:BRACES: braces {} should be used on all arms of this statement
#460: FILE: arch/s390/kernel/time.c:498:
+	if (etr_setr(&etr_eacr) == 0)
[...]
+	else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#462: FILE: arch/s390/kernel/time.c:500:
+	else {

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#465: FILE: arch/s390/kernel/time.c:503:
+			printk(KERN_WARNING "Running on non ETR capable "

WARNING:SPLIT_STRING: quoted string split across lines
#466: FILE: arch/s390/kernel/time.c:504:
+			printk(KERN_WARNING "Running on non ETR capable "
+			       "machine, only local mode available.\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#467: FILE: arch/s390/kernel/time.c:505:
+			etr_port0_online = etr_port1_online = 0;

CHECK:SPACING: No space is necessary after a cast
#542: FILE: arch/s390/kernel/time.c:580:
+		(struct etr_interruption_parameter *) &S390_lowcore.ext_params;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#621: FILE: arch/s390/kernel/time.c:659:
+	BUG_ON(etr_steai(aib, func) != 0);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:BRACES: braces {} should be used on all arms of this statement
#649: FILE: arch/s390/kernel/time.c:687:
+	if (state_a1 == etr_lpsc_operational_step) {
[...]
+	} else if (state_a2 != etr_lpsc_pps_mode)
[...]

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#688: FILE: arch/s390/kernel/time.c:726:
+		delta = ticks = clock - xtime_cc;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#689: FILE: arch/s390/kernel/time.c:727:
+		delta = ticks = (delta < delay) ? 0 : delta - delay;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#697: FILE: arch/s390/kernel/time.c:735:
+		delta = ticks = xtime_cc - clock;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_notice([subsystem]dev, ... then dev_notice(dev, ... then pr_notice(...  to printk(KERN_NOTICE ...
#705: FILE: arch/s390/kernel/time.c:743:
+		printk(KERN_NOTICE "etr: time adjusted by %li micro-seconds\n",

WARNING:TYPO_SPELLING: 'refered' may be misspelled - perhaps 'referred'?
#740: FILE: arch/s390/kernel/time.c:778:
+ * Sync the TOD clock using the port refered to by aibp. This port
                                      ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

ERROR:SPACING: space required after that ',' (ctx:VxO)
#765: FILE: arch/s390/kernel/time.c:803:
+	smp_call_function(etr_sync_cpu_start,&in_sync,0,0);
 	                                    ^

ERROR:SPACING: space required before that '&' (ctx:OxV)
#765: FILE: arch/s390/kernel/time.c:803:
+	smp_call_function(etr_sync_cpu_start,&in_sync,0,0);
 	                                     ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#765: FILE: arch/s390/kernel/time.c:803:
+	smp_call_function(etr_sync_cpu_start,&in_sync,0,0);
 	                                             ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#765: FILE: arch/s390/kernel/time.c:803:
+	smp_call_function(etr_sync_cpu_start,&in_sync,0,0);
 	                                               ^

CHECK:SPACING: No space is necessary after a cast
#772: FILE: arch/s390/kernel/time.c:810:
+	clock = ((unsigned long long) (aib->edf2.etv + 1)) << 32;

ERROR:SPACING: space required after that ',' (ctx:VxV)
#802: FILE: arch/s390/kernel/time.c:840:
+	smp_call_function(etr_sync_cpu_end,NULL,0,0);
 	                                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#802: FILE: arch/s390/kernel/time.c:840:
+	smp_call_function(etr_sync_cpu_end,NULL,0,0);
 	                                       ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#802: FILE: arch/s390/kernel/time.c:840:
+	smp_call_function(etr_sync_cpu_end,NULL,0,0);
 	                                         ^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#816: FILE: arch/s390/kernel/time.c:854:
+		eacr.es = eacr.sl = 0;

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#818: FILE: arch/s390/kernel/time.c:856:
+		etr_port0_uptodate = etr_port1_uptodate = 0;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#871: FILE: arch/s390/kernel/time.c:909:
+	mod_timer(&etr_timer, jiffies + HZ/2);
 	                                  ^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#925: FILE: arch/s390/kernel/time.c:963:
+		 * port is not uptodate toggle dp bit.
 		               ^^^^^^^^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#981: FILE: arch/s390/kernel/time.c:1019:
+		eacr.dp = eacr.es = eacr.sl = 0;

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#990: FILE: arch/s390/kernel/time.c:1028:
+	BUG_ON(etr_stetr(&aib) != 0);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#991: FILE: arch/s390/kernel/time.c:1029:
+	etr_port0.esw = etr_port1.esw = aib.esw;	/* Copy status word. */

WARNING:TYPO_SPELLING: 'prefered' may be misspelled - perhaps 'preferred'?
#1002: FILE: arch/s390/kernel/time.c:1040:
+	 * Select ports to enable. The prefered synchronization mode is PPS.
 	                               ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1004: FILE: arch/s390/kernel/time.c:1042:
+	 * 1) The port needs to be online and uptodate. A port is not
 	                                      ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1005: FILE: arch/s390/kernel/time.c:1043:
+	 *    disabled just because it is not uptodate, but it is only
 	                                      ^^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1006: FILE: arch/s390/kernel/time.c:1044:
+	 *    enabled if it is uptodate.
 	                       ^^^^^^^^

WARNING:TYPO_SPELLING: 'useable' may be misspelled - perhaps 'usable'?
#1010: FILE: arch/s390/kernel/time.c:1048:
+	 * 5) If both ports are useable and are ETR ports, the network id
 	                        ^^^^^^^

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1021: FILE: arch/s390/kernel/time.c:1059:
+		// FIXME: uptodate checks ?
 		          ^^^^^^^^

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#1061: FILE: arch/s390/kernel/time.c:1099:
+		eacr.es = eacr.sl = 0;

WARNING:TYPO_SPELLING: 'occured' may be misspelled - perhaps 'occurred'?
#1086: FILE: arch/s390/kernel/time.c:1124:
+	 * assume that a stepping port switch has occured) or the
 	                                          ^^^^^^^

CHECK:BRACES: braces {} should be used on all arms of this statement
#1091: FILE: arch/s390/kernel/time.c:1129:
+	if (now < etr_tolec + (1600000 << 12) ||
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1097: FILE: arch/s390/kernel/time.c:1135:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1163: FILE: arch/s390/kernel/time.c:1201:
+static ssize_t etr_online_store(struct sys_device *dev,
+			      const char *buf, size_t count)

WARNING:CONSIDER_KSTRTO: simple_strtoul is obsolete, use kstrtoul instead
#1167: FILE: arch/s390/kernel/time.c:1205:
+	value = simple_strtoul(buf, NULL, 0);

The simple_strtol(), simple_strtoll(), simple_strtoul(), and
simple_strtoull() functions explicitly ignore overflows, which
may lead to unexpected results in callers.  The respective kstrtol(),
kstrtoll(), kstrtoul(), and kstrtoull() functions tend to be the
correct replacements.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#simple-strtol-simple-strtoll-simple-strtoul-simple-strtoull

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1171: FILE: arch/s390/kernel/time.c:1209:
+		return -ENOSYS;

WARNING:TYPO_SPELLING: 'uptodate' may be misspelled - perhaps 'up-to-date'?
#1201: FILE: arch/s390/kernel/time.c:1239:
+		/* Status word is not uptodate if both ports are offline. */
 		                      ^^^^^^^^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1384: FILE: arch/s390/kernel/vtime.c:535:
+	__ctl_set_bit(0,10);
 	               ^

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1402: FILE: arch/s390/lib/delay.c:2:
+ *  arch/s390/lib/delay.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:SPACING: space prohibited before that ',' (ctx:WxW)
#1439: FILE: arch/s390/lib/delay.c:45:
+		__ctl_load(dummy , 0, 0);
 		                 ^

CHECK:BRACES: Unbalanced braces around else statement
#1441: FILE: arch/s390/lib/delay.c:47:
+	} else

CHECK:SPACING: No space is necessary after a cast
#1445: FILE: arch/s390/lib/delay.c:51:
+	end = get_clock() + ((u64) usecs << 12);

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1485: FILE: drivers/s390/block/dasd.c:1245:
+				dasd_set_timer(device, HZ/2);
 				                         ^

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1528: FILE: drivers/s390/block/dasd_eckd.c:225:
+	if (rc == -ENOSYS || rc == -EACCES)

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1532: FILE: drivers/s390/block/dasd_eckd.c:228:
+	de_ccw->count = sizeof (struct DE_eckd_data);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1553: FILE: drivers/s390/block/dasd_eckd.c:268:
+		rc = check_XRC (ccw, data, device);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1559: FILE: drivers/s390/block/dasd_eckd.c:273:
+		rc = check_XRC (ccw, data, device);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1568: FILE: drivers/s390/block/dasd_eckd.c:281:
+		rc = check_XRC (ccw, data, device);

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#1614: FILE: drivers/s390/cio/cio.c:857:
+	uint64_t start_cc, end_cc;

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#1620: FILE: drivers/s390/cio/cio.c:863:
+	} while (((end_cc - start_cc)/4096) < usecs);
 	                             ^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1691: FILE: include/asm-s390/etr.h:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#1692: FILE: include/asm-s390/etr.h:2:
+ *  include/asm-s390/etr.h

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1712: FILE: include/asm-s390/etr.h:22:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1744: FILE: include/asm-s390/etr.h:54:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1759: FILE: include/asm-s390/etr.h:69:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1771: FILE: include/asm-s390/etr.h:81:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1775: FILE: include/asm-s390/etr.h:85:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1786: FILE: include/asm-s390/etr.h:96:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1796: FILE: include/asm-s390/etr.h:106:
+} __attribute__ ((packed));

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1812: FILE: include/asm-s390/etr.h:122:
+} __attribute__ ((packed,aligned(8)));
                         ^

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1812: FILE: include/asm-s390/etr.h:122:
+} __attribute__ ((packed,aligned(8)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __aligned(8) over __attribute__((aligned(8)))
#1812: FILE: include/asm-s390/etr.h:122:
+} __attribute__ ((packed,aligned(8)));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1822: FILE: include/asm-s390/etr.h:132:
+} __attribute__ ((packed));

WARNING:PREFER_DEFINED_ATTRIBUTE_MACRO: Prefer __packed over __attribute__((packed))
#1830: FILE: include/asm-s390/etr.h:140:
+} __attribute__ ((packed));

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1835: FILE: include/asm-s390/etr.h:145:
+	int rc = -ENOSYS;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1837: FILE: include/asm-s390/etr.h:147:
+	asm volatile(

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1841: FILE: include/asm-s390/etr.h:151:
+		EX_TABLE(0b,1b)
 		           ^

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1849: FILE: include/asm-s390/etr.h:159:
+	int rc = -ENOSYS;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1851: FILE: include/asm-s390/etr.h:161:
+	asm volatile(

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1855: FILE: include/asm-s390/etr.h:165:
+		EX_TABLE(0b,1b)
 		           ^

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1864: FILE: include/asm-s390/etr.h:174:
+	int rc = -ENOSYS;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1866: FILE: include/asm-s390/etr.h:176:
+	asm volatile(

ERROR:SPACING: space required after that ',' (ctx:VxV)
#1870: FILE: include/asm-s390/etr.h:180:
+		EX_TABLE(0b,1b)
 		           ^

CHECK:SPACING: No space is necessary after a cast
#1884: FILE: include/asm-s390/etr.h:194:
+	register unsigned long reg1 asm("1") = (unsigned long) ptff_block;

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#1885: FILE: include/asm-s390/etr.h:195:
+	int rc = -ENOSYS;

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1887: FILE: include/asm-s390/etr.h:197:
+	asm volatile(

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1906: FILE: include/asm-s390/etr.h:216:
+extern void etr_switch_to_local(void);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1907: FILE: include/asm-s390/etr.h:217:
+extern void etr_sync_check(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1918: FILE: include/asm-s390/hardirq.h:35:
+extern void account_ticks(u64 time);

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1933: FILE: include/asm-s390/timex.h:19:
+	asm volatile(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#1945: FILE: include/asm-s390/timex.h:31:
+	asm volatile(

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000474281.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 14 errors, 42 warnings, 36 checks, 1846 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000474281.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
