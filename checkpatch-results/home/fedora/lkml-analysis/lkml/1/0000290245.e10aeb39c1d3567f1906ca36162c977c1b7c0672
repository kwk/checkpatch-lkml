WARNING:TYPO_SPELLING: 'hda' may be misspelled - perhaps 'had'?
#37: 
>  /dev/hda stuck permanently in D state after that, though I don't know
        ^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#69: 
>        c062c320 00000082 00120050 c063b34c c5721c74 c074c980 00000282 003faf08

ERROR:CODE_INDENT: code indent should use tabs where possible
#137: FILE: arch/x86/kernel/process_32.c:114:
+               if (!need_resched())$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: arch/x86/kernel/process_32.c:114:
+               if (!need_resched())$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 22)
#137: FILE: arch/x86/kernel/process_32.c:114:
+               if (!need_resched())
                       safe_halt();    /* enables interrupts racelessly */

ERROR:CODE_INDENT: code indent should use tabs where possible
#142: FILE: arch/x86/kernel/process_32.c:116:
+               else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: arch/x86/kernel/process_32.c:116:
+               else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#142: FILE: arch/x86/kernel/process_32.c:116:
+               else
+                       local_irq_enable();

ERROR:CODE_INDENT: code indent should use tabs where possible
#143: FILE: arch/x86/kernel/process_32.c:117:
+                       local_irq_enable();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#143: FILE: arch/x86/kernel/process_32.c:117:
+                       local_irq_enable();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: arch/x86/kernel/process_32.c:186:
+                       local_irq_disable();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: arch/x86/kernel/process_32.c:186:
+                       local_irq_disable();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#288: FILE: arch/x86/kernel/process_64.c:109:
+       if (!need_resched())$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 14)
#288: FILE: arch/x86/kernel/process_64.c:109:
+       if (!need_resched())
               safe_halt();    /* enables interrupts racelessly */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#293: FILE: arch/x86/kernel/process_64.c:111:
+       else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#293: FILE: arch/x86/kernel/process_64.c:111:
+       else
+               local_irq_enable();

ERROR:CODE_INDENT: code indent should use tabs where possible
#294: FILE: arch/x86/kernel/process_64.c:112:
+               local_irq_enable();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: arch/x86/kernel/process_64.c:112:
+               local_irq_enable();$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (6, 15)
#430: FILE: drivers/acpi/processor_idle.c:420:
       if (!cx || acpi_idle_suspend) {
+               if (pm_idle_save) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#434: FILE: drivers/acpi/processor_idle.c:421:
+               if (pm_idle_save) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#434: FILE: drivers/acpi/processor_idle.c:421:
+               if (pm_idle_save) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#434: FILE: drivers/acpi/processor_idle.c:421:
+               if (pm_idle_save) {
+                       pm_idle_save(); /* enables IRQs */

ERROR:CODE_INDENT: code indent should use tabs where possible
#435: FILE: drivers/acpi/processor_idle.c:422:
+                       pm_idle_save(); /* enables IRQs */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#435: FILE: drivers/acpi/processor_idle.c:422:
+                       pm_idle_save(); /* enables IRQs */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#436: FILE: drivers/acpi/processor_idle.c:423:
+               } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#436: FILE: drivers/acpi/processor_idle.c:423:
+               } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 22)
#436: FILE: drivers/acpi/processor_idle.c:423:
+               } else {
                       acpi_safe_halt();

ERROR:CODE_INDENT: code indent should use tabs where possible
#441: FILE: drivers/acpi/processor_idle.c:426:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: drivers/acpi/processor_idle.c:426:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#452: FILE: drivers/acpi/processor_idle.c:522:
+               if (pm_idle_save) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#452: FILE: drivers/acpi/processor_idle.c:522:
+               if (pm_idle_save) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#452: FILE: drivers/acpi/processor_idle.c:522:
+               if (pm_idle_save) {
+                       pm_idle_save(); /* enables IRQs */

ERROR:CODE_INDENT: code indent should use tabs where possible
#453: FILE: drivers/acpi/processor_idle.c:523:
+                       pm_idle_save(); /* enables IRQs */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#453: FILE: drivers/acpi/processor_idle.c:523:
+                       pm_idle_save(); /* enables IRQs */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#454: FILE: drivers/acpi/processor_idle.c:524:
+               } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#454: FILE: drivers/acpi/processor_idle.c:524:
+               } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 22)
#454: FILE: drivers/acpi/processor_idle.c:524:
+               } else {
                       acpi_safe_halt();

ERROR:CODE_INDENT: code indent should use tabs where possible
#456: FILE: drivers/acpi/processor_idle.c:526:
+                       local_irq_enable();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#456: FILE: drivers/acpi/processor_idle.c:526:
+                       local_irq_enable();$

ERROR:CODE_INDENT: code indent should use tabs where possible
#457: FILE: drivers/acpi/processor_idle.c:527:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#457: FILE: drivers/acpi/processor_idle.c:527:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#478: FILE: arch/x86/kernel/apm_32.c:907:
+               local_irq_disable();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#478: FILE: arch/x86/kernel/apm_32.c:907:
+               local_irq_disable();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#487: FILE: arch/x86/kernel/apm_32.c:916:
+       local_irq_enable();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#499: FILE: include/asm-x86/processor.h:726:
+       trace_hardirqs_on();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#535: FILE: arch/x86/kernel/process.c:62:
+       smp_mb();$

WARNING:MEMORY_BARRIER: memory barrier without comment
#535: FILE: arch/x86/kernel/process.c:62:
+       smp_mb();

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#537: FILE: arch/x86/kernel/process.c:64:
+       smp_call_function(do_nothing, NULL, 0, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#553: FILE: arch/x86/kernel/process.c:80:
+       if (!need_resched()) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#553: FILE: arch/x86/kernel/process.c:80:
+       if (!need_resched()) {
+               __monitor((void *)&current_thread_info()->flags, 0, 0);

ERROR:CODE_INDENT: code indent should use tabs where possible
#554: FILE: arch/x86/kernel/process.c:81:
+               __monitor((void *)&current_thread_info()->flags, 0, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#554: FILE: arch/x86/kernel/process.c:81:
+               __monitor((void *)&current_thread_info()->flags, 0, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#555: FILE: arch/x86/kernel/process.c:82:
+               smp_mb();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#555: FILE: arch/x86/kernel/process.c:82:
+               smp_mb();$

WARNING:MEMORY_BARRIER: memory barrier without comment
#555: FILE: arch/x86/kernel/process.c:82:
+               smp_mb();

ERROR:CODE_INDENT: code indent should use tabs where possible
#556: FILE: arch/x86/kernel/process.c:83:
+               if (!need_resched())$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#556: FILE: arch/x86/kernel/process.c:83:
+               if (!need_resched())$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#556: FILE: arch/x86/kernel/process.c:83:
+               if (!need_resched())
+                       __mwait(ax, cx);

ERROR:CODE_INDENT: code indent should use tabs where possible
#557: FILE: arch/x86/kernel/process.c:84:
+                       __mwait(ax, cx);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#557: FILE: arch/x86/kernel/process.c:84:
+                       __mwait(ax, cx);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#558: FILE: arch/x86/kernel/process.c:85:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#564: FILE: arch/x86/kernel/process.c:91:
+       if (!need_resched()) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#564: FILE: arch/x86/kernel/process.c:91:
+       if (!need_resched()) {
+               __monitor((void *)&current_thread_info()->flags, 0, 0);

CHECK:BRACES: braces {} should be used on all arms of this statement
#564: FILE: arch/x86/kernel/process.c:91:
+       if (!need_resched()) {
[...]
+       } else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#565: FILE: arch/x86/kernel/process.c:92:
+               __monitor((void *)&current_thread_info()->flags, 0, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#565: FILE: arch/x86/kernel/process.c:92:
+               __monitor((void *)&current_thread_info()->flags, 0, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#566: FILE: arch/x86/kernel/process.c:93:
+               smp_mb();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#566: FILE: arch/x86/kernel/process.c:93:
+               smp_mb();$

WARNING:MEMORY_BARRIER: memory barrier without comment
#566: FILE: arch/x86/kernel/process.c:93:
+               smp_mb();

ERROR:CODE_INDENT: code indent should use tabs where possible
#567: FILE: arch/x86/kernel/process.c:94:
+               if (!need_resched())$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#567: FILE: arch/x86/kernel/process.c:94:
+               if (!need_resched())$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#567: FILE: arch/x86/kernel/process.c:94:
+               if (!need_resched())
+                       __sti_mwait(0, 0);

ERROR:CODE_INDENT: code indent should use tabs where possible
#568: FILE: arch/x86/kernel/process.c:95:
+                       __sti_mwait(0, 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#568: FILE: arch/x86/kernel/process.c:95:
+                       __sti_mwait(0, 0);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#569: FILE: arch/x86/kernel/process.c:96:
+               else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#569: FILE: arch/x86/kernel/process.c:96:
+               else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#569: FILE: arch/x86/kernel/process.c:96:
+               else
+                       local_irq_enable();

ERROR:CODE_INDENT: code indent should use tabs where possible
#570: FILE: arch/x86/kernel/process.c:97:
+                       local_irq_enable();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#570: FILE: arch/x86/kernel/process.c:97:
+                       local_irq_enable();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#571: FILE: arch/x86/kernel/process.c:98:
+       } else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#571: FILE: arch/x86/kernel/process.c:98:
+       } else
+               local_irq_enable();

CHECK:BRACES: Unbalanced braces around else statement
#571: FILE: arch/x86/kernel/process.c:98:
+       } else

ERROR:CODE_INDENT: code indent should use tabs where possible
#572: FILE: arch/x86/kernel/process.c:99:
+               local_irq_enable();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#572: FILE: arch/x86/kernel/process.c:99:
+               local_irq_enable();$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#575: FILE: arch/x86/kernel/process.c:102:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#578: FILE: arch/x86/kernel/process.c:105:
+       if (force_mwait)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#578: FILE: arch/x86/kernel/process.c:105:
+       if (force_mwait)
+               return 1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#579: FILE: arch/x86/kernel/process.c:106:
+               return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#579: FILE: arch/x86/kernel/process.c:106:
+               return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#581: FILE: arch/x86/kernel/process.c:108:
+       return c->cpuid_level >= 5 && ((cpuid_edx(5) >> 4) & 0xf) > 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#591: FILE: arch/x86/kernel/process.c:118:
+       local_irq_enable();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#592: FILE: arch/x86/kernel/process.c:119:
+       cpu_relax();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#597: FILE: arch/x86/kernel/process.c:124:
+       static int selected;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#599: FILE: arch/x86/kernel/process.c:126:
+       if (selected)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#599: FILE: arch/x86/kernel/process.c:126:
+       if (selected)
+               return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#600: FILE: arch/x86/kernel/process.c:127:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#600: FILE: arch/x86/kernel/process.c:127:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#602: FILE: arch/x86/kernel/process.c:129:
+       if (pm_idle == poll_idle && smp_num_siblings > 1) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#602: FILE: arch/x86/kernel/process.c:129:
+       if (pm_idle == poll_idle && smp_num_siblings > 1) {
+               printk(KERN_WARNING "WARNING: polling idle and HT enabled,"

ERROR:CODE_INDENT: code indent should use tabs where possible
#603: FILE: arch/x86/kernel/process.c:130:
+               printk(KERN_WARNING "WARNING: polling idle and HT enabled,"$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#603: FILE: arch/x86/kernel/process.c:130:
+               printk(KERN_WARNING "WARNING: polling idle and HT enabled,"$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#603: FILE: arch/x86/kernel/process.c:130:
+               printk(KERN_WARNING "WARNING: polling idle and HT enabled,"

ERROR:CODE_INDENT: code indent should use tabs where possible
#604: FILE: arch/x86/kernel/process.c:131:
+                       " performance may degrade.\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#604: FILE: arch/x86/kernel/process.c:131:
+                       " performance may degrade.\n");$

WARNING:SPLIT_STRING: quoted string split across lines
#604: FILE: arch/x86/kernel/process.c:131:
+               printk(KERN_WARNING "WARNING: polling idle and HT enabled,"
+                       " performance may degrade.\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#605: FILE: arch/x86/kernel/process.c:132:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#607: FILE: arch/x86/kernel/process.c:134:
+       if (cpu_has(c, X86_FEATURE_MWAIT) && mwait_usable(c)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#607: FILE: arch/x86/kernel/process.c:134:
+       if (cpu_has(c, X86_FEATURE_MWAIT) && mwait_usable(c)) {
[...]
+               if (!pm_idle) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#608: FILE: arch/x86/kernel/process.c:135:
+               /*$

ERROR:CODE_INDENT: code indent should use tabs where possible
#609: FILE: arch/x86/kernel/process.c:136:
+                * Skip, if setup has overridden idle.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#610: FILE: arch/x86/kernel/process.c:137:
+                * One CPU supports mwait => All CPUs supports mwait$

ERROR:CODE_INDENT: code indent should use tabs where possible
#611: FILE: arch/x86/kernel/process.c:138:
+                */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#612: FILE: arch/x86/kernel/process.c:139:
+               if (!pm_idle) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#612: FILE: arch/x86/kernel/process.c:139:
+               if (!pm_idle) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#612: FILE: arch/x86/kernel/process.c:139:
+               if (!pm_idle) {
+                       printk(KERN_INFO "using mwait in idle threads.\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#613: FILE: arch/x86/kernel/process.c:140:
+                       printk(KERN_INFO "using mwait in idle threads.\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#613: FILE: arch/x86/kernel/process.c:140:
+                       printk(KERN_INFO "using mwait in idle threads.\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#613: FILE: arch/x86/kernel/process.c:140:
+                       printk(KERN_INFO "using mwait in idle threads.\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#614: FILE: arch/x86/kernel/process.c:141:
+                       pm_idle = mwait_idle;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#614: FILE: arch/x86/kernel/process.c:141:
+                       pm_idle = mwait_idle;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#615: FILE: arch/x86/kernel/process.c:142:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#615: FILE: arch/x86/kernel/process.c:142:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#616: FILE: arch/x86/kernel/process.c:143:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#617: FILE: arch/x86/kernel/process.c:144:
+       selected = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#622: FILE: arch/x86/kernel/process.c:149:
+       if (!strcmp(str, "poll")) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#622: FILE: arch/x86/kernel/process.c:149:
+       if (!strcmp(str, "poll")) {
+               printk("using polling idle threads.\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#622: FILE: arch/x86/kernel/process.c:149:
+       if (!strcmp(str, "poll")) {
[...]
+       } else if (!strcmp(str, "mwait"))
[...]
+       else
[...]

ERROR:CODE_INDENT: code indent should use tabs where possible
#623: FILE: arch/x86/kernel/process.c:150:
+               printk("using polling idle threads.\n");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#623: FILE: arch/x86/kernel/process.c:150:
+               printk("using polling idle threads.\n");$

WARNING:PRINTK_WITHOUT_KERN_LEVEL: printk() should include KERN_<LEVEL> facility level
#623: FILE: arch/x86/kernel/process.c:150:
+               printk("using polling idle threads.\n");

ERROR:CODE_INDENT: code indent should use tabs where possible
#624: FILE: arch/x86/kernel/process.c:151:
+               pm_idle = poll_idle;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#624: FILE: arch/x86/kernel/process.c:151:
+               pm_idle = poll_idle;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#625: FILE: arch/x86/kernel/process.c:152:
+       } else if (!strcmp(str, "mwait"))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#625: FILE: arch/x86/kernel/process.c:152:
+       } else if (!strcmp(str, "mwait"))
+               force_mwait = 1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#626: FILE: arch/x86/kernel/process.c:153:
+               force_mwait = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#626: FILE: arch/x86/kernel/process.c:153:
+               force_mwait = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#627: FILE: arch/x86/kernel/process.c:154:
+       else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#627: FILE: arch/x86/kernel/process.c:154:
+       else
+               return -1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#628: FILE: arch/x86/kernel/process.c:155:
+               return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#628: FILE: arch/x86/kernel/process.c:155:
+               return -1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#630: FILE: arch/x86/kernel/process.c:157:
+       boot_option_idle_override = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#631: FILE: arch/x86/kernel/process.c:158:
+       return 0;$

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#633: FILE: arch/x86/kernel/process.c:160:
+}
+early_param("idle", idle_setup);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000290245.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 42 errors, 96 warnings, 5 checks, 470 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000290245.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
