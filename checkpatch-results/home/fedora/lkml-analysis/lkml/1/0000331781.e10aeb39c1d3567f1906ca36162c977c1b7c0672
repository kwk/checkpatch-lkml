WARNING:TYPO_SPELLING: 'followings' may be misspelled - perhaps 'following'?
#56: 
The points of the implementation are followings.
                                     ^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:LINE_SPACING: Missing a blank line after declarations
#78: FILE: fs/ext3/ioctl.c:260:
+		long timeout_msec;
+		if (!capable(CAP_SYS_ADMIN))

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: No space is necessary after a cast
#83: FILE: fs/ext3/ioctl.c:265:
+		get_user(timeout_sec, (long __user *) arg);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#138: FILE: fs/ext3/super.c:336:
+void ext3_add_freeze_timeout(struct ext3_sb_info *sbi,
+			long timeout_msec)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#194: FILE: fs/ext3/super.c:2428:
+	BUG_ON(sb == NULL);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!sb"
#194: FILE: fs/ext3/super.c:2428:
+	BUG_ON(sb == NULL);

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#258: FILE: fs/super.c:957:
+ * ^I^I  (super_block.s_fs_info)$

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#297: FILE: include/linux/ext3_fs.h:869:
+extern void ext3_add_freeze_timeout(struct ext3_sb_info *sbi,

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#298: FILE: include/linux/ext3_fs.h:870:
+extern void ext3_add_freeze_timeout(struct ext3_sb_info *sbi,
+			long timeout_msec);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#299: FILE: include/linux/ext3_fs.h:871:
+extern void ext3_del_freeze_timeout(struct ext3_sb_info *sbi);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#322: FILE: include/linux/fs.h:2098:
+extern struct super_block *get_super_block(void *s_fs_info);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#333: FILE: include/linux/jbd.h:908:
+extern void	 journal_unlock_updates_if_needed(journal_t *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'journal_t *' should also have an identifier name
#333: FILE: include/linux/jbd.h:908:
+extern void	 journal_unlock_updates_if_needed(journal_t *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000331781.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 5 warnings, 8 checks, 230 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000331781.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
