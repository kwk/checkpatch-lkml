WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'limit_regions', this function's name, in a string
#408: FILE: arch/x86/kernel/e820_32.c:330:
+		e820_print_map("limit_regions endfor");

Embedded function names are less appropriate to use as
refactoring can cause function renaming.  Prefer the use of
"%s", __func__ to embedded function names.

Note that this does not work with -f (--file) checkpatch option
as it depends on patch context providing the function name.

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using 'limit_regions', this function's name, in a string
#464: FILE: arch/x86/kernel/e820_32.c:333:
+	e820_print_map("limit_regions endfunc");

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1028: FILE: include/asm-x86/e820.h:26:
+extern int e820_any_mapped(u64 start, u64 end, unsigned type);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1028: FILE: include/asm-x86/e820.h:26:
+extern int e820_any_mapped(u64 start, u64 end, unsigned type);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1029: FILE: include/asm-x86/e820.h:27:
+extern int e820_all_mapped(u64 start, u64 end, unsigned type);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1029: FILE: include/asm-x86/e820.h:27:
+extern int e820_all_mapped(u64 start, u64 end, unsigned type);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1030: FILE: include/asm-x86/e820.h:28:
+extern void add_memory_region(u64 start, u64 size, int type);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1031: FILE: include/asm-x86/e820.h:29:
+extern void e820_print_map(char *who);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1032: FILE: include/asm-x86/e820.h:30:
+extern int sanitize_e820_map(struct e820entry *biosmap, char *pnr_map);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1033: FILE: include/asm-x86/e820.h:31:
+extern int copy_e820_map(struct e820entry *biosmap, int nr_map);

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1034: FILE: include/asm-x86/e820.h:32:
+extern u64 update_memory_range(u64 start, u64 size, unsigned old_type,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1034: FILE: include/asm-x86/e820.h:32:
+extern u64 update_memory_range(u64 start, u64 size, unsigned old_type,

ERROR:CODE_INDENT: code indent should use tabs where possible
#1035: FILE: include/asm-x86/e820.h:33:
+                                unsigned new_type);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1035: FILE: include/asm-x86/e820.h:33:
+extern u64 update_memory_range(u64 start, u64 size, unsigned old_type,
+                                unsigned new_type);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#1035: FILE: include/asm-x86/e820.h:33:
+                                unsigned new_type);$

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1035: FILE: include/asm-x86/e820.h:33:
+                                unsigned new_type);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1036: FILE: include/asm-x86/e820.h:34:
+extern void update_e820(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#1037: FILE: include/asm-x86/e820.h:35:
+extern void e820_setup_gap(void);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1117: FILE: arch/x86/kernel/e820.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/pgtable.h> instead of <asm/pgtable.h>
#1138: FILE: arch/x86/kernel/e820.c:22:
+#include <asm/pgtable.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1156: FILE: arch/x86/kernel/e820.c:40:
+e820_any_mapped(u64 start, u64 end, unsigned type)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1179: FILE: arch/x86/kernel/e820.c:63:
+int __init e820_all_mapped(u64 start, u64 end, unsigned type)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1215: FILE: arch/x86/kernel/e820.c:99:
+		printk(KERN_ERR "Ooops! Too many entries in the memory map!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1230: FILE: arch/x86/kernel/e820.c:114:
+		printk(KERN_INFO " %s: %016Lx - %016Lx ", who,

WARNING:PRINTF_L: %Lx is non-standard C, use %llx
#1230: FILE: arch/x86/kernel/e820.c:114:
+		printk(KERN_INFO " %s: %016Lx - %016Lx ", who,

CHECK:SPACING: No space is necessary after a cast
#1231: FILE: arch/x86/kernel/e820.c:115:
+		       (unsigned long long) e820.map[i].addr,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#1236: FILE: arch/x86/kernel/e820.c:120:
+			printk(KERN_CONT "(usable)\n");

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#1236: FILE: arch/x86/kernel/e820.c:120:
+			printk(KERN_CONT "(usable)\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#1239: FILE: arch/x86/kernel/e820.c:123:
+			printk(KERN_CONT "(reserved)\n");

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#1239: FILE: arch/x86/kernel/e820.c:123:
+			printk(KERN_CONT "(reserved)\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#1242: FILE: arch/x86/kernel/e820.c:126:
+			printk(KERN_CONT "(ACPI data)\n");

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#1242: FILE: arch/x86/kernel/e820.c:126:
+			printk(KERN_CONT "(ACPI data)\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#1245: FILE: arch/x86/kernel/e820.c:129:
+			printk(KERN_CONT "(ACPI NVS)\n");

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#1245: FILE: arch/x86/kernel/e820.c:129:
+			printk(KERN_CONT "(ACPI NVS)\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#1248: FILE: arch/x86/kernel/e820.c:132:
+			printk(KERN_CONT "type %u\n", e820.map[i].type);

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#1248: FILE: arch/x86/kernel/e820.c:132:
+			printk(KERN_CONT "type %u\n", e820.map[i].type);

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1267: FILE: arch/x86/kernel/e820.c:151:
+	static struct change_member change_point_list[2*E820MAX] __initdata;
 	                                               ^

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1268: FILE: arch/x86/kernel/e820.c:152:
+	static struct change_member *change_point[2*E820MAX] __initdata;
 	                                           ^

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1281: FILE: arch/x86/kernel/e820.c:165:
+	/*
+		Visually we're performing the following

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1333: FILE: arch/x86/kernel/e820.c:217:
+	/* record all known change-points (starting and ending addresses),
+	   omitting those that are for empty memory regions */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1333: FILE: arch/x86/kernel/e820.c:217:
+	   omitting those that are for empty memory regions */

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1370: FILE: arch/x86/kernel/e820.c:254:
+				change_point[i] = change_point[i-1];
 				                                ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1371: FILE: arch/x86/kernel/e820.c:255:
+				change_point[i-1] = change_tmp;
 				              ^

CHECK:SPACING: spaces preferred around that '-' (ctx:VxV)
#1403: FILE: arch/x86/kernel/e820.c:287:
+						overlap_list[overlap_entries-1];
 						                            ^

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1485: FILE: arch/x86/kernel/e820.c:369:
+u64 __init update_memory_range(u64 start, u64 size, unsigned old_type,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1486: FILE: arch/x86/kernel/e820.c:370:
+u64 __init update_memory_range(u64 start, u64 size, unsigned old_type,
+				unsigned new_type)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1486: FILE: arch/x86/kernel/e820.c:370:
+				unsigned new_type)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1491: FILE: arch/x86/kernel/e820.c:375:
+	BUG_ON(old_type == new_type);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LINE_SPACING: Missing a blank line after declarations
#1496: FILE: arch/x86/kernel/e820.c:380:
+		u64 final_start, final_end;
+		if (ei->type != old_type)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1511: FILE: arch/x86/kernel/e820.c:395:
+		add_memory_region(final_start, final_end - final_start,
+					 new_type);

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1525: FILE: arch/x86/kernel/e820.c:409:
+	printk(KERN_INFO "modified physical RAM map:\n");

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1569: FILE: arch/x86/kernel/e820.c:453:
+		gapstart = (end_pfn << PAGE_SHIFT) + 1024*1024;
 		                                         ^

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#1570: FILE: arch/x86/kernel/e820.c:454:
+		printk(KERN_ERR "PCI: Warning: Cannot find a gap in the 32bit "

WARNING:SPLIT_STRING: quoted string split across lines
#1571: FILE: arch/x86/kernel/e820.c:455:
+		printk(KERN_ERR "PCI: Warning: Cannot find a gap in the 32bit "
+		       "address range\n"

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

WARNING:SPLIT_STRING: quoted string split across lines
#1573: FILE: arch/x86/kernel/e820.c:457:
+		       KERN_ERR "PCI: Unassigned devices with 32bit resource "
+		       "registers may break!\n");

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#1587: FILE: arch/x86/kernel/e820.c:471:
+	printk(KERN_INFO

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000282433.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 35 warnings, 20 checks, 1492 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000282433.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
