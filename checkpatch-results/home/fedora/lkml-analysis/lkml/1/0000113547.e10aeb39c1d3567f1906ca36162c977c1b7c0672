WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#45: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#50: FILE: arch/score/kernel/ptrace.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#51: FILE: arch/score/kernel/ptrace.c:2:
+ * arch/score/kernel/ptrace.c

Embedding the complete filename path inside the file isn't particularly
useful as often the path is moved around and becomes incorrect.

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#72: FILE: arch/score/kernel/ptrace.c:23:
+ * 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/uaccess.h> instead of <asm/uaccess.h>
#78: FILE: arch/score/kernel/ptrace.c:29:
+#include <asm/uaccess.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#82: FILE: arch/score/kernel/ptrace.c:33:
+       if ((insn & INSN32_MASK) == INSN32_MASK)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#82: FILE: arch/score/kernel/ptrace.c:33:
+       if ((insn & INSN32_MASK) == INSN32_MASK)
+               return 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#83: FILE: arch/score/kernel/ptrace.c:34:
+               return 0;$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#83: FILE: arch/score/kernel/ptrace.c:34:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#84: FILE: arch/score/kernel/ptrace.c:35:
+       else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#84: FILE: arch/score/kernel/ptrace.c:35:
+       else
+               return 1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#85: FILE: arch/score/kernel/ptrace.c:36:
+               return 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#85: FILE: arch/score/kernel/ptrace.c:36:
+               return 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#90: FILE: arch/score/kernel/ptrace.c:41:
+               unsigned long addr, unsigned long *res)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#90: FILE: arch/score/kernel/ptrace.c:41:
+read_tsk_long(struct task_struct *child,
+               unsigned long addr, unsigned long *res)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#90: FILE: arch/score/kernel/ptrace.c:41:
+               unsigned long addr, unsigned long *res)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#92: FILE: arch/score/kernel/ptrace.c:43:
+       int copied;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#94: FILE: arch/score/kernel/ptrace.c:45:
+       copied = access_process_vm(child, addr, res, sizeof(*res), 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#96: FILE: arch/score/kernel/ptrace.c:47:
+       return copied != sizeof(*res) ? -EIO : 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#101: FILE: arch/score/kernel/ptrace.c:52:
+               unsigned long addr, unsigned short *res)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#101: FILE: arch/score/kernel/ptrace.c:52:
+               unsigned long addr, unsigned short *res)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#103: FILE: arch/score/kernel/ptrace.c:54:
+       int copied;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#105: FILE: arch/score/kernel/ptrace.c:56:
+       copied = access_process_vm(child, addr, res, sizeof(*res), 0);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#107: FILE: arch/score/kernel/ptrace.c:58:
+       return copied != sizeof(*res) ? -EIO : 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#112: FILE: arch/score/kernel/ptrace.c:63:
+               unsigned long addr, unsigned short val)$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#112: FILE: arch/score/kernel/ptrace.c:63:
+write_tsk_short(struct task_struct *child,
+               unsigned long addr, unsigned short val)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#112: FILE: arch/score/kernel/ptrace.c:63:
+               unsigned long addr, unsigned short val)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#114: FILE: arch/score/kernel/ptrace.c:65:
+       int copied;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#116: FILE: arch/score/kernel/ptrace.c:67:
+       copied = access_process_vm(child, addr, &val, sizeof(val), 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#118: FILE: arch/score/kernel/ptrace.c:69:
+       return copied != sizeof(val) ? -EIO : 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#123: FILE: arch/score/kernel/ptrace.c:74:
+               unsigned long addr, unsigned long val)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#123: FILE: arch/score/kernel/ptrace.c:74:
+               unsigned long addr, unsigned long val)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#125: FILE: arch/score/kernel/ptrace.c:76:
+       int copied;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#127: FILE: arch/score/kernel/ptrace.c:78:
+       copied = access_process_vm(child, addr, &val, sizeof(val), 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#129: FILE: arch/score/kernel/ptrace.c:80:
+       return copied != sizeof(val) ? -EIO : 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#135: FILE: arch/score/kernel/ptrace.c:86:
+       unsigned int epc, far_epc = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#136: FILE: arch/score/kernel/ptrace.c:87:
+       unsigned long epc_insn, far_epc_insn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#137: FILE: arch/score/kernel/ptrace.c:88:
+       int ninsn_type;                 /* next insn type 0=16b, 1=32b */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#138: FILE: arch/score/kernel/ptrace.c:89:
+       unsigned int tmp, tmp2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#139: FILE: arch/score/kernel/ptrace.c:90:
+       struct pt_regs *regs = task_pt_regs(child);$

WARNING:LINE_SPACING: Missing a blank line after declarations
#140: FILE: arch/score/kernel/ptrace.c:91:
+       struct pt_regs *regs = task_pt_regs(child);
+       child->thread.single_step = 1;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#140: FILE: arch/score/kernel/ptrace.c:91:
+       child->thread.single_step = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#141: FILE: arch/score/kernel/ptrace.c:92:
+       child->thread.ss_nextcnt = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#142: FILE: arch/score/kernel/ptrace.c:93:
+       epc = regs->cp0_epc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#144: FILE: arch/score/kernel/ptrace.c:95:
+       read_tsk_long(child, epc, &epc_insn);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#146: FILE: arch/score/kernel/ptrace.c:97:
+       if (is_16bitinsn(epc_insn)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#146: FILE: arch/score/kernel/ptrace.c:97:
+       if (is_16bitinsn(epc_insn)) {
+               if ((epc_insn & J16M) == J16) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#147: FILE: arch/score/kernel/ptrace.c:98:
+               if ((epc_insn & J16M) == J16) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#147: FILE: arch/score/kernel/ptrace.c:98:
+               if ((epc_insn & J16M) == J16) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#147: FILE: arch/score/kernel/ptrace.c:98:
+               if ((epc_insn & J16M) == J16) {
+                       tmp = epc_insn & 0xFFE;

CHECK:BRACES: braces {} should be used on all arms of this statement
#147: FILE: arch/score/kernel/ptrace.c:98:
+               if ((epc_insn & J16M) == J16) {
[...]
+               } else if ((epc_insn & B16M) == B16) {
[...]
+               } else if ((epc_insn & BR16M) == BR16) {
[...]
+               } else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#148: FILE: arch/score/kernel/ptrace.c:99:
+                       tmp = epc_insn & 0xFFE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#148: FILE: arch/score/kernel/ptrace.c:99:
+                       tmp = epc_insn & 0xFFE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#149: FILE: arch/score/kernel/ptrace.c:100:
+                       epc = (epc & 0xFFFFF000) | tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#149: FILE: arch/score/kernel/ptrace.c:100:
+                       epc = (epc & 0xFFFFF000) | tmp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#150: FILE: arch/score/kernel/ptrace.c:101:
+               } else if ((epc_insn & B16M) == B16) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#150: FILE: arch/score/kernel/ptrace.c:101:
+               } else if ((epc_insn & B16M) == B16) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#150: FILE: arch/score/kernel/ptrace.c:101:
+               } else if ((epc_insn & B16M) == B16) {
+                       child->thread.ss_nextcnt = 2;

ERROR:CODE_INDENT: code indent should use tabs where possible
#151: FILE: arch/score/kernel/ptrace.c:102:
+                       child->thread.ss_nextcnt = 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#151: FILE: arch/score/kernel/ptrace.c:102:
+                       child->thread.ss_nextcnt = 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#152: FILE: arch/score/kernel/ptrace.c:103:
+                       tmp = (epc_insn & 0xFF) << 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#152: FILE: arch/score/kernel/ptrace.c:103:
+                       tmp = (epc_insn & 0xFF) << 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#153: FILE: arch/score/kernel/ptrace.c:104:
+                       tmp = tmp << 23;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#153: FILE: arch/score/kernel/ptrace.c:104:
+                       tmp = tmp << 23;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#154: FILE: arch/score/kernel/ptrace.c:105:
+                       tmp = (unsigned int)((int) tmp >> 23);$

CHECK:SPACING: No space is necessary after a cast
#154: FILE: arch/score/kernel/ptrace.c:105:
+                       tmp = (unsigned int)((int) tmp >> 23);

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#154: FILE: arch/score/kernel/ptrace.c:105:
+                       tmp = (unsigned int)((int) tmp >> 23);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#155: FILE: arch/score/kernel/ptrace.c:106:
+                       far_epc = epc + tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#155: FILE: arch/score/kernel/ptrace.c:106:
+                       far_epc = epc + tmp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#156: FILE: arch/score/kernel/ptrace.c:107:
+                       epc += 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#156: FILE: arch/score/kernel/ptrace.c:107:
+                       epc += 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#157: FILE: arch/score/kernel/ptrace.c:108:
+               } else if ((epc_insn & BR16M) == BR16) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#157: FILE: arch/score/kernel/ptrace.c:108:
+               } else if ((epc_insn & BR16M) == BR16) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#157: FILE: arch/score/kernel/ptrace.c:108:
+               } else if ((epc_insn & BR16M) == BR16) {
+                       child->thread.ss_nextcnt = 2;

ERROR:CODE_INDENT: code indent should use tabs where possible
#158: FILE: arch/score/kernel/ptrace.c:109:
+                       child->thread.ss_nextcnt = 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#158: FILE: arch/score/kernel/ptrace.c:109:
+                       child->thread.ss_nextcnt = 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#159: FILE: arch/score/kernel/ptrace.c:110:
+                       tmp = (epc_insn >> 4) & 0xF;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#159: FILE: arch/score/kernel/ptrace.c:110:
+                       tmp = (epc_insn >> 4) & 0xF;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#160: FILE: arch/score/kernel/ptrace.c:111:
+                       far_epc = regs->regs[tmp];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#160: FILE: arch/score/kernel/ptrace.c:111:
+                       far_epc = regs->regs[tmp];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#161: FILE: arch/score/kernel/ptrace.c:112:
+                       epc += 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#161: FILE: arch/score/kernel/ptrace.c:112:
+                       epc += 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#162: FILE: arch/score/kernel/ptrace.c:113:
+               } else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#162: FILE: arch/score/kernel/ptrace.c:113:
+               } else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#162: FILE: arch/score/kernel/ptrace.c:113:
+               } else
+                       epc += 2;

CHECK:BRACES: Unbalanced braces around else statement
#162: FILE: arch/score/kernel/ptrace.c:113:
+               } else

ERROR:CODE_INDENT: code indent should use tabs where possible
#163: FILE: arch/score/kernel/ptrace.c:114:
+                       epc += 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#163: FILE: arch/score/kernel/ptrace.c:114:
+                       epc += 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#164: FILE: arch/score/kernel/ptrace.c:115:
+       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#164: FILE: arch/score/kernel/ptrace.c:115:
+       } else {
+               if ((epc_insn & J32M) == J32) {

ERROR:CODE_INDENT: code indent should use tabs where possible
#165: FILE: arch/score/kernel/ptrace.c:116:
+               if ((epc_insn & J32M) == J32) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#165: FILE: arch/score/kernel/ptrace.c:116:
+               if ((epc_insn & J32M) == J32) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#165: FILE: arch/score/kernel/ptrace.c:116:
+               if ((epc_insn & J32M) == J32) {
+                       tmp = epc_insn & 0x03FFFFFE;

ERROR:CODE_INDENT: code indent should use tabs where possible
#166: FILE: arch/score/kernel/ptrace.c:117:
+                       tmp = epc_insn & 0x03FFFFFE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#166: FILE: arch/score/kernel/ptrace.c:117:
+                       tmp = epc_insn & 0x03FFFFFE;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#167: FILE: arch/score/kernel/ptrace.c:118:
+                       tmp2 = tmp & 0x7FFF;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#167: FILE: arch/score/kernel/ptrace.c:118:
+                       tmp2 = tmp & 0x7FFF;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#168: FILE: arch/score/kernel/ptrace.c:119:
+                       tmp = (((tmp >> 16) & 0x3FF) << 15) | tmp2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#168: FILE: arch/score/kernel/ptrace.c:119:
+                       tmp = (((tmp >> 16) & 0x3FF) << 15) | tmp2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#169: FILE: arch/score/kernel/ptrace.c:120:
+                       epc = (epc & 0xFFC00000) | tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#169: FILE: arch/score/kernel/ptrace.c:120:
+                       epc = (epc & 0xFFC00000) | tmp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#170: FILE: arch/score/kernel/ptrace.c:121:
+               } else if ((epc_insn & B32M) == B32) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#170: FILE: arch/score/kernel/ptrace.c:121:
+               } else if ((epc_insn & B32M) == B32) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#170: FILE: arch/score/kernel/ptrace.c:121:
+               } else if ((epc_insn & B32M) == B32) {
+                       child->thread.ss_nextcnt = 2;

ERROR:CODE_INDENT: code indent should use tabs where possible
#171: FILE: arch/score/kernel/ptrace.c:122:
+                       child->thread.ss_nextcnt = 2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#171: FILE: arch/score/kernel/ptrace.c:122:
+                       child->thread.ss_nextcnt = 2;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#172: FILE: arch/score/kernel/ptrace.c:123:
+                       tmp = epc_insn & 0x03FFFFFE;    /* discard LK bit $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CODE_INDENT: code indent should use tabs where possible
#172: FILE: arch/score/kernel/ptrace.c:123:
+                       tmp = epc_insn & 0x03FFFFFE;    /* discard LK bit $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#172: FILE: arch/score/kernel/ptrace.c:123:
+                       tmp = epc_insn & 0x03FFFFFE;    /* discard LK bit $

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#173: FILE: arch/score/kernel/ptrace.c:123:
*/

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

ERROR:CODE_INDENT: code indent should use tabs where possible
#174: FILE: arch/score/kernel/ptrace.c:124:
+                       tmp2 = tmp & 0x3FF;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#174: FILE: arch/score/kernel/ptrace.c:124:
+                       tmp = epc_insn & 0x03FFFFFE;    /* discard LK bit 
+                       tmp2 = tmp & 0x3FF;

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

ERROR:TRAILING_WHITESPACE: trailing whitespace
#175: FILE: arch/score/kernel/ptrace.c:125:
+                       tmp = (((tmp >> 16) & 0x3FF) << 10) | tmp2; /* $

ERROR:CODE_INDENT: code indent should use tabs where possible
#175: FILE: arch/score/kernel/ptrace.c:125:
+                       tmp = (((tmp >> 16) & 0x3FF) << 10) | tmp2; /* $

ERROR:CODE_INDENT: code indent should use tabs where possible
#177: FILE: arch/score/kernel/ptrace.c:126:
+                       tmp = tmp << 12;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#177: FILE: arch/score/kernel/ptrace.c:126:
+                       tmp = (((tmp >> 16) & 0x3FF) << 10) | tmp2; /* 
+                       tmp = tmp << 12;

ERROR:CODE_INDENT: code indent should use tabs where possible
#178: FILE: arch/score/kernel/ptrace.c:127:
+                       tmp = (unsigned int)((int) tmp >> 12);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#179: FILE: arch/score/kernel/ptrace.c:128:
+                       far_epc = epc + tmp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#180: FILE: arch/score/kernel/ptrace.c:129:
+                       epc += 4;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#181: FILE: arch/score/kernel/ptrace.c:130:
+               } else if ((epc_insn & BR32M) == BR32) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#182: FILE: arch/score/kernel/ptrace.c:131:
+                       child->thread.ss_nextcnt = 2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#183: FILE: arch/score/kernel/ptrace.c:132:
+                       tmp = (epc_insn >> 16) & 0x1F;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#184: FILE: arch/score/kernel/ptrace.c:133:
+                       far_epc = regs->regs[tmp];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#185: FILE: arch/score/kernel/ptrace.c:134:
+                       epc += 4;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#186: FILE: arch/score/kernel/ptrace.c:135:
+               } else$

ERROR:CODE_INDENT: code indent should use tabs where possible
#187: FILE: arch/score/kernel/ptrace.c:136:
+                       epc += 4;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#191: FILE: arch/score/kernel/ptrace.c:140:
+               read_tsk_long(child, epc, &epc_insn);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#193: FILE: arch/score/kernel/ptrace.c:142:
+               if (is_16bitinsn(epc_insn)) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#194: FILE: arch/score/kernel/ptrace.c:143:
+                       write_tsk_short(child, epc, SINGLESTEP16_INSN);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#195: FILE: arch/score/kernel/ptrace.c:144:
+                       ninsn_type = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#196: FILE: arch/score/kernel/ptrace.c:145:
+               } else {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#197: FILE: arch/score/kernel/ptrace.c:146:
+                       write_tsk_long(child, epc, SINGLESTEP32_INSN);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#198: FILE: arch/score/kernel/ptrace.c:147:
+                       ninsn_type = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#199: FILE: arch/score/kernel/ptrace.c:148:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#201: FILE: arch/score/kernel/ptrace.c:150:
+               if (ninsn_type == 0) {  /* 16bits */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#202: FILE: arch/score/kernel/ptrace.c:151:
+                       child->thread.insn1_type = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#202: FILE: arch/score/kernel/ptrace.c:151:
+                       child->thread.insn1_type = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#203: FILE: arch/score/kernel/ptrace.c:152:
+                       child->thread.addr1 = epc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#203: FILE: arch/score/kernel/ptrace.c:152:
+                       child->thread.addr1 = epc;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#204: FILE: arch/score/kernel/ptrace.c:153:
+                        /* the insn may have 32bit data */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#205: FILE: arch/score/kernel/ptrace.c:154:
+                       child->thread.insn1 = (short)epc_insn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#205: FILE: arch/score/kernel/ptrace.c:154:
+                       child->thread.insn1 = (short)epc_insn;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#206: FILE: arch/score/kernel/ptrace.c:155:
+               } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#206: FILE: arch/score/kernel/ptrace.c:155:
+               } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#206: FILE: arch/score/kernel/ptrace.c:155:
+               } else {
+                       child->thread.insn1_type = 1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#207: FILE: arch/score/kernel/ptrace.c:156:
+                       child->thread.insn1_type = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#207: FILE: arch/score/kernel/ptrace.c:156:
+                       child->thread.insn1_type = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#208: FILE: arch/score/kernel/ptrace.c:157:
+                       child->thread.addr1 = epc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#208: FILE: arch/score/kernel/ptrace.c:157:
+                       child->thread.addr1 = epc;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#209: FILE: arch/score/kernel/ptrace.c:158:
+                       child->thread.insn1 = epc_insn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#209: FILE: arch/score/kernel/ptrace.c:158:
+                       child->thread.insn1 = epc_insn;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#210: FILE: arch/score/kernel/ptrace.c:159:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#210: FILE: arch/score/kernel/ptrace.c:159:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#211: FILE: arch/score/kernel/ptrace.c:160:
+       } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#211: FILE: arch/score/kernel/ptrace.c:160:
+       } else {
[...]
+               read_tsk_long(child, epc, &epc_insn);

ERROR:CODE_INDENT: code indent should use tabs where possible
#212: FILE: arch/score/kernel/ptrace.c:161:
+               /* branch! have two target child->thread.ss_nextcnt=2 */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#213: FILE: arch/score/kernel/ptrace.c:162:
+               read_tsk_long(child, epc, &epc_insn);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#213: FILE: arch/score/kernel/ptrace.c:162:
+               read_tsk_long(child, epc, &epc_insn);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#214: FILE: arch/score/kernel/ptrace.c:163:
+               read_tsk_long(child, far_epc, &far_epc_insn);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#214: FILE: arch/score/kernel/ptrace.c:163:
+               read_tsk_long(child, far_epc, &far_epc_insn);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#215: FILE: arch/score/kernel/ptrace.c:164:
+               if (is_16bitinsn(epc_insn)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#215: FILE: arch/score/kernel/ptrace.c:164:
+               if (is_16bitinsn(epc_insn)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#215: FILE: arch/score/kernel/ptrace.c:164:
+               if (is_16bitinsn(epc_insn)) {
+                       write_tsk_short(child, epc, SINGLESTEP16_INSN);

ERROR:CODE_INDENT: code indent should use tabs where possible
#216: FILE: arch/score/kernel/ptrace.c:165:
+                       write_tsk_short(child, epc, SINGLESTEP16_INSN);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#216: FILE: arch/score/kernel/ptrace.c:165:
+                       write_tsk_short(child, epc, SINGLESTEP16_INSN);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#217: FILE: arch/score/kernel/ptrace.c:166:
+                       ninsn_type = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#217: FILE: arch/score/kernel/ptrace.c:166:
+                       ninsn_type = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#218: FILE: arch/score/kernel/ptrace.c:167:
+               } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#218: FILE: arch/score/kernel/ptrace.c:167:
+               } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#218: FILE: arch/score/kernel/ptrace.c:167:
+               } else {
+                       write_tsk_long(child, epc, SINGLESTEP32_INSN);

ERROR:CODE_INDENT: code indent should use tabs where possible
#219: FILE: arch/score/kernel/ptrace.c:168:
+                       write_tsk_long(child, epc, SINGLESTEP32_INSN);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#219: FILE: arch/score/kernel/ptrace.c:168:
+                       write_tsk_long(child, epc, SINGLESTEP32_INSN);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#220: FILE: arch/score/kernel/ptrace.c:169:
+                       ninsn_type = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#220: FILE: arch/score/kernel/ptrace.c:169:
+                       ninsn_type = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#221: FILE: arch/score/kernel/ptrace.c:170:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#221: FILE: arch/score/kernel/ptrace.c:170:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#223: FILE: arch/score/kernel/ptrace.c:172:
+               if (ninsn_type == 0) {  /* 16bits */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#223: FILE: arch/score/kernel/ptrace.c:172:
+               if (ninsn_type == 0) {  /* 16bits */$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#223: FILE: arch/score/kernel/ptrace.c:172:
+               if (ninsn_type == 0) {  /* 16bits */
+                       child->thread.insn1_type = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#224: FILE: arch/score/kernel/ptrace.c:173:
+                       child->thread.insn1_type = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#224: FILE: arch/score/kernel/ptrace.c:173:
+                       child->thread.insn1_type = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#225: FILE: arch/score/kernel/ptrace.c:174:
+                       child->thread.addr1 = epc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#225: FILE: arch/score/kernel/ptrace.c:174:
+                       child->thread.addr1 = epc;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#226: FILE: arch/score/kernel/ptrace.c:175:
+                        /* the insn may have 32bit data */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#227: FILE: arch/score/kernel/ptrace.c:176:
+                       child->thread.insn1 = (short)epc_insn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#227: FILE: arch/score/kernel/ptrace.c:176:
+                       child->thread.insn1 = (short)epc_insn;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#228: FILE: arch/score/kernel/ptrace.c:177:
+               } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#228: FILE: arch/score/kernel/ptrace.c:177:
+               } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#228: FILE: arch/score/kernel/ptrace.c:177:
+               } else {
+                       child->thread.insn1_type = 1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#229: FILE: arch/score/kernel/ptrace.c:178:
+                       child->thread.insn1_type = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#229: FILE: arch/score/kernel/ptrace.c:178:
+                       child->thread.insn1_type = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#230: FILE: arch/score/kernel/ptrace.c:179:
+                       child->thread.addr1 = epc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#230: FILE: arch/score/kernel/ptrace.c:179:
+                       child->thread.addr1 = epc;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#231: FILE: arch/score/kernel/ptrace.c:180:
+                       child->thread.insn1 = epc_insn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#231: FILE: arch/score/kernel/ptrace.c:180:
+                       child->thread.insn1 = epc_insn;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#232: FILE: arch/score/kernel/ptrace.c:181:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#232: FILE: arch/score/kernel/ptrace.c:181:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#234: FILE: arch/score/kernel/ptrace.c:183:
+               if (is_16bitinsn(far_epc_insn)) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#234: FILE: arch/score/kernel/ptrace.c:183:
+               if (is_16bitinsn(far_epc_insn)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#234: FILE: arch/score/kernel/ptrace.c:183:
+               if (is_16bitinsn(far_epc_insn)) {
+                       write_tsk_short(child, far_epc, 

ERROR:TRAILING_WHITESPACE: trailing whitespace
#235: FILE: arch/score/kernel/ptrace.c:184:
+                       write_tsk_short(child, far_epc, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#235: FILE: arch/score/kernel/ptrace.c:184:
+                       write_tsk_short(child, far_epc, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#235: FILE: arch/score/kernel/ptrace.c:184:
+                       write_tsk_short(child, far_epc, $

ERROR:CODE_INDENT: code indent should use tabs where possible
#237: FILE: arch/score/kernel/ptrace.c:185:
+                       ninsn_type = 0;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#237: FILE: arch/score/kernel/ptrace.c:185:
+                       write_tsk_short(child, far_epc, 
+                       ninsn_type = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#237: FILE: arch/score/kernel/ptrace.c:185:
+                       ninsn_type = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#238: FILE: arch/score/kernel/ptrace.c:186:
+               } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#238: FILE: arch/score/kernel/ptrace.c:186:
+               } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#238: FILE: arch/score/kernel/ptrace.c:186:
+               } else {
+                       write_tsk_long(child, far_epc, SINGLESTEP32_INSN);

ERROR:CODE_INDENT: code indent should use tabs where possible
#239: FILE: arch/score/kernel/ptrace.c:187:
+                       write_tsk_long(child, far_epc, SINGLESTEP32_INSN);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#239: FILE: arch/score/kernel/ptrace.c:187:
+                       write_tsk_long(child, far_epc, SINGLESTEP32_INSN);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#240: FILE: arch/score/kernel/ptrace.c:188:
+                       ninsn_type = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#240: FILE: arch/score/kernel/ptrace.c:188:
+                       ninsn_type = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#241: FILE: arch/score/kernel/ptrace.c:189:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#241: FILE: arch/score/kernel/ptrace.c:189:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#243: FILE: arch/score/kernel/ptrace.c:191:
+               if (ninsn_type == 0) {  /* 16bits */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#243: FILE: arch/score/kernel/ptrace.c:191:
+               if (ninsn_type == 0) {  /* 16bits */$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#243: FILE: arch/score/kernel/ptrace.c:191:
+               if (ninsn_type == 0) {  /* 16bits */
+                       child->thread.insn2_type = 0;

ERROR:CODE_INDENT: code indent should use tabs where possible
#244: FILE: arch/score/kernel/ptrace.c:192:
+                       child->thread.insn2_type = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#244: FILE: arch/score/kernel/ptrace.c:192:
+                       child->thread.insn2_type = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#245: FILE: arch/score/kernel/ptrace.c:193:
+                       child->thread.addr2 = far_epc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#245: FILE: arch/score/kernel/ptrace.c:193:
+                       child->thread.addr2 = far_epc;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#246: FILE: arch/score/kernel/ptrace.c:194:
+                        /* the insn may have 32bit data */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#247: FILE: arch/score/kernel/ptrace.c:195:
+                       child->thread.insn2 = (short)far_epc_insn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#247: FILE: arch/score/kernel/ptrace.c:195:
+                       child->thread.insn2 = (short)far_epc_insn;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#248: FILE: arch/score/kernel/ptrace.c:196:
+               } else {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#248: FILE: arch/score/kernel/ptrace.c:196:
+               } else {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#248: FILE: arch/score/kernel/ptrace.c:196:
+               } else {
+                       child->thread.insn2_type = 1;

ERROR:CODE_INDENT: code indent should use tabs where possible
#249: FILE: arch/score/kernel/ptrace.c:197:
+                       child->thread.insn2_type = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#249: FILE: arch/score/kernel/ptrace.c:197:
+                       child->thread.insn2_type = 1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#250: FILE: arch/score/kernel/ptrace.c:198:
+                       child->thread.addr2 = far_epc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#250: FILE: arch/score/kernel/ptrace.c:198:
+                       child->thread.addr2 = far_epc;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#251: FILE: arch/score/kernel/ptrace.c:199:
+                       child->thread.insn2 = far_epc_insn;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#251: FILE: arch/score/kernel/ptrace.c:199:
+                       child->thread.insn2 = far_epc_insn;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#252: FILE: arch/score/kernel/ptrace.c:200:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#252: FILE: arch/score/kernel/ptrace.c:200:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#253: FILE: arch/score/kernel/ptrace.c:201:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#258: FILE: arch/score/kernel/ptrace.c:206:
+       if (child->thread.insn1_type == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#258: FILE: arch/score/kernel/ptrace.c:206:
+       if (child->thread.insn1_type == 0)
+               write_tsk_short(child, child->thread.addr1,

ERROR:CODE_INDENT: code indent should use tabs where possible
#259: FILE: arch/score/kernel/ptrace.c:207:
+               write_tsk_short(child, child->thread.addr1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#259: FILE: arch/score/kernel/ptrace.c:207:
+               write_tsk_short(child, child->thread.addr1,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#260: FILE: arch/score/kernel/ptrace.c:208:
+                               child->thread.insn1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#260: FILE: arch/score/kernel/ptrace.c:208:
+                               child->thread.insn1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#262: FILE: arch/score/kernel/ptrace.c:210:
+       if (child->thread.insn1_type == 1)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#262: FILE: arch/score/kernel/ptrace.c:210:
+       if (child->thread.insn1_type == 1)
+               write_tsk_long(child, child->thread.addr1,

ERROR:CODE_INDENT: code indent should use tabs where possible
#263: FILE: arch/score/kernel/ptrace.c:211:
+               write_tsk_long(child, child->thread.addr1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#263: FILE: arch/score/kernel/ptrace.c:211:
+               write_tsk_long(child, child->thread.addr1,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#264: FILE: arch/score/kernel/ptrace.c:212:
+                               child->thread.insn1);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#264: FILE: arch/score/kernel/ptrace.c:212:
+               write_tsk_long(child, child->thread.addr1,
+                               child->thread.insn1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#264: FILE: arch/score/kernel/ptrace.c:212:
+                               child->thread.insn1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#266: FILE: arch/score/kernel/ptrace.c:214:
+       if (child->thread.ss_nextcnt == 2) {    /* branch */$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#266: FILE: arch/score/kernel/ptrace.c:214:
+       if (child->thread.ss_nextcnt == 2) {    /* branch */
+               if (child->thread.insn1_type == 0)

ERROR:CODE_INDENT: code indent should use tabs where possible
#267: FILE: arch/score/kernel/ptrace.c:215:
+               if (child->thread.insn1_type == 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#267: FILE: arch/score/kernel/ptrace.c:215:
+               if (child->thread.insn1_type == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#267: FILE: arch/score/kernel/ptrace.c:215:
+               if (child->thread.insn1_type == 0)
+                       write_tsk_short(child, child->thread.addr1,

ERROR:CODE_INDENT: code indent should use tabs where possible
#268: FILE: arch/score/kernel/ptrace.c:216:
+                       write_tsk_short(child, child->thread.addr1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#268: FILE: arch/score/kernel/ptrace.c:216:
+                       write_tsk_short(child, child->thread.addr1,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#269: FILE: arch/score/kernel/ptrace.c:217:
+                                       child->thread.insn1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#269: FILE: arch/score/kernel/ptrace.c:217:
+                                       child->thread.insn1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#270: FILE: arch/score/kernel/ptrace.c:218:
+               if (child->thread.insn1_type == 1)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#270: FILE: arch/score/kernel/ptrace.c:218:
+               if (child->thread.insn1_type == 1)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#270: FILE: arch/score/kernel/ptrace.c:218:
+               if (child->thread.insn1_type == 1)
+                       write_tsk_long(child, child->thread.addr1,

ERROR:CODE_INDENT: code indent should use tabs where possible
#271: FILE: arch/score/kernel/ptrace.c:219:
+                       write_tsk_long(child, child->thread.addr1,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#271: FILE: arch/score/kernel/ptrace.c:219:
+                       write_tsk_long(child, child->thread.addr1,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#272: FILE: arch/score/kernel/ptrace.c:220:
+                                       child->thread.insn1);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#272: FILE: arch/score/kernel/ptrace.c:220:
+                       write_tsk_long(child, child->thread.addr1,
+                                       child->thread.insn1);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#272: FILE: arch/score/kernel/ptrace.c:220:
+                                       child->thread.insn1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#273: FILE: arch/score/kernel/ptrace.c:221:
+               if (child->thread.insn2_type == 0)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#273: FILE: arch/score/kernel/ptrace.c:221:
+               if (child->thread.insn2_type == 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#273: FILE: arch/score/kernel/ptrace.c:221:
+               if (child->thread.insn2_type == 0)
+                       write_tsk_short(child, child->thread.addr2,

ERROR:CODE_INDENT: code indent should use tabs where possible
#274: FILE: arch/score/kernel/ptrace.c:222:
+                       write_tsk_short(child, child->thread.addr2,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#274: FILE: arch/score/kernel/ptrace.c:222:
+                       write_tsk_short(child, child->thread.addr2,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#275: FILE: arch/score/kernel/ptrace.c:223:
+                                       child->thread.insn2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#275: FILE: arch/score/kernel/ptrace.c:223:
+                                       child->thread.insn2);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#276: FILE: arch/score/kernel/ptrace.c:224:
+               if (child->thread.insn2_type == 1)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#276: FILE: arch/score/kernel/ptrace.c:224:
+               if (child->thread.insn2_type == 1)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#276: FILE: arch/score/kernel/ptrace.c:224:
+               if (child->thread.insn2_type == 1)
+                       write_tsk_long(child, child->thread.addr2,

ERROR:CODE_INDENT: code indent should use tabs where possible
#277: FILE: arch/score/kernel/ptrace.c:225:
+                       write_tsk_long(child, child->thread.addr2,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#277: FILE: arch/score/kernel/ptrace.c:225:
+                       write_tsk_long(child, child->thread.addr2,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#278: FILE: arch/score/kernel/ptrace.c:226:
+                                       child->thread.insn2);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#278: FILE: arch/score/kernel/ptrace.c:226:
+                       write_tsk_long(child, child->thread.addr2,
+                                       child->thread.insn2);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#278: FILE: arch/score/kernel/ptrace.c:226:
+                                       child->thread.insn2);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#279: FILE: arch/score/kernel/ptrace.c:227:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#281: FILE: arch/score/kernel/ptrace.c:229:
+       child->thread.single_step = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#282: FILE: arch/score/kernel/ptrace.c:230:
+       child->thread.ss_nextcnt = 0;$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#285: FILE: arch/score/kernel/ptrace.c:233:
+
+

ERROR:TRAILING_WHITESPACE: trailing whitespace
#289: FILE: arch/score/kernel/ptrace.c:237:
+arch_ptrace(struct task_struct *child, long request, long addr, long $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#292: FILE: arch/score/kernel/ptrace.c:239:
+       int ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#294: FILE: arch/score/kernel/ptrace.c:241:
+       if (request == PTRACE_TRACEME) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#294: FILE: arch/score/kernel/ptrace.c:241:
+       if (request == PTRACE_TRACEME) {
[...]
+               if (current->ptrace & PT_PTRACED)

ERROR:CODE_INDENT: code indent should use tabs where possible
#295: FILE: arch/score/kernel/ptrace.c:242:
+               /* are we already being traced? */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#296: FILE: arch/score/kernel/ptrace.c:243:
+               if (current->ptrace & PT_PTRACED)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#296: FILE: arch/score/kernel/ptrace.c:243:
+               if (current->ptrace & PT_PTRACED)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#296: FILE: arch/score/kernel/ptrace.c:243:
+               if (current->ptrace & PT_PTRACED)
+                       return -EPERM;

ERROR:CODE_INDENT: code indent should use tabs where possible
#297: FILE: arch/score/kernel/ptrace.c:244:
+                       return -EPERM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#297: FILE: arch/score/kernel/ptrace.c:244:
+                       return -EPERM;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#299: FILE: arch/score/kernel/ptrace.c:246:
+               /* set the ptrace bit in the process flags. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#300: FILE: arch/score/kernel/ptrace.c:247:
+               current->ptrace |= PT_PTRACED;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#300: FILE: arch/score/kernel/ptrace.c:247:
+               current->ptrace |= PT_PTRACED;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#301: FILE: arch/score/kernel/ptrace.c:248:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#301: FILE: arch/score/kernel/ptrace.c:248:
+               return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#302: FILE: arch/score/kernel/ptrace.c:249:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#304: FILE: arch/score/kernel/ptrace.c:251:
+       ret = -ESRCH;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#305: FILE: arch/score/kernel/ptrace.c:252:
+       if (!child)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#305: FILE: arch/score/kernel/ptrace.c:252:
+       if (!child)
+               return ret;

ERROR:CODE_INDENT: code indent should use tabs where possible
#306: FILE: arch/score/kernel/ptrace.c:253:
+               return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#306: FILE: arch/score/kernel/ptrace.c:253:
+               return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#308: FILE: arch/score/kernel/ptrace.c:255:
+       ret = -EPERM;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#310: FILE: arch/score/kernel/ptrace.c:257:
+       if (request == PTRACE_ATTACH) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#310: FILE: arch/score/kernel/ptrace.c:257:
+       if (request == PTRACE_ATTACH) {
+               ret = ptrace_attach(child);

ERROR:CODE_INDENT: code indent should use tabs where possible
#311: FILE: arch/score/kernel/ptrace.c:258:
+               ret = ptrace_attach(child);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#311: FILE: arch/score/kernel/ptrace.c:258:
+               ret = ptrace_attach(child);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#312: FILE: arch/score/kernel/ptrace.c:259:
+               return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#312: FILE: arch/score/kernel/ptrace.c:259:
+               return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#313: FILE: arch/score/kernel/ptrace.c:260:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#315: FILE: arch/score/kernel/ptrace.c:262:
+       ret = ptrace_check_attach(child, request == PTRACE_KILL);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#316: FILE: arch/score/kernel/ptrace.c:263:
+       if (ret < 0)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#316: FILE: arch/score/kernel/ptrace.c:263:
+       if (ret < 0)
+               return ret;

ERROR:CODE_INDENT: code indent should use tabs where possible
#317: FILE: arch/score/kernel/ptrace.c:264:
+               return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#317: FILE: arch/score/kernel/ptrace.c:264:
+               return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#319: FILE: arch/score/kernel/ptrace.c:266:
+       switch (request) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#320: FILE: arch/score/kernel/ptrace.c:267:
+       case PTRACE_PEEKTEXT: /* read word at location addr. */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#321: FILE: arch/score/kernel/ptrace.c:268:
+       case PTRACE_PEEKDATA: {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#322: FILE: arch/score/kernel/ptrace.c:269:
+               unsigned long tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#322: FILE: arch/score/kernel/ptrace.c:269:
+               unsigned long tmp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#323: FILE: arch/score/kernel/ptrace.c:270:
+               int copied;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#323: FILE: arch/score/kernel/ptrace.c:270:
+               int copied;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#325: FILE: arch/score/kernel/ptrace.c:272:
+               copied = access_process_vm(child, addr, &tmp, sizeof(tmp), $

ERROR:CODE_INDENT: code indent should use tabs where possible
#325: FILE: arch/score/kernel/ptrace.c:272:
+               copied = access_process_vm(child, addr, &tmp, sizeof(tmp), $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#325: FILE: arch/score/kernel/ptrace.c:272:
+               copied = access_process_vm(child, addr, &tmp, sizeof(tmp), $

ERROR:CODE_INDENT: code indent should use tabs where possible
#327: FILE: arch/score/kernel/ptrace.c:273:
+               ret = -EIO;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#327: FILE: arch/score/kernel/ptrace.c:273:
+               copied = access_process_vm(child, addr, &tmp, sizeof(tmp), 
+               ret = -EIO;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#327: FILE: arch/score/kernel/ptrace.c:273:
+               ret = -EIO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#328: FILE: arch/score/kernel/ptrace.c:274:
+               if (copied != sizeof(tmp))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#328: FILE: arch/score/kernel/ptrace.c:274:
+               if (copied != sizeof(tmp))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#328: FILE: arch/score/kernel/ptrace.c:274:
+               if (copied != sizeof(tmp))
+                       break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#329: FILE: arch/score/kernel/ptrace.c:275:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#329: FILE: arch/score/kernel/ptrace.c:275:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#331: FILE: arch/score/kernel/ptrace.c:277:
+               ret = put_user(tmp, (unsigned long *) data);$

CHECK:SPACING: No space is necessary after a cast
#331: FILE: arch/score/kernel/ptrace.c:277:
+               ret = put_user(tmp, (unsigned long *) data);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#331: FILE: arch/score/kernel/ptrace.c:277:
+               ret = put_user(tmp, (unsigned long *) data);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#332: FILE: arch/score/kernel/ptrace.c:278:
+               return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#332: FILE: arch/score/kernel/ptrace.c:278:
+               return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#333: FILE: arch/score/kernel/ptrace.c:279:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#336: FILE: arch/score/kernel/ptrace.c:282:
+       case PTRACE_PEEKUSR: {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#337: FILE: arch/score/kernel/ptrace.c:283:
+               struct pt_regs *regs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#337: FILE: arch/score/kernel/ptrace.c:283:
+               struct pt_regs *regs;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#338: FILE: arch/score/kernel/ptrace.c:284:
+               unsigned long tmp;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#338: FILE: arch/score/kernel/ptrace.c:284:
+               unsigned long tmp;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#340: FILE: arch/score/kernel/ptrace.c:286:
+               regs = task_pt_regs(child);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#340: FILE: arch/score/kernel/ptrace.c:286:
+               regs = task_pt_regs(child);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#342: FILE: arch/score/kernel/ptrace.c:288:
+               tmp = 0;  /* Default return value. */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#342: FILE: arch/score/kernel/ptrace.c:288:
+               tmp = 0;  /* Default return value. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#343: FILE: arch/score/kernel/ptrace.c:289:
+               switch (addr) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#343: FILE: arch/score/kernel/ptrace.c:289:
+               switch (addr) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#344: FILE: arch/score/kernel/ptrace.c:290:
+               case 0 ... 31:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#344: FILE: arch/score/kernel/ptrace.c:290:
+               case 0 ... 31:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#345: FILE: arch/score/kernel/ptrace.c:291:
+                       tmp = regs->regs[addr];$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#345: FILE: arch/score/kernel/ptrace.c:291:
+                       tmp = regs->regs[addr];$

ERROR:CODE_INDENT: code indent should use tabs where possible
#346: FILE: arch/score/kernel/ptrace.c:292:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#346: FILE: arch/score/kernel/ptrace.c:292:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#347: FILE: arch/score/kernel/ptrace.c:293:
+               case PC:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#347: FILE: arch/score/kernel/ptrace.c:293:
+               case PC:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#348: FILE: arch/score/kernel/ptrace.c:294:
+                       tmp = regs->cp0_epc;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#348: FILE: arch/score/kernel/ptrace.c:294:
+                       tmp = regs->cp0_epc;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#349: FILE: arch/score/kernel/ptrace.c:295:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#349: FILE: arch/score/kernel/ptrace.c:295:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#350: FILE: arch/score/kernel/ptrace.c:296:
+               case ECR:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#350: FILE: arch/score/kernel/ptrace.c:296:
+               case ECR:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#351: FILE: arch/score/kernel/ptrace.c:297:
+                       tmp = regs->cp0_ecr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#351: FILE: arch/score/kernel/ptrace.c:297:
+                       tmp = regs->cp0_ecr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#352: FILE: arch/score/kernel/ptrace.c:298:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#352: FILE: arch/score/kernel/ptrace.c:298:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#353: FILE: arch/score/kernel/ptrace.c:299:
+               case EMA:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#353: FILE: arch/score/kernel/ptrace.c:299:
+               case EMA:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#354: FILE: arch/score/kernel/ptrace.c:300:
+                       tmp = regs->cp0_ema;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#354: FILE: arch/score/kernel/ptrace.c:300:
+                       tmp = regs->cp0_ema;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#355: FILE: arch/score/kernel/ptrace.c:301:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#355: FILE: arch/score/kernel/ptrace.c:301:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#356: FILE: arch/score/kernel/ptrace.c:302:
+               case CEH:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#356: FILE: arch/score/kernel/ptrace.c:302:
+               case CEH:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#357: FILE: arch/score/kernel/ptrace.c:303:
+                       tmp = regs->ceh;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#357: FILE: arch/score/kernel/ptrace.c:303:
+                       tmp = regs->ceh;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#358: FILE: arch/score/kernel/ptrace.c:304:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#358: FILE: arch/score/kernel/ptrace.c:304:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#359: FILE: arch/score/kernel/ptrace.c:305:
+               case CEL:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#359: FILE: arch/score/kernel/ptrace.c:305:
+               case CEL:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#360: FILE: arch/score/kernel/ptrace.c:306:
+                       tmp = regs->cel;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#360: FILE: arch/score/kernel/ptrace.c:306:
+                       tmp = regs->cel;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#361: FILE: arch/score/kernel/ptrace.c:307:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#361: FILE: arch/score/kernel/ptrace.c:307:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#362: FILE: arch/score/kernel/ptrace.c:308:
+               case CONDITION:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#362: FILE: arch/score/kernel/ptrace.c:308:
+               case CONDITION:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#363: FILE: arch/score/kernel/ptrace.c:309:
+                       tmp = regs->cp0_condition;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#363: FILE: arch/score/kernel/ptrace.c:309:
+                       tmp = regs->cp0_condition;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#364: FILE: arch/score/kernel/ptrace.c:310:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#364: FILE: arch/score/kernel/ptrace.c:310:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#365: FILE: arch/score/kernel/ptrace.c:311:
+               case PSR:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#365: FILE: arch/score/kernel/ptrace.c:311:
+               case PSR:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#366: FILE: arch/score/kernel/ptrace.c:312:
+                       tmp = regs->cp0_psr;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#366: FILE: arch/score/kernel/ptrace.c:312:
+                       tmp = regs->cp0_psr;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#367: FILE: arch/score/kernel/ptrace.c:313:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#367: FILE: arch/score/kernel/ptrace.c:313:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#368: FILE: arch/score/kernel/ptrace.c:314:
+               case COUNTER:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#368: FILE: arch/score/kernel/ptrace.c:314:
+               case COUNTER:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#369: FILE: arch/score/kernel/ptrace.c:315:
+                       tmp = regs->sr0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#369: FILE: arch/score/kernel/ptrace.c:315:
+                       tmp = regs->sr0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#370: FILE: arch/score/kernel/ptrace.c:316:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#370: FILE: arch/score/kernel/ptrace.c:316:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#371: FILE: arch/score/kernel/ptrace.c:317:
+               case LDCR:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#371: FILE: arch/score/kernel/ptrace.c:317:
+               case LDCR:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#372: FILE: arch/score/kernel/ptrace.c:318:
+                       tmp = regs->sr1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#372: FILE: arch/score/kernel/ptrace.c:318:
+                       tmp = regs->sr1;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#373: FILE: arch/score/kernel/ptrace.c:319:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#373: FILE: arch/score/kernel/ptrace.c:319:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#374: FILE: arch/score/kernel/ptrace.c:320:
+               case STCR:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#374: FILE: arch/score/kernel/ptrace.c:320:
+               case STCR:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#375: FILE: arch/score/kernel/ptrace.c:321:
+                       tmp = regs->sr2;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#375: FILE: arch/score/kernel/ptrace.c:321:
+                       tmp = regs->sr2;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#376: FILE: arch/score/kernel/ptrace.c:322:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#376: FILE: arch/score/kernel/ptrace.c:322:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#377: FILE: arch/score/kernel/ptrace.c:323:
+               default:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#378: FILE: arch/score/kernel/ptrace.c:324:
+                       tmp = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#378: FILE: arch/score/kernel/ptrace.c:324:
+                       tmp = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#379: FILE: arch/score/kernel/ptrace.c:325:
+                       return -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#379: FILE: arch/score/kernel/ptrace.c:325:
+                       return -EIO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#380: FILE: arch/score/kernel/ptrace.c:326:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#380: FILE: arch/score/kernel/ptrace.c:326:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#382: FILE: arch/score/kernel/ptrace.c:328:
+               ret = put_user(tmp, (unsigned long *) data);$

CHECK:SPACING: No space is necessary after a cast
#382: FILE: arch/score/kernel/ptrace.c:328:
+               ret = put_user(tmp, (unsigned long *) data);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#382: FILE: arch/score/kernel/ptrace.c:328:
+               ret = put_user(tmp, (unsigned long *) data);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#383: FILE: arch/score/kernel/ptrace.c:329:
+               return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#383: FILE: arch/score/kernel/ptrace.c:329:
+               return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#384: FILE: arch/score/kernel/ptrace.c:330:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#386: FILE: arch/score/kernel/ptrace.c:332:
+       case PTRACE_POKETEXT: /* write the word at location addr. */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#387: FILE: arch/score/kernel/ptrace.c:333:
+       case PTRACE_POKEDATA:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#388: FILE: arch/score/kernel/ptrace.c:334:
+               ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#388: FILE: arch/score/kernel/ptrace.c:334:
+               ret = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#389: FILE: arch/score/kernel/ptrace.c:335:
+               if (access_process_vm(child, addr, &data, sizeof(data), 1)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#389: FILE: arch/score/kernel/ptrace.c:335:
+               if (access_process_vm(child, addr, &data, sizeof(data), 1)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#389: FILE: arch/score/kernel/ptrace.c:335:
+               if (access_process_vm(child, addr, &data, sizeof(data), 1)
[...]
+                       break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#390: FILE: arch/score/kernel/ptrace.c:336:
+                       == sizeof(data))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#390: FILE: arch/score/kernel/ptrace.c:336:
+                       == sizeof(data))$

ERROR:CODE_INDENT: code indent should use tabs where possible
#391: FILE: arch/score/kernel/ptrace.c:337:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#391: FILE: arch/score/kernel/ptrace.c:337:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#392: FILE: arch/score/kernel/ptrace.c:338:
+               ret = -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#392: FILE: arch/score/kernel/ptrace.c:338:
+               ret = -EIO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#393: FILE: arch/score/kernel/ptrace.c:339:
+               return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#393: FILE: arch/score/kernel/ptrace.c:339:
+               return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#395: FILE: arch/score/kernel/ptrace.c:341:
+       case PTRACE_POKEUSR: {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#396: FILE: arch/score/kernel/ptrace.c:342:
+               struct pt_regs *regs;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#396: FILE: arch/score/kernel/ptrace.c:342:
+               struct pt_regs *regs;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#397: FILE: arch/score/kernel/ptrace.c:343:
+               ret = 0;$

WARNING:LINE_SPACING: Missing a blank line after declarations
#397: FILE: arch/score/kernel/ptrace.c:343:
+               struct pt_regs *regs;
+               ret = 0;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#397: FILE: arch/score/kernel/ptrace.c:343:
+               ret = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#398: FILE: arch/score/kernel/ptrace.c:344:
+               regs = task_pt_regs(child);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#398: FILE: arch/score/kernel/ptrace.c:344:
+               regs = task_pt_regs(child);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#400: FILE: arch/score/kernel/ptrace.c:346:
+               switch (addr) {$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#400: FILE: arch/score/kernel/ptrace.c:346:
+               switch (addr) {$

ERROR:CODE_INDENT: code indent should use tabs where possible
#401: FILE: arch/score/kernel/ptrace.c:347:
+               case 0 ... 31:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#401: FILE: arch/score/kernel/ptrace.c:347:
+               case 0 ... 31:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#402: FILE: arch/score/kernel/ptrace.c:348:
+                       regs->regs[addr] = data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#402: FILE: arch/score/kernel/ptrace.c:348:
+                       regs->regs[addr] = data;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#403: FILE: arch/score/kernel/ptrace.c:349:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#403: FILE: arch/score/kernel/ptrace.c:349:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#404: FILE: arch/score/kernel/ptrace.c:350:
+               case PC:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#404: FILE: arch/score/kernel/ptrace.c:350:
+               case PC:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#405: FILE: arch/score/kernel/ptrace.c:351:
+                       regs->cp0_epc = data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#405: FILE: arch/score/kernel/ptrace.c:351:
+                       regs->cp0_epc = data;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#406: FILE: arch/score/kernel/ptrace.c:352:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#406: FILE: arch/score/kernel/ptrace.c:352:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#407: FILE: arch/score/kernel/ptrace.c:353:
+               case CEH:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#407: FILE: arch/score/kernel/ptrace.c:353:
+               case CEH:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#408: FILE: arch/score/kernel/ptrace.c:354:
+                       regs->ceh = data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#408: FILE: arch/score/kernel/ptrace.c:354:
+                       regs->ceh = data;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#409: FILE: arch/score/kernel/ptrace.c:355:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#409: FILE: arch/score/kernel/ptrace.c:355:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#410: FILE: arch/score/kernel/ptrace.c:356:
+               case CEL:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#410: FILE: arch/score/kernel/ptrace.c:356:
+               case CEL:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#411: FILE: arch/score/kernel/ptrace.c:357:
+                       regs->cel = data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#411: FILE: arch/score/kernel/ptrace.c:357:
+                       regs->cel = data;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#412: FILE: arch/score/kernel/ptrace.c:358:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#412: FILE: arch/score/kernel/ptrace.c:358:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#413: FILE: arch/score/kernel/ptrace.c:359:
+               case CONDITION:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#413: FILE: arch/score/kernel/ptrace.c:359:
+               case CONDITION:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#414: FILE: arch/score/kernel/ptrace.c:360:
+                       regs->cp0_condition = data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#414: FILE: arch/score/kernel/ptrace.c:360:
+                       regs->cp0_condition = data;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#415: FILE: arch/score/kernel/ptrace.c:361:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#415: FILE: arch/score/kernel/ptrace.c:361:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#416: FILE: arch/score/kernel/ptrace.c:362:
+               case PSR:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#416: FILE: arch/score/kernel/ptrace.c:362:
+               case PSR:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#417: FILE: arch/score/kernel/ptrace.c:363:
+               case COUNTER:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#417: FILE: arch/score/kernel/ptrace.c:363:
+               case COUNTER:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#418: FILE: arch/score/kernel/ptrace.c:364:
+               case STCR:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#418: FILE: arch/score/kernel/ptrace.c:364:
+               case STCR:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#419: FILE: arch/score/kernel/ptrace.c:365:
+               case LDCR:$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#419: FILE: arch/score/kernel/ptrace.c:365:
+               case LDCR:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#420: FILE: arch/score/kernel/ptrace.c:366:
+                       break; /* user can't write the reg */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#420: FILE: arch/score/kernel/ptrace.c:366:
+                       break; /* user can't write the reg */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#421: FILE: arch/score/kernel/ptrace.c:367:
+               default:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#422: FILE: arch/score/kernel/ptrace.c:368:
+                       /* The rest are not allowed. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#423: FILE: arch/score/kernel/ptrace.c:369:
+                       ret = -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#423: FILE: arch/score/kernel/ptrace.c:369:
+                       ret = -EIO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#424: FILE: arch/score/kernel/ptrace.c:370:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#424: FILE: arch/score/kernel/ptrace.c:370:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#425: FILE: arch/score/kernel/ptrace.c:371:
+               }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#425: FILE: arch/score/kernel/ptrace.c:371:
+               }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#426: FILE: arch/score/kernel/ptrace.c:372:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#426: FILE: arch/score/kernel/ptrace.c:372:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#427: FILE: arch/score/kernel/ptrace.c:373:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#429: FILE: arch/score/kernel/ptrace.c:375:
+       case PTRACE_SYSCALL: /* continue and stop at next$

ERROR:CODE_INDENT: code indent should use tabs where possible
#430: FILE: arch/score/kernel/ptrace.c:376:
+                               (return from) syscall. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#430: FILE: arch/score/kernel/ptrace.c:376:
+       case PTRACE_SYSCALL: /* continue and stop at next
+                               (return from) syscall. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#430: FILE: arch/score/kernel/ptrace.c:376:
+                               (return from) syscall. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#431: FILE: arch/score/kernel/ptrace.c:377:
+       case PTRACE_CONT: { /* restart after signal. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#432: FILE: arch/score/kernel/ptrace.c:378:
+               ret = -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#432: FILE: arch/score/kernel/ptrace.c:378:
+               ret = -EIO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#433: FILE: arch/score/kernel/ptrace.c:379:
+               if (!valid_signal(data))$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#433: FILE: arch/score/kernel/ptrace.c:379:
+               if (!valid_signal(data))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#433: FILE: arch/score/kernel/ptrace.c:379:
+               if (!valid_signal(data))
+                       break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#434: FILE: arch/score/kernel/ptrace.c:380:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#434: FILE: arch/score/kernel/ptrace.c:380:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#435: FILE: arch/score/kernel/ptrace.c:381:
+               if (request == PTRACE_SYSCALL)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#435: FILE: arch/score/kernel/ptrace.c:381:
+               if (request == PTRACE_SYSCALL)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#435: FILE: arch/score/kernel/ptrace.c:381:
+               if (request == PTRACE_SYSCALL)
+                       set_tsk_thread_flag(child, TIF_SYSCALL_TRACE);

ERROR:CODE_INDENT: code indent should use tabs where possible
#436: FILE: arch/score/kernel/ptrace.c:382:
+                       set_tsk_thread_flag(child, TIF_SYSCALL_TRACE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#436: FILE: arch/score/kernel/ptrace.c:382:
+                       set_tsk_thread_flag(child, TIF_SYSCALL_TRACE);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#437: FILE: arch/score/kernel/ptrace.c:383:
+               else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#437: FILE: arch/score/kernel/ptrace.c:383:
+               else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#437: FILE: arch/score/kernel/ptrace.c:383:
+               else
+                       clear_tsk_thread_flag(child, TIF_SYSCALL_TRACE);

ERROR:CODE_INDENT: code indent should use tabs where possible
#438: FILE: arch/score/kernel/ptrace.c:384:
+                       clear_tsk_thread_flag(child, TIF_SYSCALL_TRACE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#438: FILE: arch/score/kernel/ptrace.c:384:
+                       clear_tsk_thread_flag(child, TIF_SYSCALL_TRACE);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#440: FILE: arch/score/kernel/ptrace.c:386:
+               child->exit_code = data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#440: FILE: arch/score/kernel/ptrace.c:386:
+               child->exit_code = data;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#441: FILE: arch/score/kernel/ptrace.c:387:
+               wake_up_process(child);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#441: FILE: arch/score/kernel/ptrace.c:387:
+               wake_up_process(child);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#442: FILE: arch/score/kernel/ptrace.c:388:
+               ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#442: FILE: arch/score/kernel/ptrace.c:388:
+               ret = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#443: FILE: arch/score/kernel/ptrace.c:389:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#443: FILE: arch/score/kernel/ptrace.c:389:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#444: FILE: arch/score/kernel/ptrace.c:390:
+       }$

ERROR:CODE_INDENT: code indent should use tabs where possible
#447: FILE: arch/score/kernel/ptrace.c:393:
+        * make the child exit.  Best I can do is send it a sigkill.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#448: FILE: arch/score/kernel/ptrace.c:394:
+        * perhaps it should be put in the status that it wants to$

ERROR:CODE_INDENT: code indent should use tabs where possible
#449: FILE: arch/score/kernel/ptrace.c:395:
+        * exit.$

ERROR:CODE_INDENT: code indent should use tabs where possible
#450: FILE: arch/score/kernel/ptrace.c:396:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#451: FILE: arch/score/kernel/ptrace.c:397:
+       case PTRACE_KILL:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#452: FILE: arch/score/kernel/ptrace.c:398:
+               ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#452: FILE: arch/score/kernel/ptrace.c:398:
+               ret = 0;$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#453: FILE: arch/score/kernel/ptrace.c:399:
+               if (child->state == EXIT_ZOMBIE)        /* already dead. $

ERROR:CODE_INDENT: code indent should use tabs where possible
#453: FILE: arch/score/kernel/ptrace.c:399:
+               if (child->state == EXIT_ZOMBIE)        /* already dead. $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#453: FILE: arch/score/kernel/ptrace.c:399:
+               if (child->state == EXIT_ZOMBIE)        /* already dead. $

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 0)
#453: FILE: arch/score/kernel/ptrace.c:399:
+               if (child->state == EXIT_ZOMBIE)        /* already dead. 
*/

ERROR:CODE_INDENT: code indent should use tabs where possible
#455: FILE: arch/score/kernel/ptrace.c:400:
+                       break;$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#455: FILE: arch/score/kernel/ptrace.c:400:
+               if (child->state == EXIT_ZOMBIE)        /* already dead. 
+                       break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#456: FILE: arch/score/kernel/ptrace.c:401:
+               child->exit_code = SIGKILL;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#457: FILE: arch/score/kernel/ptrace.c:402:
+               clear_single_step(child);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#458: FILE: arch/score/kernel/ptrace.c:403:
+               wake_up_process(child);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#459: FILE: arch/score/kernel/ptrace.c:404:
+               break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#462: FILE: arch/score/kernel/ptrace.c:407:
+               ret = -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#462: FILE: arch/score/kernel/ptrace.c:407:
+               ret = -EIO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#463: FILE: arch/score/kernel/ptrace.c:408:
+               if ((unsigned long) data > _NSIG)$

CHECK:SPACING: No space is necessary after a cast
#463: FILE: arch/score/kernel/ptrace.c:408:
+               if ((unsigned long) data > _NSIG)

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#463: FILE: arch/score/kernel/ptrace.c:408:
+               if ((unsigned long) data > _NSIG)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#463: FILE: arch/score/kernel/ptrace.c:408:
+               if ((unsigned long) data > _NSIG)
+                       break;

ERROR:CODE_INDENT: code indent should use tabs where possible
#464: FILE: arch/score/kernel/ptrace.c:409:
+                       break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#464: FILE: arch/score/kernel/ptrace.c:409:
+                       break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#465: FILE: arch/score/kernel/ptrace.c:410:
+               clear_tsk_thread_flag(child, TIF_SYSCALL_TRACE);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#465: FILE: arch/score/kernel/ptrace.c:410:
+               clear_tsk_thread_flag(child, TIF_SYSCALL_TRACE);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#466: FILE: arch/score/kernel/ptrace.c:411:
+               set_single_step(child);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#466: FILE: arch/score/kernel/ptrace.c:411:
+               set_single_step(child);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#467: FILE: arch/score/kernel/ptrace.c:412:
+               child->exit_code = data;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#467: FILE: arch/score/kernel/ptrace.c:412:
+               child->exit_code = data;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#468: FILE: arch/score/kernel/ptrace.c:413:
+               /* give it a chance to run. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#469: FILE: arch/score/kernel/ptrace.c:414:
+               wake_up_process(child);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#469: FILE: arch/score/kernel/ptrace.c:414:
+               wake_up_process(child);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#470: FILE: arch/score/kernel/ptrace.c:415:
+               ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#470: FILE: arch/score/kernel/ptrace.c:415:
+               ret = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#471: FILE: arch/score/kernel/ptrace.c:416:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#471: FILE: arch/score/kernel/ptrace.c:416:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#472: FILE: arch/score/kernel/ptrace.c:417:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#474: FILE: arch/score/kernel/ptrace.c:419:
+       case PTRACE_DETACH: /* detach a process that was attached. */$

ERROR:CODE_INDENT: code indent should use tabs where possible
#475: FILE: arch/score/kernel/ptrace.c:420:
+               ret = ptrace_detach(child, data);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#475: FILE: arch/score/kernel/ptrace.c:420:
+               ret = ptrace_detach(child, data);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#476: FILE: arch/score/kernel/ptrace.c:421:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#476: FILE: arch/score/kernel/ptrace.c:421:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#478: FILE: arch/score/kernel/ptrace.c:423:
+       case PTRACE_SETOPTIONS:$

ERROR:CODE_INDENT: code indent should use tabs where possible
#479: FILE: arch/score/kernel/ptrace.c:424:
+               if (data & PTRACE_O_TRACESYSGOOD)$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#479: FILE: arch/score/kernel/ptrace.c:424:
+               if (data & PTRACE_O_TRACESYSGOOD)$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#479: FILE: arch/score/kernel/ptrace.c:424:
+               if (data & PTRACE_O_TRACESYSGOOD)
+                       child->ptrace |= PT_TRACESYSGOOD;

ERROR:CODE_INDENT: code indent should use tabs where possible
#480: FILE: arch/score/kernel/ptrace.c:425:
+                       child->ptrace |= PT_TRACESYSGOOD;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#480: FILE: arch/score/kernel/ptrace.c:425:
+                       child->ptrace |= PT_TRACESYSGOOD;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#481: FILE: arch/score/kernel/ptrace.c:426:
+               else$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#481: FILE: arch/score/kernel/ptrace.c:426:
+               else$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (15, 23)
#481: FILE: arch/score/kernel/ptrace.c:426:
+               else
+                       child->ptrace &= ~PT_TRACESYSGOOD;

ERROR:CODE_INDENT: code indent should use tabs where possible
#482: FILE: arch/score/kernel/ptrace.c:427:
+                       child->ptrace &= ~PT_TRACESYSGOOD;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#482: FILE: arch/score/kernel/ptrace.c:427:
+                       child->ptrace &= ~PT_TRACESYSGOOD;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#483: FILE: arch/score/kernel/ptrace.c:428:
+               ret = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#483: FILE: arch/score/kernel/ptrace.c:428:
+               ret = 0;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#484: FILE: arch/score/kernel/ptrace.c:429:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#484: FILE: arch/score/kernel/ptrace.c:429:
+               break;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#487: FILE: arch/score/kernel/ptrace.c:432:
+               ret = -EIO;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#487: FILE: arch/score/kernel/ptrace.c:432:
+               ret = -EIO;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#488: FILE: arch/score/kernel/ptrace.c:433:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#488: FILE: arch/score/kernel/ptrace.c:433:
+               break;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#489: FILE: arch/score/kernel/ptrace.c:434:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#491: FILE: arch/score/kernel/ptrace.c:436:
+       return ret;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#500: FILE: arch/score/kernel/ptrace.c:445:
+       if (!(current->ptrace & PT_PTRACED))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#500: FILE: arch/score/kernel/ptrace.c:445:
+       if (!(current->ptrace & PT_PTRACED))
+               return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#501: FILE: arch/score/kernel/ptrace.c:446:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#501: FILE: arch/score/kernel/ptrace.c:446:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#503: FILE: arch/score/kernel/ptrace.c:448:
+       if (!test_thread_flag(TIF_SYSCALL_TRACE))$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#503: FILE: arch/score/kernel/ptrace.c:448:
+       if (!test_thread_flag(TIF_SYSCALL_TRACE))
+               return;

ERROR:CODE_INDENT: code indent should use tabs where possible
#504: FILE: arch/score/kernel/ptrace.c:449:
+               return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#504: FILE: arch/score/kernel/ptrace.c:449:
+               return;$

ERROR:CODE_INDENT: code indent should use tabs where possible
#507: FILE: arch/score/kernel/ptrace.c:452:
+          between a syscall stop and SIGTRAP delivery. */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#507: FILE: arch/score/kernel/ptrace.c:452:
+       /* The 0x80 provides a way for the tracing parent to distinguish
+          between a syscall stop and SIGTRAP delivery. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#507: FILE: arch/score/kernel/ptrace.c:452:
+          between a syscall stop and SIGTRAP delivery. */

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#508: FILE: arch/score/kernel/ptrace.c:453:
+       ptrace_notify(SIGTRAP | ((current->ptrace & PT_TRACESYSGOOD) ?$

ERROR:CODE_INDENT: code indent should use tabs where possible
#509: FILE: arch/score/kernel/ptrace.c:454:
+                       0x80 : 0));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#509: FILE: arch/score/kernel/ptrace.c:454:
+                       0x80 : 0));$

ERROR:CODE_INDENT: code indent should use tabs where possible
#512: FILE: arch/score/kernel/ptrace.c:457:
+        * this isn't the same as continuing with a signal, but it will do$

ERROR:CODE_INDENT: code indent should use tabs where possible
#513: FILE: arch/score/kernel/ptrace.c:458:
+        * for normal use.  strace only continues with a signal if the$

ERROR:CODE_INDENT: code indent should use tabs where possible
#514: FILE: arch/score/kernel/ptrace.c:459:
+        * stopping signal is not SIGTRAP.  -brl$

ERROR:CODE_INDENT: code indent should use tabs where possible
#515: FILE: arch/score/kernel/ptrace.c:460:
+        */$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#516: FILE: arch/score/kernel/ptrace.c:461:
+       if (current->exit_code) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#516: FILE: arch/score/kernel/ptrace.c:461:
+       if (current->exit_code) {
+               send_sig(current->exit_code, current, 1);

ERROR:CODE_INDENT: code indent should use tabs where possible
#517: FILE: arch/score/kernel/ptrace.c:462:
+               send_sig(current->exit_code, current, 1);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#517: FILE: arch/score/kernel/ptrace.c:462:
+               send_sig(current->exit_code, current, 1);$

ERROR:CODE_INDENT: code indent should use tabs where possible
#518: FILE: arch/score/kernel/ptrace.c:463:
+               current->exit_code = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#518: FILE: arch/score/kernel/ptrace.c:463:
+               current->exit_code = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#519: FILE: arch/score/kernel/ptrace.c:464:
+       }$

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#527: FILE: arch/score/kernel/setup.c:1:
+/*

WARNING:EMBEDDED_FILENAME: It's generally not useful to have the filename in the file
#528: FILE: arch/score/kernel/setup.c:2:
+ * arch/score/kernel/setup.c

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#549: FILE: arch/score/kernel/setup.c:23:
+ * 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#568: FILE: arch/score/kernel/setup.c:42:
+       unsigned long reserved_end, bootmap_size;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#569: FILE: arch/score/kernel/setup.c:43:
+       unsigned long size = initrd_end - initrd_start;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#571: FILE: arch/score/kernel/setup.c:45:
+       reserved_end = (unsigned long)_end;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#573: FILE: arch/score/kernel/setup.c:47:
+       min_low_pfn = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#574: FILE: arch/score/kernel/setup.c:48:
+       max_low_pfn = MEM_SIZE / PAGE_SIZE;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#577: FILE: arch/score/kernel/setup.c:51:
+       bootmap_size = init_bootmem_node(NODE_DATA(0), reserved_end,$

ERROR:CODE_INDENT: code indent should use tabs where possible
#578: FILE: arch/score/kernel/setup.c:52:
+                                        min_low_pfn, max_low_pfn);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#578: FILE: arch/score/kernel/setup.c:52:
+                                        min_low_pfn, max_low_pfn);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#579: FILE: arch/score/kernel/setup.c:53:
+       add_active_range(0, min_low_pfn, max_low_pfn);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#581: FILE: arch/score/kernel/setup.c:55:
+       free_bootmem(PFN_PHYS(reserved_end),$

ERROR:CODE_INDENT: code indent should use tabs where possible
#582: FILE: arch/score/kernel/setup.c:56:
+                    (max_low_pfn - reserved_end) << PAGE_SHIFT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#582: FILE: arch/score/kernel/setup.c:56:
+                    (max_low_pfn - reserved_end) << PAGE_SHIFT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#583: FILE: arch/score/kernel/setup.c:57:
+       memory_present(0, reserved_end, max_low_pfn);$

ERROR:TRAILING_WHITESPACE: trailing whitespace
#586: FILE: arch/score/kernel/setup.c:60:
+       reserve_bootmem(PFN_PHYS(reserved_end), bootmap_size, $

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#586: FILE: arch/score/kernel/setup.c:60:
+       reserve_bootmem(PFN_PHYS(reserved_end), bootmap_size, $

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#588: FILE: arch/score/kernel/setup.c:61:
+       reserve_bootmem(PFN_PHYS(reserved_end), bootmap_size, 
+

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#589: FILE: arch/score/kernel/setup.c:62:
+       if (size == 0) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#589: FILE: arch/score/kernel/setup.c:62:
+       if (size == 0) {
+               printk(KERN_INFO "Initrd not found or empty");

ERROR:CODE_INDENT: code indent should use tabs where possible
#590: FILE: arch/score/kernel/setup.c:63:
+               printk(KERN_INFO "Initrd not found or empty");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#590: FILE: arch/score/kernel/setup.c:63:
+               printk(KERN_INFO "Initrd not found or empty");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#590: FILE: arch/score/kernel/setup.c:63:
+               printk(KERN_INFO "Initrd not found or empty");

ERROR:CODE_INDENT: code indent should use tabs where possible
#591: FILE: arch/score/kernel/setup.c:64:
+               goto disable;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#591: FILE: arch/score/kernel/setup.c:64:
+               goto disable;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#592: FILE: arch/score/kernel/setup.c:65:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#594: FILE: arch/score/kernel/setup.c:67:
+       if (__pa(initrd_end) > PFN_PHYS(max_low_pfn)) {$

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (7, 15)
#594: FILE: arch/score/kernel/setup.c:67:
+       if (__pa(initrd_end) > PFN_PHYS(max_low_pfn)) {
+               printk(KERN_ERR "Initrd extends beyond end of memory");

ERROR:CODE_INDENT: code indent should use tabs where possible
#595: FILE: arch/score/kernel/setup.c:68:
+               printk(KERN_ERR "Initrd extends beyond end of memory");$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#595: FILE: arch/score/kernel/setup.c:68:
+               printk(KERN_ERR "Initrd extends beyond end of memory");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#595: FILE: arch/score/kernel/setup.c:68:
+               printk(KERN_ERR "Initrd extends beyond end of memory");

ERROR:CODE_INDENT: code indent should use tabs where possible
#596: FILE: arch/score/kernel/setup.c:69:
+               goto disable;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#596: FILE: arch/score/kernel/setup.c:69:
+               goto disable;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#597: FILE: arch/score/kernel/setup.c:70:
+       }$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#600: FILE: arch/score/kernel/setup.c:73:
+       reserve_bootmem(__pa(initrd_start), size, BOOTMEM_DEFAULT);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#601: FILE: arch/score/kernel/setup.c:74:
+       initrd_below_start_ok = 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#603: FILE: arch/score/kernel/setup.c:76:
+       pr_info("Initial ramdisk at: 0x%lx (%lu bytes)\n",$

ERROR:CODE_INDENT: code indent should use tabs where possible
#604: FILE: arch/score/kernel/setup.c:77:
+                initrd_start, size);$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#604: FILE: arch/score/kernel/setup.c:77:
+       pr_info("Initial ramdisk at: 0x%lx (%lu bytes)\n",
+                initrd_start, size);

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#604: FILE: arch/score/kernel/setup.c:77:
+                initrd_start, size);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#605: FILE: arch/score/kernel/setup.c:78:
+       return;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#607: FILE: arch/score/kernel/setup.c:80:
+       printk(KERN_CONT " - disabling initrd\n");$

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_cont([subsystem]dev, ... then dev_cont(dev, ... then pr_cont(...  to printk(KERN_CONT ...
#607: FILE: arch/score/kernel/setup.c:80:
+       printk(KERN_CONT " - disabling initrd\n");

WARNING:LOGGING_CONTINUATION: Avoid logging continuation uses where feasible
#607: FILE: arch/score/kernel/setup.c:80:
+       printk(KERN_CONT " - disabling initrd\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#608: FILE: arch/score/kernel/setup.c:81:
+       initrd_start = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#609: FILE: arch/score/kernel/setup.c:82:
+       initrd_end = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#614: FILE: arch/score/kernel/setup.c:87:
+       struct resource *res;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#616: FILE: arch/score/kernel/setup.c:89:
+       code_resource.start = (unsigned long)_text;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#617: FILE: arch/score/kernel/setup.c:90:
+       code_resource.end = (unsigned long)_etext - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#618: FILE: arch/score/kernel/setup.c:91:
+       data_resource.start = (unsigned long)_etext;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#619: FILE: arch/score/kernel/setup.c:92:
+       data_resource.end = (unsigned long)_edata - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#621: FILE: arch/score/kernel/setup.c:94:
+       res = alloc_bootmem(sizeof(struct resource));$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#622: FILE: arch/score/kernel/setup.c:95:
+       res->name = "System RAM";$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#623: FILE: arch/score/kernel/setup.c:96:
+       res->start = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#624: FILE: arch/score/kernel/setup.c:97:
+       res->end = MEM_SIZE - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#625: FILE: arch/score/kernel/setup.c:98:
+       res->flags = IORESOURCE_MEM | IORESOURCE_BUSY;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#626: FILE: arch/score/kernel/setup.c:99:
+       request_resource(&iomem_resource, res);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#628: FILE: arch/score/kernel/setup.c:101:
+       request_resource(res, &code_resource);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#629: FILE: arch/score/kernel/setup.c:102:
+       request_resource(res, &data_resource);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#634: FILE: arch/score/kernel/setup.c:107:
+       randomize_va_space = 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#635: FILE: arch/score/kernel/setup.c:108:
+       *cmdline_p = command_line;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#637: FILE: arch/score/kernel/setup.c:110:
+       cpu_cache_init();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#638: FILE: arch/score/kernel/setup.c:111:
+       tlb_init();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#639: FILE: arch/score/kernel/setup.c:112:
+       bootmem_init();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#640: FILE: arch/score/kernel/setup.c:113:
+       paging_init();$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#641: FILE: arch/score/kernel/setup.c:114:
+       resource_init();$

CHECK:SPACING: No space is necessary after a cast
#646: FILE: arch/score/kernel/setup.c:119:
+       unsigned long n = (unsigned long) v - 1;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#646: FILE: arch/score/kernel/setup.c:119:
+       unsigned long n = (unsigned long) v - 1;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#648: FILE: arch/score/kernel/setup.c:121:
+       seq_printf(m, "processor\t\t: %ld\n", n);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#649: FILE: arch/score/kernel/setup.c:122:
+       seq_printf(m, "\n");$

WARNING:PREFER_SEQ_PUTS: Prefer seq_puts to seq_printf
#649: FILE: arch/score/kernel/setup.c:122:
+       seq_printf(m, "\n");

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#651: FILE: arch/score/kernel/setup.c:124:
+       return 0;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#656: FILE: arch/score/kernel/setup.c:129:
+       unsigned long i = *pos;$

CHECK:SPACING: No space is necessary after a cast
#658: FILE: arch/score/kernel/setup.c:131:
+       return i < 1 ? (void *) (i + 1) : NULL;

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#658: FILE: arch/score/kernel/setup.c:131:
+       return i < 1 ? (void *) (i + 1) : NULL;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#663: FILE: arch/score/kernel/setup.c:136:
+       ++*pos;$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#664: FILE: arch/score/kernel/setup.c:137:
+       return c_start(m, pos);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#672: FILE: arch/score/kernel/setup.c:145:
+       .start  = c_start,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#673: FILE: arch/score/kernel/setup.c:146:
+       .next   = c_next,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#674: FILE: arch/score/kernel/setup.c:147:
+       .stop   = c_stop,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#675: FILE: arch/score/kernel/setup.c:148:
+       .show   = show_cpuinfo,$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#680: FILE: arch/score/kernel/setup.c:153:
+       return 0;$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000113547.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 283 errors, 412 warnings, 19 checks, 628 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000113547.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
