WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#36: 
master.kernel.org:/pub/scm/linux/kernel/git/cooloney/blackfin-2.6.git for-linus

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#148: FILE: arch/blackfin/Kconfig:971:
+config CPU_VOLTAGE
+	bool "CPU Voltage scaling"
+	depends on EXPERIMENTAL	
+	depends on CPU_FREQ
 	default n
 	help
+	  Say Y here if you want CPU voltage scaling according to the CPU frequency.
+	  Say Y here if you want CPU voltage scaling according to the CPU frequency.
+	  Say Y here if you want CPU voltage scaling according to the CPU frequency.
+	  Say Y here if you want CPU voltage scaling according to the CPU frequency.
+	  This option violates the PLL BYPASS recommendation in the Blackfin Processor
+	  manuals. There is a theoretical risk that during VDDINT transitions
+	  the PLL may unlock.

Kconfig symbols should have a help text which fully describes
it.

ERROR:TRAILING_WHITESPACE: trailing whitespace
#150: FILE: arch/blackfin/Kconfig:973:
+^Idepends on EXPERIMENTAL^I$

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:CORRUPTED_PATCH: patch seems to be corrupt (line wrapped?)
#214: FILE: arch/blackfin/kernel/module.c:173:
* sechdrs,

The patch seems to be corrupted or lines are wrapped.
Please regenerate the patch file before sending it to the maintainer.

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#424: FILE: arch/blackfin/mach-bf527/boards/ezkit.c:177:
+#if defined(CONFIG_MTD_PHYSMAP) || defined(CONFIG_MTD_PHYSMAP_MODULE)

WARNING:MISPLACED_INIT: __initdata should be placed after bfin_i2c_board_info[]
#494: FILE: arch/blackfin/mach-bf527/boards/ezkit.c:798:
+static struct i2c_board_info __initdata bfin_i2c_board_info[] = {

It is possible to use section markers on variables in a way
which gcc doesn't understand (or at least not the way the
developer intended)::

  static struct __initdata samsung_pll_clock exynos4_plls[nr_plls] = {

does not put exynos4_plls in the .initdata section. The __initdata
marker can be virtually anywhere on the line, except right after
"struct". The preferred location is before the "=" sign if there is
one, or before the trailing ";" otherwise.

See: https://lore.kernel.org/lkml/1377655732.3619.19.camel@joe-AO722/

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#495: FILE: arch/blackfin/mach-bf527/boards/ezkit.c:799:
+#if defined(CONFIG_TWI_LCD) || defined(CONFIG_TWI_LCD_MODULE)

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#501: FILE: arch/blackfin/mach-bf527/boards/ezkit.c:805:
+#if defined(CONFIG_TWI_KEYPAD) || defined(CONFIG_TWI_KEYPAD_MODULE)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#520: FILE: arch/blackfin/mach-bf527/boards/ezkit.c:900:
+static const unsigned int cclk_vlev_datasheet[] =
+{

The opening brace should be following the function definitions on the
next line.  For any non-functional block it should be on the same line
as the last construct.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#542: FILE: arch/blackfin/mach-bf527/boards/ezkit.c:922:
 static struct platform_device *stamp_devices[] __initdata = {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#553: FILE: arch/blackfin/mach-bf527/boards/ezkit.c:1006:
+#if defined(CONFIG_MTD_PHYSMAP) || defined(CONFIG_MTD_PHYSMAP_MODULE)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#598: FILE: arch/blackfin/mach-bf533/boards/cm_bf533.c:348:
+static const unsigned int cclk_vlev_datasheet[] =
+{

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#625: FILE: arch/blackfin/mach-bf533/boards/cm_bf533.c:375:
 static struct platform_device *cm_bf533_devices[] __initdata = {
+

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#649: FILE: arch/blackfin/mach-bf533/boards/ezkit.c:355:
+static const unsigned int cclk_vlev_datasheet[] =
+{

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#676: FILE: arch/blackfin/mach-bf533/boards/ezkit.c:382:
 static struct platform_device *ezkit_devices[] __initdata = {
+

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#701: FILE: arch/blackfin/mach-bf533/boards/stamp.c:521:
+static const unsigned int cclk_vlev_datasheet[] =
+{

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#728: FILE: arch/blackfin/mach-bf533/boards/stamp.c:548:
 static struct platform_device *stamp_devices[] __initdata = {
+

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#760: FILE: arch/blackfin/mach-bf537/boards/cm_bf537.c:435:
+static const unsigned int cclk_vlev_datasheet[] =
+{

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#787: FILE: arch/blackfin/mach-bf537/boards/cm_bf537.c:462:
 static struct platform_device *cm_bf537_devices[] __initdata = {
+

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#811: FILE: arch/blackfin/mach-bf537/boards/stamp.c:822:
+static const unsigned int cclk_vlev_datasheet[] =
+{

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#838: FILE: arch/blackfin/mach-bf537/boards/stamp.c:849:
 static struct platform_device *stamp_devices[] __initdata = {
+

WARNING:PREFER_IS_ENABLED: Prefer IS_ENABLED(<FOO>) to CONFIG_<FOO> || CONFIG_<FOO>_MODULE
#853: FILE: arch/blackfin/mach-bf548/boards/cm_bf548.c:39:
+#if defined(CONFIG_USB_MUSB_HDRC) || defined(CONFIG_USB_MUSB_HDRC_MODULE)

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#872: FILE: arch/blackfin/mach-bf548/boards/cm_bf548.c:597:
+static const unsigned int cclk_vlev_datasheet[] =
+{

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#900: FILE: arch/blackfin/mach-bf548/boards/cm_bf548.c:625:
 static struct platform_device *cm_bf548_devices[] __initdata = {
+

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#924: FILE: arch/blackfin/mach-bf548/boards/ezkit.c:694:
+static const unsigned int cclk_vlev_datasheet[] =
+{

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#952: FILE: arch/blackfin/mach-bf548/boards/ezkit.c:722:
 static struct platform_device *ezkit_devices[] __initdata = {
+

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#984: FILE: arch/blackfin/mach-bf561/boards/cm_bf561.c:346:
+static const unsigned int cclk_vlev_datasheet[] =
+{

ERROR:OPEN_BRACE: that open brace { should be on the previous line
#1035: FILE: arch/blackfin/mach-bf561/boards/ezkit.c:448:
+static const unsigned int cclk_vlev_datasheet[] =
+{

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#1062: FILE: arch/blackfin/mach-bf561/boards/ezkit.c:475:
 static struct platform_device *ezkit_devices[] __initdata = {
+

WARNING:TYPO_SPELLING: 'frequncy' may be misspelled - perhaps 'frequency'?
#1092: FILE: arch/blackfin/mach-common/cpufreq.c:66:
+   normalized to maximum frequncy offset for CYCLES,
                          ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#1092: FILE: arch/blackfin/mach-common/cpufreq.c:66:
+/*
+   normalized to maximum frequncy offset for CYCLES,

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#1153: 
deleted file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1507: FILE: arch/blackfin/mach-common/dpmc.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:ARCH_INCLUDE_LINUX: Consider using #include <linux/delay.h> instead of <asm/delay.h>
#1523: FILE: arch/blackfin/mach-common/dpmc.c:17:
+#include <asm/delay.h>

Whenever asm/file.h is included and linux/file.h exists, a
conversion can be made when linux/file.h includes asm/file.h.
However this is not always the case (See signal.h).
This message type is emitted only for includes from arch/.

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#1539: FILE: arch/blackfin/mach-common/dpmc.c:33:
+	unsigned pll_lcnt;

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_warn([subsystem]dev, ... then dev_warn(dev, ... then pr_warn(...  to printk(KERN_WARNING ...
#1565: FILE: arch/blackfin/mach-common/dpmc.c:59:
+	printk(KERN_WARNING "DPMC: No suitable CCLK VDDINT voltage pair found\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#1575: FILE: arch/blackfin/mach-common/dpmc.c:69:
+	if (val == CPUFREQ_PRECHANGE && freq->old < freq->new) {
[...]
+	} else if (val == CPUFREQ_POSTCHANGE && freq->old > freq->new)
[...]

WARNING:TYPO_SPELLING: 'Volatge' may be misspelled - perhaps 'Voltage'?
#1577: FILE: arch/blackfin/mach-common/dpmc.c:71:
+		udelay(pdata->vr_settling_time); /* Wait until Volatge settled */
 		                                               ^^^^^^^

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1594: FILE: arch/blackfin/mach-common/dpmc.c:88:
+static int __devinit bfin_dpmc_probe(struct platform_device *pdev)

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1608: FILE: arch/blackfin/mach-common/dpmc.c:102:
+static int __devexit bfin_dpmc_remove(struct platform_device *pdev)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1651: FILE: arch/blackfin/mach-common/dpmc_modes.S:1:
+/*

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 8)
#2196: FILE: drivers/serial/bfin_5xx.c:110:
+	if (uart->port.line != CONFIG_KGDB_UART_PORT)
[...]
 	UART_CLEAR_IER(uart, ERBFI);

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'uart' - possible side-effects?
#2458: FILE: include/asm-blackfin/mach-bf527/bfin_serial_5xx.h:47:
+#define UART_SET_IER(uart, v)    UART_PUT_IER(uart, UART_GET_IER(uart) | (v))

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'uart' - possible side-effects?
#2459: FILE: include/asm-blackfin/mach-bf527/bfin_serial_5xx.h:48:
+#define UART_CLEAR_IER(uart, v)  UART_PUT_IER(uart, UART_GET_IER(uart) & ~(v))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2487: FILE: include/asm-blackfin/mach-bf533/bfin_serial_5xx.h:47:
+#define UART_SET_IER(uart,v)    UART_PUT_IER(uart, UART_GET_IER(uart) | (v))
                          ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'uart' - possible side-effects?
#2487: FILE: include/asm-blackfin/mach-bf533/bfin_serial_5xx.h:47:
+#define UART_SET_IER(uart,v)    UART_PUT_IER(uart, UART_GET_IER(uart) | (v))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2488: FILE: include/asm-blackfin/mach-bf533/bfin_serial_5xx.h:48:
+#define UART_CLEAR_IER(uart,v)  UART_PUT_IER(uart, UART_GET_IER(uart) & ~(v))
                            ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'uart' - possible side-effects?
#2488: FILE: include/asm-blackfin/mach-bf533/bfin_serial_5xx.h:48:
+#define UART_CLEAR_IER(uart,v)  UART_PUT_IER(uart, UART_GET_IER(uart) & ~(v))

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2515: FILE: include/asm-blackfin/mach-bf533/defBF532.h:472:
+#define	VLEV_125		0x00E0	/*              VLEV = 1.25 V (-5% - +10%
+#define	VLEV_130		0x00F0	/*              VLEV = 1.30 V (-5% - +10%

ERROR:CODE_INDENT: code indent should use tabs where possible
#2533: FILE: include/asm-blackfin/mach-bf533/irq.h:70:
+            Softirq^I^I    IVG14       31$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

ERROR:CODE_INDENT: code indent should use tabs where possible
#2534: FILE: include/asm-blackfin/mach-bf533/irq.h:71:
+            System Call    --$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2550: FILE: include/asm-blackfin/mach-bf533/irq.h:100:
+#define ^IIRQ_SPI^I^I^I20^I/*DMA5 Interrupt (SPI) */$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2576: FILE: include/asm-blackfin/mach-bf537/bfin_serial_5xx.h:47:
+#define UART_SET_IER(uart,v)    UART_PUT_IER(uart, UART_GET_IER(uart) | (v))
                          ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'uart' - possible side-effects?
#2576: FILE: include/asm-blackfin/mach-bf537/bfin_serial_5xx.h:47:
+#define UART_SET_IER(uart,v)    UART_PUT_IER(uart, UART_GET_IER(uart) | (v))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2577: FILE: include/asm-blackfin/mach-bf537/bfin_serial_5xx.h:48:
+#define UART_CLEAR_IER(uart,v)  UART_PUT_IER(uart, UART_GET_IER(uart) & ~(v))
                            ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'uart' - possible side-effects?
#2577: FILE: include/asm-blackfin/mach-bf537/bfin_serial_5xx.h:48:
+#define UART_CLEAR_IER(uart,v)  UART_PUT_IER(uart, UART_GET_IER(uart) & ~(v))

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2685: FILE: include/asm-blackfin/mach-bf548/defBF54x_base.h:2341:
+#define^IVLEV_085 ^I^I0x0060^I/* VLEV = 0.85 V (-5% - +10% Accuracy) */$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2711: FILE: include/asm-blackfin/mach-bf561/bfin_serial_5xx.h:47:
+#define UART_SET_IER(uart,v)    UART_PUT_IER(uart, UART_GET_IER(uart) | (v))
                          ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'uart' - possible side-effects?
#2711: FILE: include/asm-blackfin/mach-bf561/bfin_serial_5xx.h:47:
+#define UART_SET_IER(uart,v)    UART_PUT_IER(uart, UART_GET_IER(uart) | (v))

ERROR:SPACING: space required after that ',' (ctx:VxV)
#2712: FILE: include/asm-blackfin/mach-bf561/bfin_serial_5xx.h:48:
+#define UART_CLEAR_IER(uart,v)  UART_PUT_IER(uart, UART_GET_IER(uart) & ~(v))
                            ^

CHECK:MACRO_ARG_REUSE: Macro argument reuse 'uart' - possible side-effects?
#2712: FILE: include/asm-blackfin/mach-bf561/bfin_serial_5xx.h:48:
+#define UART_CLEAR_IER(uart,v)  UART_PUT_IER(uart, UART_GET_IER(uart) & ~(v))

WARNING:LONG_LINE_COMMENT: line length of 146 exceeds 100 columns
#2737: FILE: include/asm-blackfin/mach-bf561/defBF561.h:871:
+/* VR_CTL Masks																	*/

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2751: FILE: include/asm-blackfin/mach-bf561/defBF561.h:885:
+#define^IVLEV_085 ^I^I0x0060^I/* VLEV = 0.85 V (-5% - +10% Accuracy) */$

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#2765: FILE: include/asm-blackfin/mach-bf561/defBF561.h:898:
+#define	SCKELOW			0x8000	/* Do Not Drive SCKE High During Reset After
+

ERROR:CODE_INDENT: code indent should use tabs where possible
#2781: FILE: include/asm-blackfin/mach-bf561/irq.h:121:
+            Softirq^I^I    ^I^IIVG14$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2781: FILE: include/asm-blackfin/mach-bf561/irq.h:121:
+            Softirq^I^I    ^I^IIVG14$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2782: FILE: include/asm-blackfin/mach-bf561/irq.h:122:
+            System Call    --$

ERROR:CODE_INDENT: code indent should use tabs where possible
#2783: FILE: include/asm-blackfin/mach-bf561/irq.h:123:
+                 (lowest priority)  ^I^IIVG15$

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#2783: FILE: include/asm-blackfin/mach-bf561/irq.h:123:
+                 (lowest priority)  ^I^IIVG15$

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000282727.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 23 errors, 27 warnings, 19 checks, 2081 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000282727.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
