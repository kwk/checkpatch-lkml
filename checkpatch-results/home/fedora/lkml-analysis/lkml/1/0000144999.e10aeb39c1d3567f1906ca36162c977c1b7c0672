WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:TYPO_SPELLING: 'EXTRAVERSION' may be misspelled - perhaps 'EXTROVERSION'?
#38: FILE: Makefile:4:
+EXTRAVERSION = .1
 ^^^^^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TABSTOP: Statements should start on a tabstop
#62: FILE: arch/arm/kernel/module.c:135:
+	       case R_ARM_V4BX:

WARNING:TABSTOP: Statements should start on a tabstop
#69: FILE: arch/arm/kernel/module.c:142:
+		       break;

WARNING:TYPO_SPELLING: 'initalization' may be misspelled - perhaps 'initialization'?
#247: FILE: arch/x86/kernel/cpu/mtrr/generic.c:49:
+ * to 1 during BIOS initalization of the fixed MTRRs, then cleared to
                     ^^^^^^^^^^^^^

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'boot_cpu_data.x86_vendor == X86_VENDOR_AMD'
#254: FILE: arch/x86/kernel/cpu/mtrr/generic.c:56:
+	if (!((boot_cpu_data.x86_vendor == X86_VENDOR_AMD) &&
+	      (boot_cpu_data.x86 >= 0x0f)))

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'boot_cpu_data.x86 >= 0x0f'
#254: FILE: arch/x86/kernel/cpu/mtrr/generic.c:56:
+	if (!((boot_cpu_data.x86_vendor == X86_VENDOR_AMD) &&
+	      (boot_cpu_data.x86 >= 0x0f)))

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#260: FILE: arch/x86/kernel/cpu/mtrr/generic.c:62:
+		printk(KERN_ERR FW_WARN "MTRR: CPU %u: SYSCFG[MtrrFixDramModEn]"

WARNING:SPLIT_STRING: quoted string split across lines
#261: FILE: arch/x86/kernel/cpu/mtrr/generic.c:63:
+		printk(KERN_ERR FW_WARN "MTRR: CPU %u: SYSCFG[MtrrFixDramModEn]"
+		       " not cleared by BIOS, clearing this bit\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#459: FILE: arch/x86/lguest/boot.c:489:
+static void lguest_pte_update(struct mm_struct *mm, unsigned long addr,
+			       pte_t *ptep)

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#508: FILE: arch/x86/pci/i386.c:322:
+		vma->vm_page_prot = __pgprot(

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#622: FILE: drivers/net/wireless/ath5k/base.c:1097:
+	if (WARN(hw_rix < 0 || hw_rix >= AR5K_MAX_RATES,
+			"hw_rix out of bounds: %x\n", hw_rix))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cp->string"
#750: FILE: drivers/usb/core/message.c:1722:
+	if (cp->string == NULL &&

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#751: FILE: drivers/usb/core/message.c:1723:
+	if (cp->string == NULL &&
+			!(dev->quirks & USB_QUIRK_CONFIG_INTF_STRINGS))

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!alt->string"
#787: FILE: drivers/usb/core/sysfs.c:817:
+	if (alt->string == NULL &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#788: FILE: drivers/usb/core/sysfs.c:818:
+	if (alt->string == NULL &&
+			!(udev->quirks & USB_QUIRK_CONFIG_INTF_STRINGS))

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#820: FILE: drivers/usb/host/ehci-q.c:343:
 			if ((token & QTD_STS_HALT) != 0) {
+

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#825: FILE: drivers/usb/host/ehci-q.c:348:
+				if ((token & QTD_STS_XACT) &&
+						QTD_CERR(token) == 0 &&

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#829: FILE: drivers/usb/host/ehci-q.c:352:
+					ehci_dbg(ehci,
+	"detected XactErr len %d/%d retry %d\n",

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#842: FILE: drivers/usb/host/ehci-q.c:365:
+					qtd->hw_token = cpu_to_hc32(ehci,
+							token);

WARNING:MEMORY_BARRIER: memory barrier without comment
#843: FILE: drivers/usb/host/ehci-q.c:366:
+					wmb();

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#955: FILE: drivers/video/pxafb.c:894:
 static int __devinit pxafb_overlay_init(struct pxafb_info *fbi)

ERROR:TRAILING_WHITESPACE: trailing whitespace
#985: FILE: fs/cifs/CHANGES:12:
+during mount). $

Trailing whitespace should always be removed.
Some editors highlight the trailing whitespace and cause visual
distractions when editing files.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:CAMELCASE: Avoid CamelCase: <pSMB>
#1001: FILE: fs/cifs/cifssmb.c:2361:
+		pSMB->OldFileName[name_len] = 0x04;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <OldFileName>
#1001: FILE: fs/cifs/cifssmb.c:2361:
+		pSMB->OldFileName[name_len] = 0x04;

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1015: FILE: fs/cifs/connect.c:3670:
+				    kzalloc(2*(length + 1), GFP_KERNEL);
 				             ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LONG_LINE_COMMENT: line length of 130 exceeds 100 columns
#1049: FILE: include/linux/mm.h:101:
+#define VM_INSERTPAGE	0x02000000	/* The vma has had "vm_insert_page()" done on it. Refer note in VM_PFNMAP_AT_MMAP below */

A comment starts before but extends beyond the maximum line length.
To use a different maximum line length, the --max-line-length=n option
may be added while invoking checkpatch.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#breaking-long-lines-and-strings

CHECK:BRACES: braces {} should be used on all arms of this statement
#1101: FILE: mm/memory.c:1668:
+	if (addr == vma->vm_start && end == vma->vm_end) {
[...]
+		vma->vm_flags |= VM_PFNMAP_AT_MMAP;
[...]

WARNING:LINE_SPACING: Missing a blank line after declarations
#1174: FILE: net/ipv4/udp.c:1637:
+	struct udp_iter_state *state = seq->private;
+	state->bucket = UDP_HTABLE_SIZE;

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1218: FILE: net/netfilter/nf_conntrack_proto_tcp.c:470:
+					tmp = get_unaligned_be32((__be32 *)(ptr+i)+1);
 					                                       ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#1218: FILE: net/netfilter/nf_conntrack_proto_tcp.c:470:
+					tmp = get_unaligned_be32((__be32 *)(ptr+i)+1);
 					                                          ^

WARNING:NETWORKING_BLOCK_COMMENT_STYLE: networking block comments don't use an empty /* line, use /* Comment...
#1252: FILE: net/wireless/reg.c:1477:
+	/*
+	 * The old code still requests for a new regdomain and if

WARNING:TYPO_SPELLING: 'userpace' may be misspelled - perhaps 'userspace'?
#1261: FILE: net/wireless/reg.c:1482:
+	 * ISO / IEC 3166 alpha2 code we can't expect userpace to
 	                                              ^^^^^^^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000144999.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 1 errors, 13 warnings, 19 checks, 961 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000144999.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
