WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#61: FILE: drivers/mmc/core/core.c:1181:
+	int err = -ENOSYS;

ENOSYS means that a nonexistent system call was called.
Earlier, it was wrongly used for things like invalid operations on
otherwise valid syscalls.  This should be avoided in new code.

See: https://lore.kernel.org/lkml/5eb299021dec23c1a48fa7d9f2c8b794e967766d.1408730669.git.luto@amacapital.net/

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#76: FILE: drivers/mmc/core/core.c:1196:
+	int err = -ENOSYS;

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mmc_host *' should also have an identifier name
#110: FILE: drivers/mmc/core/core.h:19:
+	int (*awake)(struct mmc_host *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct mmc_host *' should also have an identifier name
#111: FILE: drivers/mmc/core/core.h:20:
+	int (*sleep)(struct mmc_host *);

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#171: FILE: drivers/mmc/core/mmc.c:571:
+	int err = -ENOSYS;

WARNING:ENOSYS: ENOSYS means 'invalid syscall nr' and nothing else
#186: FILE: drivers/mmc/core/mmc.c:586:
+	int err = -ENOSYS;

WARNING:REPEATED_WORD: Possible repeated word: 'will'
#255: FILE: drivers/mmc/core/mmc_ops.c:83:
+	 * If the host does not wait while the card signals busy, then we will
+	 * will have to wait the sleep/awake timeout.  Note, we cannot use the

CHECK:BIT_MACRO: Prefer using the BIT macro
#304: FILE: include/linux/mmc/host.h:152:
+#define MMC_CAP_WAIT_WHILE_BUSY	(1 << 9)	/* Waits while card is busy */

Defines like: 1 << <digit> could be BIT(digit).
The BIT() macro is defined via include/linux/bits.h::

  #define BIT(nr)         (1UL << (nr))

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000097882.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 7 warnings, 1 checks, 241 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000097882.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
