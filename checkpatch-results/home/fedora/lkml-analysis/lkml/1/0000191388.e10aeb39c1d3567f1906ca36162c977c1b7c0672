CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "c->c_global_allocator"
#50: FILE: fs/ocfs2/alloc.h:181:
+	return c->c_global_allocator != NULL;

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#370: FILE: fs/ocfs2/xattr.c:1845:
+	ret = ocfs2_xattr_set_entry(inode, xi, xs, ctxt,
 				(OCFS2_INLINE_XATTR_FL | OCFS2_HAS_XATTR_FL));

WARNING:LINE_SPACING: Missing a blank line after declarations
#471: FILE: fs/ocfs2/xattr.c:2031:
+		size_t offs = le16_to_cpu(last->xe_name_offset);
+		if (offs < min_offs)

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#480: FILE: fs/ocfs2/xattr.c:2040:
+	BUG_ON(!xs->not_found);

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:LINE_SPACING: Missing a blank line after declarations
#535: FILE: fs/ocfs2/xattr.c:2095:
+		int i, block_off;
+		xb = (struct ocfs2_xattr_block *)xbs->xattr_bh->b_data;

CHECK:BRACES: braces {} should be used on all arms of this statement
#542: FILE: fs/ocfs2/xattr.c:2102:
+		if (le16_to_cpu(xb->xb_flags) & OCFS2_XATTR_INDEXED) {
[...]
+		} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#544: FILE: fs/ocfs2/xattr.c:2104:
+			ret = ocfs2_xattr_bucket_get_name_value(inode,
+							bucket_xh(xbs->bucket),

CHECK:BRACES: Unbalanced braces around else statement
#548: FILE: fs/ocfs2/xattr.c:2108:
+		} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#572: FILE: fs/ocfs2/xattr.c:2132:
+		if (!ocfs2_xattr_is_local(xe)) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#577: FILE: fs/ocfs2/xattr.c:2137:
+		} else

CHECK:BRACES: braces {} should be used on all arms of this statement
#580: FILE: fs/ocfs2/xattr.c:2140:
+		if (old_clusters >= new_clusters)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#582: FILE: fs/ocfs2/xattr.c:2142:
+		else {

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#596: FILE: fs/ocfs2/xattr.c:2156:
+		     OCFS2_XATTR_ROOT_SIZE >= xi->value_len))

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

CHECK:BRACES: braces {} should be used on all arms of this statement
#602: FILE: fs/ocfs2/xattr.c:2162:
+	if (di->i_xattr_loc) {
[...]
+	} else
[...]

CHECK:BRACES: braces {} should be used on all arms of this statement
#603: FILE: fs/ocfs2/xattr.c:2163:
+		if (!xbs->xattr_bh) {
[...]
+		} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#613: FILE: fs/ocfs2/xattr.c:2173:
+		} else

CHECK:BRACES: Unbalanced braces around else statement
#633: FILE: fs/ocfs2/xattr.c:2193:
+	} else

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000191388.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 4 warnings, 13 checks, 928 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000191388.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
