WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#55: FILE: drivers/i2c/busses/i2c-bfin-twi.c:63:
+^Istruct i2c_msg ^I^I*pmsg;$

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#74: FILE: drivers/i2c/busses/i2c-bfin-twi.c:91:
+		else if (iface->cur_mode == TWI_I2C_MODE_REPEAT &&
+				iface->cur_msg+1 < iface->msg_num)

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#74: FILE: drivers/i2c/busses/i2c-bfin-twi.c:91:
+				iface->cur_msg+1 < iface->msg_num)
 				              ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#85: FILE: drivers/i2c/busses/i2c-bfin-twi.c:121:
+				iface->cur_msg+1 < iface->msg_num) {
 				              ^

CHECK:SPACING: spaces preferred around that '+' (ctx:VxV)
#106: FILE: drivers/i2c/busses/i2c-bfin-twi.c:188:
+				iface->cur_msg+1 < iface->msg_num) {
 				              ^

CHECK:CAMELCASE: Avoid CamelCase: <transPtr>
#108: FILE: drivers/i2c/busses/i2c-bfin-twi.c:190:
+			iface->transPtr = iface->pmsg[iface->cur_msg].buf;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#109: FILE: drivers/i2c/busses/i2c-bfin-twi.c:191:
+			iface->writeNum = iface->readNum =

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:CAMELCASE: Avoid CamelCase: <writeNum>
#109: FILE: drivers/i2c/busses/i2c-bfin-twi.c:191:
+			iface->writeNum = iface->readNum =

CHECK:CAMELCASE: Avoid CamelCase: <readNum>
#109: FILE: drivers/i2c/busses/i2c-bfin-twi.c:191:
+			iface->writeNum = iface->readNum =

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#112: FILE: drivers/i2c/busses/i2c-bfin-twi.c:194:
+			bfin_write_TWI_MASTER_ADDR(

CHECK:BRACES: braces {} should be used on all arms of this statement
#114: FILE: drivers/i2c/busses/i2c-bfin-twi.c:196:
+			if (iface->pmsg[iface->cur_msg].flags & I2C_M_RD)
[...]
+			else {
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#116: FILE: drivers/i2c/busses/i2c-bfin-twi.c:198:
+			else {

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#120: FILE: drivers/i2c/busses/i2c-bfin-twi.c:202:
+					bfin_write_TWI_XMT_DATA8(

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#128: FILE: drivers/i2c/busses/i2c-bfin-twi.c:210:
+				bfin_write_TWI_MASTER_CTL(

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around adap->dev
#187: FILE: drivers/i2c/busses/i2c-bfin-twi.c:293:
+		dev_err(&(adap->dev), "i2c-bfin-twi: 10 bits addr "

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SPLIT_STRING: quoted string split across lines
#188: FILE: drivers/i2c/busses/i2c-bfin-twi.c:294:
+		dev_err(&(adap->dev), "i2c-bfin-twi: 10 bits addr "
+			"not supported !\n");

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#205: FILE: drivers/i2c/busses/i2c-bfin-twi.c:301:
+	iface->writeNum = iface->readNum = pmsg->len;

CHECK:BRACES: braces {} should be used on all arms of this statement
#219: FILE: drivers/i2c/busses/i2c-bfin-twi.c:315:
+	if (pmsg->flags & I2C_M_RD)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#221: FILE: drivers/i2c/busses/i2c-bfin-twi.c:317:
+	else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#252: FILE: drivers/i2c/busses/i2c-bfin-twi.c:334:
+	if (pmsg->len <= 255)
[...]
+	else if (pmsg->len > 255) {
[...]

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000371622.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 2 warnings, 18 checks, 246 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000371622.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
