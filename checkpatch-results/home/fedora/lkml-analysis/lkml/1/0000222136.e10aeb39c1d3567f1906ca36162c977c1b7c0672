WARNING:COMMIT_MESSAGE: Missing commit description - Add an appropriate one

The patch is missing a commit description.  A brief
description of the changes made by the patch should be added.

See: https://www.kernel.org/doc/html/latest/process/submitting-patches.html#describe-your-changes

WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#90: FILE: arch/ia64/Kconfig:149:
+config IA64_DIG_VTD
+	bool "DIG+Intel+IOMMU"
+	select DMAR
+	select PCI_MSI
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#164: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#169: FILE: arch/ia64/dig/dig_vtd_iommu.c:1:
+#include <linux/types.h>

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#176: FILE: arch/ia64/dig/dig_vtd_iommu.c:8:
+vtd_alloc_coherent(struct device *dev, size_t size, dma_addr_t *dma_handle,
+		 gfp_t flags)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#184: FILE: arch/ia64/dig/dig_vtd_iommu.c:16:
+vtd_free_coherent(struct device *dev, size_t size, void *vaddr,
+		 dma_addr_t dma_handle)

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#234: FILE: arch/ia64/dig/machvec_vtd.c:1:
+#define MACHVEC_PLATFORM_NAME		dig_vtd

ERROR:SPACING: spaces required around that '<' (ctx:WxV)
#235: FILE: arch/ia64/dig/machvec_vtd.c:2:
+#define MACHVEC_PLATFORM_HEADER		<asm/machvec_dig_vtd.h>
                                		^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:SPACING: spaces preferred around that '/' (ctx:VxV)
#235: FILE: arch/ia64/dig/machvec_vtd.c:2:
+#define MACHVEC_PLATFORM_HEADER		<asm/machvec_dig_vtd.h>
                                		    ^

ERROR:SPACING: spaces required around that '>' (ctx:VxE)
#235: FILE: arch/ia64/dig/machvec_vtd.c:2:
+#define MACHVEC_PLATFORM_HEADER		<asm/machvec_dig_vtd.h>
                                		                      ^

WARNING:CONSTANT_COMPARISON: Comparisons should place the constant on the right side of the test
#235: FILE: arch/ia64/dig/machvec_vtd.c:2:
+#define MACHVEC_PLATFORM_HEADER		<asm/machvec_dig_vtd.h>

Comparisons with a constant or upper case identifier on the left
side of the test should be avoided.

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#235: FILE: arch/ia64/dig/machvec_vtd.c:2:
+#define MACHVEC_PLATFORM_HEADER		<asm/machvec_dig_vtd.h>

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#245: FILE: arch/ia64/include/asm/cacheflush.h:37:
+extern void clflush_cache_range(void *addr, int size);

Function prototypes don't need to be declared extern in .h
files.  It's assumed by the compiler and is unnecessary.

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#278: FILE: arch/ia64/include/asm/dma-mapping.h:16:
+	void*           (*alloc_coherent)(struct device *dev, size_t size,
+				dma_addr_t *dma_handle, gfp_t gfp);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#280: FILE: arch/ia64/include/asm/dma-mapping.h:18:
+	void            (*free_coherent)(struct device *dev, size_t size,
+				void *vaddr, dma_addr_t dma_handle);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#282: FILE: arch/ia64/include/asm/dma-mapping.h:20:
+	dma_addr_t      (*map_single)(struct device *hwdev, unsigned long ptr,
+				size_t size, int direction);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#284: FILE: arch/ia64/include/asm/dma-mapping.h:22:
+	void            (*unmap_single)(struct device *dev, dma_addr_t addr,
+				size_t size, int direction);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#286: FILE: arch/ia64/include/asm/dma-mapping.h:24:
+	void            (*sync_single_for_cpu)(struct device *hwdev,
+				dma_addr_t dma_handle, size_t size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#289: FILE: arch/ia64/include/asm/dma-mapping.h:27:
+	void            (*sync_single_for_device)(struct device *hwdev,
+				dma_addr_t dma_handle, size_t size,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#292: FILE: arch/ia64/include/asm/dma-mapping.h:30:
+	void            (*sync_single_range_for_cpu)(struct device *hwdev,
+				dma_addr_t dma_handle, unsigned long offset,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#295: FILE: arch/ia64/include/asm/dma-mapping.h:33:
+	void            (*sync_single_range_for_device)(struct device *hwdev,
+				dma_addr_t dma_handle, unsigned long offset,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#298: FILE: arch/ia64/include/asm/dma-mapping.h:36:
+	void            (*sync_sg_for_cpu)(struct device *hwdev,
+				struct scatterlist *sg, int nelems,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#301: FILE: arch/ia64/include/asm/dma-mapping.h:39:
+	void            (*sync_sg_for_device)(struct device *hwdev,
+				struct scatterlist *sg, int nelems,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#304: FILE: arch/ia64/include/asm/dma-mapping.h:42:
+	int             (*map_sg)(struct device *hwdev, struct scatterlist *sg,
+				int nents, int direction);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#306: FILE: arch/ia64/include/asm/dma-mapping.h:44:
+	void            (*unmap_sg)(struct device *hwdev,
+				struct scatterlist *sg, int nents,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#314: FILE: arch/ia64/include/asm/dma-mapping.h:52:
+extern void set_iommu_machvec(void);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#327: FILE: arch/ia64/include/asm/dma-mapping.h:147:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#336: FILE: arch/ia64/include/asm/iommu.h:1:
+#ifndef _ASM_IA64_IOMMU_H

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#339: FILE: arch/ia64/include/asm/iommu.h:4:
+extern void pci_iommu_shutdown(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#340: FILE: arch/ia64/include/asm/iommu.h:5:
+extern void no_iommu_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#343: FILE: arch/ia64/include/asm/iommu.h:8:
+extern void iommu_dma_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#344: FILE: arch/ia64/include/asm/iommu.h:9:
+extern void machvec_init(const char *name);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#366: FILE: arch/ia64/include/asm/machvec_dig_vtd.h:1:
+#ifndef _ASM_IA64_MACHVEC_DIG_VTD_h

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#409: FILE: arch/ia64/include/asm/machvec_init.h:1:
+#include <asm/iommu.h>

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#422: FILE: arch/ia64/include/asm/pci.h:168:
+extern void pci_iommu_alloc(void);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#431: FILE: arch/ia64/include/asm/swiotlb.h:1:
+#ifndef ASM_IA64__SWIOTLB_H

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#438: FILE: arch/ia64/include/asm/swiotlb.h:8:
+extern dma_addr_t swiotlb_map_single(struct device *hwdev, void *ptr,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#440: FILE: arch/ia64/include/asm/swiotlb.h:10:
+extern void *swiotlb_alloc_coherent(struct device *hwdev, size_t size,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#442: FILE: arch/ia64/include/asm/swiotlb.h:12:
+extern void swiotlb_unmap_single(struct device *hwdev, dma_addr_t dev_addr,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#444: FILE: arch/ia64/include/asm/swiotlb.h:14:
+extern void swiotlb_sync_single_for_cpu(struct device *hwdev,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#447: FILE: arch/ia64/include/asm/swiotlb.h:17:
+extern void swiotlb_sync_single_for_device(struct device *hwdev,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#450: FILE: arch/ia64/include/asm/swiotlb.h:20:
+extern void swiotlb_sync_single_range_for_cpu(struct device *hwdev,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#454: FILE: arch/ia64/include/asm/swiotlb.h:24:
+extern void swiotlb_sync_single_range_for_device(struct device *hwdev,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#458: FILE: arch/ia64/include/asm/swiotlb.h:28:
+extern void swiotlb_sync_sg_for_cpu(struct device *hwdev,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#461: FILE: arch/ia64/include/asm/swiotlb.h:31:
+extern void swiotlb_sync_sg_for_device(struct device *hwdev,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#464: FILE: arch/ia64/include/asm/swiotlb.h:34:
+extern int swiotlb_map_sg(struct device *hwdev, struct scatterlist *sg,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#466: FILE: arch/ia64/include/asm/swiotlb.h:36:
+extern void swiotlb_unmap_sg(struct device *hwdev, struct scatterlist *sg,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#468: FILE: arch/ia64/include/asm/swiotlb.h:38:
+extern int swiotlb_dma_mapping_error(struct device *hwdev, dma_addr_t dma_addr);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#469: FILE: arch/ia64/include/asm/swiotlb.h:39:
+extern void swiotlb_free_coherent(struct device *hwdev, size_t size,

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#471: FILE: arch/ia64/include/asm/swiotlb.h:41:
+extern int swiotlb_dma_supported(struct device *hwdev, u64 mask);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#472: FILE: arch/ia64/include/asm/swiotlb.h:42:
+extern void swiotlb_init(void);

CHECK:AVOID_EXTERNS: extern prototypes should be avoided in .h files
#478: FILE: arch/ia64/include/asm/swiotlb.h:48:
+extern void pci_swiotlb_init(void);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#527: FILE: arch/ia64/kernel/acpi.c:136:
+		if (strncmp(hdr->signature, ACPI_SIG_DMAR,
+			sizeof(ACPI_SIG_DMAR) - 1) == 0)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#569: FILE: arch/ia64/kernel/msi_ia64.c:175:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#603: FILE: arch/ia64/kernel/msi_ia64.c:209:
+	unsigned dest;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#634: FILE: arch/ia64/kernel/msi_ia64.c:240:
+	set_irq_chip_and_handler_name(irq, &dmar_msi_type, handle_edge_irq,
+		"edge");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#645: FILE: arch/ia64/kernel/pci-dma.c:1:
+/*

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#686: FILE: arch/ia64/kernel/pci-dma.c:42:
+/* Dummy device used for NULL arguments (normally ISA). Better would
+   be probably a smaller DMA mask, but this is bug-to-bug compatible

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#687: FILE: arch/ia64/kernel/pci-dma.c:43:
+   to i386. */

WARNING:RETURN_VOID: void function return statements are not generally useful
#720: FILE: arch/ia64/kernel/pci-dma.c:76:
+	return;
+}

WARNING:RETURN_VOID: void function return statements are not generally useful
#726: FILE: arch/ia64/kernel/pci-dma.c:82:
+	return;
+}

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#731: FILE: arch/ia64/kernel/pci-dma.c:87:
+static __devinit void via_no_dac(struct pci_dev *dev)

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#734: FILE: arch/ia64/kernel/pci-dma.c:90:
+		printk(KERN_INFO "PCI: VIA PCI bridge detected. Disabling DAC.\n");

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#761: FILE: arch/ia64/kernel/pci-dma.c:117:
+	/* Copied from i386. Doesn't make much sense, because it will
+	   only work for pci_alloc_coherent.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#762: FILE: arch/ia64/kernel/pci-dma.c:118:
+	   The caller just has to use GFP_DMA in this case. */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#767: FILE: arch/ia64/kernel/pci-dma.c:123:
+	/* Tell the device to use SAC when IOMMU force is on.  This
+	   allows the driver to use cheaper accesses in some cases.

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#777: FILE: arch/ia64/kernel/pci-dma.c:133:
+	   more gentle handling of IOMMU overflow. */

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'mask >= DMA_40BIT_MASK'
#778: FILE: arch/ia64/kernel/pci-dma.c:134:
+	if (iommu_sac_force && (mask >= DMA_40BIT_MASK)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#794: FILE: arch/ia64/kernel/pci-swiotlb.c:1:
+/* Glue code to lib/swiotlb.c */

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#831: FILE: arch/ia64/kernel/pci-swiotlb.c:38:
+		printk(KERN_INFO "PCI-DMA: Re-initialize machine vector.\n");

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000222136.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 3 errors, 24 warnings, 43 checks, 795 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000222136.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
