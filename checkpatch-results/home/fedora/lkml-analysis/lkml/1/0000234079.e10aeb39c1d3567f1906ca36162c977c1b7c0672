WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#59: FILE: drivers/usb/ip/Kconfig:26:
+config USB_IP_HOST
+	tristate "USB IP host driver"
+	depends on USB_IP_COMMON
+	---help---
+	 This enables the USB IP device driver which will run on the
+	 host machine.
+
+	 To compile this driver as a module, choose M here: the
+	 module will be called usbip.
+++ b/drivers/usb/ip/Makefile
+++ b/drivers/usb/ip/Makefile

Kconfig symbols should have a help text which fully describes
it.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#83: FILE: drivers/usb/ip/stub_dev.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#97: FILE: drivers/usb/ip/stub_dev.c:15:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#98: FILE: drivers/usb/ip/stub_dev.c:16:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#105: FILE: drivers/usb/ip/stub_dev.c:23:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#108: FILE: drivers/usb/ip/stub_dev.c:26:
+static int stub_probe(struct usb_interface *interface,
+				const struct usb_device_id *id);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#111: FILE: drivers/usb/ip/stub_dev.c:29:
+
+

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#118: FILE: drivers/usb/ip/stub_dev.c:36:
+#if 0

CHECK:LINE_SPACING: Please don't use multiple blank lines
#146: FILE: drivers/usb/ip/stub_dev.c:64:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#151: FILE: drivers/usb/ip/stub_dev.c:69:
+
+

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'show_status' to 'usbip_status_show'
#172: FILE: drivers/usb/ip/stub_dev.c:90:
+}

The function names used in DEVICE_ATTR is unusual.
Typically, the store and show functions are used with <attr>_store and
<attr>_show, where <attr> is a named attribute variable of the device.

Consider the following examples::

  static DEVICE_ATTR(type, 0444, type_show, NULL);
  static DEVICE_ATTR(power, 0644, power_show, power_store);

The function names should preferably follow the above pattern.

See: https://www.kernel.org/doc/html/latest/driver-api/driver-model/device.html#attributes

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUGO' are not preferred. Consider using octal permissions '0444'.
#173: FILE: drivers/usb/ip/stub_dev.c:91:
+static DEVICE_ATTR(usbip_status, S_IRUGO, show_status, NULL);

Permission bits in the octal form are more readable and easier to
understand than their symbolic counterparts because many command-line
tools use this notation. Experienced kernel developers have been using
these traditional Unix permission bits for decades and so they find it
easier to understand the octal notation than the symbolic macros.
For example, it is harder to read S_IWUSR|S_IRUGO than 0644, which
obscures the developer's intent rather than clarifying it.

See: https://lore.kernel.org/lkml/CA+55aFw5v23T-zvDZp-MmD_EYxF8WbafwwB59934FV7g21uMGQ@mail.gmail.com/

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#211: FILE: drivers/usb/ip/stub_dev.c:129:
+#if 0

WARNING:DEVICE_ATTR_FUNCTIONS: Consider renaming function(s) 'store_sockfd' to 'usbip_sockfd_store'
#241: FILE: drivers/usb/ip/stub_dev.c:159:
+}

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IWUSR' are not preferred. Consider using octal permissions '0200'.
#242: FILE: drivers/usb/ip/stub_dev.c:160:
+static DEVICE_ATTR(usbip_sockfd, S_IWUSR, NULL, store_sockfd);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#279: FILE: drivers/usb/ip/stub_dev.c:197:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#329: FILE: drivers/usb/ip/stub_dev.c:247:
+		list_for_each_entry_safe(unlink, tmp,
+						 &sdev->unlink_free, list) {

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#370: FILE: drivers/usb/ip/stub_dev.c:288:
+
+	}

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

WARNING:RETURN_VOID: void function return statements are not generally useful
#374: FILE: drivers/usb/ip/stub_dev.c:292:
+	return;
+}

CHECK:LINE_SPACING: Please don't use multiple blank lines
#383: FILE: drivers/usb/ip/stub_dev.c:301:
+
+

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*sdev)...) over kzalloc(sizeof(struct stub_device)...)
#401: FILE: drivers/usb/ip/stub_dev.c:319:
+	sdev = kzalloc(sizeof(struct stub_device), GFP_KERNEL);

The allocation style is bad.  In general for family of
allocation functions using sizeof() to get memory size,
constructs like::

  p = alloc(sizeof(struct foo), ...)

should be::

  p = alloc(sizeof(*p), ...)

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#allocating-memory

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#403: FILE: drivers/usb/ip/stub_dev.c:321:
+	if (!sdev) {
+		dev_err(&interface->dev, "no memory for stub_device\n");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#456: FILE: drivers/usb/ip/stub_dev.c:374:
+
+

CHECK:CAMELCASE: Avoid CamelCase: <bDeviceClass>
#493: FILE: drivers/usb/ip/stub_dev.c:411:
+	if (udev->descriptor.bDeviceClass ==  USB_CLASS_HUB) {

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#495: FILE: drivers/usb/ip/stub_dev.c:413:
+		udbg("this device %s is a usb hub device. skip!\n",
+								udev_busid);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#501: FILE: drivers/usb/ip/stub_dev.c:419:
+		udbg("this device %s is attached on vhci_hcd. skip!\n",
+								udev_busid);

WARNING:SPLIT_STRING: quoted string split across lines
#511: FILE: drivers/usb/ip/stub_dev.c:429:
+	dev_info(&interface->dev, "USB/IP Stub: register a new interface "
+		 "(bus %u dev %u ifn %u)\n", udev->bus->busnum, udev->devnum,

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:CAMELCASE: Avoid CamelCase: <bInterfaceNumber>
#512: FILE: drivers/usb/ip/stub_dev.c:430:
+		 interface->cur_altsetting->desc.bInterfaceNumber);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#527: FILE: drivers/usb/ip/stub_dev.c:445:
+
+

WARNING:TYPO_SPELLING: 'inteface' may be misspelled - perhaps 'interface'?
#540: FILE: drivers/usb/ip/stub_dev.c:458:
+		err(" could not get device from inteface data");
 		                                ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

CHECK:LINE_SPACING: Please don't use multiple blank lines
#547: FILE: drivers/usb/ip/stub_dev.c:465:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#563: FILE: drivers/usb/ip/stub_dev.c:481:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#569: FILE: drivers/usb/ip/stub.h:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#583: FILE: drivers/usb/ip/stub.h:15:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#584: FILE: drivers/usb/ip/stub.h:16:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,$

WARNING:TYPO_SPELLING: 'comletion' may be misspelled - perhaps 'completion'?
#608: FILE: drivers/usb/ip/stub.h:40:
+	 *	priv_init: linked to this until the comletion of a urb.
 	  	                                    ^^^^^^^^^

CHECK:LINE_SPACING: Please don't use multiple blank lines
#623: FILE: drivers/usb/ip/stub.h:55:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#643: FILE: drivers/usb/ip/stub.h:75:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#646: FILE: drivers/usb/ip/stub.h:78:
+
+

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct urb *' should also have an identifier name
#651: FILE: drivers/usb/ip/stub.h:83:
+void stub_complete(struct urb *);

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct usbip_task *' should also have an identifier name
#652: FILE: drivers/usb/ip/stub.h:84:
+void stub_tx_loop(struct usbip_task *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct usbip_task *' should also have an identifier name
#658: FILE: drivers/usb/ip/stub.h:90:
+void stub_rx_loop(struct usbip_task *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct stub_device *' should also have an identifier name
#659: FILE: drivers/usb/ip/stub.h:91:
+void stub_enqueue_ret_unlink(struct stub_device *, __u32, __u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u32' should also have an identifier name
#659: FILE: drivers/usb/ip/stub.h:91:
+void stub_enqueue_ret_unlink(struct stub_device *, __u32, __u32);

WARNING:FUNCTION_ARGUMENTS: function definition argument '__u32' should also have an identifier name
#659: FILE: drivers/usb/ip/stub.h:91:
+void stub_enqueue_ret_unlink(struct stub_device *, __u32, __u32);

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#667: FILE: drivers/usb/ip/stub_main.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#681: FILE: drivers/usb/ip/stub_main.c:15:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#682: FILE: drivers/usb/ip/stub_main.c:16:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#686: FILE: drivers/usb/ip/stub_main.c:20:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#702: FILE: drivers/usb/ip/stub_main.c:36:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#712: FILE: drivers/usb/ip/stub_main.c:46:
+
+

WARNING:TYPO_SPELLING: 'registerd' may be misspelled - perhaps 'registered'?
#722: FILE: drivers/usb/ip/stub_main.c:56:
+				/* already registerd */
 				           ^^^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#791: FILE: drivers/usb/ip/stub_main.c:125:
+static ssize_t store_match_busid(struct device_driver *dev, const char *buf,
+		size_t count)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#808: FILE: drivers/usb/ip/stub_main.c:142:
+
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#809: FILE: drivers/usb/ip/stub_main.c:143:
+	if (!strncmp(buf, "add ", 4)) {
[...]
+	} else if (!strncmp(buf, "del ", 4)) {
[...]
+	} else
[...]

CHECK:BRACES: braces {} should be used on all arms of this statement
#810: FILE: drivers/usb/ip/stub_main.c:144:
+		if (add_match_busid(busid) < 0)
[...]
+		else {
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#812: FILE: drivers/usb/ip/stub_main.c:146:
+			return -ENOMEM;
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#812: FILE: drivers/usb/ip/stub_main.c:146:
+		else {

CHECK:BRACES: braces {} should be used on all arms of this statement
#817: FILE: drivers/usb/ip/stub_main.c:151:
+		if (del_match_busid(busid) < 0)
[...]
+		else {
[...]

WARNING:UNNECESSARY_ELSE: else is not generally useful after a break or return
#819: FILE: drivers/usb/ip/stub_main.c:153:
+			return -ENODEV;
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#819: FILE: drivers/usb/ip/stub_main.c:153:
+		else {

CHECK:BRACES: Unbalanced braces around else statement
#823: FILE: drivers/usb/ip/stub_main.c:157:
+	} else

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#827: FILE: drivers/usb/ip/stub_main.c:161:
+static DRIVER_ATTR(match_busid, S_IRUSR|S_IWUSR, show_match_busid,
                                        ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SYMBOLIC_PERMS: Symbolic permissions 'S_IRUSR|S_IWUSR' are not preferred. Consider using octal permissions '0600'.
#827: FILE: drivers/usb/ip/stub_main.c:161:
+static DRIVER_ATTR(match_busid, S_IRUSR|S_IWUSR, show_match_busid,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#830: FILE: drivers/usb/ip/stub_main.c:164:
+
+

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "urb->transfer_buffer"
#891: FILE: drivers/usb/ip/stub_main.c:225:
+		if (urb->transfer_buffer != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "urb->setup_packet"
#894: FILE: drivers/usb/ip/stub_main.c:228:
+		if (urb->setup_packet != NULL)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#901: FILE: drivers/usb/ip/stub_main.c:235:
+
+

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#913: FILE: drivers/usb/ip/stub_main.c:247:
+		printk(KERN_ERR KBUILD_MODNAME

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#920: FILE: drivers/usb/ip/stub_main.c:254:
+		printk(KERN_ERR KBUILD_MODNAME ": usb_register failed %d\n",

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_info([subsystem]dev, ... then dev_info(dev, ... then pr_info(...  to printk(KERN_INFO ...
#925: FILE: drivers/usb/ip/stub_main.c:259:
+	printk(KERN_INFO KBUILD_MODNAME ":"

WARNING:PREFER_PR_LEVEL: Prefer [subsystem eg: netdev]_err([subsystem]dev, ... then dev_err(dev, ... then pr_err(...  to printk(KERN_ERR ...
#935: FILE: drivers/usb/ip/stub_main.c:269:
+		printk(KERN_ERR KBUILD_MODNAME ": create driver sysfs\n");

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#970: FILE: drivers/usb/ip/stub_rx.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#984: FILE: drivers/usb/ip/stub_rx.c:15:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#985: FILE: drivers/usb/ip/stub_rx.c:16:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#994: FILE: drivers/usb/ip/stub_rx.c:25:
+
+

CHECK:SPACING: No space is necessary after a cast
#999: FILE: drivers/usb/ip/stub_rx.c:30:
+	req = (struct usb_ctrlrequest *) urb->setup_packet;

WARNING:TABSTOP: Statements should start on a tabstop
#1001: FILE: drivers/usb/ip/stub_rx.c:32:
+	 return (req->bRequest == USB_REQ_CLEAR_FEATURE) &&

CHECK:CAMELCASE: Avoid CamelCase: <bRequest>
#1001: FILE: drivers/usb/ip/stub_rx.c:32:
+	 return (req->bRequest == USB_REQ_CLEAR_FEATURE) &&

CHECK:CAMELCASE: Avoid CamelCase: <bRequestType>
#1002: FILE: drivers/usb/ip/stub_rx.c:33:
+		 (req->bRequestType == USB_RECIP_ENDPOINT) &&

CHECK:CAMELCASE: Avoid CamelCase: <wValue>
#1003: FILE: drivers/usb/ip/stub_rx.c:34:
+		 (req->wValue == USB_ENDPOINT_HALT);

CHECK:SPACING: No space is necessary after a cast
#1010: FILE: drivers/usb/ip/stub_rx.c:41:
+	req = (struct usb_ctrlrequest *) urb->setup_packet;

CHECK:SPACING: No space is necessary after a cast
#1020: FILE: drivers/usb/ip/stub_rx.c:51:
+	req = (struct usb_ctrlrequest *) urb->setup_packet;

CHECK:SPACING: No space is necessary after a cast
#1032: FILE: drivers/usb/ip/stub_rx.c:63:
+	req = (struct usb_ctrlrequest *) urb->setup_packet;

CHECK:CAMELCASE: Avoid CamelCase: <wIndex>
#1034: FILE: drivers/usb/ip/stub_rx.c:65:
+	index = le16_to_cpu(req->wIndex);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'req->bRequest == USB_REQ_SET_FEATURE'
#1036: FILE: drivers/usb/ip/stub_rx.c:67:
+	if ((req->bRequest == USB_REQ_SET_FEATURE) &&
+			(req->bRequestType == USB_RT_PORT) &&
+			(value = USB_PORT_FEAT_RESET)) {

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around 'req->bRequestType == USB_RT_PORT'
#1036: FILE: drivers/usb/ip/stub_rx.c:67:
+	if ((req->bRequest == USB_REQ_SET_FEATURE) &&
+			(req->bRequestType == USB_RT_PORT) &&
+			(value = USB_PORT_FEAT_RESET)) {

ERROR:ASSIGN_IN_IF: do not use assignment in if condition
#1036: FILE: drivers/usb/ip/stub_rx.c:67:
+	if ((req->bRequest == USB_REQ_SET_FEATURE) &&

Do not use assignments in if condition.
Example::

  if ((foo = bar(...)) < BAZ) {

should be written as::

  foo = bar(...);
  if (foo < BAZ) {

CHECK:BRACES: braces {} should be used on all arms of this statement
#1036: FILE: drivers/usb/ip/stub_rx.c:67:
+	if ((req->bRequest == USB_REQ_SET_FEATURE) &&
[...]
+	} else
[...]

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1037: FILE: drivers/usb/ip/stub_rx.c:68:
+	if ((req->bRequest == USB_REQ_SET_FEATURE) &&
+			(req->bRequestType == USB_RT_PORT) &&

CHECK:BRACES: Unbalanced braces around else statement
#1041: FILE: drivers/usb/ip/stub_rx.c:72:
+	} else

CHECK:SPACING: No space is necessary after a cast
#1053: FILE: drivers/usb/ip/stub_rx.c:84:
+	req = (struct usb_ctrlrequest *) urb->setup_packet;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1073: FILE: drivers/usb/ip/stub_rx.c:104:
+		uinfo("clear_halt error: devnum %d endp %d, %d\n",
+				urb->dev->devnum, target_endp, ret);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1076: FILE: drivers/usb/ip/stub_rx.c:107:
+		uinfo("clear_halt done: devnum %d endp %d\n",
+				urb->dev->devnum, target_endp);

CHECK:SPACING: No space is necessary after a cast
#1088: FILE: drivers/usb/ip/stub_rx.c:119:
+	req = (struct usb_ctrlrequest *) urb->setup_packet;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1097: FILE: drivers/usb/ip/stub_rx.c:128:
+		uinfo("set_interface error: inf %u alt %u, %d\n",
+				interface, alternate, ret);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1100: FILE: drivers/usb/ip/stub_rx.c:131:
+		uinfo("set_interface done: inf %u alt %u\n",
+							interface,

CHECK:SPACING: No space is necessary after a cast
#1111: FILE: drivers/usb/ip/stub_rx.c:142:
+	req = (struct usb_ctrlrequest *) urb->setup_packet;

WARNING:TYPO_SPELLING: 'Unfortunatelly' may be misspelled - perhaps 'Unfortunately'?
#1125: FILE: drivers/usb/ip/stub_rx.c:156:
+	 * Unfortunatelly, an existing usbip connection will be dropped
 	   ^^^^^^^^^^^^^^

CHECK:SPACING: No space is necessary after a cast
#1144: FILE: drivers/usb/ip/stub_rx.c:175:
+	req = (struct usb_ctrlrequest *) urb->setup_packet;

WARNING:SUSPECT_CODE_INDENT: suspect code indent for conditional statements (8, 17)
#1178: FILE: drivers/usb/ip/stub_rx.c:209:
+	if (is_clear_halt_cmd(urb))
[...]
+		 tweak_clear_halt_cmd(urb);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1205: FILE: drivers/usb/ip/stub_rx.c:236:
+static int stub_recv_cmd_unlink(struct stub_device *sdev,
+						struct usbip_header *pdu)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1213: FILE: drivers/usb/ip/stub_rx.c:244:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1280: FILE: drivers/usb/ip/stub_rx.c:311:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1334: FILE: drivers/usb/ip/stub_rx.c:365:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1336: FILE: drivers/usb/ip/stub_rx.c:367:
+static struct usb_host_endpoint *get_ep_from_epnum(struct usb_device *udev,
+		int epnum0)

CHECK:CAMELCASE: Avoid CamelCase: <bNumInterfaces>
#1351: FILE: drivers/usb/ip/stub_rx.c:382:
+	for (i = 0; i < config->desc.bNumInterfaces; i++) {

CHECK:CAMELCASE: Avoid CamelCase: <bNumEndpoints>
#1356: FILE: drivers/usb/ip/stub_rx.c:387:
+		for (j = 0; j < setting->desc.bNumEndpoints; j++) {

CHECK:CAMELCASE: Avoid CamelCase: <bEndpointAddress>
#1358: FILE: drivers/usb/ip/stub_rx.c:389:
+			epnum = (ep->desc.bEndpointAddress & 0x7f);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1374: FILE: drivers/usb/ip/stub_rx.c:405:
+
+

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#1385: FILE: drivers/usb/ip/stub_rx.c:416:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1390: FILE: drivers/usb/ip/stub_rx.c:421:
+
+

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#1391: FILE: drivers/usb/ip/stub_rx.c:422:
+#if 0

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1443: FILE: drivers/usb/ip/stub_rx.c:474:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1451: FILE: drivers/usb/ip/stub_rx.c:482:
+		priv->urb = usb_alloc_urb(pdu->u.cmd_submit.number_of_packets,
+								GFP_KERNEL);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1465: FILE: drivers/usb/ip/stub_rx.c:496:
+			kzalloc(pdu->u.cmd_submit.transfer_buffer_length,
+								GFP_KERNEL);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1476: FILE: drivers/usb/ip/stub_rx.c:507:
+	if (!priv->urb->setup_packet) {
+		dev_err(&sdev->interface->dev, "allocate setup_packet\n");

CHECK:SPACING: No space is necessary after a cast
#1483: FILE: drivers/usb/ip/stub_rx.c:514:
+	priv->urb->context                = (void *) priv;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1490: FILE: drivers/usb/ip/stub_rx.c:521:
+
+

CHECK:BRACES: braces {} should be used on all arms of this statement
#1503: FILE: drivers/usb/ip/stub_rx.c:534:
+	if (ret == 0)
[...]
+	else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1505: FILE: drivers/usb/ip/stub_rx.c:536:
+	else {

WARNING:RETURN_VOID: void function return statements are not generally useful
#1519: FILE: drivers/usb/ip/stub_rx.c:550:
+	return;
+}

CHECK:SPACING: No space is necessary after a cast
#1534: FILE: drivers/usb/ip/stub_rx.c:565:
+	ret = usbip_xmit(0, ud->tcp_socket, (char *) &pdu, sizeof(pdu), 0);

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#1568: FILE: drivers/usb/ip/stub_rx.c:599:
+
+}

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1589: FILE: drivers/usb/ip/stub_tx.c:1:
+/*

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1603: FILE: drivers/usb/ip/stub_tx.c:15:
+ * along with this program; if not, write to the Free Software$

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#1604: FILE: drivers/usb/ip/stub_tx.c:16:
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1611: FILE: drivers/usb/ip/stub_tx.c:23:
+
+

CHECK:ALLOC_SIZEOF_STRUCT: Prefer kzalloc(sizeof(*unlink)...) over kzalloc(sizeof(struct stub_unlink)...)
#1629: FILE: drivers/usb/ip/stub_tx.c:41:
+	unlink = kzalloc(sizeof(struct stub_unlink), GFP_ATOMIC);

WARNING:OOM_MESSAGE: Possible unnecessary 'out of memory' message
#1631: FILE: drivers/usb/ip/stub_tx.c:43:
+	if (!unlink) {
+		dev_err(&sdev->interface->dev, "alloc stub_unlink\n");

CHECK:SPACING: No space is necessary after a cast
#1654: FILE: drivers/usb/ip/stub_tx.c:66:
+	struct stub_priv *priv = (struct stub_priv *) urb->context;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1660: FILE: drivers/usb/ip/stub_tx.c:72:
+
+

WARNING:SPLIT_STRING: quoted string split across lines
#1667: FILE: drivers/usb/ip/stub_tx.c:79:
+		uinfo("stopped by a call of usb_kill_urb() because of"
+					"cleaning up a virtual connection\n");

WARNING:MISSING_SPACE: break quoted strings at a space character
#1667: FILE: drivers/usb/ip/stub_tx.c:79:
+		uinfo("stopped by a call of usb_kill_urb() because of"
+					"cleaning up a virtual connection\n");

CHECK:BRACES: braces {} should be used on all arms of this statement
#1685: FILE: drivers/usb/ip/stub_tx.c:97:
+	if (priv->unlinking) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1688: FILE: drivers/usb/ip/stub_tx.c:100:
+	} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1691: FILE: drivers/usb/ip/stub_tx.c:103:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1698: FILE: drivers/usb/ip/stub_tx.c:110:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1703: FILE: drivers/usb/ip/stub_tx.c:115:
+static inline void setup_base_pdu(struct usbip_header_basic *base,
+		__u32 command, __u32 seqnum)

CHECK:SPACING: No space is necessary after a cast
#1714: FILE: drivers/usb/ip/stub_tx.c:126:
+	struct stub_priv *priv = (struct stub_priv *) urb->context;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1722: FILE: drivers/usb/ip/stub_tx.c:134:
+static void setup_ret_unlink_pdu(struct usbip_header *rpdu,
+		struct stub_unlink *unlink)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1729: FILE: drivers/usb/ip/stub_tx.c:141:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1775: FILE: drivers/usb/ip/stub_tx.c:187:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1824: FILE: drivers/usb/ip/stub_tx.c:236:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1836: FILE: drivers/usb/ip/stub_tx.c:248:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1858: FILE: drivers/usb/ip/stub_tx.c:270:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1899: FILE: drivers/usb/ip/stub_tx.c:311:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1905: FILE: drivers/usb/ip/stub_tx.c:317:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1918: FILE: drivers/usb/ip/stub_tx.c:330:
+
+

WARNING:TYPO_SPELLING: 'catched' may be misspelled - perhaps 'caught'?
#1928: FILE: drivers/usb/ip/stub_tx.c:340:
+			dbg_stub_tx("signal catched\n");
 			                    ^^^^^^^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1956: FILE: drivers/usb/ip/stub_tx.c:368:
+		wait_event_interruptible(sdev->tx_waitq,
+				(!list_empty(&sdev->priv_tx) ||

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000234079.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 11 errors, 42 warnings, 98 checks, 1887 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000234079.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
