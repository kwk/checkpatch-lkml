WARNING:CONFIG_DESCRIPTION: please write a help paragraph that fully describes the config symbol
#59: FILE: drivers/ide/Kconfig:723:
+config BLK_DEV_OCTEON_BOOTBUS_CF
+	tristate "Support for OCTEON Boot Bus Compact Flash"
+	depends on CPU_CAVIUM_OCTEON
+	default "y"
+	help
+	  This option enables a polled compact flash driver for use with
+	  compact flash cards attached to the OCTEON boot bus.
+

Kconfig symbols should have a help text which fully describes
it.

WARNING:FILE_PATH_CHANGES: added, moved or deleted file(s), does MAINTAINERS need updating?
#80: 
new file mode 100644

Whenever files are added, moved, or deleted, the MAINTAINERS file
patterns can be out of sync or outdated.

So MAINTAINERS might need updating in these cases.

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#85: FILE: drivers/ide/octeon-cf.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

CHECK:UNCOMMENTED_DEFINITION: spinlock_t definition without comment
#141: FILE: drivers/ide/octeon-cf.c:57:
+	spinlock_t lock;

CHECK:BRACES: braces {} should be used on all arms of this statement
#221: FILE: drivers/ide/octeon-cf.c:137:
+	if (unlikely(status & 0x80)) {
[...]
+	} else if (unlikely(status & 1)) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:BRACES: Unbalanced braces around else statement
#229: FILE: drivers/ide/octeon-cf.c:145:
+	} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#233: FILE: drivers/ide/octeon-cf.c:149:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

CHECK:BRACES: braces {} should be used on all arms of this statement
#271: FILE: drivers/ide/octeon-cf.c:187:
+	if (unlikely((status & 0x08) == 0)) {
[...]
+	} else
[...]

CHECK:BRACES: Unbalanced braces around else statement
#275: FILE: drivers/ide/octeon-cf.c:191:
+	} else

WARNING:TYPO_SPELLING: 'commadn' may be misspelled - perhaps 'command'?
#282: FILE: drivers/ide/octeon-cf.c:198:
+ * @cf:      Device to send commadn to
                             ^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#287: FILE: drivers/ide/octeon-cf.c:203:
+ * ^I^I   in true IDE mode$

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#340: FILE: drivers/ide/octeon-cf.c:256:
+		uint16_t *ptr = (uint16_t *)drive_info;

WARNING:LINE_SPACING: Missing a blank line after declarations
#342: FILE: drivers/ide/octeon-cf.c:258:
+		int count;
+		for (count = 0; count < sizeof(*drive_info); count += 2)

CHECK:SPACING: No space is necessary after a cast
#345: FILE: drivers/ide/octeon-cf.c:261:
+		unsigned char *ptr = (unsigned char *) drive_info;

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:LINE_SPACING: Missing a blank line after declarations
#347: FILE: drivers/ide/octeon-cf.c:263:
+		int count;
+		for (count = 0; count < sizeof(*drive_info); count++)

CHECK:SPACING: No space is necessary after a cast
#394: FILE: drivers/ide/octeon-cf.c:310:
+				uint16_t *ptr = (uint16_t *) buffer;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#394: FILE: drivers/ide/octeon-cf.c:310:
+				uint16_t *ptr = (uint16_t *) buffer;

WARNING:LINE_SPACING: Missing a blank line after declarations
#395: FILE: drivers/ide/octeon-cf.c:311:
+				uint16_t *ptr = (uint16_t *) buffer;
+				for (count = 0; count < cf->sector_size;

CHECK:LINE_SPACING: Please don't use multiple blank lines
#411: FILE: drivers/ide/octeon-cf.c:327:
+
+

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#446: FILE: drivers/ide/octeon-cf.c:362:
+			udelay(10); /* 10 OK,   5 bad

usleep_range() should be preferred over udelay(). The proper way of
using usleep_range() is mentioned in the kernel docs.

See: https://www.kernel.org/doc/html/latest/timers/timers-howto.html#delays-information-on-the-various-kernel-delay-sleep-mechanisms

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#447: FILE: drivers/ide/octeon-cf.c:363:
+			udelay(10); /* 10 OK,   5 bad
+				       1, 0 OK with lexar */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#447: FILE: drivers/ide/octeon-cf.c:363:
+				       1, 0 OK with lexar */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#452: FILE: drivers/ide/octeon-cf.c:368:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#483: FILE: drivers/ide/octeon-cf.c:399:
+
+

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#484: FILE: drivers/ide/octeon-cf.c:400:
+
+	}

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#495: FILE: drivers/ide/octeon-cf.c:411:
+		udelay(10); /* 10 works on sandisk @ 700 Mhz */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#499: FILE: drivers/ide/octeon-cf.c:415:
+
+

CHECK:USLEEP_RANGE: usleep_range is preferred over udelay; see Documentation/timers/timers-howto.rst
#533: FILE: drivers/ide/octeon-cf.c:449:
+			udelay(10); /* 10 OK, 5 bad with sandisk

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#534: FILE: drivers/ide/octeon-cf.c:450:
+			udelay(10); /* 10 OK, 5 bad with sandisk
+					1 OK with lexar */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#534: FILE: drivers/ide/octeon-cf.c:450:
+					1 OK with lexar */

CHECK:LINE_SPACING: Please don't use multiple blank lines
#539: FILE: drivers/ide/octeon-cf.c:455:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#570: FILE: drivers/ide/octeon-cf.c:486:
+
+

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#571: FILE: drivers/ide/octeon-cf.c:487:
+
+	}

CHECK:LINE_SPACING: Please use a blank line after function/struct/union/enum declarations
#582: FILE: drivers/ide/octeon-cf.c:498:
+}
+/**

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#593: FILE: drivers/ide/octeon-cf.c:509:
+static unsigned int octeon_cf_write(struct cf_device *cf,
+				unsigned long lba_start,

CHECK:SPACING: No space is necessary after a cast
#622: FILE: drivers/ide/octeon-cf.c:538:
+				const uint16_t *ptr = (const uint16_t *) buffer;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#622: FILE: drivers/ide/octeon-cf.c:538:
+				const uint16_t *ptr = (const uint16_t *) buffer;

WARNING:LINE_SPACING: Missing a blank line after declarations
#623: FILE: drivers/ide/octeon-cf.c:539:
+				const uint16_t *ptr = (const uint16_t *) buffer;
+				for (count = 0; count < cf->sector_size;

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#627: FILE: drivers/ide/octeon-cf.c:543:
+					/* Every 16 writes do a read so the
+					   bootbus FIFO doesn't fill up */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#627: FILE: drivers/ide/octeon-cf.c:543:
+					   bootbus FIFO doesn't fill up */

WARNING:BLOCK_COMMENT_STYLE: Block comments use * on subsequent lines
#637: FILE: drivers/ide/octeon-cf.c:553:
+					/* Every 16 writes do a read so the
+					   bootbus FIFO doesn't fill up */

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#637: FILE: drivers/ide/octeon-cf.c:553:
+					   bootbus FIFO doesn't fill up */

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#679: FILE: drivers/ide/octeon-cf.c:595:
+{
+

CHECK:CAMELCASE: Avoid CamelCase: <To>
#687: FILE: drivers/ide/octeon-cf.c:603:
+	int To, Tkr, Td;

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:CAMELCASE: Avoid CamelCase: <Tkr>
#687: FILE: drivers/ide/octeon-cf.c:603:
+	int To, Tkr, Td;

CHECK:CAMELCASE: Avoid CamelCase: <Td>
#687: FILE: drivers/ide/octeon-cf.c:603:
+	int To, Tkr, Td;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#689: FILE: drivers/ide/octeon-cf.c:605:
+	uint16_t word53_field_valid;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#690: FILE: drivers/ide/octeon-cf.c:606:
+	uint16_t word63_mwdma;

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u16' over 'uint16_t'
#691: FILE: drivers/ide/octeon-cf.c:607:
+	uint16_t word163_adv_timing_info;

CHECK:BRACES: Blank lines aren't necessary before a close brace '}'
#723: FILE: drivers/ide/octeon-cf.c:639:
+
+	}

WARNING:UNNECESSARY_BREAK: break is not useful after a return
#814: FILE: drivers/ide/octeon-cf.c:730:
+		return -1;
+		break;

WARNING:IF_0: Consider removing the code enclosed by this #if 0 and its #endif
#837: FILE: drivers/ide/octeon-cf.c:753:
+#if 0

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#839: FILE: drivers/ide/octeon-cf.c:755:
+	pr_info("ns to ticks (mult %d) of %d is: %d\n", TIM_MULT, 60,
+		     ns_to_tim_reg(60));

WARNING:SPLIT_STRING: quoted string split across lines
#841: FILE: drivers/ide/octeon-cf.c:757:
+	pr_info("oe_n: %d, oe_a: %d, dmack_s: %d, dmack_h: "
+		"%d, dmarq: %d, pause: %d\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PREFER_KERNEL_TYPES: Prefer kernel type 'u64' over 'uint64_t'
#861: FILE: drivers/ide/octeon-cf.c:777:
+	uint64_t dma_tim;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#870: FILE: drivers/ide/octeon-cf.c:786:
+		pr_info("%s: %s Serial %s (%u sectors, %u bytes/sector)\n",
+		       (cf->gd) ? cf->gd->disk_name : DEVICE_NAME,

CHECK:SPACING: No space is necessary after a cast
#872: FILE: drivers/ide/octeon-cf.c:788:
+		       drive_info.lba_capacity, (int) drive_info.sector_bytes);

CHECK:UNNECESSARY_PARENTHESES: Unnecessary parentheses around cf->dma_mode
#889: FILE: drivers/ide/octeon-cf.c:805:
+					     &(cf->dma_mode));

Parentheses are not required in the following cases:

  1. Function pointer uses::

      (foo->bar)();

    could be::

      foo->bar();

  2. Comparisons in if::

      if ((foo->bar) && (foo->baz))
      if ((foo == bar))

    could be::

      if (foo->bar && foo->baz)
      if (foo == bar)

  3. addressof/dereference single Lvalues::

      &(foo->bar)
      *(foo->bar)

    could be::

      &foo->bar
      *foo->bar

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#895: FILE: drivers/ide/octeon-cf.c:811:
+			pr_err("%s: Could not obtain irq %d.  DMA disabled.\n",
+				DEVICE_NAME, cf->irq);

CHECK:BRACES: Unbalanced braces around else statement
#936: FILE: drivers/ide/octeon-cf.c:852:
+	} else

CHECK:LINE_SPACING: Please don't use multiple blank lines
#943: FILE: drivers/ide/octeon-cf.c:859:
+
+

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#955: FILE: drivers/ide/octeon-cf.c:871:
+static unsigned int octeon_cf_transfer(struct cf_device *cf,
+				unsigned long lba_sector,

WARNING:SPLIT_STRING: quoted string split across lines
#961: FILE: drivers/ide/octeon-cf.c:877:
+		pr_err("%s: Attempt to access beyond end of device "
+		       "(%ld > %ld)\n", cf->gd->disk_name,

WARNING:LINE_SPACING: Missing a blank line after declarations
#995: FILE: drivers/ide/octeon-cf.c:911:
+	struct request *req = elv_next_request(q);
+	if (req) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#997: FILE: drivers/ide/octeon-cf.c:913:
+		struct cf_device *cf = req->rq_disk->private_data;
+		queue_work(cf->workqueue, &cf->cf_work);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1041: FILE: drivers/ide/octeon-cf.c:957:
+int octeon_cf_ioctl(struct block_device *bdev, fmode_t mode,
+		     unsigned int cmd, unsigned long arg)

WARNING:LINE_SPACING: Missing a blank line after declarations
#1046: FILE: drivers/ide/octeon-cf.c:962:
+	struct hd_geometry geo;
+	switch (cmd) {

CHECK:SPACING: No space is necessary after a cast
#1052: FILE: drivers/ide/octeon-cf.c:968:
+		if (copy_to_user((struct hd_geometry __user *) arg,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1060: FILE: drivers/ide/octeon-cf.c:976:
+
+

WARNING:CONST_STRUCT: struct block_device_operations should normally be const
#1061: FILE: drivers/ide/octeon-cf.c:977:
+static struct block_device_operations octeon_cf_ops = {

Using const is generally a good idea.  Checkpatch reads
a list of frequently used structs that are always or
almost always constant.

The existing structs list can be viewed from
`scripts/const_structs.checkpatch`.

See: https://lore.kernel.org/lkml/alpine.DEB.2.10.1608281509480.3321@hadrien/

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1066: FILE: drivers/ide/octeon-cf.c:982:
+static int __devinit octeon_cf_probe(struct platform_device *dev)

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cf->workqueue"
#1091: FILE: drivers/ide/octeon-cf.c:1007:
+	if (cf->workqueue == NULL) {

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cf->queue"
#1102: FILE: drivers/ide/octeon-cf.c:1018:
+	if (cf->queue == NULL) {

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1110: FILE: drivers/ide/octeon-cf.c:1026:
+	** than 8 blocks (8*512 bytes = 4K = page size) */

WARNING:BLOCK_COMMENT_STYLE: Block comments should align the * on each line
#1110: FILE: drivers/ide/octeon-cf.c:1026:
+	/* None of the following seem to make the request sizes larger
+	** than 8 blocks (8*512 bytes = 4K = page size) */

CHECK:SPACING: spaces preferred around that '*' (ctx:VxV)
#1112: FILE: drivers/ide/octeon-cf.c:1028:
+	blk_queue_max_segment_size(cf->queue, 128*1024);
 	                                         ^

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!cf->gd"
#1125: FILE: drivers/ide/octeon-cf.c:1041:
+	if (cf->gd == NULL) {

WARNING:LINE_SPACING: Missing a blank line after declarations
#1133: FILE: drivers/ide/octeon-cf.c:1049:
+		cvmx_mio_boot_reg_cfgx_t cfg;
+		cfg.u64 = cvmx_read_csr(CVMX_MIO_BOOT_REG_CFGX(region));

WARNING:TYPO_SPELLING: 'trys' may be misspelled - perhaps 'tries'?
#1152: FILE: drivers/ide/octeon-cf.c:1068:
+	 * Set a size to make sure the kernel trys to find
 	                                      ^^^^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000204424.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 0 errors, 30 warnings, 49 checks, 1120 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000204424.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
