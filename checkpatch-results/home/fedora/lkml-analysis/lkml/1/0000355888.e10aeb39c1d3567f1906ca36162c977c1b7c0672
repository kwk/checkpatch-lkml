WARNING:COMMIT_LOG_LONG_LINE: Possible unwrapped commit description (prefer a maximum 75 chars per line)
#30: 
generate the proper instructions. Define CONFIG_FAST_CPU_OPS so that core code

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#63: FILE: include/asm-x86/percpu_64.h:74:
+#define __xp(x) ((volatile unsigned long *)(x))

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#65: FILE: include/asm-x86/percpu_64.h:76:
+static inline unsigned long __cpu_read_gs(volatile void *ptr, int size)

WARNING:LINE_SPACING: Missing a blank line after declarations
#68: FILE: include/asm-x86/percpu_64.h:79:
+	unsigned long result;
+	switch (size) {

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#90: FILE: include/asm-x86/percpu_64.h:101:
+	BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#96: FILE: include/asm-x86/percpu_64.h:107:
+static inline void __cpu_write_gs(volatile void *ptr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#97: FILE: include/asm-x86/percpu_64.h:108:
+static inline void __cpu_write_gs(volatile void *ptr,
+				unsigned long data, int size)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#117: FILE: include/asm-x86/percpu_64.h:128:
+	BUG();

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#123: FILE: include/asm-x86/percpu_64.h:134:
+static inline void __cpu_add_gs(volatile void *ptr,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#144: FILE: include/asm-x86/percpu_64.h:155:
+	BUG();

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#150: FILE: include/asm-x86/percpu_64.h:161:
+static inline void __cpu_sub_gs(volatile void *ptr,

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#171: FILE: include/asm-x86/percpu_64.h:182:
+	BUG();

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#177: FILE: include/asm-x86/percpu_64.h:188:
+static inline void __cpu_xchg_gs(volatile void *ptr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#178: FILE: include/asm-x86/percpu_64.h:189:
+static inline void __cpu_xchg_gs(volatile void *ptr,
+				long data, int size)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#198: FILE: include/asm-x86/percpu_64.h:209:
+	BUG();

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#204: FILE: include/asm-x86/percpu_64.h:215:
+static inline void __cpu_inc_gs(volatile void *ptr, int size)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#224: FILE: include/asm-x86/percpu_64.h:235:
+	BUG();

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#230: FILE: include/asm-x86/percpu_64.h:241:
+static inline void __cpu_dec_gs(volatile void *ptr, int size)

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#250: FILE: include/asm-x86/percpu_64.h:261:
+	BUG();

WARNING:VOLATILE: Use of volatile is usually wrong: see Documentation/process/volatile-considered-harmful.rst
#256: FILE: include/asm-x86/percpu_64.h:267:
+static inline unsigned long __cmpxchg_local_gs(volatile void *ptr,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#257: FILE: include/asm-x86/percpu_64.h:268:
+static inline unsigned long __cmpxchg_local_gs(volatile void *ptr,
+			unsigned long old, unsigned long new, int size)

WARNING:LINE_SPACING: Missing a blank line after declarations
#260: FILE: include/asm-x86/percpu_64.h:271:
+	unsigned long prev;
+	switch (size) {

ERROR:SPACING: space required after that ',' (ctx:VxV)
#290: FILE: include/asm-x86/percpu_64.h:301:
+	((__typeof__(obj))__cmpxchg_local_gs(&(obj),(unsigned long)(o),\
 	                                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: space required after that ',' (ctx:VxV)
#291: FILE: include/asm-x86/percpu_64.h:302:
+					(unsigned long)(n),sizeof(obj)))
 					                  ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#294: FILE: include/asm-x86/percpu_64.h:305:
+#define CPU_WRITE(obj,val)	cpu_write_gs(obj, val)
                      ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#295: FILE: include/asm-x86/percpu_64.h:306:
+#define CPU_ADD(obj,val)	cpu_add_gs(obj, val)
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#296: FILE: include/asm-x86/percpu_64.h:307:
+#define CPU_SUB(obj,val)	cpu_sub_gs(obj, val)
                    ^

ERROR:SPACING: space required after that ',' (ctx:VxV)
#300: FILE: include/asm-x86/percpu_64.h:311:
+#define CPU_XCHG(obj,val)	cpu_xchg_gs(obj, val)
                     ^

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000355888.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 6 errors, 19 warnings, 3 checks, 276 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000355888.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
