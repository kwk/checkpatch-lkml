WARNING:TYPO_SPELLING: 'Allright' may be misspelled - perhaps 'All right'?
#41: 
transfer.  Allright, it's documented as callable multiple times
           ^^^^^^^^

Some words may have been misspelled.  Consider reviewing them.

WARNING:TYPO_SPELLING: 'accss' may be misspelled - perhaps 'access'?
#67: FILE: drivers/mmc/Kconfig:132:
+	  Some systems accss MMC/SD cards using the SPI protocol instead of
 	               ^^^^^

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#89: FILE: drivers/mmc/mmc_spi.c:1:
+/*

The source file is missing or has an improper SPDX identifier tag.
The Linux kernel requires the precise SPDX identifier in all source files,
and it is thoroughly documented in the kernel docs.

See: https://www.kernel.org/doc/html/latest/process/license-rules.html

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#110: FILE: drivers/mmc/mmc_spi.c:22:
+ * along with this program; if not, write to the Free Software$

Kernel maintainers reject new instances of the GPL boilerplate paragraph
directing people to write to the FSF for a copy of the GPL, since the
FSF has moved in the past and may do so again.
So do not write paragraphs about writing to the Free Software Foundation's
mailing address.

See: https://lore.kernel.org/lkml/20131006222342.GT19510@leaf/

ERROR:FSF_MAILING_ADDRESS: Do not include the paragraph about writing to the Free Software Foundation's mailing address from the sample GPL notice. The FSF has changed addresses in the past, and may do so again. Linux already includes a copy of the GPL.
#111: FILE: drivers/mmc/mmc_spi.c:23:
+ * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.$

CHECK:LINE_SPACING: Please don't use multiple blank lines
#130: FILE: drivers/mmc/mmc_spi.c:42:
+
+

Vertical space is wasted given the limited number of lines an
editor window can display when multiple blank lines are used.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:REPEATED_WORD: Possible repeated word: 'folk'
#139: FILE: drivers/mmc/mmc_spi.c:51:
+ *   imply switching to a different driver.  Not many folk folk use

CHECK:LINE_SPACING: Please don't use multiple blank lines
#150: FILE: drivers/mmc/mmc_spi.c:62:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#195: FILE: drivers/mmc/mmc_spi.c:107:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#203: FILE: drivers/mmc/mmc_spi.c:115:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#209: FILE: drivers/mmc/mmc_spi.c:121:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#229: FILE: drivers/mmc/mmc_spi.c:141:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#275: FILE: drivers/mmc/mmc_spi.c:187:
+static unsigned debug = 1;

WARNING:LINE_SPACING: Missing a blank line after declarations
#286: FILE: drivers/mmc/mmc_spi.c:198:
+	int status = spi_sync(host->spi, &host->readback);
+	if (status < 0)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#292: FILE: drivers/mmc/mmc_spi.c:204:
+mmc_spi_readbytes(struct mmc_spi_host *host, void *bytes, unsigned len)

CHECK:LINE_SPACING: Please don't use multiple blank lines
#308: FILE: drivers/mmc/mmc_spi.c:220:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#333: FILE: drivers/mmc/mmc_spi.c:245:
+mmc_spi_scanbyte(struct mmc_spi_host *host, int (*fail)(u8), unsigned delay)

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#336: FILE: drivers/mmc/mmc_spi.c:248:
+	unsigned	wait;

CHECK:BRACES: braces {} should be used on all arms of this statement
#456: FILE: drivers/mmc/mmc_spi.c:368:
+	if (cmd->opcode == MMC_STOP_TRANSMISSION) {
[...]
+	} else
[...]

The placement of braces is stylistically incorrect.
The preferred way is to put the opening brace last on the line,
and put the closing brace first::

  if (x is true) {
          we do y
  }

This applies for all non-functional blocks.
However, there is one special case, namely functions: they have the
opening brace at the beginning of the next line, thus::

  int function(int x)
  {
          body of function
  }

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#placing-braces-and-spaces

CHECK:SPACING: No space is necessary after a cast
#467: FILE: drivers/mmc/mmc_spi.c:379:
+		(void) mmc_spi_readbytes(host, host->command.buf,

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

WARNING:SIZEOF_PARENTHESIS: sizeof host->command.buf should be sizeof(host->command.buf)
#468: FILE: drivers/mmc/mmc_spi.c:380:
+					 sizeof host->command.buf);

CHECK:SPACING: No space is necessary after a cast
#469: FILE: drivers/mmc/mmc_spi.c:381:
+		(void) mmc_spi_readbytes(host, host->command.buf,

WARNING:SIZEOF_PARENTHESIS: sizeof host->command.buf should be sizeof(host->command.buf)
#470: FILE: drivers/mmc/mmc_spi.c:382:
+					 sizeof host->command.buf);

CHECK:BRACES: Unbalanced braces around else statement
#472: FILE: drivers/mmc/mmc_spi.c:384:
+	} else

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#486: FILE: drivers/mmc/mmc_spi.c:398:
+		dev_err(&host->spi->dev, "INVALID RESPONSE, %02x\n",
+					host->response[0]);

CHECK:BRACES: Blank lines aren't necessary after an open brace '{'
#495: FILE: drivers/mmc/mmc_spi.c:407:
+	switch (host->rsp_type) {
+

CHECK:SPACING: No space is necessary after a cast
#502: FILE: drivers/mmc/mmc_spi.c:414:
+		(void) mmc_spi_scanbyte(host, mmc_spi_busy, WRITE_TIMEOUT);

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#503: FILE: drivers/mmc/mmc_spi.c:415:
+		/* FALLTHROUGH */

Use the `fallthrough;` pseudo keyword instead of
`/* fallthrough */` like comments.

CHECK:SPACING: No space is necessary after a cast
#520: FILE: drivers/mmc/mmc_spi.c:432:
+		(void) mmc_spi_readbytes(host, &cmd->resp[0], 4);

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#551: FILE: drivers/mmc/mmc_spi.c:463:
+			if (cmd->error == MMC_ERR_NONE
+					&& cmd->opcode == MMC_APP_CMD)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#580: FILE: drivers/mmc/mmc_spi.c:492:
+		if (host->rsp_type != MMC_RSP_R3
+				&& cmd->error == MMC_ERR_NONE

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#581: FILE: drivers/mmc/mmc_spi.c:493:
+				&& cmd->error == MMC_ERR_NONE
+				&& !( (cmd->opcode == MMC_SEND_OP_COND

ERROR:SPACING: space prohibited after that open parenthesis '('
#581: FILE: drivers/mmc/mmc_spi.c:493:
+				&& !( (cmd->opcode == MMC_SEND_OP_COND

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#582: FILE: drivers/mmc/mmc_spi.c:494:
+				&& !( (cmd->opcode == MMC_SEND_OP_COND
+					&& !host->app_cmd)

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#583: FILE: drivers/mmc/mmc_spi.c:495:
+					&& !host->app_cmd)
+				   || (cmd->opcode == SD_APP_OP_COND

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#584: FILE: drivers/mmc/mmc_spi.c:496:
+				   || (cmd->opcode == SD_APP_OP_COND
+					&& host->app_cmd))

CHECK:BRACES: braces {} should be used on all arms of this statement
#593: FILE: drivers/mmc/mmc_spi.c:505:
+		if (cmd->opcode == MMC_GO_IDLE_STATE) {
[...]
+		} else
[...]

CHECK:LOGICAL_CONTINUATIONS: Logical continuations should be on the previous line
#595: FILE: drivers/mmc/mmc_spi.c:507:
+			if (!(host->response[0] & SPI_MMC_R1_IDLE)
+					&& cmd->error == MMC_ERR_NONE) {

CHECK:BRACES: Unbalanced braces around else statement
#599: FILE: drivers/mmc/mmc_spi.c:511:
+		} else

ERROR:SPACING: space prohibited after that open square bracket '['
#609: FILE: drivers/mmc/mmc_spi.c:521:
+	[ 0] = MMC_RSP_R1,

ERROR:SPACING: space prohibited after that open square bracket '['
#610: FILE: drivers/mmc/mmc_spi.c:522:
+	[ 1] = MMC_RSP_R1,

ERROR:SPACING: space prohibited after that open square bracket '['
#611: FILE: drivers/mmc/mmc_spi.c:523:
+	[ 6] = MMC_RSP_R1,

ERROR:SPACING: space prohibited after that open square bracket '['
#612: FILE: drivers/mmc/mmc_spi.c:524:
+	[ 9] = MMC_RSP_R1,

CHECK:LINE_SPACING: Please don't use multiple blank lines
#656: FILE: drivers/mmc/mmc_spi.c:568:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#671: FILE: drivers/mmc/mmc_spi.c:583:
+	unsigned		opcode;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#672: FILE: drivers/mmc/mmc_spi.c:584:
+	unsigned		opcond_retries = 25;

WARNING:PREFER_FALLTHROUGH: Prefer 'fallthrough;' over fallthrough comment
#731: FILE: drivers/mmc/mmc_spi.c:643:
+		/* FALLTHROUGH */

CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "mrq->stop"
#757: FILE: drivers/mmc/mmc_spi.c:669:
+		if (mrq->stop != NULL)

Comparisons to NULL in the form (foo == NULL) or (foo != NULL)
are better written as (!foo) and (foo).

CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
#766: FILE: drivers/mmc/mmc_spi.c:678:
+mmc_spi_setup_message(

WARNING:SIZEOF_PARENTHESIS: sizeof *t should be sizeof(*t)
#783: FILE: drivers/mmc/mmc_spi.c:695:
+		memset(t, 0, sizeof *t);

WARNING:SIZEOF_PARENTHESIS: sizeof *t should be sizeof(*t)
#794: FILE: drivers/mmc/mmc_spi.c:706:
+	memset(t, 0, sizeof *t);

WARNING:SIZEOF_PARENTHESIS: sizeof *t should be sizeof(*t)
#798: FILE: drivers/mmc/mmc_spi.c:710:
+	memset(t, 0, sizeof *t);

WARNING:SIZEOF_PARENTHESIS: sizeof *t should be sizeof(*t)
#803: FILE: drivers/mmc/mmc_spi.c:715:
+	memset(t, 0, sizeof *t);

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#844: FILE: drivers/mmc/mmc_spi.c:756:
+			t->tx_buf = host->t.tx_buf = &host->ones;

Multiple assignments on a single line makes the code unnecessarily
complicated. So on a single line assign value to a single variable
only, this makes the code more readable and helps avoid typos.

CHECK:MULTIPLE_ASSIGNMENTS: multiple assignments should be avoided
#846: FILE: drivers/mmc/mmc_spi.c:758:
+				t->tx_dma = host->t.tx_dma = host->dma

CHECK:LINE_SPACING: Please don't use multiple blank lines
#852: FILE: drivers/mmc/mmc_spi.c:764:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#867: FILE: drivers/mmc/mmc_spi.c:779:
+
+

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#877: FILE: drivers/mmc/mmc_spi.c:789:
+	unsigned		n_sg;

WARNING:UNSPECIFIED_INT: Prefer 'unsigned int' to bare use of 'unsigned'
#909: FILE: drivers/mmc/mmc_spi.c:821:
+		unsigned		length = sg->length;

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#922: FILE: drivers/mmc/mmc_spi.c:834:
+			dma_sync_single_for_device(host->dma_dev,
+				host->dma, sizeof *host, direction);

WARNING:SIZEOF_PARENTHESIS: sizeof *host should be sizeof(*host)
#922: FILE: drivers/mmc/mmc_spi.c:834:
+				host->dma, sizeof *host, direction);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#992: FILE: drivers/mmc/mmc_spi.c:904:
+				response = mmc_spi_scanbyte(host, mmc_spi_busy,
+							WRITE_TIMEOUT);

WARNING:BLOCK_COMMENT_STYLE: Block comments use a trailing */ on a separate line
#1005: FILE: drivers/mmc/mmc_spi.c:917:
+					 * in the block we read.  */

The comment style is incorrect.  The preferred style for multi-
line comments is::

  /*
  * This is the preferred style
  * for multi line comments.
  */

The networking comment style is a bit different, with the first line
not empty like the former::

  /* This is the preferred comment style
  * for files in net/ and drivers/net/
  */

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#commenting

WARNING:SPLIT_STRING: quoted string split across lines
#1008: FILE: drivers/mmc/mmc_spi.c:920:
+						"too-early card "
+						"response %02x %02x\n",

Quoted strings that appear as messages in userspace and can be
grepped, should not be split across multiple lines.

See: https://lore.kernel.org/lkml/20120203052727.GA15035@leaf/

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1024: FILE: drivers/mmc/mmc_spi.c:936:
+					dma_sync_single_for_cpu(host->dma_dev,
+						host->dma, sizeof *host,

WARNING:SIZEOF_PARENTHESIS: sizeof *host should be sizeof(*host)
#1024: FILE: drivers/mmc/mmc_spi.c:936:
+						host->dma, sizeof *host,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1060: FILE: drivers/mmc/mmc_spi.c:972:
+			dma_unmap_page(dma_dev, dma_addr,
+					PAGE_SIZE, direction);

CHECK:CAMELCASE: Avoid CamelCase: <mmc_spi_send_cXd>
#1139: FILE: drivers/mmc/mmc_spi.c:1051:
+mmc_spi_send_cXd(struct mmc_spi_host *host, struct mmc_request *mrq)

Avoid CamelCase Identifiers.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#naming

CHECK:BRACES: braces {} should be used on all arms of this statement
#1164: FILE: drivers/mmc/mmc_spi.c:1076:
+		if (status < 0)
[...]
+		else {
[...]

CHECK:BRACES: Unbalanced braces around else statement
#1166: FILE: drivers/mmc/mmc_spi.c:1078:
+		else {

WARNING:QUOTED_WHITESPACE_BEFORE_NEWLINE: unnecessary whitespace before a quoted newline
#1186: FILE: drivers/mmc/mmc_spi.c:1098:
+			"mmc_spi: read cXd, %d \n", status);

CHECK:SPACING: No space is necessary after a cast
#1205: FILE: drivers/mmc/mmc_spi.c:1117:
+	(void) mmc_spi_scanbyte(host, mmc_spi_busy, WRITE_TIMEOUT);

CHECK:SPACING: No space is necessary after a cast
#1206: FILE: drivers/mmc/mmc_spi.c:1118:
+	(void) mmc_spi_readbytes(host, host->command.buf,

WARNING:SIZEOF_PARENTHESIS: sizeof host->command.buf should be sizeof(host->command.buf)
#1207: FILE: drivers/mmc/mmc_spi.c:1119:
+				 sizeof host->command.buf);

CHECK:SPACING: No space is necessary after a cast
#1228: FILE: drivers/mmc/mmc_spi.c:1140:
+	(void) mmc_spi_readbytes(host, host->command.buf,

WARNING:SIZEOF_PARENTHESIS: sizeof host->command.buf should be sizeof(host->command.buf)
#1229: FILE: drivers/mmc/mmc_spi.c:1141:
+				 sizeof host->command.buf);

CHECK:SPACING: No space is necessary after a cast
#1230: FILE: drivers/mmc/mmc_spi.c:1142:
+	(void) mmc_spi_readbytes(host, host->command.buf,

WARNING:SIZEOF_PARENTHESIS: sizeof host->command.buf should be sizeof(host->command.buf)
#1231: FILE: drivers/mmc/mmc_spi.c:1143:
+				 sizeof host->command.buf);

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1237: FILE: drivers/mmc/mmc_spi.c:1149:
+		dev_err(&host->spi->dev,
+			 "failed inverting the active chip-select level\n");

WARNING:SPLIT_STRING: quoted string split across lines
#1261: FILE: drivers/mmc/mmc_spi.c:1173:
+				? (" or because the active chip-select"
+				   " level can't be inverted") : "");

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1365: FILE: drivers/mmc/mmc_spi.c:1277:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1398: FILE: drivers/mmc/mmc_spi.c:1310:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1405: FILE: drivers/mmc/mmc_spi.c:1317:
+
+

WARNING:HOTPLUG_SECTION: Using __devinit is unnecessary
#1421: FILE: drivers/mmc/mmc_spi.c:1333:
+static int __devinit mmc_spi_probe(struct spi_device *spi)

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1428: FILE: drivers/mmc/mmc_spi.c:1340:
+	spi->mode |= (SPI_CPOL|SPI_CPHA);
 	                      ^

WARNING:SIZEOF_PARENTHESIS: sizeof *host should be sizeof(*host)
#1450: FILE: drivers/mmc/mmc_spi.c:1362:
+	mmc = mmc_alloc_host(sizeof *host

CHECK:SPACING: spaces preferred around that '|' (ctx:VxV)
#1483: FILE: drivers/mmc/mmc_spi.c:1395:
+			: MMC_VDD_32_33|MMC_VDD_33_34;
 			               ^

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1498: FILE: drivers/mmc/mmc_spi.c:1410:
+		host->dma = dma_map_single(host->dma_dev, host,
+				sizeof *host, DMA_BIDIRECTIONAL);

WARNING:SIZEOF_PARENTHESIS: sizeof *host should be sizeof(*host)
#1498: FILE: drivers/mmc/mmc_spi.c:1410:
+				sizeof *host, DMA_BIDIRECTIONAL);

WARNING:SPACING: space prohibited between function name and open parenthesis '('
#1528: FILE: drivers/mmc/mmc_spi.c:1440:
+	mmc_remove_host (mmc);

WARNING:SIZEOF_PARENTHESIS: sizeof *host should be sizeof(*host)
#1531: FILE: drivers/mmc/mmc_spi.c:1443:
+				 sizeof *host, DMA_BIDIRECTIONAL);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1538: FILE: drivers/mmc/mmc_spi.c:1450:
+
+

WARNING:HOTPLUG_SECTION: Using __devexit is unnecessary
#1539: FILE: drivers/mmc/mmc_spi.c:1451:
+static int __devexit mmc_spi_remove(struct spi_device *spi)

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1552: FILE: drivers/mmc/mmc_spi.c:1464:
+			dma_unmap_single(host->dma_dev, host->dma,
+				sizeof *host, DMA_BIDIRECTIONAL);

WARNING:SIZEOF_PARENTHESIS: sizeof *host should be sizeof(*host)
#1552: FILE: drivers/mmc/mmc_spi.c:1464:
+				sizeof *host, DMA_BIDIRECTIONAL);

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1560: FILE: drivers/mmc/mmc_spi.c:1472:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1571: FILE: drivers/mmc/mmc_spi.c:1483:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1578: FILE: drivers/mmc/mmc_spi.c:1490:
+
+

CHECK:LINE_SPACING: Please don't use multiple blank lines
#1585: FILE: drivers/mmc/mmc_spi.c:1497:
+
+

WARNING:SPDX_LICENSE_TAG: Missing or malformed SPDX-License-Identifier tag in line 1
#1593: FILE: include/linux/spi/mmc_spi.h:1:
+#ifndef __LINUX_SPI_MMC_SPI_H

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#1610: FILE: include/linux/spi/mmc_spi.h:18:
+	int (*init)(struct device *,

This warning is emitted due to any of the following reasons:

  1. Arguments for the function declaration do not follow
     the identifier name.  Example::

       void foo
       (int bar, int baz)

     This should be corrected to::

       void foo(int bar, int baz)

  2. Some arguments for the function definition do not
     have an identifier name.  Example::

       void foo(int)

     All arguments should have identifier names.

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1610: FILE: include/linux/spi/mmc_spi.h:18:
+	int (*init)(struct device *,

CHECK:PARENTHESIS_ALIGNMENT: Alignment should match open parenthesis
#1611: FILE: include/linux/spi/mmc_spi.h:19:
+	int (*init)(struct device *,
+		irqreturn_t (*)(int, void *),

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#1613: FILE: include/linux/spi/mmc_spi.h:21:
+	void (*exit)(struct device *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
#1613: FILE: include/linux/spi/mmc_spi.h:21:
+	void (*exit)(struct device *, void *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#1619: FILE: include/linux/spi/mmc_spi.h:27:
+	int (*get_ro)(struct device *);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'struct device *' should also have an identifier name
#1623: FILE: include/linux/spi/mmc_spi.h:31:
+	void (*setpower)(struct device *, unsigned int);

WARNING:FUNCTION_ARGUMENTS: function definition argument 'unsigned int' should also have an identifier name
#1623: FILE: include/linux/spi/mmc_spi.h:31:
+	void (*setpower)(struct device *, unsigned int);

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000474320.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 7 errors, 45 warnings, 56 checks, 1556 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000474320.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
