ERROR:CODE_INDENT: code indent should use tabs where possible
#62: FILE: arch/x86_64/kernel/smpboot.c:623:
+ ^Iload_rsp0(&per_cpu(init_tss,cpu), &c_idle.idle->thread);$

Code indent should use tabs instead of spaces.
Outside of comments, documentation and Kconfig,
spaces are never used for indentation.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#indentation

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#62: FILE: arch/x86_64/kernel/smpboot.c:623:
+ ^Iload_rsp0(&per_cpu(init_tss,cpu), &c_idle.idle->thread);$

WARNING:LEADING_SPACE: please, no spaces at the start of a line
#62: FILE: arch/x86_64/kernel/smpboot.c:623:
+ ^Iload_rsp0(&per_cpu(init_tss,cpu), &c_idle.idle->thread);$

ERROR:SPACING: space required after that ',' (ctx:VxV)
#62: FILE: arch/x86_64/kernel/smpboot.c:623:
+ 	load_rsp0(&per_cpu(init_tss,cpu), &c_idle.idle->thread);
  	                           ^

Whitespace style used in the kernel sources is described in kernel docs.

See: https://www.kernel.org/doc/html/latest/process/coding-style.html#spaces

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#100: FILE: include/asm-x86_64/processor.h:279:
+		asm("movq %%db0, %0" :"=r" (val)); break;
 		                     ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#102: FILE: include/asm-x86_64/processor.h:281:
+		asm("movq %%db1, %0" :"=r" (val)); break;
 		                     ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#104: FILE: include/asm-x86_64/processor.h:283:
+		asm("movq %%db2, %0" :"=r" (val)); break;
 		                     ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#106: FILE: include/asm-x86_64/processor.h:285:
+		asm("movq %%db3, %0" :"=r" (val)); break;
 		                     ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#108: FILE: include/asm-x86_64/processor.h:287:
+		asm("movq %%db6, %0" :"=r" (val)); break;
 		                     ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#110: FILE: include/asm-x86_64/processor.h:289:
+		asm("movq %%db7, %0" :"=r" (val)); break;
 		                     ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#122: FILE: include/asm-x86_64/processor.h:301:
+		asm("movq %0,%%db0"	: /* no output */ :"r" (value));
 		                   	                  ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#125: FILE: include/asm-x86_64/processor.h:304:
+		asm("movq %0,%%db1"	: /* no output */ :"r" (value));
 		                   	                  ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#128: FILE: include/asm-x86_64/processor.h:307:
+		asm("movq %0,%%db2"	: /* no output */ :"r" (value));
 		                   	                  ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#131: FILE: include/asm-x86_64/processor.h:310:
+		asm("movq %0,%%db3"	: /* no output */ :"r" (value));
 		                   	                  ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#134: FILE: include/asm-x86_64/processor.h:313:
+		asm("movq %0,%%db6"	: /* no output */ :"r" (value));
 		                   	                  ^

ERROR:SPACING: spaces required around that ':' (ctx:WxV)
#137: FILE: include/asm-x86_64/processor.h:316:
+		asm("movq %0,%%db7"	: /* no output */ :"r" (value));
 		                   	                  ^

WARNING:AVOID_BUG: Avoid crashing the kernel - try using WARN_ON & recovery code rather than BUG() or BUG_ON()
#140: FILE: include/asm-x86_64/processor.h:319:
+		BUG();

BUG() or BUG_ON() should be avoided totally.
Use WARN() and WARN_ON() instead, and handle the "impossible"
error condition as gracefully as possible.

See: https://www.kernel.org/doc/html/latest/process/deprecated.html#bug-and-bug-on

WARNING:SPACE_BEFORE_TAB: please, no space before tabs
#148: FILE: include/asm-x86_64/processor.h:327:
+#define load_rsp0 ^I^Inative_load_rsp0$

ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
#150: FILE: include/asm-x86_64/processor.h:329:
+#define get_debugreg(var, reg)	(var) = native_get_debugreg(reg)

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000394688.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 total: 15 errors, 4 warnings, 0 checks, 99 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

NOTE: Whitespace errors detected.
      You may wish to use scripts/cleanpatch or scripts/cleanfile

./tmp.JOzjvdpBcb//home/fedora/lkml-analysis/lkml/1/patch.offset.0000394688.commit.e10aeb39c1d3567f1906ca36162c977c1b7c0672 has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
